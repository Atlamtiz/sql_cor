Error: 第 1 个样本有 0 个SQL。
SELECT m.movie_title, m.movie_release_year, m.director_name FROM movies m WHERE m.movie_popularity = (SELECT MAX(movie_popularity) FROM movies);
SELECT movie_title, movie_release_year FROM movies WHERE movie_title = (SELECT MAX(LENGTH(movie_title)) FROM movies);
SELECT movie_title FROM movies WHERE movie_id = (   SELECT movie_id   FROM ratings   GROUP BY movie_id   ORDER BY SUM(rating_score) DESC   LIMIT 1 );
SELECT AVG(movie_popularity)  FROM movies  WHERE director_name = 'Stanley Kubrick';
SELECT AVG(rating_score)  FROM ratings  WHERE movie_id IN (SELECT movie_id FROM movies WHERE movie_title = 'When Will I Be Loved');
SELECT lu.user_avatar_image_url, MAX(r.rating_date_utc) AS latest_rating_date FROM ratings_users ru JOIN lists_users lu ON ru.user_id = lu.user_id JOIN ratings r ON ru.user_id = r.user_id WHERE ru.user_id = 41579158 GROUP BY lu.user_avatar_image_url;
SELECT DIVIDE(SUM(ratings_users.user_subscriber = 1), SUM(rating_score)) as percent FROM ratings JOIN ratings_users ON ratings.user_id = ratings_users.user_id WHERE ratings_users.user_subscriber = 1;
Error: 第 9 个样本有 0 个SQL。
SELECT lu.user_id, lu.user_trialist, lu.user_subscriber, lu.user_avatar_image_url, lu.user_cover_image_url, lu.user_eligible_for_trial, lu.user_has_payment_method FROM lists_users lu JOIN ratings r ON lu.user_id = r.user_id JOIN movies m ON r.movie_id = m.movie_id WHERE m.movie_title = 'Love Will Tear Us Apart' AND r.rating_score = 1;
SELECT m.movie_title, m.movie_popularity FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE r.rating_score = 5 ORDER BY m.movie_popularity DESC;
SELECT m.movie_title FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE r.rating_timestamp_utc LIKE '%2020%' AND r.rating_score >= 4;
SELECT m.movie_title, r.user_id, r.rating_score, r.critic_comments FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE r.critic IS NOT NULL;
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN rating_score = 5 THEN 1 ELSE 0 END), COUNT(*)), 100) AS highest_score_percentage FROM    ratings WHERE    movie_id IN (SELECT movie_id FROM movies WHERE movie_title = 'Welcome to the Dollhouse')
SELECT DIVIDE(SUM(CASE WHEN movies.movie_release_year = 2021 THEN 1 ELSE 0 END), COUNT(ratings.rating_id)) as percent;
Error: 第 16 个样本有 0 个SQL。
SELECT list_title FROM lists WHERE list_followers = (SELECT MAX(list_followers) FROM lists);
Error: 第 18 个样本有 0 个SQL。
SELECT list_id FROM lists WHERE user_id = 85981819 ORDER BY list_creation_timestamp_utc ASC LIMIT 1;
SELECT COUNT(*)  FROM ratings r  JOIN ratings_users ru ON r.user_id = ru.user_id  WHERE r.movie_id = 1269 AND ru.user_has_payment_method = 1 AND ru.user_eligible_for_trial = 1 AND r.rating_score <= 2;
SELECT m.movie_title, m.movie_popularity FROM movies m WHERE m.movie_release_year = 2021 AND m.director_name = 'Steven Spielberg';
Error: 第 22 个样本有 0 个SQL。
SELECT lu.user_id FROM lists_users lu WHERE lu.user_subscriber = 1 AND EXTRACT(YEAR FROM lu.list_creation_date_utc) =    (SELECT EXTRACT(YEAR FROM lu.list_creation_date_utc)     FROM lists_users lu2     WHERE lu2.user_id = lu.user_id     ORDER BY lu2.list_creation_date_utc     LIMIT 1)  AND EXTRACT(YEAR FROM lu.list_creation_date_utc) + 9 =    (SELECT EXTRACT(YEAR FROM lu.list_creation_date_utc)     FROM lists_users lu2     WHERE lu2.user_id = lu.user_id     ORDER BY lu2.list_creation_date_utc     LIMIT 1 OFFSET 10);
SELECT COUNT(*)  FROM ratings  WHERE movie_id IN (SELECT movie_id FROM movies WHERE movie_title = 'Pavee Lackeen: The Traveller Girl')  AND rating_score = 4;
SELECT    l.list_followers,    lu.user_eligible_for_trial FROM    lists l   JOIN lists_users lu ON l.list_id = lu.list_id WHERE    l.list_title = 'World War 2 and Kids' AND lu.list_creation_date_utc = l.list_creation_timestamp_utc AND lu.user_eligible_for_trial = 1;
SELECT m.movie_release_year FROM movies m JOIN directors d ON m.director_id = d.director_id WHERE d.director_name = 'Quentin Tarantino' ORDER BY m.movie_release_year ASC LIMIT 1, 1  SELECT r.user_id FROM ratings r WHERE r.movie_id IN (   SELECT m.movie_id   FROM movies m   JOIN directors d ON m.director_id = d.director_id   WHERE d.director_name = 'Quentin Tarantino'   ORDER BY m.movie_release_year ASC   LIMIT 1, 1 ) AND r.rating_score = 4;
SELECT director_url FROM movies WHERE movie_id IN (   SELECT movie_id   FROM ratings   WHERE user_id = 2452551 AND critic_likes = 39 )
SELECT AVG(r.rating_score) AS average_rating_score, m.director_name FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE m.movie_title = 'When Will I Be Loved';
SELECT COUNT(m.movie_id)  FROM movies m  JOIN lists l ON m.movie_id = l.list_movie_number  JOIN lists_users lu ON l.list_id = lu.list_id  WHERE lu.user_has_payment_method = 1  GROUP BY lu.list_id  ORDER BY COUNT(m.movie_id) DESC  LIMIT 1;
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE r.critic_likes = (     SELECT MAX(critic_likes)     FROM ratings );
SELECT    m.movie_title,    m.movie_popularity,    MIN(r.rating_timestamp_utc) AS first_rating_date FROM    movies m   JOIN ratings r ON m.movie_id = r.movie_id WHERE    m.movie_release_year BETWEEN 1920 AND 1929   AND r.rating_score = 1   AND r.user_has_payment_method = 1 GROUP BY    m.movie_title,    m.movie_popularity ORDER BY    m.movie_popularity DESC LIMIT 1;
SELECT      m.movie_title,      m.movie_popularity,      MAX(r.critic_likes) AS max_likes FROM      movies m JOIN      ratings r ON m.movie_id = r.movie_id JOIN      directors d ON m.director_id = d.director_id WHERE      d.director_name = 'Francis Ford Coppola' AND      m.movie_popularity > 1000 GROUP BY      m.movie_title, m.movie_popularity;
SELECT user_avatar_image_url FROM ratings WHERE movie_id = 1103 AND rating_score = 5 AND rating_date_utc = '2020-04-19';
SELECT l.list_id, l.list_followers, lu.user_subscriber FROM lists l JOIN lists_users lu ON l.list_id = lu.list_id WHERE l.user_id = 4208563 ORDER BY l.list_followers DESC LIMIT 1;
SELECT    movie_release_year,    movie_title FROM    movies WHERE    movie_release_year = (     SELECT        MIN(movie_release_year)     FROM        movies   )   AND movie_id = (     SELECT        movie_id     FROM        movies     WHERE        movie_release_year = (         SELECT            MIN(movie_release_year)         FROM            movies       )     ORDER BY        (SELECT           COUNT(*)        FROM           ratings        WHERE           rating_score = '1'           AND movie_id = movies.movie_id       ) DESC     LIMIT 1   );
SELECT COUNT(DISTINCT r.user_id) FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE m.movie_release_year = 1924 AND m.director_name = 'Erich von Stroheim' AND r.user_has_payment_method = 1 AND r.rating_score = 5;
SELECT AVG(l.list_movie_number) AS average_movies FROM lists l WHERE l.user_id = 8516503;
SELECT r.rating_url FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE m.movie_title = 'The Magnificent Ambersons' AND r.rating_score <= 2;
SELECT      user_id,      COUNT(*) AS follower_count FROM      lists_users WHERE      list_creation_date_utc BETWEEN '2016-02-01' AND '2016-02-29'      AND user_eligible_for_trial = 1 GROUP BY      user_id ORDER BY      follower_count DESC LIMIT 1;
SELECT ratings.rating_url FROM ratings JOIN movies ON ratings.movie_id = movies.movie_id WHERE ratings.user_id = 22030372 AND ratings.rating_score = (     SELECT MAX(rating_score)      FROM ratings      WHERE movie_id IN (         SELECT movie_id          FROM movies          WHERE movie_title = 'Riff-Raff'     ) );
SELECT    director_name,    MAX(movie_title) AS highest_rated_movie FROM    movies  WHERE    movie_release_year BETWEEN 1960 AND 1985    AND director_id IN (     SELECT        director_id      FROM        movies      GROUP BY        director_id      HAVING        COUNT(movie_id) > 10   )   AND EXISTS (     SELECT 1      FROM        ratings      WHERE        movie_id = movies.movie_id        AND rating_score = 5        AND rating_timestamp_utc = (         SELECT MAX(rating_timestamp_utc)          FROM            ratings          WHERE            movie_id = movies.movie_id            AND rating_score = 5       )   ) GROUP BY    director_name
SELECT COUNT(*) FROM ratings WHERE movie_id IN (   SELECT movie_id   FROM movies   WHERE movie_title = 'The South' ) AND user_trialist = 0 AND rating_score < 2;
SELECT critic_likes FROM ratings WHERE movie_id IN (   SELECT movie_id   FROM movies   WHERE movie_title = 'Apocalypse Now' ) AND rating_score = 5;
SELECT AVG(r.rating_score) AS average_rating, m.director_name FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE m.movie_title = 'The Crowd';
SELECT    m.movie_release_year,   ru.user_id FROM    movies m   JOIN (     SELECT        director_id,        COUNT(*) as num_movies     FROM        movies     GROUP BY        director_id     ORDER BY        num_movies DESC     LIMIT 1   ) d ON m.director_id = d.director_id   JOIN (     SELECT        user_id,        COUNT(critic_comments) as num_comments     FROM        ratings     GROUP BY        user_id     ORDER BY        num_comments DESC     LIMIT 1   ) ru ON ru.user_id = (SELECT user_id FROM ratings WHERE critic = 1 LIMIT 1)
SELECT m.movie_title, MAX(r.rating_score) AS highest_rating_score FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE m.movie_popularity BETWEEN 400 AND 500 GROUP BY m.movie_title;
SELECT rating_url FROM ratings WHERE movie_id IN (   SELECT movie_id   FROM movies   WHERE movie_title = 'The Vertical Ray of the Sun' ) AND user_id = 45579900 AND critic_likes = 20;
SELECT      movie_title,      AVG(movie_popularity) AS avg_popularity,      COUNT(CASE WHEN rating_score = 5 THEN 1 ELSE NULL END) AS num_5_ratings FROM      movies WHERE      director_name = 'Christopher Nolan' GROUP BY      movie_title ORDER BY      num_5_ratings DESC;
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id JOIN ratings_users ru ON r.user_id = ru.user_id JOIN lists_users lu ON ru.user_id = lu.user_id JOIN lists l ON lu.list_id = l.list_id WHERE l.list_title = '100 Greatest Living American Filmmakers' AND r.rating_timestamp_utc BETWEEN '2013-01-01' AND '2013-12-31' GROUP BY m.movie_title ORDER BY m.movie_title;
SELECT AVG(rating_score) AS average_rating, movie_release_year FROM movies JOIN ratings ON movies.movie_id = ratings.movie_id WHERE movie_title = 'Pavee Lackeen: The Traveller Girl';
SELECT COUNT(*) FROM lists WHERE list_update_timestamp_utc > (list_creation_timestamp_utc + 315360000);
SELECT list_description FROM lists WHERE list_title = 'Short and pretty damn sweet';
Error: 第 53 个样本有 0 个SQL。
SELECT COUNT(*) FROM lists WHERE list_update_timestamp_utc > '2010/1/1' AND list_followers > 200;
Error: 第 55 个样本有 0 个SQL。
SELECT movie_release_year FROM movies WHERE movie_title = 'La Antena';
SELECT movie_url FROM movies WHERE movie_title = 'La Antena';
SELECT movie_title, movie_popularity FROM movies WHERE movie_title IN ('The General', 'Il grido') ORDER BY movie_popularity DESC LIMIT 1;
Error: 第 59 个样本有 0 个SQL。
Error: 第 60 个样本有 0 个SQL。
Error: 第 61 个样本有 0 个SQL。
Error: 第 62 个样本有 0 个SQL。
Error: 第 63 个样本有 0 个SQL。
Error: 第 64 个样本有 0 个SQL。
Error: 第 65 个样本有 0 个SQL。
Error: 第 66 个样本有 0 个SQL。
Error: 第 67 个样本有 0 个SQL。
Error: 第 68 个样本有 0 个SQL。
Error: 第 69 个样本有 0 个SQL。
Error: 第 70 个样本有 0 个SQL。
Error: 第 71 个样本有 0 个SQL。
Error: 第 72 个样本有 0 个SQL。
SELECT * FROM ratings_users WHERE user_id = 39115684 AND user_trialist = 1;
SELECT COUNT(*) FROM ratings_users WHERE user_trialist = 1 AND user_id IN (   SELECT user_id   FROM ratings   WHERE movie_id IN (     SELECT movie_id     FROM movies     WHERE movie_title = 'A Way of Life'   ) );
SELECT rating_url FROM ratings WHERE movie_id IN (   SELECT movie_id   FROM movies   WHERE movie_title = 'A Way of Life' ) AND critic IS NOT NULL;
SELECT COUNT(DISTINCT r.user_id) FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE r.movie_id IN (   SELECT movie_id   FROM movies   ORDER BY movie_popularity DESC   LIMIT 1 )
SELECT m.movie_title FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE r.user_id = 58149469 AND r.critic_likes = 1 AND r.critic_comments = 2;
Error: 第 78 个样本有 0 个SQL。
SELECT COUNT(*) FROM ratings WHERE movie_id IN (SELECT movie_id FROM movies WHERE movie_title = 'A Way of Life') AND rating_timestamp_utc > '2011';
SELECT rating_score FROM ratings JOIN movies ON ratings.movie_id = movies.movie_id JOIN lists_users ON ratings.user_id = lists_users.user_id JOIN lists ON lists_users.list_id = lists.list_id WHERE movies.movie_title = 'Innocence Unprotected' AND lists.list_title = '250 Favourite Films';
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id JOIN ratings_users ru ON r.user_id = ru.user_id JOIN lists_users lu ON ru.user_id = lu.user_id JOIN lists l ON lu.list_id = l.list_id WHERE l.list_title = '250 Favourite Films';
SELECT AVG(rating_score) FROM ratings WHERE movie_id IN (SELECT movie_id FROM movies WHERE movie_title = 'A Way of Life');
SELECT     (COUNT(r.rating_id) WHERE r.rating_score = 1) / COUNT(r.rating_id) * 100 FROM     ratings r     JOIN movies m ON r.movie_id = m.movie_id WHERE     m.movie_title = 'When Will I Be Loved';
SELECT AVG(rating_score) AS avg_innocence,        AVG(rating_score) AS avg_loved FROM ratings WHERE movie_id IN (   SELECT movie_id   FROM movies   WHERE movie_title = 'Innocence Unprotected' ) OR movie_id IN (   SELECT movie_id   FROM movies   WHERE movie_title = 'When Will I Be Loved' )
SELECT director_name FROM movies WHERE movie_title = 'Tokyo Eyes';
SELECT COUNT(*) FROM movies WHERE movie_release_year = 2007;
SELECT m.movie_title, MAX(m.movie_popularity) FROM movies m WHERE m.movie_release_year = 2006 GROUP BY m.movie_title;
SELECT COUNT(DISTINCT m.movie_id) FROM movies m WHERE m.director_name = 'Åke Sandgren';
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE m.director_name = 'Álex de la Iglesia' ORDER BY m.movie_popularity DESC LIMIT 1;
SELECT movie_release_year FROM movies WHERE movie_title = 'Cops';
Error: 第 91 个样本有 0 个SQL。
SELECT user_id FROM lists ORDER BY list_followers DESC LIMIT 1;
SELECT list_title FROM lists WHERE list_comments = (SELECT MAX(list_comments) FROM lists);
SELECT m.movie_title, MAX(r.rating_score) AS highest_rating FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE m.movie_release_year = 2008 GROUP BY m.movie_title;
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id ORDER BY r.critic_likes DESC LIMIT 3;
SELECT COUNT(DISTINCT l.user_id) FROM lists l JOIN lists_users lu ON l.list_id = lu.list_id WHERE l.list_followers > 100 AND EXTRACT(YEAR FROM l.list_creation_timestamp_utc) = 2009;
SELECT COUNT(DISTINCT u.user_id) FROM ratings r JOIN movies m ON r.movie_id = m.movie_id JOIN ratings_users ru ON r.user_id = ru.user_id JOIN lists_users lu ON ru.user_id = lu.user_id JOIN users u ON ru.user_id = u.user_id WHERE m.movie_title = 'White Night Wedding' AND r.rating_score = 5;
SELECT user_cover_image_url FROM lists_users JOIN lists ON lists_users.list_id = lists.list_id WHERE list_title = 'Georgia related films' AND list_creation_timestamp_utc = (SELECT MIN(list_creation_timestamp_utc) FROM lists WHERE list_title = 'Georgia related films');
SELECT list_followers FROM lists WHERE user_id IN (   SELECT user_id   FROM lists_users   WHERE user_avatar_image_url = 'https://assets.mubicdn.net/images/avatars/74983/images-w150.jpg?1523895214' ) AND list_creation_timestamp_utc = (   SELECT MIN(list_creation_timestamp_utc)   FROM lists   WHERE user_id = (     SELECT user_id     FROM lists_users     WHERE user_avatar_image_url = 'https://assets.mubicdn.net/images/avatars/74983/images-w150.jpg?1523895214'   ) );
SELECT m.movie_title FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE r.user_id = 94978 AND r.rating_score = 5;
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE m.movie_release_year = 2003 AND r.user_id = 2941;
SELECT COUNT(*) FROM ratings_users WHERE user_id IN (   SELECT user_id   FROM ratings   WHERE movie_id IN (     SELECT movie_id     FROM movies     WHERE movie_title = 'Patti Smith: Dream of Life'   )   AND user_trialist = 0 )
SELECT m.movie_title, AVG(r.rating_score) AS avg_score FROM movies m JOIN ratings r ON m.movie_id = r.movie_id GROUP BY m.movie_title ORDER BY avg_score DESC LIMIT 1;
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id JOIN ratings_users ru ON r.user_id = ru.user_id ORDER BY r.critic_comments DESC LIMIT 3;
SELECT l.list_title, lu.user_avatar_image_url FROM lists l JOIN lists_users lu ON l.list_id = lu.list_id WHERE lu.user_id = 85981819 ORDER BY lu.list_creation_date_utc ASC LIMIT 1;
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE r.rating_timestamp_utc LIKE '2020%' GROUP BY m.movie_title ORDER BY COUNT(m.movie_title) DESC LIMIT 1;
SELECT AVG(rating_score) FROM ratings WHERE movie_id IN (SELECT movie_id                    FROM movies                    WHERE movie_title = 'Versailles Rive-Gauche');
Error: 第 108 个样本有 0 个SQL。
Error: 第 109 个样本有 0 个SQL。
SELECT AVG(r.rating_score) FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE m.movie_title = 'The Fall of Berlin' AND r.rating_timestamp_utc LIKE '2019%';
SELECT (COUNT(r.rating_score) WHERE r.rating_score > 3) / (SELECT COUNT(*) FROM ratings r WHERE r.movie_id IN (SELECT m.movie_id FROM movies m WHERE m.movie_title = 'Patti Smith: Dream of Life')) * 100
SELECT M.movie_title, AVG(R.rating_score) AS avg_score FROM movies M JOIN ratings R ON M.movie_id = R.movie_id WHERE M.director_name = 'Abbas Kiarostami' GROUP BY M.movie_title ORDER BY avg_score DESC LIMIT 1;
SELECT movie_release_year AS year, COUNT(movie_id) AS most_release_films FROM movies GROUP BY movie_release_year ORDER BY most_release_films DESC LIMIT 1;
SELECT director_id FROM movies GROUP BY director_id ORDER BY COUNT(movie_id) DESC LIMIT 1;
SELECT COUNT(DISTINCT m.movie_id) FROM movies m WHERE m.movie_id IN (   SELECT movie_id   FROM movies   ORDER BY movie_popularity DESC   LIMIT 1 )
SELECT COUNT(*) FROM ratings_users WHERE user_has_payment_method = 1 AND rating_date_utc > '2014-01-01'
SELECT user_id FROM lists_users WHERE user_subscriber = 0 ORDER BY list_creation_date_utc ASC LIMIT 1;
SELECT COUNT(list_followers) AS max_followers FROM lists_users JOIN lists ON lists.list_id = lists_users.list_id GROUP BY lists_users.user_id ORDER BY COUNT(list_id) DESC LIMIT 1;
Error: 第 119 个样本有 0 个SQL。
SELECT COUNT(*) FROM ratings WHERE movie_id IN (SELECT movie_id FROM movies WHERE movie_title = 'Downfall') AND rating_score = 4;
SELECT m.movie_title FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE r.rating_score = 5 GROUP BY m.movie_title ORDER BY COUNT(r.rating_id) DESC LIMIT 1;
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id ORDER BY r.critic_comments DESC LIMIT 1;
SELECT user_avatar_image_url FROM ratings WHERE rating_timestamp_utc = '2019/10/17 1:36:36';
SELECT user_avatar_image_url FROM lists_users WHERE list_id IN (   SELECT list_id   FROM lists   WHERE list_title = 'Vladimir Vladimirovich Nabokov' )
SELECT     lu.user_has_payment_method FROM     lists_users lu WHERE     lu.list_id = (         SELECT             l.list_id         FROM             lists l         ORDER BY             l.list_movie_number DESC         LIMIT 1     ) AND     lu.list_creation_timestamp_utc = (         SELECT             l.list_creation_timestamp_utc         FROM             lists l         WHERE             l.list_id = lu.list_id     );
SELECT ru.user_avatar_image_url FROM ratings_users ru JOIN ratings r ON ru.user_id = r.user_id WHERE r.rating_score = 5 GROUP BY ru.user_id ORDER BY COUNT(r.rating_id) DESC LIMIT 1;
SELECT COUNT(critic) FROM ratings WHERE movie_id IN (   SELECT movie_id   FROM movies   ORDER BY movie_popularity DESC   LIMIT 1 )
SELECT ru.user_id FROM ratings ru JOIN movies m ON ru.movie_id = m.movie_id WHERE m.movie_title = 'Freaks' AND ru.rating_score = 4 AND ru.rating_timestamp_utc = '2013-05-04 06:33:32';
SELECT m.movie_url FROM ratings r JOIN movies m ON r.movie_id = m.movie_id WHERE r.rating_score = 5 AND r.rating_timestamp_utc = '2013-05-03 05:11:17';
Error: 第 130 个样本有 0 个SQL。
SELECT m.movie_title, MIN(r.rating_score) AS least_rating FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE m.movie_popularity > 13000 GROUP BY m.movie_title ORDER BY least_rating;
SELECT COUNT(*) FROM ratings WHERE user_id IN (SELECT user_id FROM ratings_users WHERE user_has_payment_method = 1) AND movie_id = 'One Flew Over the Cuckoo''s Nest';
SELECT COUNT(*) FROM lists_users WHERE user_id IN (   SELECT user_id   FROM lists   WHERE list_followers > 3000 ) AND user_has_payment_method = 1;
SELECT m.movie_title FROM movies m JOIN ratings r ON m.movie_id = r.movie_id WHERE m.movie_release_year = '1988' GROUP BY m.movie_title ORDER BY COUNT(r.rating_score) DESC LIMIT 1;
Error: 第 135 个样本有 0 个SQL。
Error: 第 136 个样本有 0 个SQL。
Error: 第 137 个样本有 0 个SQL。
Error: 第 138 个样本有 0 个SQL。
Error: 第 139 个样本有 0 个SQL。
Error: 第 140 个样本有 0 个SQL。
Error: 第 141 个样本有 0 个SQL。
Error: 第 142 个样本有 0 个SQL。
Error: 第 143 个样本有 0 个SQL。
Error: 第 144 个样本有 0 个SQL。
Error: 第 145 个样本有 0 个SQL。
Error: 第 146 个样本有 0 个SQL。
SELECT    list_title,    SUBTRACT(CURRENT_TIMESTAMP, list_update_timestamp_utc) AS time_since_update FROM    lists ORDER BY    time_since_update DESC LIMIT 1;
Error: 第 148 个样本有 0 个SQL。
Error: 第 149 个样本有 0 个SQL。
Error: 第 150 个样本有 0 个SQL。
Error: 第 151 个样本有 0 个SQL。
Error: 第 152 个样本有 0 个SQL。
Error: 第 153 个样本有 0 个SQL。
Error: 第 154 个样本有 0 个SQL。
Error: 第 155 个样本有 0 个SQL。
Error: 第 156 个样本有 0 个SQL。
Error: 第 157 个样本有 0 个SQL。
Error: 第 158 个样本有 0 个SQL。
Error: 第 159 个样本有 0 个SQL。
Error: 第 160 个样本有 0 个SQL。
Error: 第 161 个样本有 0 个SQL。
Error: 第 162 个样本有 0 个SQL。
Error: 第 163 个样本有 0 个SQL。
Error: 第 164 个样本有 0 个SQL。
Error: 第 165 个样本有 0 个SQL。
Error: 第 166 个样本有 0 个SQL。
SELECT      M.movie_title,      M.movie_release_year,      M.director_name,      AVG(R.rating_score) AS average_rating_score FROM      movies M JOIN      ratings R ON M.movie_id = R.movie_id WHERE      R.rating_timestamp_utc = (SELECT MIN(rating_timestamp_utc) FROM ratings) GROUP BY      M.movie_title, M.movie_release_year, M.director_name ORDER BY      M.movie_release_year ASC LIMIT 10;
Error: 第 168 个样本有 0 个SQL。
Error: 第 169 个样本有 0 个SQL。
Error: 第 170 个样本有 0 个SQL。
Error: 第 171 个样本有 0 个SQL。
Error: 第 172 个样本有 0 个SQL。
Error: 第 173 个样本有 0 个SQL。
Error: 第 174 个样本有 0 个SQL。
Error: 第 175 个样本有 0 个SQL。
Error: 第 176 个样本有 0 个SQL。
Error: 第 177 个样本有 0 个SQL。
SELECT stor_name FROM stores WHERE stor_id = (   SELECT stor_id   FROM sales   GROUP BY stor_id   ORDER BY MAX(qty) DESC   LIMIT 1 );  SELECT title FROM sales WHERE stor_id = (   SELECT stor_id   FROM sales   GROUP BY stor_id   ORDER BY MIN(qty) ASC   LIMIT 1 );
Error: 第 179 个样本有 0 个SQL。
SELECT      stor_name,      (DIVIDE(SUM(CASE WHEN payterms = 'Net 30' THEN qty ELSE 0 END), SUM(qty))*100) AS 'Net 30 Percentage' FROM      sales, stores WHERE      stor_id = '7066' GROUP BY      stor_name;
Error: 第 181 个样本有 0 个SQL。
Error: 第 182 个样本有 0 个SQL。
Error: 第 183 个样本有 0 个SQL。
Error: 第 184 个样本有 0 个SQL。
Error: 第 185 个样本有 0 个SQL。
Error: 第 186 个样本有 0 个SQL。
Error: 第 187 个样本有 0 个SQL。
Error: 第 188 个样本有 0 个SQL。
Error: 第 189 个样本有 0 个SQL。
Error: 第 190 个样本有 0 个SQL。
Error: 第 191 个样本有 0 个SQL。
Error: 第 192 个样本有 0 个SQL。
Error: 第 193 个样本有 0 个SQL。
Error: 第 194 个样本有 0 个SQL。
Error: 第 195 个样本有 0 个SQL。
Error: 第 196 个样本有 0 个SQL。
Error: 第 197 个样本有 0 个SQL。
Error: 第 198 个样本有 0 个SQL。
Error: 第 199 个样本有 0 个SQL。
Error: 第 200 个样本有 0 个SQL。
Error: 第 201 个样本有 0 个SQL。
Error: 第 202 个样本有 0 个SQL。
Error: 第 203 个样本有 0 个SQL。
Error: 第 204 个样本有 0 个SQL。
Error: 第 205 个样本有 0 个SQL。
Error: 第 206 个样本有 0 个SQL。
Error: 第 207 个样本有 0 个SQL。
Error: 第 208 个样本有 0 个SQL。
Error: 第 209 个样本有 0 个SQL。
Error: 第 210 个样本有 0 个SQL。
Error: 第 211 个样本有 0 个SQL。
Error: 第 212 个样本有 0 个SQL。
Error: 第 213 个样本有 0 个SQL。
Error: 第 214 个样本有 0 个SQL。
Error: 第 215 个样本有 0 个SQL。
Error: 第 216 个样本有 0 个SQL。
Error: 第 217 个样本有 0 个SQL。
Error: 第 218 个样本有 0 个SQL。
Error: 第 219 个样本有 0 个SQL。
SELECT e.fname, e.lname FROM employee e WHERE e.job_lvl = (SELECT MAX(job_lvl) FROM jobs) AND e.pub_id = (SELECT pub_id FROM publishers ORDER BY job_lvl DESC LIMIT 1);
SELECT job_desc FROM jobs, employee WHERE employee.job_id = jobs.job_id AND employee.lname = 'Afonso' AND employee.fname = 'Pedro' AND employee.minit = 'S';
SELECT max_lvl - job_lvl AS levels_left_to_reach FROM employee WHERE fname = 'Diego' AND lname = 'Roel';
SELECT notes FROM sales WHERE ord_date = '1994-09-14';
SELECT type FROM titles WHERE title_id IN (   SELECT title_id   FROM sales   WHERE ord_date = '1993-05-29' )
SELECT *  FROM publishers  WHERE country = 'France';
SELECT pub_name FROM publishers WHERE pub_id IN (   SELECT pub_id   FROM titles   WHERE title = 'Silicon Valley Gastronomic Treats' );
SELECT city FROM employee WHERE lname = 'Ashworth' AND fname = 'Victoria';
Error: 第 228 个样本有 0 个SQL。
SELECT DIVIDE(SUBTRACT(SUM(s.qty)                        FROM sales s                        WHERE s.city = 'Fremont' AND YEAR(s.ord_date) = 1993),               SUM(s.qty)               FROM sales s               WHERE s.city = 'Portland' AND YEAR(s.ord_date) = 1993) * 100
SELECT 100 * ((SUM(CASE WHEN job_desc = 'publisher' THEN 1 ELSE 0 END) -                 SUM(CASE WHEN job_desc = 'designer' THEN 1 ELSE 0 END)) /                 SUM(CASE WHEN job_desc = 'designer' THEN 1 ELSE 0 END)) AS percentage FROM employee;
SELECT CONCAT(e.fname, ' ', e.minit, ' ', e.lname) AS full_name FROM employee e WHERE YEAR(e.hire_date) BETWEEN 1990 AND 1995 ORDER BY e.job_lvl DESC;
SELECT t.title, t.type, t.price FROM titles t JOIN roysched r ON t.title_id = r.title_id WHERE r.royalty > (SELECT AVG(DIVIDE(SUM(r2.royalty), COUNT(r2.title_id))) FROM roysched r2)
SELECT t.title, t.type, t.price FROM titles t WHERE t.title_id IN (   SELECT s.title_id   FROM sales s   WHERE YEAR(s.ord_date) = 1994   GROUP BY s.title_id   HAVING SUM(s.qty) < (     SELECT DIVIDE(SUM(ord_num), COUNT(title_id))     FROM sales     WHERE YEAR(ord_date) = 1994   ) )
Error: 第 234 个样本有 0 个SQL。
SELECT t.title, t.price, t.title_id, ra.royalty FROM titles t JOIN roysched ra ON t.title_id = ra.title_id JOIN titleauthor ta ON t.title_id = ta.title_id JOIN authors a ON ta.au_id = a.au_id JOIN publishers p ON t.pub_id = p.pub_id WHERE p.country = 'USA' ORDER BY ra.royalty DESC;
SELECT AVG(royalty) AS avg_us_royalty,         (AVG(royalty) WHERE pub_id IN (SELECT pub_id FROM publishers WHERE country = 'USA')) -         (AVG(royalty) WHERE pub_id IN (SELECT pub_id FROM publishers WHERE country <> 'USA')) AS difference FROM titles;
SELECT AVG(job_lvl)  FROM employee e, jobs j  WHERE e.job_id = j.job_id  AND j.job_desc = 'Marketing manager'  AND e.pub_id IN (   SELECT pub_id    FROM publishers    WHERE country = 'USA' )  UNION ALL SELECT AVG(job_lvl)  FROM employee e, jobs j  WHERE e.job_id = j.job_id  AND j.job_desc = 'Marketing manager'  AND e.pub_id NOT IN (   SELECT pub_id    FROM publishers    WHERE country = 'USA' )
Error: 第 238 个样本有 0 个SQL。
SELECT t.title, p.state, t.ytd_sales FROM titles t JOIN publishers p ON t.pub_id = p.pub_id WHERE t.notes LIKE '%Carefully researched study of the effects of strong emotions on the body%';
SELECT t.title, SUM(s.qty) AS total_sales FROM sales s JOIN titles t ON s.title_id = t.title_id WHERE s.stor_id IN (   SELECT s.stor_id   FROM stores s   WHERE s.state = 'CA' ) AND s.qty > (   SELECT AVG(s.qty)   FROM sales s   JOIN stores st ON s.stor_id = st.stor_id   WHERE st.state = 'CA' ) GROUP BY t.title ORDER BY total_sales DESC LIMIT 5;
SELECT Date_received FROM callcenterlogs ORDER BY ser_time DESC LIMIT 1;
Error: 第 242 个样本有 0 个SQL。
SELECT * FROM callcenterlogs WHERE Complaint ID IN ('CR2400594', 'CR2405641') ORDER BY priority DESC;
SELECT first, middle, last FROM client WHERE sex = 'Male' AND year > 1990;
Error: 第 245 个样本有 0 个SQL。
SELECT e.Sub_product FROM events e WHERE e.Date_received = '2014-07-03' AND e.Client_ID IN (   SELECT c.client_id   FROM client c   WHERE c.last = 'Galloway' AND c.first = 'Diesel' )
Error: 第 247 个样本有 0 个SQL。
Error: 第 248 个样本有 0 个SQL。
SELECT first, middle, last FROM client WHERE client_id IN (   SELECT client_ID   FROM callcenterlogs   WHERE Date received = '2017-03-27'   AND server = 'MICHAL' )
Error: 第 250 个样本有 0 个SQL。
SELECT COUNT(*)  FROM client c  JOIN callcenterlogs cl ON c.client_id = cl.rand_client  JOIN events e ON cl.Complaint ID = e.Complaint ID  WHERE c.state IN (SELECT StateCode FROM state WHERE State = 'New York')  AND e.Issue = 'Deposits and withdrawals';
Error: 第 252 个样本有 0 个SQL。
SELECT COUNT(*)  FROM client  WHERE client_id IN (   SELECT Client_ID    FROM events    WHERE "Timely response?" = 'Yes'    AND city = 'New York' )
SELECT COUNT(*)  FROM callcenterlogs  WHERE type = 'Credit card' AND YEAR(Date received) = 2016 AND client IN (SELECT client_id FROM client WHERE sex = 'Male');
SELECT d.division FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.last = 'Galloway' AND c.first = 'Diesel';
Error: 第 256 个样本有 0 个SQL。
SELECT AVG(c.Complaint ID)  FROM callcenterlogs c  JOIN client cl ON c.rand_client = cl.client_id  JOIN district d ON cl.district_id = d.district_id  JOIN state s ON d.state_abbrev = s.StateCode  WHERE c.Product = 'Credit card' AND s.State = 'New York' AND c.Date received BETWEEN '2015-01-01' AND '2017-12-31';
SELECT      MULTIPLY(         DIVIDE(             (                 SELECT                      SUM(1)                  FROM                      callcenterlogs                  WHERE                      year("Date received") = 2017                      AND client_id IN (                         SELECT                              client_id                          FROM                              client                          WHERE                              city = 'New York'                     )             ),             (                 SELECT                      SUM(1)                  FROM                      callcenterlogs                  WHERE                      year("Date received") = 2016                      AND client_id IN (                         SELECT                              client_id                          FROM                              client                          WHERE                              city = 'New York'                     )             )         ),          1.0      ) * 100 AS percentage_of_increase
Error: 第 259 个样本有 0 个SQL。
SELECT s.State_name FROM client c JOIN district d ON c.district_id = d.district_id JOIN state s ON d.state_abbrev = s.StateCode WHERE c.email = 'wyatt.collins@gmail.com';
Error: 第 261 个样本有 0 个SQL。
SELECT e.Sub_issue FROM events e JOIN client c ON e.Client_ID = c.client_id WHERE c.sex = 'Male' AND c.last = 'Fuller' AND c.first = 'Gunner';
SELECT * FROM events WHERE Date_received = '2016-05-20' AND sex = 'Female' AND first = 'Lyric' AND middle = 'Emely' AND last = 'Taylor' AND "Consumer consent provided?" NOT IN (NULL, 'N/A', 'Empty');
SELECT    DATEDIFF("Date sent to company", "Date received") AS "Days Delay" FROM    callcenterlogs WHERE    rand_client = 'Brantley Julian Stanley'   AND phonefinal LIKE '%M%'    AND "Date received" = '2012-05-18';
SELECT d.city  FROM reviews r  JOIN client c ON r.district_id = c.district_id  JOIN district d ON c.district_id = d.district_id  WHERE r.Date = '2017-07-22';
Error: 第 266 个样本有 0 个SQL。
SELECT Product FROM reviews WHERE Date = '2016-10-07' AND district_id IN (SELECT district_id FROM district WHERE city = 'Indianapolis');
Error: 第 268 个样本有 0 个SQL。
Error: 第 269 个样本有 0 个SQL。
SELECT phonefinal FROM callcenterlogs WHERE Complaint ID = 'CR0100432';
SELECT      (COUNT(client.sex = 'Female') / (SELECT COUNT(*) FROM client WHERE Date received = '2017-03-27')) * 100 AS Percentage_of_Females FROM      client WHERE      Date received = '2017-03-27';
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN "Consumer consent provided?" = 'Consent provided' THEN 1 ELSE 0 END), COUNT(client_id)), 1.0) AS percentage FROM    callcenterlogs   JOIN client ON callcenterlogs."rand client" = client.client_id WHERE    client.sex = 'Male' AND client.last = 'Lopez' AND client.first = 'Mason'
SELECT Complaint_ID FROM callcenterlogs WHERE priority = 2 AND Date_received BETWEEN '2017-01-01' AND '2017-01-31';
SELECT CONCAT(first, ' ', middle, ' ', last) AS full_name, year, month, day AS date_of_birth, email FROM client WHERE age > 65 ORDER BY age DESC;
SELECT Product, MAX(COUNT(Stars = 5)) AS MaxFiveStars FROM reviews GROUP BY Product ORDER BY MaxFiveStars DESC;
SELECT State FROM state WHERE Region = 'South';
SELECT c.email FROM client c JOIN callcenterlogs cl ON c.client_id = cl.rand_client WHERE cl.outcome = 'Hang';
Error: 第 278 个样本有 0 个SQL。
Error: 第 279 个样本有 0 个SQL。
SELECT d.city FROM reviews r JOIN district d ON r.district_id = d.district_id WHERE r.Product = 'Eagle Capital' AND r.Stars < (SELECT AVG(Stars) FROM reviews);
SELECT COUNT(*)  FROM client  WHERE district_id IN (SELECT district_id FROM district WHERE division = 'Mountain')  AND age BETWEEN 12 AND 20;
SELECT COUNT(*)  FROM callcenterlogs  WHERE type = 'Credit card'  AND client IN (SELECT client_id FROM client WHERE sex = 'female');
SELECT first, middle, last FROM client WHERE sex = 'Male' AND year BETWEEN 1980 AND 2000 AND Submitted via = 'Referral';
SELECT "Submitted via" AS medium FROM callcenterlogs WHERE state = 'florida' GROUP BY "Submitted via" ORDER BY COUNT(*) DESC LIMIT 1;
SELECT AVG(COUNT(*))  FROM callcenterlogs  WHERE server = 'Closed with explanation'    AND client IN (SELECT client_id                    FROM client                    WHERE city = 'New Bedford')    AND EXTRACT(YEAR FROM Date received) = EXTRACT(YEAR FROM (SELECT MAX(Date received) FROM callcenterlogs));
SELECT    MULTIPLY(     DIVIDE(       SUM(CASE WHEN "Consumer disputed?" = 'Yes' AND city = 'Houston' THEN 1 ELSE 0 END),        COUNT(client_id)     ),      1.0   ) AS percentage
SELECT COUNT(client_id)  FROM client  WHERE state IN (SELECT StateCode                   FROM state                   WHERE State = 'Syracuse');
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN priority = 1 THEN 1 ELSE 0 END), COUNT("Complaint ID"), 1.0) * 100 AS percentage FROM    callcenterlogs   JOIN client ON callcenterlogs.rand_client = client.client_id   JOIN state ON client.state = state.State WHERE    state.State = 'California';
SELECT      AVG(CASE WHEN age > 65 THEN age ELSE NULL END) - AVG(CASE WHEN age BETWEEN 35 AND 55 THEN age ELSE NULL END) AS difference_in_average FROM      client c JOIN      state s ON c.state = s.StateCode WHERE      s.Region = 'Northeast';
SELECT callcenterlogs.Complaint ID FROM callcenterlogs ORDER BY ser_time DESC LIMIT 3;
Error: 第 291 个样本有 0 个SQL。
SELECT client_id  FROM client  WHERE social IS NULL OR social = 'N/A' OR social = '';
SELECT cl.Complaint ID FROM callcenterlogs cl WHERE cl."Date received" <= '2014-09-25' AND cl."Date sent to company" = '2014-09-25' ORDER BY DATEDIFF(cl."Date sent to company", cl."Date received") DESC LIMIT 1;
SELECT * FROM callcenterlogs WHERE priority = 2 ORDER BY Date received;
Error: 第 295 个样本有 0 个SQL。
SELECT COUNT(*)  FROM callcenterlogs  WHERE server = 'SHARON' AND type = 'Credit Card';
SELECT r.Region FROM (   SELECT r.Region, COUNT(*) as total_1_star_reviews   FROM reviews r   WHERE r.Stars = 1   GROUP BY r.Region ) AS subquery ORDER BY total_1_star_reviews DESC LIMIT 1;
SELECT DISTINCT YEAR(client.year) AS birth_year FROM client JOIN events ON client.client_id = events.Client_ID WHERE events."Sub-product" = '(CD) Certificate of deposit' GROUP BY YEAR(client.year) ORDER BY birth_year;
SELECT COUNT(*) FROM events WHERE Issue = 'Billing disputes' AND district_id IN (   SELECT district_id   FROM district   WHERE division = 'Mountain' );
SELECT COUNT(*) FROM client WHERE sex = 'Male' AND state = (SELECT State FROM state WHERE StateCode = 'MA');
SELECT c.last FROM client c JOIN callcenterlogs cl ON c.client_id = cl.rand_client WHERE cl.type = 'PS' AND cl.server = 'TOVA';
Error: 第 302 个样本有 0 个SQL。
SELECT COUNT(*) FROM client JOIN callcenterlogs ON client.client_id = callcenterlogs.rand_client WHERE client.sex = 'Male' AND EXTRACT(YEAR FROM client.day) = 1977 AND callcenterlogs.priority = 0;
SELECT client.first AS name FROM client JOIN events ON client.client_id = events.Client_ID WHERE "Consumer consent provided?" NOT IN ('N/A', NULL, '') AND EXISTS (   SELECT 1   FROM events e2   WHERE e2.Client_ID = client.client_id   AND e2.Tags = 'Older American' );
SELECT s.State FROM state s JOIN callcenterlogs c ON s.StateCode = c.phonefinal WHERE c.priority = 0 GROUP BY s.State ORDER BY COUNT(c.Complaint ID) DESC LIMIT 1;
SELECT COUNT(*) FROM callcenterlogs WHERE sex = 'Female' AND ser_time BETWEEN '15:00:01' AND '23:59:59' AND "Timely response?" = 'Yes';
SELECT COUNT(*) FROM callcenterlogs WHERE server = 'DORIT' AND ser_time < '00:05:00' AND "Company response to consumer" = 'Closed with explanation' AND "Submitted via" = 'phone';
SELECT COUNT(*) FROM client WHERE last = 'Alvarado' AND state = (SELECT State FROM state WHERE StateCode = 'MD');
SELECT COUNT(*) FROM reviews WHERE age BETWEEN 30 AND 50 AND Review LIKE '%Great%';
SELECT client.address_1, client.address_2 FROM client JOIN events ON client.client_id = events.Client_ID WHERE events.Company_response_to_consumer IS NOT NULL AND events.Timely_response = 'Yes' AND events.Consumer_disputed = 'Yes';
SELECT COUNT(*) FROM client JOIN callcenterlogs ON client.client_id = callcenterlogs.rand_client WHERE client.sex = 'Female' AND client.year = 2000 AND callcenterlogs."Submitted via" <> 'Web';
Error: 第 312 个样本有 0 个SQL。
SELECT COUNT(*)  FROM callcenterlogs  WHERE DATE received BETWEEN '2017-01-02' AND '2017-02-28'  AND phone LIKE '%gmail.com';
SELECT AVG(Stars)  FROM reviews r  JOIN client c ON r.district_id = c.district_id  JOIN state s ON c.state = s.StateCode  WHERE s.State = 'Oregon';
SELECT      MULTIPLY(DIVIDE(SUM(client.client_id), COUNT(client_id)), 1.0) AS percentage FROM      client WHERE      age > 50 AND "Submitted via" = 'Postal mail';
Error: 第 316 个样本有 0 个SQL。
Error: 第 317 个样本有 0 个SQL。
SELECT s.State FROM state s JOIN client c ON s.StateCode = c.state JOIN reviews r ON c.client_id = r.client_id WHERE r.Stars = 5 GROUP BY s.State ORDER BY COUNT(c.client_id) DESC LIMIT 1;
Error: 第 319 个样本有 0 个SQL。
SELECT Submitted_via  FROM events  WHERE Client_ID IN (SELECT client_id                      FROM client                      WHERE first = 'Kyran'                      AND last = 'Muller');
SELECT DISTINCT e.Product  FROM events e  JOIN client c ON e.Client_ID = c.client_id  WHERE c.year > 2005;
Error: 第 322 个样本有 0 个SQL。
Error: 第 323 个样本有 0 个SQL。
SELECT COUNT(*) FROM client WHERE state = 'New York' AND district_id IN (   SELECT district_id   FROM district   WHERE city = 'New York City' ) AND phonefinal LIKE '%fax%';
SELECT    MULTIPLY(DIVIDE(SUM(client.sex = 'Male' AND callcenterlogs.type = 'Credit card'), COUNT(client.client_id)), 1.0) AS percentage
SELECT client.first, client.middle, client.last  FROM client  WHERE client.social LIKE '%Older American%'  AND client.Consumer_consent_provided IN (NULL, 'N/A', '')  LIMIT 2;
SELECT client_id, year, month, day FROM client WHERE (year, month, day) = (   SELECT MAX(year, month, day)   FROM client );
SELECT COUNT(*)  FROM events  WHERE Consumer disputed? = 'No' AND Timely response? = 'No';
SELECT COUNT(*)  FROM callcenterlogs  WHERE ser_time > '00:15:00';
SELECT issue, COUNT(issue) AS count FROM events WHERE priority = 2 GROUP BY issue ORDER BY count DESC LIMIT 1;
Error: 第 331 个样本有 0 个SQL。
SELECT c.social FROM client c JOIN events e ON c.client_id = e.Client_ID GROUP BY c.social ORDER BY COUNT(e.Client_ID) DESC LIMIT 1;
SELECT city  FROM reviews  WHERE Stars = 1  GROUP BY city  ORDER BY COUNT(*) DESC  LIMIT 1;
SELECT client.address_1, client.address_2 FROM client JOIN callcenterlogs ON client.client_id = callcenterlogs.rand_client WHERE callcenterlogs.Date_received = '2012-03-14' AND callcenterlogs.submitted_via = 'Postal mail';
Error: 第 335 个样本有 0 个SQL。
SELECT DISTINCT server FROM callcenterlogs WHERE type = 'phone' AND outcome = 'late response';
Error: 第 337 个样本有 0 个SQL。
SELECT s.State FROM client c JOIN district d ON c.district_id = d.district_id JOIN state s ON d.state_abbrev = s.StateCode WHERE c.email = 'skylar.ramirez@gmail.com';
Error: 第 339 个样本有 0 个SQL。
SELECT client.first, client.middle, client.last FROM client JOIN callcenterlogs ON client.client_id = callcenterlogs.rand_client WHERE callcenterlogs.server = 'MORIAH' AND callcenterlogs.Date_received = '2013-09-11' ORDER BY callcenterlogs.phonefinal DESC LIMIT 1;
SELECT      CASE          WHEN age BETWEEN 13 AND 19 THEN 'Teenager'         WHEN age BETWEEN 19 AND 65 THEN 'Adult'         ELSE 'Elder'     END AS Age_Group,     AVG(ser_time / 60) AS Average_Time_In_Minutes FROM      callcenterlogs JOIN      client ON callcenterlogs.rand_client = client.client_id GROUP BY      CASE          WHEN age BETWEEN 13 AND 19 THEN 'Teenager'         WHEN age BETWEEN 19 AND 65 THEN 'Adult'         ELSE 'Elder'     END;
SELECT ROUND(SUM(CASE WHEN age <= 65 THEN 1 ELSE 0 END) / COUNT(client_id) * 100, 2) AS percentage FROM client;
SELECT (COUNT(client_id) FROM client WHERE sex = 'Male' AND city = 'Indianapolis') / (SELECT COUNT(client_id) FROM client WHERE city = 'Indianapolis') * 100 AS Percentage_of_male_clients
Error: 第 344 个样本有 0 个SQL。
SELECT first + ' ' + middle + ' ' + last AS full_name FROM client WHERE email = 'emily.garcia43@outlook.com';
SELECT c.first FROM client c WHERE c.priority = 2 ORDER BY c.priority DESC LIMIT 1;
Error: 第 347 个样本有 0 个SQL。
SELECT c.last FROM client c JOIN callcenterlogs cl ON c.client_id = cl.rand_client JOIN events e ON cl.Complaint ID = e.Complaint ID WHERE c.age <= 65 AND cl.server = 'YIFAT';
Error: 第 349 个样本有 0 个SQL。
SELECT client.first || ' ' || client.middle || ' ' || client.last AS full_name FROM client JOIN events ON client.client_id = events.Client_ID WHERE events."Consumer disputed?" = 'Yes';
SELECT cl.complaint_id FROM callcenterlogs cl JOIN client c ON cl.rand_client = c.client_id WHERE c.year = 1931;
SELECT (COUNT(cl.email) / COUNT(cll.Complaint ID)) * 100 FROM callcenterlogs cll JOIN client cl ON cll.rand_client = cl.client_id WHERE cl.email LIKE '%@gmail.com' AND cll.server = 'ZOHARI';
SELECT c.first, c.middle, c.last FROM client c JOIN callcenterlogs cl ON c.client_id = cl.rand_client WHERE cl.ser_time > '00:20:00';
SELECT c.last FROM client c JOIN callcenterlogs cl ON c.client_id = cl.rand_client WHERE cl.priority = 0 LIMIT 5;
SELECT call_id FROM client WHERE first LIKE 'B%';
SELECT Product  FROM events  WHERE Consumer complaint narrative LIKE '%Alexander Bronx Lewis%';
SELECT c.first FROM client c JOIN callcenterlogs cl ON c.client_id = cl.rand_client WHERE c.sex = 'Male' AND cl.type = 'Call' AND cl.outcome = 'No'
SELECT Product FROM events WHERE Client_ID IN (   SELECT client_id   FROM client   WHERE age > 65 ) GROUP BY Product ORDER BY COUNT(*) DESC LIMIT 1;
SELECT      CASE          WHEN age BETWEEN 13 AND 19 THEN 'Teenager'         WHEN age BETWEEN 19 AND 65 THEN 'Adult'         ELSE 'Elder'     END AS Age_Group,      COUNT(*) AS Total_Complaints FROM      client  INNER JOIN      callcenterlogs  ON      client.client_id = callcenterlogs.rand_client  WHERE      Product = 'Credit Card' GROUP BY      CASE          WHEN age BETWEEN 13 AND 19 THEN 'Teenager'         WHEN age BETWEEN 19 AND 65 THEN 'Adult'         ELSE 'Elder'     END ORDER BY      Total_Complaints DESC;
Error: 第 360 个样本有 0 个SQL。
SELECT Date received FROM callcenterlogs WHERE Submitted via = 'Fax';
Error: 第 362 个样本有 0 个SQL。
Error: 第 363 个样本有 0 个SQL。
SELECT AVG(age)  FROM client c  JOIN callcenterlogs cl ON c.client_id = cl.rand_client  WHERE cl.outcome = 'Closed with relief';
Error: 第 365 个样本有 0 个SQL。
SELECT cl.Complaint ID, cl.call_id, cl.phonefinal FROM callcenterlogs cl WHERE cl.Date received BETWEEN '2014-01-01' AND '2014-12-30' AND cl.server = 'AVIDAN';
Error: 第 367 个样本有 0 个SQL。
Error: 第 368 个样本有 0 个SQL。
SELECT COUNT(*) FROM client WHERE sex = 'Female' AND age < 18 AND district_id IN (   SELECT district_id   FROM district   WHERE division = 'Middle Atlantic' );
SELECT client.year || '-' || client.month || '-' || client.day AS full_birthdate, client.email, client.phone FROM client WHERE city = 'Indianapolis' ORDER BY client.year, client.month, client.day DESC LIMIT 1;
SELECT city, COUNT(*) as total_5_star_ratings FROM reviews WHERE Date LIKE '2016%' AND Stars = 5 GROUP BY city ORDER BY total_5_star_ratings DESC LIMIT 5;
SELECT MAX(ser_time) FROM callcenterlogs WHERE type = 'arbitration';
SELECT client.social FROM client WHERE client.phone = '100-121-8371';
SELECT client.first, client.middle, client.last, client.phone FROM client WHERE client.district_id IN (   SELECT district.district_id   FROM district   WHERE district.division = 'Pacific' )
SELECT client.social FROM client JOIN callcenterlogs ON client.client_id = callcenterlogs.rand_client JOIN events ON callcenterlogs.Complaint ID = events.Complaint ID ORDER BY (events.Date sent to company - events.Date received) DESC LIMIT 1;
Error: 第 376 个样本有 0 个SQL。
SELECT first, last FROM client WHERE city = 'New York City';
SELECT MAX(age)  FROM client  WHERE sex = 'Male';
Error: 第 379 个样本有 0 个SQL。
SELECT (COUNT(c.client_id) / COUNT(d.client_id)) * 100 FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.sex = 'Female' AND d.division = 'Middle Atlantic';
SELECT AVG(age)  FROM client  WHERE state IN (SELECT StateCode                   FROM state                   WHERE Region = 'South Atlantic');
SELECT d.city FROM district d JOIN client c ON d.district_id = c.district_id JOIN state s ON d.state_abbrev = s.StateCode WHERE s.Region = 'Midwest' GROUP BY d.city ORDER BY COUNT(c.client_id) ASC LIMIT 1;
SELECT COUNT(client_id) FROM client WHERE state.Region = 'Northeast' AND email LIKE '%@outlook.com';
SELECT city FROM client WHERE state IN (SELECT StateCode FROM state WHERE Region = 'North Central') AND age > 60 GROUP BY city ORDER BY COUNT(client_id) DESC LIMIT 1;
SELECT (COUNT(c.Complaint ID) / COUNT(c.Complaint ID)) * 100 AS percentage FROM callcenterlogs c WHERE YEAR(c.Date received) = 2017 AND c.priority = 2 AND c.type = 'late fee issue';
SELECT s.State, COUNT(d.city) as Max_Cities FROM district d JOIN state s ON d.state_abbrev = s.StateCode GROUP BY s.State ORDER BY Max_Cities DESC LIMIT 1;
SELECT first, phone FROM client WHERE client_id IN (   SELECT rand_client   FROM callcenterlogs   WHERE Complaint ID = 'CR0922485' );
Error: 第 388 个样本有 0 个SQL。
SELECT COUNT(*) FROM events WHERE Date received LIKE '2012%' AND Sub-product LIKE 'Credit card' AND district_id IN (   SELECT district_id   FROM client   WHERE city = 'Omaha' );
Error: 第 390 个样本有 0 个SQL。
SELECT client.phone, callcenterlogs.Complaint ID FROM client JOIN callcenterlogs ON client.client_id = callcenterlogs.rand_client WHERE callcenterlogs.outcome = 'In progress';
Error: 第 392 个样本有 0 个SQL。
SELECT (COUNT(C.complaint_id) / COUNT(C.complaint_id)) * 100 FROM callcenterlogs C JOIN client cli ON C.rand_client = cli.client_id JOIN district dis ON cli.district_id = dis.district_id WHERE C.Date received LIKE '2014%' AND dis.city = 'Houston' AND DATEDIFF(C.ser_exit, C.ser_start) > 5;
Error: 第 394 个样本有 0 个SQL。
Error: 第 395 个样本有 0 个SQL。
Error: 第 396 个样本有 0 个SQL。
Error: 第 397 个样本有 0 个SQL。
SELECT callcenterlogs.Date received FROM callcenterlogs JOIN client ON callcenterlogs.client_id = client.client_id WHERE client.sex = 'Female' AND client.age BETWEEN 20 AND 40;
SELECT Product  FROM reviews  WHERE Date = '2016-03-14'    AND Stars = 1    AND district_id IN (SELECT district_id                         FROM client                         WHERE city = 'Newton'                           AND state = (SELECT State                                        FROM state                                        WHERE StateCode = (SELECT state_abbrev                                                          FROM district                                                          WHERE city = 'Newton')));
SELECT COUNT(*)  FROM reviews  WHERE Stars = 5 AND district_id IN (SELECT district_id FROM district WHERE city = 'Nashville' AND state_abbrev = 'TN')
SELECT e.Issue  FROM events e  JOIN client c ON e.Client_ID = c.client_id  WHERE c.sex = 'Male' AND c.age < 25;
Error: 第 402 个样本有 0 个SQL。
Error: 第 403 个样本有 0 个SQL。
SELECT d.division FROM reviews r JOIN district d ON r.district_id = d.district_id WHERE r.Date = '2017-12-17' AND r.Stars = 5 AND r.Product = 'Eagle National Mortgage';
SELECT client.phone FROM client JOIN events ON client.client_id = events.Client_ID WHERE events.Product = 'Credit Card' ORDER BY client.age DESC LIMIT 1;
SELECT COUNT(*)  FROM callcenterlogs  WHERE Date received LIKE '2014%' AND Submitted via = 'Phone';
SELECT e.Product, e.Issue FROM events e JOIN client c ON e.Client_ID = c.client_id WHERE c.age > (SELECT AVG(age) * 0.6 FROM client);
SELECT      ROUND((COUNT(district_id) * 100.0) / (SELECT COUNT(*) FROM reviews WHERE Stars = 5), 2) AS Percentage FROM      reviews WHERE      Stars = 5 AND district_id IN (SELECT district_id FROM district WHERE division = 'East North Central')
Error: 第 409 个样本有 0 个SQL。
SELECT COUNT(DISTINCT company_id)  FROM movie_company  WHERE movie_id IN (SELECT movie_id FROM movie WHERE title = 'Four Rooms');
SELECT m.title FROM movie m JOIN movie_company mc ON m.movie_id = mc.movie_id JOIN production_company pc ON mc.company_id = pc.company_id WHERE pc.company_name = 'Universal Pictures';
Error: 第 412 个样本有 0 个SQL。
SELECT person_name FROM movie_crew JOIN movie ON movie_crew.movie_id = movie.movie_id WHERE movie.title = 'Pirates of the Caribbean: At World''s End' AND job = 'Director of Photography';
SELECT job FROM movie_crew WHERE movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'Pirates of the Caribbean: At World''s End' ) AND person_id IN (   SELECT person_id   FROM person   WHERE person_name = 'Dariusz Wolski' )
Error: 第 415 个样本有 0 个SQL。
Error: 第 416 个样本有 0 个SQL。
SELECT p.person_name FROM person p JOIN movie_crew mc ON p.person_id = mc.person_id WHERE mc.movie_id IN (   SELECT m.movie_id   FROM movie m   WHERE m.title = 'Pirates of the Caribbean: At World''s End' ) AND mc.job = 'Producer';
SELECT COUNT(DISTINCT m.movie_id) FROM movie_crew mc JOIN person p ON mc.person_id = p.person_id JOIN department d ON mc.department_id = d.department_id JOIN job j ON mc.job = j.job_name WHERE p.person_name = 'Dariusz Wolski' AND j.job_name = 'Director of Photography';
SELECT m.title FROM movie m JOIN movie_crew mc ON m.movie_id = mc.movie_id JOIN person p ON mc.person_id = p.person_id WHERE mc.department_id IN (   SELECT d.department_id   FROM department d   WHERE d.department_name = 'Director of Photography' ) AND mc.job = 'Director of Photography' ORDER BY m.vote_average DESC LIMIT 1;
Error: 第 420 个样本有 0 个SQL。
SELECT      ROUND(         SUM(CASE WHEN vote_average > 5 THEN 1 ELSE 0 END) / COUNT(*), 2     ) AS percentage FROM      movie_crew JOIN      movie ON movie_crew.movie_id = movie.movie_id JOIN      person ON movie_crew.person_id = person.person_id WHERE      person.person_name = 'Dariusz Wolski' AND job = 'Director of Photography';
SELECT AVG(revenue)  FROM movie  WHERE movie_id IN (   SELECT movie_id    FROM movie_crew    WHERE person_id IN (     SELECT person_id      FROM person      WHERE person_name = 'Dariusz Wolski'   )    AND department_id IN (     SELECT department_id      FROM department      WHERE department_name = 'Director of Photography'   )   AND job = 'Director of Photography' )
Error: 第 423 个样本有 0 个SQL。
Error: 第 424 个样本有 0 个SQL。
Error: 第 425 个样本有 0 个SQL。
SELECT COUNT(*)  FROM movie_keywords  WHERE movie_id IN (SELECT movie_id FROM movie WHERE title = 'I Hope They Serve Beer in Hell');
SELECT p.person_name FROM movie_crew mc JOIN person p ON mc.person_id = p.person_id WHERE mc.movie_id IN (   SELECT m.movie_id   FROM movie m   WHERE m.title = 'Land of the Dead' ) AND mc.job = 'Director';
SELECT COUNT(*)  FROM movie_company  WHERE movie_id IN (SELECT movie_id FROM movie)  AND company_id IN (SELECT company_id FROM production_company WHERE company_name = 'Paramount Animation');
SELECT COUNT(*)  FROM movie_cast  WHERE movie_id IN (   SELECT movie_id    FROM movie    WHERE title = 'Spider-Man 3'  )  AND gender_id IN (   SELECT gender_id    FROM gender    WHERE gender = 'Female' );
SELECT keyword_name FROM (   SELECT keyword_name, COUNT(*) as count   FROM keyword   GROUP BY keyword_name ) AS keyword_counts ORDER BY count DESC LIMIT 1;
SELECT COUNT(DISTINCT mc.person_id) FROM movie_crew mc JOIN movie m ON mc.movie_id = m.movie_id WHERE m.title = 'The Amityville Horror' AND mc.job = 'Producer';
Error: 第 432 个样本有 0 个SQL。
SELECT COUNT(*)  FROM movie_keywords  WHERE movie_id IN (SELECT movie_id FROM movie_keywords WHERE keyword_id IN (SELECT keyword_id FROM keyword WHERE keyword_name = 'saving the world'));
SELECT m.title FROM movie m JOIN movie_company mc ON m.movie_id = mc.movie_id WHERE mc.company_id IN (   SELECT pc.company_id   FROM production_company pc   WHERE pc.company_name = 'Cruel and Unusual Films' ) ORDER BY m.popularity DESC LIMIT 1;
Error: 第 435 个样本有 0 个SQL。
Error: 第 436 个样本有 0 个SQL。
SELECT (COUNT(m.gender_id) WHERE m.title = 'Bride Wars' AND m.gender_id = (SELECT gender_id WHERE gender = 'Male')) * 100.0 / COUNT(m.gender_id) AS percentage FROM movie_cast m JOIN gender g ON m.gender_id = g.gender_id;
SELECT m.title FROM movie m ORDER BY m.budget DESC LIMIT 1;
SELECT COUNT(*)  FROM movie  WHERE revenue > 1000000000;
SELECT MIN(release_date)  FROM movie;
SELECT COUNT(*)  FROM movie_crew  WHERE person_id IN (SELECT person_id FROM person WHERE person_name = 'John Young')  AND department_id IN (SELECT department_id FROM department WHERE department_name = 'Crew');
SELECT title FROM movie WHERE popularity = (SELECT MAX(popularity) FROM movie);
SELECT person_name FROM person JOIN movie_crew ON person.person_id = movie_crew.person_id WHERE movie_crew.department_id = 1325273;
Error: 第 444 个样本有 0 个SQL。
SELECT p.person_name FROM movie_cast mc JOIN person p ON mc.person_id = p.person_id WHERE mc.character_name = 'Captain Jack Sparrow' AND mc.title LIKE 'Pirates of the Caribbean%';
SELECT m.title FROM movie m JOIN movie_company mc ON m.movie_id = mc.movie_id JOIN production_company pc ON mc.company_id = pc.company_id WHERE pc.company_name = 'Walt Disney Pictures' ORDER BY m.popularity DESC LIMIT 1;
Error: 第 447 个样本有 0 个SQL。
SELECT company_name FROM production_company WHERE company_id IN (   SELECT company_id   FROM movie_company   GROUP BY company_id   ORDER BY MAX(revenue) DESC   LIMIT 1 )
SELECT COUNT(*)  FROM movie_crew  WHERE movie_id IN (   SELECT movie_id    FROM movie    WHERE title = 'Mr. Smith Goes to Washington' )  AND person_id IN (   SELECT person_id    FROM person    WHERE gender_id IN (     SELECT gender_id      FROM gender      WHERE gender = 'Female'   ) );
Error: 第 450 个样本有 0 个SQL。
Error: 第 451 个样本有 0 个SQL。
SELECT title FROM movie WHERE person_id = (SELECT person_id FROM person WHERE person_name = 'Jamie Foxx') ORDER BY release_date DESC LIMIT 1;
Error: 第 453 个样本有 0 个SQL。
SELECT title FROM movie WHERE genre_id = (SELECT genre_id FROM genre WHERE genre_name = 'Crime') ORDER BY release_date LIMIT 1;
SELECT COUNT(*)  FROM movie  JOIN movie_genres ON movie.movie_id = movie_genres.movie_id  JOIN genre ON movie_genres.genre_id = genre.genre_id  WHERE genre.genre_name = 'Horror';
SELECT person_id FROM movie_crew WHERE movie_id = 12 AND department_id IN (   SELECT department_id   FROM movie_crew   WHERE movie_id = 12 AND job = 'Film Editor'   ORDER BY cast_order   LIMIT 1 OFFSET 1 ) AND job = 'Second Film Editor';
Error: 第 457 个样本有 0 个SQL。
SELECT m_crew.person_id, p.person_name, m_crew.job FROM movie_crew m_crew JOIN person p ON m_crew.person_id = p.person_id WHERE m_crew.movie_id = 19 AND m_crew.department_id = 7;
Error: 第 459 个样本有 0 个SQL。
Error: 第 460 个样本有 0 个SQL。
SELECT m.movie_id, mc.character_name FROM movie_cast mc JOIN person p ON mc.person_id = p.person_id WHERE p.person_name = 'Jim Carrey';
Error: 第 462 个样本有 0 个SQL。
SELECT m.title FROM movie m JOIN movie_cast mc ON m.movie_id = mc.movie_id JOIN person p ON mc.person_id = p.person_id WHERE p.person_name = 'Jim Carrey';
Error: 第 464 个样本有 0 个SQL。
SELECT COUNT(*)  FROM movie  WHERE release_date BETWEEN '1990-01-02' AND '2000-12-30'  AND EXISTS (SELECT 1 FROM movie_cast WHERE movie_cast.movie_id = movie.movie_id AND movie_cast.person_name = 'Uma Thurman');
SELECT title  FROM movie  WHERE genre_id IN (SELECT genre_id FROM genre WHERE genre_name = 'Horror')  AND vote_average > 7;
SELECT g.genre_name, m.popularity FROM movie m JOIN movie_genres mg ON m.movie_id = mg.movie_id JOIN genre g ON mg.genre_id = g.genre_id WHERE m.revenue >= 120000000 AND m.release_date BETWEEN '2012-01-01' AND '2015-12-31';
SELECT COUNT(*) FROM movie WHERE country_id IN (   SELECT country_id   FROM country   WHERE country_name = 'India' ) AND release_date BETWEEN '1990-01-02' AND '2003-12-30' AND revenue > 75000000 AND popularity >= 20;
SELECT m.title, m.revenue, c.country_name FROM movie m JOIN production_country pc ON m.movie_id = pc.movie_id JOIN country c ON pc.country_id = c.country_id WHERE m.budget = (SELECT MAX(budget) FROM movie);
SELECT m.title FROM movie m JOIN language l ON m.language_id = l.language_id JOIN movie_languages ml ON m.movie_id = ml.movie_id WHERE l.language_name = 'Latin' AND m.release_date BETWEEN '1990-01-01' AND '1995-12-31';
SELECT AVG(revenue) FROM movie WHERE country_name = 'United States of America'   AND release_date LIKE '2006%';
SELECT    (SUM(revenue) / COUNT(movie_id) WHEN country_name = 'United States of America'    - SUM(revenue) / COUNT(movie_id) WHEN country_name = 'India')    AS "2016 gap between the average revenue for Indian and American films" FROM    movie WHERE    release_date LIKE '2016%'   AND country_name IN ('India', 'United States of America');
SELECT      ROUND(         (COUNT(m.movie_id)          WHERE g.genre_name = 'Romance'          AND c.country_name = 'India'          AND m.release_date BETWEEN '2015-01-01' AND '2015-12-31')      / (SELECT COUNT(m.movie_id) FROM movie m) * 100, 2) AS percentage
SELECT p.person_name FROM movie_cast mc JOIN person p ON mc.person_id = p.person_id WHERE mc.character_name = 'Optimus Prime (voice)';
SELECT g.gender FROM movie_cast mc JOIN gender g ON mc.gender_id = g.gender_id WHERE mc.character_name = 'USAF Master Sgt. Epps';
Error: 第 476 个样本有 0 个SQL。
SELECT movie.title FROM movie JOIN movie_company ON movie.movie_id = movie_company.movie_id WHERE movie_company.company_id IN (   SELECT company_id   FROM production_company   WHERE company_name = 'Radiant Film GmbH' );
SELECT genre_name FROM genre JOIN movie_genres ON genre.genre_id = movie_genres.genre_id JOIN movie ON movie_genres.movie_id = movie.movie_id WHERE movie.title = 'Sky Captain and the World of Tomorrow';
SELECT keyword_name FROM keyword JOIN movie_keywords ON keyword.keyword_id = movie_keywords.keyword_id WHERE movie_keywords.movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'Sky Captain and the World of Tomorrow' );
SELECT c.country_name FROM movie m JOIN production_country pc ON m.movie_id = pc.movie_id JOIN country c ON pc.country_id = c.country_id WHERE m.title = 'Gojira ni-sen mireniamu';
SELECT m.title FROM movie m JOIN movie_keywords mk ON m.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.keyword_id WHERE k.keyword_name = 'extremis';
Error: 第 482 个样本有 0 个SQL。
Error: 第 483 个样本有 0 个SQL。
SELECT m_crew.person_name, m_crew.job FROM movie_crew m_crew JOIN movie m ON m_crew.movie_id = m.movie_id WHERE m.title = 'Mad Max: Fury Road' ORDER BY m_crew.person_name LIMIT 10;
SELECT      (COUNT(m.movie_id)       WHERE mg.genre_name = 'animation') /      (SELECT COUNT(m.movie_id)       FROM movie m       JOIN production_country pc ON m.movie_id = pc.movie_id       WHERE pc.country_name = 'Japan') * 100 AS percentage
SELECT      (SUM(gender_id = (SELECT gender_id FROM gender WHERE gender = 'Female')) /       SUM(gender_id = (SELECT gender_id FROM gender WHERE gender = 'Male'))) AS ratio,     (SUM(gender_id = (SELECT gender_id FROM gender WHERE gender = 'Unknown')) /       (SUM(gender_id = (SELECT gender_id FROM gender WHERE gender = 'Female')) +        SUM(gender_id = (SELECT gender_id FROM gender WHERE gender = 'Male')))) AS unknown_ratio FROM      movie_cast WHERE      movie_id IN (SELECT movie_id FROM movie WHERE title = 'Iron Man');
Error: 第 487 个样本有 0 个SQL。
SELECT keyword_id FROM movie_keywords WHERE movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'Sin City' )
SELECT m.title FROM movie m JOIN movie_keywords mk ON m.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.keyword_id WHERE k.keyword_name = 'angel';
SELECT keyword_name FROM movie_keywords JOIN movie ON movie_keywords.movie_id = movie.movie_id WHERE movie.popularity = (SELECT MAX(popularity) FROM movie);
SELECT genre_id FROM movie_genres WHERE movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'The Dark Knight' );
Error: 第 492 个样本有 0 个SQL。
SELECT title  FROM movie  WHERE movie_status = 'rumoured'  AND EXISTS (SELECT 1              FROM movie_genres mg              JOIN genre g ON mg.genre_id = g.genre_id              WHERE mg.movie_id = movie.movie_id              AND g.genre_name = 'Drama');
SELECT g.genre_name FROM movie m JOIN movie_genres mg ON m.movie_id = mg.movie_id JOIN genre g ON mg.genre_id = g.genre_id WHERE m.revenue = (SELECT MIN(revenue) FROM movie);
SELECT g.genre_name FROM movie m JOIN movie_genres mg ON m.movie_id = mg.movie_id JOIN genre g ON mg.genre_id = g.genre_id WHERE m.runtime = 14;
SELECT g.genre_name FROM movie m JOIN movie_genres mg ON m.movie_id = mg.movie_id JOIN genre g ON mg.genre_id = g.genre_id WHERE m.vote_average = (SELECT MAX(vote_average) FROM movie) AND m.revenue = (SELECT MIN(revenue) FROM movie);
SELECT g.genre_name FROM movie m JOIN movie_genres mg ON m.movie_id = mg.movie_id JOIN genre g ON mg.genre_id = g.genre_id WHERE m.tagline = 'A long time ago in a galaxy far, far away…';
Error: 第 498 个样本有 0 个SQL。
Error: 第 499 个样本有 0 个SQL。
Error: 第 500 个样本有 0 个SQL。
SELECT AVG(revenue)  FROM movie  WHERE movie_id IN (   SELECT movie_id    FROM movie_keywords    WHERE keyword_id IN (     SELECT keyword_id      FROM keyword      WHERE keyword_name = 'civil war'   ) );
SELECT movie.title, movie.popularity FROM movie WHERE movie.vote_count = (SELECT MAX(vote_count) FROM movie);
SELECT title FROM movie WHERE budget = 0 ORDER BY revenue DESC LIMIT 1;
Error: 第 504 个样本有 0 个SQL。
Error: 第 505 个样本有 0 个SQL。
SELECT m.title FROM movie m JOIN movie_company mc ON m.movie_id = mc.movie_id WHERE mc.company_id IN (SELECT company_id FROM production_company WHERE company_name = 'Lucasfilm');
SELECT title FROM movie WHERE movie_id IN (   SELECT movie_id   FROM movie_company   WHERE company_id IN (     SELECT company_id     FROM production_company     WHERE company_name = 'Warner Bros. Pictures'   ) ) ORDER BY revenue DESC LIMIT 1;
SELECT movie.release_date FROM movie JOIN movie_company ON movie.movie_id = movie_company.movie_id WHERE movie_company.company_id IN (   SELECT company_id   FROM production_company   WHERE company_name = 'Twentieth Century Fox Film Corporation' );
Error: 第 509 个样本有 0 个SQL。
SELECT language_id FROM movie_languages WHERE movie_id IN (   SELECT movie_id   FROM movie   ORDER BY popularity DESC   LIMIT 1 )
SELECT language_name FROM movie JOIN movie_languages ON movie.movie_id = movie_languages.movie_id JOIN language ON movie_languages.language_id = language.language_id WHERE movie.title = 'C''era una volta il West';
SELECT *  FROM movie  WHERE movie_status = 'Post Production'  AND EXISTS (   SELECT 1    FROM movie_languages ml    JOIN language l ON ml.language_id = l.language_id    WHERE ml.movie_id = movie.movie_id    AND l.language_name = 'Nederlands' );
SELECT movie.title, movie.tagline FROM movie JOIN movie_languages ON movie.movie_id = movie_languages.movie_id JOIN language ON movie_languages.language_id = language.language_id WHERE language.language_name = 'Polski';
SELECT m.homepage FROM movie m JOIN movie_languages ml ON m.movie_id = ml.movie_id JOIN language l ON ml.language_id = l.language_id WHERE l.language_name = 'Bahasa indonesia';
SELECT    SUM(CASE WHEN l.language_name = 'English' THEN m.revenue ELSE 0 END) -    SUM(CASE WHEN l.language_name = 'Latin' THEN m.revenue ELSE 0 END) AS difference_in_revenues FROM    movie m   JOIN language l ON m.language_id = l.language_id WHERE    l.language_name IN ('English', 'Latin');
SELECT SUM(m.revenue)  FROM movie m  JOIN movie_company mc ON m.movie_id = mc.movie_id  WHERE mc.company_id IN (SELECT company_id FROM production_company WHERE company_name = 'Fantasy Films')  OR mc.company_id IN (SELECT company_id FROM production_company WHERE company_name = 'Live Entertainment');
Error: 第 517 个样本有 0 个SQL。
SELECT person_name AS most_common_first_name FROM person GROUP BY person_name ORDER BY COUNT(person_name) DESC LIMIT 1;
SELECT AVG(count) AS average_number_of_crews FROM (   SELECT COUNT(DISTINCT person_id) AS count   FROM movie_crew   GROUP BY movie_id ) AS temp;
SELECT * FROM keyword WHERE keyword_name LIKE '%christmas%';
SELECT MAX(runtime) AS longest_runtime FROM movie;
Error: 第 522 个样本有 0 个SQL。
SELECT overview FROM movie WHERE title = 'The Pacifier';
SELECT COUNT(*)  FROM movie_company  WHERE company_id IN (SELECT company_id FROM production_company WHERE company_name = 'Eddie Murphy Productions');
SELECT p.person_name FROM movie_cast mc JOIN person p ON mc.person_id = p.person_id WHERE mc.character_name LIKE '%captain%';
SELECT keyword_name FROM keyword WHERE keyword_name IN (   SELECT keyword_name   FROM keyword   JOIN movie_keywords ON keyword.keyword_id = movie_keywords.keyword_id   WHERE movie_keywords.movie_id IN (     SELECT movie_id     FROM movie     WHERE release_date LIKE '%2006%'   ) ) GROUP BY keyword_name ORDER BY COUNT(keyword_name) DESC LIMIT 1;
Error: 第 527 个样本有 0 个SQL。
SELECT genre_name FROM genre ORDER BY COUNT(genre_name) ASC LIMIT 2, 1;
SELECT language_name FROM language JOIN movie_languages ON language.language_id = movie_languages.language_id JOIN movie ON movieLanguages.movie_id = movie.movie_id WHERE movie.tagline = 'An offer you can''t refuse.' AND language_role = 'Original';
SELECT AVG(revenue)  FROM movie  WHERE language_name IN (SELECT language_name                          FROM language                          WHERE language_code = 'fr');
SELECT * FROM movie_cast WHERE character_name LIKE '%characters%' AND gender_id IN (   SELECT gender_id   FROM gender   WHERE gender = 'Unspecified' )
SELECT    m.person_id,    p.person_name,    COUNT(*) AS num_movies,    AVG(m.popularity) AS avg_popularity FROM    movie_crew m   JOIN person p ON m.person_id = p.person_id WHERE    m.department_id IN (SELECT department_id FROM department WHERE department_name = 'Director') GROUP BY    m.person_id, p.person_name ORDER BY    avg_popularity DESC LIMIT 5;
SELECT mg.genre_name, m.title, m.budget FROM movie_genres mg JOIN movie m ON mg.movie_id = m.movie_id JOIN (   SELECT genre_id, MAX(budget) as max_budget   FROM movie_genres   GROUP BY genre_id ) mg_max ON mg.genre_id = mg_max.genre_id AND mg.max_budget = mg_max.max_budget
SELECT m.title FROM movie m JOIN movie_keywords mk ON m.movie_id = mk.movie_id GROUP BY m.title ORDER BY COUNT(mk.keyword_id) DESC LIMIT 1;
SELECT department_name FROM department ORDER BY (SELECT COUNT(department_id) FROM movie_crew WHERE department_id = department.department_id) DESC LIMIT 1;
SELECT (SUM(CASE WHEN country_iso_code = 'US' THEN 1 ELSE 0 END) / COUNT(country_id)) * 100 AS percentage FROM country;
SELECT AVG(CAST(percentage AS FLOAT)) AS average_ratio FROM (   SELECT      DIVIDE(       SUM(CASE WHEN gender = 'Female' THEN gender_id ELSE 0 END),        SUM(CASE WHEN gender = 'Male' THEN gender_id ELSE 0 END)     ) AS percentage   FROM movie_cast   GROUP BY movie_id ) AS ratio_table;
SELECT title FROM movie WHERE release_date LIKE '1945%';
SELECT country_id, country_iso_code FROM country WHERE country_name = 'Belgium';
Error: 第 540 个样本有 0 个SQL。
SELECT m.title FROM movie m JOIN movie_languages ml ON m.movie_id = ml.movie_id JOIN language l ON ml.language_id = l.language_id WHERE l.language_name = 'Somali';
SELECT m.release_date, l.language_name FROM movie m JOIN movie_languages ml ON m.movie_id = ml.movie_id JOIN language l ON ml.language_id = l.language_id WHERE m.popularity = (SELECT MAX(popularity) FROM movie);
Error: 第 543 个样本有 0 个SQL。
SELECT character_name FROM movie_cast WHERE movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'Open Water' );
SELECT person_name FROM movie_cast WHERE movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'Pirates of the Caribbean: At World''s End' ) ORDER BY cast_order LIMIT 1;
SELECT p.person_name FROM movie_crew mc JOIN person p ON mc.person_id = p.person_id WHERE mc.department_id IN (SELECT d.department_id FROM department d WHERE d.department_name = 'Crew') AND mc.job = 'Camera Supervisor';
SELECT job FROM movie_crew WHERE person_id IN (   SELECT person_id   FROM person   WHERE person_name = 'Sally Menke' )
Error: 第 548 个样本有 0 个SQL。
SELECT m.title, m.revenue FROM movie m JOIN movie_company mc ON m.movie_id = mc.movie_id WHERE mc.company_id IN (SELECT company_id FROM production_company WHERE company_name = 'DreamWorks');
Error: 第 550 个样本有 0 个SQL。
SELECT genre_name FROM movie_genres JOIN genre ON movie_genres.genre_id = genre.genre_id WHERE movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'Forrest Gump' )
SELECT company_name FROM production_company JOIN movie ON movie_company.movie_id = movie.movie_id WHERE movie.release_date LIKE '2016%' AND movie.runtime > (   SELECT AVG(runtime) * 1.35   FROM movie   WHERE release_date LIKE '2016%' );
SELECT      (COUNT(movie_id) - COUNT(CASE WHEN keyword_name = 'independent film' THEN movie_id END)) / COUNT(movie_id) * 100 AS percentage FROM      movie_keywords WHERE      keyword_name IN ('woman director', 'independent film');
Error: 第 554 个样本有 0 个SQL。
Error: 第 555 个样本有 0 个SQL。
Error: 第 556 个样本有 0 个SQL。
SELECT keyword_name FROM keyword WHERE keyword_id IN (   SELECT movie_keywords.keyword_id   FROM movie_keywords   JOIN movie ON movie_keywords.movie_id = movie.movie_id   WHERE movie.title = 'Finding Nemo' );
SELECT m.title FROM movie m JOIN movie_genres mg ON m.movie_id = mg.movie_id JOIN genre g ON mg.genre_id = g.genre_id WHERE g.genre_name = 'horror' AND m.vote_average > 7;
Error: 第 559 个样本有 0 个SQL。
SELECT l_role.role_name FROM language_role l_role JOIN person p ON l_role.role_id = p.person_id WHERE p.person_name = 'Mark Hammel';
Error: 第 561 个样本有 0 个SQL。
SELECT m.title FROM movie m JOIN movie_cast mc ON m.movie_id = mc.movie_id JOIN person p ON mc.person_id = p.person_id WHERE p.person_name = 'Harrison Ford';
SELECT character_name FROM movie_cast WHERE movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'Pirates of the Caribbean: The Curse of the Black Pearl' ) AND person_id IN (   SELECT person_id   FROM person   WHERE person_name = 'Orlando Bloom' );
SELECT AVG(COUNT(*))  FROM movie_genres  WHERE genre_id IN (SELECT genre_id FROM genre WHERE genre_name = 'horror');
SELECT person_name FROM movie_crew JOIN person ON movie_crew.person_id = person.person_id WHERE movie_id IN (   SELECT movie_id   FROM movie   WHERE title = 'Pirates of the Caribbean: At World\'s End' ) AND job = 'Producer';
SELECT m.title, AVG(m.revenue) AS average_income FROM movie m JOIN movie_keywords mk ON m.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.keyword_id WHERE k.keyword_name = 'paris' GROUP BY m.title;
SELECT COUNT(*)  FROM Method  WHERE Lang = 'en' AND CommentIsXml = 1;
SELECT Name, FullComment, Summary FROM Method WHERE NameTokenized = 'online median filter test median window filling'   AND Name LIKE '%.%';
SELECT SolutionId, SampledAt FROM Method WHERE SampledAt = (SELECT MAX(SampledAt) FROM Method)
SELECT R.Url, R.Stars FROM Repo R WHERE R.Forks = (SELECT MAX(Forks) FROM Repo)
SELECT RepoId FROM Solution GROUP BY RepoId ORDER BY COUNT(Path) DESC LIMIT 1;
SELECT R.Url AS "GitHub Address", R.Stars AS "Amount of Stars" FROM Repo R ORDER BY R.Stars DESC LIMIT 1;
SELECT Path FROM Solution WHERE ProcessedTime = (SELECT MAX(ProcessedTime) FROM Solution);
SELECT Repo.ProcessedTime  FROM Repo  ORDER BY Repo.Watchers DESC  LIMIT 1;
Error: 第 575 个样本有 0 个SQL。
SELECT r.Url, r.ProcessedTime, s.WasCompiled FROM Repo r JOIN Solution s ON r.Id = s.RepoId WHERE r.ProcessedTime = (SELECT MAX(ProcessedTime) FROM Repo)
SELECT NameTokenized FROM Solution WHERE Path = 'maravillas_linq-to-delicious\tasty.sln';
SELECT R.Url FROM Repo R JOIN Solution S ON R.Id = S.RepoId WHERE R.Stars BETWEEN 6000 AND 9000 GROUP BY R.Url ORDER BY COUNT(S.Path) DESC LIMIT 1;
SELECT ApiCalls FROM Repo r JOIN Solution s ON r.Id = s.RepoId WHERE r.Url = 'https://github.com/wallerdev/htmlsharp.git';
SELECT COUNT(DISTINCT Solution.Path)  FROM Solution  JOIN Repo ON Solution.RepoId = Repo.Id  WHERE Repo.Stars IN (     SELECT MAX(Watchers)      FROM Repo  )  ORDER BY Repo.Stars DESC  LIMIT 1, 1;
SELECT AVG(Solution.ProcessedTime)  FROM Solution  JOIN Repo ON Solution.RepoId = Repo.Id  WHERE Repo.Url = 'https://github.com/zphingphong/DiscardCustomerApp.git';
Error: 第 582 个样本有 0 个SQL。
SELECT ApiCalls FROM Method WHERE SolutionId IN (   SELECT Id   FROM Solution   WHERE RepoId IN (     SELECT Id     FROM Repo     WHERE Url LIKE '%mauriciodeamorim_tdd.encontro2\\Tdd.Encontro2.sln%'   )   AND Path = 'mauriciodeamorim_tdd.encontro2\Tdd.Encontro2.sln' )
SELECT COUNT(S.Path)  FROM Solution S  JOIN Repo R ON S.RepoId = R.Id  WHERE R.Url = 'https://github.com/jeffdik/tachy.git' AND S.WasCompiled = 0;
SELECT m.Lang, m.SampledAt, r.ProcessedTime FROM Method m JOIN Solution s ON m.SolutionId = s.Id JOIN Repo r ON s.RepoId = r.Id WHERE m.NameTokenized = 'about box1 dispose';
SELECT SampledAt FROM Method WHERE Name = 'GitHubRepo.Cli.GitHubClientWrapper.GetReleases' AND SolutionId IN (   SELECT Id   FROM Solution   WHERE Path = 'maxild_playground\Playground.sln' )
Error: 第 587 个样本有 0 个SQL。
SELECT FullComment FROM Method WHERE NameTokenized = 'html parser feed' AND NameTokenized LIKE '%.%'
SELECT CommentIsXml FROM Method WHERE Name = 'HtmlSharp.HtmlParser.Feed';
SELECT *  FROM Method  WHERE Summary = 'Write a command to the log';
SELECT COUNT(*)  FROM Solution  WHERE RepoId IN (   SELECT Id    FROM Repo    ORDER BY Stars DESC    LIMIT 1 );
SELECT s.Path FROM Solution s JOIN Repo r ON s.RepoId = r.Id WHERE r.Stars = (SELECT MAX(Stars) FROM Repo);
SELECT Repo.Url FROM Repo JOIN Solution ON Repo.Id = Solution.RepoId WHERE Solution.Id = 12;
SELECT COUNT(*)  FROM Solution  WHERE RepoId IN (SELECT Id FROM Repo WHERE Forks > 1000)  AND WasCompiled = 1;
SELECT s1.Id  FROM Solution s1  JOIN Repo r1 ON s1.RepoId = r1.Id  WHERE s1.Id IN (18, 19)  AND r1.Id IN (   SELECT r2.Id    FROM Repo r2    ORDER BY r2.Watchers DESC    LIMIT 1 )
SELECT COUNT(*)  FROM Solution  WHERE Solution.ProcessedTime = (SELECT MAX(ProcessedTime) FROM Solution)  AND WasCompiled = 1;
SELECT Repo.ProcessedTime FROM Solution JOIN Repo ON Solution.RepoId = Repo.Id WHERE Solution.Path = 'jeffdik_tachy\src\Tachy.sln';
SELECT Url FROM Repo WHERE Id = (SELECT RepoId FROM Solution WHERE Id = 9);
SELECT s.Path  FROM Solution s  JOIN Repo r ON s.RepoId = r.Id  WHERE r.Url = 'https://github.com/maxild/playground.git';
SELECT COUNT(*)  FROM Repo  WHERE Stars > 200 AND EXISTS (   SELECT 1    FROM Solution    WHERE RepoId = Repo.Id AND ProcessedTime < 636439500080712000 )
SELECT s.Id FROM Solution s JOIN Repo r ON s.RepoId = r.Id ORDER BY r.Forks DESC LIMIT 3;
Error: 第 602 个样本有 0 个SQL。
SELECT ROUND((Forks(Solution.ID = 18) - Forks(Solution.ID = 19)) / Forks(Solution.ID = 19) * 100, 2) AS percentage FROM Repo JOIN Solution ON Repo.Id = Solution.RepoId WHERE Solution.Id IN (18, 19);
SELECT Lang  FROM Method  WHERE Name = 'PixieTests.SqlConnectionLayerTests.TestSqlCreateGuidColumn';
Error: 第 605 个样本有 0 个SQL。
Error: 第 606 个样本有 0 个SQL。
SELECT NameTokenized  FROM Method  WHERE Name = 'Supay.Irc.Messages.KnockMessage.GetTokens';
Error: 第 608 个样本有 0 个SQL。
SELECT COUNT(Solution.Id)  FROM Solution  WHERE Solution.RepoId IN (SELECT Repo.Id FROM Repo WHERE Repo.Stars = 8094);
SELECT Path FROM Solution JOIN Method ON Solution.Id = Method.SolutionId WHERE Name = 'IQ.Data.DbQueryProvider.CanBeEvaluatedLocally';
SELECT s.ProcessedTime FROM Solution s JOIN Method m ON s.Id = m.SolutionId WHERE m.NameTokenized = 'interp parser expr';
SELECT RepoId FROM Method WHERE Name = 'SCore.Poisson.ngtIndex'
SELECT Path FROM Solution WHERE Name = 'ExportToRTF.RTFStyleSheet.H6Write';
Error: 第 614 个样本有 0 个SQL。
SELECT R.Url FROM Repo R JOIN Solution S ON R.Id = S.RepoId GROUP BY R.Url ORDER BY COUNT(S.Id) DESC LIMIT 1;
SELECT COUNT(Solution.Id)  FROM Solution  JOIN Repo ON Solution.RepoId = Repo.Id  WHERE Repo.Forks = 1445;
SELECT Path, COUNT(*) as Count FROM Solution JOIN Method ON Solution.SolutionId = Method.SolutionId WHERE Method.Lang = 'zh-cn' GROUP BY Path ORDER BY Count DESC LIMIT 1;
SELECT Repo.Watchers FROM Solution JOIN Repo ON Solution.RepoId = Repo.Id WHERE Solution.Id = 338082;
SELECT COUNT(Solution.Id)  FROM Solution  WHERE Solution.RepoId IN (SELECT Repo.Id FROM Repo WHERE Stars = 189) AND WasCompiled = 0;
SELECT Path FROM Solution JOIN Repo ON Solution.RepoId = Repo.Id JOIN Method ON Solution.Id = Method.SolutionId WHERE Method.Name = 'Mosa.Platform.x86.Instructions.IMul.EmitLegacy';
SELECT Solution.ProcessedTime FROM Method JOIN Solution ON Method.SolutionId = Solution.Id WHERE Method.NameTokenized = 't jadwal entity get single mpic';
Error: 第 622 个样本有 0 个SQL。
SELECT s.Path FROM Method m JOIN Solution s ON m.SolutionId = s.Id WHERE m.Name = 'Your Method Name' AND m.Summary = 'Refetches the Entity from the persistent storage. Refetch is used to re-load an Entity which is marked "Out-of-sync", due to a save action. Refetching an empty Entity has no effect.';
SELECT COUNT(s.Id)  FROM Solution s  JOIN Repo r ON s.RepoId = r.Id  WHERE r.Stars = 3060;
SELECT s.Path FROM Solution s JOIN Method m ON s.Id = m.SolutionId WHERE m.Lang = 'sw' ORDER BY COUNT(CASE WHEN m.Lang = 'sw' THEN 1 ELSE NULL END) DESC LIMIT 1;
SELECT      DIVIDE(         MULTIPLY(             SUBTRACT(                 SUM(CASE WHEN Solution.Id = 83855 THEN Repo.Watchers ELSE 0 END),                 SUM(CASE WHEN Solution.Id = 1502 THEN Repo.Watchers ELSE 0 END)             ),             100         ),         SUM(CASE WHEN Solution.Id = 1502 THEN Repo.Watchers ELSE 0 END)     ) AS percentage FROM      Solution INNER JOIN      Repo ON Solution.RepoId = Repo.Id WHERE      Solution.Id IN (83855, 1502);
SELECT      DIVIDE(MULTIPLY(SUBTRACT(SUM(S.SolutionId = 51424), SUM(S.SolutionId = 167053)), 100), SUM(S.SolutionId = 167053)) * 100 AS Percentage FROM      Repo R     JOIN Solution S ON R.Id = S.RepoId WHERE      S.Id IN (51424, 167053);
SELECT    DIVIDE(MULTIPLY(SUBTRACT(SUM(Solution.Id = 53546), SUM(Solution.Id = 1502)), 100), SUM(Solution.Id = 1502)) AS percentage FROM    Solution WHERE    Solution.Id IN (53546, 1502)
Error: 第 629 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Solution  WHERE RepoId IN (SELECT Id FROM Repo WHERE Url = 'https://github.com/derickbailey/presentations-and-training.git');
SELECT AVG(s.ProcessedTime)  FROM Solution s  JOIN Repo r ON s.RepoId = r.Id  WHERE r.Forks = (SELECT MAX(Forks) FROM Repo);
SELECT S.Path FROM Solution S JOIN Method M ON S.Id = M.SolutionId WHERE M.Lang = 'it';
SELECT Path FROM Solution WHERE Id IN (   SELECT SolutionId   FROM Method   WHERE Name = 'spinachLexer.mT__55' )
SELECT m.Name, s.Id FROM Method m JOIN Solution s ON m.SolutionId = s.Id JOIN Repo r ON s.RepoId = r.Id WHERE m.Lang = 'en' AND r.Id = 1093;
Error: 第 635 个样本有 0 个SQL。
SELECT R.Id FROM Solution S JOIN Repo R ON S.RepoId = R.Id JOIN Method M ON S.Id = M.SolutionId WHERE M.Lang = 'ro';
SELECT SolutionId FROM Method WHERE NameTokenized = 'crc parameters get hash code';
Error: 第 638 个样本有 0 个SQL。
SELECT Solution.Id  FROM Solution  WHERE RepoId IN (   SELECT Id    FROM Repo    WHERE ProcessedTime = '636430969128176000' )
SELECT R.Url FROM Repo R JOIN Solution S ON R.Id = S.RepoId WHERE S.ProcessedTime = (SELECT MAX(ProcessedTime) FROM Solution);
SELECT s.Id FROM Solution s JOIN Repo r ON s.RepoId = r.Id WHERE r.Forks > (r.Watchers / 2);
SELECT MULTIPLY(DIVIDE((SELECT Forks FROM Repo WHERE RepoId = (SELECT RepoId FROM Solution WHERE Id = 104086)), (SELECT Stars FROM Repo WHERE RepoId = (SELECT RepoId FROM Solution WHERE Id = 104086))), 100) AS Percentage
SELECT Id FROM Repo ORDER BY Stars DESC LIMIT 1;
SELECT Path  FROM Solution  WHERE Id IN (SELECT SolutionId               FROM Method               WHERE Name = 'HtmlSharp.HtmlParser.Feed');
SELECT Repo.Forks FROM Solution JOIN Repo ON Solution.RepoId = Repo.Id WHERE Solution.Id = 35;
SELECT s.Id FROM Solution s JOIN Repo r ON s.RepoId = r.Id ORDER BY r.Watchers DESC LIMIT 1;
Error: 第 647 个样本有 0 个SQL。
SELECT COUNT(*) as MethodCount, WasCompiled as NeedsCompilation FROM Method WHERE SolutionId = 1;
SELECT      ROUND(MULTIPLY(DIVIDE(SUM(Solution.WasCompiled = 0), COUNT(Solution.Id)), 100), 2) AS percentage FROM      Method  WHERE      Method.CommentIsXml = 1     AND Solution.Id IN (SELECT MethodId FROM MethodParameter)     AND Solution.RepoId IN (SELECT Id FROM Repo);
SELECT Name FROM Method WHERE SolutionId IN (   SELECT Id   FROM Solution   WHERE Path = 'wallerdev_htmlsharp\HtmlSharp.sln' )
SELECT DIVIDE(MULTIPLY(COUNT(Stars>2000), 100), COUNT(Id)) AS percentage FROM Repo WHERE Stars > 2000;
SELECT Repo.Url  FROM Solution  JOIN Repo ON Solution.RepoId = Repo.Id  WHERE Solution.Id = 1;
SELECT Repo.Id FROM Repo WHERE Repo.Stars = 21 ORDER BY Repo.Forks DESC LIMIT 1;
SELECT      ROUND(COUNT(*) / (SELECT COUNT(*) FROM Method WHERE CommentIsXml = 1) * 100, 2) AS Percentage FROM      Method WHERE      CommentIsXml = 1 AND Lang = 'en';
SELECT Path FROM Solution WHERE RepoId IN (   SELECT Id   FROM Repo ) AND Id IN (   SELECT SolutionId   FROM Method   WHERE NameTokenized LIKE '%html parser feed%' )
SELECT s.Id FROM Solution s JOIN Repo r ON s.RepoId = r.Id WHERE r.Forks = 238;
Error: 第 657 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Solution  WHERE SolutionId IN (   SELECT RepoId    FROM Repo    WHERE Stars * 1/3 > Forks )
SELECT Solution.Path  FROM Method  WHERE FullComment = 'Feeds data into the parser';
SELECT COUNT(*)  FROM Method  WHERE SolutionId IN (SELECT Id FROM Solution WHERE RepoId = 3)  AND CommentIsXml = 1;
SELECT      MULTIPLY(         DIVIDE(             SUM(Solution.WasCompiled = 0),              COUNT(Solution.Id)         ),          100     ) AS percentage FROM      Solution JOIN      Method ON Solution.RepoId = Method.SolutionId WHERE      Method.Lang = 'en' AND Solution.WasCompiled = 0;
SELECT DIVIDE(MULTIPLY(SUBTRACT(SUM(CASE WHEN Solution.Id = 1 THEN Repo.Stars ELSE 0 END), SUM(CASE WHEN Solution.Id = 2 THEN Repo.Stars ELSE 0 END)), 100), SUM(CASE WHEN Solution.Id = 2 THEN Repo.Stars ELSE 0 END)) AS Percentage FROM Solution JOIN Repo ON Solution.RepoId = Repo.Id WHERE Solution.Id IN (1, 2);
SELECT COUNT(*)  FROM Solution  WHERE Solution.RepoId IN (SELECT Id FROM Repo WHERE Stars > (Forks / 3));
SELECT SUBSTRING_INDEX(Name, '.', 2) AS Task FROM Method_100k WHERE Id = 2;
Error: 第 665 个样本有 0 个SQL。
SELECT Url AS "link" FROM Repo WHERE Id = (SELECT RepoId FROM Solution WHERE WasCompiled = 1 ORDER BY Watchers DESC LIMIT 1);
SELECT FullComment FROM Method WHERE Lang = 'cs' AND Name LIKE '%.%';
SELECT Solution.Path FROM Method JOIN Solution ON Method.SolutionId = Solution.Id WHERE Method.Id = 3;
Error: 第 669 个样本有 0 个SQL。
SELECT s.ProcessedTime, COUNT(m.Name)  FROM Solution s  JOIN Method m ON s.Id = m.SolutionId  WHERE s.Id = 1;
SELECT COUNT(*)  FROM Method m  WHERE EXISTS (   SELECT 1    FROM Method m2    WHERE m2.SolutionId = m.SolutionId    AND m2.NameTokenized LIKE 'query language%'    AND m2.NameTokenized != m.NameTokenized  )
SELECT m.Name, m.FullComment, s.Path FROM Method m JOIN MethodParameter mp ON m.Id = mp.MethodId JOIN Solution s ON m.SolutionId = s.Id WHERE m.Id = 10;
SELECT COUNT(*)  FROM Method  WHERE SolutionId IN (SELECT Id FROM Solution WHERE RepoId = 150)  AND FullComment IS NULL AND Summary IS NULL;
SELECT CommentIsXml  FROM Method_100k  WHERE Id = 50 AND SolutionId IN (   SELECT Id    FROM Solution    WHERE Path = 'managedfusion_managedfusion\ManagedFusion.sln' )
SELECT Name FROM Method WHERE NameTokenized = 'string extensions to pascal case';
SELECT NameTokenized FROM Method WHERE Name = 'Sky.Excel.ExcelBook.TypeConvert';
SELECT COUNT(DISTINCT Path) FROM Repo, Solution WHERE Repo.Url = 'https://github.com/jeffdik/tachy.git' AND Repo.Id = Solution.RepoId;
SELECT r.Watchers FROM Repo r JOIN Solution s ON r.Id = s.RepoId WHERE s.Path = 'maff_se3ue7\US7.sln';
SELECT R.Url  FROM Repo R  JOIN Solution S ON R.Id = S.RepoId  WHERE S.WasCompiled = 1  LIMIT 5;
SELECT Path  FROM Solution  WHERE NameTokenized = 'matrix multiply';
SELECT COUNT(*)  FROM Method  WHERE CommentIsXml = 1 AND Url = 'https://github.com/dogeth/vss2git.git';
SELECT Path FROM Solution WHERE SampledAt = '636431758961741000' LIMIT 5;
SELECT R.Url FROM Repo R JOIN Solution S ON R.Id = S.RepoId WHERE S.Path = 'joeyrobert_bloomfilter\DataTypes.BloomFilter.sln';
SELECT Name  FROM Method  WHERE Path = 'graffen_NLog.Targets.Syslog\src\NLog.Targets.Syslog.sln'  AND SolutionId IN (SELECT Id FROM Solution WHERE Path = 'graffen_NLog.Targets.Syslog\src\NLog.Targets.Syslog.sln');
SELECT NameTokenized  FROM Solution  WHERE Path = 'jurney_P4Backup\P4Backup\P4Backup.sln';
SELECT Repo.Url FROM Method JOIN Repo ON Method.SolutionId = Solution.Id JOIN Solution ON Method.SolutionId = Solution.Id WHERE Method.Summary = 'A test for Decompose';
Error: 第 687 个样本有 0 个SQL。
SELECT COUNT(DISTINCT Solution.Path)  FROM Repo  JOIN Solution ON Repo.Id = Solution.RepoId  WHERE Repo.Stars = 111 AND Repo.Forks = 58 AND Repo.Watchers = 111;
SELECT AVG(S.ProcessedTime)  FROM Solution S  JOIN Repo R ON S.RepoId = R.Id  WHERE R.Stars = 254 AND R.Forks = 88 AND R.Watchers = 254;
SELECT COUNT(DISTINCT Lang)  FROM Method, Repo  WHERE Method.Url = Repo.Url AND Repo.Url = 'https://github.com/managedfusion/managedfusion.git';
SELECT COUNT(*)  FROM trains  WHERE direction = 'east';
SELECT COUNT(*)  FROM cars  WHERE train_id = 1;
SELECT shape FROM cars WHERE train_id = 1 AND position = 4;
SELECT DISTINCT t.id  FROM trains t  WHERE t.id IN (SELECT train_id FROM cars WHERE shape IN ('ellipse', 'bucket'));
SELECT COUNT(*)  FROM cars  WHERE train_id = 1 AND roof = 'none';
SELECT id  FROM cars  WHERE train_id = 1 AND wheels = 2;
SELECT COUNT(*)  FROM trains  WHERE direction = 'east'  AND id IN (SELECT train_id FROM cars WHERE shape IN ('ellipse', 'bucket'));
SELECT t.id FROM trains t JOIN cars c ON t.id = c.train_id WHERE t.direction = 'east' AND COUNT(c.id) < 4 GROUP BY t.id
SELECT c.id  FROM cars c  JOIN trains t ON c.train_id = t.id  WHERE c.sides = 'double' AND t.direction = 'west';
SELECT COUNT(*)  FROM trains  JOIN cars ON trains.id = cars.train_id  WHERE direction = 'east' AND len > 2;
SELECT DISTINCT t.direction FROM trains t JOIN cars c ON t.id = c.train_id WHERE c.load_num = 0;
SELECT direction FROM trains WHERE id IN (   SELECT train_id   FROM cars   WHERE shape = 'ellipse' )
SELECT COUNT(*) FROM cars WHERE len = 'short' AND train_id IN (   SELECT id   FROM trains   WHERE direction = 'east' )
SELECT shape FROM cars WHERE position = 1 AND train_id IN (   SELECT id   FROM trains   WHERE direction = 'east' )
SELECT COUNT(*)  FROM cars  WHERE train_id IN (SELECT id FROM trains WHERE direction = 'east')  AND roof = 'flat';
SELECT COUNT(*) FROM cars WHERE train_id IN (   SELECT id   FROM trains   WHERE direction = 'east' ) AND roof = 'flat' AND load_shape = 'circle';
SELECT direction, MAX(rectCarsNum) AS maxRectCarsNum FROM (   SELECT t.direction, COUNT(*) AS rectCarsNum   FROM cars c   JOIN trains t ON c.train_id = t.id   WHERE c.shape = 'rectangle'   GROUP BY t.direction ) AS temp GROUP BY direction ORDER BY maxRectCarsNum DESC;
SELECT DISTINCT t.direction  FROM trains t  JOIN cars c ON t.id = c.train_id  WHERE c.len = 'short' AND c.position = 4;
SELECT AVG(calculation)  FROM (   SELECT DIVIDE(count(id), count(train_id)) AS calculation    FROM cars    INNER JOIN trains ON cars.train_id = trains.id    WHERE trains.direction = 'east' ) AS subquery;
SELECT    MULTIPLY(DIVIDE(count(c.train_id), count(t.id)), 100) AS percentage FROM    cars c    JOIN trains t ON c.train_id = t.id WHERE    c.shape IN ('bucket', 'ellipse') AND    t.direction = 'east';
SELECT COUNT(*) FROM cars WHERE len = 'short' AND shape = 'hexagon';
SELECT COUNT(*)  FROM trains  WHERE direction = 'west';
SELECT load_shape FROM cars WHERE len = 'short' AND shape = 'ellipse';
SELECT t.id FROM trains t WHERE t.direction = 'east';
SELECT COUNT(*)  FROM cars  WHERE len = 'long';
SELECT direction FROM trains GROUP BY direction ORDER BY COUNT(id) DESC LIMIT 1;
SELECT COUNT(*) FROM trains JOIN cars ON trains.id = cars.train_id WHERE direction = 'east' GROUP BY trains.id HAVING COUNT(*) >= 4;
SELECT direction FROM trains WHERE id IN (   SELECT train_id   FROM cars   WHERE position = 2 AND shape = 'rectangle' ) GROUP BY direction ORDER BY COUNT(id) DESC LIMIT 1;
SELECT COUNT(*) FROM cars JOIN trains ON cars.train_id = trains.id WHERE trains.direction = 'west' AND cars.sides = 'double' AND cars.position = 3;
SELECT COUNT(*)  FROM cars c  JOIN trains t ON c.train_id = t.id  WHERE t.direction = 'east' AND c.position = 1 AND c.shape = 'rectangular';
SELECT COUNT(*)  FROM cars  WHERE train_id IN (SELECT id FROM trains WHERE direction = 'west')  AND roof = 'none'  GROUP BY train_id  HAVING COUNT(*) <= 1;
SELECT direction FROM trains WHERE id IN (   SELECT train_id   FROM cars   GROUP BY train_id   HAVING COUNT(*) = 3 ) ORDER BY COUNT(*) DESC LIMIT 1;
SELECT COUNT(*) FROM trains JOIN cars ON trains.id = cars.train_id WHERE direction = 'east' AND position = 1 AND load_num = 3;
SELECT COUNT(*) FROM cars WHERE train_id IN (   SELECT id   FROM trains   WHERE direction = 'east' ) AND position = 'trailPosi' AND sides = 'double';
SELECT t.direction  FROM trains t  WHERE t.id IN (   SELECT c.train_id    FROM cars c    WHERE c.load_num = 0 );
SELECT t.direction  FROM trains t  JOIN cars c ON t.id = c.train_id  WHERE c.shape = 'diamond' AND c.position = 2;
SELECT COUNT(*) FROM cars WHERE train_id IN (   SELECT id   FROM trains   WHERE direction = 'west' ) AND wheels = 3 AND roof = 'jagged';
SELECT t.direction  FROM trains t  WHERE t.id IN (SELECT c.train_id                 FROM cars c                 WHERE c.position <= 2);
SELECT      t.direction,      MULTIPLY(DIVIDE(COUNT(c.train_id), COUNT(c.train_id)), 100) AS percentage FROM      cars c JOIN      trains t ON c.train_id = t.id GROUP BY      t.direction HAVING      COUNT(c.train_id) >= 4
SELECT    load_shape,    COUNT(*) as total_trains,    COUNT(CASE WHEN direction = 'east' THEN 1 END) as east_trains,    ROUND(COUNT(CASE WHEN direction = 'east' THEN 1 END) * 100.0 / COUNT(*), 2) as percentage_east FROM    cars  WHERE    position = 1  GROUP BY    load_shape  ORDER BY    total_trains DESC;
SELECT c.Character Name FROM characters c JOIN movie m ON c.MovieID = m.MovieID WHERE m.Title = 'Look Who\'s Talking';
SELECT c.Character_Name FROM characters c JOIN movie m ON c.MovieID = m.MovieID WHERE m.Title = 'Batman' ORDER BY c.screentime DESC LIMIT 1;
SELECT a.Name FROM actors a JOIN characters c ON a.ActorID = c.ActorID JOIN movies m ON c.MovieID = m.MovieID WHERE c.Character_Name = 'Joker' AND m.Title = 'Batman';
SELECT a.Name FROM actor a JOIN characters c ON a.ActorID = c.ActorID JOIN movie m ON c.MovieID = m.MovieID WHERE m.Title = 'Batman';
SELECT m.Title FROM characters c JOIN movie m ON c.MovieID = m.MovieID WHERE c.Character_Name = 'Dr. Archibald ''Moonlight'' Graham';
SELECT m.Title FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.Name = 'Tom Cruise';
SELECT COUNT(*)  FROM movie m  JOIN characters c ON m.MovieID = c.MovieID  JOIN actor a ON c.ActorID = a.ActorID  WHERE a.Name = 'Morgan Freeman' AND m.MPAA_Rating = 'PG';
SELECT m.Title FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.Name = 'Tom Cruise' ORDER BY m.Rating DESC LIMIT 1;
SELECT c.Character Name FROM characters c JOIN movie m ON c.MovieID = m.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.Name = 'Tom Cruise' AND m.Title = 'Born on the Fourth of July';
Error: 第 740 个样本有 0 个SQL。
SELECT a.Name FROM actors a JOIN characters c ON a.ActorID = c.ActorID JOIN movies m ON c.MovieID = m.MovieID WHERE m.Title = 'Batman' ORDER BY a.Height DESC LIMIT 1;
SELECT COUNT(*) FROM movie WHERE MovieID IN (   SELECT MovieID   FROM characters   WHERE ActorID IN (     SELECT ActorID     FROM actor     WHERE Gender = 'Male' AND Ethnicity = 'African American'   ) );
SELECT AVG(m.Rating)  FROM movie m  JOIN characters c ON m.MovieID = c.MovieID  JOIN actor a ON c.ActorID = a.ActorID  WHERE a.Name = 'Tom Cruise';
SELECT (100 * ((MAX(screentime) - MIN(screentime)) / MIN(screentime))) AS Percentage FROM characters WHERE MovieID IN (   SELECT MovieID   FROM movie   WHERE Title = 'Batman' ) ORDER BY screentime DESC, MovieID LIMIT 1;
SELECT Title FROM movie WHERE Budget = (SELECT MAX(Budget) FROM movie);
SELECT m.MPAA_Rating FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actors a ON c.ActorID = a.ActorID WHERE a.Name LIKE '%Peter Quill%';
SELECT c.Character_Name FROM characters c JOIN movie m ON c.MovieID = m.MovieID WHERE m.Genre = 'Thriller' AND m.Rating = (SELECT MAX(Rating) FROM movie) AND c.creditOrder = '1';
SELECT a.Name FROM characters c JOIN actors a ON c.ActorID = a.ActorID WHERE c.MovieID IN (SELECT MovieID FROM movie WHERE Title = 'Batman') ORDER BY c.screentime DESC LIMIT 1;
SELECT COUNT(*) FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.NetWorth = (SELECT MAX(NetWorth) FROM actor);
Error: 第 750 个样本有 0 个SQL。
SELECT Date of Birth FROM actor WHERE ActorID IN (   SELECT ActorID   FROM characters   WHERE Character Name = 'Sully' );
SELECT Birth_City FROM actors WHERE ActorID IN (   SELECT ActorID   FROM characters   WHERE Character_Name = 'Gabriel Martin' );
SELECT Biography  FROM actor  WHERE ActorID IN (   SELECT ActorID    FROM characters    WHERE Character Name = 'Michael Moscovitz' );
SELECT Height FROM actor WHERE ActorID IN (   SELECT ActorID   FROM characters   WHERE Character Name = 'Lurch' );
SELECT Character_Name FROM characters WHERE MovieID IN (   SELECT MovieID   FROM movie   WHERE Title = 'G.I. Joe: The Rise of Cobra' ) AND creditOrder = 3;
SELECT a.Name FROM characters c JOIN actor a ON c.ActorID = a.ActorID WHERE c.MovieID IN (   SELECT MovieID   FROM movie   WHERE Title = 'American Hustle' ) AND c.creditOrder = '2';
SELECT a.Name FROM characters c JOIN movie m ON c.MovieID = m.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE c.creditOrder = '1' AND m.Release Date = '2015-10-26';
Error: 第 758 个样本有 0 个SQL。
SELECT (COUNT(DISTINCT a.ActorID) / COUNT(DISTINCT c.ActorID)) * 100 FROM characters c JOIN actor a ON c.ActorID = a.ActorID WHERE c.MovieID IN (   SELECT MovieID   FROM movie   WHERE Title = 'Dawn of the Planet of the Apes' ) AND a.Date of Birth > '1970/1/1';
SELECT MovieID FROM movie WHERE Budget = 15000000 AND Rating BETWEEN 7 AND 8;
Error: 第 761 个样本有 0 个SQL。
SELECT Name FROM actor WHERE ActorID = 439 AND Gender = 'Male' AND Ethnicity = 'White';
SELECT m.Genre FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.Birth City = 'New York City' AND m.Rating > 5;
SELECT COUNT(*)  FROM movie  JOIN characters ON movie.MovieID = characters.MovieID  JOIN actor ON characters.ActorID = actor.ActorID  WHERE movie.Genre = 'Romance' AND actor.Name = 'John Travolta';
Error: 第 765 个样本有 0 个SQL。
SELECT m.Genre FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE m.MPAA Rating = 'PG' AND a.NetWorth = (SELECT MAX(NetWorth) FROM actor);
Error: 第 767 个样本有 0 个SQL。
SELECT COUNT(*) FROM actor JOIN characters ON actor.ActorID = characters.ActorID JOIN movie ON characters.MovieID = movie.MovieID WHERE Gender = 'Male' AND Birth Country = 'USA' AND movie.Title = 'Ghost';
SELECT m.MPAA_Rating, m.Title FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.Name = 'Leonardo DiCaprio' ORDER BY m.Budget DESC LIMIT 1;
SELECT a.NetWorth, a.Date of Birth FROM actor a JOIN characters c ON a.ActorID = c.ActorID JOIN movie m ON c.MovieID = m.MovieID WHERE m.Title = 'Die Hard 2' AND a.Height (Inches) BETWEEN 60 AND 65;
SELECT m.Runtime FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.Ethnicity = 'African American' AND a.Date of Birth = '1954-12-28';
Error: 第 772 个样本有 0 个SQL。
SELECT m.Gross FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE m.Genre = 'Comedy' AND m.Rating < 7 AND a.NetWorth > '375,000,000.00';
SELECT m.Runtime FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.Name = 'Jackie Chan' AND m.Rating > 7;
SELECT ROUND(((COUNT(DISTINCT a.ActorID)                  WHERE a.NetWorth > '$400,000,000.00')                 / COUNT(DISTINCT m.MovieID)                 * 100), 2) AS Percentage FROM movie m JOIN characters c ON m.MovieID = c.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE m.Genre = 'Drama';
SELECT c.Character Name FROM characters c JOIN movie m ON c.MovieID = m.MovieID JOIN actor a ON c.ActorID = a.ActorID WHERE a.Gender = 'Female' AND a.Birth City = 'Sherman Oaks' AND m.Title = 'Bruce Almighty' AND a.Height (Inches) > (SELECT AVG(Height (Inches)) FROM actor) * 0.5;
SELECT COUNT(*)  FROM twitter  WHERE Lang = 'en';
SELECT text FROM twitter WHERE IsReshare = 'TRUE';
SELECT COUNT(*)  FROM twitter  WHERE Reach > 1000;
SELECT COUNT(*)  FROM twitter  WHERE Sentiment > 0 AND Weekday = 'Thursday';
SELECT text FROM twitter WHERE Likes = (SELECT MAX(Likes) FROM twitter);
SELECT City FROM location WHERE Country = 'Argentina';
SELECT COUNT(*)  FROM twitter  WHERE LocationID IN (   SELECT LocationID    FROM location    WHERE Country = 'Argentina' )  AND UserID IN (   SELECT UserID    FROM user )
SELECT c.City FROM user u JOIN twitter t ON u.UserID = t.UserID JOIN location l ON t.LocationID = l.LocationID WHERE l.Country = 'Argentina' GROUP BY c.City ORDER BY COUNT(t.TweetID) DESC LIMIT 1;
SELECT COUNT(*)  FROM twitter  WHERE IsReshare = 'TRUE' AND LocationID IN (   SELECT LocationID    FROM location    WHERE City = 'Buenos Aires' )
SELECT text FROM twitter WHERE LocationID IN (   SELECT LocationID   FROM location   WHERE City = 'Buenos Aires' ) AND Sentiment > 0;
SELECT Country  FROM location  WHERE LocationID IN (   SELECT LocationID    FROM twitter    WHERE Likes = (SELECT MAX(Likes) FROM twitter) )
SELECT Country FROM (   SELECT Country, COUNT(*) as TotalTweets   FROM twitter   WHERE Sentiment > 0   GROUP BY Country ) as PositiveTweets WHERE TotalTweets = (   SELECT MAX(TotalTweets)   FROM (     SELECT Country, COUNT(*) as TotalTweets     FROM twitter     WHERE Sentiment > 0     GROUP BY Country   ) as PositiveTweets )
SELECT COUNT(*)  FROM twitter  WHERE LocationID IN (SELECT LocationID FROM location WHERE City = 'Buenos Aires')  AND Weekday = 'Thursday';
SELECT COUNT(*)  FROM user  WHERE UserID IN (SELECT UserID FROM twitter WHERE Likes > 1000)  AND Gender = 'Male';
SELECT COUNT(t.TweetID)  FROM twitter t  JOIN user u ON t.UserID = u.UserID  WHERE u.Gender = 'Male';
SELECT u.Gender FROM user u JOIN twitter t ON u.UserID = t.UserID WHERE t.Reach = (SELECT MAX(Reach) FROM twitter)
SELECT COUNT(*) FROM twitter WHERE LocationID IN (   SELECT LocationID   FROM location   WHERE Country = 'Argentina' ) AND UserID IN (   SELECT UserID   FROM user   WHERE Gender = 'Male' );
SELECT text FROM twitter WHERE UserID IN (   SELECT UserID   FROM user   WHERE Gender = 'Male' ) AND LocationID IN (   SELECT LocationID   FROM location   WHERE City = 'Buenos Aires' );
SELECT AVG(tweets_per_city)  FROM (   SELECT COUNT(TweetID) / COUNT(DISTINCT City) AS tweets_per_city    FROM twitter    JOIN location ON twitter.LocationID = location.LocationID    WHERE location.Country = 'Argentina' ) AS subquery;
SELECT (COUNT(t.TweetID) / COUNT(u.UserID)) * 100 FROM twitter t JOIN user u ON t.UserID = u.UserID WHERE t.Sentiment > 0 AND u.Gender = 'Male';
SELECT COUNT(*) FROM user WHERE Gender = 'Unknown';
SELECT COUNT(DISTINCT State)  FROM social_media.location  WHERE Country = 'United Kingdom';
SELECT StateCode FROM location WHERE State = 'Gwynedd';
SELECT LocationID FROM location WHERE State = 'West Sussex';
SELECT COUNT(*)  FROM twitter  WHERE IsReshare = 'TRUE' AND LocationID IN (SELECT LocationID FROM location WHERE State = 'Texas');
SELECT l.Country FROM social_media.twitter t JOIN social_media.location l ON t.LocationID = l.LocationID WHERE t.Reach = 547851;
SELECT COUNT(*)  FROM twitter  WHERE Sentiment > 0 AND LocationID IN (SELECT LocationID FROM location WHERE StateCode = 'HN');
SELECT text  FROM twitter  WHERE LocationID IN (   SELECT LocationID    FROM location    WHERE State = 'Connecticut' )  ORDER BY Klout DESC  LIMIT 1;
SELECT COUNT(*) FROM user u JOIN twitter t ON u.UserID = t.UserID JOIN location l ON t.LocationID = l.LocationID WHERE u.Gender = 'Female' AND l.State = 'Wisconsin';
SELECT u.Gender FROM user u JOIN twitter t ON u.UserID = t.UserID WHERE t.TweetID = 'tw-715909161071091712';
SELECT City  FROM location  JOIN twitter ON location.LocationID = twitter.LocationID  WHERE text = 'One of our favorite stories is @FINRA_News''s move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a';
SELECT u.Gender FROM user u JOIN twitter t ON u.UserID = t.UserID WHERE t.RetweetCount = 535;
SELECT u.Gender FROM user u JOIN twitter t ON u.UserID = t.UserID WHERE t.Weekday = 'Wednesday' AND t.Klout = (SELECT MAX(Klout) FROM twitter);
SELECT u.Gender FROM user u JOIN twitter t ON u.UserID = t.UserID WHERE t.Likes = (SELECT MAX(Likes) FROM twitter);
SELECT COUNT(TweetID) FROM twitter WHERE LocationID IN (   SELECT LocationID   FROM location   WHERE State = 'Michigan' ) AND Weekday = 'Thursday';
SELECT StateCode FROM twitter WHERE TweetID = 'tw-685681052912873473';
SELECT ROUND((COUNT(u.UserID) / COUNT(t.UserID)) * 100, 2) FROM user u JOIN twitter t ON u.UserID = t.UserID JOIN location l ON t.LocationID = l.LocationID WHERE l.State = 'Florida' AND u.Gender = 'Male';
SELECT ROUND((COUNT(t.TweetID) / (SELECT COUNT(*) FROM twitter)) * 100, 2) AS Percentage FROM twitter t JOIN location l ON t.LocationID = l.LocationID WHERE l.State = 'California' AND t.Sentiment > 0;
Error: 第 815 个样本有 0 个SQL。
SELECT COUNT(DISTINCT UserID) FROM twitter WHERE text = 'Happy New Year to all those AWS instances of ours!';
SELECT COUNT(TweetID)  FROM twitter  WHERE Lang = 'en';
SELECT LocationID FROM twitter WHERE TweetID = 'tw-682714048199311366';
SELECT COUNT(*)  FROM twitter  WHERE Weekday = 'Wednesday';
SELECT text  FROM twitter  WHERE Weekday = 'Thursday';
SELECT u.Gender FROM user u JOIN twitter t ON u.UserID = t.UserID WHERE t.TweetID = 'tw-682714583044243456';
SELECT text FROM twitter WHERE UserID IN (SELECT UserID FROM user WHERE Gender = 'Unknown');
SELECT COUNT(t.TweetID) FROM twitter t JOIN user u ON t.UserID = u.UserID WHERE u.Gender = 'Male';
SELECT u.Gender, COUNT(t.text) as Total_Tweets FROM user u JOIN twitter t ON u.UserID = t.UserID WHERE t.Lang = 'en' GROUP BY u.Gender ORDER BY Total_Tweets DESC LIMIT 1;
SELECT u.Gender  FROM user u  JOIN twitter t ON u.UserID = t.UserID  WHERE t.RetweetCount > 30;
SELECT COUNT(*) FROM user JOIN twitter ON user.UserID = twitter.UserID WHERE user.Gender = 'Female' AND twitter.IsReshare = 'TRUE';
SELECT l.Country FROM social_media.twitter t JOIN social_media.location l ON t.LocationID = l.LocationID GROUP BY l.Country ORDER BY SUM(t.Likes) DESC LIMIT 1;
SELECT Country  FROM social_media.twitter  WHERE TweetID = 'tw-682723090279841798';
SELECT text  FROM social_media.twitter  WHERE LocationID IN (   SELECT LocationID    FROM social_media.location    WHERE Country = 'Australia' )
SELECT text  FROM twitter  WHERE LocationID IN (SELECT LocationID                       FROM location                       WHERE City = 'Rawang'                       AND State = 'Selangor'                       AND Country = 'Malaysia');
SELECT Lang  FROM twitter  WHERE LocationID IN (   SELECT LocationID    FROM location    WHERE Country = 'Brazil' );
SELECT Country FROM social_media.tweet WHERE Sentiment > 0 GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1;
SELECT SUM(Likes)  FROM twitter  WHERE Lang = 'ru' AND UserID IN (SELECT UserID FROM user WHERE Gender = 'Male');
SELECT AVG(COUNT(TweetID) / COUNT(UserID)) * 7 / 31 FROM user JOIN twitter ON user.UserID = twitter.UserID WHERE user.Gender = 'Male';
SELECT COUNT(*)  FROM social_media.twitter  WHERE Klout > 50;
SELECT text  FROM twitter  WHERE Lang <> 'en';
SELECT UserID FROM (   SELECT UserID, COUNT(TweetID) as Count   FROM twitter   GROUP BY UserID ) AS T ORDER BY Count DESC LIMIT 1;
SELECT COUNT(*)  FROM twitter  WHERE Weekday = 'Monday' AND IsReshare = 'TRUE';
SELECT text FROM twitter WHERE Reach = (SELECT MAX(Reach) FROM twitter) ORDER BY Reach DESC LIMIT 3;
SELECT COUNT(*)  FROM twitter  WHERE IsReshare = 'TRUE' AND Likes > 100;
SELECT COUNT(t.TweetID)  FROM twitter t  JOIN user u ON t.UserID = u.UserID  WHERE u.Gender = 'Male' AND t.Weekday = 'Monday';
SELECT u.Gender FROM user u JOIN twitter t ON u.UserID = t.UserID WHERE t.Likes = (SELECT MAX(Likes) FROM twitter)
SELECT text FROM twitter WHERE Lang = 'fr' AND UserID IN (   SELECT UserID   FROM user   WHERE Gender = 'Male' )
SELECT COUNT(*)  FROM twitter  WHERE Lang = 'fr' AND LocationID IN (   SELECT LocationID    FROM location    WHERE Country = 'Australia' )
SELECT COUNT(*)  FROM twitter  WHERE Sentiment > 0 AND UserID IN (SELECT UserID FROM user WHERE Gender = 'Male')  AND LocationID IN (SELECT LocationID FROM location WHERE Country = 'Australia');
SELECT    (COUNT(t.TweetID) - COUNT(t.TweetID WHERE t.Sentiment = 0)) AS difference FROM    twitter t, user u WHERE    t.UserID = u.UserID AND u.Gender = 'Male'
SELECT c.City FROM twitter t JOIN location l ON t.LocationID = l.LocationID WHERE t.RetweetCount = (SELECT MAX(RetweetCount) FROM twitter)
SELECT City FROM social_media.twitter WHERE City IN ('Bangkok', 'Chiang Mai') GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1;
SELECT COUNT(*)  FROM social_media.twitter  WHERE LocationID IN (SELECT LocationID FROM social_media.location WHERE State = 'Santa Fe' AND Country = 'Argentina') AND Day = 31;
SELECT l.City, COUNT(t.TweetID) AS TotalTweets FROM twitter t JOIN location l ON t.LocationID = l.LocationID WHERE l.Country = 'Canada' GROUP BY l.City ORDER BY TotalTweets DESC LIMIT 3;
SELECT City FROM location WHERE LocationID IN (   SELECT LocationID   FROM twitter   WHERE Sentiment = 0 )
SELECT text FROM twitter WHERE LocationID IN (   SELECT LocationID   FROM location   WHERE Country = 'Argentina' ) AND UserID IN (   SELECT UserID   FROM user   WHERE Gender = 'Male' ) AND Likes = (   SELECT MAX(Likes)   FROM twitter   WHERE LocationID IN (     SELECT LocationID     FROM location     WHERE Country = 'Argentina'   ) AND UserID IN (     SELECT UserID     FROM user     WHERE Gender = 'Male'   ) )
SELECT AVG(SumLikes / CountTweets)  FROM (   SELECT SUM(Likes) AS SumLikes, COUNT(TweetID) AS CountTweets    FROM twitter    WHERE Weekday = 'Monday' AND UserID IN (     SELECT UserID      FROM user      WHERE Gender = 'Male'   )    GROUP BY LocationID, UserID ) AS subquery;
Error: 第 854 个样本有 0 个SQL。
SELECT name FROM course WHERE diff = (SELECT MAX(diff) FROM course WHERE name IN ('Intro to BlockChain', 'Computer Network'));
SELECT name  FROM course  WHERE credit < (SELECT credit FROM course WHERE name = 'Machine Learning Theory');
SELECT COUNT(*) FROM prof WHERE popularity > (SELECT popularity FROM prof WHERE first_name = 'Zhou' AND last_name = 'Zhihua');
SELECT phone_number FROM student WHERE l_name = 'Pryor' AND f_name = 'Kerry';
SELECT p.first_name, p.last_name FROM prof p JOIN RA r ON p.prof_id = r.prof_id JOIN student s ON r.student_id = s.student_id WHERE s.f_name = 'Faina' AND s.l_name = 'Mallinar' AND r.capability = 'RA';
SELECT COUNT(*)  FROM RA  WHERE prof_id IN (SELECT prof_id FROM prof WHERE last_name = 'Skyme' AND first_name = 'Sauveur');
SELECT s.f_name || ' ' || s.l_name AS full_name FROM student s JOIN RA r ON s.student_id = r.student_id WHERE r.capability = 5;
SELECT AVG(salary)  FROM RA  WHERE prof_id IN (SELECT prof_id FROM prof WHERE first_name = 'Ogdon' AND last_name = 'Zywicki') AND capability = 'med';
SELECT s.f_name || ' ' || s.l_name AS full_name FROM student s JOIN registration r ON s.student_id = r.student_id JOIN course c ON r.course_id = c.course_id WHERE c.name = 'Machine Learning Theory';
SELECT COUNT(*) FROM student WHERE student.student_id IN (   SELECT registration.student_id   FROM registration   WHERE registration.grade = 'B'   AND registration.course_id IN (     SELECT course.course_id     FROM course     WHERE course.name = 'Machine Learning Theory'   ) ) AND student.gpa > 3;
Error: 第 865 个样本有 0 个SQL。
SELECT s.f_name, s.l_name FROM student s JOIN registration r ON s.student_id = r.student_id WHERE r.course_id IN (SELECT c.course_id FROM course c WHERE c.name = 'Intro to Database 2') AND r.grade IS NULL;
SELECT s.f_name, s.l_name FROM student s WHERE (s.f_name, s.l_name) IN (   SELECT r.student_id, s.f_name, s.l_name   FROM registration r   JOIN student s ON r.student_id = s.student_id   WHERE r.course_id IN (     SELECT c.course_id     FROM course c     WHERE c.name = 'Machine Learning Theory'   )   ORDER BY r.sat DESC   LIMIT 1 ) AND (s.f_name, s.l_name) IN (   ('Willie Rechert', 'Rechert'), ('Laughton Antonio', 'Antonio') );
SELECT COUNT(*) FROM prof WHERE prof_id IN (   SELECT RA.prof_id   FROM RA   GROUP BY RA.prof_id   HAVING COUNT(RA.student_id) > 3 ) AND gender = 'male';
Error: 第 869 个样本有 0 个SQL。
SELECT p.first_name, p.last_name FROM prof p JOIN RA r ON p.prof_id = r.prof_id WHERE r.student_id IN (   SELECT s.student_id   FROM student s   WHERE s.f_name = 'Willie' AND s.l_name = 'Rechert' );
SELECT AVG(s.gpa)  FROM student s, RA r  WHERE s.student_id = r.student_id  AND r.prof_id IN (SELECT prof_id                    FROM prof                    WHERE first_name = 'Ogdon'                    AND last_name = 'Zywicki');
SELECT AVG(sat)  FROM registration  WHERE course_id IN (SELECT course_id                      FROM course                      WHERE name = 'Machine Learning Theory');
SELECT COUNT(*)  FROM student  WHERE type = 'RPG';
SELECT f_name || ' ' || l_name AS full_name FROM student ORDER BY gpa DESC LIMIT 1;
SELECT COUNT(*) FROM registration WHERE course_id IN (   SELECT course_id   FROM course   WHERE credit = '3' AND diff = 1 ) AND grade = 'A';
SELECT COUNT(*) FROM registration r JOIN course c ON r.course_id = c.course_id WHERE c.diff = 5;
SELECT p.first_name, p.last_name  FROM prof p  JOIN RA r ON p.prof_id = r.prof_id  WHERE r.student_id IN (SELECT s.student_id                         FROM student s                         WHERE s.f_name = 'Oliy' AND s.l_name = 'Spratling');
SELECT p.popularity FROM prof p JOIN RA r ON p.prof_id = r.prof_id WHERE r.student_id IN (SELECT s.student_id FROM student s WHERE s.f_name = 'Harrietta' AND s.l_name = 'Lydford');
SELECT COUNT(*) FROM RA WHERE RA.prof_id IN (   SELECT prof_id   FROM prof   WHERE gender = 'Female' AND teachingability = '1' )
SELECT prof.first_name, prof.last_name FROM prof WHERE prof.prof_id IN (   SELECT RA.prof_id   FROM RA   GROUP BY RA.prof_id   HAVING COUNT(RA.student_id) > 2 ) ORDER BY prof.popularity DESC LIMIT 1;
SELECT grade FROM registration WHERE student_id IN (   SELECT student_id   FROM student   WHERE f_name = 'Rik' AND l_name = 'Unsworth' ) AND course_id IN (   SELECT course_id   FROM course   WHERE name = 'Computer Network' );
Error: 第 882 个样本有 0 个SQL。
SELECT s.f_name, s.l_name FROM student s JOIN RA ra ON s.student_id = ra.student_id WHERE ra.prof_id IN (   SELECT p.prof_id   FROM prof p   WHERE p.first_name = 'Zhihua' AND p.last_name = 'Zhou' ) AND s.type = 'RPG';
Error: 第 884 个样本有 0 个SQL。
SELECT s.f_name || ' ' || s.l_name AS full_name FROM student s JOIN registration r ON s.student_id = r.student_id WHERE r.course_id IN (   SELECT c.course_id   FROM course c   WHERE c.name = 'Applied Deep Learning' ) AND r.grade IS NULL;
SELECT phone_number  FROM student  WHERE student_id IN (   SELECT student_id    FROM registration    WHERE course_id IN (     SELECT course_id      FROM course      WHERE name = 'Intro to BlockChain'   )    AND grade = 'A' );
SELECT    DIVIDE(COUNT(student_id), COUNT(student_id))    AS percentage  FROM    RA, student  WHERE    RA.student_id = student.student_id    AND first_name = 'Ogdon'    AND last_name = 'Zywicki'    AND type = 'TPG';
SELECT      DIVIDE(COUNT(student_id), COUNT(student_id)) as percentage FROM      registration r WHERE      r.grade = 'B' AND r.course_id IN (SELECT course_id FROM course WHERE name = 'Computer Network');
SELECT COUNT(*) FROM course WHERE diff = (SELECT MAX(diff) FROM course);
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM prof WHERE graduate_from IN (   SELECT graduate_from   FROM prof   WHERE graduate_from LIKE '%Brown University%' OR         graduate_from LIKE '%Columbia University%' OR         graduate_from LIKE '%Cornell University%' OR         graduate_from LIKE '%Dartmouth College%' OR         graduate_from LIKE '%Harvard University%' OR         graduate_from LIKE '%Princeton University%' OR         graduate_from LIKE '%University of Pennsylvania%' OR         graduate_from LIKE '%Yale University%' );
SELECT name  FROM course  WHERE credit = (SELECT MAX(credit) FROM course)  AND diff = (SELECT MAX(diff) FROM course);
SELECT COUNT(*) FROM student WHERE type = 'UG' AND intelligence = (SELECT MAX(intelligence) FROM student WHERE type = 'UG');
SELECT COUNT(*) FROM prof WHERE gender = 'female' AND prof_id IN (   SELECT prof_id   FROM prof   WHERE popularity = (     SELECT MAX(popularity)     FROM prof   ) );
SELECT COUNT(*)  FROM student  WHERE type = 'RPG';
SELECT COUNT(*) FROM registration WHERE course_id IN (SELECT course_id                     FROM course                     WHERE name = 'Applied Deep Learning') AND grade = 'A';
SELECT s.gpa FROM student s JOIN RA r ON s.student_id = r.student_id WHERE r.salary = 'free';
SELECT name FROM course WHERE diff = 1 ORDER BY (SELECT COUNT(*)           FROM registration           WHERE grade = 'A' AND course_id = course.course_id) DESC LIMIT 1;
SELECT COUNT(c.course_id) FROM registration r JOIN student s ON r.student_id = s.student_id WHERE s.student_id IN (   SELECT student_id   FROM student   WHERE gpa = (     SELECT MAX(gpa)     FROM student   ) )
Error: 第 899 个样本有 0 个SQL。
SELECT c.name FROM registration r JOIN course c ON r.course_id = c.course_id WHERE r.sat = (SELECT MAX(sat) FROM registration);
SELECT c.name  FROM course c  WHERE c.course_id NOT IN (   SELECT r.course_id    FROM registration r    WHERE r.student_id IN (     SELECT s.student_id      FROM student s      WHERE s.intelligence = 1    )    ORDER BY r.sat ASC    LIMIT 1  )
SELECT    c.name  FROM    course c  WHERE    c.name IN ('Advanced Operating System', 'Intro to BlockChain')    AND c.name = (SELECT                    r.course_id                  FROM                    registration r                  WHERE                    r.grade = 'A'                  GROUP BY                    r.course_id                  ORDER BY                    COUNT(r.student_id) DESC                  LIMIT 1);
SELECT p.popularity FROM prof p JOIN RA r ON p.prof_id = r.prof_id JOIN student s ON r.student_id = s.student_id WHERE r.capability = (SELECT MAX(capability) FROM RA) ORDER BY p.popularity DESC LIMIT 1;
SELECT DIVIDE(COUNT(r.student_id), COUNT(c.course_id)) FROM registration r JOIN course c ON r.course_id = c.course_id WHERE c.diff = 4;
SELECT COUNT(*) FROM student s JOIN registration r ON s.student_id = r.student_id WHERE s.gpa BETWEEN 3 AND 4 AND r.grade IS NULL;
SELECT COUNT(*) FROM student WHERE type = 'UG' AND intelligence > 0 INTERSECT SELECT student_id FROM registration WHERE grade = 'A';
SELECT s.f_name, s.l_name FROM student s JOIN RA r ON s.student_id = r.student_id WHERE r.capability = 5 AND r.salary = 'high' GROUP BY s.student_id ORDER BY AVG(s.gpa) DESC LIMIT 1;
SELECT p.prof_id, r.student_id FROM RA r JOIN student s ON r.student_id = s.student_id WHERE r.capability = (SELECT MIN(capability) FROM RA);
SELECT CONCAT(first_name, ' ', last_name) AS Name FROM prof, graduate_from WHERE prof.prof_id = graduate_from.prof_id AND graduate_from.university = 'University of Boston';
SELECT c.course_id, s.student_id FROM registration r JOIN course c ON r.course_id = c.course_id JOIN student s ON r.student_id = s.student_id WHERE r.grade IS NULL;
SELECT    DIVIDE(COUNT(prof_id), COUNT(prof_id)) AS male_female_ratio FROM    prof WHERE    gender IN ('Male', 'Female');
SELECT c.name, c.credit FROM course c WHERE c.diff = (SELECT MIN(diff) FROM course);
SELECT s.f_name, s.l_name, s.gpa FROM student s JOIN RA r ON s.student_id = r.student_id JOIN prof p ON r.prof_id = p.prof_id WHERE p.popularity = (SELECT MAX(popularity) FROM prof);
SELECT s.f_name, s.l_name, s.email FROM student s, RA r WHERE s.student_id = r.student_id AND r.salary = 'free';
SELECT RA.student_id, CONCAT(student.f_name, ' ', student.l_name) AS full_name, RA.capability, student.gpa FROM RA JOIN student ON RA.student_id = student.student_id JOIN prof ON RA.prof_id = prof.prof_id WHERE prof.first_name = 'Merwyn' AND prof.last_name = 'Conkay';
SELECT s.f_name, s.l_name, r.grade  FROM student s  JOIN registration r ON s.student_id = r.student_id  JOIN course c ON r.course_id = c.course_id  WHERE c.name = 'Intro to BlockChain';
SELECT s.f_name, s.l_name FROM student s JOIN registration r ON s.student_id = r.student_id JOIN course c ON r.course_id = c.course_id WHERE c.diff = (SELECT MAX(diff) FROM course) AND r.grade = 'A';
Error: 第 918 个样本有 0 个SQL。
SELECT f_name, l_name FROM student WHERE student_id IN (   SELECT student_id   FROM registration   WHERE course_id IN (     SELECT course_id     FROM course     WHERE name = 'Advanced Database Systems'   )   ORDER BY sat DESC   LIMIT 1 )
SELECT SUM(MULTIPLY(credit, grade)) / SUM(credit) AS GPA FROM registration, student WHERE student.student_id = registration.student_id AND (f_name = 'Laughton' AND l_name = 'Antonio');
SELECT c.name  FROM student s  JOIN registration r ON s.student_id = r.student_id  JOIN course c ON r.course_id = c.course_id  WHERE s.type = 'UG' AND s.gpa > 3.7;
SELECT s.f_name, s.l_name, r.capability  FROM student s  JOIN RA r ON s.student_id = r.student_id  JOIN prof p ON r.prof_id = p.prof_id  WHERE p.email LIKE '%@uw.edu';
SELECT s.f_name, s.l_name, s.email, r.capability FROM student s JOIN RA r ON s.student_id = r.student_id WHERE r.capability = (SELECT MAX(capability) FROM RA) AND r.salary = 'high';
SELECT c.name, c.credit FROM registration r JOIN course c ON r.course_id = c.course_id JOIN RA ra ON r.student_id = ra.student_id JOIN prof p ON ra.prof_id = p.prof_id WHERE p.gender = 'Female' AND p.popularity = (SELECT MAX(teachingability) FROM prof)
SELECT COUNT(*)  FROM prof  WHERE gender = 'Female';
SELECT name FROM course WHERE diff = (SELECT MAX(diff) FROM course);
SELECT COUNT(*)  FROM student  WHERE gpa BETWEEN 3.1 AND 3.7 AND type = 'UG';
Error: 第 928 个样本有 0 个SQL。
SELECT s.student_id FROM student s JOIN registration r ON s.student_id = r.student_id JOIN course c ON r.course_id = c.course_id WHERE s.gpa = 2.5 AND c.name = 'C for Programmers';
SELECT s.l_name FROM student s JOIN registration r ON s.student_id = r.student_id WHERE r.course_id IN (SELECT c.course_id FROM course c WHERE c.name = 'Intro to Database 2') ORDER BY r.sat DESC LIMIT 1;
SELECT COUNT(*) FROM student WHERE type = 'RA' AND salary = 'high' AND gpa > 3;
SELECT c.name  FROM course c  JOIN registration r ON c.course_id = r.course_id  JOIN student s ON r.student_id = s.student_id  WHERE s.type = 'UG' AND r.sat = (SELECT MAX(sat) FROM registration WHERE student_id IN (SELECT student_id FROM student WHERE type = 'UG'));
SELECT RA.capability  FROM RA, student  WHERE RA.student_id = student.student_id  AND student.type = 'RPG'  AND student.intelligence >= 4;
SELECT COUNT(*) FROM student WHERE student.student_id IN (   SELECT student_id   FROM registration   WHERE grade = 'B' ) AND intelligence = 3;
SELECT c.diff FROM student s JOIN registration r ON s.student_id = r.student_id JOIN course c ON r.course_id = c.course_id WHERE s.intelligence = 5 AND r.grade = 'A';
SELECT COUNT(DISTINCT RA.student_id) FROM RA JOIN prof ON RA.prof_id = prof.prof_id WHERE RA.capability = 5 AND prof.popularity = (SELECT MAX(popularity) FROM prof);
Error: 第 937 个样本有 0 个SQL。
SELECT RA.capability FROM RA, student WHERE RA.student_id = student.student_id AND student.f_name = 'Alvera' AND student.l_name = 'McQuillin';
SELECT COUNT(*) FROM student WHERE gpa = 3.2   AND EXISTS (     SELECT 1     FROM registration     WHERE registration.student_id = student.student_id       AND EXISTS (         SELECT 1         FROM course         WHERE course.course_id = registration.course_id           AND course.credit = 3       )   );
SELECT COUNT(*) FROM student WHERE type = 'RA' AND email IN (SELECT email FROM RA WHERE salary = 'low') AND gpa = 3.5;
SELECT s.email FROM student s JOIN registration r ON s.student_id = r.student_id JOIN course c ON r.course_id = c.course_id WHERE r.grade = 'B' AND c.diff > (SELECT AVG(diff) * 0.8 FROM course);
SELECT      MULTIPLY(DIVIDE(COUNT(RA.salary = 'low'), COUNT(RA.salary)), 1.0) AS percentage FROM      RA, prof WHERE      RA.prof_id = prof.prof_id     AND prof.teachingability <= 3;
SELECT c.course_id, c.name, c.credit, c.diff FROM course c WHERE (c.credit, c.diff) = (   SELECT MAX(c2.credit), MAX(c2.diff)   FROM course c2 );
SELECT AVG(teachingability)  FROM prof  WHERE popularity = (SELECT MAX(popularity) FROM prof);
SELECT AVG(sat) AS average_satisfaction FROM registration r JOIN student s ON r.student_id = s.student_id WHERE r.grade = 'B';
SELECT s.f_name, s.l_name, s.phone_number FROM student s WHERE s.intelligence < 4 AND s.gpa > 3;
SELECT s.f_name, s.l_name FROM student s, RA r WHERE s.student_id = r.student_id AND r.capability > (SELECT AVG(capability) FROM RA);
SELECT s.f_name || ' ' || s.l_name AS full_name, r.course_id FROM student s JOIN registration r ON s.student_id = r.student_id WHERE s.intelligence = 5 AND s.gpa < 3;
SELECT AVG(RA.capability)  FROM RA, student  WHERE RA.student_id = student.student_id  AND student.gpa < 2.5;
SELECT prof.first_name, prof.last_name FROM RA JOIN prof ON RA.prof_id = prof.prof_id JOIN student ON RA.student_id = student.student_id WHERE student.intelligence = 1;
SELECT SUBTRACT(AVG(gpa) FROM student WHERE student_id IN (SELECT student_id FROM registration WHERE course_id IN (SELECT course_id FROM course WHERE diff = (SELECT MAX(diff) FROM course))),                  AVG(gpa) FROM student WHERE student_id IN (SELECT student_id FROM registration WHERE course_id IN (SELECT course_id FROM course WHERE diff = (SELECT MIN(diff) FROM course)))                ) AS difference_in_average_gpa;
SELECT s.f_name, s.l_name, ra.capability FROM student s JOIN RA ra ON s.student_id = ra.student_id JOIN registration r ON s.student_id = r.student_id WHERE r.grade IS NULL;
SELECT COUNT(*)  FROM student s  JOIN RA r ON s.student_id = r.student_id  JOIN registration reg ON s.student_id = reg.student_id  JOIN course c ON reg.course_id = c.course_id  WHERE r.salary = 'High' AND c.name = 'Computer Vision';
SELECT p.first_name, p.last_name, p.popularity FROM prof p JOIN RA r ON p.prof_id = r.prof_id GROUP BY p.prof_id, p.first_name, p.last_name ORDER BY COUNT(r.student_id) DESC LIMIT 1;
SELECT c.name, CONCAT(s.f_name, ' ', s.l_name) AS full_name FROM registration r JOIN course c ON r.course_id = c.course_id JOIN student s ON r.student_id = s.student_id WHERE r.grade = 'A' GROUP BY r.course_id, s.f_name, s.l_name ORDER BY COUNT(student_id) DESC LIMIT 1;
SELECT (AVG(sat) FROM registration WHERE student_id IN (SELECT student_id FROM RA WHERE salary = 'high')) -         (AVG(sat) FROM registration WHERE student_id IN (SELECT student_id FROM RA WHERE salary = 'free'));
SELECT graduate_from FROM prof, RA, student WHERE RA.prof_id = prof.prof_id AND student.student_id = RA.student_id AND type = 'UG' GROUP BY graduate_from ORDER BY COUNT(*) DESC LIMIT 1;
SELECT prof.first_name, prof.last_name, prof.email FROM prof JOIN RA ON prof.prof_id = RA.prof_id GROUP BY prof.prof_id, prof.first_name, prof.last_name, prof.email HAVING COUNT(RA.student_id) >= 2 AND prof.teachingability > (SELECT AVG(teachingability) FROM prof);
SELECT    MULTIPLY(DIVIDE(COUNT(CASE WHEN sat = 'A' THEN student_id END), COUNT(student_id)), 1.0) AS percentage FROM    registration   JOIN course ON registration.course_id = course.course_id WHERE    course.name = 'Intro to Database 2';
SELECT s.f_name, s.l_name FROM student s WHERE gpa = (SELECT MAX(gpa) FROM student);
SELECT COUNT(DISTINCT RA.student_id) FROM prof, RA WHERE prof.prof_id = RA.prof_id AND prof.teachingability = (SELECT MAX(teachingability) FROM prof) AND RA.salary = 'high';
SELECT MIN(salary) AS min_salary, MAX(salary) AS max_salary FROM RA WHERE student_id IN (   SELECT student_id   FROM student   WHERE email = 'grosellg@hku.hk' );
SELECT COUNT(*) FROM student WHERE student_id IN (   SELECT student_id   FROM registration   WHERE course_id IN (     SELECT course_id     FROM course     WHERE name = 'Statistical Learning'   ) AND sat = 4 ) AND gpa = 3.8;
Error: 第 964 个样本有 0 个SQL。
SELECT s.f_name, s.l_name FROM student s JOIN registration r ON s.student_id = r.student_id JOIN course c ON r.course_id = c.course_id WHERE c.name = 'Applied Deep Learning' AND r.grade = 'C';
SELECT c.name FROM student s JOIN registration r ON s.student_id = r.student_id JOIN course c ON r.course_id = c.course_id WHERE s.type = 'RPG' AND r.sat = 1;
SELECT (COUNT(type = 'UG') - COUNT(type = 'RPG')) AS difference FROM student WHERE student_id IN (SELECT student_id FROM RA WHERE capability < 3) AND type IN ('UG', 'RPG');
SELECT AVG(COUNT(advisedBy.p_id))  FROM advisedBy;
SELECT COUNT(*) FROM taughtBy WHERE course_id = 18 AND hasPosition = 'professor';
SELECT course_id  FROM course  WHERE courseLevel = 'Level_500';
SELECT COUNT(*) FROM course WHERE courseLevel = 'Level_300';
SELECT p.p_id, tb.course_id FROM person p JOIN taughtBy tb ON p.p_id = tb.p_id WHERE p.professor = 1 AND p.hasPosition = 0;
SELECT taughtBy.p_id FROM taughtBy, course WHERE taughtBy.course_id = course.course_id AND course.courseLevel = 'Level_400';
SELECT c.course_id FROM taughtBy t JOIN advisedBy a ON t.p_id = a.p_id_dummy WHERE a.p_id = 376;
SELECT p_id_dummy AS advisor FROM advisedBy JOIN person ON advisedBy.p_id = person.p_id WHERE person.yearsInProgram = 'Year_3' AND person.student = 'TRUE';
SELECT courseLevel FROM course WHERE course_id IN (   SELECT course_id   FROM taughtBy   WHERE p_id = 297 )
SELECT c.courseLevel FROM course c WHERE c.course_id = 165  SELECT tb.p_id FROM taughtBy tb WHERE tb.course_id = 165;
SELECT p.p_id, p.yearsInProgram FROM person p JOIN advisedBy ab ON p.p_id = ab.p_id_dummy JOIN taughtBy tb ON ab.p_id = tb.p_id JOIN course c ON tb.course_id = c.course_id WHERE c.courseLevel = 'student' AND ab.p_id_dummy = 5;
SELECT c.course_id, c.courseLevel FROM taughtBy tb JOIN course c ON tb.course_id = c.course_id JOIN person p ON tb.p_id = p.p_id WHERE p.professor = 1 AND p.hasPosition = 'Faculty_eme';
SELECT a.p_id_dummy, c.courseLevel FROM advisedBy a JOIN person p ON a.p_id = p.p_id JOIN taughtBy t ON p.p_id = t.p_id JOIN course c ON t.course_id = c.course_id WHERE p.student = 'student' AND p.p_id = 80;
SELECT DISTINCT tb.p_id FROM taughtBy tb WHERE tb.course_id IN (   SELECT c.course_id   FROM course c   WHERE c.courseLevel = 'Level_400' ) AND tb.course_id IN (   SELECT c.course_id   FROM course c   WHERE c.courseLevel = 'Level_500' );
SELECT p_id_dummy FROM advisedBy JOIN person ON advisedBy.p_id = person.p_id WHERE person.yearsInProgram = 'Year_12' AND person.student = 'Yes' AND hasPosition = 'Professor';
SELECT c.course_id, c.courseLevel FROM course c JOIN taughtBy tb ON c.course_id = tb.course_id GROUP BY c.course_id, c.courseLevel ORDER BY COUNT(tb.p_id) DESC LIMIT 1;
SELECT COUNT(*)  FROM course  WHERE courseLevel = 'Level_300';
SELECT COUNT(*) FROM taughtBy WHERE course_id = 11;
SELECT course.course_id, COUNT(teachers.p_id) AS teachers_count FROM course JOIN taughtBy AS taughtBy ON course.course_id = taughtBy.course_id JOIN person AS teachers ON taughtBy.p_id = teachers.p_id WHERE course.course_id IN (16, 18) GROUP BY course.course_id ORDER BY teachers_count DESC LIMIT 1;
SELECT COUNT(*) FROM person WHERE professor = 1 AND hasPosition = 'Faculty_eme';
SELECT p_id_dummy FROM advisedBy GROUP BY p_id_dummy HAVING COUNT(p_id) > 4;
SELECT COUNT(*) FROM taughtBy JOIN course ON taughtBy.course_id = course.course_id WHERE course.courseLevel = 'Level_300' AND taughtBy.p_id IN (SELECT p_id FROM person WHERE professor = 1);
SELECT p_id FROM person, taughtBy, course WHERE person.p_id = taughtBy.p_id AND course.course_id = taughtBy.course_id AND person.hasPosition = 'Faculty_eme' AND course.courseLevel = 'Level_300';
SELECT * FROM person WHERE p_id IN (SELECT p_id FROM taughtBy WHERE course_id = 9) AND hasPosition != 0;
SELECT course.courseLevel FROM course JOIN taughtBy ON course.course_id = taughtBy.course_id WHERE taughtBy.p_id = 79;
SELECT p_id_dummy FROM advisedBy WHERE p_id IN (   SELECT p_id   FROM person   WHERE student = 'Yes' AND inPhase = 'Year_5' )
SELECT COUNT(DISTINCT advisedBy.p_id) FROM advisedBy JOIN taughtBy ON advisedBy.p_id = taughtBy.p_id JOIN course ON taughtBy.course_id = course.course_id WHERE course.courseLevel = 'Level_300' AND taughtBy.p_id IN (   SELECT p_id   FROM person   WHERE professor = 1 )
SELECT COUNT(*)  FROM taughtBy tb  JOIN course c ON tb.course_id = c.course_id  WHERE c.courseLevel = 'Level_300' AND NOT exists (SELECT 1 FROM person p WHERE p.p_id = tb.p_id AND p.hasPosition = 0);
SELECT taughtBy.course_id  FROM taughtBy, person  WHERE taughtBy.p_id = person.p_id  AND person.p_id_dummy = 1  AND person.p_id IN (SELECT p_id FROM advisedBy WHERE p_id = 6);
SELECT courseLevel FROM course WHERE course_id = (SELECT course_id FROM taughtBy GROUP BY course_id ORDER BY COUNT(p_id) DESC LIMIT 1);
Error: 第 998 个样本有 0 个SQL。
SELECT p_id FROM taughtBy GROUP BY p_id ORDER BY COUNT(course_id) DESC LIMIT 3;
SELECT COUNT(DISTINCT p_id_dummy)  FROM advisedBy  JOIN person ON advisedBy.p_id = person.p_id  WHERE person.yearsInProgram = 'Year_3' AND person.student = 'true';
SELECT AVG(count_course)  FROM (SELECT COUNT(taughtBy.course_id) AS count_course        FROM taughtBy        WHERE professor = 1) AS subquery;
SELECT COUNT(CASE WHEN person.professor = 1 THEN person.p_id ELSE NULL END) /         COUNT(CASE WHEN person.student = 1 THEN person.p_id ELSE NULL END) AS ratio FROM person;
SELECT (COUNT(c.course_id) WHERE c.courseLevel = 'Level_400') * 100 / COUNT(c.course_id) AS percentage FROM course c;
SELECT taughtBy.p_id FROM taughtBy WHERE course_id = 18;
SELECT hasPosition, p_id_dummy FROM person, advisedBy WHERE person.p_id = advisedBy.p_id AND advisedBy.p_id = 303;
SELECT p.p_id, c.courseLevel FROM person p JOIN taughtBy tb ON p.p_id = tb.p_id JOIN course c ON tb.course_id = c.course_id WHERE p.professor = 1 AND p.hasPosition = 'Faculty_aff';
SELECT p.yearsInProgram, p.inPhase FROM person p JOIN advisedBy ab ON p.p_id = ab.p_id WHERE p.student = 1 AND p.p_id IN (   SELECT ab.p_id   FROM advisedBy ab   GROUP BY ab.p_id   ORDER BY COUNT(ab.p_id_dummy) DESC   LIMIT 1 )
SELECT a.p_id, b.p_id_dummy FROM advisedBy a JOIN person b ON a.p_id = b.p_id WHERE b.hasPosition = 'Faculty_member';
SELECT c.course_id, c.courseLevel FROM course c JOIN taughtBy tb ON c.course_id = tb.course_id WHERE tb.p_id BETWEEN 40 AND 50;
SELECT    c.courseLevel, tb.p_id FROM    course c   JOIN taughtBy tb ON c.course_id = tb.course_id WHERE    c.course_id = 147;
SELECT p.p_id FROM taughtBy tb JOIN person p ON tb.p_id = p.p_id WHERE tb.course_id = 104 AND p.professor = 1 AND p.hasPosition != 0;
SELECT p.p_id, p.hasPosition FROM person p JOIN taughtBy t ON p.p_id = t.p_id JOIN course c ON t.course_id = c.course_id WHERE c.courseLevel = 'Level_400' AND c.course_id < 10 AND p.professor = 1;
SELECT taughtBy.p_id  FROM taughtBy, course  WHERE taughtBy.course_id BETWEEN 121 AND 130  AND course.course_id = taughtBy.course_id  AND course.courseLevel = 'Level_300';
SELECT a.p_id_dummy, p.p_id FROM advisedBy a JOIN person p ON a.p_id = p.p_id WHERE p.student = 1 AND p.yearsInProgram = 'Year_8' AND p.hasPosition = 1;
SELECT course_id FROM taughtBy, course WHERE taughtBy.p_id = course.course_id AND course.courseLevel = 'Level_500' LIMIT 5;
SELECT COUNT(*)  FROM person, advisedBy  WHERE person.p_id = advisedBy.p_id AND advisedBy.p_id_dummy = 415 AND person.student = 'true';
SELECT COUNT(*)  FROM course  WHERE courseLevel = 'Level_500';
SELECT COUNT(*) FROM person WHERE hasPosition = 0 AND inPhase = 0;
SELECT p_id FROM taughtBy GROUP BY p_id ORDER BY COUNT(course_id) ASC LIMIT 1;
SELECT COUNT(*) FROM person WHERE hasPosition = 'student' AND inPhase = 'Year_5' AND p_id IN (   SELECT p_id_dummy   FROM advisedBy   WHERE p_id = 5 );
SELECT p_id  FROM taughtBy  GROUP BY p_id  ORDER BY COUNT(course_id) DESC  LIMIT 1;
SELECT COUNT(*)  FROM person p, course c, taughtBy tb  WHERE p.professor = 1 AND p.hasPosition = 'Faculty_aff'  AND c.course_id = tb.course_id  AND c.courseLevel IN ('Level_500');
SELECT p_id, COUNT(course_id) as num_courses FROM taughtBy JOIN course ON taughtBy.course_id = course.course_id WHERE course.courseLevel IN ('Level_500', 'Level_700') GROUP BY p_id ORDER BY num_courses DESC LIMIT 5;
SELECT COUNT(DISTINCT a.p_id_dummy)  FROM advisedBy a, person b  WHERE a.p_id = b.p_id AND b.student = 1 AND b.inPhase = 'Year_1';
SELECT COUNT(*) FROM person WHERE professor = 'TRUE' AND p_id IN (SELECT p_id FROM taughtBy) AND p_id IN (SELECT p_id FROM taughtBy GROUP BY p_id HAVING COUNT(course_id) <= 2) AND p_id IN (SELECT p_id FROM course WHERE courseLevel = 'Level_400');
SELECT p.p_id FROM person p, taughtBy t, course c WHERE p.professor = 1 AND p.hasPosition = 'Faculty_eme' AND t.p_id = p.p_id AND c.course_id = t.course_id AND c.courseLevel = 'Level_400';
SELECT hasPosition FROM person WHERE professor = 1 AND p_id IN (   SELECT p_id   FROM taughtBy   GROUP BY p_id   ORDER BY COUNT(course_id) DESC   LIMIT 1 );
SELECT yearsInProgram FROM person WHERE student = 1 AND p_id IN (   SELECT p_id   FROM advisedBy   GROUP BY p_id   HAVING COUNT(p_id_dummy) > 2 )
SELECT COUNT(*)  FROM taughtBy  WHERE p_id IN (SELECT p_id FROM person WHERE professor = 'True')  AND course_id IN (SELECT course_id FROM course WHERE courseLevel = 'Level_300');
SELECT MAX(COUNT(yearsInProgram))  FROM person  WHERE student = 1  JOIN advisedBy ON person.p_id = advisedBy.p_id  JOIN person AS advisor ON advisedBy.p_id_dummy = advisor.p_id;
SELECT COUNT(*) FROM person WHERE student = 1 AND inPhase = 'Pre-Qals' AND hasPosition = 1 AND p_id IN (SELECT p_id FROM advisedBy);
SELECT AVG(COUNT(taughtBy.course_id))  FROM taughtBy  WHERE p_id IN (SELECT p_id FROM person WHERE professor = 'TRUE' AND hasPosition = 'TRUE')  GROUP BY taughtBy.p_id;
SELECT COUNT(*) FROM taughtBy GROUP BY course_id HAVING COUNT(p_id) > 4;
SELECT course_id  FROM course  WHERE courseLevel = 'Level_500';
SELECT SUM(yearsInProgram)  FROM person  WHERE student = 1 AND yearsInProgram IN ('Year_1', 'Year_2');
SELECT COUNT(DISTINCT course_id) FROM taughtBy JOIN person ON taughtBy.p_id = person.p_id WHERE person.professor = 1 AND person.hasPosition <> 0;
SELECT p.hasPosition, p.professor FROM person p JOIN taughtBy tb ON p.p_id = tb.p_id GROUP BY p.p_id, p.professor ORDER BY COUNT(tb.course_id) DESC LIMIT 1;
SELECT c.course_id FROM taughtBy t JOIN person p ON t.p_id = p.p_id WHERE p.professor = 1 AND p.hasPosition = 0;
SELECT p.professor, AVG(c.courseLevel) AS avg_course_level FROM taughtBy tb JOIN course c ON tb.course_id = c.course_id JOIN person p ON tb.p_id = p.p_id WHERE p.hasPosition <> 0 GROUP BY p.professor ORDER BY COUNT(tb.course_id) DESC LIMIT 1;
SELECT device_id FROM gender_age_train WHERE age = (SELECT MAX(age) FROM gender_age_train);
Error: 第 1041 个样本有 0 个SQL。
SELECT COUNT(*) FROM gender_age_train WHERE gender = 'M' AND group = 'M32-38';
SELECT COUNT(*) FROM gender_age_train WHERE gender = 'F' AND age > 50;
SELECT COUNT(*)  FROM app_events  WHERE event_id = 2 AND is_active = 1;
SELECT gender FROM gender_age_train WHERE age = (SELECT MIN(age) FROM gender_age_train);
SELECT category FROM label_categories WHERE label_id = (SELECT label_id FROM app_labels ORDER BY COUNT(DISTINCT app_id) DESC LIMIT 1);
SELECT phone_brand_device_model2.device_model FROM gender_age_train JOIN gender_age ON gender_age_train.device_id = gender_age.device_id WHERE age = (SELECT MAX(age) FROM gender_age_train);
Error: 第 1048 个样本有 0 个SQL。
SELECT COUNT(*) FROM gender_age_train JOIN app_events ON gender_age_train.device_id = app_events.device_id WHERE gender_age_train.gender = 'M' AND app_events.is_active = 1 AND app_events.timestamp LIKE '2016-05-01%';
SELECT COUNT(*) FROM gender_age JOIN phone_brand_device_model2 ON gender_age.device_id = phone_brand_device_model2.device_id WHERE gender = 'F' AND device_model = 'ZenFone 5';
SELECT MAX(age)  FROM gender_age  WHERE gender_age.device_id IN (   SELECT device_id    FROM events    WHERE timestamp LIKE '2016-05-06%'    AND longitude = 121    AND latitude = 31    AND is_active = 1 )
Error: 第 1052 个样本有 0 个SQL。
SELECT l.category FROM (   SELECT DISTINCT e.timestamp, l.category   FROM events e   JOIN app_events a ON e.event_id = a.event_id   JOIN app_labels al ON a.app_id = al.app_id   JOIN label_categories l ON al.label_id = l.label_id   ORDER BY e.timestamp   LIMIT 2 ) AS oldest_events ORDER BY oldest_events.timestamp;
SELECT gender FROM gender_age WHERE phone_brand = 'vivo' GROUP BY gender ORDER BY COUNT(*) DESC LIMIT 1;
SELECT    lc.category,    COUNT(a.app_id) AS max_users FROM    app_labels al   JOIN app_all a ON al.app_id = a.app_id   JOIN label_categories lc ON al.label_id = lc.label_id GROUP BY    lc.category ORDER BY    max_users DESC LIMIT 1;
SELECT COUNT(DISTINCT a.app_id) FROM app_labels a JOIN label_categories l ON a.label_id = l.label_id WHERE l.category = 'MOBA';
SELECT      DIVIDE(MULTIPLY(CONCAT(COUNT(device_id WHERE phone_brand = 'OPPO' AND gender = 'F'), 100), COUNT(device_id)), '%') AS 'the percentage of female OPPO users',      DIVIDE(MULTIPLY(CONCAT(COUNT(device_id WHERE phone_brand = 'OPPO' AND gender = 'M'), 100), COUNT(device_id)), '%') AS 'the percentage of male OPPO users' FROM      gender_age WHERE      phone_brand = 'OPPO';
SELECT longitude, latitude FROM events WHERE timestamp LIKE '2016-05-08%';
SELECT ae.app_id, ae.is_installed FROM app_events ae WHERE ae.event_id = 844;
Error: 第 1060 个样本有 0 个SQL。
SELECT COUNT(DISTINCT device_id)  FROM phone_brand_device_model2  WHERE phone_brand = 'vivo' AND device_model = 'Xplay3S';
SELECT    DIVIDE(     COUNT(device_id)      FROM gender_age_train      WHERE gender = 'M' AND `group` = 'M27-28'   ) /    DIVIDE(     COUNT(device_id)      FROM gender_age_train      WHERE gender = 'F' AND `group` = 'F27-28'   ) AS ratio;
Error: 第 1063 个样本有 0 个SQL。
Error: 第 1064 个样本有 0 个SQL。
SELECT ae.app_id, e.timestamp FROM app_events ae JOIN events e ON ae.event_id = e.event_id WHERE ae.event_id = 82;
Error: 第 1066 个样本有 0 个SQL。
Error: 第 1067 个样本有 0 个SQL。
SELECT    ga.age,    ga.gender,    COUNT(e.event_id) AS num_events FROM    events e   JOIN gender_age ga ON e.device_id = ga.device_id WHERE    e.longitude = -102 AND e.latitude = 38 GROUP BY    ga.age, ga.gender;
SELECT phone_brand, device_model FROM phone_brand_device_model2 JOIN gender_age ON phone_brand_device_model2.device_id = gender_age.device_id JOIN events ON gender_age.device_id = events.device_id WHERE longitude = 80 AND latitude = 44;
Error: 第 1070 个样本有 0 个SQL。
Error: 第 1071 个样本有 0 个SQL。
SELECT COUNT(DISTINCT app_id) FROM app_labels JOIN label_categories ON app_labels.label_id = label_categories.label_id WHERE label_categories.category = 'Science Fiction';
SELECT g.age, g.gender FROM gender_age ga JOIN phone_brand_device_model2 p ON ga.device_id = p.device_id WHERE p.phone_brand = 'LG' AND p.device_model = 'L70';
SELECT DIVIDE(MULTIPLY(CONCAT(COUNT(app_id WHERE category = 'Industry tag'), 100), COUNT(app_id)), '%') AS percentage FROM app_labels JOIN app_all ON app_labels.app_id = app_all.app_id JOIN label_categories ON app_labels.label_id = label_categories.label_id WHERE category = 'Industry tag';
SELECT      DIVIDE(MULTIPLY(CONCAT(COUNT(device_id WHERE phone_brand = 'LG' AND device_model = 'Nexus 5'), 100), COUNT(device_id WHERE phone_brand = 'LG')), '%') AS percentage,     DIVIDE(COUNT(device_id WHERE phone_brand = 'LG' AND device_model = 'Nexus 5' AND gender = 'M'), COUNT(device_id WHERE phone_brand = 'LG' AND device_model = 'Nexus 5' AND gender = 'F')) AS ratio FROM      phone_brand_device_model2 WHERE      phone_brand = 'LG' AND device_model = 'Nexus 5';
Error: 第 1076 个样本有 0 个SQL。
SELECT COUNT(*)  FROM events  WHERE timestamp LIKE '2016%';
Error: 第 1078 个样本有 0 个SQL。
SELECT COUNT(*)  FROM gender_age  WHERE gender = 'M';
SELECT MAX(age)  FROM gender_age;
SELECT COUNT(*) FROM gender_age_train WHERE gender = 'F' AND age < 30;
SELECT COUNT(*) FROM gender_age_train WHERE device_id IN (   SELECT device_id   FROM phone_brand_device_model2   WHERE device_model = 'Galaxy Note 2' ) AND gender = 'F';
Error: 第 1083 个样本有 0 个SQL。
SELECT device_model FROM gender_age_train WHERE age = (SELECT MAX(age) FROM gender_age_train)
SELECT group  FROM gender_age_train  WHERE device_id IN (   SELECT device_id    FROM phone_brand_device_model2    WHERE phone_brand = 'vivo' )  GROUP BY group  ORDER BY COUNT(group) DESC  LIMIT 1;
SELECT COUNT(DISTINCT a.app_id) FROM app_all a JOIN app_labels al ON a.app_id = al.app_id JOIN label_categories lc ON al.label_id = lc.label_id WHERE lc.category = 'Securities';
SELECT l.category  FROM app_labels al  JOIN label_categories lc ON al.label_id = lc.label_id  WHERE al.app_id = 1977658975649780000;
SELECT l.category FROM app_labels al JOIN app_all a ON al.app_id = a.app_id JOIN app_events ae ON a.app_id = ae.app_id JOIN events e ON ae.event_id = e.event_id WHERE ae.event_id = 2 AND ae.is_active = 0 JOIN label_categories l ON al.label_id = l.label_id
Error: 第 1089 个样本有 0 个SQL。
Error: 第 1090 个样本有 0 个SQL。
SELECT e.event_id FROM events e JOIN phone_brand_device_model2 p ON e.device_id = p.device_id WHERE p.phone_brand = 'vivo';
Error: 第 1092 个样本有 0 个SQL。
Error: 第 1093 个样本有 0 个SQL。
Error: 第 1094 个样本有 0 个SQL。
Error: 第 1095 个样本有 0 个SQL。
SELECT category FROM label_categories WHERE label_id = (SELECT label_id FROM app_labels ORDER BY COUNT(app_id) DESC LIMIT 1);
SELECT phone_brand FROM gender_age_train WHERE gender = 'F' ORDER BY age LIMIT 1;
SELECT COUNT(DISTINCT g.device_id) FROM gender_age_train g JOIN phone_brand_device_model2 p ON g.device_id = p.device_id WHERE g.group = 'M23-26' AND p.phone_brand = 'vivo';
Error: 第 1099 个样本有 0 个SQL。
SELECT      SUM(IF(phone_brand = 'vivo',1,0)) / COUNT(device_id) * 100 AS percentage FROM      events_relevant JOIN      phone_brand_device_model2 ON events_relevant.device_id = phone_brand_device_model2.device_id WHERE      event_id = '2';
Error: 第 1101 个样本有 0 个SQL。
SELECT COUNT(*) FROM gender_age_train WHERE gender = 'F' AND group = 'F27-28';
SELECT MAX(age)  FROM gender_age_train  WHERE gender = 'M';
SELECT COUNT(*) FROM app_events WHERE is_installed = 1 AND is_active = 0;
SELECT MIN(age)  FROM gender_age_train  WHERE gender = 'F';
Error: 第 1106 个样本有 0 个SQL。
SELECT DISTINCT device_model FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO';
SELECT DISTINCT device_model FROM gender_age_train JOIN phone_brand_device_model2 ON gender_age_train.device_id = phone_brand_device_model2.device_id WHERE gender = 'M' AND group_ = 'M39+';
SELECT DISTINCT device_model FROM app_all JOIN app_events ON app_all.app_id = app_events.app_id WHERE is_installed = 1 AND is_active = 1 JOIN phone_brand_device_model2 ON app_events.device_id = phone_brand_device_model2.device_id ORDER BY device_model LIMIT 5;
SELECT COUNT(DISTINCT app_id)  FROM app_labels  JOIN label_categories ON app_labels.label_id = label_categories.label_id  WHERE label_categories.category = 'Financial Information';
Error: 第 1111 个样本有 0 个SQL。
Error: 第 1112 个样本有 0 个SQL。
SELECT phone_brand FROM gender_age_train WHERE age = (SELECT MIN(age) FROM gender_age_train);
SELECT category, MIN(COUNT(label_id)) AS min_users FROM label_categories JOIN app_labels ON label_categories.label_id = app_labels.label_id GROUP BY category ORDER BY min_users LIMIT 3;
Error: 第 1115 个样本有 0 个SQL。
SELECT group FROM gender_age_train WHERE phone_brand = 'OPPO' GROUP BY group ORDER BY COUNT(*) DESC LIMIT 1;
SELECT phone_brand_device_model2.device_model, COUNT(phone_brand_device_model2.device_model) AS max_count FROM gender_age JOIN phone_brand_device_model2 ON gender_age.device_id = phone_brand_device_model2.device_id WHERE gender = 'F' GROUP BY phone_brand_device_model2.device_model ORDER BY max_count DESC LIMIT 5;
SELECT      DIVIDE(SUM(CASE WHEN l.category = '80s Japanese comic' THEN 1 ELSE 0 END), COUNT(a.app_id)) * 100 AS '80s',      DIVIDE(SUM(CASE WHEN l.category = '90s Japanese comic' THEN 1 ELSE 0 END), COUNT(a.app_id)) * 100 AS '90s' FROM      app_all a      JOIN app_labels al ON a.app_id = al.app_id      JOIN label_categories l ON al.label_id = l.label_id GROUP BY      1, 2
SELECT      DIVIDE(SUM(IF(gender = 'F' AND phone_brand = 'OPPO', 1, 0)),             SUM(IF(device_id = 'R815T', 1, 0))) AS percentage FROM      gender_age_test JOIN      phone_brand_device_model2 ON gender_age_test.device_id = phone_brand_device_model2.device_id JOIN      app_all ON gender_age_test.device_id = app_all.app_id WHERE      gender = 'F' AND phone_brand = 'OPPO';
SELECT phone_brand FROM phone_brand_device_model2 WHERE device_model = '坚果手机';
SELECT COUNT(DISTINCT device_model)  FROM phone_brand_device_model2  WHERE phone_brand = '中兴';
SELECT group FROM gender_age WHERE age = 24;
SELECT timestamp FROM events WHERE event_id = '887711';
SELECT COUNT(*)  FROM events  WHERE timestamp LIKE '%2016/5/6%';
SELECT p.phone_brand, p.device_model FROM events e JOIN gender_age g ON e.device_id = g.device_id JOIN phone_brand_device_model2 p ON g.device_id = p.device_id WHERE e.timestamp = '2016/5/7 23:55:16' AND e.longitude = 113 AND e.latitude = 28;
Error: 第 1126 个样本有 0 个SQL。
Error: 第 1127 个样本有 0 个SQL。
Error: 第 1128 个样本有 0 个SQL。
SELECT COUNT(DISTINCT ae.app_id) FROM app_events ae WHERE ae.timestamp = '2016/5/6 23:33:34' AND ae.is_installed = 1;
Error: 第 1130 个样本有 0 个SQL。
SELECT COUNT(*) FROM gender_age_train JOIN phone_brand_device_model2 ON gender_age_train.device_id = phone_brand_device_model2.device_id WHERE gender = 'M' AND device_model = 'Galaxy S5';
Error: 第 1132 个样本有 0 个SQL。
Error: 第 1133 个样本有 0 个SQL。
SELECT COUNT(DISTINCT a.app_id)  FROM app_events a  WHERE a.timestamp = '2016/5/6 14:09:49' AND a.longitude = '116' AND a.latitude = '40' AND a.is_active = '1';
SELECT    DIVIDE(SUM(CASE WHEN timestamp = '2016/5/2 7:50:28' AND is_active = 1 THEN 1 ELSE 0 END),           SUM(CASE WHEN timestamp = '2016/5/2 7:41:03' AND is_active = 1 THEN 1 ELSE 0 END)) AS result FROM    events;
Error: 第 1136 个样本有 0 个SQL。
SELECT SUM(IF(phone_brand = 'vivo',1,0)) - SUM(IF(phone_brand = 'LG',1,0)) AS diff FROM phone_brand_device_model2;
SELECT device_id FROM gender_age_train WHERE age = (SELECT MIN(age) FROM gender_age_train);
SELECT COUNT(*) FROM gender_age_train WHERE gender = 'F' AND age > 30;
SELECT 'M' AS gender FROM gender_age_train WHERE age = (SELECT MAX(age) FROM gender_age_train) UNION ALL SELECT 'F' AS gender FROM gender_age_train WHERE age = (SELECT MAX(age) FROM gender_age_train) AND gender = 'F';
SELECT MIN(age) FROM gender_age_train WHERE gender = 'F';
SELECT MIN(age)  FROM gender_age_train  WHERE device_id IN (SELECT device_id FROM phone_brand_device_model2 WHERE phone_brand = 'vivo');
SELECT app_id FROM app_labels JOIN label_categories ON app_labels.label_id = label_categories.label_id WHERE category = 'Securities';
SELECT g.gender FROM gender_age ga JOIN events e ON ga.device_id = e.device_id WHERE e.timestamp = '2016-05-01 00:55:25';
Error: 第 1145 个样本有 0 个SQL。
Error: 第 1146 个样本有 0 个SQL。
Error: 第 1147 个样本有 0 个SQL。
SELECT DISTINCT phone_brand_device_model2.device_model FROM gender_age, phone_brand_device_model2 WHERE gender_age.device_id = phone_brand_device_model2.device_id AND gender_age.gender = 'F';
SELECT category  FROM app_labels  JOIN label_categories ON app_labels.label_id = label_categories.label_id  WHERE app_labels.app_id = 7324884708820020000;
SELECT COUNT(*) FROM app_all JOIN app_events ON app_all.app_id = app_events.app_id JOIN events ON app_events.event_id = events.event_id JOIN app_labels ON app_all.app_id = app_labels.app_id JOIN label_categories ON app_labels.label_id = label_categories.label_id WHERE app_events.event_id = 2 AND app_events.is_active = 0 AND label_categories.category = 'Property Industry 1.0';
SELECT COUNT(DISTINCT l.category) FROM app_labels al JOIN app_events ae ON al.app_id = ae.app_id WHERE ae.app_id IN (   SELECT app_id   FROM app_events   WHERE event_id = 2 AND is_active = 0 ) AND al.app_id IN (   SELECT app_id   FROM app_labels   GROUP BY app_id   HAVING COUNT(*) > 1 ) JOIN label_categories l ON al.label_id = l.label_id;
SELECT device_model FROM gender_age WHERE gender = 'F' AND age > 30 GROUP BY device_model ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 1153 个样本有 0 个SQL。
SELECT      lc.category,      MAX(COUNT(a.app_id)) as max_app_users FROM      app_labels al JOIN      app_all a ON al.app_id = a.app_id JOIN      label_categories lc ON al.label_id = lc.label_id GROUP BY      lc.category ORDER BY      max_app_users DESC LIMIT 3;
SELECT e.event_id FROM events e JOIN gender_age g ON e.device_id = g.device_id WHERE g.age = (SELECT MAX(age) FROM gender_age);
SELECT COUNT(*) FROM events WHERE device_id IN (   SELECT device_id   FROM gender_age   WHERE gender = 'F'   AND age = (     SELECT MIN(age)     FROM gender_age     WHERE gender = 'F'   ) )
SELECT COUNT(DISTINCT device_id) FROM events WHERE timestamp = '2016-05-01'   AND device_id IN (     SELECT device_id     FROM gender_age     WHERE gender = 'M'   );
SELECT      category,      SUM(CASE WHEN app_id IN (SELECT app_id FROM app_labels WHERE label_id IN (SELECT label_id FROM label_categories WHERE category = 'Securities')) THEN 1 ELSE 0 END) AS Securities,     SUM(CASE WHEN app_id IN (SELECT app_id FROM app_labels WHERE label_id IN (SELECT label_id FROM label_categories WHERE category = 'Finance')) THEN 1 ELSE 0 END) AS Finance FROM      app_labels GROUP BY      category ORDER BY      Securities - Finance DESC,      Securities - Finance LIMIT 1;
Error: 第 1159 个样本有 0 个SQL。
SELECT AVG(age)  FROM gender_age  WHERE gender = 'F' AND phone_brand = 'vivo';
SELECT DIVIDE(SUM(gender = 'M' WHERE phone_brand = 'vivo'), SUM(gender = 'F' WHERE phone_brand = 'vivo')) AS ratio FROM gender_age_train JOIN phone_brand_device_model2 ON gender_age_train.device_id = phone_brand_device_model2.device_id WHERE phone_brand = 'vivo';
SELECT DIVIDE(SUM(CASE WHEN label_categories.category = 'Securities' THEN 1 ELSE 0 END),                SUM(CASE WHEN label_categories.category = 'Finance' THEN 1 ELSE 0 END)) AS ratio FROM app_labels JOIN label_categories ON app_labels.label_id = label_categories.label_id;
SELECT label_id FROM app_labels, label_categories WHERE app_labels.app_id IN (SELECT app_id FROM app_all) AND label_categories.category = 'Third-party card management';
SELECT DIVIDE(SUM(is_active = 1), SUM(is_active = 0)) FROM app_events WHERE event_id = 58;
SELECT COUNT(*)  FROM events  WHERE device_id = '3915082290673130000';
SELECT ROUND(SUM(gender = 'M') / COUNT(device_id) * 100, 2) AS percentage FROM gender_age_train;
SELECT COUNT(*) FROM events WHERE longitude = -156;
SELECT COUNT(DISTINCT app_id) FROM app_labels WHERE label_id = 48;
SELECT COUNT(*)  FROM label_categories  WHERE category LIKE 'game%';
SELECT COUNT(*)  FROM events  WHERE longitude = 80 AND latitude = 37;
Error: 第 1171 个样本有 0 个SQL。
SELECT a.app_id FROM app_labels a JOIN label_categories l ON a.label_id = l.label_id WHERE l.category = 'Game-Rowing';
SELECT label_id, app_id FROM app_labels JOIN label_categories ON app_labels.label_id = label_categories.label_id WHERE label_categories.category = 'Chinese Classical Mythology';
Error: 第 1174 个样本有 0 个SQL。
Error: 第 1175 个样本有 0 个SQL。
SELECT COUNT(*) FROM events e JOIN phone_brand_device_model2 p ON e.device_id = p.device_id WHERE p.phone_brand = 'OPPO' AND e.timestamp = '2016-05-01 00:00:00';
Error: 第 1177 个样本有 0 个SQL。
Error: 第 1178 个样本有 0 个SQL。
Error: 第 1179 个样本有 0 个SQL。
SELECT      DIVIDE(SUM(gender = 'F' AND age > 80), COUNT(device_id)) AS percentage FROM      gender_age WHERE      phone_brand = 'HTC' AND gender = 'F' AND age > 80
SELECT phone_brand, device_model FROM phone_brand_device_model2 WHERE device_id IN (   SELECT device_id   FROM events   WHERE event_id = 6701 );
SELECT g.age, g.gender FROM gender_age_train g JOIN (   SELECT device_id, COUNT(event_id) as max_events   FROM events   GROUP BY device_id   ORDER BY max_events DESC   LIMIT 1 ) e ON g.device_id = e.device_id WHERE g.device_id BETWEEN '-9215352913819630000' AND '-9222956879900150000';
SELECT timestamp  FROM events  WHERE event_id = 12;
SELECT COUNT(DISTINCT a.app_id)  FROM app_events a  WHERE a.is_active = 1;
SELECT COUNT(DISTINCT device_id) FROM phone_brand_device_model2 WHERE device_model = 'A51';
SELECT gender FROM gender_age WHERE device_id = -9222956879900150000;
SELECT COUNT(*)  FROM app_labels  JOIN label_categories ON app_labels.label_id = label_categories.label_id  WHERE label_categories.category = 'game-card';
Error: 第 1188 个样本有 0 个SQL。
SELECT COUNT(DISTINCT g.device_id) FROM gender_age g JOIN phone_brand_device_model2 p ON g.device_id = p.device_id WHERE g.age < 30 AND p.device_model = 'Galaxy Note 2';
SELECT    MULTIPLY(     DIVIDE(       SUM(gender_age.age < 50),        COUNT(gender_age.device_id)     ),      1.0   ) AS percentage FROM    gender_age WHERE    phone_brand_device_model2.phone_brand = 'OPPO';
Error: 第 1191 个样本有 0 个SQL。
SELECT l.category FROM app_labels al JOIN label_categories l ON al.label_id = l.label_id WHERE al.app_id = 5902120154267990000;
SELECT g.group FROM gender_age g JOIN phone_brand_device_model2 p ON g.device_id = p.device_id WHERE p.phone_brand = 'LG';
SELECT category  FROM label_categories  WHERE label_id IN (     SELECT label_id      FROM app_labels      WHERE app_id = 4955831798976240000 );
Error: 第 1195 个样本有 0 个SQL。
SELECT COUNT(DISTINCT g.device_id) FROM gender_age_train g JOIN phone_brand_device_model2 p ON g.device_id = p.device_id WHERE g.gender = 'M' AND p.device_model = 'Desire 820';
SELECT COUNT(DISTINCT g.device_id) FROM gender_age g JOIN phone_brand_device_model2 p ON g.device_id = p.device_id WHERE g.age > 20 AND p.device_model = 'ELIFE E7 Mini';
SELECT COUNT(DISTINCT g.device_id) FROM gender_age g JOIN phone_brand_device_model2 p ON g.device_id = p.device_id WHERE g.age BETWEEN 20 AND 50 AND p.device_model = 'Galaxy Premier';
Error: 第 1199 个样本有 0 个SQL。
SELECT COUNT(DISTINCT g.device_id) FROM gender_age g JOIN phone_brand_device_model2 p ON g.device_id = p.device_id WHERE g.age BETWEEN 20 AND 60 AND p.phone_brand = 'TCL';
SELECT    MULTIPLY(DIVIDE(SUM(ga.age > 20), COUNT(ga.device_id)), 1.0) AS percentage FROM    gender_age ga   JOIN phone_brand_device_model2 p ON ga.device_id = p.device_id WHERE    p.phone_brand = 'SUGAR'   AND ga.age > 20;
SELECT longitude, latitude FROM events WHERE timestamp BETWEEN '2016-04-30 00:00:00' AND '2016-04-30 23:59:59';
SELECT COUNT(DISTINCT device_model)  FROM phone_brand_device_model2  WHERE phone_brand = 'HTC';
SELECT app_id FROM app_all WHERE is_installed = 1 AND is_active = 1;
SELECT COUNT(DISTINCT app_id) FROM app_labels WHERE label_id = 7;
SELECT device_id FROM gender_age_train WHERE gender = 'F' AND age BETWEEN 29 AND 31;
SELECT a.app_id FROM app_labels a JOIN label_categories l ON a.label_id = l.label_id WHERE l.category = 'game-stress reliever';
SELECT DATE(MAX(e.timestamp))  FROM events e  JOIN gender_age g ON e.device_id = g.device_id  WHERE g.age = 40 AND g.gender = 'M';
SELECT phone_brand, COUNT(is_installed = 1) as installed_apps FROM app_events JOIN phone_brand_device_model2 ON app_events.device_id = phone_brand_device_model2.device_id GROUP BY phone_brand ORDER BY installed_apps DESC LIMIT 1;
SELECT COUNT(*) FROM gender_age_train JOIN app_events AS ae ON gender_age_train.device_id = ae.device_id WHERE gender_age_train.gender = 'M' AND gender_age_train.age < 23 AND ae.is_installed = 1 AND ae.is_active = 0;
SELECT COUNT(gender_age.device_id) FROM gender_age JOIN app_events ON gender_age.device_id = app_events.device_id JOIN app_labels ON app_events.app_id = app_labels.app_id JOIN label_categories ON app_labels.label_id = label_categories.label_id WHERE gender_age.gender = 'F' AND app_events.is_installed = 1 AND label_categories.category = 'game-Finding fault';
SELECT gender FROM gender_age WHERE age IN (SELECT age FROM gender_age_train) GROUP BY gender ORDER BY COUNT(gender) DESC LIMIT 1;
SELECT group, COUNT(*) as count FROM gender_age, phone_brand_device_model2 WHERE device_model = 'SM-T2558' AND device_id = device_id GROUP BY group ORDER BY count DESC LIMIT 1;
SELECT COUNT(*) FROM gender_age_train WHERE age > 50 AND NOT EXISTS (   SELECT 1   FROM phone_brand_device_model2   WHERE device_id = gender_age_train.device_id AND phone_brand != 'HTC' AND device_model != 'One M8 Eye' )
SELECT e.longitude, e.latitude FROM events e JOIN gender_age g ON e.device_id = g.device_id WHERE g.gender = 'F' AND g.age < 30;
SELECT      MULTIPLY(         DIVIDE(             (SELECT COUNT(*) FROM gender_age WHERE gender = 'F' AND is_installed = 0),             (SELECT COUNT(*) FROM gender_age WHERE gender = 'M' AND is_installed = 0)         ),          1.0     ) AS percentage;
Error: 第 1217 个样本有 0 个SQL。
Error: 第 1218 个样本有 0 个SQL。
SELECT *  FROM events  WHERE longitude = 0 AND latitude = 0;
SELECT    SUM(CASE WHEN latitude != 0 AND longitude != 0 THEN 1 ELSE 0 END) -    SUM(CASE WHEN latitude = 0 AND longitude = 0 THEN 1 ELSE 0 END) AS difference FROM    events WHERE    device_id = -9222956879900150000;
SELECT device_id FROM gender_age_train WHERE gender = 'F' LIMIT 3;
SELECT l.category, a.label_id FROM app_labels a JOIN label_categories l ON a.label_id = l.label_id WHERE l.category LIKE '%game%';
SELECT DISTINCT device_model FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO' LIMIT 3;
SELECT    MULTIPLY(     DIVIDE(       SUM(app_events.is_installed = 1 AND app_events.is_active = 0),       COUNT(app_events.app_id)     ),     1.0   ) AS percentage FROM    app_events WHERE    event_id = 6;
SELECT    CASE      WHEN SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) - SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) > 0 THEN 'M'     WHEN SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) - SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) < 0 THEN 'F'     ELSE 'Equal'   END AS Gender_Owned_More FROM    gender_age WHERE    device_id IN (SELECT device_id FROM phone_brand_device_model2 WHERE device_model = 'Galaxy Note 2');
SELECT timestamp FROM events WHERE event_id = 2 AND is_active = 1;
Error: 第 1227 个样本有 0 个SQL。
Error: 第 1228 个样本有 0 个SQL。
Error: 第 1229 个样本有 0 个SQL。
Error: 第 1230 个样本有 0 个SQL。
SELECT timestamp FROM events WHERE event_id = 7 AND app_id = -8022267440849930000;
SELECT category  FROM label_categories  WHERE label_id IN (   SELECT label_id    FROM app_labels    WHERE app_id = -9222198347540750000 );
SELECT group FROM gender_age WHERE device_id IN (   SELECT device_id   FROM phone_brand_device_model2   WHERE phone_brand = 'LG' AND device_model = 'Nexus 4' )
SELECT gender FROM gender_age WHERE device_id IN (   SELECT device_id   FROM phone_brand_device_model2   WHERE phone_brand = 'HTC' AND device_model = 'Desire 826' )
SELECT    MULTIPLY(DIVIDE(SUM(category = 'Academic Information'), COUNT(app_id)), 1.0) AS percentage FROM    app_labels   JOIN label_categories ON app_labels.label_id = label_categories.label_id WHERE    category = 'Academic Information';
SELECT    MULTIPLY(DIVIDE(SUM(g.group = 'F27-28'), COUNT(e.device_id)), 1.0) AS percentage FROM    events e   JOIN gender_age g ON e.device_id = g.device_id WHERE    e.timestamp = '2016-05-03'
SELECT COUNT(*) FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO';
SELECT MAX(COUNT(`group`))  FROM gender_age;
SELECT COUNT(*) FROM events WHERE device_id = '4069764298338760000';
SELECT COUNT(DISTINCT a.app_id) FROM app_labels a JOIN label_categories l ON a.label_id = l.label_id WHERE l.category = 'Equity Fund';
SELECT g.device_id, e.longitude, e.latitude FROM gender_age g JOIN gender_age_train gt ON g.device_id = gt.device_id AND g.group = gt.group AND g.gender = gt.gender JOIN events e ON g.device_id = e.device_id WHERE g.group = 'F24-26' AND g.gender = 'F';
Error: 第 1242 个样本有 0 个SQL。
SELECT phone_brand, device_model FROM events JOIN phone_brand_device_model2 ON events.device_id = phone_brand_device_model2.device_id WHERE timestamp = '2016-05-07 06:03:22';
Error: 第 1244 个样本有 0 个SQL。
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN gender_age.phone_brand = 'vivo' AND gender_age.gender IS NULL AND gender_age.age IS NULL AND gender_age.group IS NULL THEN 1 ELSE 0 END),                    COUNT(gender_age.device_id)),             1.0) AS percentage
Error: 第 1246 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Keyword  WHERE episode_id IN (   SELECT episode_id    FROM Episode    WHERE series = 'Law_and_Order'    AND season = 9    AND episode = 23);
SELECT title FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Keyword   WHERE keyword = 'laundering money' );
Error: 第 1249 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Vote  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE title = 'Cherished') AND stars = 10;
SELECT SUM(votes)  FROM Vote  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE title = 'Cherished');
SELECT title FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Vote   WHERE stars = 10   ORDER BY votes DESC   LIMIT 1 )
SELECT role FROM Credit WHERE credited = 'true' AND episode_id IN (   SELECT episode_id   FROM Episode   WHERE title = 'Cherished' ) AND person_id IN (   SELECT person_id   FROM Person   WHERE name = 'Park Dietz' );
SELECT COUNT(DISTINCT p.person_id) FROM Person p JOIN Award a ON p.person_id = a.person_id JOIN Credit c ON p.person_id = c.person_id WHERE p.person_id NOT IN (SELECT person_id FROM Credit WHERE credited != '') AND a.episode_id IN (SELECT episode_id FROM Episode WHERE title = 'Cherished');
SELECT p.name FROM Person p JOIN Credit c ON p.person_id = c.person_id WHERE c.episode_id IN (   SELECT e.episode_id   FROM Episode e   WHERE e.title = 'Cherished' ) AND c.credited = 'true' AND c.role = 'technical advisor';
Error: 第 1256 个样本有 0 个SQL。
Error: 第 1257 个样本有 0 个SQL。
Error: 第 1258 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Keyword  WHERE episode_id IN (   SELECT episode_id    FROM Episode    WHERE title = 'Disciple' );
SELECT E.title FROM Episode E JOIN Vote V ON E.episode_id = V.episode_id WHERE V.stars = '1' ORDER BY V.votes DESC LIMIT 1;
SELECT COUNT(*)  FROM Award  WHERE series = 'Law and Order'  AND season = 9  AND episode = 20;
SELECT COUNT(*)  FROM Credit  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE series = 'Law and Order' AND season = 9 AND episode = 17) AND credited = 'true';
SELECT E.summary FROM Episode E JOIN Award A ON E.episode_id = A.episode_id WHERE A.award_id = 296;
Error: 第 1264 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Award  WHERE person_id IN (SELECT person_id FROM Person WHERE name = 'Rene Balcer')  AND result = 'Nominated';
SELECT air_date FROM Episode WHERE episode_id = (   SELECT episode_id   FROM Vote   ORDER BY votes DESC   LIMIT 1 );
SELECT p.name FROM Award a JOIN Person p ON a.person_id = p.person_id WHERE a.award_id = 313;
Error: 第 1268 个样本有 0 个SQL。
Error: 第 1269 个样本有 0 个SQL。
SELECT    (COUNT(k.keyword) FROM Keyword k WHERE k.title = 'Refuge: Part 1') /    (COUNT(k.keyword) FROM Keyword k WHERE k.title = 'Shield')
SELECT AVG(COUNT(episode_id))  FROM Credit  WHERE credited = 'TRUE' AND category = 'Cast' AND number_in_series BETWEEN 185 AND 193;
SELECT name  FROM Person  WHERE person_id NOT IN (   SELECT person_id    FROM Credit    WHERE episode_id = 'tt0629391' AND credited <> '' )
SELECT COUNT(DISTINCT person_id)  FROM Award  WHERE result = 'Winner'  GROUP BY person_id  HAVING COUNT(result) > 3;
Error: 第 1274 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Award  WHERE person_id IN (SELECT person_id FROM Person WHERE name = 'Julia Roberts') AND result = 'Nominee';
SELECT P.name FROM Person P JOIN Credit C ON P.person_id = C.person_id WHERE C.category = 'camera operator' AND P.height_meters = (     SELECT MAX(height_meters)      FROM Person );
SELECT COUNT(DISTINCT p.person_id) FROM Person p JOIN Award a ON p.person_id = a.person_id WHERE p.birth_country = 'Canada' AND a.year = 1999;
SELECT COUNT(DISTINCT p.person_id) FROM Person p JOIN Vote v ON p.person_id = v.episode_id WHERE v.episode_id = (SELECT episode_id FROM Episode WHERE rating = (SELECT MAX(rating) FROM Episode)) AND v.stars = 10;
SELECT keyword FROM Keyword WHERE episode_id IN (SELECT episode_id FROM Episode WHERE title = 'Shield');
SELECT (COUNT(e.episode_id) WHERE e.stars = 1) / COUNT(e.episode_id) * 100 AS percentage FROM Episode e WHERE e.title = 'True North';
SELECT E.title FROM Episode E JOIN (   SELECT episode_id, COUNT(*) as count_keywords   FROM Keyword   GROUP BY episode_id   ORDER BY count_keywords DESC   LIMIT 1 ) K ON E.episode_id = K.episode_id;
SELECT COUNT(*) FROM Award WHERE organization = 'International Monitor Awards' AND result = 'Winner' AND episode_id IN (   SELECT episode_id   FROM Episode   WHERE air_date LIKE '1998%' )
SELECT COUNT(*)  FROM Award  WHERE series = (SELECT series FROM Episode WHERE title = 'Agony')  AND result = 'Winner';
Error: 第 1284 个样本有 0 个SQL。
SELECT k.keyword FROM Episode e JOIN Keyword k ON e.episode_id = k.episode_id WHERE e.episode_id IN (   SELECT episode_id   FROM Vote   WHERE votes = (     SELECT MAX(votes)     FROM Vote     WHERE votes < (       SELECT MAX(votes)       FROM Vote     )   ) );
SELECT COUNT(*)  FROM Award  WHERE result = 'Winner' AND award = 'Agony';
SELECT P.name FROM Person P JOIN Credit C ON P.person_id = C.person_id JOIN Episode E ON C.episode_id = E.episode_id WHERE E.title = 'Flight' AND C.category = 'Narrator';
Error: 第 1288 个样本有 0 个SQL。
SELECT P.name FROM Person P JOIN Credit C ON P.person_id = C.person_id WHERE C.episode_id IN (   SELECT E.episode_id   FROM Episode E   WHERE E.episode = 3 ) AND C.role = 'stunt coordinator';
SELECT COUNT(*)  FROM Person p  WHERE NOT EXISTS (SELECT 1 FROM Credit c WHERE c.episode_id IN (SELECT e.episode_id FROM Episode e WHERE e.title = 'Admissions') AND c.person_id = p.person_id AND c.credited != '');
SELECT E.title FROM Episode E JOIN Credit C ON E.episode_id = C.episode_id WHERE C.category = 'Art Department' GROUP BY E.title ORDER BY COUNT(C.person_id) DESC LIMIT 1;
Error: 第 1292 个样本有 0 个SQL。
SELECT title FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Vote   WHERE stars = 10 AND votes >= 30 ) ORDER BY episode_id LIMIT 3;
Error: 第 1294 个样本有 0 个SQL。
SELECT COUNT(DISTINCT p.person_id) FROM Person p JOIN Vote v ON p.person_id = v.episode_id WHERE v.episode = (SELECT episode FROM Episode WHERE episode = 24) AND v.stars = 1;
SELECT p.name FROM Person p JOIN Credit c ON p.person_id = c.person_id WHERE c.episode_id IN (   SELECT e.episode_id   FROM Episode e   WHERE e.series IS NOT NULL ) AND c.category = 'Cast';
SELECT      p.name,      ROUND((COUNT(c.person_id) / (SELECT MAX(COUNT(p2.person_id)) FROM Person p2)) * 100, 2) AS percentage FROM      Credit c JOIN      Person p ON c.person_id = p.person_id GROUP BY      p.name ORDER BY      COUNT(c.person_id) DESC LIMIT 1;
SELECT E.title FROM Episode E JOIN Award A ON E.episode_id = A.episode_id WHERE A.organization = 'Primetime Emmy' AND A.award_category = 'Primetime Emmy';
SELECT COUNT(*)  FROM Episode e  WHERE e.episode_id NOT IN (   SELECT a.episode_id    FROM Award a    WHERE a.result = 'Winner' )
Error: 第 1300 个样本有 0 个SQL。
Error: 第 1301 个样本有 0 个SQL。
SELECT birth_place || ', ' || birth_region AS full_place_of_birth FROM Person WHERE birth_name = 'Rene Chenevert Balcer';
Error: 第 1303 个样本有 0 个SQL。
SELECT title FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Vote   WHERE stars = 1 )
SELECT p.name FROM Person p JOIN Award a ON p.person_id = a.person_id WHERE a.result = 'Winner' AND a.role = 'director';
SELECT COUNT(*)  FROM Vote  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE title = 'Juvenile');
Error: 第 1307 个样本有 0 个SQL。
SELECT year FROM Award WHERE award = 'Winner' AND series = (SELECT series FROM Episode WHERE title = 'DWB');
SELECT DISTINCT birth_region FROM Person, Award, Credit WHERE Person.person_id = Credit.person_id AND Credit.episode_id = Award.episode_id AND Credit.category = 'location manager' AND Credit.role = 'assistant location manager';
SELECT SUM(stars)  FROM Vote  WHERE episode_id IN (   SELECT episode_id    FROM Credit    WHERE person_id IN (     SELECT person_id      FROM Person      WHERE name = 'Donna Villella'   ) );
SELECT role FROM Award WHERE person_id IN (SELECT person_id FROM Person WHERE name = 'Julia Roberts') AND result = 'Nominee';
Error: 第 1312 个样本有 0 个SQL。
SELECT E.title FROM Episode E WHERE E.episode_id = (SELECT episode_id                       FROM Award                       WHERE result = 'Nominee'                       GROUP BY episode_id                       ORDER BY COUNT(*) DESC                       LIMIT 1);
Error: 第 1314 个样本有 0 个SQL。
Error: 第 1315 个样本有 0 个SQL。
SELECT AVG(stars)  FROM Vote  WHERE episode_id IN (SELECT episode_id FROM Credit WHERE person_id IN (SELECT person_id FROM Person WHERE name = 'Jim Bracchitta'));
SELECT (COUNT(c.episode_id) / COUNT(e.episode_id)) * 100 AS percentage FROM Credit c JOIN Episode e ON c.episode_id = e.episode_id WHERE e.title = 'True North' AND c.role = 'Additional Crew';
SELECT E.title, E.summary, E.air_date FROM Episode E JOIN Vote V ON E.episode_id = V.episode_id WHERE V.stars = 10 AND V.votes = 72;
SELECT e.air_date, e.rating FROM Episode e JOIN Vote v ON e.episode_id = v.episode_id WHERE v.stars = 6;
SELECT p.name, c.role FROM Award a JOIN Person p ON a.person_id = p.person_id JOIN Credit c ON a.person_id = c.person_id WHERE a.award = 'Best Television Episode' AND a.award_category = 'Edgar' AND a.year = 2000;
SELECT organization, year, award, award_category FROM Award WHERE person_id IN (SELECT person_id FROM Person WHERE name = 'Rene Balcer') AND result = 'Winner';
SELECT DISTINCT    year, episode_id FROM    Award WHERE    award = 'Television'   AND award_category = 'Silver Gavel Award'   AND organization = 'American Bar Association Silver Gavel Awards for Media and the Arts'   AND result = 'Winner'   AND person_id IN (     SELECT person_id     FROM Person     WHERE name = 'Constantine Makris'   )   AND (     year IN (       SELECT year       FROM Award       WHERE person_id = Award.person_id       GROUP BY year       HAVING COUNT(*) = 2     )   );
SELECT P.name  FROM Person P  JOIN Credit C ON P.person_id = C.person_id  JOIN Award A ON C.episode_id = A.episode_id  WHERE P.name IN (   SELECT P2.name    FROM Person P2    JOIN Credit C2 ON P2.person_id = C2.person_id    JOIN Award A2 ON C2.episode_id = A2.episode_id    WHERE A2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts'    AND A2.award_category = 'Silver Gavel Award'    AND A2.result = 'Winner'    AND A2.role = 'writer'    AND A2.year IN (     SELECT A3.year      FROM Award A3      GROUP BY A3.year      HAVING COUNT(*) = 2   ) )
SELECT COUNT(*)  FROM Award  WHERE series = 'Law and Order'  AND year = 1999  AND organization = 'Primetime Emmy Awards'  AND result = 'nominee'  AND episode_id IN (SELECT episode_id FROM Episode WHERE series = 'Law and Order' AND episode = 20);
SELECT E.title, C.role FROM Award A JOIN Person P ON A.person_id = P.person_id JOIN Credit C ON A.person_id = C.person_id AND A.episode_id = C.episode_id JOIN Episode E ON A.episode_id = E.episode_id WHERE A.organization = 'Primetime Emmy Awards' AND A.year = 1999 AND A.award = 'Outstanding Guest Actress in a Drama Series' AND A.result = 'Winner' AND P.name = 'Julia Roberts';
SELECT E.title, E.air_date FROM Episode E JOIN Credit C ON E.episode_id = C.episode_id JOIN Person P ON C.person_id = P.person_id WHERE P.name = 'Billy Fox' AND C.role = 'producer';
Error: 第 1327 个样本有 0 个SQL。
Error: 第 1328 个样本有 0 个SQL。
SELECT P.name FROM Person P JOIN Credit C ON P.person_id = C.person_id JOIN Episode E ON C.episode_id = E.episode_id WHERE E.episode = 1 AND C.role = 'president of NBC West Coast';
SELECT E.title FROM Episode E JOIN Vote V ON E.episode_id = V.episode_id ORDER BY SUM(V.stars, V.percent) / 100 DESC LIMIT 3;
SELECT    COUNT(DISTINCT p.person_id) /    (SELECT COUNT(*) FROM Credit WHERE category = 'Cast') AS ratio,   p.name, c.role FROM    Person p   JOIN Credit c ON p.person_id = c.person_id   JOIN Episode e ON c.episode_id = e.episode_id WHERE    e.episode = 2 AND p.birth_country = 'USA' GROUP BY    p.name, c.role;
Error: 第 1332 个样本有 0 个SQL。
Error: 第 1333 个样本有 0 个SQL。
SELECT c.role AS "credit name" FROM Credit c WHERE c.episode_id IN (   SELECT e.episode_id   FROM Episode e   WHERE e.episode = 9 )
SELECT award FROM Award WHERE result IN ('Winner', 'Nominee') AND episode_id IN (   SELECT episode_id   FROM Episode   WHERE episode = 20 ) AND series IS NOT NULL;
Error: 第 1336 个样本有 0 个SQL。
SELECT p.name, e.number_in_series FROM Person p JOIN Credit c ON p.person_id = c.person_id JOIN Award a ON c.episode_id = a.episode_id AND c.role = 'director' AND a.result = 'Winner' JOIN Episode e ON a.episode_id = e.episode_id;
SELECT e.* FROM Episode e JOIN Award a ON e.episode_id = a.episode_id WHERE a.result = 'Nominee'
Error: 第 1339 个样本有 0 个SQL。
SELECT (SELECT votes FROM Vote WHERE episode_id IN (SELECT episode_id FROM Episode WHERE episode = 24) AND stars = 10) - (SELECT votes FROM Vote WHERE episode_id IN (SELECT episode_id FROM Episode WHERE episode = 1) AND stars = 10)
SELECT E.episode_id, E.rating FROM Episode E JOIN (   SELECT episode_id   FROM Award   WHERE result = 'Winner'   GROUP BY episode_id   ORDER BY COUNT(*) DESC   LIMIT 1 ) A ON E.episode_id = A.episode_id
SELECT COUNT(*)  FROM Credit  WHERE credited = 'true' AND episode_id >= 1 AND episode_id <= 10;
Error: 第 1343 个样本有 0 个SQL。
SELECT AVG(stars)  FROM Vote v  JOIN Award a ON v.episode_id = a.episode_id  WHERE a.result = 'Winner'  GROUP BY v.episode_id  ORDER BY AVG(stars) DESC  LIMIT 1;
SELECT AVG(rating)  FROM Episode  WHERE episode_id IN (     SELECT episode_id      FROM Award      WHERE result = 'nominated' );
Error: 第 1346 个样本有 0 个SQL。
SELECT birth_country AS continent FROM Person WHERE name = 'Michael Preston';
SELECT P.name FROM Award A JOIN Person P ON A.person_id = P.person_id WHERE A.result = 'Nominee' AND A.role = 'Katrina Ludlow' AND A.series = 'Law & Order';
SELECT P.name  FROM Award A  JOIN Credit C ON A.person_id = C.person_id  JOIN Person P ON C.person_id = P.person_id  WHERE A.result = 'Winner'  AND A.award = 'Best Television Episode'  AND C.role = 'teleplay';
SELECT Person.birthdate FROM Person JOIN Credit ON Person.person_id = Credit.person_id JOIN Award ON Credit.episode_id = Award.episode_id WHERE Credit.category = 'writer' AND Award.result = 'won';
SELECT E.title FROM Episode E JOIN Award A ON E.episode_id = A.episode_id WHERE A.award = 'Outstanding Costume Design for a Series';
SELECT E.episode_id, E.title, SUM(V.votes) AS total_votes FROM Episode E JOIN Vote V ON E.episode_id = V.episode_id GROUP BY E.episode_id, E.title ORDER BY total_votes DESC LIMIT 1;
SELECT P.name FROM Person P JOIN Credit C ON P.person_id = C.person_id WHERE P.nickname = 'Alex Brown' AND C.credited = 'true';
SELECT DISTINCT birth_place FROM Person WHERE person_id = 'nm0007064' AND credited != 'Narrator';
SELECT keyword FROM Keyword WHERE episode_id IN (SELECT episode_id FROM Episode WHERE title = 'Shield');
SELECT P.name FROM Person P JOIN Credit C ON P.person_id = C.person_id JOIN Award A ON C.episode_id = A.episode_id AND C.credited = 'Yes' WHERE P.height_meters > 1.80 AND A.result = 'Winner';
SELECT E.episode_id, E.title FROM Episode E JOIN Keyword K ON E.episode_id = K.episode_id WHERE K.keyword IN ('nun', 'priest') GROUP BY E.episode_id, E.title HAVING COUNT(DISTINCT K.keyword) = 2;
SELECT e.episode FROM Episode e WHERE e.rating = 8.5 AND e.episode_id IN (   SELECT e.episode_id   FROM Episode e   ORDER BY e.rating DESC   LIMIT 1 OFFSET 1 ) AND e.episode_id IN (   SELECT a.episode_id   FROM Award a   WHERE a.award = 'Best Television Episode'   AND a.result = 'Winner' )
SELECT E.episode_id, E.title FROM Episode E WHERE E.episode_id IN (   SELECT E2.episode_id   FROM Episode E2   ORDER BY (SELECT V.stars FROM Vote V WHERE V.episode_id = E2.episode_id) DESC   LIMIT 3 );
SELECT VALUE FROM observations WHERE DATE = '2008-03-11' AND CODE IN (   SELECT CODE   FROM observations   WHERE DESCRIPTION = 'Body Height' ) AND PATIENT IN (   SELECT patient   FROM patients   WHERE first = 'Elly' AND last = 'Koss' );
SELECT    (SELECT VALUE FROM observations WHERE DATE LIKE '2009%' AND DESCRIPTION = 'Body Weight') -    (SELECT VALUE FROM observations WHERE DATE LIKE '2008%' AND DESCRIPTION = 'Body Weight')  FROM patients  WHERE last = 'Koss' AND first = 'Elly';
SELECT MAX(VALUE)  FROM observations  WHERE PATIENT IN (SELECT patient FROM patients WHERE first = 'Elly' AND last = 'Koss')  AND CODE = (SELECT CODE FROM observations WHERE DESCRIPTION = 'Systolic Blood Pressure');
Error: 第 1363 个样本有 0 个SQL。
SELECT p.first, p.last FROM observations o JOIN patients p ON o.patient = p.patient WHERE o.CODE = 'Systolic Blood Pressure' ORDER BY o.VALUE DESC LIMIT 1;
SELECT    SUM(MULTIPLY(365, SUBTRACT(strftime('%Y', STOP), strftime('%Y', START))),        MULTIPLY(30, SUBTRACT(strftime('%m', STOP), strftime('%m', START))),        SUBTRACT(strftime('%d', STOP), strftime('%d', STOP)))  FROM    medications  WHERE    PATIENT IN (SELECT patient FROM patients WHERE first = 'Elly' AND last = 'Koss')    AND DESCRIPTION LIKE 'Acetaminophen%';
SELECT DESCRIPTION FROM medications WHERE PATIENT IN (   SELECT patient   FROM patients   WHERE first = 'Elly' AND last = 'Koss' );
SELECT o.DESCRIPTION FROM medications m JOIN patients p ON m.PATIENT = p.patient WHERE m.DESCRIPTION LIKE 'Acetaminophen%' AND p.first = 'Elly' AND p.last = 'Koss';
SELECT m.DESCRIPTION  FROM medications m  JOIN patients p ON m.PATIENT = p.patient  JOIN conditions c ON p.patient = c.PATIENT  WHERE c.DESCRIPTION LIKE '%Streptococcal sore throat%' AND m.REASONDESCRIPTION = 'Streptococcal sore throat%';
SELECT CONCAT(prefix, ' ', first, ' ', last, ' ', suffix) AS full_name FROM patients WHERE full_name IN (   SELECT CONCAT(prefix, ' ', first, ' ', last, ' ', suffix)   FROM patients   INNER JOIN medications ON patients.patient = medications.patient   WHERE DESCRIPTION LIKE 'Acetaminophen%' );
SELECT DESCRIPTION FROM conditions WHERE START = '2009-01-08' AND PATIENT IN (   SELECT patient   FROM patients   WHERE first = 'Elly' AND last = 'Koss' );
Error: 第 1371 个样本有 0 个SQL。
SELECT DIVIDE(SUM(O.VALUE), COUNT(O.VALUE))  FROM observations O  WHERE O.DESCRIPTION = 'Body Weight' AND O.PATIENT IN (   SELECT P.patient    FROM patients P    WHERE P.first = 'Elly' AND P.last = 'Koss' );
SELECT      DIVIDE(COUNT(marital = 'M'), COUNT(patient)) as percentage  FROM      patients  JOIN      conditions ON patients.patient = conditions.PATIENT  WHERE      conditions.DESCRIPTION = 'Cystitis';
SELECT DESCRIPTION FROM observations WHERE DATE = '2010-08-02' AND CODE = 'Body Height' AND PATIENT IN (   SELECT patient   FROM patients   WHERE first = 'Vincent' AND last = 'Wyman' );
Error: 第 1375 个样本有 0 个SQL。
SELECT    m.DESCRIPTION AS 'Medication',    m.VALUE AS 'Reason' FROM    medications m   JOIN observations o ON m.PATIENT = o.PATIENT AND m.START = o.DATE WHERE    m.CODE = 'Leucovorin 100 MG Injection' AND m.START = '1970-12-19';
Error: 第 1377 个样本有 0 个SQL。
Error: 第 1378 个样本有 0 个SQL。
SELECT DESCRIPTION FROM procedures WHERE DATE = '2009-08-09' AND PATIENT = (SELECT patient FROM patients WHERE first = 'Jacquelyn' AND last = 'Shanahan' AND suffix = 'Ms.');
SELECT COUNT(*)  FROM claims  WHERE PATIENT IN (SELECT patient FROM patients WHERE first = 'Abbie' AND last = 'Cole')  AND BILLABLEPERIOD BETWEEN '2010-12-31' AND '2012-01-01';
SELECT COUNT(*)  FROM allergies  WHERE PATIENT IN (SELECT patient FROM patients WHERE first = 'Saundra' AND last = 'Monahan' AND suffix = 'Mrs.');
SELECT p.first || ' ' || p.last AS name FROM patients p JOIN claims c ON p.patient = c.patient WHERE c.BILLABLEPERIOD = '1947-09-11';
SELECT e.DESCRIPTION  FROM encounters e  WHERE e.DATE = '2008-10-25' AND e.PATIENT IN (   SELECT p.patient    FROM patients p    WHERE p.first = 'Hubert' AND p.last = 'Baumbach' );
SELECT DESCRIPTION FROM conditions WHERE PATIENT = (SELECT patient FROM patients WHERE first = 'Keven' AND last = 'Kuhn') AND START = '2016-09-24' AND STOP = '2016-10-10';
SELECT DATE FROM procedures WHERE PATIENT IN (   SELECT patient   FROM patients   WHERE last = 'Deckow' AND first = 'Ira' AND suffix = 'Mrs' ) AND DESCRIPTION = 'Standard pregnancy test';
SELECT AVG(DIVIDE(SUBTRACT(stop, start), COUNT(ID)))  FROM careplans  WHERE patient = (SELECT patient FROM patients WHERE first = 'Wesley' AND last = 'Lemke');
SELECT AVG(DIVIDE(SUBTRACT(stop, start), COUNT(description = 'Normal pregnancy')))  FROM patients p  JOIN conditions c ON p.patient = c.patient  WHERE p.first = 'Angelena' AND p.last = 'Kertzmann' AND c.description = 'Normal pregnancy';
SELECT A.PATIENT FROM allergies A WHERE STOP IS NOT NULL ORDER BY (CASE WHEN SUBSTR(STOP, -2, 1) = '9' THEN SUBSTR(STOP, LENGTH(STOP) - 1) + 2000 ELSE SUBSTR(STOP, LENGTH(STOP) - 1) + 2000 END) -        (CASE WHEN SUBSTR(START, -2, 1) = '9' THEN SUBSTR(START, LENGTH(START) - 1) + 1900 ELSE SUBSTR(START, LENGTH(START) - 1) + 2000 END) DESC LIMIT 1;
SELECT COUNT(DISTINCT patients.patient) FROM patients JOIN conditions ON patients.patient = conditions.PATIENT WHERE conditions.DESCRIPTION = 'Diabetes' AND conditions.START LIKE '1988%';
Error: 第 1390 个样本有 0 个SQL。
SELECT C.PATIENT FROM conditions C WHERE C.DESCRIPTION = 'Hypertension' ORDER BY C.START DESC LIMIT 1;
SELECT DESCRIPTION FROM allergies GROUP BY DESCRIPTION ORDER BY COUNT(DESCRIPTION) DESC LIMIT 1;
SELECT PATIENT FROM observations WHERE DESCRIPTION = 'Body Height' ORDER BY VALUE DESC LIMIT 1;
SELECT MAX(COUNT(DESCRIPTION))  FROM conditions  WHERE PATIENT IN (SELECT patient FROM patients WHERE gender = 'F' AND ethnicity = 'american');
SELECT COUNT(*)  FROM patients  JOIN medications ON patients.patient = medications.PATIENT  JOIN (SELECT patient, STOP FROM medications WHERE START LIKE '2016%' AND DESCRIPTION = 'Ibuprofen 200 MG Oral Tablet') AS stopped  WHERE patients.ethnicity = 'dominican' AND stopped.patient = patients.patient AND SUBTRACT(strftime('%m', stopped.STOP), strftime('%m', medications.START)) = 1;
Error: 第 1396 个样本有 0 个SQL。
Error: 第 1397 个样本有 0 个SQL。
SELECT COUNT(*) FROM patients p JOIN immunizations i ON p.patient = i.patient WHERE p.race = 'black' AND i.DESCRIPTION = 'DTaP' AND i.DATE LIKE '2013%';
SELECT COUNT(*)  FROM immunizations  WHERE PATIENT IN (   SELECT PATIENT    FROM conditions    WHERE START = (     SELECT MAX(START)      FROM conditions    )    AND PATIENT IN (     SELECT PATIENT      FROM conditions      WHERE START = (       SELECT MAX(START)        FROM conditions      )      ORDER BY PREVALENCE_RATE DESC      LIMIT 1    )  );
SELECT COUNT(DISTINCT p.patient) FROM patients p JOIN conditions c ON p.patient = c.patient WHERE (c.START, c.STOP) IN (   SELECT START, STOP   FROM conditions   GROUP BY START, STOP   ORDER BY COUNT(*) DESC, START, STOP   LIMIT 1 )
SELECT MAX(c.DESCRIPTION)  FROM conditions c  JOIN patients p ON c.PATIENT = p.patient  JOIN immunizations i ON p.patient = i.PATIENT  WHERE i.DESCRIPTION = 'Influenza seasonal injectable preservative free';
SELECT c.PATIENT FROM conditions c JOIN all_prevalences ap ON ap.ITEM = c.CODE WHERE ap.PREVALENCE_PERCENTAGE = 18.8;
SELECT COUNT(*)  FROM conditions  WHERE PATIENT IN (SELECT patient FROM patients WHERE first = 'Tyree' AND last = 'Eichmann');
Error: 第 1404 个样本有 0 个SQL。
SELECT COUNT(*)  FROM patients  WHERE patient IN (   SELECT PATIENT    FROM conditions    WHERE DESCRIPTION = 'Prediabetes'  ) AND gender = 'F';
SELECT p.first || ' ' || p.last AS full_name FROM patients p JOIN observations o ON p.patient = o.patient WHERE o.CODE = 'Body Mass Index' AND o.UNITS = 'kg/m2' AND o.VALUE = (SELECT MIN(VALUE) FROM observations WHERE CODE = 'Body Mass Index' AND UNITS = 'kg/m2');
Error: 第 1407 个样本有 0 个SQL。
SELECT COUNT(*)  FROM patients  WHERE gender = 'F'  AND race = 'Asian'  JOIN medications ON patients.patient = medications.patient  WHERE medications.DESCRIPTION = 'oxaliplatin 5 MG/ML [Eloxatin]';
SELECT COUNT(*) FROM patients WHERE deathdate IS NULL AND EXISTS (   SELECT 1   FROM conditions   WHERE conditions.PATIENT = patients.patient   AND conditions.DESCRIPTION = 'Stroke'   AND conditions.STOP IS NULL );
Error: 第 1410 个样本有 0 个SQL。
SELECT AVG(VALUE)  FROM observations  WHERE PATIENT IN (   SELECT patient    FROM conditions    WHERE CODE IN (     SELECT CODE      FROM conditions      WHERE DESCRIPTION = 'Hypertension'   ) )  AND DESCRIPTION = 'Diastolic Blood Pressure';
SELECT DESCRIPTION FROM medications WHERE PATIENT IN (   SELECT patient   FROM patients   WHERE ssn = '999-94-3751' )
SELECT ssn FROM patients WHERE gender = 'F' AND ethnicity = 'irish' AND patient IN (   SELECT patient   FROM allergies   WHERE DESCRIPTION = 'Allergy to grass pollen' );
SELECT patients.first, patients.last FROM careplans JOIN patients ON careplans.PATIENT = patients.patient WHERE careplans.CODE = '311791003';
SELECT c.DESCRIPTION  FROM patients p  JOIN conditions c ON p.patient = c.patient  WHERE p.deathdate IS NOT NULL  ORDER BY (strftime('%Y', p.deathdate) - strftime('%Y', p.birthdate)) DESC  LIMIT 1;
SELECT ITEM FROM all_prevalences ORDER BY OCCURRENCES DESC LIMIT 1;
Error: 第 1417 个样本有 0 个SQL。
SELECT p.ssn FROM patients p JOIN all_prevalences ap ON 1=1 JOIN conditions c ON 1=1 WHERE ap.PREVALENCE_RATE < (SELECT AVG(PREVALENCE_RATE) FROM all_prevalences) * 0.3 LIMIT 5;
Error: 第 1419 个样本有 0 个SQL。
SELECT COUNT(*)  FROM encounters  WHERE PATIENT IN (SELECT patient FROM patients WHERE last = 'D\'Amore' AND first = 'Major');
SELECT DESCRIPTION FROM procedures WHERE PATIENT IN (   SELECT patient   FROM patients   WHERE first = 'Emmy' AND last = 'Waelchi' );
SELECT p.first, p.last FROM patients p JOIN procedures pr ON p.patient = pr.patient WHERE pr.DESCRIPTION = 'Extraction of wisdom tooth';
SELECT VALUE  FROM observations  WHERE DESCRIPTION = 'Body Weight' AND PATIENT = (SELECT patient FROM patients WHERE first = 'Elly' AND last = 'Koss');
SELECT p.patient FROM patients p JOIN allergies a ON p.patient = a.patient WHERE a.DESCRIPTION = 'Allergy to soya';
SELECT COUNT(*)  FROM immunizations  WHERE PATIENT IN (SELECT patient FROM patients WHERE first = 'Keven' AND last = 'Kuhn')  AND DESCRIPTION = 'DTaP';
SELECT p.first || ' ' || p.last AS full_name FROM patients p JOIN medications m ON p.patient = m.patient WHERE m.DESCRIPTION = 'Clopidogrel 75 MG Oral Tablet' AND strftime('%Y', m.STOP) - strftime('%Y', m.START) > 10;
Error: 第 1427 个样本有 0 个SQL。
SELECT m.DESCRIPTION  FROM medications m  JOIN patients p ON m.PATIENT = p.patient  JOIN allergies a ON p.patient = a.PATIENT  WHERE a.DESCRIPTION = 'Allergy to mould' AND m.START = '6/6/16';
Error: 第 1429 个样本有 0 个SQL。
SELECT PREVALENCE_RATE FROM all_prevalences WHERE ITEM IN (   SELECT CODE   FROM conditions   WHERE START = '5/9/2014'   AND DESCRIPTION IN (     SELECT DESCRIPTION     FROM conditions     WHERE START = '5/9/2014'   ) )
SELECT p.first, p.last,         (strftime('%Y', p.deathdate) - strftime('%Y', p.birthdate)) AS age FROM patients p JOIN observations o ON p.patient = o.patient WHERE o.DATE LIKE '2011%' AND o.DESCRIPTION = 'Systolic Blood Pressure' AND o.VALUE = 200 AND o.UNITS = 'mmHg';
SELECT    DIVIDE(COUNT(DISTINCT P.PATIENT), COUNT(DISTINCT P.PATIENT)) as percentage FROM    immunizations I   JOIN patients P ON I.PATIENT = P.PATIENT WHERE    strftime('%Y', I.DATE) = '2017'   AND I.DESCRIPTION = 'Influenza seasonal injectable preservative free'   AND P.ETHNICITY = 'english';
Error: 第 1433 个样本有 0 个SQL。
SELECT patients.birthdate  FROM patients  JOIN careplans ON patients.patient = careplans.patient  WHERE careplans.DESCRIPTION = 'Outpatient Encounter';
SELECT p.first  FROM patients p  JOIN conditions c ON p.patient = c.patient  WHERE c.DESCRIPTION = 'Cystitis';
Error: 第 1436 个样本有 0 个SQL。
Error: 第 1437 个样本有 0 个SQL。
SELECT p.last FROM patients p JOIN allergies a ON p.patient = a.patient WHERE a.DESCRIPTION = 'Allergy to dairy product';
Error: 第 1439 个样本有 0 个SQL。
SELECT COUNT(*) FROM patients JOIN allergies ON patients.patient = allergies.patient WHERE patients.gender = 'M' AND allergies.DESCRIPTION = 'House dust mite allergy';
SELECT DESCRIPTION FROM allergies WHERE PATIENT IN (   SELECT patient   FROM patients   WHERE race = 'white' ) GROUP BY DESCRIPTION ORDER BY COUNT(DESCRIPTION) DESC LIMIT 1;
SELECT p.first FROM patients p JOIN immunizations i ON p.patient = i.patient WHERE i.DESCRIPTION = 'Influenza seasonal injectable preservative free';
Error: 第 1443 个样本有 0 个SQL。
Error: 第 1444 个样本有 0 个SQL。
SELECT COUNT(DISTINCT DESCRIPTION)  FROM allergies  WHERE PATIENT IN (SELECT patient FROM patients WHERE ethnicity = 'german');
SELECT AVG(DATEDIFF(deathdate, birthdate)) AS avg_age FROM patients WHERE patient IN (   SELECT patient   FROM careplans   WHERE REASONDESCRIPTION = 'Prediabetes' ) AND deathdate IS NOT NULL;
Error: 第 1447 个样本有 0 个SQL。
SELECT COUNT(*) FROM patients WHERE patient IN (   SELECT PATIENT   FROM procedures   WHERE DESCRIPTION = 'Bone immobilization' ) AND drivers IS NOT NULL;
SELECT patients.first || ' ' || patients.last AS full_name FROM patients WHERE patients.patient IN (   SELECT allergies.patient   FROM allergies   GROUP BY allergies.patient   HAVING COUNT(allergies.DESCRIPTION) > 3 )
SELECT COUNT(DISTINCT p.patient) FROM patients p JOIN allergies a ON p.patient = a.patient JOIN immunizations i ON p.patient = i.patient WHERE a.DESCRIPTION = 'Allergy to eggs' AND i.DESCRIPTION = 'Td (adult) preservative free';
SELECT COUNT(DISTINCT patients.patient) FROM patients JOIN observations ON patients.patient = observations.patient JOIN careplans ON patients.patient = careplans.patient WHERE observations.DESCRIPTION = 'Body Weight' AND observations.VALUE > 100 AND observations.UNITS = 'kg' AND careplans.DESCRIPTION = 'Diabetes self management plan';
SELECT Gender FROM patients WHERE Gender IN (   SELECT Gender   FROM patients   JOIN allergies ON patients.patient = allergies.patient   WHERE allergies.DESCRIPTION = 'Dander (animal) allergy'   GROUP BY Gender   ORDER BY COUNT(*) DESC ) LIMIT 1;
SELECT BILLABLEPERIOD FROM claims WHERE PATIENT IN (   SELECT patient   FROM patients   WHERE last = 'Dickinson' )
Error: 第 1454 个样本有 0 个SQL。
Error: 第 1455 个样本有 0 个SQL。
SELECT COUNT(DISTINCT p.patient) FROM patients p JOIN careplans c ON p.patient = c.patient WHERE c.DESCRIPTION = 'Concussion with loss of consciousness' AND p.marital = 'M';
SELECT COUNT(DISTINCT patients.patient) FROM patients JOIN careplans ON patients.patient = careplans.patient JOIN immunizations ON patients.patient = immunizations.patient WHERE careplans.STOP = '2013-11-23' AND immunizations.DESCRIPTION = 'rotavirus monovalent';
SELECT COUNT(DISTINCT p.patient) FROM patients p JOIN medications m ON p.patient = m.patient WHERE p.gender = 'F' AND m.DESCRIPTION = 'Nitroglycerin 0.4 MG/ACTUAT [Nitrolingual]';
SELECT      MULTIPLY(DIVIDE(SUM(CASE WHEN allergies.DESCRIPTION = 'Allergy to grass pollen' THEN 1 ELSE 0 END),                       (SELECT COUNT(*) FROM patients WHERE birthplace = 'Pembroke MA US')), 100.0) AS percentage
SELECT AVG(o.VALUE)  FROM observations o  JOIN patients p ON o.PATIENT = p.patient  WHERE o.DESCRIPTION = 'Body Weight' AND o.UNITS = 'kg' AND p.race = 'asian';
SELECT patients.ssn FROM patients JOIN allergies ON patients.patient = allergies.patient WHERE allergies.DESCRIPTION = 'Latex allergy';
SELECT    SUBTRACT(allergies.STOP, allergies.START) AS duration,   allergies.DESCRIPTION AS type FROM    allergies WHERE    allergies.PATIENT = (SELECT patients.patient FROM patients WHERE patients.first = 'Isadora' AND patients.last = 'Moen');
SELECT COUNT(*)  FROM careplans  WHERE patient = (SELECT patient FROM patients WHERE first = 'Elly' AND last = 'Koss')  AND START BETWEEN '2009-11-1' AND '2010-10-23';
SELECT patients.first, patients.last FROM patients, careplans WHERE patients.marital = 'M' AND year(careplans.START) = 2009 AND year(careplans.STOP) = 2009 AND DATEDIFF(careplans.STOP, careplans.START) > 60;
SELECT immunizations.DATE FROM immunizations WHERE immunizations.DESCRIPTION = 'Influenza seasonal injectable preservative free' AND immunizations.PATIENT = (SELECT patients.patient FROM patients WHERE patients.first = 'Elly' AND patients.last = 'Koss');
SELECT COUNT(*)  FROM patients  JOIN immunizations ON patients.patient = immunizations.patient  WHERE patients.race = 'black'    AND immunizations.DATE BETWEEN '2010-07-09' AND '2013-10-29'    AND immunizations.DESCRIPTION = 'meningococcal MCV4P';
Error: 第 1467 个样本有 0 个SQL。
SELECT    SUBTRACT(medications.STOP, medications.START) AS duration FROM    medications WHERE    medications.DESCRIPTION = 'Acetaminophen 160 MG'    AND medications.REASONDESCRIPTION = 'Acetaminophen 160 MG'    AND medications.PATIENT = (SELECT patients.patient FROM patients WHERE patients.first = 'Berry' AND patients.last = 'Keebler');
SELECT COUNT(DISTINCT patients.patient) FROM patients JOIN medications ON patients.patient = medications.patient JOIN encounters ON medications.encounter = encounters.ID WHERE    substr(medications.START, 1, 4) = '2010'    AND substr(medications.stop, 1, 4) = '2010'    AND medications.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]'    AND medications.REASONDESCRIPTION = 'Cystitis';
SELECT e.REASONDESCRIPTION FROM encounters e WHERE e.DATE = '2013-11-20' AND e.PATIENT IN (   SELECT p.patient   FROM patients p   WHERE p.first = 'Lavelle' AND p.last = 'Vandervort' );
SELECT COUNT(DISTINCT patients.patient) FROM patients JOIN encounters ON patients.patient = encounters.patient WHERE patients.ethnicity = 'german' AND encounters.DESCRIPTION = 'Outpatient Encounter' AND encounters.DATE BETWEEN '2011-09-01' AND '2012-08-29';
SELECT p.ssn, p.address FROM patients p JOIN encounters e ON p.patient = e.patient WHERE e.date = '2008-06-13' AND e.reasondescription = 'Viral sinusitis (disorder)';
SELECT    m.REASONDESCRIPTION AS reason,   m.DESCRIPTION AS name_of_drug,   JULIANDAY(m.STOP, '1970-01-01') - JULIANDAY(m.START, '1970-01-01') AS duration_of_medication FROM    medications m   JOIN encounters e ON m.encounter = e.ID   JOIN patients p ON e.patient = p.patient WHERE    e.ID = '23c293ec-dbae-4a22-896e-f12cf3c8bac3'   AND p.deathdate IS NULL;
SELECT patients.first, patients.last FROM patients JOIN allergies ON patients.patient = allergies.patient WHERE allergies.DESCRIPTION = 'Shellfish allergy' AND patients.deathdate IS NOT NULL AND (julianday(patients.deathdate) - julianday(patients.birthdate)) / 365 < 12;
Error: 第 1475 个样本有 0 个SQL。
Error: 第 1476 个样本有 0 个SQL。
Error: 第 1477 个样本有 0 个SQL。
Error: 第 1478 个样本有 0 个SQL。
SELECT TOP 5 conditions.DESCRIPTION FROM conditions JOIN patients ON conditions.PATIENT = patients.patient JOIN observations ON patients.patient = observations.PATIENT WHERE observations.VALUE = (SELECT MIN(VALUE) FROM observations WHERE observations.DESCRIPTION = 'Body Mass Index') GROUP BY conditions.DESCRIPTION ORDER BY COUNT(*) DESC;
Error: 第 1480 个样本有 0 个SQL。
Error: 第 1481 个样本有 0 个SQL。
SELECT    cp.DESCRIPTION AS care_plan,   p.DESCRIPTION AS procedure,   m.DESCRIPTION AS medication,   p.first || ' ' || p.last AS full_name FROM    careplans cp   JOIN encounters e ON cp.encounter = e.ID   JOIN patients p ON e.patient = p.patient   LEFT JOIN medications m ON m.encounter = e.ID   LEFT JOIN procedures p2 ON p2.encounter = e.ID WHERE    e.ID = '6f2e3935-b203-493e-a9c0-f23e847b9798';
SELECT    COUNT(CASE WHEN gender = 'M' AND conditions.DESCRIPTION = 'Hypertension' THEN 1 END) AS male_patients,   COUNT(CASE WHEN gender = 'F' AND conditions.DESCRIPTION = 'Hypertension' THEN 1 END) AS female_patients FROM    patients   JOIN conditions ON patients.patient = conditions.patient WHERE    conditions.DESCRIPTION = 'Hypertension';
SELECT COUNT(*) FROM patients JOIN conditions ON patients.patient = conditions.PATIENT WHERE patients.marital = 'S' AND patients.gender = 'F' AND conditions.DESCRIPTION = 'normal pregnancy';
SELECT p.DESCRIPTION AS procedure, m.DESCRIPTION AS medicine FROM patients p JOIN encounters e ON p.patient = e.patient JOIN medications m ON e.ID = m.encounter JOIN procedures pr ON e.ID = pr.encounter WHERE e.REASONDESCRIPTION = 'Drug overdose';
SELECT AVG(DIVIDE(SUM(o.VALUE), COUNT(p.patient))) AS avg_bmi FROM observations o JOIN patients p ON o.patient = p.patient WHERE o.DESCRIPTION = 'Body Mass Index' AND EXISTS (   SELECT 1   FROM observations   WHERE patient = o.patient   AND DESCRIPTION = 'Total Cholesterol'   AND VALUE >= 200 );
SELECT      (SUM(CASE WHEN t2.DATE-t1.birthdate BETWEEN 20 AND 29 THEN t2.VALUE ELSE 0 END)       / COUNT(CASE WHEN t2.DATE-t1.birthdate BETWEEN 20 AND 29 THEN t2.PATIENT ELSE NULL END))      - (SUM(CASE WHEN t2.DATE-t1.birthdate BETWEEN 50 AND 59 THEN t2.VALUE ELSE 0 END)         / COUNT(CASE WHEN t2.DATE-t1.birthdate BETWEEN 50 AND 59 THEN t2.PATIENT ELSE NULL END)) AS average_glucose_difference FROM      patients t1     JOIN observations t2 ON t1.patient = t2.patient WHERE      t2.CODE LIKE '%glucose%' AND t2.UNITS = 'mg/dL';
SELECT    MULTIPLY(     DIVIDE(       SUM(CASE WHEN SUBTRACT(conditions.START, patients.birthdate) > 60 THEN 1 ELSE 0 END),       COUNT(patients.patient)     ),     100   ) AS percentage FROM    conditions   JOIN patients ON conditions.PATIENT = patients.patient GROUP BY    conditions.DESCRIPTION ORDER BY    percentage DESC LIMIT 1;
SELECT REASONDESCRIPTION FROM encounters WHERE PATIENT IN (   SELECT patient   FROM patients   WHERE first = 'Walter' AND last = 'Bahringer' ) AND DATE LIKE '2009-07%';
Error: 第 1490 个样本有 0 个SQL。
SELECT medications.DESCRIPTION AS Drug FROM medications JOIN encounters ON medications.START = encounters.ID WHERE medications.REASONDESCRIPTION = 'Child attention deficit disorder' GROUP BY medications.DESCRIPTION ORDER BY COUNT(*) DESC;
SELECT CONCAT(p.prefix, ' ', p.first, ' ', p.last) AS full_name FROM patients p JOIN procedures pr ON p.patient = pr.patient WHERE pr.DESCRIPTION = 'Transplant of lung (procedure)';
SELECT AVG(DIVIDE(COUNT(p.PATIENT), COUNT(substr(p.DATE, 1, 4)))) AS avg_patients_per_year FROM procedures p WHERE p.DESCRIPTION = 'Combined chemotherapy and radiation therapy (procedure)';
SELECT    DATE('now') - DATE(careplans.START) AS time_frame,   careplans.DESCRIPTION AS details_of_care_plan FROM    careplans WHERE    patients.last = 'Shanahan' AND patients.first = 'Jacquelyn' ORDER BY    careplans.START DESC LIMIT 1;
SELECT    SUBTRACT(allergies.START, allergies.STOP) AS allergy_period,    allergies.DESCRIPTION  FROM    allergies  WHERE    PATIENT = (SELECT patient FROM patients WHERE first = 'Isadora' AND last = 'Moen');
SELECT SUBTRACT(MIN(encounters.DATE), patients.birthdate) AS age FROM patients WHERE patients.last = 'Bernier' AND patients.first = 'Laronda' AND patients.suffix = 'Mrs.' ORDER BY encounters.DATE DESC LIMIT 1;
SELECT conditions.DESCRIPTION FROM conditions WHERE conditions.START LIKE '2017%' AND conditions.PATIENT IN (   SELECT patients.patient   FROM patients   WHERE patients.first = 'Joye' AND patients.last = 'Homenick' AND patients.suffix = 'Mrs.' );
SELECT MAX(immunizations.DATE)  FROM immunizations  WHERE immunizations.DESCRIPTION = 'Influenza seasonal injectable preservative free'  AND patients.last = 'Homenick'  AND patients.prefix = 'Mrs.'  AND patients.suffix = 'Joye';
Error: 第 1499 个样本有 0 个SQL。
SELECT COUNT(DISTINCT patients.patient)  FROM patients  JOIN encounters ON patients.patient = encounters.PATIENT  WHERE encounters.REASONDESCRIPTION = 'Second degree burn';
SELECT      MULTIPLY(DIVIDE(COUNT(encounters.PATIENT WHERE gender = 'F'),                       COUNT(encounters.PATIENT)                       WHERE encounters.REASONDESCRIPTION = 'Contact dermatitis'),               1.0) * 100 AS percentage_of_females FROM      patients,      encounters WHERE      SUBSTR(encounters.DATE, 1, 4) = '2010'      AND encounters.REASONDESCRIPTION = 'Contact dermatitis';
SELECT COUNT(*) FROM encounters WHERE PATIENT IN (SELECT patient FROM patients WHERE first = 'Lorri' AND last = 'Simons') AND substr(encounters.DATE, 1, 4) BETWEEN '2010' AND '2017';  SELECT MULTIPLY(DIVIDE(COUNT(encounters.ID WHERE DESCRIPTION = 'Prenatal visit'), COUNT(encounters.ID)), 1.0) * 100 FROM encounters WHERE PATIENT IN (SELECT patient FROM patients WHERE first = 'Lorri' AND last = 'Simons') AND substr(encounters.DATE, 1, 4) BETWEEN '2010' AND '2017';
SELECT m.DESCRIPTION  FROM patients p  JOIN medications m ON p.patient = m.patient  WHERE p.first = 'Joe' AND p.last = 'Homenick';
Error: 第 1504 个样本有 0 个SQL。
SELECT patient FROM careplans WHERE gender = 'M' ORDER BY START LIMIT 1;
SELECT    MULTIPLY(DIVIDE(COUNT(careplans.PATIENT WHERE ethnicity = 'hispanic' AND substr(careplans.STOP, 1, 4) = '2011'), COUNT(careplans.PATIENT WHERE ethnicity = 'hispanic')), 1.0) AS percentage
SELECT cp.REASONDESCRIPTION FROM careplans cp JOIN patients p ON cp.PATIENT = p.patient WHERE p.first = 'Angelo' AND p.last = 'Buckridge';
SELECT c.DESCRIPTION  FROM careplans c  JOIN patients p ON c.PATIENT = p.patient  WHERE p.ETHNICITY = 'american';
SELECT e.ID FROM encounters e JOIN patients p ON e.PATIENT = p.patient WHERE p.birthplace = 'Pembroke MA US';
SELECT careplans.START FROM careplans JOIN patients ON careplans.PATIENT = patients.patient WHERE patients.deathdate IS NULL;
SELECT COUNT(*) FROM patients JOIN careplans ON patients.patient = careplans.patient WHERE patients.race = 'white' AND careplans.REASONCODE = '10509002';
SELECT patients.first || ' ' || patients.last AS full_name FROM patients JOIN careplans ON patients.patient = careplans.patient WHERE careplans.DESCRIPTION = 'Diabetic diet';
SELECT careplans.STOP FROM careplans WHERE patients.deathdate IS NOT NULL;
SELECT COUNT(*) FROM patients p JOIN careplans c ON p.patient = c.patient WHERE p.ethnicity = 'italian' AND c.CODE = '304510005';
SELECT MULTIPLY(DIVIDE(COUNT(p.patient), COUNT(c.PATIENT)), 100)  FROM patients p  JOIN careplans c ON p.patient = c.patient  WHERE p.gender = 'F' AND substr(c.START, 1, 4) = '2010';
SELECT COUNT(*) FROM patients JOIN careplans ON patients.patient = careplans.patient WHERE patients.race = 'black' AND substr(careplans.STOP, 1, 4) = '2017';
SELECT COUNT(*) FROM patients JOIN conditions ON patients.patient = conditions.PATIENT WHERE patients.gender = 'M' AND conditions.DESCRIPTION = 'Prediabetes';
SELECT patients.first || ' ' || patients.last AS full_name FROM patients JOIN allergies ON patients.patient = allergies.patient WHERE allergies.DESCRIPTION = 'Allergy to nut';
SELECT * FROM patients WHERE first = 'Wilmer' AND last = 'Koepp';
SELECT    gender,    COUNT(*) as count FROM    patients   JOIN conditions ON patients.patient = conditions.patient WHERE    conditions.DESCRIPTION = 'Viral sinusitis (disorder)' GROUP BY    gender ORDER BY    count DESC;
SELECT patients.first, patients.last FROM patients JOIN medications ON patients.patient = medications.patient WHERE medications.DESCRIPTION = 'Penicillin V Potassium 250 MG' AND substr(medications.START, 1, 4) >= '1948';
SELECT COUNT(*) FROM patients JOIN conditions ON patients.patient = conditions.PATIENT WHERE patients.race = 'white' AND substr(patients.birthdate, 1, 4) = '1935' AND conditions.DESCRIPTION = 'Stroke';
SELECT c.CODE, c.DESCRIPTION FROM conditions c JOIN encounters e ON c.PATIENT = e.PATIENT AND c.ENCOUNTER = e.ID JOIN immunizations i ON e.ID = i.ENCOUNTER AND i.DESCRIPTION = 'IPV';
SELECT p.patient FROM patients p JOIN (   SELECT ITEM, PATIENT   FROM all_prevalences   GROUP BY ITEM, PATIENT   ORDER BY COUNT(*) DESC   LIMIT 1 ) AS most_occurrences ON p.patient = most_occurrences.PATIENT
SELECT p.first || ' ' || p.last AS full_name FROM patients p JOIN conditions c ON p.patient = c.patient WHERE c.DESCRIPTION = 'Cystitis';
SELECT COUNT(*) FROM patients JOIN immunizations ON patients.patient = immunizations.patient WHERE patients.gender = 'M' AND immunizations.DESCRIPTION = 'HPV quadrivalent';
Error: 第 1527 个样本有 0 个SQL。
SELECT * FROM careplans WHERE patient = (SELECT patient FROM patients WHERE first = 'Major' AND last = 'D\'Amore');
SELECT      MULTIPLY(DIVIDE(COUNT(p.patient), COUNT(c.patient)), 100) AS percentage FROM      patients p JOIN      conditions c ON p.patient = c.patient WHERE      p.gender = 'M' AND c.DESCRIPTION = 'Viral sinusitis (disorder)';
SELECT    MULTIPLY(DIVIDE(COUNT(patients.patient),                    (SELECT COUNT(*)                     FROM patients                     WHERE gender = 'F')),             (SELECT COUNT(*)              FROM medications              WHERE DESCRIPTION = 'Penicillin V Potassium 250 MG')),    100) AS percentage FROM patients WHERE gender = 'F'   AND patients.patient IN (     SELECT medications.patient      FROM medications      WHERE DESCRIPTION = 'Penicillin V Potassium 250 MG'   );
SELECT AVG(o.VALUE)  FROM observations o  JOIN patients p ON o.PATIENT = p.patient  WHERE p.race = 'white'  AND o.DESCRIPTION = 'Body Height';
SELECT cp.CODE, cp.DESCRIPTION FROM patients p JOIN careplans cp ON p.patient = cp.PATIENT WHERE p.address = '179 Sydni Roads Taunton MA 02780 US';
SELECT a.DESCRIPTION FROM allergies a JOIN patients p ON a.PATIENT = p.patient WHERE p.ethnicity = 'Dominican' AND p.first = 'Dirk' AND p.last = 'Languish';
SELECT COUNT(DISTINCT p.patient) FROM patients p JOIN allergies a ON p.patient = a.patient JOIN conditions c ON p.patient = c.patient WHERE a.DESCRIPTION = 'Allergy to peanuts' AND c.DESCRIPTION = 'Asthma';
SELECT patients.patient FROM patients, conditions WHERE julianday(conditions.START) - julianday(patients.birthdate) = (365 * 44) AND conditions.CODE = 'drug overdose';
SELECT p.ssn FROM patients p JOIN observations o ON p.patient = o.patient WHERE o.DESCRIPTION = 'Systolic Blood Pressure' ORDER BY o.VALUE DESC LIMIT 1;
SELECT DESCRIPTION  FROM all_prevalences  WHERE PREVALENCE_RATE = (SELECT MAX(PREVALENCE_RATE) FROM all_prevalences);
Error: 第 1538 个样本有 0 个SQL。
SELECT AVG(DIVIDE(SUBTRACT(COALESCE(deathdate, '2099-12-31'), julianday(patients.birthdate)), 365))  FROM patients  WHERE gender = 'M'  AND patients.patient IN (   SELECT patient    FROM conditions    WHERE description = 'Hypertension' );
SELECT p.first, p.last FROM patients p JOIN medications m ON p.patient = m.patient JOIN conditions c ON m.patient = c.patient WHERE c.DESCRIPTION = 'Streptococcal sore throat (disorder)' LIMIT 5;
SELECT patients.patient FROM patients JOIN observations ON patients.patient = observations.patient WHERE observations.DESCRIPTION = 'Body Weight' AND observations.VALUE = 61.97 AND observations.UNITS = 'kg';
Error: 第 1542 个样本有 0 个SQL。
SELECT p.first || ' ' || p.last AS full_name FROM patients p JOIN conditions c ON p.patient = c.patient WHERE p.ethnicity = 'irish' AND c.START IS NOT NULL AND c.STOP IS NOT NULL AND c.CODE IN (   SELECT a.ITEM   FROM all_prevalences a   WHERE a.OCCURRENCES > (AVG(a.OCCURRENCES) * 0.96) )
SELECT    COUNT(patients.patient) - COUNT(patients.patient)  FROM    patients    LEFT JOIN conditions ON patients.patient = conditions.patient  WHERE    marital = 'M' AND conditions.DESCRIPTION = 'Diabetes' MINUS SELECT    COUNT(patients.patient)  FROM    patients    LEFT JOIN conditions ON patients.patient = conditions.patient  WHERE    marital = 'S' AND conditions.DESCRIPTION = 'Diabetes';
Error: 第 1545 个样本有 0 个SQL。
SELECT      productVendor,      SUM(quantityOrdered) AS total_orders,      SUM((MSRP - buyPrice) * quantityOrdered) AS total_earnings FROM      orderdetails JOIN      products ON orderdetails.productCode = products.productCode GROUP BY      productVendor ORDER BY      total_earnings DESC LIMIT 1;
Error: 第 1547 个样本有 0 个SQL。
SELECT SUM(od.quantityOrdered * od.priceEach)  FROM orders o  JOIN orderdetails od ON o.orderNumber = od.orderNumber  JOIN customers c ON o.customerNumber = c.customerNumber  WHERE c.customerName = 'Rovelli Gifts Distributors Ltd.'  AND o.shippedDate BETWEEN '2003-01-01' AND '2003-12-31';
SELECT COUNT(*)  FROM employees  WHERE officeCode IN (SELECT officeCode FROM offices WHERE city = 'Sydney');
SELECT e.employeeNumber FROM employees e JOIN offices o ON e.officeCode = o.officeCode WHERE o.city = 'New York' AND e.reportsTo = (SELECT employeeNumber FROM employees WHERE lastName = 'Bow' AND firstName = 'Anthony');
SELECT      AVG(DIVIDE(SUM(amount), 3)) AS average_annual_payments,     MAX(amount) AS highest_annual_payment,     MIN(amount) AS lowest_annual_payment FROM      payments WHERE      paymentDate BETWEEN '2003-01-01' AND '2005-12-31';
SELECT p.country, c.addressLine1 + ' ' + c.addressLine2 AS entire_address FROM payments p JOIN customers c ON p.customerNumber = c.customerNumber WHERE p.amount = (SELECT MAX(amount) FROM payments) ORDER BY p.country LIMIT 5;
Error: 第 1553 个样本有 0 个SQL。
SELECT p.productName FROM products p JOIN orderdetails od ON p.productCode = od.productCode JOIN orders o ON od.orderNumber = o.orderNumber WHERE p.productLine IN (SELECT productLine FROM productlines WHERE textDescription LIKE '%classic car%')  AND p.productScale = '1:18' GROUP BY p.productName ORDER BY MAX(od.quantityOrdered) DESC LIMIT 1;
SELECT COUNT(c.customerNumber), c.customerName, SUM(p.amount) AS totalPayment FROM customers c JOIN payments p ON c.customerNumber = p.customerNumber WHERE c.creditLimit <= 100000 AND YEAR(p.paymentDate) = '2004' GROUP BY c.customerNumber, c.customerName ORDER BY totalPayment DESC LIMIT 1;
SELECT c.customerName, c.contactLastName, SUM(p.amount) AS total_amount FROM customers c JOIN employees e ON c.salesRepEmployeeNumber = e.employeeNumber JOIN offices o ON e.officeCode = o.officeCode WHERE o.city = 'Tokyo' AND e.reportsTo = 1056 JOIN payments p ON c.customerNumber = p.customerNumber GROUP BY c.customerName, c.contactLastName ORDER BY total_amount DESC LIMIT 1;
SELECT p.productName,         (p.MSRP - p.buyPrice) AS expected_profit,         SUM(od.quantityOrdered * od.priceEach) AS total_price FROM products p JOIN orderdetails od ON p.productCode = od.productCode GROUP BY p.productName ORDER BY expected_profit DESC, total_price DESC LIMIT 2;
SELECT COUNT(*) FROM orders WHERE status = 'Cancelled'   AND orderNumber IN (     SELECT orderNumber     FROM orderdetails     GROUP BY orderNumber     HAVING SUM(quantityOrdered * priceEach) > 4000   );
SELECT COUNT(DISTINCT o.orderNumber) FROM orders o WHERE year(o.orderDate) = '2003'   AND o.orderNumber IN (     SELECT od.orderNumber     FROM orderdetails od     WHERE od.quantityOrdered < 30   );
SELECT SUM(quantityOrdered * priceEach)  FROM orderdetails  WHERE orderNumber IN (   SELECT orderNumber    FROM orders    WHERE status = 'Cancelled' );
SELECT SUM(oq.quantityOrdered * op.priceEach)  FROM orderdetails oq  JOIN products op ON oq.productCode = op.productCode  JOIN productlines pl ON op.productLine = pl.productLine  WHERE pl.textDescription LIKE '%Motorcycle%';
Error: 第 1562 个样本有 0 个SQL。
SELECT COUNT(*) FROM orders WHERE (SELECT (p.MSRP - p.buyPrice) FROM products p WHERE p.productCode = od.productCode) > 100
SELECT AVG(DIVIDE(SUM(MULTIPLY(quantityOrdered, priceEach)), COUNT(orderNumber))) FROM orderdetails JOIN orders ON orderdetails.orderNumber = orders.orderNumber JOIN products ON orderdetails.productCode = products.productCode JOIN productlines ON products.productLine = productlines.productLine WHERE productlines.textDescription = 'Exoto Designs' AND YEAR(orders.orderDate) = 2005;
Error: 第 1565 个样本有 0 个SQL。
Error: 第 1566 个样本有 0 个SQL。
Error: 第 1567 个样本有 0 个SQL。
SELECT SUM(amount)  FROM payments  WHERE customerNumber IN (SELECT customerNumber                           FROM customers                           WHERE creditLimit = 0)    AND YEAR(paymentDate) = '2003';
Error: 第 1569 个样本有 0 个SQL。
SELECT COUNT(*) FROM customers WHERE country = 'France' AND customerNumber IN (   SELECT customerNumber   FROM orders   WHERE status = 'Cancelled'   GROUP BY customerNumber   HAVING COUNT(*) = 2 )
SELECT AVG(DIVIDE(MULTIPLY(OD.quantityOrdered, P.priceEach), COUNT(OD.orderNumber)))  FROM orders O  JOIN orderdetails OD ON O.orderNumber = OD.orderNumber  JOIN customers C ON O.customerNumber = C.customerNumber  JOIN products P ON OD.productCode = P.productCode  WHERE C.country = 'Germany' AND O.status = 'Shipped';
SELECT CONCAT(firstName, ' ', lastName) AS fullName FROM employees WHERE officeCode IN (   SELECT officeCode   FROM offices   WHERE city = 'Tokyo' );
SELECT e.email, CONCAT(e.firstName, ' ', e.lastName) AS fullName FROM employees e JOIN offices o ON e.officeCode = o.officeCode WHERE o.city = 'Tokyo' AND e.jobTitle = 'Sales Rep';
SELECT e.email FROM employees e WHERE e.officeCode IN (   SELECT o.officeCode   FROM offices o   WHERE o.city = 'San Francisco' ) AND e.reportsTo = 1002;
SELECT e.email, e.employeeNumber FROM employees e JOIN offices o ON e.officeCode = o.officeCode WHERE o.country = 'USA' AND o.state = 'MA';
Error: 第 1576 个样本有 0 个SQL。
SELECT e.email, o.country FROM employees e JOIN customers c ON e.officeCode = c.officeCode WHERE c.country = 'Australia' AND c.creditLimit < 200000;
Error: 第 1578 个样本有 0 个SQL。
SELECT COUNT(*) FROM customers WHERE country = 'Australia' AND creditLimit < 220000;
SELECT customerNumber, SUM(amount) AS totalAmount FROM payments GROUP BY customerNumber ORDER BY totalAmount DESC LIMIT 3;
SELECT e.email, e.employeeNumber FROM employees e JOIN offices o ON e.officeCode = o.officeCode WHERE o.country = 'USA' AND o.state = 'CA';
SELECT CONCAT(e.firstName, ' ', e.lastName) AS full_name FROM employees e JOIN offices o ON e.officeCode = o.officeCode WHERE o.city = 'Boston';
SELECT e.email FROM employees e JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber WHERE e.officeCode IN (   SELECT o.officeCode   FROM offices o   WHERE o.country = 'UK' ) AND e.jobTitle = 'Sales Rep' ORDER BY c.creditLimit DESC LIMIT 3;
SELECT COUNT(*) FROM customers WHERE country = 'Norway' AND creditLimit < 220000;
Error: 第 1585 个样本有 0 个SQL。
SELECT productCode, quantityInStock FROM products WHERE productLine = 'motorcycle' ORDER BY quantityInStock DESC LIMIT 5;
Error: 第 1587 个样本有 0 个SQL。
SELECT COUNT(DISTINCT customers.customerNumber) FROM customers JOIN payments ON customers.customerNumber = payments.customerNumber WHERE paymentDate BETWEEN '2003-01-01' AND '2004-12-31' AND COUNT(payments.customerNumber) > 3;
SELECT AVG(priceEach - buyPrice) AS average_actual_profit FROM products WHERE productName = '1937 Lincoln Berline';
SELECT productName FROM products WHERE productLine = 'motorcycle' AND productScale = '1:10' ORDER BY (SELECT SUM(quantityOrdered) FROM orderdetails WHERE products.productCode = orderdetails.productCode AND (SELECT customers.country FROM customers WHERE customers.customerNumber = orders.customerNumber) = 'USA') DESC LIMIT 1;
Error: 第 1591 个样本有 0 个SQL。
SELECT      (SUM(OD.quantityOrdered * P.priceEach) - AVG(P.priceEach)) AS exceed_average FROM      orderdetails OD JOIN      products P ON OD.productCode = P.productCode JOIN      orders O ON OD.orderNumber = O.orderNumber WHERE      P.productLine = 'PLANE' ORDER BY      exceed_average DESC LIMIT 1;
SELECT SUM(MULTIPLY(od.quantityOrdered, p.priceEach))  FROM orderdetails od  JOIN orders o ON od.orderNumber = o.orderNumber  JOIN products p ON od.productCode = p.productCode  JOIN productlines pl ON p.productLine = pl.productLine  WHERE o.status = 'Shipped'  AND YEAR(o.orderDate) BETWEEN 2003 AND 2004  AND pl.textDescription LIKE '%vintage car%';
SELECT e.firstName + ' ' + e.lastName AS full_name, e.firstName + ' ' + e.reportsTo AS supervisor FROM employees e JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber JOIN payments p ON c.customerNumber = p.customerNumber WHERE p.amount = (SELECT MAX(amount) FROM payments)
SELECT p.productName, SUM(od.quantityOrdered * od.priceEach) AS highest_amount FROM orders o JOIN orderdetails od ON o.orderNumber = od.orderNumber JOIN employees e ON o.salesRepEmployeeNumber = e.employeeNumber JOIN customers c ON o.customerNumber = c.customerNumber JOIN offices of ON c.addressLine2 = of.city WHERE of.city = 'Boston' GROUP BY p.productName ORDER BY highest_amount DESC LIMIT 1;
SELECT SUM(SUBTRACT(o.priceEach, p.buyPrice)) AS total_actual_profit FROM orderdetails o JOIN orders ON o.orderNumber = orders.orderNumber JOIN customers ON orders.customerNumber = customers.customerNumber JOIN products p ON o.productCode = p.productCode WHERE customers.country = 'USA' AND orders.orderDate BETWEEN '2003-01-06' AND '2005-05-09';
SELECT o.city, o.addressLine1, o.addressLine2, o.phone FROM offices o JOIN employees e ON o.officeCode = e.officeCode JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber JOIN orders ord ON c.customerNumber = ord.customerNumber WHERE ord.orderDate BETWEEN '2005-01-01' AND '2005-12-31' GROUP BY o.officeCode ORDER BY SUM(ord.orderTotal) DESC LIMIT 1;
SELECT phone FROM customers WHERE contactLastName LIKE 'M%' AND country <> 'Germany';
SELECT AVG(amount)  FROM payments  WHERE customerNumber IN (SELECT customerNumber FROM orders WHERE orderDate >= '2004-01-01' AND orderDate < '2004-07-01');
SELECT      DIVIDE(SUM(CASE WHEN status = 'shipped' AND YEAR(shippedDate) = 2005 THEN 1 ELSE 0 END),             COUNT(*)) as percentage FROM      orders WHERE      customerNumber = 186;
SELECT COUNT(*) FROM customers WHERE customerNumber IN (   SELECT customerNumber   FROM orders   WHERE status = 'cancelled' ) AND creditLimit > 115000;
SELECT paymentDate FROM payments WHERE customerNumber IN (   SELECT customerNumber   FROM customers   WHERE salesRepEmployeeNumber = (     SELECT employeeNumber     FROM employees     WHERE firstName = 'Barry' AND lastName = 'Jones'   ) ORDER BY creditLimit LIMIT 1 )
SELECT e.firstName, e.lastName FROM employees e JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber WHERE c.country = 'France';
SELECT addressLine1 + ' ' + addressLine2 AS full_address FROM customers WHERE customerNumber IN (   SELECT customerNumber   FROM orders   WHERE shippedDate = '2005-04-04'   AND status = (     SELECT comments     FROM orders     WHERE shippedDate = '2005-04-04'     AND comments LIKE '%DHL%'   ) )
SELECT o.addressLine1 + ' ' + o.addressLine2 AS full_address FROM offices o JOIN employees e ON o.officeCode = e.officeCode JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber WHERE c.contactCity = 'NYC';
Error: 第 1606 个样本有 0 个SQL。
SELECT SUM(MSRP - buyPrice) AS profit FROM products WHERE productDescription LIKE '%The perfect holiday or anniversary gift for executives%' AND productVendor = 'Carousel DieCast Legends';
SELECT customerName, AVG(amount) AS average_payment FROM customers JOIN orders ON customers.customerNumber = orders.customerNumber JOIN payments ON customers.customerNumber = payments.customerNumber WHERE city = 'Boston' GROUP BY customerName ORDER BY average_payment DESC;
SELECT AVG(od.priceEach) AS average_price, SUM(od.quantityOrdered) AS total_quantity FROM orderdetails od JOIN products p ON od.productCode = p.productCode WHERE p.productName = '18th Century Vintage Horse Carriage';
Error: 第 1610 个样本有 0 个SQL。
SELECT e.firstName, e.lastName FROM employees e JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber JOIN orders o ON c.customerNumber = o.customerNumber WHERE o.shippedDate IS NOT NULL AND o.customerNumber IN (   SELECT c.customerNumber   FROM customers c   JOIN addresses a ON c.addressLine1 = a.street   WHERE a.street = '25 Maiden Lane' AND a.floor = '4' )
SELECT o.addressLine1, o.addressLine2 FROM offices o JOIN employees e ON o.officeCode = e.officeCode WHERE e.firstName = 'Foon' AND e.lastName = 'Yue' AND e.firstName = 'Tseng';
SELECT MAX(TotalPrice) AS HighestValue, orderDate FROM (   SELECT orderNumber, orderDate, SUM(quantityOrdered * priceEach) AS totalPrice   FROM orders   JOIN orderdetails ON orders.orderNumber = orderdetails.orderNumber   WHERE orderDate BETWEEN '2005-04-08' AND '2005-04-10'   GROUP BY orderDate, orderNumber ) AS subquery GROUP BY orderDate ORDER BY HighestValue DESC LIMIT 1;
SELECT SUM(od.priceEach * od.quantityOrdered)  FROM orderdetails od  WHERE od.productCode IN (   SELECT p.productCode    FROM products p    ORDER BY p.MSRP - p.buyPrice DESC    LIMIT 1 );
Error: 第 1615 个样本有 0 个SQL。
SELECT c.contactFirstName + ' ' + c.contactLastName AS contactName FROM customers c JOIN payments p ON c.customerNumber = p.customerNumber WHERE p.checkNumber = 'NR157385';
SELECT c.contactFirstName, c.contactLastName FROM customers c JOIN orders o ON c.customerNumber = o.customerNumber WHERE o.orderNumber = 10160;
SELECT o.addressLine1, o.addressLine2 FROM orders o WHERE o.orderNumber = 10383;
SELECT textDescription FROM productlines WHERE productLine IN (   SELECT productLine   FROM products   WHERE productCode = 'S18_2949' )
SELECT e.email FROM employees e WHERE e.officeCode IN (   SELECT o.officeCode   FROM offices o   WHERE o.city = 'London' ) AND e.salesRepEmployeeNumber IN (   SELECT c.salesRepEmployeeNumber   FROM customers c   WHERE c.customerName = 'Dragon Souveniers, Ltd.' );
SELECT COUNT(*)  FROM customers  WHERE country = 'France'  AND salesRepEmployeeNumber IN (   SELECT employeeNumber    FROM employees    WHERE lastName = 'Hernandez'    AND firstName = 'Gerard' )
SELECT p.productName FROM orders o JOIN customers c ON o.customerNumber = c.customerNumber JOIN orderdetails od ON o.orderNumber = od.orderNumber JOIN products p ON od.productCode = p.productCode WHERE o.customerNumber = 114 ORDER BY o.orderDate DESC LIMIT 1;
SELECT      (SUBTRACT(MSRP, priceEach) / MSRP) * 100 FROM      orderdetails WHERE      orderNumber = (SELECT orderNumber FROM orders WHERE orderNumber = 10108)     AND productCode = 'S18_3482'
SELECT e1.firstName, e1.lastName FROM employees e1 WHERE e1.employeeNumber = (   SELECT e2.employeeNumber   FROM employees e2   WHERE e2.firstName = 'Steve' AND e2.lastName = 'Patterson' );
SELECT e.email FROM employees e WHERE e.jobTitle = 'President';
SELECT CONCAT(e.firstName, ' ', e.lastName) AS full_name FROM customers c JOIN employees e ON c.salesRepEmployeeNumber = e.employeeNumber WHERE c.customerName = 'Muscle Machine Inc' AND e.jobTitle = 'Sales Rep';
SELECT e.email FROM employees e WHERE e.officeCode IN (   SELECT o.officeCode   FROM offices o   WHERE o.territory = 'your_territory'  -- replace with your territory ) AND e.reportsTo = (   SELECT e2.employeeNumber   FROM employees e2   WHERE e2.officeCode = (     SELECT o.officeCode     FROM offices o     WHERE o.territory = 'your_territory'  -- replace with your territory   ) );
Error: 第 1628 个样本有 0 个SQL。
SELECT COUNT(*) FROM customers WHERE salesRepEmployeeNumber IN (   SELECT employeeNumber   FROM employees   WHERE reportsTo IN (     SELECT employeeNumber     FROM employees     WHERE lastName = 'Patterson' AND firstName = 'William'   ) );
SELECT c.phone FROM customers c JOIN employees e ON c.salesRepEmployeeNumber = e.employeeNumber WHERE e.firstName = 'Leslie' AND e.lastName = 'Jennings' ORDER BY c.creditLimit DESC LIMIT 3;
SELECT COUNT(DISTINCT e.employeeNumber) FROM employees e JOIN offices o ON e.officeCode = o.officeCode WHERE o.country = 'USA' AND e.jobTitle = 'Sales Rep';
SELECT addressLine1, addressLine2 FROM offices WHERE officeCode IN (   SELECT officeCode   FROM employees   WHERE jobTitle = 'President' );
Error: 第 1633 个样本有 0 个SQL。
SELECT SUM(MULTIPLY(quantityOrdered, priceEach)) FROM orderdetails WHERE orderNumber IN (   SELECT orderNumber   FROM orders   WHERE orderDate = '2003-03-03' AND customerNumber IN (     SELECT customerNumber     FROM customers     WHERE customerName = 'Cruz & Sons Co.'   ) )
Error: 第 1635 个样本有 0 个SQL。
SELECT p.productName FROM orders o JOIN orderdetails od ON o.orderNumber = od.orderNumber JOIN products p ON od.productCode = p.productCode WHERE o.customerNumber IN (   SELECT c.customerNumber   FROM customers c   WHERE c.customerName = 'Cruz & Sons Co.' ) ORDER BY od.quantityOrdered DESC LIMIT 1;
Error: 第 1637 个样本有 0 个SQL。
Error: 第 1638 个样本有 0 个SQL。
SELECT productName FROM products WHERE productLine = (   SELECT productLine   FROM productlines   WHERE textDescription = 'Classic Cars' ) ORDER BY (MSRP - buyPrice) DESC LIMIT 1;
SELECT customers.customerName FROM customers WHERE customerNumber IN (   SELECT customerNumber   FROM orders   WHERE status = 'In Process' );
SELECT      DIVIDE(COUNT(o.orderNumber), (SELECT COUNT(*) FROM orders), 2) AS percentage FROM      orders o WHERE      o.status = 'Shipped'     AND DATEDIFF(o.shippedDate, o.requiredDate) > 3;
SELECT c.customerName FROM customers c JOIN payments p ON c.customerNumber = p.customerNumber WHERE YEAR(p.paymentDate) = 2005 ORDER BY p.amount DESC LIMIT 1;
SELECT p.productName, p.quantityInStock, (p.MSRP - p.buyPrice) AS profitMargin FROM products p WHERE p.productCode IN (   SELECT od.productCode   FROM orderdetails od   GROUP BY od.productCode   ORDER BY MAX(od.quantityOrdered) DESC   LIMIT 1 ) ORDER BY p.productName;
SELECT c.customerName FROM orders o JOIN customers c ON o.customerNumber = c.customerNumber JOIN (   SELECT orderNumber, SUM(quantityOrdered * priceEach) as total_price   FROM orderdetails   GROUP BY orderNumber   ORDER BY total_price DESC   LIMIT 1 ) AS largest_order ON o.orderNumber = largest_order.orderNumber;
SELECT c.customerName FROM customers c JOIN orders o ON c.customerNumber = o.customerNumber WHERE o.status = 'Disputed';
SELECT    DIVIDE(COUNT(e.employeeNumber) WHEN o.city = 'Paris' THEN 1 ELSE 0 END, COUNT(e.employeeNumber)) AS percentage FROM    employees e   JOIN offices o ON e.officeCode = o.officeCode;
SELECT e.firstName, e.lastName, o.addressLine1 FROM employees e JOIN offices o ON e.officeCode = o.officeCode WHERE e.jobTitle = 'Sales Manager' AND o.territory = 'EMEA';
Error: 第 1648 个样本有 0 个SQL。
Error: 第 1649 个样本有 0 个SQL。
SELECT    DIVIDE(SUM(p.amount), (SELECT SUM(amount) FROM payments) ) * 100 AS percentage FROM    payments p WHERE    p.customerName = 'Atelier graphique' AND   YEAR(p.paymentDate) = 2004;
SELECT SUM(quantityOrdered * (priceEach - buyPrice)) AS actual_profit FROM orderdetails WHERE orderNumber = 10100;
Error: 第 1652 个样本有 0 个SQL。
SELECT SUM(od.quantityOrdered * p.priceEach) FROM orderdetails od JOIN orders o ON od.orderNumber = o.orderNumber JOIN products p ON od.productCode = p.productCode WHERE o.orderNumber = 10100;
SELECT productName, priceEach FROM products ORDER BY priceEach DESC LIMIT 3;
SELECT CONCAT(contactFirstName, ' ', contactLastName) AS fullName FROM customers WHERE salesRepEmployeeNumber = (SELECT employeeNumber FROM employees WHERE employeeNumber = '1370') ORDER BY creditLimit DESC LIMIT 1;
Error: 第 1656 个样本有 0 个SQL。
SELECT MAX(o.shippedDate)  FROM orders o JOIN orderdetails d ON o.orderNumber = d.orderNumber WHERE d.priceEach = (SELECT MAX(priceEach) FROM orderdetails);
SELECT COUNT(*)  FROM orders  WHERE year(orderDate) = 2004    AND exists (     SELECT 1      FROM products      WHERE products.productLine = 'motorcycles'        AND products.productCode = orderdetails.productCode    );
SELECT orderNumber FROM orders WHERE customerNumber IN (   SELECT customerNumber   FROM customers   WHERE creditLimit = 45300 )
SELECT c.customerName, SUM((od.quantityOrdered * (od.priceEach - p.buyPrice))) AS profit FROM orders o JOIN customers c ON o.customerNumber = c.customerNumber JOIN orderdetails od ON o.orderNumber = od.orderNumber JOIN products p ON od.productCode = p.productCode GROUP BY c.customerName ORDER BY profit DESC LIMIT 1;
SELECT YEAR(paymentDate), COUNT(*)  FROM payments  WHERE amount < 1000  GROUP BY YEAR(paymentDate);
SELECT p.productName, SUM(od.quantityOrdered) AS total_quantity FROM products p JOIN orderdetails od ON p.productCode = od.productCode WHERE YEAR(p.orderDate) = 2003 GROUP BY p.productName ORDER BY total_quantity DESC LIMIT 3;
SELECT e.firstName, e.lastName, SUM(od.quantityOrdered) AS quantity_sold FROM orders o JOIN orderdetails od ON o.orderNumber = od.orderNumber JOIN customers c ON o.customerNumber = c.customerNumber JOIN employees e ON c.salesRepEmployeeNumber = e.employeeNumber JOIN products p ON od.productCode = p.productCode WHERE p.productName = '1969 Harley Davidson Ultimate Chopper' AND EXTRACT(YEAR FROM o.orderDate) = 2003 GROUP BY e.firstName, e.lastName;
SELECT e.firstName, e.lastName FROM employees e JOIN offices o ON e.officeCode = o.officeCode WHERE o.city = 'NYC' AND e.jobTitle = 'Sales Rep';
Error: 第 1665 个样本有 0 个SQL。
Error: 第 1666 个样本有 0 个SQL。
SELECT p.productName FROM products p JOIN orderdetails od ON p.productCode = od.productCode GROUP BY p.productName ORDER BY MIN(od.quantityOrdered) LIMIT 5;
Error: 第 1668 个样本有 0 个SQL。
Error: 第 1669 个样本有 0 个SQL。
SELECT SUM(quantityOrdered * priceEach)  FROM orderdetails  WHERE productLine = 'Classic Cars'  AND status = 'Shipped'  AND customerNumber IN (   SELECT customerNumber    FROM customers    WHERE customerName = 'Land of Toys Inc' )
SELECT COUNT(*) FROM generalinfo WHERE review < 3;
SELECT DISTINCT food_type  FROM generalinfo  WHERE review = 4;
SELECT COUNT(*) FROM generalinfo WHERE city = 'Richmond' AND food_type = 'Mediterranean';
Error: 第 1674 个样本有 0 个SQL。
SELECT DISTINCT county FROM geographic WHERE region != 'bay area';
Error: 第 1676 个样本有 0 个SQL。
SELECT id_restaurant FROM location WHERE street_name = '11th street' AND city = 'oakland';
SELECT COUNT(*) FROM location WHERE street_num = 871;
SELECT location.street_num FROM location JOIN generalinfo ON location.id_restaurant = generalinfo.id_restaurant JOIN geographic ON generalinfo.city = geographic.city WHERE geographic.city = 'san francisco' AND location.street_name = '9th avenue';
SELECT food_type FROM generalinfo WHERE city = (SELECT city FROM location WHERE street_name = 'adeline st')
SELECT DISTINCT region FROM geographic WHERE region NOT IN (   SELECT region   FROM geographic   JOIN generalinfo ON geographic.city = generalinfo.city   WHERE food_type = 'african' )
SELECT county  FROM geographic  WHERE city IN (   SELECT city    FROM location    WHERE id_restaurant IN (     SELECT id_restaurant      FROM generalinfo      WHERE label = 'a & w root beer'   ) )
SELECT location.street_name AS street, location.street_num AS number FROM location JOIN generalinfo ON location.id_restaurant = generalinfo.id_restaurant WHERE generalinfo.label = 'Adelitas Taqueria';
Error: 第 1684 个样本有 0 个SQL。
SELECT l.street_name FROM location l JOIN generalinfo g ON l.id_restaurant = g.id_restaurant WHERE g.food_type = 'seafood' AND l.city = (SELECT city FROM geographic WHERE city = 'San Francisco');
SELECT county  FROM geographic  WHERE county NOT IN (   SELECT county    FROM geographic    JOIN generalinfo ON geographic.city = generalinfo.city    WHERE label = 'bakers square restaurant & pie shop' )
Error: 第 1687 个样本有 0 个SQL。
SELECT g.id_restaurant, g.label, g.review FROM generalinfo g JOIN location l ON g.id_restaurant = l.id_restaurant WHERE l.street_name = 'atlantic ave';
SELECT g.id_restaurant FROM geographic g, generalinfo ri, location l WHERE g.county = 'Contra Costa County' AND g.city = l.city AND ri.id_restaurant = l.id_restaurant;
Error: 第 1690 个样本有 0 个SQL。
SELECT g.label FROM generalinfo g, location l, geographic c WHERE g.id_restaurant = l.id_restaurant AND l.street_name = 'drive' AND l.city = c.city AND c.city = 'san rafael' AND g.food_type <> 'american';
SELECT L.street_name FROM location L JOIN generalinfo G ON L.id_restaurant = G.id_restaurant WHERE G.review = 1.7 AND L.city = 'San Francisco'
SELECT g.label FROM generalinfo g JOIN location l ON g.id_restaurant = l.id_restaurant WHERE l.street_name = 'Avenida de las Pulgas' AND l.city = (SELECT city FROM geographic WHERE region = (SELECT region FROM geographic WHERE county = (SELECT county FROM geographic WHERE city = 'Menlo Park'))) ORDER BY g.review ASC LIMIT 1;
SELECT l.street_name FROM location l JOIN generalinfo g ON l.id_restaurant = g.id_restaurant JOIN geographic geo ON g.city = geo.city WHERE geo.county = 'Tuolumne' AND g.label = 'Good Heavens';
SELECT street_num FROM location WHERE id_restaurant IN (   SELECT id_restaurant   FROM generalinfo   WHERE label = 'aux delices vietnamese restaurant' ) AND city IN (   SELECT city   FROM geographic   WHERE city IN (     SELECT city     FROM generalinfo     WHERE label = 'aux delices vietnamese restaurant'   ) );
Error: 第 1696 个样本有 0 个SQL。
SELECT region  FROM geographic  WHERE region NOT IN (   SELECT region    FROM geographic    JOIN generalinfo ON geographic.city = generalinfo.city    WHERE food_type = 'pizza' )
SELECT AVG(review)  FROM generalinfo  WHERE id_restaurant IN (SELECT id_restaurant FROM location WHERE city IN (SELECT city FROM geographic WHERE county = 'Santa Cruz County'));
SELECT (COUNT(g.id_restaurant) WHERE g.food_type = 'mexican') / COUNT(g.id_restaurant) * 100 FROM generalinfo g, geographic h WHERE g.city = h.city AND h.county = 'Monterey County';
SELECT ROUND((COUNT(*)/(SELECT COUNT(*) FROM location WHERE street_name = '11th st' AND city IN (SELECT city FROM geographic WHERE county = 'Alameda County'))) * 100, 2) AS percentage FROM location WHERE street_name = '11th st' AND city IN (SELECT city FROM geographic WHERE county = 'Alameda County');
SELECT g.label FROM generalinfo g WHERE g.food_type = 'european';
SELECT DISTINCT city  FROM geographic  WHERE region = 'northern california';
SELECT label FROM generalinfo WHERE food_type = '24 hour diner';
SELECT DISTINCT city  FROM geographic  WHERE county = 'unknown' AND region = 'unknown' LIMIT 5;
SELECT g.county, g.region  FROM geographic g  WHERE g.city = 'Davis';
SELECT street_name FROM location WHERE city = 'Clayton' AND city IN (SELECT city FROM geographic WHERE city = 'Clayton');
SELECT g.label, MAX(g.review) AS max_review FROM generalinfo g WHERE g.city = 'San Francisco' GROUP BY g.label;
SELECT COUNT(*) FROM generalinfo WHERE food_type = 'American' AND review = (SELECT MIN(review) FROM generalinfo WHERE city = 'Carmel');
SELECT (COUNT(g.id_restaurant) / COUNT(g2.id_restaurant)) * 100 FROM generalinfo g JOIN location l ON g.id_restaurant = l.id_restaurant JOIN geographic g1 ON l.city = g1.city WHERE g1.city = 'Dublin' AND g.food_type = 'american food'
SELECT location.street_num, location.street_name, location.city FROM location JOIN generalinfo ON location.id_restaurant = generalinfo.id_restaurant WHERE generalinfo.label = 'Albert''s Café';
SELECT g.label FROM generalinfo g JOIN location l ON g.id_restaurant = l.id_restaurant WHERE l.street_name = '19th St' AND l.city = 'Oakland';
SELECT food_type FROM generalinfo WHERE city = (SELECT city               FROM location               WHERE street_name = 'E 25th Ave');
SELECT g.label  FROM generalinfo g  WHERE g.city IN (SELECT l.city FROM location l)  AND g.city NOT IN (SELECT g.city FROM geographic g WHERE g.region != 'unknown')  LIMIT 3;
SELECT g.label  FROM location l  JOIN generalinfo g ON l.id_restaurant = g.id_restaurant  WHERE l.street_num = 104 AND l.street_name = 'San Tomas Aquino Road' AND l.city = 'Campbell'  AND g.food_type = 'chinese';
SELECT COUNT(*) FROM location T1 JOIN generalinfo T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.food_type = 'thai' AND T1.street_name = 'san pablo ave' AND T1.city = 'albany';
SELECT g.county, g.region FROM generalinfo gi JOIN geographic g ON gi.city = g.city WHERE gi.label = 'plearn-thai cuisine';
SELECT label  FROM generalinfo  WHERE city IN (   SELECT city    FROM location    WHERE id_restaurant IN (     SELECT id_restaurant      FROM geographic      WHERE county = 'El Dorado' AND region = 'Lake Tahoe'   ) )
SELECT g.county, g.region FROM location l JOIN geographic g ON l.city = g.city WHERE l.street_name = 'E. El Camino Real';
SELECT label  FROM generalinfo  WHERE food_type = 'Indian'  AND city = (SELECT city FROM location WHERE street_name = 'shattuck ave')  ORDER BY review ASC  LIMIT 1;
SELECT (COUNT(g.id_restaurant) / COUNT(h.id_restaurant)) * 100 FROM generalinfo g JOIN geographic h ON g.city = h.city AND g.region = h.region WHERE h.region = 'Bay Area' AND g.review > 4;
SELECT DISTINCT city FROM geographic WHERE county = 'San Mateo County';
SELECT COUNT(*) FROM generalinfo WHERE review > 4;
SELECT street_name, COUNT(*) as count FROM location GROUP BY street_name ORDER BY count DESC LIMIT 1;
SELECT g.label, MAX(g.review)  FROM generalinfo g  WHERE g.food_type = 'chicken'  GROUP BY g.label;
Error: 第 1725 个样本有 0 个SQL。
SELECT COUNT(*) FROM location WHERE street_name = 'irving';
SELECT g.label FROM generalinfo g JOIN geographic c ON g.city = c.city WHERE c.county = 'Marin';
SELECT l.street_num, l.street_name FROM generalinfo g JOIN location l ON g.id_restaurant = l.id_restaurant WHERE g.label = 'Peking Duck restaurant';
Error: 第 1729 个样本有 0 个SQL。
SELECT region FROM geographic WHERE region IN (   SELECT region   FROM geographic   JOIN generalinfo ON geographic.city = generalinfo.city   WHERE food_type = 'greek'   GROUP BY region )
SELECT l.street_num, l.street_name FROM location l JOIN geographic g ON l.city = g.city WHERE g.region = 'unknown';
SELECT review  FROM generalinfo  WHERE id_restaurant = (SELECT id_restaurant                         FROM location                         WHERE street_num = 8440 AND street_name = 'murray ave');
SELECT food_type FROM generalinfo WHERE city IN (   SELECT city   FROM geographic   WHERE county = 'Monterey' ) GROUP BY food_type ORDER BY COUNT(food_type) DESC LIMIT 1;
SELECT street_name FROM location WHERE city = 'San Francisco' GROUP BY street_name ORDER BY COUNT(CASE WHEN food_type = 'burgers' THEN 1 END) DESC LIMIT 1;
SELECT g.region FROM location l JOIN geographic g ON l.city = g.city WHERE l.street_num = 1149 AND l.street_name = 'El Camino Real';
Error: 第 1736 个样本有 0 个SQL。
SELECT COUNT(DISTINCT street_name)  FROM location  WHERE id_restaurant IN (   SELECT id_restaurant    FROM generalinfo    WHERE city IN (     SELECT city      FROM geographic      WHERE region = 'Northern California'   ) )  AND city IN (   SELECT city    FROM geographic    WHERE region = 'Northern California' );
SELECT g.label  FROM location l  JOIN generalinfo g ON l.id_restaurant = g.id_restaurant  WHERE l.street_name = 'Park St';
SELECT (COUNT(g.id_restaurant) WHERE g.region = 'bay area') * 100 / COUNT(g.id_restaurant) AS percentage FROM geographic g JOIN generalinfo ginfo ON g.id_restaurant = ginfo.id_restaurant
SELECT    county,    AVG(review) AS average_review FROM    generalinfo WHERE    food_type = 'chinese' GROUP BY    county ORDER BY    average_review DESC;
Error: 第 1741 个样本有 0 个SQL。
Error: 第 1742 个样本有 0 个SQL。
SELECT COUNT(DISTINCT city)  FROM location  WHERE id_restaurant IN (SELECT id_restaurant FROM geographic WHERE region = 'bay area');
SELECT COUNT(g.label)  FROM generalinfo g  WHERE g.city IN (SELECT l.city FROM location l)    AND g.city NOT IN (SELECT g.city FROM geographic g WHERE g.county != 'unknown');
SELECT l.street_name FROM location l JOIN generalinfo g ON l.id_restaurant = g.id_restaurant WHERE g.food_type = 'American';
SELECT label  FROM generalinfo  WHERE city IN (   SELECT city    FROM location    JOIN geographic ON location.city = geographic.city    WHERE geographic.county = 'Santa Cruz county' )
SELECT review FROM generalinfo WHERE id_restaurant = (   SELECT id_restaurant   FROM location   WHERE street_num = 430 AND street_name = 'Broadway' )
SELECT l.street_num, l.street_name FROM location l JOIN generalinfo g ON l.id_restaurant = g.id_restaurant WHERE g.review = (SELECT MAX(review) FROM generalinfo);
SELECT geographic.county, COUNT(*) as num_restaurants FROM generalinfo JOIN geographic ON generalinfo.city = geographic.city WHERE food_type = 'Italian' GROUP BY geographic.county ORDER BY num_restaurants DESC LIMIT 1;
SELECT (COUNT(id_restaurant) FROM generalinfo WHERE region = 'Napa Valley') * 100.0 / COUNT(id_restaurant) FROM generalinfo;
SELECT COUNT(DISTINCT city) FROM geographic WHERE region = 'bay area';
SELECT DISTINCT g.city FROM geographic g WHERE g.county = 'unknown';
SELECT l.city FROM location l JOIN geographic g ON l.city = g.city WHERE g.region = 'bay area' AND g.county = 'santa clara county';
Error: 第 1754 个样本有 0 个SQL。
SELECT COUNT(*)  FROM location  WHERE street_num < 1000 AND street_name = 'railroad';
SELECT label  FROM generalinfo  WHERE food_type = '24 hour diner' AND city = 'San Francisco';
SELECT review FROM generalinfo WHERE id_restaurant IN (   SELECT id_restaurant   FROM location   WHERE city = 'santa cruz' AND street_name = 'ocean st')
SELECT l.street_num FROM generalinfo g JOIN location l ON g.id_restaurant = l.id_restaurant WHERE g.food_type = 'bar' AND g.city = 'oakland' AND g.review = 2.7;
SELECT COUNT(*) FROM location WHERE id_restaurant IN (   SELECT id_restaurant   FROM generalinfo   WHERE food_type = 'bakery' ) AND city = 'palo alto' AND street_name = 'university ave.';
SELECT street_num FROM location WHERE id_restaurant IN (   SELECT id_restaurant   FROM generalinfo   WHERE label = 'Tulocay Winery' AND food_type = 'winery' ) AND city = (   SELECT city   FROM geographic   WHERE region = '...';  // complete this part );
SELECT g.label, g.review  FROM generalinfo g  JOIN location l ON g.id_restaurant = l.id_restaurant  WHERE l.street_name = 'Mission Blvd' AND l.city = 'Hayward';
Error: 第 1762 个样本有 0 个SQL。
SELECT COUNT(*) FROM location WHERE id_restaurant IN (   SELECT id_restaurant   FROM generalinfo   WHERE review = 2 ) AND street_num < 500;
Error: 第 1764 个样本有 0 个SQL。
SELECT g.label, g.id_restaurant FROM generalinfo g JOIN location l ON g.id_restaurant = l.id_restaurant WHERE l.street_name = 'Ocean Avenue' AND l.city = 'San Francisco';
SELECT l.street_num, l.street_name, g.city FROM location l JOIN generalinfo g ON l.id_restaurant = g.id_restaurant JOIN geographic geo ON g.city = geo.city WHERE g.label = 'Sanuki Restaurant';
SELECT food_type FROM generalinfo WHERE id_restaurant IN (   SELECT id_restaurant   FROM location   WHERE street_num = 22779 AND street_name = '6th St' AND city = 'Hayward' )
SELECT COUNT(*) FROM location WHERE id_restaurant IN (   SELECT id_restaurant   FROM generalinfo   WHERE food_type = 'american' ) AND city = 'san francisco' AND street_name = 'front';
SELECT id_restaurant FROM generalinfo WHERE food_type = 'american' AND review > (SELECT AVG(review) * 0.7 FROM generalinfo g1 WHERE g1.food_type = 'american') INTERSECT SELECT id_restaurant FROM location WHERE street_num > 2000 CROSS JOIN geographic WHERE city IN (SELECT city FROM geographic g2 WHERE g2.region = 'American');
SELECT (COUNT(g.id_restaurant) / COUNT(l.id_restaurant)) * 100 FROM location l JOIN generalinfo g ON l.id_restaurant = g.id_restaurant WHERE l.street_num BETWEEN 1000 AND 2000 AND g.food_type = 'afghani';
SELECT label  FROM generalinfo  WHERE food_type = 'asian' AND city = 'san francisco'  ORDER BY review DESC  LIMIT 1;
SELECT COUNT(DISTINCT city)  FROM geographic, location  WHERE geographic.city = location.city AND geographic.region = 'monterey';
SELECT COUNT(*)  FROM generalinfo  WHERE food_type = 'deli' AND city = 'Belmont' AND review > 2;
SELECT county, COUNT(city) AS max_cities FROM geographic WHERE region = 'northern california' GROUP BY county ORDER BY max_cities DESC LIMIT 1;
SELECT COUNT(*)  FROM location  WHERE city = 'concord';
SELECT region FROM geographic WHERE region IN (   SELECT region   FROM generalinfo   GROUP BY region   ORDER BY MAX(review) DESC   LIMIT 4 )
SELECT COUNT(*) FROM generalinfo, location WHERE food_type = 'chinese' AND location.street_name = '1st st' AND location.city = 'Livermore' AND generalinfo.id_restaurant = location.id_restaurant;
SELECT COUNT(*) FROM generalinfo WHERE food_type = 'indian' AND city IN (   SELECT city   FROM geographic   WHERE region = 'los angeles area' );
SELECT food_type FROM generalinfo WHERE city IN (   SELECT city   FROM geographic   WHERE region = 'bay area' ) GROUP BY food_type ORDER BY COUNT(food_type) DESC LIMIT 1;
SELECT COUNT(*) FROM generalinfo WHERE id_restaurant IN (   SELECT id_restaurant   FROM location   WHERE street_name = 'broadway' AND city = 'oakland' ) AND review <= 3;
SELECT region FROM geographic WHERE city IN (   SELECT city   FROM generalinfo   WHERE label = 'baskin robbins' ) GROUP BY region ORDER BY COUNT(city) DESC LIMIT 1;
SELECT street_name FROM location WHERE id_restaurant IN (   SELECT id_restaurant   FROM generalinfo   WHERE food_type = 'pizza' AND city = 'San Jose' )
Error: 第 1783 个样本有 0 个SQL。
SELECT l.street_num, l.street_name, l.city FROM location l JOIN generalinfo g ON l.id_restaurant = g.id_restaurant WHERE g.review = (SELECT MAX(review) FROM generalinfo)
SELECT county  FROM geographic  WHERE city IN (   SELECT city    FROM location    GROUP BY city    ORDER BY COUNT(city) DESC    LIMIT 1 )
SELECT region, COUNT(id_restaurant) AS num_restaurants FROM geographic JOIN generalinfo ON geographic.city = generalinfo.city GROUP BY region ORDER BY num_restaurants DESC LIMIT 1;
SELECT l.street_num, l.street_name, l.city  FROM location l  JOIN generalinfo g ON l.id_restaurant = g.id_restaurant  JOIN geographic geo ON g.city = geo.city  WHERE geo.region = 'American' AND g.review > 4;
SELECT COUNT(*) FROM Player WHERE SUBSTR(DOB, 1, 4) > 1985;
SELECT COUNT(*)  FROM Match  WHERE SUBSTR(Match_Date, 1, 4) = '2008' AND SUBSTR(Match_Date, 7, 1) = '5';
SELECT COUNT(*)  FROM Match  WHERE Man_of_the_Match = 41;
SELECT Match_Id FROM Match WHERE SUBSTR(Match_Date, 1, 4) = '2008';
SELECT COUNT(*) FROM Player WHERE Country_Name = 'Australia';
Error: 第 1793 个样本有 0 个SQL。
SELECT Bowling_skill FROM Player WHERE Player_Name = 'SC Ganguly';
SELECT COUNT(*) FROM Player WHERE Batting_hand = 'Right-hand bat' AND SUBSTR(DOB, 1, 4) > 1985;
Error: 第 1796 个样本有 0 个SQL。
Error: 第 1797 个样本有 0 个SQL。
SELECT MIN(DOB)  FROM Player  WHERE Bowling_skill = 'Legbreak';
Error: 第 1799 个样本有 0 个SQL。
SELECT Player_Name FROM Match, Player_Match, Player WHERE Match.Match_Date = '2008-04-18' AND Match.Match_Id = Player_Match.Match_Id AND Player_Match.Player_Id = Player.Player_Id AND Man_of_the_Match = 'Yes';
SELECT COUNT(*)  FROM Player_Match pm  JOIN Player p ON pm.Player_Id = p.Player_Id  WHERE p.Player_Name = 'SC Ganguly' AND pm.Role_Id IN (SELECT Role_Id FROM Rolee WHERE Role_Desc = 'Captain');
SELECT Role_Desc FROM Rolee, Player_Match, Player WHERE Rolee.Role_Id = Player_Match.Role_Id AND Player_Match.Player_Id = Player.Player_Id AND Player.Player_Name = 'SC Ganguly' AND Match_Date = '2008-04-18';
SELECT MAX(Win_Margin) FROM Match WHERE Player_Match.Player_Id IN (   SELECT Player_Id   FROM Player   WHERE Player_Name = 'SC Ganguly' ) AND Win_Type = 'Win';
SELECT AVG(Win_Margin)  FROM Match  WHERE Player_Name = 'SC Ganguly';
SELECT (COUNT(Player_Id) FROM Player WHERE Batting_Hand = 'Right-hand bat' AND SUBSTR(DOB, 1, 4) > 1985) / (SELECT COUNT(Player_Id) FROM Player WHERE SUBSTR(DOB, 1, 4) > 1985) * 100
SELECT Player_Name FROM Player WHERE DOB = (SELECT MAX(DOB) FROM Player);
Error: 第 1807 个样本有 0 个SQL。
SELECT Player_Name FROM Ball_by_Ball WHERE Match_Id = 419169 AND Over_Id = 3 AND Ball_Id = 2 AND Innings_No = 2;
SELECT Venue_Name FROM Match WHERE Win_Margin = 138;
Error: 第 1810 个样本有 0 个SQL。
SELECT Player_Name FROM Player JOIN Player_Match ON Player.Player_Id = Player_Match.Player_Id JOIN Match ON Player_Match.Match_Id = Match.Match_Id WHERE Match.Match_Id = 419117 AND Role_Desc = 'CaptainKeeper';
SELECT Player_Name FROM Player, Season WHERE Player.Country_Name = Season.Country_Name AND Player.Player_Id = (SELECT Player_Match.Player_Id                          FROM Player_Match, Season                          WHERE Player_Match.Season_Id = Season.Season_Id                          AND Season.Season_Year = 2013) AND Season.Season_Year = 2013;
SELECT DOB FROM Player WHERE Player_Name = (SELECT Player_Name                      FROM Season                      WHERE Season_Year = 2014 AND Orange_Cap IS NOT NULL)
Error: 第 1814 个样本有 0 个SQL。
SELECT Country_Name FROM City, Country WHERE City_Name = 'Ranchi' AND City.Country_id = Country.Country_Id;
SELECT COUNT(*)  FROM City  WHERE Country_id IN (SELECT Country_Id FROM Country WHERE Country_Name = 'India');
Error: 第 1817 个样本有 0 个SQL。
SELECT Batting_hand FROM Player WHERE Player_Name = 'MK Pandey';
SELECT    COUNT(City_Id) WHERE Country_Name = 'India' / COUNT(City_Id) WHERE Country_Name = 'South Africa' FROM    City;
Error: 第 1820 个样本有 0 个SQL。
SELECT Player_Name FROM Player ORDER BY DOB LIMIT 1;
Error: 第 1822 个样本有 0 个SQL。
Error: 第 1823 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Match  WHERE (Team_1 = 10 OR Team_2 = 10) AND SUBSTR(Match_Date, 1, 4) = '2012';
SELECT Orange_Cap FROM Season WHERE Season_Year IN (   SELECT Season_Year   FROM Season   GROUP BY Season_Year   HAVING COUNT(Season_Year) > 1 )
Error: 第 1826 个样本有 0 个SQL。
Error: 第 1827 个样本有 0 个SQL。
SELECT P.Player_Name FROM Player P JOIN Player_Match PM ON P.Player_Id = PM.Player_Id JOIN Match M ON PM.Match_Id = M.Match_Id WHERE M.Man_of_the_Match = (SELECT MAX(Man_of_the_Match) FROM Match)
SELECT Country_Name FROM Player GROUP BY Country_Name ORDER BY COUNT(Country_Name) DESC LIMIT 1;
SELECT COUNT(*)  FROM Season  WHERE Orange_Cap = (SELECT Player_Name FROM Player WHERE Player_Name = 'CH Gayle');
Error: 第 1831 个样本有 0 个SQL。
Error: 第 1832 个样本有 0 个SQL。
SELECT Venue_Name FROM Venue WHERE Venue_Id IN (   SELECT Venue_Id   FROM Match   WHERE Team_1 = 'Kolkata Knight Riders'   GROUP BY Venue_Id   ORDER BY COUNT(Venue_Id) DESC   LIMIT 1 )
SELECT Team_Name FROM Match GROUP BY Team_Name ORDER BY (COUNT(CASE WHEN Team_Id = Team_1 AND Team_1 <> Match_Winner THEN 1 ELSE NULL END) + COUNT(CASE WHEN Team_Id = Team_2 AND Team_2 <> Match_Winner THEN 1 ELSE NULL END)) DESC LIMIT 1;
SELECT Player_Name FROM Player WHERE Player_Id = (   SELECT min(Player_Id)   FROM Man_of_the_Series );
SELECT MIN(Match_Date) FROM Match WHERE Team_1 = 'Chennai Super Kings' OR Team_2 = 'Chennai Super Kings';
SELECT COUNT(*)  FROM Player  WHERE Batting_hand = 'Left-hand bat' AND Country_Name = 'India';
SELECT Player_Name FROM Player_Match WHERE Team_Id IN (SELECT Team_Id FROM Team WHERE Team_Name = 'Deccan Chargers') AND Role_Id IN (SELECT Role_Id FROM Rolee WHERE Role_Desc = 'Captain') GROUP BY Player_Name ORDER BY COUNT(Role_Id) DESC LIMIT 1;
SELECT (COUNT(Player_Id) WHERE Batting_hand = 'Right-hand bat') / COUNT(Player_Id) * 100 AS Percentage FROM Player;
SELECT Player_Name FROM Player WHERE DOB = '1981-07-07';
Error: 第 1841 个样本有 0 个SQL。
SELECT Team_Name FROM Match WHERE Team_Id = Team_1 ORDER BY Win_Margin DESC LIMIT 1;
SELECT Country_Name FROM Venue WHERE Venue_Name = 'St George''s Park';
SELECT Player_Name FROM Player JOIN Player_Match ON Player.Player_Id = Player_Match.Player_Id JOIN Team ON Player_Match.Team_Id = Team.Team_Id WHERE Team.Team_Name = 'Mumbai Indians' AND Player_Match.Match_Id = 335990;
SELECT Team_Name FROM Match, Team WHERE Match.Match_Winner = Team.Team_Id AND Match.Match_Date = '2009-05-07' AND Match.Win_Margin = 7 AND Match.Team_1 = Team.Team_Id;
SELECT COUNT(*)  FROM Match  WHERE Outcome_Type = 'Superover';
Error: 第 1847 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Match  WHERE Team_Winner = (SELECT Team_Id FROM Team WHERE Team_Name = 'Pune Warriors')  AND Win_Type = (SELECT Win_Id FROM Win_By WHERE Win_Type = 'Won');
SELECT Team_Id FROM Match WHERE Match_Id = 829768 AND Match_Date LIKE '2015%';
Error: 第 1850 个样本有 0 个SQL。
Error: 第 1851 个样本有 0 个SQL。
Error: 第 1852 个样本有 0 个SQL。
Error: 第 1853 个样本有 0 个SQL。
SELECT Team_1, Team_2 FROM Match WHERE Match_Date LIKE '2011%' AND Win_Margin < (SELECT AVG(Win_Margin) FROM Match WHERE Match_Date LIKE '2011%') * 0.3 ORDER BY Match_Date LIMIT 2;
Error: 第 1855 个样本有 0 个SQL。
SELECT COUNT(DISTINCT Over_Id) FROM Extra_Runs WHERE Match_Id = 335996 AND Innings_No = 1;
SELECT    B.over_Id,    B.ball_Id,    B.Innings_No FROM    Batsman_Scored B WHERE    B.Match_Id = 336004   AND B.Runs_Scored = (SELECT MAX(Runs_Scored) FROM Batsman_Scored WHERE Match_Id = 336004);
SELECT Match_Id FROM Ball_by_Ball WHERE Over_Id > 20 LIMIT 5;
Error: 第 1859 个样本有 0 个SQL。
SELECT Player_name FROM Player WHERE DOB LIKE '1971%';
Error: 第 1861 个样本有 0 个SQL。
SELECT Match_Id FROM Wicket_Taken WHERE Kind_Out = 'hit wicket';
SELECT COUNT(*) FROM Wicket_Taken WHERE Innings_No = 2 AND Kind_Out = 'stumped';
Error: 第 1864 个样本有 0 个SQL。
SELECT Player_Name, DOB FROM Player WHERE DOB LIKE '1977%' AND Country_Name = 'England';
SELECT Player_Name FROM Player WHERE Player_Id = (SELECT Man_of_the_Series                    FROM Season                    WHERE Season_Year = 2010);
SELECT (COUNT(Match_Id) WHERE Match_Winner = 3) / COUNT(Match_Id) * 100 FROM Match WHERE Team_Name = 'Chennai Super Kings';
SELECT p.Player_Name, p.Country_Name FROM Player p JOIN Player_Match pm ON p.Player_Id = pm.Player_Id JOIN Match m ON pm.Match_Id = m.Match_Id WHERE m.Match_Date = '2016-04-11' AND pm.Team_Id IN (   SELECT t.Team_Id   FROM Team t   WHERE t.Team_Name = 'Gujarat Lions' )
SELECT Player_Name, DOB  FROM Player  WHERE Bowling_skill = 'Left-arm fast';
Error: 第 1870 个样本有 0 个SQL。
SELECT P.Player_Name FROM Player P JOIN Player_Match PM ON P.Player_Id = PM.Player_Id JOIN Match M ON PM.Match_Id = M.Match_Id WHERE M.Match_Date = '2008-06-01' AND M.Match_Winner = PM.Team_Id AND P.Role_Desc = 'Captain';
Error: 第 1872 个样本有 0 个SQL。
SELECT (COUNT(Match_Id)          FROM Match          WHERE Venue_Name = 'Wankhede Stadium'          AND City_Name = 'Mumbai') * 100 /         (COUNT(Match_Id)          FROM Match          WHERE City_Name = 'Mumbai') AS Percentage
Error: 第 1874 个样本有 0 个SQL。
Error: 第 1875 个样本有 0 个SQL。
SELECT Toss_winner FROM Match WHERE Toss_Winner = Toss_Decide AND Toss_Decide = 2;
Error: 第 1877 个样本有 0 个SQL。
Error: 第 1878 个样本有 0 个SQL。
SELECT Team_Name FROM Match WHERE Match_Id BETWEEN 336010 AND 336020 AND Toss_Winner = Team_1 OR Toss_Winner = Team_2;
Error: 第 1880 个样本有 0 个SQL。
Error: 第 1881 个样本有 0 个SQL。
Error: 第 1882 个样本有 0 个SQL。
Error: 第 1883 个样本有 0 个SQL。
SELECT Venue_Name FROM Venue WHERE City_Id IN (SELECT City_Id FROM City WHERE Country_id IN (SELECT Country_Id FROM Country WHERE Country_Name = 'Country_Name'))  AND Venue_Id IN (SELECT Venue_Id FROM Match WHERE Season_Id = 2);
SELECT City_Name FROM Venue WHERE Venue_Name = 'M Chinnaswamy Stadium';
Error: 第 1886 个样本有 0 个SQL。
SELECT Team_Id FROM Match WHERE Match_Winner = Team_1 OR Match_Winner = Team_2 AND Venue_Id IN (SELECT Venue_Id FROM Venue WHERE Venue_Name LIKE 'St George%');
SELECT * FROM Venue WHERE Venue_Name = 'SuperSport Park' AND City_Id IN (   SELECT City_Id   FROM City   WHERE City_Name = 'Centurion' );
Error: 第 1889 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Venue v  JOIN City c ON v.City_Id = c.City_Id  WHERE c.City_Name = 'Pune';
SELECT Player_Id FROM Ball_by_Ball WHERE Match_Id = 501219 GROUP BY Player_Id ORDER BY COUNT(Ball_Id) DESC LIMIT 1;
SELECT AVG(Runs_Scored) AS Average_Runs_Scored FROM Batsman_Scored WHERE Innings_No = 1 AND 1 < Over_Id AND Over_Id < 25;
SELECT AVG(ER.Extra_Runs)  FROM Extra_Runs ER  WHERE ER.Innings_No = 2;
SELECT      (COUNT(Match_Id) * 100.0 / COUNT(DISTINCT Match_Id)) AS percentage FROM      Match WHERE      Win_Margin > 100;
SELECT Player_Name FROM Player WHERE DOB BETWEEN '1970-01-01' AND '1990-12-31' ORDER BY TIMESTAMPDIFF(YEAR, DOB, '1990-12-31') DESC;
Error: 第 1896 个样本有 0 个SQL。
Error: 第 1897 个样本有 0 个SQL。
SELECT (COUNT(Player_Id)          WHEN Role_Desc = 'CaptainKeeper'          ELSE 0      ) / (SELECT COUNT(Player_Id) FROM Rolee) * 100 AS percentage FROM Player_Match JOIN Rolee ON Player_Match.Role_Id = Rolee.Role_Id GROUP BY Player_Id
SELECT COUNT(*) FROM Player p JOIN Player_Match pm ON p.Player_Id = pm.Player_Id JOIN Wicket_Taken wt ON pm.Match_Id = wt.Match_Id AND pm.Player_Id = wt.Player_Out JOIN Out_Type ot ON wt.Kind_Out = ot.Out_Id WHERE ot.Out_Name = 'hit wicket';
Error: 第 1900 个样本有 0 个SQL。
SELECT (SUM(Player_Id) WHERE Bowling_skill = 'Legbreak') / COUNT(Player_Id) * 100 AS percentage FROM Player;
SELECT COUNT(*)  FROM Match  WHERE Win_Margin < 50 AND Win_Type = 'wickets';
SELECT COUNT(DISTINCT Venue_Id) FROM Match WHERE Toss_Winner = Team_2 AND Match_Winner = Team_1;
SELECT P.Player_Name, C.Country_Name FROM Player P JOIN Season S ON P.Player_Id = S.Man_of_the_Series JOIN Country C ON P.Country_Name = C.Country_Name WHERE S.Season_Year = 2012;
SELECT Venue_Name FROM Venue WHERE Venue_Id = (SELECT MAX(count(Venue_Id))                   FROM Match);
Error: 第 1906 个样本有 0 个SQL。
Error: 第 1907 个样本有 0 个SQL。
Error: 第 1908 个样本有 0 个SQL。
SELECT      COUNT(*)/COUNT(Team_1) * 100 AS percentage FROM      Match WHERE      Win_Type = 'runs' AND      Toss_Winner = Team_1 AND      Toss_Decide = 'field';
SELECT AVG(Player_Out) AS Average_Lbw,         AVG(Player_Out) AS Average_Runout FROM Wicket_Taken WHERE Out_Id = 4 OR Out_Id = 3 GROUP BY Out_Id;
SELECT Over_Id FROM Ball_by_Ball WHERE Striker = 7;
SELECT COUNT(*) FROM Match WHERE Team_1 = Toss_Winner AND Toss_Decide = 2;
Error: 第 1913 个样本有 0 个SQL。
SELECT COUNT(*) FROM Player WHERE DOB < '1990-06-29' AND Player_Name != 'Gurkeerat Singh';
SELECT COUNT(*)  FROM Match, Player_Match, Player  WHERE Match.Match_Winner = Player.Player_Id  AND Player_Match.Match_Id = Match.Match_Id  AND Player_Match.Player_Id = Player.Player_Id  AND Player.Player_Name = 'SR Watson'  AND Match.Man_of_the_Match = Player.Player_Id;
SELECT Player_Name FROM Player_Match WHERE Team_Id IN (SELECT Team_Id FROM Team WHERE Team_Name = 'Delhi Daredevils') GROUP BY Player_Name ORDER BY COUNT(Role_Id) DESC LIMIT 1;
SELECT Player_Name FROM Player, Season WHERE Player.Player_Name = Season.Man_of_the_Series GROUP BY Player.Player_Name ORDER BY COUNT(Man_of_the_Series) DESC LIMIT 1;
SELECT Season_Year FROM Season WHERE Orange_Cap = (SELECT Player_Name FROM Player WHERE Player_Name = 'SP Narine');
Error: 第 1919 个样本有 0 个SQL。
Error: 第 1920 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Player  WHERE Batting_hand = 'Left-hand bat';
SELECT COUNT(*)  FROM Match  WHERE Win_Type != 'runs';
Error: 第 1923 个样本有 0 个SQL。
Error: 第 1924 个样本有 0 个SQL。
SELECT Venue_Id FROM Match WHERE Team_1 = 'Kochi Tuskers Kerala' OR Team_2 = 'Kochi Tuskers Kerala' GROUP BY Venue_Id ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 1926 个样本有 0 个SQL。
Error: 第 1927 个样本有 0 个SQL。
Error: 第 1928 个样本有 0 个SQL。
SELECT Player_Id FROM Player ORDER BY Bowling_skill DESC LIMIT 5;
SELECT COUNT(*) FROM Player WHERE DOB < '1975-10-16' AND Bowling_skill < 3;
SELECT Player_Name FROM Player WHERE DOB = (SELECT MAX(DOB) FROM Player);
Error: 第 1932 个样本有 0 个SQL。
Error: 第 1933 个样本有 0 个SQL。
Error: 第 1934 个样本有 0 个SQL。
SELECT Match_Id, Match_Date FROM Match WHERE Venue_Id IN (   SELECT Venue_Id   FROM Venue   WHERE Venue_Name = 'Kingsmead' ) AND DATE_SUB(Match_Date, INTERVAL 1 DAY) = (   SELECT Match_Date   FROM Match   WHERE Venue_Id IN (     SELECT Venue_Id     FROM Venue     WHERE Venue_Name = 'Kingsmead'   )   ORDER BY Match_Date   LIMIT 1 ) AND DATE_ADD(Match_Date, INTERVAL 1 DAY) = (   SELECT Match_Date   FROM Match   WHERE Venue_Id IN (     SELECT Venue_Id     FROM Venue     WHERE Venue_Name = 'Kingsmead'   )   ORDER BY Match_Date   LIMIT 1 OFFSET 1 );
SELECT COUNT(*)  FROM Match  WHERE Venue_Name = 'MA Chidambaram Stadium'  AND Match_Date BETWEEN '2009-05-09' AND '2011-08-08';
Error: 第 1937 个样本有 0 个SQL。
SELECT Toss_Winner, Toss_Name FROM Match WHERE Match_Id = 336011;
SELECT COUNT(*)  FROM Player  WHERE Country_Name = 'South Africa' AND DOB < '1980-4-11';
SELECT Player_Name FROM Player WHERE Bowling_skill = 'Legbreak';
SELECT      min(Match_Date) as Match_Date,      r.Role_Desc as Role FROM      Player p      JOIN Player_Match pm ON p.Player_Id = pm.Player_Id      JOIN Rolee r ON pm.Role_Id = r.Role_Id  WHERE      p.Player_Id IN (         SELECT              Player_Id          FROM              Player          ORDER BY              DOB          LIMIT 1     ) GROUP BY      r.Role_Desc;
Error: 第 1942 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Player p JOIN Player_Match pm ON p.Player_Id = pm.Player_Id JOIN Match m ON pm.Match_Id = m.Match_Id WHERE m.Match_Date BETWEEN '2011%' AND '2012%'    AND p.Country_Name = 'Australia'   AND m.Outcome_type = 'Match_Winner';
Error: 第 1944 个样本有 0 个SQL。
Error: 第 1945 个样本有 0 个SQL。
SELECT Umpire_Id, Umpire_Name FROM Umpire WHERE Umpire_Country = 'England';
SELECT SUM(Runs_Scored) / COUNT(*) AS Run_Rate FROM Batsman_Scored bs JOIN Player_Match pm ON bs.Match_Id = pm.Match_Id JOIN Player p ON pm.Player_Id = p.Player_Id JOIN Match m ON bs.Match_Id = m.Match_Id WHERE m.Match_Date = '4/18/2008' AND pm.Role_Id IN (SELECT Role_Id FROM Player_Match WHERE Match_Id = 335987 AND Role_Id IN (SELECT Role_Id FROM Player_Match WHERE Match_Id = 335987 AND Toss_Name = 'bat')) AND bs.Over_Id <= (SELECT COUNT(*) FROM Toss_Decision WHERE Toss_Name = 'field' AND Match_Id = 335987);
SELECT    P.Player_Name,    SUM(B.Over_Id) / COUNT(B.Runs_Scored) AS Run_Rate FROM    Ball_by_Ball B   JOIN Player_Match PM ON B.Match_Id = PM.Match_Id   JOIN Player P ON PM.Player_Id = P.Player_Id WHERE    B.Match_Id = 335999 AND    B.Innings_No = 1 AND    B.Over_Id <= 16 AND    PM.Role_Id = (SELECT Role_Id FROM Rolee WHERE Role_Desc = 'bat') OR    PM.Role_Id = (SELECT Role_Id FROM Rolee WHERE Role_Desc = 'field') GROUP BY    P.Player_Name HAVING    COUNT(B.Toss_Name) = 16 ORDER BY    Run_Rate DESC;
SELECT Team_Id FROM Match GROUP BY Team_Id ORDER BY COUNT(Match_Winner) DESC LIMIT 1;
SELECT EXTRACT(YEAR FROM DOB) AS Birth_Year, COUNT(Player_Id) AS Count FROM Player GROUP BY EXTRACT(YEAR FROM DOB) ORDER BY Count DESC LIMIT 1;
SELECT Match_Date FROM Match WHERE Match_Date = (SELECT MAX(Win_Margin) FROM Match);
SELECT Season_Year FROM Season WHERE Season_Id = (   SELECT MIN(Season_Id)   FROM Season );
SELECT COUNT(DISTINCT p.Player_Id)  FROM Player p  JOIN Player_Match pm ON p.Player_Id = pm.Player_Id  JOIN Match m ON pm.Match_Id = m.Match_Id  WHERE m.Man_of_the_Match > 0;
SELECT Player_Name FROM Player, Match WHERE Player.Player_Id = Player_Match.Player_Id AND Match.Match_Id = Player_Match.Match_Id AND Match.Match_Date = (SELECT MAX(Match_Date) FROM Match WHERE Season_Id = 9) AND Match.Match_Winner = 'Player_Name';
Error: 第 1955 个样本有 0 个SQL。
SELECT COUNT(DISTINCT City_Name) FROM City WHERE Country_id IN (SELECT Country_Id FROM Country WHERE Country_Name = 'U.A.E');
SELECT Umpire_Name FROM Umpire WHERE Umpire_Country = 'England';
SELECT COUNT(*)  FROM Player  WHERE Bowling_skill = 'Legbreak';
SELECT COUNT(*)  FROM Match  WHERE Season_Id = 8 AND Team_1 = 'Rajasthan Royals' OR Team_2 = 'Rajasthan Royals';
Error: 第 1960 个样本有 0 个SQL。
SELECT Venue_Name FROM Venue WHERE City_Id IN (   SELECT City_Id   FROM City   WHERE City_Name = 'Abu Dhabi' );
Error: 第 1962 个样本有 0 个SQL。
Error: 第 1963 个样本有 0 个SQL。
Error: 第 1964 个样本有 0 个SQL。
SELECT v.Venue_Name, c.City_Name, c.Country_Name FROM Venue v JOIN City c ON v.City_Id = c.City_Id WHERE Match_Date = (SELECT MAX(Match_Date) FROM Match);
SELECT      Innings_No,      COUNT(Over_Id) AS Total_Overs FROM      Ball_by_Ball WHERE      Match_Id = 336011 GROUP BY      Innings_No;
SELECT b.Ball_Id, b.Runs_Scored, b.Innings_No FROM Ball_by_Ball b JOIN Batsman_Scored bs ON b.Match_Id = bs.Match_Id AND b.Over_Id = bs.Over_Id AND b.Ball_Id = bs.Ball_Id WHERE b.Match_Id = 335988 AND b.Over_Id = 20;
Error: 第 1968 个样本有 0 个SQL。
SELECT SUBTRACT(2022, SUBSTR(DOB, 1, 4)) AS old FROM Player WHERE Player_Name = 'Ishan Kishan';
Error: 第 1970 个样本有 0 个SQL。
Error: 第 1971 个样本有 0 个SQL。
Error: 第 1972 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Player_Match  WHERE Player_Id IN (SELECT Player_Id FROM Player WHERE Player_Name = 'Mohammad Hafeez');
SELECT Player_Name FROM Player WHERE Country_Name = 'South Africa' AND DOB LIKE '1984%';
SELECT      DIVIDE(COUNT(Match_Winner = Team_Id), COUNT(Match_Id)) * 100 AS Win_Percent FROM      Match WHERE      Team_1 = 'Mumbai Indians' AND Match_Date LIKE '2009%'
SELECT      DIVIDE(COUNT(CASE WHEN Batting_hand = 'Left-hand bat' THEN 1 END),             COUNT(CASE WHEN Batting_hand = 2 THEN 1 END)) AS Ratio FROM      Player;
SELECT P.Player_Name, C.Country_Name FROM Player P JOIN Country C ON P.Country_Name = C.Country_Name WHERE P.DOB = (SELECT MIN(DOB) FROM Player);
SELECT DISTINCT Bowling_skill FROM Player WHERE Country_Name = 'Zimbabwe';
SELECT Umpire_Id, Umpire_Name FROM Umpire WHERE Umpire_Country = 'New Zealand';
SELECT Player_Name FROM Player WHERE Player_Id IN (   SELECT Player_Id   FROM Player_Match   WHERE Team_Id IN (     SELECT Team_Id     FROM Team     WHERE Team_Name = 'Rising Pune Supergiants'   ) AND Role_Id IN (     SELECT Role_Id     FROM Rolee     WHERE Role_Desc = 'CaptainKeeper'   ) )
Error: 第 1981 个样本有 0 个SQL。
SELECT Match_Id FROM Extra_Runs WHERE Extra_Type_Id IN (SELECT Extra_Id FROM Extra_Type WHERE Extra_Name = 'penalty');
Error: 第 1983 个样本有 0 个SQL。
SELECT AVG(OUT_TYPE_Out_Id) AS Average_Players_Out FROM Wicket_Taken WHERE Innings_No = 1 AND Kind_Out = 'lbw';
Error: 第 1985 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Match  WHERE MAX(Innings_No) = 2;
Error: 第 1987 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Match  WHERE Win_Type = 'wickets';
Error: 第 1989 个样本有 0 个SQL。
Error: 第 1990 个样本有 0 个SQL。
Error: 第 1991 个样本有 0 个SQL。
SELECT COUNT(*) FROM Match WHERE Team_1 = 'Delhi Daredevils' AND Team_2 = 'Delhi Daredevils' AND MATCH_DATE LIKE '%2014%' AND Outcome_type = 'Win';
Error: 第 1993 个样本有 0 个SQL。
Error: 第 1994 个样本有 0 个SQL。
Error: 第 1995 个样本有 0 个SQL。
Error: 第 1996 个样本有 0 个SQL。
SELECT Venue_Name FROM Venue WHERE Venue_Id IN (   SELECT Venue_Id   FROM Match   WHERE Match_Id = 829768 );
SELECT team_2 FROM match WHERE win_margin = (SELECT MIN(win_margin) FROM match)
SELECT      DIVIDE(COUNT(Match_Winner = 7), COUNT(Match_Winner)) * 100 AS Percentage FROM      Match WHERE      Match_Date LIKE '2013%' AND Team_1 = 7 OR Team_2 = 7;
Error: 第 2000 个样本有 0 个SQL。
Error: 第 2001 个样本有 0 个SQL。
SELECT COUNT(*) FROM Player WHERE DOB LIKE '1970%';
SELECT COUNT(*)  FROM Player  WHERE DOB LIKE '198%' AND Bowling_skill = 2;
SELECT COUNT(*)  FROM Match  WHERE MATCH_DATE LIKE '2008-04%';
Error: 第 2005 个样本有 0 个SQL。
Error: 第 2006 个样本有 0 个SQL。
SELECT Country_id FROM City WHERE City_Name = 'East London';
SELECT SUBTRACT(2008, strftime('%Y', DOB)) AS old FROM Player WHERE Player_Name = 'SC Ganguly';
SELECT Player_Name FROM Player WHERE Batting_hand = 'Left-hand bat';
SELECT COUNT(*)  FROM Player  WHERE Country_Name = 'India';
Error: 第 2011 个样本有 0 个SQL。
SELECT Venue_Name FROM Venue WHERE City_Id IN (   SELECT City_Id   FROM City   WHERE City_Name = 'Bangalore' )
SELECT P.Player_Name FROM Player P JOIN Player_Match PM ON P.Player_Id = PM.Player_Id JOIN Match M ON PM.Match_Id = M.Match_Id JOIN Season S ON M.Season_Id = S.Season_Id WHERE S.Season_Year = 2008;
Error: 第 2014 个样本有 0 个SQL。
SELECT Role_Desc FROM Player, Rolee WHERE Player.Player_Name = 'SC Ganguly' AND Player.Player_Id = Rolee.Role_Id;
SELECT Player_Name FROM Player WHERE Player_Id IN (   SELECT Player_Id   FROM Player_Match   WHERE Role_Id IN (     SELECT Role_Id     FROM Rolee     WHERE Role_Desc = 'Keeper'   ) );
SELECT Player_Name FROM Player WHERE Player_Id IN (   SELECT Player_Id   FROM Player_Match   WHERE Team_Id = 1 );
SELECT COUNT(DISTINCT p.Player_Id) FROM Player p JOIN Player_Match pm ON p.Player_Id = pm.Player_Id JOIN Match m ON pm.Match_Id = m.Match_Id WHERE pm.Role_Id IN (SELECT r.Role_Id FROM Rolee r WHERE r.Role_Desc = 'Captain') AND m.Match_Date LIKE '2008%';
SELECT DISTINCT Team_Id, Team_Name FROM Player, Season, Match, Player_Match WHERE Player.Player_Name = 'SC Ganguly' AND Player.Player_Id = Player_Match.Player_Id AND Player_Match.Match_Id = Match.Match_Id AND Match.Season_Id = Season.Season_Id AND Season.Season_Year = 2008;
SELECT Win_Type FROM Match WHERE Match_Id = 336000;
Error: 第 2021 个样本有 0 个SQL。
SELECT COUNT(*) FROM Player WHERE Bowling_skill = 'Left-arm fast';
SELECT Outcome_Type FROM Outcome WHERE Outcome_Id = (SELECT Outcome_Id FROM Match WHERE Match_Id = 392195);
SELECT P.Player_Name, C.City_Name FROM Player P JOIN City C ON P.Country_Name = C.Country_id WHERE P.DOB = (SELECT MIN(DOB) FROM Player);
Error: 第 2025 个样本有 0 个SQL。
SELECT COUNT(DISTINCT Season_Id) FROM Match WHERE Team_1 = 'Pune Warriors' OR Team_2 = 'Pune Warriors';
Error: 第 2027 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Match  WHERE Man_of_the_Match = 'SC Ganguly';
Error: 第 2029 个样本有 0 个SQL。
SELECT Team_Name FROM Match WHERE Match_Id = 335993 AND Win_Type = (SELECT Win_Id FROM Win_By WHERE Win_Type = 'Wickets');
Error: 第 2031 个样本有 0 个SQL。
Error: 第 2032 个样本有 0 个SQL。
Error: 第 2033 个样本有 0 个SQL。
SELECT DIVIDE(COUNT(Country_Name = 'India'), COUNT(Player_Id)) FROM Player WHERE strftime('%Y', DOB) BETWEEN '1975' AND '1985' AND Country_Name = 'India';
SELECT (COUNT(Batting_hand = 'Left-hand bat') * 100.0) / COUNT(Player_Id) AS Percentage_Left_Hand_Batting_Style FROM Player;
SELECT DIVIDE(COUNT(Win_By.Win_Id), COUNT(Win_By.Win_Id)) * 100 AS Percentage_of_matches_won_by_runs FROM Win_By WHERE Win_By.Win_Id = 1;
SELECT COUNT(*) FROM Match WHERE Win_Margin = 7;
SELECT COUNT(*) FROM Player WHERE strftime('%Y',DOB) BETWEEN '1970' AND '1975';
SELECT Team_1 AS Winning_Team FROM Match WHERE Match_Date = '2009-04-26' AND Win_Margin = 6;
Error: 第 2040 个样本有 0 个SQL。
Error: 第 2041 个样本有 0 个SQL。
SELECT COUNT(*) FROM Player WHERE Country_Name = 'Sri Lanka';
SELECT Player_Name FROM Player WHERE Player_Id IN (   SELECT Player_Id   FROM Player_Match   WHERE Role_Id IN (     SELECT Role_Id     FROM Rolee     WHERE Role_Desc = 'captain'   ) );
Error: 第 2044 个样本有 0 个SQL。
SELECT      DIVIDE(COUNT(Win_Type = 'wickets'), COUNT(Win_Type)) * 100 AS Percentage_Won_By_Wickets FROM      Match WHERE      Team_1 = 'Delhi Daredevils' AND      Match_Date LIKE '%2009%' AND      Win_Type = 'wickets';
SELECT groupName FROM torrents WHERE artist = 'Ron Hunt' AND groupYear = 1979 AND releaseType = 'single' AND totalSnatched = 239;
SELECT COUNT(*)  FROM torrents  WHERE artist = 'blowfly' AND groupYear = 1980 AND releaseType = 'album' AND totalSnatched > 0;
SELECT t.tag FROM tags t JOIN torrents tr ON t.id = tr.id WHERE tr.releaseType = 'album' ORDER BY tr.totalSnatched DESC LIMIT 1;
SELECT t.tag, COUNT(t.id) as total_downloads FROM tags t JOIN torrents tr ON t.id = tr.groupId GROUP BY t.tag ORDER BY total_downloads DESC LIMIT 5;
SELECT t.groupName FROM torrents t JOIN tags tg ON t.id = tg.id WHERE tg.tag = 'funk' AND t.releaseType = 'single' ORDER BY t.groupYear ASC LIMIT 1;
SELECT groupName  FROM torrents  WHERE releaseType = 'ep';
SELECT t.tag FROM tags t JOIN torrents tr ON t.id = tr.id WHERE tr.releaseType = 'album' AND tr.releaseType = 'live' ORDER BY tr.totalSnatched ASC LIMIT 5;
SELECT t.tag, t.id, t.index, tr.artist FROM tags t JOIN torrents tr ON t.id = tr.groupId WHERE tr.releaseType = 'single' ORDER BY tr.totalSnatched DESC LIMIT 1;
SELECT COUNT(*) FROM tags WHERE tag = '1980s'
SELECT COUNT(*)  FROM torrents  WHERE groupName = 'city funk';
SELECT groupName  FROM torrents  WHERE totalSnatched > 20000;
SELECT t.tag FROM tags t JOIN torrents tr ON t.id = tr.id WHERE tr.groupName = 'sugarhill gang';
SELECT COUNT(t.id)  FROM tags t  JOIN torrents tr ON t.id = tr.id  WHERE tr.groupName = 'city funk';
SELECT t.groupName  FROM torrents t  JOIN tags tg ON t.id = tg.id  WHERE tg.tag = '1980s';
SELECT t.groupName FROM torrents t JOIN tags tg ON t.id = tg.id WHERE tg.tag = '1980s' ORDER BY t.totalSnatched DESC LIMIT 1;
SELECT COUNT(*)  FROM torrents  JOIN tags ON torrents.id = tags.id  WHERE artist = 'michael jackson' AND tags.tag = 'pop';
SELECT COUNT(*) FROM torrents WHERE groupYear = 2000 AND releaseType = 'album' AND EXISTS (   SELECT 1   FROM tags   WHERE id = torrents.id AND tag = 'pop' );
SELECT AVG(t.totalSnatched)  FROM torrents t  JOIN tags tg ON t.id = tg.id  WHERE tg.tag = '1980s';
SELECT groupName AS title FROM torrents ORDER BY totalSnatched DESC LIMIT 3;
SELECT t.groupName AS title, t.artist FROM torrents t WHERE t.groupYear = 2012 AND t.releaseType = 'single' ORDER BY t.totalSnatched DESC LIMIT 1;
SELECT COUNT(*)  FROM torrents  WHERE artist = '50 cent' AND groupYear BETWEEN 2010 AND 2015 AND (releaseType = 'album' OR releaseType = 'single');
SELECT    (SELECT       groupYear     FROM       torrents     WHERE       artist = '2Pac'       AND releaseType = 'album'     ORDER BY       groupYear     LIMIT 1 OFFSET 1) - (SELECT groupYear FROM torrents WHERE artist = '2Pac' AND releaseType = 'album' LIMIT 1);
SELECT AVG(t.totalSnatched)  FROM torrents t  WHERE t.artist = '2Pac' AND t.releaseType = 'single' AND t.groupYear BETWEEN 2001 AND 2013;
SELECT t.groupName AS title, t.groupYear AS release_year, t.tag FROM (   SELECT t.groupName, t.groupYear, t.totalSnatched, tg.tag   FROM torrents t   JOIN tags tg ON t.id = tg.id   WHERE t.releaseType = 'live album' ) AS t WHERE t.totalSnatched = (SELECT MAX(totalSnatched) FROM torrents)
SELECT DISTINCT artist FROM torrents WHERE releaseType = 'bootleg' AND groupYear = 2016 GROUP BY artist HAVING COUNT(releaseType = 'bootleg') >= 2;
SELECT artist FROM torrents WHERE releaseType = 'single' AND groupYear BETWEEN 1980 AND 1982;
SELECT groupName FROM torrents WHERE releaseType = 'single' AND totalSnatched >= 20 AND groupId BETWEEN 10 AND 20;
SELECT artist  FROM torrents  WHERE groupYear BETWEEN 1980 AND 1982  AND id IN (SELECT id FROM tags WHERE tag = 'disco');
SELECT DISTINCT artist FROM torrents JOIN tags ON torrents.id = tags.id WHERE totalSnatched <= 100 AND groupYear = 1980 AND tag = 'funk';
SELECT artist  FROM torrents  WHERE releaseType = 'single'  AND EXISTS (SELECT 1 FROM tags WHERE tag = 'soul' AND torrents.id = tags.id)  GROUP BY artist  ORDER BY COUNT(releaseType = 'single') DESC  LIMIT 1;
SELECT artist  FROM torrents  WHERE id BETWEEN 10 AND 30  AND groupYear = 1980  AND EXISTS (SELECT 1              FROM tags              WHERE torrents.id = tags.id              AND tag = 'funk');
SELECT groupName  FROM torrents  WHERE releaseType = 'album' AND groupYear >= 1982 AND id IN (   SELECT torrents.id    FROM torrents    JOIN tags ON torrents.id = tags.id    WHERE tag = 'jazz'    GROUP BY torrents.id    ORDER BY totalSnatched DESC    LIMIT 1 )
SELECT t.tag  FROM tags t  JOIN torrents tr ON t.id = tr.groupId  WHERE tr.artist = 16;
SELECT t.id, t.groupName, t.totalSnatched FROM torrents t JOIN tags tg ON t.id = tg.id WHERE tg.tag = 'new.york' AND t.id BETWEEN 10 AND 50 ORDER BY t.totalSnatched DESC LIMIT 1;
SELECT DISTINCT artist FROM torrents WHERE releaseType IN ('album', 'mixtape') AND groupYear BETWEEN 1980 AND 1985 AND EXISTS (   SELECT 1   FROM tags   WHERE id = torrents.id AND tag = 'dance' );
SELECT COUNT(*) FROM torrents JOIN tags ON torrents.id = tags.id WHERE releaseType = 'single' AND groupYear BETWEEN 1979 AND 1981 AND tag = 'soul';
SELECT COUNT(*)  FROM torrents  WHERE releaseType = 'single' AND groupYear = 1979;
SELECT COUNT(*)  FROM torrents  WHERE artist = 'sugar daddy' AND releaseType = 'single' AND groupYear = 1980;
SELECT COUNT(*)  FROM torrents  WHERE releaseType = 'album' AND groupYear = 2004 AND id IN (   SELECT id    FROM torrents    JOIN tags ON torrents.id = tags.id    WHERE tag = 'christmas' );
Error: 第 2085 个样本有 0 个SQL。
SELECT t.groupName, t.groupYear, t.releaseType, t.id, tg.tag FROM torrents t JOIN tags tg ON t.id = tg.id WHERE t.artist = 'Millie Jackson' AND t.releaseType = 'album' AND t.groupYear = 1980;
SELECT t.groupName  FROM torrents t  JOIN tags tg ON t.id = tg.id  WHERE tg.tag = 'jazz' AND t.groupYear = 2005;
SELECT artist, MAX(COUNT(id)) AS max_disco_releases FROM torrents JOIN tags ON torrents.id = tags.id WHERE groupYear BETWEEN 1980 AND 2000 AND tags.tag = 'disco' GROUP BY artist ORDER BY max_disco_releases DESC;
SELECT DISTINCT artist FROM torrents JOIN tags ON torrents.id = tags.id WHERE releaseType = 'single' AND tag = '1970s';
SELECT DIVIDE(COUNT(releaseType = 'album' where tag = 'united.states' and groupYear between 1979 and 1982), COUNT(releaseType = 'album' where groupYear between 1979 and 1982)) as percentage
SELECT COUNT(*) FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode WHERE c.OtherGroups = 'HIPC' AND c.LendingCategory = 'IDA';
Error: 第 2092 个样本有 0 个SQL。
SELECT cn.Description FROM CountryNotes cn JOIN Series s ON cn.Seriescode = s.SeriesCode WHERE cn.Countrycode IN (   SELECT c.CountryCode   FROM Country c   WHERE c.ShortName = 'Aruba' ) AND s.SeriesCode = 'SM.POP.TOTL';
SELECT c.ShortName FROM Country c JOIN Region r ON c.Region = r.RegionName WHERE r.RegionName = 'Latin America & Caribbean' JOIN CountryNotes cn ON c.CountryCode = cn.Countrycode JOIN Series s ON cn.Seriescode = s.SeriesCode WHERE s.SeriesCode = 'SM.POP.TOTL';
Error: 第 2095 个样本有 0 个SQL。
SELECT c.ShortName, cn.Description FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode JOIN Series s ON i.IndicatorCode = s.SeriesCode JOIN CountryNotes cn ON s.SeriesCode = cn.Seriescode AND cn.Countrycode = i.CountryCode WHERE s.SeriesCode = 'SM.POP.TOTL' AND c.LendingCategory = 'IDA';
SELECT COUNT(*) FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE c.IncomeGroup = 'Low income' AND c.LendingCategory = 'International Development Associations' AND s.SeriesCode = 'SM.POP.TOTL' AND EXISTS (   SELECT 1   FROM CountryNotes cn   WHERE cn.Countrycode = c.CountryCode   AND cn.Seriescode = s.SeriesCode );
SELECT COUNT(*) FROM Country JOIN Indicators ON Country.CountryCode = Indicators.CountryCode WHERE IncomeGroup = 'High' AND CurrencyUnit = 'Euro' AND EXISTS (   SELECT 1   FROM Indicators   JOIN Series ON Indicators.SeriesCode = Series.SeriesCode   WHERE Indicators.IndicatorCode = Series.SeriesCode   AND Series.SeriesCode = 'SP.DYN.AMRT.FE'   AND EXISTS (     SELECT 1     FROM CountryNotes     WHERE CountryNotes.Countrycode = Country.CountryCode     AND CountryNotes.Seriescode = Series.SeriesCode     AND CountryNotes.Description IS NOT NULL   ) );
Error: 第 2099 个样本有 0 个SQL。
Error: 第 2100 个样本有 0 个SQL。
SELECT Year FROM Footnotes WHERE Countrycode IN (   SELECT CountryCode   FROM Country   WHERE ShortName = 'Aruba' ) AND Seriescode IN (   SELECT SeriesCode   FROM Series   WHERE IndicatorName IN (     SELECT IndicatorName     FROM Indicators     WHERE CountryName = (       SELECT LongName       FROM Country       WHERE ShortName = 'Aruba'     )   )   AND SeriesCode = 'AG.LND.FRST.K2' )
Error: 第 2102 个样本有 0 个SQL。
Error: 第 2103 个样本有 0 个SQL。
SELECT MAX(YEAR) - MIN(YEAR) + 1 AS ConsecutiveYears FROM Footnotes f JOIN Country c ON f.Countrycode = c.CountryCode WHERE c.ShortName = 'Aruba' AND f.Seriescode IN (   SELECT s.SeriesCode   FROM Series s   WHERE s.Topic = 'BX'   AND s.IndicatorName = 'KLT.DINV.CD.WD' ) GROUP BY f.Countrycode, f.Seriescode ORDER BY MAX(YEAR) - MIN(YEAR) + 1 DESC LIMIT 1;
SELECT AVG(value)  FROM Indicators  WHERE CountryCode IN (   SELECT CountryCode    FROM Country    WHERE Alpha2Code = '1A' )  AND IndicatorName LIKE 'adolescent fertility rate%';
Error: 第 2106 个样本有 0 个SQL。
Error: 第 2107 个样本有 0 个SQL。
Error: 第 2108 个样本有 0 个SQL。
SELECT AVG(DIVIDE(SUM(i.Value), SUM(i.IndicatorName = 'Adjusted net enrolment rate, primary, both sexes (%)'))) AS Average_Adjusted_Net_Enrolment_Rate FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE c.LongName = 'Algeria' AND i.Year BETWEEN 1975 AND 1980;
SELECT s.IndicatorName, s.AggregationMethod FROM Series s WHERE s.Topic = 'Economic Policy & Debt' AND s.IndicatorName LIKE '%Balance of payments: Capital & financial account%';
SELECT S.SeriesCode, C.Alpha2Code FROM Series S JOIN Indicators I ON S.SeriesCode = I.IndicatorCode WHERE S.Topic = 'Environment: Emissions' AND S.LicenseType = 'Restricted';
Error: 第 2112 个样本有 0 个SQL。
SELECT c.LongName, AVG(i.Value) AS AverageValue, MAX(i.Year) AS HighestValueYear, MAX(i.Value) AS HighestValue FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE c.Region IN ('Latin America', 'Caribbean') AND i.IndicatorName = 'CO2 emissions from gaseous fuel consumption (kt)' AND i.Year > 1965 GROUP BY c.LongName ORDER BY AverageValue DESC LIMIT 3;
Error: 第 2114 个样本有 0 个SQL。
SELECT Description FROM Footnotes WHERE Countrycode IN (   SELECT CountryCode   FROM Country   WHERE ShortName = 'Albania' ) AND Year = 1981;
SELECT f.Description FROM Footnotes f JOIN Country c ON f.Countrycode = c.CountryCode WHERE f.Seriescode = 'SH.DTH.IMRT' AND f.Year = 1984 AND c.CountryName = 'The Bahamas';
Error: 第 2117 个样本有 0 个SQL。
SELECT C.Wb2Code, C.LendingCategory FROM Country C JOIN CountryNotes CN ON C.CountryCode = CN.Countrycode WHERE CN.Description = 'Data source : Human Mortality Database by University of California, Berkeley, and Max Planck Institute for Demographic Research.';
Error: 第 2119 个样本有 0 个SQL。
Error: 第 2120 个样本有 0 个SQL。
Error: 第 2121 个样本有 0 个SQL。
SELECT    c.LongName AS CountryName,    c.SourceOfMostRecentIncomeAndExpenditureData AS Source,    'Country' AS TableName FROM    Country c WHERE    c.Region = 'South Asia'    AND c.IncomeGroup = 'Low income';
SELECT s.Source FROM Series s JOIN Indicators i ON s.SeriesCode = i.IndicatorCode JOIN Country c ON i.CountryCode = c.CountryCode WHERE c.Region = 'Latin America & Caribbean' AND i.IndicatorName = 'Out-of-school children of primary school age, both sexes (number)';
Error: 第 2124 个样本有 0 个SQL。
SELECT S.Source FROM Series S JOIN Indicators I ON S.SeriesCode = I.IndicatorCode JOIN Country C ON I.CountryCode = C.CountryCode WHERE C.Region = 'North America' AND S.Topic = 'Education' AND I.IndicatorName = 'Out-of-school children of primary school age, both sexes (number)';
SELECT c.LongName, i.Value FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE i.IndicatorName = 'GDP growth (annual %)' AND i.Year = 2014 AND c.LatestTradeData = 2013 ORDER BY i.Value ASC;
Error: 第 2127 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Country  WHERE Region = 'South Asia' AND IncomeGroup = 'Low income';
SELECT c.ShortName FROM Country c WHERE c.CountryCode IN (   SELECT i.CountryCode   FROM Indicators i   WHERE i.IndicatorName = 'LatestTradeData' AND i.Year > 2010 ) ORDER BY c.ShortName;
SELECT      DIVIDE(COUNT(CountryCode), COUNT(CountryCode)) as percentage FROM      Country WHERE      Region = 'Sub-Saharan Africa' AND SystemOfTrade = 'Special trade system';
SELECT AVG(SUM_VALUE)  FROM      (SELECT SUM(Value) AS SUM_VALUE       FROM Indicators       WHERE CountryCode IN           (SELECT CountryCode            FROM Country            WHERE Region = 'European & Central Asian')       AND IndicatorName = 'Arms imports (SIPRI trend indicator values')       GROUP BY CountryCode) AS temp;
Error: 第 2132 个样本有 0 个SQL。
SELECT MIN(Value)  FROM Indicators  WHERE IndicatorName = 'International migrant stock, total' AND CountryCode IN (   SELECT CountryCode    FROM Country    WHERE OtherGroups LIKE '%HIPC%' );
Error: 第 2134 个样本有 0 个SQL。
SELECT COUNT(*) FROM Indicators JOIN Series ON Indicators.IndicatorCode = Series.SeriesCode WHERE Series.AggregationMethod = 'Sum' AND Indicators.Year IN ('YR2001', 'YR2002', 'YR2003') AND Series.Periodicity = 'Annual';
SELECT s.SeriesCode FROM Series s JOIN Source src ON s.Source = src.Source WHERE src.Source LIKE '%International Monetary Fund%' AND s.SeriesCode LIKE '%Balance of Payments Statistics Yearbook%' AND s.SeriesCode LIKE '%data files%' AND '2005' IN (SELECT Year FROM SeriesNotes WHERE Seriescode = s.SeriesCode);
SELECT DIVIDE(COUNT(CountryCode)                FROM Indicators                WHERE IndicatorName = 'Life expectancy at birth, female (years)'                  AND Value > 50                  AND Region = 'South Asia'),         COUNT(CountryCode)         FROM Indicators         WHERE Region = 'South Asia')         AS percentage;
Error: 第 2138 个样本有 0 个SQL。
Error: 第 2139 个样本有 0 个SQL。
SELECT c.CountryName FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE i.IndicatorName = 'Merchandise imports by the reporting economy (current US$)' ORDER BY i.Value DESC LIMIT 1;
SELECT i.IndicatorName FROM Indicators i JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE s.Periodicity = 'Annual' AND i.Year = '1965' AND i.Value > 100;
Error: 第 2142 个样本有 0 个SQL。
Error: 第 2143 个样本有 0 个SQL。
SELECT i.IndicatorName FROM Indicators i JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE s.AggregationMethod = 'Weighted average' ORDER BY i.Value ASC LIMIT 1;
SELECT s.IndicatorName FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE c.LongName = 'Sudan' AND i.Year = 1961 AND s.Periodicity = 'Annual';
SELECT CountryName FROM Indicators WHERE Year BETWEEN '1960' AND '1965'   AND CountryCode IN (     SELECT CountryCode     FROM Series     WHERE Topic = 'Health'       AND IndicatorName = 'Population: Structure'   ) ORDER BY Value ASC LIMIT 1;
Error: 第 2147 个样本有 0 个SQL。
Error: 第 2148 个样本有 0 个SQL。
SELECT c.LongName, c.TableName FROM Country c WHERE c.SnaPriceValuation = '2008';
SELECT S.SeriesCode FROM Country C JOIN Series S ON C.CountryCode = S.SeriesCode WHERE C.CurrencyUnit = 'EUR';
Error: 第 2151 个样本有 0 个SQL。
SELECT s.SeriesCode FROM Country c JOIN Series s ON c.CountryCode = s.SeriesCode WHERE c.CurrencyUnit = 'Hong Kong dollar';
SELECT TableName FROM Country WHERE CountryCode IN (   SELECT CountryCode   FROM Indicators   WHERE IndicatorCode IN (     SELECT SeriesCode     FROM Series     WHERE SeriesCode = 'SP.DYN.TO65.MA.ZS'   ) )
SELECT c.LongName FROM Country c WHERE c.IncomeGroup = 'Low income';
SELECT s.SeriesCode, c.CountryCode FROM Country c JOIN Series s ON c.CountryCode = s.CountryCode WHERE c.Region = 'Latin America & Caribbean' AND c.IncomeGroup = 'Low income';
SELECT S.SeriesCode FROM Country C JOIN Series S ON C.CountryCode = S.SeriesCode WHERE C.CurrencyUnit = 'AUD' AND C.IncomeGroup = 'Low middle income';
SELECT      c.LongName AS CountryName FROM      Country c WHERE      c.IncomeGroup = 'Upper middle income' ORDER BY      c.NationalAccountsBaseYear ASC;  SELECT      c.LongName AS CountryName FROM      Country c WHERE      c.NationalAccountsBaseYear = (         SELECT              MIN(NationalAccountsBaseYear)         FROM              Country     );  SELECT      c.Region AS Region FROM      Country c WHERE      c.NationalAccountsBaseYear = (         SELECT              MIN(NationalAccountsBaseYear)         FROM              Country     );
SELECT c.CountryCode, c.LongName FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode WHERE c.CurrencyUnit = 'EUR' AND c.IncomeGroup = 'High income';
SELECT      c.TableName,      c.CurrencyUnit FROM      Country c WHERE      EXISTS (         SELECT 1          FROM Series s          WHERE s.SeriesCode = 'FP.CPI.TOTL'          AND s.CountryCode = c.CountryCode     );
SELECT i.CountryName, s.IndicatorCode FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE c.IncomeGroup = 'High income: non-OECD';
Error: 第 2161 个样本有 0 个SQL。
SELECT CountryCode, ShortName FROM Country LIMIT 10;
SELECT Alpha2Code FROM Country WHERE ShortName LIKE 'A%';
SELECT TableName FROM Country WHERE CurrencyUnit = 'Euro';
SELECT LongName FROM Country WHERE SpecialNotes IS NULL;
Error: 第 2166 个样本有 0 个SQL。
Error: 第 2167 个样本有 0 个SQL。
SELECT c.CountryCode FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode WHERE c.IncomeGroup = 'Low income' AND i.IndicatorCode IN (   SELECT s.SeriesCode   FROM Series s   WHERE s.SeriesCode = 'DT.DOD.DECT.CD' );
Error: 第 2169 个样本有 0 个SQL。
SELECT cn.Description, s.SeriesCode FROM CountryNotes cn JOIN Series s ON cn.SeriesCode = s.SeriesCode JOIN Indicators i ON cn.CountryCode = i.CountryCode WHERE cn.CountryCode = (SELECT CountryCode FROM Country WHERE ShortName = 'Benin') AND i.Year = 'YR2005';
SELECT Description FROM Footnotes WHERE Countrycode = (SELECT CountryCode FROM Country WHERE ShortName = 'Finland') AND Year = 'YR2000';
SELECT I.Year FROM Indicators I JOIN Series S ON I.IndicatorCode = S.SeriesCode WHERE S.IndicatorName = 'Air transport, passengers carried';
SELECT c.LongName FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode WHERE i.IndicatorName IS NOT NULL AND i.Year = '1980';
SELECT c.CurrencyUnit FROM Country c WHERE c.LongName = 'Malaysia';
SELECT c.CountryCode, c.LongName, c.Region FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE i.Value = (SELECT MAX(Value) FROM Indicators) ORDER BY i.Value DESC LIMIT 5;
SELECT c.CurrencyUnit FROM Country c JOIN CountryNotes cn ON c.CountryCode = cn.Countrycode WHERE cn.Description = 'Sources: UN Energy Statistics (2014)'
SELECT COUNT(*), cn.LongName AS CountryName FROM Footnotes f JOIN Country c ON f.Countrycode = c.CountryCode WHERE f.Year = 'YR1980' GROUP BY c.LongName;
SELECT C.CountryCode, S.SeriesCode, C.Wb2Code FROM Country C JOIN CountryNotes CN ON C.CountryCode = CN.Countrycode JOIN Series S ON CN.Seriescode = S.SeriesCode WHERE CN.Description = 'Data sources : Eurostat';
SELECT c.LongName FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE i.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND c.IncomeGroup = 'Low income' ORDER BY i.Value ASC LIMIT 1;
SELECT SUM(Value)  FROM Indicators  WHERE CountryCode IN (   SELECT CountryCode    FROM Country    WHERE IncomeGroup = 'Middle income' )  AND IndicatorName = 'urban population'  AND Year = 1960;
Error: 第 2181 个样本有 0 个SQL。
SELECT COUNT(DISTINCT CountryCode)  FROM Country  WHERE SystemOfNationalAccounts = '1993 System of National Accounts methodology';
SELECT ShortName FROM Country WHERE VitalRegistrationComplete = 'Yes';
SELECT      ShortName + LongName AS CountryName FROM      Country WHERE      LatestPopulationCensus BETWEEN '2010' AND '2012'     AND VitalRegistrationComplete = 'Yes';
Error: 第 2185 个样本有 0 个SQL。
SELECT      country1.CountryName AS Highest_Country,     country2.CountryName AS Lowest_Country,     ratio FROM (     SELECT          CountryName,          Value     FROM          Indicators     WHERE          IndicatorName = 'Number of infant deaths' AND Year = '1971'     ORDER BY          Value DESC     LIMIT 1 ) AS country1, (     SELECT          CountryName,          Value     FROM          Indicators     WHERE          IndicatorName = 'Number of infant deaths' AND Year = '1971'     ORDER BY          Value ASC     LIMIT 1 ) AS country2, (     SELECT          max(value) / min(value) AS ratio     FROM          Indicators     WHERE          IndicatorName = 'Number of infant deaths' AND Year = '1971' ) AS ratio_table;
SELECT CountryCode, ShortName FROM Country WHERE EXISTS (   SELECT 1   FROM Series   WHERE SeriesCode = 'SP.DYN.CBRT.IN'   AND Series.CountryCode = Country.CountryCode );
SELECT c.ShortName FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE s.LongDefinition LIKE '%official aid%' AND c.ShortName IN (   SELECT cn.Countrycode   FROM CountryNotes cn   WHERE cn.Description = 'Data are classified as official aid.' );
Error: 第 2189 个样本有 0 个SQL。
Error: 第 2190 个样本有 0 个SQL。
SELECT c.LongName FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE i.IndicatorName = 'Population, total' AND i.Year = '1960' AND c.IncomeGroup = 'Upper middle income' ORDER BY i.Value DESC LIMIT 1;
SELECT COUNT(DISTINCT CountryCode)  FROM Country  WHERE SystemOfNationalAccounts = '1968 System of National Accounts methodology';
SELECT c.ShortName FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE c.IncomeGroup = 'Upper middle income' AND c.Region = 'East Asia & Pacific' AND s.Topic = 'Social Protection & Labor' AND s.IndicatorName = 'Migration';
Error: 第 2194 个样本有 0 个SQL。
Error: 第 2195 个样本有 0 个SQL。
SELECT c.LongName FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode WHERE c.Region = 'Sub-Saharan Africa' AND i.IndicatorCode = 'SP.DYN.AMRT.FE';
SELECT ShortName FROM Country WHERE CurrencyUnit IN (   SELECT CurrencyUnit   FROM Country   GROUP BY CurrencyUnit   HAVING COUNT(CurrencyUnit) > 3 ) ORDER BY ShortName LIMIT 3;
SELECT LongName FROM Country WHERE Region = 'South Asia' AND IncomeGroup = 'Low income';
SELECT LongName FROM Country WHERE SystemOfTrade = 'Special trade system' LIMIT 2;
SELECT c.LongName FROM Indicators i JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE s.IndicatorName = 'CO2 emissions from transport (% of total fuel combustion)' ORDER BY i.Value DESC LIMIT 1;
SELECT c.CountryName FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE i.IndicatorName = 'Arable land (% of land area)' ORDER BY i.Value LIMIT 1;
SELECT s.Topic FROM Series s WHERE s.LicenseType = 'Restricted';
SELECT CountryCode FROM Country WHERE IncomeGroup = 'Upper middle income' AND ExternalDebtReportingStatus = 'Preliminary';
SELECT (COUNT(CountryCode)          WHERE Region = 'Middle East & North Africa'          AND ExternalDebtReportingStatus = 'Actual')          * 100 /          COUNT(CountryCode)          WHERE Region = 'Middle East & North Africa';
SELECT    government_accounting_concept,    COUNT(*) as count FROM    Country c   JOIN Indicators i ON c.CountryCode = i.CountryCode WHERE    c.ExternalDebtReportingStatus = 'Actual'   AND c.GovernmentAccountingConcept IN ('Budgetary central government', 'Consolidated central government') GROUP BY    government_accounting_concept ORDER BY    count DESC;
SELECT COUNT(DISTINCT CountryCode) FROM Country WHERE Region = 'East Asia & Pacific'   AND ExternalDebtReportingStatus = 'Estimate';
SELECT (COUNT(CountryCode)          WHERE IncomeGroup = 'Low income'          AND Region = 'Sub-Saharan Africa') * 100 /         (COUNT(CountryCode)          WHERE Region = 'Sub-Saharan Africa') AS proportion
SELECT MAX(Value)  FROM Indicators  WHERE IndicatorName = 'Agricultural land (% of land area)'    AND CountryCode = (SELECT CountryCode FROM Country WHERE LongName = 'Republic of Benin')    AND Year BETWEEN '1961' AND '1980';
SELECT c.LongName FROM Country c JOIN CountryNotes cn ON c.CountryCode = cn.Countrycode JOIN Series s ON cn.Seriescode = s.SeriesCode WHERE s.SeriesCode IN (SELECT sn.Seriescode                        FROM SeriesNotes sn                        WHERE sn.Year = 2014 AND sn.Description = 'UN Energy Statistics') LIMIT 3;
SELECT Value FROM Indicators WHERE CountryName = (SELECT LongName FROM Country WHERE CountryCode = 'AU' AND LongName = 'Commonwealth of Australia') AND IndicatorName = 'Deposit interest rate (%)' AND Year = '1979';
SELECT s.SeriesCode, cn.Description FROM Country c JOIN Series s ON c.CountryCode = s.CountryCode JOIN CountryNotes cn ON c.CountryCode = cn.CountryCode AND s.SeriesCode = cn.SeriesCode WHERE c.ShortName = 'Germany';
SELECT s.Topic FROM Series s JOIN Country c ON s.SeriesCode = (SELECT s2.SeriesCode FROM Series s2 WHERE c.ShortName = 'Austria') WHERE c.ShortName = 'Austria';
SELECT s.Topic, cn.Description FROM Series s JOIN CountryNotes cn ON s.SeriesCode = cn.SeriesCode WHERE s.SeriesCode = 'SP.DYN.AMRT.MA';
SELECT COUNT(DISTINCT c.LongName)  FROM Country c  JOIN Footnotes f ON c.CountryCode = f.Countrycode  WHERE f.Description = 'Not specified';
Error: 第 2215 个样本有 0 个SQL。
SELECT (COUNT(CountryName) WHERE Year = '1961' AND Value > 50) / COUNT(CountryName) * 100 FROM Indicators WHERE Region = 'Latin America & Caribbean' AND IndicatorName = 'Agricultural land (% of land area)' AND Year = '1961';
SELECT LongName FROM Country WHERE Region = 'South Asia' AND IncomeGroup = 'Low income';
Error: 第 2218 个样本有 0 个SQL。
SELECT LongName FROM Country WHERE Region = 'Europe & Central Asia' AND CurrencyUnit = 'Danish krone';
Error: 第 2220 个样本有 0 个SQL。
SELECT LongName FROM Country WHERE LatestPopulationCensus = '2011';
SELECT i.Value FROM Indicators i WHERE i.CountryName = 'Italy'   AND i.IndicatorName = 'Agricultural land (sq. km)'   AND i.Year = '1968';
SELECT      c.LongName,      i.Year,      i.Value FROM      Indicators i JOIN      Country c ON i.CountryCode = c.CountryCode WHERE      c.Region = 'Sub-Saharan Africa' AND      i.IndicatorName = 'Out-of-school children of primary school age, female (number)' ORDER BY      i.Value DESC LIMIT 1;
SELECT s.SeriesCode FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE c.LongName = 'Islamic State of Afghanistan' AND i.Year = '1965' AND s.IndicatorName = 'Number of infant deaths';
Error: 第 2225 个样本有 0 个SQL。
Error: 第 2226 个样本有 0 个SQL。
SELECT LendingCategory FROM Indicators WHERE CountryCode IN (   SELECT CountryCode   FROM Indicators   WHERE IndicatorName = 'Cereal production (metric tons)'   AND Year = 1966   AND Value = 6140000 )
SELECT C.LongName, R.Region FROM Indicators I JOIN Country C ON I.CountryCode = C.CountryCode WHERE I.IndicatorName = 'Population in largest city' AND I.Year BETWEEN '1960' AND '1979' GROUP BY C.LongName, R.Region ORDER BY MAX(I.Value) DESC LIMIT 1;
Error: 第 2229 个样本有 0 个SQL。
SELECT c.LongName, i.Value FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE i.IndicatorName LIKE 'Land area (sq. km)' AND i.Year BETWEEN 1961 AND 1979 AND i.Year IN (   SELECT Year   FROM Indicators   WHERE IndicatorName LIKE 'Land area (sq. km)'   GROUP BY Year   HAVING COUNT(DISTINCT CountryCode) = 1 ) ORDER BY i.Value ASC LIMIT 1;
SELECT      AVG(i.Value) AS Average_Passengers_Carried FROM      Indicators i WHERE      i.CountryName = 'Bulgaria'     AND i.IndicatorName = 'Air transport, passengers carried'     AND i.Year BETWEEN 1970 AND 1980 JOIN      Country c ON i.CountryCode = c.CountryCode SELECT      c.SystemOfTrade FROM      Country c WHERE      c.CountryName = 'Bulgaria';
Error: 第 2232 个样本有 0 个SQL。
SELECT COUNT(DISTINCT CountryCode) FROM Country WHERE Region = 'North America' AND VitalRegistrationComplete = 'Yes';
SELECT DISTINCT Year FROM Indicators JOIN Series ON Indicators.IndicatorCode = Series.SeriesCode WHERE CountryCode IN (   SELECT CountryCode   FROM Country   WHERE Alpha2Code = '1A' ) AND IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)';
Error: 第 2235 个样本有 0 个SQL。
Error: 第 2236 个样本有 0 个SQL。
SELECT c.SpecialNotes FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE i.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND i.Year = '1960' ORDER BY i.Value DESC LIMIT 1;
SELECT    SUM(Value) - SUM(Value)    FROM Indicators    WHERE CountryCode IN (     SELECT CountryCode      FROM Country      WHERE Alpha2Code = '1A'   )    AND IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'    AND Year IN (1961, 1960);
Error: 第 2239 个样本有 0 个SQL。
Error: 第 2240 个样本有 0 个SQL。
SELECT C.ShortName FROM Country C JOIN Indicators I ON C.CountryCode = I.CountryCode WHERE I.IndicatorCode = (SELECT S.SeriesCode FROM Series S WHERE S.SeriesCode = 'BX.KLT.DINV.CD.WD') AND EXISTS (SELECT 1 FROM CountryNotes CN WHERE CN.CountryCode = C.CountryCode AND CN.SeriesCode = S.SeriesCode)
SELECT r.Region FROM Indicators i JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE i.IndicatorName = 'Inflation, consumer prices (annual %)' JOIN Country c ON i.CountryCode = c.CountryCode JOIN CountryNotes cn ON c.CountryCode = cn.CountryCode WHERE cn.Description IS NOT NULL;
SELECT COUNT(DISTINCT c.CountryCode) FROM Country c JOIN Indicators i ON c.CountryCode = i.CountryCode JOIN Series s ON i.IndicatorCode = s.SeriesCode WHERE s.IndicatorName = 'Stocks traded, turnover ratio of domestic shares (%)' AND EXISTS (SELECT 1 FROM CountryNotes cn WHERE cn.Countrycode = c.CountryCode AND cn.Seriescode = s.SeriesCode)
Error: 第 2244 个样本有 0 个SQL。
Error: 第 2245 个样本有 0 个SQL。
SELECT (SUM(I.Value) WHERE I.Year = 1961 - SUM(I.Value) WHERE I.Year = 1960) / SUM(I.Value) WHERE I.Year = 1960 * 100 FROM Indicators I JOIN Series S ON I.IndicatorCode = S.SeriesCode WHERE I.CountryCode IN (   SELECT C.CountryCode   FROM Country C   WHERE C.Alpha2Code = '1A' ) AND S.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)';
SELECT AVG(i.Value) FROM Indicators i JOIN Country c ON i.CountryCode = c.CountryCode WHERE c.Alpha2Code = '1A' AND i.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)';
Error: 第 2248 个样本有 0 个SQL。
SELECT COUNT(*) FROM users WHERE userid IN (   SELECT userid   FROM u2base   WHERE rating = 5 ) AND u_gender = 'M';
Error: 第 2250 个样本有 0 个SQL。
SELECT COUNT(*) FROM u2base JOIN movies ON u2base.movieid = movies.movieid WHERE country = 'USA' AND rating < 3;
SELECT COUNT(*)  FROM movies m  JOIN movies2directors md ON m.movieid = md.movieid  WHERE m.country = 'France'    AND md.genre = 'drama';
SELECT AVG(occupation)  FROM users  WHERE userid IN (SELECT userid FROM u2base WHERE rating <= 2);
SELECT m.movieid, m.year, u2b.rating FROM movies m JOIN u2base u2b ON m.movieid = u2b.movieid WHERE m.country = 'USA' ORDER BY u2b.rating DESC LIMIT 10;
SELECT AVG(cast_num)  FROM movies2actors  WHERE movieid IN (   SELECT movieid    FROM movies    WHERE country = 'USA' )
Error: 第 2256 个样本有 0 个SQL。
SELECT COUNT(*)  FROM actors a  JOIN movies2actors m2a ON a.actorid = m2a.actorid  JOIN u2base u2 ON m2a.movieid = u2.movieid  WHERE a.a_quality > (SELECT AVG(a_quality) FROM actors)    AND u2.rating = 5;
SELECT AVG(rating)  FROM u2base  WHERE userid IN (SELECT userid FROM users)  AND movieid IN (SELECT movieid FROM movies WHERE country='France' AND year=4);
SELECT COUNT(*) FROM movies m JOIN u2base u ON m.movieid = u.movieid JOIN movies2directors md ON m.movieid = md.movieid WHERE m.country = 'UK' AND u.rating > (SELECT AVG(rating) FROM u2base) AND m.runningtime < 2;
SELECT u.userid FROM users u JOIN u2base ub ON u.userid = ub.userid JOIN movies m ON ub.movieid = m.movieid WHERE u.u_gender = 'M' AND m.country = 'France' AND ub.rating < 3 AND m.runningtime = 2;
SELECT COUNT(*)  FROM actors a  JOIN movies2actors m2a ON a.actorid = m2a.actorid  JOIN u2base u2 ON m2a.movieid = u2.movieid  WHERE a.a_quality = (SELECT MIN(a_quality) FROM actors) AND u2.rating > 3;
SELECT u.userid FROM u2base u WHERE u.rating = 5 ORDER BY COUNT(*) DESC LIMIT 1;
SELECT m2a.actorid, m2d.genre FROM movies2actors m2a JOIN movies2directors m2d ON m2a.movieid = m2d.movieid WHERE m2d.directorid = 22397
SELECT distinct a.actorid, d.directorid FROM movies2actors a JOIN movies2directors d ON a.movieid = d.movieid WHERE d.genre = 'Action';
Error: 第 2265 个样本有 0 个SQL。
SELECT a.actorid FROM actors a JOIN movies2actors m2a ON a.actorid = m2a.actorid JOIN movies m ON m2a.movieid = m.movieid WHERE a.a_quality = 3 AND m.isEnglish = 'T' AND m.country = 'USA';
Error: 第 2267 个样本有 0 个SQL。
Error: 第 2268 个样本有 0 个SQL。
SELECT m2d.genre FROM u2base JOIN users ON u2base.userid = users.userid WHERE users.age = 18 GROUP BY m2d.genre ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 2270 个样本有 0 个SQL。
SELECT DISTINCT u.age FROM u2base JOIN users AS u ON u2base.userid = u.userid WHERE u2base.rating = 3;
SELECT country FROM directors d JOIN movies2directors md ON d.directorid = md.directorid JOIN movies m ON md.movieid = m.movieid WHERE m.genre = 'Action' AND d.country IN (   SELECT country   FROM directors   GROUP BY country   HAVING AVG(d.d_quality) > (SELECT AVG(d_quality) FROM directors) );
SELECT m.movieid FROM movies2actors ma JOIN actors a ON ma.actorid = a.actorid JOIN (   SELECT actorid, AVG(rating) AS avg_rating   FROM u2base   GROUP BY actorid   ORDER BY avg_rating DESC   LIMIT 5 ) AS top_actors ON a.actorid = top_actors.actorid JOIN movies m ON ma.movieid = m.movieid
SELECT m.movieid, m.year, m.country FROM movies m JOIN movies2directors md ON m.movieid = md.movieid WHERE m.isEnglish = 'F' AND m.country = 'UK' AND md.genre = 'Adventure' LIMIT 5;
SELECT      ROUND(         (COUNT(DISTINCT u.userid) /           (SELECT COUNT(DISTINCT u.userid)            FROM users u WHERE u.u_gender = 'F')) * 100, 2     ) AS percentage FROM      u2base u WHERE      u.rating = 2;
SELECT COUNT(u_gender = 'F') - COUNT(u_gender = 'M') FROM u2base JOIN users ON u2base.userid = users.userid JOIN movies2directors ON u2base.movieid = movies2directors.movieid WHERE movies2directors.genre = 'Horror';
Error: 第 2277 个样本有 0 个SQL。
SELECT COUNT(*)  FROM movies m  JOIN movies2directors md ON m.movieid = md.movieid  JOIN movies md2 ON m.movieid = md2.movieid  WHERE m.country = 'USA' AND md.genre = 'Action' AND m.isEnglish = 'F';
SELECT COUNT(*)  FROM u2base  WHERE userid IN (   SELECT userid    FROM users    WHERE u_gender = 'M' AND age <= 18 )  ORDER BY rating DESC  LIMIT 1;
Error: 第 2280 个样本有 0 个SQL。
SELECT COUNT(*) FROM u2base AS u JOIN movies AS m ON u.movieid = m.movieid WHERE m.country = 'UK' AND m.movieid IN (   SELECT movieid   FROM u2base   WHERE rating = (     SELECT MAX(rating)     FROM u2base   )   AND movieid NOT IN (     SELECT movieid     FROM movies     WHERE isEnglish = 0   ) );
SELECT m.movieid FROM movies m WHERE m.year = 4 AND m.movieid NOT IN (   SELECT u2b.movieid   FROM u2base u2b   GROUP BY u2b.movieid   HAVING AVG(u2b.rating) = 1 )
SELECT COUNT(*) FROM u2base WHERE u2base.userid IN (   SELECT u.userid   FROM users u   JOIN movies m ON u.userid = (SELECT userid FROM u2base WHERE movieid = m.movieid AND rating = 1)   WHERE m.isEnglish = 'T' AND m.year = 1 )
Error: 第 2284 个样本有 0 个SQL。
SELECT COUNT(DISTINCT m2d.directorid) FROM movies2directors m2d JOIN directors d ON m2d.directorid = d.directorid WHERE d.d_quality = 4 AND m2d.genre = 'Action';
Error: 第 2286 个样本有 0 个SQL。
SELECT COUNT(DISTINCT m.movieid) FROM movies m JOIN movies2actors ma ON m.movieid = ma.movieid JOIN actors a ON ma.actorid = a.actorid WHERE m.isEnglish = 'T' AND a.a_gender = 'M' AND a.a_quality = (SELECT MAX(a_quality) FROM actors);
SELECT country FROM movies WHERE movieid IN (   SELECT movieid   FROM movies2actors   WHERE actorid IN (     SELECT actorid     FROM actors     WHERE a_quality = 0   ) )
Error: 第 2289 个样本有 0 个SQL。
SELECT COUNT(*) FROM u2base WHERE movieid IN (   SELECT movieid   FROM movies2directors   WHERE directorid IN (     SELECT directorid     FROM directors     WHERE d_quality = 5   ) ) AND rating > 3.5;
SELECT m.movieid, AVG(u2base.rating) AS avg_rating FROM movies m JOIN movies2directors md ON m.movieid = md.movieid JOIN movies2actors ma ON m.movieid = ma.movieid JOIN u2base u ON m.movieid = u.movieid WHERE m.country = 'USA' AND m.year > 1990 AND m.isEnglish = 1 AND md.genre = 'adventure' GROUP BY m.movieid ORDER BY avg_rating DESC LIMIT 1;
Error: 第 2292 个样本有 0 个SQL。
Error: 第 2293 个样本有 0 个SQL。
SELECT u2base.userid, u2base.rating FROM u2base JOIN movies2actors ON u2base.movieid = movies2actors.movieid JOIN actors ON movies2actors.actorid = actors.actorid WHERE movies2actors.movieid IN (   SELECT movies2directors.movieid   FROM movies2directors   WHERE movies2directors.directorid IN (     SELECT directors.directorid     FROM directors     WHERE directors.d_quality > 7   ) )
SELECT d.directorid, d.d_quality FROM directors d JOIN (   SELECT directorid, COUNT(*) as num_movies   FROM movies2directors   GROUP BY directorid   ORDER BY num_movies DESC ) m ON d.directorid = m.directorid WHERE d.d_quality = 5;
SELECT COUNT(*)  FROM u2base  WHERE EXISTS (SELECT 1                FROM movies2directors                WHERE movies2directors.movieid = u2base.movieid                AND movies2directors.genre = 'drama')  AND u2base.rating = 3;
SELECT COUNT(*) FROM u2base WHERE rating = 5 AND EXISTS (   SELECT 1   FROM users   WHERE users.userid = u2base.userid   AND users.age BETWEEN 25 AND 35 );
SELECT m.movieid, m.year, m.isEnglish, m.country, m.runningtime FROM movies m JOIN movies2directors md ON m.movieid = md.movieid JOIN directors d ON md.directorid = d.directorid WHERE d.genre = 'Horror' JOIN u2base ub ON m.movieid = ub.movieid WHERE ub.rating = 1;
Error: 第 2299 个样本有 0 个SQL。
SELECT u.userid, u.age FROM u2base AS u WHERE u.movieid = 1695219;
SELECT genre FROM movies2directors WHERE EXISTS (   SELECT 1   FROM movies   WHERE movies.movieid = movies2directors.movieid   AND isEnglish = 'F' ) GROUP BY genre ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 2302 个样本有 0 个SQL。
SELECT      COUNT(DISTINCT u2base.userid) /      (SELECT COUNT(DISTINCT movies2actors.actorid)       FROM movies2actors       JOIN movies ON movies2actors.movieid = movies.movieid       WHERE movies.country = 'UK') * 100 AS percentage FROM      u2base  JOIN      movies2actors ON u2base.movieid = movies2actors.movieid  JOIN      movies ON movies2actors.movieid = movies.movieid  WHERE      movies.country = 'UK'      AND u2base.rating >= 3;
SELECT      (COUNT(*) / (SELECT COUNT(*) FROM movies2directors WHERE (avg_revenue > d_quality))) * 100 FROM      movies2directors WHERE      genre = 'Action' AND directorid IN (         SELECT              directorid         FROM              directors         WHERE              d_quality < avg_revenue     )
SELECT actorid FROM actors WHERE actorid IN (   SELECT ma.actorid   FROM movies2actors ma   JOIN movies m ON ma.movieid = m.movieid   ORDER BY m.year DESC   LIMIT 1 )
SELECT a.actorid FROM movies m JOIN movies2actors ma ON m.movieid = ma.movieid JOIN actors a ON ma.actorid = a.actorid WHERE m.isEnglish = 'T' AND m.runningtime = 2;
Error: 第 2307 个样本有 0 个SQL。
SELECT COUNT(*) FROM movies JOIN movies2actors ON movies.movieid = movies2actors.movieid JOIN actors ON movies2actors.actorid = actors.actorid WHERE movies.country = 'USA' AND movies.isEnglish = 1 AND movies2actors.cast_num > 1;
SELECT m.movieid FROM movies m WHERE m.year = (SELECT MIN(year) FROM movies) AND NOT EXISTS (   SELECT 1   FROM movies2actors ma   WHERE ma.movieid = m.movieid );
Error: 第 2310 个样本有 0 个SQL。
Error: 第 2311 个样本有 0 个SQL。
SELECT directorid  FROM directors  WHERE d_quality >= 3  GROUP BY directorid  HAVING COUNT(DISTINCT genre) >= 2;
SELECT COUNT(*) FROM movies2directors JOIN movies ON movies2directors.movieid = movies.movieid WHERE country = 'USA' AND genre = 'comedy' AND isEnglish = '1';
SELECT COUNT(*)  FROM movies  WHERE isEnglish = 1 AND (genre = 'drama' OR genre = 'action')  AND year = (SELECT MAX(year) FROM movies);
Error: 第 2315 个样本有 0 个SQL。
SELECT      (COUNT(CASE WHEN u2base.rating = 1 THEN 1 END) / COUNT(movies.movieid)) * 100 AS negative_critical_reception FROM      movies     JOIN u2base ON movies.movieid = u2base.movieid WHERE      movies.isEnglish = 1     AND movies.country = 'USA';
SELECT COUNT(DISTINCT u2base.userid)  FROM u2base  JOIN movies2directors ON u2base.movieid = movies2directors.movieid  JOIN movies ON movies2directors.movieid = movies.movieid  WHERE movies.genre = 'comedy' AND u2base.rating = 1;
SELECT d_quality, AVG(avg_revenue)  FROM directors d  JOIN movies2directors md ON d.directorid = md.directorid  JOIN u2base ub ON md.movieid = ub.movieid  GROUP BY d_quality  HAVING COUNT(ub.rating) = (SELECT MAX(rating_count) FROM (SELECT movieid, COUNT(rating) AS rating_count FROM u2base GROUP BY movieid) AS temp);
SELECT COUNT(*)  FROM u2base AS u2b  JOIN movies AS m ON u2b.movieid = m.movieid  WHERE m.country = 'France' AND u2b.rating = (SELECT MAX(rating) FROM u2base);
Error: 第 2320 个样本有 0 个SQL。
SELECT COUNT(DISTINCT u.userid) FROM users u JOIN u2base ub ON u.userid = ub.userid JOIN movies m ON ub.movieid = m.movieid WHERE u.age = 35 AND m.country = 'UK';
SELECT u.userid, u.age FROM users u JOIN u2base b ON u.userid = b.userid WHERE b.movieid = 2409051 AND b.rating = 2;
SELECT m.movieid FROM movies m JOIN u2base ub ON m.movieid = ub.movieid WHERE m.year = 1 ORDER BY COUNT(ub.movieid) DESC LIMIT 1;
SELECT m.movieid, m.year FROM movies m JOIN u2base u ON m.movieid = u.movieid WHERE m.country = 'France' GROUP BY m.movieid, m.year ORDER BY COUNT(u.rating) ASC LIMIT 1;
SELECT COUNT(DISTINCT a.actorid) FROM actors a JOIN movies2actors m2a ON a.actorid = m2a.actorid JOIN movies m ON m2a.movieid = m.movieid WHERE a.a_gender = 'F' AND m.country IN ('France', 'USA');
Error: 第 2326 个样本有 0 个SQL。
SELECT m.movieid, AVG(u2base.rating) as avg_rating FROM u2base JOIN movies2directors md ON u2base.movieid = md.movieid JOIN movies m ON md.movieid = m.movieid WHERE m.country = 'USA' AND m.genre = 'Crime' GROUP BY m.movieid ORDER BY avg_rating LIMIT 1;
SELECT COUNT(CASE WHEN a_gender = 'M' THEN 1 ELSE NULL END) /         COUNT(CASE WHEN a_gender = 'F' THEN 1 ELSE NULL END)  FROM actors a  JOIN movies m ON a.actorid IN (SELECT actorid FROM movies2actors WHERE movieid IN (SELECT movieid FROM movies WHERE country = 'UK'));
SELECT COUNT(*) FROM u2base, users WHERE u2base.userid = users.userid AND users.age = 35 AND users.u_gender = 'F' AND u2base.movieid = 1711133 AND u2base.rating = 3;
SELECT COUNT(DISTINCT u.userid) FROM users u JOIN u2base ub ON u.userid = ub.userid JOIN movies m ON ub.movieid = m.movieid WHERE m.country = 'UK' AND m.year = 2 AND m.runningtime = 2 AND ub.rating = 1;
Error: 第 2331 个样本有 0 个SQL。
SELECT (COUNT(*)/(SELECT COUNT(*) FROM actors WHERE a_gender = 'F' AND a_quality = 2))*100 FROM actors JOIN movies2actors ON actors.actorid = movies2actors.actorid WHERE movies2actors.movieid = 1672580 AND a_gender = 'F' AND a_quality = 2 GROUP BY a_gender, a_quality HAVING COUNT(*) = 2;
SELECT      COUNT(CASE WHEN a_gender = 'M' THEN 1 ELSE NULL END) AS worst_men,     COUNT(CASE WHEN a_gender != 'M' THEN 1 ELSE NULL END) AS worst_women,     (COUNT(CASE WHEN a_gender = 'M' THEN 1 ELSE NULL END) /       COUNT(CASE WHEN a_gender != 'M' THEN 1 ELSE NULL END)) AS ratio FROM      actors WHERE      a_quality = 0;
Error: 第 2334 个样本有 0 个SQL。
SELECT m2d.genre, COUNT(*) as num_movies FROM movies2directors m2d GROUP BY m2d.genre ORDER BY num_movies DESC LIMIT 1;
SELECT m2d.genre, COUNT(*) as count FROM movies2directors m2d JOIN directors d ON m2d.directorid = d.directorid WHERE d.d_quality = 0 GROUP BY m2d.genre ORDER BY count DESC;
SELECT m.movieid FROM movies m JOIN u2base u ON m.movieid = u.movieid WHERE m.isEnglish = 'F' AND m.country = 'USA' ORDER BY u.rating ASC LIMIT 1;
SELECT AVG(m.year)  FROM movies m  JOIN movies2directors md ON m.movieid = md.movieid  JOIN directors d ON md.directorid = d.directorid  WHERE d.d_quality = 4 AND d.avg_revenue = 4;
SELECT m.movieid, m.year, AVG(u2base.rating) AS avg_rating FROM u2base JOIN users ON u2base.userid = users.userid WHERE users.u_gender = 'F' AND users.occupation = 3 GROUP BY m.movieid, m.year ORDER BY avg_rating DESC;
SELECT    COUNT(DISTINCT a.actorid) AS num_female_actors,   m.country,   m.runningtime FROM    movies2actors ma   JOIN movies2actors a ON ma.movieid = a.movieid   JOIN actors ac ON a.actorid = ac.actorid   JOIN movies m ON ma.movieid = m.movieid WHERE    ac.a_gender = 'F' AND ma.movieid = 2312852 GROUP BY    m.country, m.runningtime
SELECT COUNT(*) FROM movies m JOIN movies2directors md ON m.movieid = md.movieid JOIN directors d ON md.directorid = d.directorid WHERE m.genre = 'Horror' AND d.d_quality = 0;
SELECT DISTINCT genre FROM movies2directors WHERE movieid IN (   SELECT movieid   FROM movies   WHERE isEnglish = 'T' AND country != 'USA' AND runningtime <= 120 )
SELECT m.title FROM movies m JOIN movies2directors md ON m.movieid = md.movieid JOIN movies2actors ma ON m.movieid = ma.movieid JOIN directors d ON md.directorid = d.directorid JOIN actors a ON ma.actorid = a.actorid JOIN u2base ub ON m.movieid = ub.movieid WHERE m.country = 'UK' AND m.isEnglish = 1 AND m.runningtime = 3 AND a.a_gender = 'male' AND d.d_quality = 'comedy' AND ub.userid IN (   SELECT u.userid   FROM users u   WHERE u.age BETWEEN 45 AND 50 ) AND ub.rating = (   SELECT MAX(rating)   FROM u2base   WHERE movieid IN (     SELECT movieid     FROM movies     WHERE country = 'UK' AND isEnglish = 1 AND runningtime = 3   ) )
SELECT      (COUNT(CASE WHEN isEnglish = 'T' THEN 1 END) - COUNT(CASE WHEN isEnglish = 'F' THEN 1 END)) /      (SELECT COUNT(*) FROM movies) * 100 AS percentage_difference FROM      movies WHERE      isEnglish IN ('T', 'F') AND     genre = 'crime' AND     country <> 'English' AND     year = 3;
SELECT      a_gender,      COUNT(*) AS total_actors,      SUM(CASE WHEN a_quality = 5 THEN 1 ELSE 0 END) AS high_quality_actors,      SUM(CASE WHEN a_quality = 0 THEN 1 ELSE 0 END) AS low_quality_actors FROM      actors WHERE      EXISTS (         SELECT 1          FROM movies2actors          WHERE movies2actors.actorid = actors.actorid          AND movies2actors.movieid = 1684910     ) GROUP BY      a_gender
SELECT p.Product Name FROM central_superstore cs JOIN product p ON cs.Product ID = p.Product ID WHERE cs.Order ID = 'CA-2011-112326' AND cs.Region = 'Central';
SELECT MAX(SUM(JULIANDAY("Ship Date") - JULIANDAY("Order Date"))) AS LongestShipmentTime FROM central_superstore JOIN east_superstore JOIN south_superstore JOIN west_superstore ON central_superstore.Customer ID = east_superstore.Customer ID AND central_superstore.Customer ID = south_superstore.Customer ID AND central_superstore.Customer ID = west_superstore.Customer ID WHERE central_superstore.Customer ID IN (   SELECT Customer ID   FROM people   WHERE Customer Name = 'Aimee Bixby' )
Error: 第 2348 个样本有 0 个SQL。
Error: 第 2349 个样本有 0 个SQL。
SELECT DISTINCT Order.ID FROM central_superstore JOIN east_superstore JOIN south_superstore JOIN west_superstore ON central_superstore.Customer ID = east_superstore.Customer ID AND central_superstore.Customer ID = south_superstore.Customer ID AND central_superstore.Customer ID = west_superstore.Customer ID WHERE central_superstore.Customer ID IN (SELECT Customer ID FROM people WHERE Customer Name = 'Aimee Bixby') AND central_superstore.Product ID IN (SELECT Product ID FROM product) GROUP BY central_superstore.Order ID HAVING COUNT(DISTINCT central_superstore.Product ID) > 3;
Error: 第 2351 个样本有 0 个SQL。
SELECT p.Product Name FROM central_superstore cs JOIN east_superstore es ON cs.Order ID = es.Order ID JOIN south_superstore ss ON cs.Order ID = ss.Order ID JOIN west_superstore ws ON cs.Order ID = ws.Order ID JOIN people p ON cs.Customer ID = p.Customer ID WHERE p.Customer Name = 'Aimee Bixby' AND strftime('%Y', cs.Order Date) = '2016';
Error: 第 2353 个样本有 0 个SQL。
SELECT p.Customer Name FROM people p JOIN central_superstore cs ON p.Customer ID = cs.Customer ID JOIN product prod ON cs.Product ID = prod.Product ID WHERE prod.Product Name = 'Telescoping Adjustable Floor Lamp' UNION ALL SELECT p.Customer Name FROM people p JOIN east_superstore es ON p.Customer ID = es.Customer ID JOIN product prod ON es.Product ID = prod.Product ID WHERE prod.Product Name = 'Telescoping Adjustable Floor Lamp' UNION ALL SELECT p.Customer Name FROM people p JOIN south_superstore ss ON p.Customer ID = ss.Customer ID JOIN product prod ON ss.Product ID = prod.Product ID WHERE prod.Product Name = 'Telescoping Adjustable Floor Lamp' UNION ALL SELECT p.Customer Name FROM people p JOIN west_superstore ws ON p.Customer ID = ws.Customer ID JOIN product prod ON ws.Product ID = prod.Product ID WHERE prod.Product Name = 'Telescoping Adjustable Floor Lamp';
SELECT COUNT(*) FROM people WHERE Customer ID IN (   SELECT Customer ID   FROM central_superstore   WHERE Product ID IN (     SELECT Product ID     FROM product     WHERE Product Name = 'Telescoping Adjustable Floor Lamp'   )   AND Segment = 'Consumer' ) UNION ALL SELECT COUNT(*) FROM people WHERE Customer ID IN (   SELECT Customer ID   FROM east_superstore   WHERE Product ID IN (     SELECT Product ID     FROM product     WHERE Product Name = 'Telescoping Adjustable Floor Lamp'   )   AND Segment = 'Consumer' ) UNION ALL SELECT COUNT(*) FROM people WHERE Customer ID IN (   SELECT Customer ID   FROM south_superstore   WHERE Product ID IN (     SELECT Product ID     FROM product     WHERE Product Name = 'Telescoping Adjustable Floor Lamp'   )   AND Segment = 'Consumer' ) UNION ALL SELECT COUNT(*) FROM people WHERE Customer ID IN (   SELECT Customer ID   FROM west_superstore   WHERE Product ID IN (     SELECT Product ID     FROM product     WHERE Product Name = 'Telescoping Adjustable Floor Lamp'   )   AND Segment = 'Consumer' )
SELECT Quantity FROM central_superstore JOIN product ON central_superstore.Product ID = product.Product ID JOIN people ON central_superstore.Customer ID = people.Customer ID WHERE product.Product Name = 'Xerox 1952' AND people.Customer Name = 'Aimee Bixby' AND central_superstore.Order Date = '2014-09-10';
Error: 第 2357 个样本有 0 个SQL。
SELECT p.Product Name, c.Sales / (c.Sales - c.Discount) AS OriginalPrice FROM product p JOIN central_superstore c ON p.Product ID = c.Product ID WHERE p.Product Name = 'Xerox 1952' AND c.Order Date = '2014-09-10' AND c.Customer Name = 'Aimee Bixby' ORDER BY p.Product Name;
SELECT SUM(SUBTRACT(DIVIDE(DIVIDE(Sales, SUBTRACT(1, Discount)), Quantity), Profit))  FROM central_superstore  JOIN product ON central_superstore.Product ID = product.Product ID  WHERE product.Product Name = 'Xerox 1952'  AND central_superstore.Order Date = '2014-09-10'  AND central_superstore.Customer ID IN (SELECT Customer ID FROM people WHERE Customer Name = 'Aimee Bixby');
SELECT COUNT(*)  FROM product  JOIN east_superstore ON product.Product ID = east_superstore.Product ID  WHERE strftime('%Y', east_superstore.Order Date) = '2013' AND product.Sub-Category = 'Art';
SELECT p.Customer Name FROM central_superstore cs JOIN people p ON cs.Customer ID = p.Customer ID WHERE (SUBTRACT(DIVIDE(MULTIPLY(DIVIDE(Sales, SUBTRACT(1, Discount)), Quantity), Profit), (SELECT MAX(SUBTRACT(DIVIDE(MULTIPLY(DIVIDE(Sales, SUBTRACT(1, Discount)), Quantity), Profit)) FROM central_superstore))) = 0;
SELECT Product_Name FROM product WHERE Product_ID = (   SELECT Product_ID   FROM product   ORDER BY (Sales / (1 - Discount)) DESC   LIMIT 1 );
SELECT p.Product_Name FROM central_superstore es JOIN product p ON es.Product_ID = p.Product_ID JOIN people c ON es.Customer_ID = c.Customer_ID WHERE c.Customer_Name = 'Darren Powers' AND es.Order_Date = (SELECT MAX(Order_Date) FROM central_superstore);
SELECT SUM(Quantity)  FROM central_superstore  WHERE Product ID IN (SELECT Product ID FROM product WHERE Product Name = 'Advantus plastic paper clips') UNION ALL SELECT SUM(Quantity)  FROM east_superstore  WHERE Product ID IN (SELECT Product ID FROM product WHERE Product Name = 'Advantus plastic paper clips') UNION ALL SELECT SUM(Quantity)  FROM south_superstore  WHERE Product ID IN (SELECT Product ID FROM product WHERE Product Name = 'Advantus plastic paper clips') UNION ALL SELECT SUM(Quantity)  FROM west_superstore  WHERE Product ID IN (SELECT Product ID FROM product WHERE Product Name = 'Advantus plastic paper clips');
SELECT p.Product Name FROM product p WHERE p.Product Name = 'Logitech G600 MMO Gaming Mouse' ORDER BY (p.Sales / (1 - p.Discount)) * p.Quantity + p.Profit DESC LIMIT 1;
SELECT p.Product Name FROM central_superstore cs JOIN product p ON cs.Product ID = p.Product ID JOIN people pe ON cs.Customer ID = pe.Customer ID WHERE pe.Customer Name = 'Alejandro Grove';
Error: 第 2367 个样本有 0 个SQL。
SELECT p.Product_Name FROM central_superstore cs JOIN product p ON cs.Product_ID = p.Product_ID WHERE cs.Profit >= 1000;
Error: 第 2369 个样本有 0 个SQL。
SELECT p.Product Name FROM central_superstore cs JOIN product p ON cs.Product ID = p.Product ID WHERE cs.Customer ID IN (SELECT Customer ID FROM people WHERE Customer Name = 'Becky Martin') AND cs.Region = 'Central';
Error: 第 2371 个样本有 0 个SQL。
SELECT SUM(Profit)  FROM central_superstore  WHERE Customer ID IN (SELECT Customer ID                        FROM people                        WHERE Customer Name = 'Patrick Gardner'                        AND Region = 'Central');
SELECT p.Product Name FROM central_superstore AS cs JOIN product AS p ON cs.Product ID = p.Product ID WHERE cs.Order Date = '2013-03-04' AND cs.Ship Mode = 'Same Day' AND cs.Region = 'South';
Error: 第 2374 个样本有 0 个SQL。
SELECT p.Product_Name FROM central_superstore cs JOIN east_superstore es ON cs.Product_ID = es.Product_ID JOIN people p ON cs.Customer_ID = p.Customer_ID WHERE p.Customer_Name = 'Jonathan Doherty' AND es.Region = 'East' ORDER BY es.Quantity DESC LIMIT 1;
SELECT p.Product_Name, SUM(e.Quantity) AS Total_Quantity FROM east_superstore e JOIN product p ON e.Product_ID = p.Product_ID WHERE e."Ship Date" = DATE('2015-03-25') AND e.Region = 'East';
Error: 第 2377 个样本有 0 个SQL。
SELECT p.Category FROM people p JOIN central_superstore c ON p.Customer ID = c.Customer ID JOIN product pr ON c.Product ID = pr.Product ID WHERE p.Customer Name = 'Katherine Murray' AND c.Order Date = DATE('2018-11-04') AND c.Region = 'South';
SELECT      (SUM(qty) / (SELECT SUM(Quantity) FROM central_superstore WHERE Region = 'West' AND Ship Mode = 'Standard Class')) * 1.0  FROM      central_superstore  WHERE      Region = 'West'      AND Ship Mode = 'Standard Class'      AND Category = 'Furniture'
SELECT Ship_Date FROM central_superstore WHERE Customer_ID IN (   SELECT Customer_ID   FROM people   WHERE Customer_Name = 'Ann Chong' ) AND Region = 'Central';
SELECT Segment FROM people WHERE Region = 'West' AND Customer ID IN (   SELECT Customer ID   FROM west_superstore   WHERE Order ID = 'CA-2011-108189' );
SELECT SUM(Sales)  FROM west_superstore  WHERE Product ID IN (SELECT Product ID FROM product WHERE Product Name = 'Hon Valutask Swivel Chairs');
SELECT Order_ID FROM central_superstore WHERE Customer_ID IN (   SELECT Customer_ID   FROM people   WHERE Customer_Name = 'Frank Olsen' ) AND Region = 'South';
SELECT p.Product Name FROM central_superstore cs JOIN product p ON cs.Product ID = p.Product ID WHERE cs.Order Date = date('2018-04-26') AND cs.Ship Date = date('2018-04-27') AND cs.Region = 'Central';
SELECT City, State FROM people WHERE Customer ID = (   SELECT Customer ID   FROM (     SELECT Customer ID, Product ID, max(Sales) as max_sales     FROM central_superstore     GROUP BY Customer ID, Product ID     UNION ALL     SELECT Customer ID, Product ID, max(Sales) as max_sales     FROM east_superstore     GROUP BY Customer ID, Product ID     UNION ALL     SELECT Customer ID, Product ID, max(Sales) as max_sales     FROM south_superstore     GROUP BY Customer ID, Product ID     UNION ALL     SELECT Customer ID, Product ID, max(Sales) as max_sales     FROM west_superstore     GROUP BY Customer ID, Product ID   ) as subquery   WHERE (Customer ID, max_sales) IN (     SELECT Customer ID, max(max_sales)     FROM (       SELECT Customer ID, max_sales       FROM (         SELECT Customer ID, Product ID, max(Sales) as max_sales         FROM central_superstore         GROUP BY Customer ID, Product ID         UNION ALL         SELECT Customer ID, Product ID, max(Sales) as max_sales         FROM east_superstore         GROUP BY Customer ID, Product ID         UNION ALL         SELECT Customer ID, Product ID, max(Sales) as max_sales         FROM south_superstore         GROUP BY Customer ID, Product ID         UNION ALL         SELECT Customer ID, Product ID, max(Sales) as max_sales         FROM west_superstore         GROUP BY Customer ID, Product ID       ) as subquery       GROUP BY Customer ID     )   ) )
Error: 第 2386 个样本有 0 个SQL。
SELECT MAX(Quantity) FROM central_superstore INNER JOIN east_superstore INNER JOIN south_superstore INNER JOIN west_superstore ON central_superstore.Customer ID = east_superstore.Customer ID AND central_superstore.Customer ID = south_superstore.Customer ID AND central_superstore.Customer ID = west_superstore.Customer ID WHERE central_superstore.City = 'Chicago' AND central_superstore.State = 'Illinois';
Error: 第 2388 个样本有 0 个SQL。
SELECT p.Customer Name FROM central_superstore cs JOIN east_superstore es ON cs.Customer ID = es.Customer ID JOIN south_superstore ss ON cs.Customer ID = ss.Customer ID JOIN product p ON cs.Product ID = p.Product ID WHERE p.Product Name = 'Xerox 23' AND p.Region = 'South';
SELECT p.Product Name FROM product p JOIN central_superstore c ON p.Product ID = c.Product ID WHERE p.Category = 'Office Supplies' AND p.Region = 'Central' ORDER BY c.Sales DESC LIMIT 1;
SELECT p.Customer Name FROM people p JOIN west_superstore ws ON p.Customer ID = ws.Customer ID WHERE p.Region = 'West' ORDER BY ws.Discount DESC LIMIT 1;
SELECT p.Product_Name FROM product p WHERE p.Product_ID IN (   SELECT ps.Product_ID   FROM east_superstore ps   WHERE ps.Profit > (     SELECT AVG(ps2.Profit) * 0.98     FROM east_superstore ps2   ) )
SELECT p.Customer Name FROM central_superstore es JOIN east_superstore ON es.Customer ID = east_superstore.Customer ID JOIN people p ON es.Customer ID = p.Customer ID WHERE (Sales - Discount) / Quantity * Quantity + Profit > 80000;
Error: 第 2394 个样本有 0 个SQL。
Error: 第 2395 个样本有 0 个SQL。
SELECT SUM(Profit) AS Total_Profit FROM (   SELECT Profit   FROM central_superstore   WHERE Product ID IN (     SELECT Product ID     FROM product     WHERE Product Name = 'Cisco SPA301'   )   UNION ALL   SELECT Profit   FROM east_superstore   WHERE Product ID IN (     SELECT Product ID     FROM product     WHERE Product Name = 'Cisco SPA301'   )   UNION ALL   SELECT Profit   FROM south_superstore   WHERE Product ID IN (     SELECT Product ID     FROM product     WHERE Product Name = 'Cisco SPA301'   )   UNION ALL   SELECT Profit   FROM west_superstore   WHERE Product ID IN (     SELECT Product ID     FROM product     WHERE Product Name = 'Cisco SPA301'   ) ) AS Total_Profit_Query;
SELECT p.Product Name FROM west_superstore ws JOIN central_superstore cs ON ws.Order ID = cs.Order ID JOIN people p ON cs.Customer ID = p.Customer ID WHERE p.Customer Name = 'Anne McFarland';
SELECT p.Product Name FROM product p JOIN central_superstore cs ON p.Product ID = cs.Product ID JOIN people pe ON cs.Customer ID = pe.Customer ID WHERE pe.City = 'Coachella';
SELECT      COUNT(*) AS num_orders FROM      east_superstore WHERE      strftime('%Y', "Order Date") = '2015' UNION ALL SELECT      COUNT(*) AS num_orders FROM      west_superstore WHERE      strftime('%Y', "Order Date") = '2015';
SELECT p.Product Name FROM central_superstore cs JOIN people p ON cs.Customer ID = p.Customer ID WHERE p.Customer Name = 'Matt Abelman' AND cs.Order Date LIKE '2013%' AND cs.Region = 'west';
SELECT SUM(SUBTRACT(MULTIPLY(DIVIDE(Sales, SUBTRACT(1, Discount)), Quantity), Profit)) AS Total_Cost FROM central_superstore JOIN east_superstore JOIN south_superstore JOIN west_superstore ON central_superstore.Customer_ID = east_superstore.Customer_ID AND central_superstore.Customer_ID = south_superstore.Customer_ID AND central_superstore.Customer_ID = west_superstore.Customer_ID WHERE strftime('%Y', Order_Date) = '2016' AND Customer_Name = 'Brad Thomas';
SELECT p.Customer Name, p.City, p.Country FROM people p JOIN central_superstore cs ON p.Customer ID = cs.Customer ID JOIN product prod ON cs.Product ID = prod.Product ID WHERE prod.Product Name = 'Plantronics Single Ear Headset';
SELECT s."Ship Date", p."Product Name" FROM central_superstore s JOIN product p ON s."Product ID" = p."Product ID" JOIN people pe ON s."Customer ID" = pe."Customer ID" WHERE pe."Customer Name" = 'Gene Hale';
SELECT COUNT(*) FROM south_superstore WHERE Ship_Mode = 'First Class' AND Product_ID IN (   SELECT Product_ID   FROM product   WHERE Category = 'Furniture' )
Error: 第 2405 个样本有 0 个SQL。
SELECT p.Category FROM product p JOIN south_superstore s ON p.Product ID = s.Product ID GROUP BY p.Category ORDER BY MAX(s.Profit) DESC LIMIT 1;
SELECT p.Product_Name  FROM central_superstore es  JOIN east_superstore ON es.Order_ID = east_superstore.Order_ID  JOIN product p ON es.Product_ID = p.Product_ID  WHERE p.Customer_Name = 'Cindy Stewart';
SELECT p.Product_Name FROM west_superstore ws JOIN product p ON ws.Product_ID = p.Product_ID WHERE ws.Ship_Mode = 'Same Day' AND ws.Ship_Date BETWEEN '2013-01-01' AND '2013-12-31';
SELECT p.Category  FROM product p  JOIN central_superstore c ON p.Product ID = c.Product ID  JOIN east_superstore e ON p.Product ID = e.Product ID  WHERE p.Region IN ('Central', 'East')  AND EXISTS (SELECT 1 FROM people WHERE Customer Name = 'Sam Craven' AND Customer ID = c.Customer ID);
SELECT SUM(Quantity)  FROM south_superstore  WHERE Customer ID IN (   SELECT Customer ID    FROM people    WHERE Customer Name = 'Cindy Stewart' )  AND Product ID IN (   SELECT Product ID    FROM product    WHERE Product Name = 'Lexmark X 9575 Professional All-in-One Color Printer' );
SELECT p.Product Name FROM product p JOIN central_superstore c ON p.Product ID = c.Product ID WHERE c.Quantity >= 10 AND c.Ship Mode = 'Standard Class'
SELECT c.Category FROM product c WHERE c.Region = 'west_superstore' ORDER BY c.Sales ASC LIMIT 1;
SELECT SUM(Profit)  FROM south_superstore  WHERE Product ID IN (   SELECT Product ID    FROM product    WHERE Product Name = 'Memorex Froggy Flash Drive 8 GB' );
SELECT SUM(Sales)  FROM east_superstore  WHERE Order Date BETWEEN '2016-01-01' AND '2016-12-31'    AND Product ID IN (SELECT Product ID                       FROM product                       WHERE Category = 'Furniture');
Error: 第 2415 个样本有 0 个SQL。
SELECT      (SUM(p.Product ID)       WHERE p.Category = 'Office Supplies'       AND cs.Region = 'Central' OR ss.Region = 'South')      / COUNT(p.Product ID) * 100 AS Percentage FROM      product p      LEFT JOIN central_superstore cs ON p.Product ID = cs.Product ID     LEFT JOIN south_superstore ss ON p.Product ID = ss.Product ID WHERE      p.Category = 'Office Supplies'      AND (cs.Region = 'Central' OR ss.Region = 'South');
SELECT SUM(CASE WHEN State = 'Texas' THEN 1 ELSE 0 END) / SUM(CASE WHEN State = 'Indiana' THEN 1 ELSE 0 END) AS Ratio FROM people;
SELECT p.Product Name, COUNT(c.Product ID) as order_count FROM central_superstore c JOIN product p ON c.Product ID = p.Product ID WHERE p.Sub-Category = 'Art' GROUP BY p.Product Name ORDER BY order_count DESC;
SELECT p.Customer_Name FROM south_superstore ss JOIN people p ON ss.Customer_ID = p.Customer_ID WHERE ss.Order_Date BETWEEN '2015-01-01' AND '2015-12-31' GROUP BY p.Customer_Name HAVING COUNT(ss.Order_ID) > 3;
SELECT MAX(Profit) FROM central_superstore WHERE Customer ID IN (   SELECT Customer ID   FROM people   WHERE Customer Name = 'Anna Chung' )
SELECT COUNT(*) FROM central_superstore JOIN east_superstore JOIN south_superstore JOIN west_superstore ON central_superstore.Customer ID = east_superstore.Customer ID AND central_superstore.Customer ID = south_superstore.Customer ID AND central_superstore.Customer ID = west_superstore.Customer ID WHERE central_superstore.Order Date LIKE '2015-%' AND central_superstore.Customer ID IN (   SELECT Customer ID   FROM people   WHERE Customer Name = 'Corey Roper' );
SELECT SUM(Sales) AS East_Sales,         SUM(Sales) AS West_Sales,         SUM(Sales) - SUM(Sales) AS Difference FROM central_superstore WHERE Region = 'East' UNION ALL SELECT SUM(Sales) AS East_Sales,         0 AS West_Sales,         0 AS Difference FROM east_superstore UNION ALL SELECT 0 AS East_Sales,         SUM(Sales) AS West_Sales,         0 AS Difference FROM west_superstore UNION ALL SELECT 0 AS East_Sales,         0 AS West_Sales,         SUM(Sales) AS Difference FROM central_superstore WHERE Region = 'West'
SELECT p.Product_Name  FROM central_superstore cs  JOIN product p ON cs.Product_ID = p.Product_ID  WHERE cs.Profit < 0;
SELECT p.Product Name, c.Ship Mode FROM west_superstore c JOIN product p ON c.Product ID = p.Product ID ORDER BY c.Ship Date - c.Order Date ASC LIMIT 1;
SELECT COUNT(*)  FROM central_superstore  WHERE Product ID IN (SELECT Product ID FROM product WHERE Product Name = 'O''Sullivan Cherrywood Estates Traditional Bookcase')  AND Ship Mode = 'First Class';
SELECT p.Customer Name FROM people p JOIN central_superstore cs ON p.Customer ID = cs.Customer ID WHERE p.Segment = 'Corporate' AND p.State = 'Rhode Island' AND cs.Order Date BETWEEN '2016-01-01' AND '2016-12-31' AND cs.Region = 'East' GROUP BY p.Customer Name ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 2427 个样本有 0 个SQL。
SELECT p.Segment FROM people p JOIN (   SELECT e.Customer ID   FROM east_superstore e   WHERE e.Sales / (1 - e.Discount) = (     SELECT MAX(e.Sales / (1 - e.Discount))     FROM east_superstore e   ) ) c ON p.Customer ID = c.Customer ID;
SELECT    DATEDIFF("Ship Date", "Order Date") AS Shipment_Duration FROM    central_superstore WHERE    "Order ID" = 'CA-2011-134103';
SELECT COUNT(*)  FROM (SELECT *        FROM central_superstore        UNION ALL        SELECT *        FROM east_superstore        UNION ALL        SELECT *        FROM south_superstore        UNION ALL        SELECT *        FROM west_superstore) AS combined  WHERE Quantity > 5 AND Ship Mode = 'First Class';
SELECT *  FROM central_superstore  WHERE Profit < 0 UNION ALL SELECT *  FROM east_superstore  WHERE Profit < 0 UNION ALL SELECT *  FROM south_superstore  WHERE Profit < 0 UNION ALL SELECT *  FROM west_superstore  WHERE Profit < 0 LIMIT 3;
SELECT p.Product Name FROM central_superstore cs JOIN people p ON cs.Customer ID = p.Customer ID WHERE p.Customer Name = 'Phillina Ober';
SELECT p.Customer Name FROM central_superstore cs JOIN product p ON cs.Product ID = p.Product ID WHERE p.Product Name = 'Hon Multipurpose Stacking Arm Chairs' AND cs.Region = 'South' ORDER BY cs.Sales DESC LIMIT 1;
SELECT SUM(central_superstore.Profit) + SUM(east_superstore.Profit) + SUM(south_superstore.Profit) + SUM(west_superstore.Profit)  FROM central_superstore  JOIN product ON central_superstore.Product ID = product.Product ID  WHERE product.Product Name = 'O''Sullivan Living Dimensions 2-Shelf Bookcases';
SELECT SUM(Quantity)  FROM central_superstore  JOIN product ON central_superstore.Product ID = product.Product ID  WHERE product.Product Name = 'Hon Pagoda Stacking Chairs'  AND Region = 'West';
SELECT COUNT(*) FROM central_superstore JOIN east_superstore JOIN south_superstore JOIN west_superstore ON central_superstore.Customer ID = east_superstore.Customer ID AND central_superstore.Customer ID = south_superstore.Customer ID AND central_superstore.Customer ID = west_superstore.Customer ID WHERE central_superstore.Customer ID IN (   SELECT Customer ID   FROM people   WHERE Customer Name = 'Aaron Bergman' ) AND central_superstore.Ship Mode = 'Standard Class';
SELECT Sales / (1 - Discount) AS Original_Price FROM product WHERE Product_Name = 'Black Avery Flip-Chart Easel Binder';
SELECT p.Product_Name FROM central_superstore cs JOIN product p ON cs.Product_ID = p.Product_ID WHERE cs.Customer_ID IN (   SELECT Customer_ID   FROM people   WHERE Customer_Name = 'Aimee Bixby' );
SELECT Profit FROM central_superstore WHERE Product ID = (SELECT Product ID                     FROM product                     WHERE Product Name = 'Sauder Camden County Barrister Bookcase, Planked Cherry Finish')
Error: 第 2440 个样本有 0 个SQL。
SELECT * FROM east_superstore WHERE Customer ID IN (   SELECT Customer ID   FROM people   WHERE City = 'Houston' AND State = 'Texas' ) ORDER BY Profit DESC LIMIT 1;
SELECT COUNT(*) FROM central_superstore WHERE Product ID IN (   SELECT Product ID   FROM product   WHERE Category = 'Furniture' )
SELECT Product_Name FROM central_superstore WHERE Ship_Date LIKE '2013-03%';
SELECT COUNT(*) FROM central_superstore WHERE Customer ID IN (   SELECT Customer ID   FROM people   WHERE State = 'Texas' )
SELECT COUNT(*)  FROM central_superstore  WHERE Customer ID = (SELECT Customer ID FROM people WHERE Customer Name = 'Alan Barnes')  AND Order Date LIKE '2015%';
Error: 第 2446 个样本有 0 个SQL。
SELECT (SUM(CASE WHEN Discount = 0.2 THEN 1 ELSE 0 END) / SUM(Order ID)) * 100 AS percentage FROM central_superstore WHERE Customer ID IN (   SELECT Customer ID   FROM people   WHERE State = 'Texas' )
SELECT      (SUM(c.Row_ID)      WHERE c.Category = 'Furniture' AND c."Ship Date" LIKE '2013%')      / (SELECT SUM(c.Row_ID) FROM central_superstore c) * 100 AS percentage
Error: 第 2449 个样本有 0 个SQL。
SELECT Order_ID FROM central_superstore WHERE Product_ID IN (   SELECT Product_ID   FROM product   WHERE Product_Name = 'Security-Tint Envelopes' ) AND Order_Date = '2013-06-03' AND Region = 'Central';
Error: 第 2451 个样本有 0 个SQL。
SELECT p.Customer Name FROM central_superstore c JOIN people p ON c.Customer ID = p.Customer ID WHERE c.Region = 'West' AND c.Quantity = 8;
Error: 第 2453 个样本有 0 个SQL。
Error: 第 2454 个样本有 0 个SQL。
SELECT Product_Name FROM central_superstore WHERE Order_Date LIKE '2016%' AND Region = 'Central' ORDER BY Profit ASC LIMIT 1;
SELECT p.Customer Name FROM people p JOIN east_superstore es ON p.Customer ID = es.Customer ID WHERE es.Order ID = 'CA-2011-118976';
SELECT p.Product_Name FROM product p JOIN central_superstore cs ON p.Product_ID = cs.Product_ID JOIN south_superstore ss ON cs.Product_ID = ss.Product_ID WHERE p.Region = 'South' ORDER BY cs.Sales DESC LIMIT 1;
Error: 第 2458 个样本有 0 个SQL。
SELECT p.Product_Name FROM product p JOIN (   SELECT Product_ID, MAX(Quantity) as max_quantity   FROM (     SELECT Product_ID, Quantity     FROM central_superstore     UNION ALL     SELECT Product_ID, Quantity     FROM east_superstore     UNION ALL     SELECT Product_ID, Quantity     FROM south_superstore     UNION ALL     SELECT Product_ID, Quantity     FROM west_superstore   ) t   GROUP BY Product_ID ) t2 ON p.Product_ID = t2.Product_ID WHERE t2.max_quantity = (   SELECT MAX(Quantity)   FROM (     SELECT Quantity     FROM central_superstore     UNION ALL     SELECT Quantity     FROM east_superstore     UNION ALL     SELECT Quantity     FROM south_superstore     UNION ALL     SELECT Quantity     FROM west_superstore   ) t3 );
SELECT p.Customer Name FROM people p JOIN south_superstore ss ON p.Customer ID = ss.Customer ID WHERE ss.Ship Mode = 'Standard Class' AND ss.Sales > (SELECT AVG(Sales) * 0.88 FROM south_superstore);
SELECT      (SUM(CASE WHEN Discount = 0 THEN 1 ELSE 0 END) / COUNT(Discount)) * 100 AS percentage FROM      central_superstore WHERE      Customer ID IN (         SELECT              Customer ID         FROM              people         WHERE              State = 'Indiana'     )     AND Region = 'Central'     AND Discount = 0;
SELECT (COUNT(o.race = 'W') / COUNT(o.gender = 'M')) * 100 FROM officers o WHERE o.gender = 'M';
SELECT (COUNT(i.case_number) WHERE i.date BETWEEN '2010-01-01' AND '2015-12-31' AND i.officers > 3) * 100.0 /         COUNT(i.case_number) WHERE i.date BETWEEN '2010-01-01' AND '2015-12-31'
SELECT EXTRACT(YEAR FROM date) AS year, COUNT(*) AS count FROM incidents WHERE subject_weapon = 'Handgun' GROUP BY EXTRACT(YEAR FROM date) ORDER BY count DESC LIMIT 1;
SELECT      (COUNT(i.subject_statuses) / COUNT(i.case_number)) * 100 FROM      incidents i WHERE      i.subject_statuses = 'injured' AND i.grand_jury_disposition = 'No Bill';
SELECT    '2007' AS year, COUNT(*) AS cases_2007 FROM    incidents WHERE    date BETWEEN '2007-01-01' AND '2007-12-31'   AND subject_weapon = 'Vehicle' UNION ALL SELECT    '2008' AS year, COUNT(*) AS cases_2008 FROM    incidents WHERE    date BETWEEN '2008-01-01' AND '2008-12-31'   AND subject_weapon = 'Vehicle'
SELECT ROUND((COUNT(*)/(SELECT COUNT(*) FROM incidents WHERE subject_weapon = 'Handgun'))*100,2)  FROM incidents  WHERE subject_weapon = 'Handgun' AND subject_statuses = 'Shoot and Miss';
SELECT o.last_name, o.gender FROM officers o JOIN incidents i ON o.case_number = i.case_number WHERE i.subject_statuses = 'No Bill';
SELECT i.case_number, i.subject_statuses, i.subject_weapon FROM incidents i JOIN subjects s ON i.case_number = s.case_number WHERE s.gender = 'F';
SELECT i.case_number, i.location, s.subject_statuses FROM incidents i JOIN subjects s ON i.case_number = s.case_number WHERE s.gender = 'M';
SELECT i.case_number, i.subject_statuses FROM incidents i JOIN officers o ON i.case_number = o.case_number WHERE o.full_name = 'Evenden, George';
SELECT o.last_name, i.subject_statuses FROM incidents i JOIN officers o ON i.case_number = o.case_number WHERE i.case_number = '134472-2015';
SELECT s.last_name, s.gender, s.race, i.case_number FROM incidents i JOIN subjects s ON i.case_number = s.case_number WHERE i.subject_statuses = 'Deceased';
SELECT (COUNT(i.case_number) WHERE i.subject_weapon = 'Vehicle') * 100.0 / COUNT(DISTINCT i.case_number) FROM incidents i JOIN subjects s ON i.case_number = s.case_number WHERE s.gender = 'F';
SELECT    COUNT(CASE WHEN subject_weapon = 'knife' THEN 1 END) /    COUNT(CASE WHEN subject_weapon = 'toy handgun' THEN 1 END)  FROM    incidents  WHERE    subject_statuses = 'Injured';
SELECT * FROM incidents WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND subject_statuses = 'Deceased';
SELECT (COUNT(officers.race = 'B' AND officers.gender = 'M') / COUNT(officers.gender = 'M')) * 100 AS percentage FROM officers WHERE officers.gender = 'M';
SELECT COUNT(*)  FROM incidents  WHERE subject_weapon = 'Vehicle' AND EXISTS (   SELECT 1    FROM officers    WHERE incidents.case_number = officers.case_number AND gender = 'F' );
SELECT COUNT(*)  FROM incidents  WHERE gender = 'F' AND subject_statuses = 'Deceased';
SELECT COUNT(*)  FROM officers  WHERE race = 'B'  AND date BETWEEN '2010-01-01' AND '2015-12-31';
SELECT COUNT(*)  FROM incidents  WHERE date BETWEEN '2015-06-01' AND '2015-06-30';
SELECT COUNT(*)  FROM incidents  WHERE date BETWEEN '2006-01-01' AND '2013-12-31'  AND subject_statuses = 'injured'  AND subject_weapon = 'handgun';
SELECT subject_weapon FROM incidents WHERE subject_statuses = 'Deceased' GROUP BY subject_weapon ORDER BY COUNT(*) DESC LIMIT 1;
SELECT    (COUNT(CASE WHEN race = 'W' AND gender = 'M' THEN 1 END) / COUNT(*)) * 100 AS proportion_white_male,   (COUNT(CASE WHEN race = 'W' AND gender = 'F' THEN 1 END) / COUNT(*)) * 100 AS proportion_white_female FROM    officers;
SELECT (SELECT COUNT(*) FROM subjects WHERE race = 'B' AND gender = 'F') - (SELECT COUNT(*) FROM subjects WHERE race = 'W' AND gender = 'F') AS result;
SELECT (COUNT(i.case_number) WHERE i.subject_weapon = 'rifles') / (COUNT(i.case_number) WHERE i.subject_statuses = 'Deceased') * 100 AS percentage FROM incidents i WHERE i.subject_statuses = 'Deceased';
SELECT subject_weapon, subjects.race, subjects.gender FROM incidents JOIN subjects ON incidents.case_number = subjects.case_number WHERE incidents.case_number = '031347-2015';
Error: 第 2488 个样本有 0 个SQL。
SELECT      (COUNT(o.case_number) / COUNT(i.case_number)) * 100 FROM      officers o JOIN      incidents i ON o.case_number = i.case_number WHERE      o.gender = 'M' AND i.subject_statuses = 'Injured'
Error: 第 2490 个样本有 0 个SQL。
Error: 第 2491 个样本有 0 个SQL。
Error: 第 2492 个样本有 0 个SQL。
SELECT Localization  FROM Genes  WHERE Chromosome = (SELECT MAX(Chromosome) FROM Genes)
SELECT MAX(Expression_Corr) FROM Interactions WHERE GeneID1 IN (   SELECT GeneID   FROM Genes   WHERE Localization = 'nucleus' ) AND GeneID2 IN (   SELECT GeneID   FROM Genes   WHERE Localization = 'nucleus' );
SELECT g1.Function, g2.Function FROM Genes g1, Genes g2, Interactions i WHERE g1.GeneID = i.GeneID1 AND g2.GeneID = i.GeneID2 AND i.Expression_Corr = (SELECT MIN(Expression_Corr) FROM Interactions)
SELECT COUNT(*) FROM Interactions WHERE GeneID1 NOT IN (   SELECT GeneID   FROM Genes   WHERE Class = 'motorprotein' ) AND GeneID2 NOT IN (   SELECT GeneID   FROM Genes   WHERE Class = 'motorprotein' ) AND Expression_Corr < 0;
SELECT MAX(Expression_Corr) FROM Interactions WHERE GeneID1 IN (   SELECT GeneID   FROM Genes   WHERE Chromosome = 8 ) AND GeneID2 IN (   SELECT GeneID   FROM Genes   WHERE Chromosome = 6 );
SELECT Motif FROM Genes WHERE Localization = 'cytoplasm' AND Chromosome = 7;
SELECT COUNT(*) FROM Genes WHERE Essential = 'no' AND Function = 'transcription' AND Localization != 'cytoplasm';
SELECT COUNT(*) FROM Interactions i JOIN Genes g1 ON i.GeneID1 = g1.GeneID JOIN Genes g2 ON i.GeneID2 = g2.GeneID WHERE i.Expression_Corr > 0 AND g1.Essential = 0 AND g2.Essential = 0;
SELECT COUNT(*) / (   SELECT COUNT(*)   FROM Interactions   WHERE Expression_Corr > 0 ) AS Possibility FROM (   SELECT GeneID1, GeneID2   FROM Interactions   WHERE Expression_Corr > 0   INTERSECT   SELECT GeneID1, GeneID2   FROM Genes, Genes AS g2   WHERE Genes.GeneID = GeneID1 AND g2.GeneID = GeneID2 AND Genes.Chromosome > 20 AND g2.Chromosome > 20 ) AS correlated_genes;
SELECT AVG(Expression_Corr)  FROM Interactions  WHERE GeneID1 IN (SELECT GeneID FROM Genes WHERE Class = 'ATPases')    AND GeneID2 IN (SELECT GeneID FROM Genes WHERE Class = 'ATPases');
SELECT GeneID FROM Genes WHERE Localization = 'cytoplasm' AND Function = 'metabolism';
Error: 第 2504 个样本有 0 个SQL。
SELECT      COUNT(CASE WHEN Type = 'Physical' AND Expression_Corr < 0 THEN 1 ELSE NULL END) AS Negatively_Correlated,     COUNT(CASE WHEN Type = 'Physical' THEN 1 ELSE NULL END) AS Total_Physical_Interactions,     ROUND(COUNT(CASE WHEN Type = 'Physical' AND Expression_Corr < 0 THEN 1 ELSE NULL END) /            COUNT(CASE WHEN Type = 'Physical' THEN 1 ELSE NULL END) * 100, 2) AS Percentage_Negatively_Correlated FROM      Interactions WHERE      GeneID1 IN (SELECT GeneID FROM Genes)      AND GeneID2 IN (SELECT GeneID FROM Genes);
SELECT      ROUND(         (             COUNT(CASE WHEN G.Localization = 'cytoskeleton' AND G.Class IS NULL THEN 1 ELSE NULL END)              / COUNT(CASE WHEN G.Localization = 'cytoskeleton' THEN 1 ELSE NULL END)          ) * 100, 2     ) AS percentage,     COUNT(CASE WHEN G.Localization = 'cytoskeleton' AND G.Class IS NULL AND P.Phenotype IS NULL THEN 1 ELSE NULL END) AS unknown_not_conditional FROM      Genes G     LEFT JOIN Phenotype P ON G.GeneID = P.GeneID WHERE      G.Localization = 'cytoskeleton';
Error: 第 2507 个样本有 0 个SQL。
SELECT G.GeneID  FROM Genes G  JOIN Interactions I ON G.GeneID = I.GeneID1  JOIN Classification C ON G.Localization = C.Localization  WHERE I.GeneID2 IN (SELECT GeneID FROM Classification WHERE Localization = 'Nucleus')  AND I.Expression_Corr > 0;
SELECT      g.GeneID FROM      Genes g  WHERE      g.Essential = 'Yes'      AND g.Class = 'Transcription factors'      AND g.Localization = 'Nucleus'      AND EXISTS (         SELECT 1          FROM Interactions i          WHERE i.GeneID1 = g.GeneID OR i.GeneID2 = g.GeneID          AND i.Type = 'genetic'     );
SELECT COUNT(*) FROM Genes WHERE Essential = 'No' AND Class != 'Motorprotein' AND Phenotype = 'Cell cycle defects' AND GeneID NOT IN (   SELECT GeneID1 FROM Interactions WHERE Type LIKE '%physical%'   UNION ALL   SELECT GeneID2 FROM Interactions WHERE Type LIKE '%physical%' );
SELECT      (COUNT(*)/(SELECT COUNT(*) FROM Genes WHERE Phenotype='nucleic acid metabolism defects' AND Localization='PS00107' AND Interactions.Type='positive'))*100 AS Percentage FROM      Genes     LEFT JOIN Interactions ON Genes.GeneID=Interactions.GeneID1 WHERE      Genes.Phenotype='nucleic acid metabolism defects' AND Genes.Localization='PS00107'
SELECT      ROUND(         (             COUNT(DISTINCT g1.GeneID)              / (                 COUNT(DISTINCT g1.GeneID)                  + COUNT(DISTINCT g2.GeneID)              )          ) * 100, 2     ) AS Percentage_Non_Essential FROM      Genes g1 JOIN      Genes g2 ON g1.GeneID < g2.GeneID JOIN      Interactions i ON g1.GeneID = i.GeneID1 AND g2.GeneID = i.GeneID2 WHERE      i.Expression_Corr < 0 AND g1.Essential = '0' AND g2.Essential = '0';
SELECT p.App, ur.Translated_Review FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.Last_Updated BETWEEN '2018-01-01' AND '2018-01-31' AND ur.Sentiment = 'Positive' ORDER BY p.App;
SELECT COUNT(*)  FROM user_reviews  WHERE App = '7 Minute Workout' AND Sentiment_Polarity >= 0 AND Sentiment_Polarity < 0.5;
SELECT COUNT(*), p.Rating FROM user_reviews ur JOIN playstore p ON ur.App = p.App WHERE ur.Sentiment = 'Neutral' AND p.App = 'HTC Weather';
SELECT p.App, p.Category FROM playstore p JOIN (   SELECT App, COUNT(*) as count   FROM user_reviews   WHERE Sentiment_Polarity = 1.0   GROUP BY App   ORDER BY count DESC   LIMIT 1 ) as r ON p.App = r.App
SELECT AVG(Sentiment_Polarity) AS Average_Sentiment_Polarity, Content_Rating AS Target_Age_Group FROM user_reviews WHERE App = 'Cooking Fever';
SELECT MIN(Sentiment_Polarity) AS Lowest_Sentiment_Polarity, Installs FROM user_reviews WHERE App = 'Basketball Stars' AND Sentiment_Polarity < -0.5
SELECT COUNT(*) as Review_Count, 'Current Ver' as Current_Version FROM user_reviews WHERE App = 'Akinator' AND Sentiment_Subjectivity <= 0.5;
SELECT COUNT(*)  FROM playstore  WHERE Rating = 5;
SELECT App, Installs FROM playstore WHERE Price = 0 ORDER BY Installs DESC LIMIT 5;
SELECT App, MAX(Reviews) AS Max_Reviews FROM playstore GROUP BY App ORDER BY Max_Reviews DESC LIMIT 10;
SELECT COUNT(*) as Neutral_Attitude_Count, p.Category FROM user_reviews ur JOIN playstore p ON ur.App = p.App WHERE ur.App = '10 Best Foods for You' AND ur.Sentiment = 'Neutral';
SELECT p.App, SUM(p.Installs) AS Total_Installs FROM playstore p JOIN user_reviews r ON p.App = r.App WHERE r.Sentiment_Polarity = 'Positive' GROUP BY p.App;
SELECT p.App, ur.Translated_Review FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.Rating = 3.9;
SELECT      p.App,      ur.Translated_Review,      ur.Sentiment FROM      playstore p  JOIN      user_reviews ur ON p.App = ur.App  WHERE      p.Type = 'Android' AND p.Android_Ver = '8.0 and up';
SELECT p.App, COUNT(p.Genres) AS Num_Genres, SUM(ur.Sentiment_Subjectivity) AS Total_Subjectivity FROM playstore p JOIN user_reviews ur ON p.App = ur.App GROUP BY p.App HAVING COUNT(p.Genres) > 1;
SELECT p.App, ur.Sentiment FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.Last_Updated < '2015-01-01'
SELECT SUM(Installs) AS Total_Installs, Translated_Review FROM playstore JOIN user_reviews ON playstore.App = user_reviews.App WHERE Content_Rating = 'Adults Only 18+';
SELECT p.App, AVG(ur.Sentiment_Polarity) AS Sentiment_Polarity FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.Installs = (   SELECT MAX(MULTIPLY(p.Price, p.Installs))   FROM playstore p ) GROUP BY p.App;
SELECT AVG(Rating) AS Average_Rating, SUM(Sentiment = 'Positive') AS Positive_Attitude FROM playstore WHERE Category = 'COMICS'
SELECT Rating FROM playstore WHERE App = 'Draw A Stickman';
SELECT COUNT(*)  FROM user_reviews  WHERE App = 'Brit + Co' AND Translated_Review IS NOT NULL;
SELECT App, MAX(Reviews) as Total_Reviews FROM playstore WHERE Genre = 'Shopping' GROUP BY App ORDER BY Total_Reviews DESC LIMIT 5;
SELECT COUNT(*)  FROM user_reviews  WHERE App = 'Dino War: Rise of Beasts' AND Sentiment = 'Neutral';
SELECT App FROM playstore WHERE Installs LIKE '%5,000+';
SELECT *  FROM user_reviews  WHERE App = 'Dog Run - Pet Dog Simulator' AND Sentiment = 'Negative';
SELECT App FROM user_reviews WHERE Sentiment = 'Negative' GROUP BY App HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM user_reviews WHERE Sentiment = 'Negative' AND Type = 'Free');
SELECT COUNT(*)  FROM user_reviews  WHERE Sentiment = 'Negative'  AND (SELECT Installs FROM playstore WHERE playstore.App = user_reviews.App) LIKE '100,000,000+';
SELECT Content_Rating  FROM playstore, user_reviews  WHERE playstore.App = user_reviews.App AND user_reviews.Translated_Review LIKE '%gr8%';
SELECT SUM(Sentiment_Polarity)  FROM user_reviews  WHERE App IN (SELECT App FROM playstore WHERE Price = (SELECT MAX(Price) FROM playstore));
SELECT p.Rating, ur.Translated_Review FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.App = 'Garden Coloring Book';
SELECT App FROM user_reviews WHERE Genres = 'Photography' ORDER BY SUM(Sentiment_Subjectivity) DESC LIMIT 1;
SELECT Translated_Review FROM user_reviews WHERE App IN (   SELECT App   FROM playstore   WHERE Content Rating = 'Mature 17+'   AND Rating = (     SELECT MIN(Rating)     FROM playstore     WHERE Content Rating = 'Mature 17+'   ) )
SELECT COUNT(Installs)  FROM playstore p  JOIN user_reviews r ON p.App = r.App  GROUP BY p.App  ORDER BY SUM(r.Sentiment_Polarity) DESC  LIMIT 1;
SELECT COUNT(*)  FROM user_reviews  WHERE Sentiment = 'Neutral' AND App IN (   SELECT App    FROM playstore    WHERE Genres = 'Weather' );
SELECT App FROM user_reviews WHERE Translated_Review = 'nan' GROUP BY App ORDER BY COUNT(Translated_Review = 'nan') DESC LIMIT 1;
SELECT    p.Rating,    SUM(ur.Sentiment_Subjectivity) AS Total_Sentiment_Subjectivity FROM    playstore p   JOIN user_reviews ur ON p.App = ur.App WHERE    p.App = 'Onefootball - Soccer Scores' GROUP BY    p.Rating;
SELECT    (COUNT(CASE WHEN Translated_Review = 'nan' AND Content_Rating = 'Teen' THEN 1 ELSE NULL END) /    (SELECT COUNT(*) FROM user_reviews WHERE Translated_Review = 'nan')) * 100 AS Percentage
Error: 第 2550 个样本有 0 个SQL。
SELECT App  FROM playstore  WHERE Installs > 75000000 AND Content Rating = 'Teen';
SELECT Genres  FROM playstore  WHERE Installs > '1,000,000,000+';
SELECT AVG(Price)  FROM playstore  WHERE Genre = 'Dating';
SELECT AVG(Installs)  FROM playstore  WHERE Category = 'ENTERTAINMENT' AND Size <= '1.0 M';
SELECT AVG(Reviews)  FROM playstore  WHERE Rating = 5;
SELECT      Genres,      COUNT(*) as Count FROM      playstore JOIN      user_reviews ON playstore.App = user_reviews.App WHERE      Sentiment_Polarity > 0.5 GROUP BY      Genres ORDER BY      Count DESC LIMIT 3;
SELECT    DIVIDE(SUM(CASE WHEN Sentiment = 'Positive' THEN 1 ELSE 0 END) - SUM(CASE WHEN Sentiment = 'Negative' THEN 1 ELSE 0 END),           SUM(CASE WHEN Sentiment = 'Negative' THEN 1 ELSE 0 END)) as percentage FROM    user_reviews WHERE    App IN (SELECT App FROM playstore WHERE Rating = 4.7)    AND Sentiment = 'Positive' > Sentiment = 'Negative';
SELECT      p.App,      AVG(ur.Sentiment_Polarity) AS Average_Rating FROM      playstore p  JOIN      user_reviews ur ON p.App = ur.App  WHERE      ur.Sentiment != 'Negative' GROUP BY      p.App;
SELECT    App  FROM    playstore  WHERE    Last_Updated < '2015'  GROUP BY    App  HAVING    NOT EXISTS (     SELECT 1      FROM user_reviews      WHERE user_reviews.App = playstore.App      AND user_reviews.Last_Updated > '2015'   ) UNION ALL SELECT    App,    (DIVIDE(SUM(Sentiment = 'Positive'), SUM(Sentiment = 'Negative')) + 1) as percent  FROM    user_reviews  WHERE    App IN (     SELECT App      FROM playstore      WHERE Last_Updated < '2015'    ) GROUP BY    App  HAVING    SUM(Sentiment = 'Positive') < SUM(Sentiment = 'Negative');
SELECT      DIVIDE(SUM(Type = 'Free' AND Rating >= 4.5 AND substr("Last Updated",-4,4)>'2018'),             (COUNT(App)))      AS percent FROM      playstore WHERE      Type = 'Free'      AND Rating >= 4.5      AND substr("Last Updated",-4,4)>'2018';
SELECT Genres FROM playstore WHERE App = 'Honkai Impact 3rd';
SELECT Rating FROM playstore WHERE App = 'Learn C++';
SELECT AVG(Price)  FROM playstore  WHERE Genres = 'Arcade' AND Content Rating = 'Everyone 10+';
SELECT Size  FROM playstore  WHERE App = 'Browser 4G' UNION SELECT COUNT(*)  FROM user_reviews  WHERE App = 'Browser 4G' AND Sentiment_Polarity = 0.5;
SELECT p.App, p.Installs FROM playstore p JOIN user_reviews r ON p.App = r.App WHERE r.Sentiment_Subjectivity = 0.3;
SELECT AVG(Sentiment_Polarity) AS Average_Sentiment_Polarity, Rating FROM user_reviews JOIN playstore ON user_reviews.App = playstore.App WHERE App = 'Golf GPS Rangefinder: Golf Pad';
SELECT p.App, MIN(p.Rating) AS Min_Rating, COUNT(ur.Sentiment) AS Negative_Sentiments FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.Genres LIKE '%Puzzle%' GROUP BY p.App ORDER BY Min_Rating ASC LIMIT 5;
SELECT      'Fate/Grand Order' AS App,     ROUND(MULTIPLY(DIVIDE((SUM(Sentiment = 'Positive')), (SUM(Sentiment = 'Negative'))), 100), 2) AS Positive_Negative_Ratio,     MAX(Type) AS Current_Version FROM      user_reviews WHERE      App = 'Fate/Grand Order';
SELECT    SUM(Installs) AS Total_Installs,   (SUM(CASE WHEN Sentiment = 'Positive' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS Positive_Sentiment_Percentage FROM    playstore   JOIN user_reviews ON playstore.App = user_reviews.App WHERE    App = 'FREEDOME VPN Unlimited anonymous Wifi Security';
SELECT MAX(Sentiment_Polarity), Genres FROM user_reviews WHERE App = 'Honkai Impact 3rd'
SELECT p.Rating, COUNT(*) as Dislikes FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.App = 'Dragon Ball Legends' AND ur.Sentiment_Polarity < -0.5 GROUP BY p.Rating;
SELECT p.App, ur.Translated_Review FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.Category = 'EDUCATION' AND p.Rating = 1;
SELECT p.App, ur.Translated_Review FROM playstore p JOIN user_reviews ur ON p.App = ur.App WHERE p.Type = 'Free' AND p.Category = 'SPORTS';
SELECT AVG(Sentiment_Polarity)  FROM user_reviews  WHERE App IN (SELECT App FROM playstore WHERE Genres LIKE '%Role Playing%' AND Content Rating = 'Teen');
SELECT    AVG(p.Rating) AS Average_Rating,   ROUND(MULTIPLY(DIVIDE((SUM(ur.Sentiment = 'Positive')), (COUNT(*)), 100), 2) AS Positive_Sentiment_Percentage FROM    playstore p   JOIN user_reviews ur ON p.App = ur.App WHERE    p.Genres LIKE '%Racing%'
SELECT r.State, COUNT(st.SalesTeamID) AS Max_Sales_Team FROM Sales_Team st JOIN Regions r ON st.Region = r.StateCode GROUP BY r.State ORDER BY Max_Sales_Team DESC LIMIT 1;
SELECT *  FROM Customers  WHERE Customer Names LIKE '%Group%';
SELECT AVG(Median_Income)  FROM Store_Locations  WHERE Type = 'City';
SELECT st.SalesTeam, r.Region FROM SalesTeam st JOIN SalesOrders so ON st.SalesTeamID = so._SalesTeamID JOIN StoreLocations sl ON so._StoreID = sl.StoreID JOIN Regions r ON sl.StateCode = r.StateCode WHERE so.OrderNumber = 'SO - 000137';
SELECT so.OrderNumber, p.ProductName FROM SalesOrders so JOIN Products p ON so._ProductID = p.ProductID JOIN SalesTeam st ON so._SalesTeamID = st.SalesTeamID WHERE st.SalesTeam = 'Douglas Tucker';
SELECT c.CustomerNames FROM Sales Orders so JOIN Customers c ON so._CustomerID = c.CustomerID WHERE so.OrderDate BETWEEN '2020-01-01' AND '2020-12-31' AND so._ProductID IN (SELECT p.ProductID FROM Products p WHERE p.ProductName = 'Cocktail Glasses') AND so.Discount Applied = (SELECT MAX(so1.Discount Applied) FROM Sales Orders so1                           WHERE so1.OrderDate BETWEEN '2020-01-01' AND '2020-12-31'                           AND so1._ProductID = so._ProductID);
SELECT so.OrderNumber, sl.City Name FROM Sales Orders so JOIN Store Locations sl ON so._StoreID = sl.StoreID WHERE so.Sales Channel = 'In-Store';
SELECT c.CustomerNames, so.OrderDate FROM Sales Orders so JOIN Customers c ON so._CustomerID = c.CustomerID WHERE so.UnitCost = (SELECT MAX(UnitCost) FROM Sales Orders);
SELECT OrderNumber FROM Sales Orders WHERE SUBSTR(OrderDate, -2) = '18' AND _CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names = 'Rochester Ltd') ORDER BY OrderNumber;
SELECT    so.OrderNumber,    p.ProductName,    st.SalesTeam FROM    SalesOrders so   INNER JOIN Products p ON so._ProductID = p.ProductID   INNER JOIN SalesTeam st ON so._SalesTeamID = st.SalesTeamID WHERE    so.WarehouseCode = 'WARE-NMK1003';
SELECT c.CustomerNames  FROM Customers c  JOIN Sales Orders s ON c._CustomerID = s._CustomerID  WHERE s.Sales Channel = 'Online';
SELECT AVG(net_profit)  FROM      (SELECT Unit Price - Unit Cost AS net_profit       FROM Sales Orders       JOIN Products ON Sales Orders._ProductID = Products.ProductID       WHERE Products.Product Name = 'Bakeware') AS subquery;
SELECT st.SalesTeam FROM SalesTeam st JOIN SalesOrders so ON st.SalesTeamID = so._SalesTeamID WHERE so.OrderDate LIKE '%/20' ORDER BY (so.Unit Price - so.Unit Cost) DESC LIMIT 1;
SELECT      SO.OrderNumber,      (SO.UnitPrice - SO.UnitCost) AS NetProfit FROM      SalesOrders SO JOIN      SalesTeam ST ON SO._SalesTeamID = ST.SalesTeamID WHERE      ST.SalesTeam = 'Joshua Bennett';
SELECT DIVIDE(COUNT(OrderNumber),                COUNT(OrderNumber where SUBSTR(ShipDate, -2) = '18'))  AS percentage FROM Sales Orders WHERE SUBSTR(ShipDate, 1, 2) = '07-2018' AND _ProductID IN (SELECT ProductID from Products where Product Name = 'Home Fragrances');
SELECT CustomerID, Customer Names FROM Customers WHERE Customer Names LIKE 'W%';
SELECT ProductID, ProductName FROM Products WHERE ProductName LIKE '%Outdoor%';
SELECT COUNT(*) FROM Sales Orders WHERE Sales Channel = 'In-Store' AND Discount Applied = 0.4 AND WarehouseCode = 'WARE-NMK1003';
SELECT s.City Name, s.Population, s.Household Income FROM Store Locations s JOIN Regions r ON s.StateCode = r.StateCode WHERE r.State = 'Florida' ORDER BY s.Population DESC LIMIT 1;
SELECT s.StoreID, s.City Name, r.State FROM Store Locations s JOIN Regions r ON s.StateCode = r.StateCode WHERE s.County = 'Allen';
SELECT StoreID, City Name, State, Region FROM Store Locations WHERE Type IN ('Borough', 'CDP') GROUP BY StoreID, City Name, State, Region HAVING COUNT(StoreID) = (   SELECT COUNT(StoreID)   FROM Store Locations   WHERE Type IN ('Borough', 'CDP')   GROUP BY Type   HAVING COUNT(StoreID) = (     SELECT COUNT(StoreID)     FROM Store Locations     WHERE Type IN ('Borough', 'CDP')     GROUP BY Type     ORDER BY COUNT(StoreID) LIMIT 1   ) );
SELECT r.State, st.Sales Team FROM Sales Team st JOIN Regions r ON st.Region = r.StateCode WHERE st.SalesTeamID = 18;
SELECT      DIVIDE(         COUNT(so.OrderNumber)          WHERE so.Sales_Channel = 'In-Store'          AND cu.Customer_Names = 'Medline'     )      /     COUNT(so.OrderNumber)      WHERE cu.Customer_Names = 'Medline'     AS percentage FROM      Sales_Orders so     INNER JOIN Customers cu ON so._CustomerID = cu.CustomerID;
SELECT c.CustomerNames,         DATE_SUB(s.DeliveryDate, s.OrderDate) AS DeliveryPeriod FROM Sales Orders s JOIN Products p ON s._ProductID = p.ProductID JOIN Customers c ON s._CustomerID = c.CustomerID WHERE p.ProductName = 'Bedroom Furniture'       AND s.SalesChannel = 'Wholesale'       AND SUBSTR(s.OrderDate, -2) = '19';
SELECT c.Customer Names, p.Product Name FROM Customers c JOIN Sales Orders so ON c.CustomerID = so._CustomerID JOIN Products p ON so._ProductID = p.ProductID WHERE (so.Unit Price - so.Unit Cost) > 3800;
SELECT sl.City_Name FROM Store_Locations sl JOIN Regions r ON sl.StateCode = r.StateCode WHERE r.State = 'California' AND sl.Water_Area = 0;
SELECT      DIVIDE(COUNT(so.OrderNumber),             (SELECT COUNT(*) FROM Sales Orders))      AS percentage FROM      Sales Orders so WHERE      so._SalesTeamID IN (SELECT st.SalesTeamID FROM Sales Team st WHERE st.Sales Team = 'Carlos Miller');
SELECT COUNT(so.OrderNumber) AS Platters_Count,         COUNT(so.OrderNumber) AS Serveware_Count FROM Sales Orders so JOIN Products p ON so._ProductID = p.ProductID WHERE p.ProductName IN ('Platters', 'Serveware');
SELECT SUM(net_profit) AS total_net_profit FROM Sales Orders WHERE _StoreID IN (   SELECT StoreID   FROM Store Locations   WHERE City Name IN (     SELECT City Name     FROM Store Locations     GROUP BY City Name     ORDER BY MAX(Median Income) DESC   ) )
SELECT COUNT(so.OrderNumber) FROM Sales Orders so JOIN Sales Team st ON so._SalesTeamID = st.SalesTeamID JOIN Regions r ON st.Region = r.State WHERE r.Region = 'South' AND st.SalesTeamID BETWEEN 1 AND 9;
SELECT COUNT(*)  FROM Sales Orders  WHERE OrderDate = '2018-05-31';
SELECT OrderNumber FROM Sales Orders WHERE ShipDate = '6/13/2018';
SELECT COUNT(*) FROM Sales Orders WHERE Order Quantity > 5;
Error: 第 2609 个样本有 0 个SQL。
Error: 第 2610 个样本有 0 个SQL。
SELECT p.ProductName FROM SalesOrders so JOIN Products p ON so._ProductID = p.ProductID WHERE so.UnitCost = 781.22;
SELECT ShipDate FROM Sales Orders WHERE _ProductID IN (   SELECT ProductID   FROM Products   WHERE ProductName = 'Cookware' ) AND _SalesTeamID IN (   SELECT SalesTeamID   FROM Sales Team   WHERE Region IN (     SELECT StateCode     FROM Regions   ) );
SELECT COUNT(*)  FROM Sales Orders  WHERE ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Furniture Cushions')  AND SUBSTR(OrderDate, -2) = '18';
SELECT p.ProductName FROM SalesOrders so JOIN Products p ON so._ProductID = p.ProductID WHERE so.DiscountApplied = 0.1;
SELECT AVG(net_profit)  FROM (   SELECT (Unit Price - Unit Cost) AS net_profit    FROM Sales Orders    WHERE Sales Channel = 'Distributor'    AND _ProductID IN (     SELECT ProductID      FROM Products      WHERE Product Name = 'Phones'   ) ) AS subquery;
SELECT AVG(net_profit)  FROM (   SELECT (Unit Price - Unit Cost) AS net_profit    FROM Sales Orders    WHERE _ProductID IN (SELECT ProductID FROM Products WHERE Product Name = 'Bar Tools')    AND Order Quantity > 5 ) AS subquery;
Error: 第 2617 个样本有 0 个SQL。
Error: 第 2618 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Sales Orders  WHERE _CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names = 'Medsep Group');
SELECT DISTINCT Discount Applied FROM Sales Orders WHERE _CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names LIKE '%Ole Group%');
SELECT c.CustomerNames FROM Sales Orders so JOIN Customers c ON so._CustomerID = c.CustomerID WHERE so.ShipDate = '7/8/18';
SELECT COUNT(*) FROM Sales Orders WHERE _CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names = 'Ei') AND Order Quantity > 4;
SELECT COUNT(*)  FROM Sales Orders  WHERE _CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names = 'Pacific Ltd')  AND Discount Applied = 0.05;
SELECT Customers.CustomerNames  FROM Sales Orders  JOIN Customers ON Sales Orders._CustomerID = Customers.CustomerID  WHERE Sales Orders._UnitCost > 4000;
SELECT StoreID, CONCAT(City Name, ', ', State, ', ', Latitude, '° N, ', Longitude, '° E') AS DetailedPosition FROM Store Locations WHERE City Name = 'Birmingham';
SELECT City_Name FROM Store_Locations WHERE Population = (SELECT MAX(Population) FROM Store_Locations);
SELECT COUNT(*)  FROM Store Locations  WHERE StateCode IN (SELECT StateCode                      FROM Regions                      WHERE State = 'California')    AND Type = 'CDP';
SELECT SO.OrderNumber, P.ProductName FROM SalesOrders SO JOIN Products P ON SO._ProductID = P.ProductID WHERE SO.UnitPrice = (SELECT MIN(UnitPrice) FROM SalesOrders);
SELECT p.ProductName, SUM(Unit Price - Unit Cost) AS NetProfit FROM Sales Orders JOIN Products p ON _ProductID = ProductID WHERE OrderDate LIKE '%/19' GROUP BY p.ProductName ORDER BY NetProfit DESC LIMIT 1;
SELECT AVG(Unit Price) FROM Sales Orders WHERE _ProductID IN (SELECT ProductID FROM Products WHERE Product Name = 'Cookware');
SELECT st.SalesTeam FROM Sales Team st JOIN Sales Orders so ON st._SalesTeamID = so._SalesTeamID WHERE so.OrderDate = '5/31/18';
SELECT st.SalesTeam, MIN(count)  FROM      (SELECT _SalesTeamID, COUNT(*) as count       FROM Sales Orders       WHERE SUBSTR(OrderDate, -2) = '19'       GROUP BY _SalesTeamID) as temp  JOIN Sales Team st ON temp._SalesTeamID = st.SalesTeamID  GROUP BY st.SalesTeam  ORDER BY MIN(count) LIMIT 1;
SELECT SUBSTR(OrderDate, -2) AS Year, COUNT(OrderNumber) AS TotalOrders FROM Sales Orders WHERE _SalesTeamID IN (SELECT SalesTeamID FROM Sales Team WHERE Sales Team = 'George Lewis') AND SUBSTR(OrderDate, -2) IN ('18', '19', '20') GROUP BY SUBSTR(OrderDate, -2) ORDER BY TotalOrders DESC LIMIT 1;
SELECT    DIVIDE(COUNT(so.OrderNumber)           WHERE so.County = 'Orange County'           AND SUBSTR(so.OrderDate, -2) = '18'),    COUNT(so.OrderNumber)    WHERE SUBSTR(so.OrderDate, -2) = '18')    AS percentage
SELECT OrderNumber FROM Sales Orders WHERE UnitPrice = (SELECT MAX(UnitPrice) FROM Sales Orders);
SELECT _SalesTeamID FROM Sales Orders WHERE SUBSTR(OrderDate, -2) = '18' GROUP BY _SalesTeamID ORDER BY COUNT(OrderNumber) DESC LIMIT 1;
SELECT UnitCost FROM SalesOrders WHERE OrderNumber = 'SO - 000103';
SELECT COUNT(so.OrderNumber) FROM Sales Orders so JOIN Store Locations sl ON so._StoreID = sl.StoreID WHERE SUBSTR(so.OrderDate, -2) = '20' AND sl.StateCode = 'AZ' AND sl.County = 'Maricopa';
SELECT s.Latitude, s.Longitude FROM Store Locations s WHERE s.StoreID = (   SELECT _StoreID   FROM Sales Orders   WHERE OrderNumber = 'SO - 000115' );
SELECT      City_Name,      COUNT(OrderNumber) AS Total_Orders FROM      Sales_Orders WHERE      OrderDate BETWEEN '2019-01-01' AND '2019-12-31' GROUP BY      City_Name
SELECT CustomerNames FROM Customers WHERE _CustomerID IN (   SELECT _CustomerID   FROM Sales Orders   WHERE SUBSTR(OrderDate, -2) = '18'   GROUP BY _CustomerID   HAVING COUNT(OrderNumber) > 3 )
SELECT COUNT(so.OrderNumber) FROM Sales Orders so WHERE so._CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names = 'Medsep Group') AND SUBSTR(so.OrderDate, -2) IN ('18', '19', '20');
SELECT c.CustomerNames FROM Customers c JOIN Sales Orders so ON c._CustomerID = so._CustomerID WHERE so.OrderQuantity > 5 AND so.OrderDate = '2018-06-01';
SELECT      DIVIDE(COUNT(so.OrderNumber),             (SELECT COUNT(*) FROM Sales Orders so WHERE so._SalesTeamID = (SELECT st.SalesTeamID FROM Sales Team st WHERE st.Sales Team = 'Stephen Payne'))) * 100 AS percentage FROM      Sales Orders so WHERE      so._SalesTeamID = (SELECT st.SalesTeamID FROM Sales Team st WHERE st.Sales Team = 'Stephen Payne')      AND so._ProductID IN (SELECT p.ProductID FROM Products p)      AND so._CustomerID IN (SELECT c.CustomerID FROM Customers c)      AND so._StoreID IN (SELECT sl.StoreID FROM Store Locations sl)      AND so._SalesTeamID IN (SELECT st.SalesTeamID FROM Sales Team st)      AND so.Net Profit > 1000;
SELECT COUNT(DISTINCT _SalesTeamID)  FROM Sales Orders  WHERE _SalesTeamID IN (SELECT SalesTeamID FROM Sales Team WHERE Region = 'Northeast');
SELECT s.City Name, s.Latitude, s.Longitude FROM Store Locations s WHERE s.County = 'Maricopa' AND s.Type = 'City';
SELECT OrderNumber FROM Sales Orders WHERE UnitCost = (SELECT MAX(UnitCost) FROM Sales Orders);
SELECT ProductName FROM Products WHERE ProductID BETWEEN 30 AND 40;
SELECT DIVIDE(MAX(Unit_Cost), MIN(Unit_Cost)) AS Unit_Cost_Ratio FROM Sales Orders;
SELECT p.ProductName FROM Products p JOIN Sales Orders so ON p.ProductID = so._ProductID WHERE SUBSTR(so.OrderDate, -2) = '18' GROUP BY p.ProductName ORDER BY COUNT(so.OrderNumber) DESC LIMIT 1;
SELECT SUM(Order_Quantity) FROM Sales_Orders WHERE _SalesTeamID IN (SELECT SalesTeamID FROM Sales_Team WHERE Sales_Team = 'Adam Hernandez');
SELECT so.OrderNumber FROM Sales Orders so JOIN Store Locations sl ON so._StoreID = sl.StoreID WHERE sl.City Name = 'Daly City';
SELECT COUNT(DISTINCT OrderNumber)  FROM Sales Orders  WHERE _CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names = 'Rochester Ltd');
SELECT OrderNumber FROM Sales Orders WHERE _CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names = 'Qualitest') ORDER BY OrderQuantity DESC LIMIT 1;
SELECT      so.OrderNumber,      p.ProductName  FROM      Sales Orders so  JOIN      Products p ON so._ProductID = p.ProductID  WHERE      so.SalesChannel = 'In-Store';
Error: 第 2656 个样本有 0 个SQL。
SELECT p.ProductName FROM SalesOrders so JOIN StoreLocations sl ON so._StoreID = sl.StoreID JOIN Products p ON so._ProductID = p.ProductID WHERE sl.StateCode = 'AZ' AND sl.County = 'Maricopa' GROUP BY p.ProductName ORDER BY MIN(so.OrderQuantity) LIMIT 1;
SELECT OrderNumber FROM Sales Orders WHERE _SalesTeamID IN (   SELECT SalesTeamID   FROM Sales Team   WHERE Sales Team = 'Samuel Fowler' )
SELECT COUNT(*)  FROM Sales Orders  WHERE _ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Baseball')  AND OrderDate LIKE '12/%/17';
SELECT    DIVIDE(SUM(Order Quantity), 12)  FROM    Sales Orders  WHERE    Product Name = 'Ornaments'    AND OrderDate LIKE '%/18';
SELECT      DIVIDE(SUM(Order Quantity),             (SELECT SUM(Order Quantity) FROM Sales Orders WHERE SUBSTR(OrderDate, -2) = '18'))      AS percentage FROM      Sales Orders WHERE      City Name = 'Burbank'      AND SUBSTR(OrderDate, -2) = '18';
SELECT COUNT(OrderNumber) -         (SELECT COUNT(OrderNumber) FROM Sales Orders WHERE WarehouseCode = 'WARE-NBV1002')  FROM Sales Orders  WHERE WarehouseCode = 'WARE-MKL1006';
SELECT p.ProductName  FROM Sales Orders so  JOIN Products p ON so._ProductID = p.ProductID  WHERE so._CustomerID IN (SELECT CustomerID FROM Customers WHERE CustomerNames = 'Sundial')  AND so.DeliveryDate LIKE '%/21';
SELECT s.StoreID, r.Region FROM Store Locations s JOIN Regions r ON s.StateCode = r.StateCode WHERE r.State = 'Michigan';
SELECT COUNT(so.OrderNumber) FROM Sales Orders so WHERE so._CustomerID IN (   SELECT c.CustomerID   FROM Customers c   WHERE c.Customer Names IN ('Apollo Ltd', 'Pacific Ltd') )
SELECT _StoreID FROM Sales Orders WHERE _StoreID IN (   SELECT StoreID   FROM Store Locations   WHERE City Name BETWEEN 'Aurora (Township)' AND 'Babylong (Town)' ) GROUP BY _StoreID ORDER BY COUNT(OrderNumber) DESC LIMIT 1;
SELECT c.CustomerNames, p.ProductName FROM Sales Orders so JOIN Customers c ON so._CustomerID = c.CustomerID JOIN Products p ON so._ProductID = p.ProductID JOIN Sales Team st ON so._SalesTeamID = st.SalesTeamID WHERE st.SalesTeam = 'Anthony Torres' AND so.SalesChannel = 'Distributor';
SELECT c.CustomerNames, c.CustomerID FROM Customers c JOIN Sales Orders so ON c.CustomerID = so._CustomerID WHERE so.Sales Channel = 'Online' AND SUM(so.Unit Price - so.Unit Cost) > 5000;
SELECT SUM(Unit Price - Unit Cost)  FROM Sales Orders  WHERE _ProductID IN (SELECT ProductID FROM Products WHERE Product Name = 'Floral')  AND DeliveryDate LIKE '%/21';
SELECT COUNT(so.OrderNumber) FROM Sales Orders so JOIN Store Locations sl ON so._StoreID = sl.StoreID WHERE sl.Population BETWEEN 3000000 AND 4000000;
SELECT p.ProductName FROM SalesOrders so JOIN StoreLocations sl ON so._StoreID = sl.StoreID JOIN Products p ON so._ProductID = p.ProductID WHERE so.SalesChannel = 'Wholesale' AND sl.TimeZone = 'Pacific/Honolulu';
SELECT SO.OrderNumber, P.ProductName FROM SalesOrders SO JOIN Products P ON SO._ProductID = P.ProductID WHERE SO.OrderDate = '6/5/18';
SELECT AVG(COUNT(DISTINCT SO.OrderNumber)) AS Average_Yearly_Order FROM Sales Orders SO WHERE SO._CustomerID IN (SELECT CustomerID FROM Customers WHERE Customer Names = 'Weimei Corp') AND SUBSTR(SO.OrderDate, -2) IN ('18', '19', '20');
SELECT      AVG(COUNT(DISTINCT OrderNumber)) / 12 AS avg_monthly_order,     (COUNT(DISTINCT OrderNumber) WHERE WarehouseCode = 'WARE-NMK1003') / COUNT(DISTINCT OrderNumber) * 100 AS percentage,     COUNT(DISTINCT OrderNumber) WHERE _ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Floor Lamps') AS num_orders_floor_lamps FROM      Sales Orders WHERE      SUBSTR(OrderDate, -2) = '19' AND WarehouseCode = 'WARE-NMK1003';
SELECT ProcuredDate FROM Sales Orders WHERE _CustomerID = 11;
SELECT COUNT(*) FROM Sales Orders WHERE Sales Channel = 'Distributor' AND Order Quantity = (SELECT MIN(Order Quantity) FROM Sales Orders WHERE Sales Channel = 'Distributor');
SELECT s._SalesTeamID FROM Sales Orders s WHERE s.Sales Channel = 'In-Store' AND s.Discount Applied = 0.1;
SELECT COUNT(*) FROM Store Locations WHERE City Name = 'Brooklyn' AND Type = 'Borough' AND Population < 3000000;
SELECT COUNT(DISTINCT s.State) FROM Regions r JOIN Store Locations s ON r.StateCode = s.StateCode WHERE r.Region = 'Midwest';
SELECT p.ProductName, SUM((p.UnitPrice - p.UnitCost) * so.OrderQuantity) AS NetProfit FROM SalesOrders so JOIN Products p ON so._ProductID = p.ProductID GROUP BY p.ProductName ORDER BY NetProfit DESC LIMIT 10;
SELECT CustomerNames FROM Customers WHERE _CustomerID IN (   SELECT _CustomerID   FROM Sales Orders   WHERE OrderQuantity = 3 AND OrderDate LIKE '2/%/18' )
SELECT st.SalesTeam FROM Sales Team st JOIN Sales Orders so ON st.SalesTeamID = so._SalesTeamID JOIN Customers c ON so._CustomerID = c.CustomerID WHERE c.Customer Names = 'Apotheca, Ltd';
Error: 第 2683 个样本有 0 个SQL。
Error: 第 2684 个样本有 0 个SQL。
SELECT p.ProductName, c.CustomerNames FROM Sales Orders so JOIN Customers c ON so._CustomerID = c.CustomerID JOIN Products p ON so._ProductID = p.ProductID WHERE so.OrderDate = '10/21/18' AND so.DeliveryDate = '11/21/19';
SELECT COUNT(*) FROM Store Locations JOIN Sales Orders ON Store Locations._StoreID = Sales Orders._StoreID WHERE ProcuredDate = '10/27/18' AND State = 'Oregon';
SELECT      Sales_Channel FROM      Sales_Orders WHERE      _StoreID IN (         SELECT              StoreID         FROM              Store_Locations         ORDER BY              Median_Income DESC         LIMIT 3     ) GROUP BY      Sales_Channel ORDER BY      COUNT(*) DESC;
SELECT st.SalesTeamID, st.SalesTeam FROM (   SELECT _SalesTeamID, SUM((Unit Price) - Unit Cost) AS NetProfit   FROM Sales Orders   GROUP BY _SalesTeamID   ORDER BY NetProfit DESC ) AS NetProfitByTeam JOIN Sales Team st ON NetProfitByTeam._SalesTeamID = st.SalesTeamID LIMIT 5;
SELECT MAX(Discount Applied) FROM Sales Orders WHERE _StoreID IN (   SELECT StoreID   FROM Store Locations   WHERE StateCode IN (     SELECT StateCode     FROM Regions     WHERE State = 'Colorado'   ) AND Land Area = 111039036 )
Error: 第 2690 个样本有 0 个SQL。
SELECT Type FROM Store Locations WHERE StateCode IN (SELECT StateCode FROM Regions WHERE Region = 'South') GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1;
SELECT r.State, r.Region FROM Regions r JOIN (   SELECT WarehouseCode, Region, COUNT(*) AS MaxCount   FROM Sales Orders   GROUP BY WarehouseCode, Region   ORDER BY MaxCount DESC   LIMIT 1 ) s ON r.StateCode = s.Region WHERE s.WarehouseCode = 'WARE-MKL1006';
SELECT City_Name FROM Store_Locations WHERE StoreID = (   SELECT _StoreID   FROM Sales_Orders   WHERE Unit_Price = (     SELECT MAX(Unit_Price)     FROM Sales_Orders   ) );
Error: 第 2694 个样本有 0 个SQL。
SELECT COUNT(*) FROM Store Locations WHERE StateCode IN (SELECT StateCode FROM Regions WHERE State = 'Washtenaw County') AND _StoreID IN (SELECT _StoreID FROM Sales Orders WHERE Order Quantity = 1 AND Sales Channel = 'Distributor');
SELECT p.ProductName FROM Products p JOIN SalesOrders so ON p.ProductID = so._ProductID JOIN StoreLocations sl ON so._StoreID = sl.StoreID WHERE sl.CityName = 'Santa Clarita' GROUP BY p.ProductName ORDER BY COUNT(p.ProductName) ASC LIMIT 1;
SELECT s.Latitude, s.Longitude FROM Store Locations s JOIN Sales Orders so ON s.StoreID = so._StoreID WHERE so.WarehouseCode = 'WARE-PUJ1005' GROUP BY s.Latitude, s.Longitude ORDER BY COUNT(so.WarehouseCode) ASC LIMIT 1;
SELECT      (SUM(CASE WHEN _StoreID IN (SELECT StoreID FROM Store Locations WHERE City Name = 'New York') AND OrderDate = '4/4/20' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS Percentage FROM      Sales Orders
SELECT AVG(LandArea)  FROM StoreLocations  WHERE StoreID IN (   SELECT _StoreID    FROM SalesOrders    WHERE _ProductID IN (     SELECT ProductID      FROM Products      WHERE UnitPrice = 998.30   ) )
SELECT AVG(Household Income) FROM Store Locations WHERE State = 'New Hampshire' AND Type = 'city';
SELECT COUNT(DISTINCT SalesTeamID) FROM Sales Team WHERE Region IN (SELECT Region FROM Regions WHERE State LIKE '%Midwest%');
SELECT OrderNumber FROM Sales Orders WHERE OrderDate > '1/1/2018';
SELECT COUNT(DISTINCT Sales_Channel) FROM Sales_Orders JOIN Sales_Team ON _SalesTeamID = Sales_TeamID JOIN Regions ON Sales_Team.Region = Regions.Region WHERE Regions.State = 'Midwest';
SELECT s._SalesTeamID, MAX(so.UnitPrice) AS HighestUnitPrice FROM SalesOrders so GROUP BY s._SalesTeamID ORDER BY HighestUnitPrice DESC LIMIT 1;
SELECT r.State, r.Region FROM Regions r JOIN (   SELECT s._SalesTeamID, COUNT(*) AS DiscountCount   FROM Sales Orders s   WHERE s.Sales Channel = 'Online'   GROUP BY s._SalesTeamID   ORDER BY COUNT(*) DESC   LIMIT 1 ) AS DiscountedTeams ON r.SalesTeamID = DiscountedTeams._SalesTeamID
SELECT so.OrderNumber, so.OrderDate FROM Sales Orders so WHERE so._CustomerID IN (SELECT c.CustomerID FROM Customers c WHERE c.CustomerNames = 'Apollo Ltd') ORDER BY so.UnitPrice DESC LIMIT 1;
SELECT SO.OrderNumber, SO.WarehouseCode FROM Sales Orders SO JOIN Customers C ON SO._CustomerID = C.CustomerID WHERE C.CustomerNames = 'Elorac, Corp';
SELECT c.Customer Names FROM Customers c JOIN Sales Orders so ON c.CustomerID = so._CustomerID JOIN Products p ON so._ProductID = p.ProductID WHERE p.Product Name = 'Cocktail Glasses' AND so.Sales Channel = 'Online';
SELECT s.StoreID, s.City Name, SUM((Unit Price - Unit Cost) * Order Quantity) AS NetProfit FROM Sales Orders so JOIN Store Locations s ON so._StoreID = s.StoreID JOIN Regions r ON s.StateCode = r.StateCode WHERE r.State = 'Arizona' GROUP BY s.StoreID, s.City Name ORDER BY NetProfit DESC LIMIT 1;
SELECT (UnitPrice - (SELECT UnitPrice FROM SalesOrders WHERE _ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Computers') AND _StoreID IN (SELECT StoreID FROM StoreLocations WHERE State = 'Florida'))) -        (SELECT UnitPrice FROM SalesOrders WHERE _ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Computers') AND _StoreID IN (SELECT StoreID FROM StoreLocations WHERE State = 'Texas'))
SELECT SalesTeamID FROM SalesOrders JOIN SalesTeam ON SalesOrders._SalesTeamID = SalesTeam.SalesTeamID JOIN Regions ON SalesTeam.Region = Regions.State WHERE Regions.State = 'Midwest' AND OrderQuantity > 5;
Error: 第 2712 个样本有 0 个SQL。
SELECT c.CustomerNames FROM Customers c JOIN Sales Orders so ON c._CustomerID = so._CustomerID WHERE so.OrderDate BETWEEN '2018-01-01' AND '2020-12-31' GROUP BY c.CustomerNames ORDER BY COUNT(so.OrderQuantity) DESC LIMIT 1;
SELECT    SUM(OrderQuantity) AS TotalOrderQuantity,   ROUND(SUM(CASE WHEN ProductName = 'Candles' THEN OrderQuantity ELSE 0 END) / SUM(OrderQuantity) * 100, 2) AS PercentageOfCandles FROM    SalesOrders WHERE    ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Candles');
SELECT r.State, r.Region FROM Sales Team st JOIN Sales Team s ON st.SalesTeam = s.SalesTeam JOIN Regions r ON s.Region = r.StateCode WHERE st.SalesTeam = 'Joshua Bennett';
SELECT StoreID FROM Store Locations WHERE Population = (SELECT MAX(Population) FROM Store Locations);
SELECT COUNT(DISTINCT SalesTeamID) FROM Sales Team WHERE Region = 'Midwest';
SELECT Type FROM Store Locations WHERE Type = 'City' ORDER BY Water Area DESC LIMIT 1;
SELECT COUNT(*)  FROM Sales Orders  WHERE Sales Channel = 'Online' AND SUBSTR(ShipDate, 1, 1) = '6' AND SUBSTR(ShipDate,-2) = '18';
SELECT MAX(Unit Price) AS Highest_Unit_Price,         SUM(Discount Applied) AS Total_Discount  FROM Sales Orders  WHERE Unit Price = (SELECT MAX(Unit Price) FROM Sales Orders);
SELECT p.ProductName FROM Products p WHERE p.ProductID = (   SELECT s._ProductID   FROM Sales Orders s   ORDER BY (s.UnitPrice - s.UnitCost) DESC   LIMIT 1 );
SELECT      City_Name,      AVG(Household_Income) AS Average_Household_Income FROM      Store_Locations WHERE      StateCode IN (         SELECT              StateCode         FROM              Store_Locations         GROUP BY              StateCode         ORDER BY              COUNT(StoreID) DESC         LIMIT 1     )     AND State IN (         SELECT              State         FROM              Regions         WHERE              Region = 'Northeast'     ) GROUP BY      City_Name;
SELECT r.State FROM Store Locations sl JOIN Regions r ON sl.StateCode = r.StateCode WHERE sl.Household Income < 30000;
SELECT COUNT(DISTINCT StoreID) FROM Store Locations WHERE StateCode IN (SELECT StateCode FROM Regions WHERE Region = 'West') AND Land Area < 20000000;
SELECT c.CustomerNames FROM Customers c JOIN Sales Orders so ON c.CustomerID = so._CustomerID JOIN Products p ON so._ProductID = p.ProductID WHERE (so.Unit Price - so.Unit Cost) = (   SELECT MAX(so2.Unit Price - so2.Unit Cost)   FROM Sales Orders so2 )
SELECT    s.SalesTeam,    COUNT(so.OrderNumber)  FROM    Sales Orders so    INNER JOIN Sales Team s ON so._SalesTeamID = s.SalesTeamID  WHERE    SUBSTR(so.ShipDate, -2) = '19'    AND SUBSTR(so.OrderDate, -2) = '19'  GROUP BY    s.SalesTeam  ORDER BY    COUNT(so.OrderNumber) DESC  LIMIT 1;
SELECT p.ProductName FROM Sales Orders so JOIN Products p ON so._ProductID = p.ProductID WHERE so.OrderQuantity > 5 AND so.ShipDate LIKE '5/%/19' ORDER BY (so.UnitPrice - so.UnitCost) ASC LIMIT 1;
SELECT s.Latitude, s.Longitude FROM Store Locations s JOIN Sales Orders so ON s.StoreID = so._StoreID JOIN Products p ON so._ProductID = p.ProductID WHERE (so.Unit Price - so.Unit Cost) = (SELECT MAX(so1.Unit Price - so1.Unit Cost) FROM Sales Orders so1)
SELECT      s.TeamName,      COUNT(so.OrderNumber) AS TotalOrders FROM      Sales Orders so JOIN      Sales Team s ON so._SalesTeamID = s.SalesTeamID WHERE      SUBSTR(so.ShipDate, -2) = '20' GROUP BY      s.TeamName ORDER BY      TotalOrders DESC LIMIT 1;
SELECT AVG(Count) AS Average_Shipped_Orders FROM (   SELECT COUNT(DISTINCT OrderNumber) AS Count   FROM Sales Orders   WHERE _SalesTeamID IN (     SELECT SalesTeamID     FROM Sales Team     WHERE Sales Team = 'Carl Nguyen'   ) AND SUBSTR(ShipDate, -2) IN ('18', '19', '20') ) AS Subquery;
SELECT      p.ProductName,      SUM(so.DiscountApplied) AS TotalDiscount FROM      SalesOrders so JOIN      Products p ON so._ProductID = p.ProductID GROUP BY      p.ProductName ORDER BY      SUM(so.UnitPrice - so.UnitCost) DESC LIMIT 1;
SELECT c.CustomerNames FROM Customers c JOIN Sales Orders s ON c._CustomerID = s._CustomerID ORDER BY (s.UnitPrice * s.OrderQuantity - s.DiscountApplied) DESC LIMIT 3;
SELECT      Sales_Channel FROM      Sales_Orders WHERE      Substr(OrderDate, 1, 1) = '1'      AND Substr(OrderDate, -2) = '20' GROUP BY      Sales_Channel ORDER BY      COUNT(OrderNumber) DESC LIMIT 1;
SELECT p.ProductName FROM SalesOrders JOIN Products p ON SalesOrders._ProductID = p.ProductID WHERE OrderNumber = 'SO - 0005951';
SELECT s.City Name, st.Sales Team FROM Store Locations s JOIN Sales Orders so ON s.StoreID = so._StoreID JOIN Sales Team st ON so._SalesTeamID = st.SalesTeamID WHERE so.OrderNumber = 'SO - 0001004';
SELECT c.CustomerID, c.Customer Names, SUM((p.Unit Price - p.Unit Cost) * so.Order Quantity) AS NetProfit FROM Sales Orders so JOIN Store Locations sl ON so._StoreID = sl.StoreID JOIN Products p ON so._ProductID = p.ProductID JOIN Customers c ON so._CustomerID = c.CustomerID WHERE sl.City Name = 'Gilbert' AND sl.State = 'Arizona' AND so.ProcuredDate LIKE '%/19' GROUP BY c.CustomerID, c.Customer Names ORDER BY NetProfit DESC LIMIT 1;
Error: 第 2737 个样本有 0 个SQL。
SELECT AVG(Household Income)  FROM Store Locations  WHERE City Name = 'Glendale';
SELECT MAX(Discount Applied) FROM Sales Orders WHERE Substr(OrderDate, -2) = '20';
SELECT COUNT(*) AS ConsecutiveGames FROM matchs WHERE season = '2008' AND AwayTeam = 'Ebbsfleet' AND FTR = 'D' ORDER BY Date LIMIT 1;
SELECT DIVIDE(COUNT(Division), COUNT(Division)) as percentage FROM divisions WHERE country = 'England';
SELECT      DIVIDE(COUNT(CASE WHEN FTR = 'H' THEN 1 ELSE NULL END), COUNT(Div)) as percentage_won,     DIVIDE(COUNT(CASE WHEN FTR = 'A' THEN 1 ELSE NULL END), COUNT(Div)) as percentage_lost,     DIVIDE(SUM(CASE WHEN FTR = 'D' THEN 1 ELSE 0 END), COUNT(Div)) as percentage_drawn FROM      matchs WHERE      HomeTeam = 'Cittadella';
SELECT name FROM matchs WHERE season = '2010' AND AwayTeam = 'Caen' AND FTR = 'A' GROUP BY name ORDER BY COUNT(*)/(SELECT COUNT(*) FROM matchs WHERE season = '2010' AND AwayTeam = 'Caen') DESC LIMIT 1;
SELECT DIVIDE(COUNT(Div = 'F1', Date = '2005/07/30'), COUNT(Div, Date = '2005/07/30')) as percentage FROM matchs WHERE Date = '2005/07/30' AND Div = 'F1';
SELECT      DIVIDE(COUNT(Div where FTR = 'D' and (HomeTeam = 'Sassuolo' or AwayTeam = 'Sassuolo')),             COUNT(Div where (HomeTeam = 'Sassuolo' or AwayTeam = 'Sassuolo'))) * 100 as percentage FROM      matchs
SELECT      DIVIDE(COUNT(Div), COUNT(Div)) AS percentage FROM      matchs WHERE      season = 2017 AND FTAG = '2';
SELECT DISTINCT HomeTeam, AwayTeam FROM matchs WHERE Div = 'E2' AND name = 'EFL League One';
SELECT COUNT(*)  FROM matchs  WHERE Div IN (SELECT id FROM divisions WHERE country = 'Greece')  AND FTAG >= 4;
SELECT COUNT(*)  FROM matchs  WHERE Div = (SELECT id FROM divisions WHERE name = 'Scottish Championship' AND country = 'Scotland' AND season = '2019')  AND FTAG = 2 AND FTHG = 2;
SELECT HomeTeam, season  FROM matchs  WHERE Div IN (SELECT name FROM divisions WHERE country = 'Scotland')  AND HomeTeam IN (SELECT name FROM divisions WHERE country = 'Scotland')  AND FTHG = 10;
SELECT name, COUNT(Div) as wins,         DIVIDE(COUNT(Div), (SELECT COUNT(*) FROM matchs WHERE name = 'LaLiga' AND country = 'Spain' AND season = 2017 AND FTR = 'H')) as percentage FROM divisions JOIN matchs ON divisions.name = matchs.name AND divisions.country = matchs.country AND divisions.division = matchs.Div WHERE divisions.name = 'LaLiga' AND divisions.country = 'Spain' AND season = 2017 AND FTR = 'H' GROUP BY name ORDER BY wins DESC;
SELECT      d.name,      COUNT(*) as total_teams,      COUNT(*) * 100.0 / (SELECT COUNT(*) FROM matchs WHERE season = 2012 AND HomeTeam IN (SELECT id FROM divisions WHERE country = 'England') OR AwayTeam IN (SELECT id FROM divisions WHERE country = 'England')) as percentage FROM      matchs m JOIN      divisions d ON m.Div = d.id WHERE      m.season = 2012 AND (m.HomeTeam IN (SELECT id FROM divisions WHERE country = 'England') OR m.AwayTeam IN (SELECT id FROM divisions WHERE country = 'England')) GROUP BY      d.name
SELECT MAX(FTHG + FTAG) AS highest_score,         (SELECT HomeTeam FROM matchs WHERE FTHG + FTAG = MAX(FTHG + FTAG) AND season = 2021) AS team FROM matchs WHERE season = 2021;
SELECT name FROM divisions JOIN matchs ON divisions.division = matchs.Div WHERE divisions.division = 'P1' ORDER BY FTHG DESC LIMIT 1;
SELECT    SUBTRACT(DIVIDE(COUNT(Div where FTR = 'H' and season = 2010), COUNT(Div where season = 2010)),              COUNT(Div where FTR = 'A' and season = 2010),              COUNT(Div where season = 2010))    as percentage FROM    matchs GROUP BY    Div
SELECT d.name FROM divisions d JOIN (   SELECT Div, COUNT(*) as count   FROM matchs   WHERE FTR = 'D' AND season = 2008   GROUP BY Div   ORDER BY count DESC   LIMIT 1 ) m ON d.division = m.Div
SELECT HomeTeam FROM matchs WHERE Div = 'EC' AND Date = '2008-01-20' AND FTR = 'H';
SELECT d.name  FROM divisions d  JOIN matchs m ON d.division = m.Div  WHERE m.Date = '2009-09-13' AND m.HomeTeam = 'Club Brugge' AND m.AwayTeam = 'Genk';
Error: 第 2759 个样本有 0 个SQL。
SELECT d.name, d.country FROM divisions d JOIN matchs m ON d.division = m.Div WHERE m.HomeTeam = 'Hearts' AND m.AwayTeam = 'Hibernian';
SELECT AwayTeam  FROM matchs  WHERE Div = (SELECT division FROM divisions WHERE name = 'Bundesliga')  ORDER BY FTAG DESC  LIMIT 1;
SELECT DISTINCT AwayTeam FROM matchs JOIN divisions ON matchs.Div = divisions.division WHERE divisions.country = 'Italy';
SELECT d.name  FROM divisions d  JOIN (   SELECT Div, COUNT(FTR = 'D') AS count_draft_matches    FROM matchs    WHERE season = '2019'    GROUP BY Div    ORDER BY count_draft_matches LIMIT 1 ) m ON d.division = m.Div;
SELECT COUNT(*)  FROM matchs  WHERE Div = (SELECT id FROM divisions WHERE name = 'LaLiga')  AND HomeTeam = 'Valencia'  AND FTR = 'H';
SELECT COUNT(*)  FROM matchs  WHERE Div = (SELECT id FROM divisions WHERE name = 'Seria A')  AND FTR = 'D';
SELECT COUNT(*)  FROM divisions  WHERE country = 'England';
SELECT name  FROM divisions  WHERE country = 'Netherlands';
SELECT HomeTeam, AwayTeam FROM matchs WHERE Date = '2009/10/10' AND HomeTeam = 'East Fife' AND AwayTeam = 'Dumbarton' AND FTR = 'A';
SELECT FTHG, FTAG FROM matchs WHERE HomeTeam = 'Bursaspor' AND AwayTeam = 'Denizlispor' AND Date = '2009-04-26';
SELECT MIN(D.Date)  FROM matchs D  WHERE SUM(D.FTHG, D.FTAG) > 10;
SELECT HomeTeam, AwayTeam FROM matchs WHERE Div = (SELECT division FROM divisions WHERE name = 'Ligue 2') AND FTR = 'H' ORDER BY FTHG + FTAG DESC LIMIT 1;
Error: 第 2772 个样本有 0 个SQL。
SELECT COUNT(*)  FROM matchs  WHERE Div = (SELECT division FROM divisions WHERE name = 'National League')  AND Date = '2018-08-07'  AND FTR = 'D';
SELECT country FROM divisions WHERE country IN (   SELECT d.country   FROM divisions d   JOIN matchs m ON d.division = m.Div   GROUP BY d.country   ORDER BY MAX(m.FTAG) DESC   LIMIT 1 )
SELECT d.name FROM matchs m JOIN divisions d ON m.Div = d.division WHERE m.season = '2011' AND m.FTHG = '1' AND m.FTAG = '8';
SELECT d.name FROM divisions d JOIN matchs m ON d.division = m.Div WHERE m.Date = '2020/2/22' AND m.FTHG + m.FTAG > 5 GROUP BY d.name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT d.name FROM divisions d JOIN (   SELECT Div, COUNT(*) as count   FROM matchs   WHERE FTHG = '0' AND FTAG = '0'   GROUP BY Div   ORDER BY count DESC   LIMIT 1 ) m ON d.division = m.Div
SELECT COUNT(*)  FROM matchs  WHERE Div = (SELECT id FROM divisions WHERE name = 'Scottish League One')  AND HomeTeam = 'Pro Vercelli'  AND AwayTeam = 'Pescara'  AND FTHG = '5'  AND FTAG = '2';
SELECT COUNT(*)  FROM matchs  WHERE FTHG = '5' AND FTAG = '0' AND Div IN (SELECT id FROM divisions WHERE country = 'Greece');
SELECT country  FROM divisions  WHERE name = (SELECT HomeTeam FROM matchs WHERE HomeTeam = 'Bradford' UNION SELECT AwayTeam FROM matchs WHERE AwayTeam = 'Bradford');
SELECT COUNT(DISTINCT HomeTeam)  FROM matchs  WHERE Div = 'Eredivisie' AND season = '2008';
SELECT    DIVIDE(     COUNT(Division WHERE FTR = 'H' AND season = '2021' AND name = 'Bundesliga'),      COUNT(Division WHERE season = '2021' AND name = 'Bundesliga')   ) AS percentage FROM matchs JOIN divisions ON matchs.Div = divisions.division WHERE divisions.name = 'Bundesliga' AND divisions.country = 'Germany' AND season = '2021';
SELECT      DIVIDE(COUNT(Div), COUNT(Div)) as percentage FROM      matchs WHERE      FTHG = '1' AND FTAG = '1' AND name = 'Liga NOS';
SELECT COUNT(*)  FROM matchs  WHERE season = 2021 AND Div = (SELECT id FROM divisions WHERE name = 'Premier League');
SELECT HomeTeam FROM matchs WHERE Div = (SELECT id FROM divisions WHERE name = 'Bundesliga') AND Date = '2020/10/2';
SELECT HomeTeam, AwayTeam FROM matchs WHERE Div = (SELECT division_id FROM divisions WHERE name = 'Bundesliga') AND Date = '2020/10/2' AND FTR = 'H';
SELECT name  FROM divisions  JOIN matchs ON divisions.name = matchs.Div  WHERE divisions.name = 'Bundesliga'  GROUP BY name  ORDER BY MAX(COUNT(CASE WHEN FTR = 'H' THEN 1 ELSE NULL END)) DESC  LIMIT 1;
SELECT COUNT(*)  FROM matchs  WHERE Div = (SELECT id FROM divisions WHERE name = 'Bundesliga')  AND AwayTeam = 'Werder Bremen'  AND FTR = 'A';
SELECT COUNT(*)  FROM matchs  WHERE Div = (SELECT division_id FROM divisions WHERE name = 'Bundesliga')  AND season = 2021  AND FTR = 'A';
SELECT COUNT(*)  FROM matchs  WHERE Div = (SELECT id FROM divisions WHERE name = 'Bundesliga')  AND FTR = 'D';
SELECT    SUBTRACT(COUNT(FTR = 'H' WHERE season = 2021 AND name = 'Bundesliga'),             COUNT(FTR = 'H' WHERE season = 2021 AND name = 'Premier League')) AS home_victories_diff
SELECT HomeTeam  FROM matchs  WHERE Div = (SELECT division FROM divisions WHERE name = 'Bundesliga')  AND FTR = 'H'  AND season = '2021';
SELECT    HomeTeam,    COUNT(*) as HomeVictories FROM    matchs WHERE    Div = 'Bundesliga'    AND season = '2021'    AND FTR = 'H'    AND HomeTeam IN ('Augsburg', 'Mainz') GROUP BY    HomeTeam ORDER BY    HomeVictories DESC;
SELECT HomeTeam  FROM matchs  WHERE Div = (SELECT division FROM divisions WHERE name = 'Bundesliga' AND country = 'Germany')  AND season = 2021  GROUP BY HomeTeam  ORDER BY MAX(FTHG) DESC  LIMIT 1;
SELECT SUM(FTHG)  FROM matchs  WHERE Div = (SELECT id FROM divisions WHERE name = 'Bundesliga' AND country = 'Germany' AND season = 2021);
SELECT    DIVIDE(     SUM(COUNT(FTR = 'H' AND HomeTeam = 'Club Brugge' AND name = 'Premier League' AND season = 2021)),      COUNT(Division = 'Premier League' AND name = 'Premier League' AND season = 2021)   ) AS Winning_Rate FROM matchs WHERE name = 'Premier League' AND season = 2021;
SELECT (homeWon / won) * 100 AS percentage_of_winning_at_home FROM teams WHERE won > 0;
Error: 第 2798 个样本有 0 个SQL。
SELECT t.name, SUM(t.won) AS total_wins FROM teams t WHERE t.year = 2005 AND t.won > (SELECT won FROM teams WHERE year = 2004 AND tmID = t.tmID) GROUP BY t.tmID, t.name ORDER BY total_wins DESC;
SELECT t.name, t.o_fgm FROM teams t WHERE (t.homeWon - t.homeLost) / t.games > 0.8;
SELECT (COUNT(DISTINCT tmID) WHERE rank = 1 AND playoff IS NOT NULL) * 100 / (SELECT COUNT(DISTINCT tmID) FROM teams WHERE playoff IS NOT NULL) AS percentage
Error: 第 2802 个样本有 0 个SQL。
SELECT c.coachID, t.tmID FROM coaches c JOIN teams t ON c.tmID = t.tmID WHERE c.year BETWEEN 1970 AND 1980 GROUP BY c.coachID, t.tmID ORDER BY COUNT(c.coachID) DESC LIMIT 1;
SELECT c.coachID, t.name, c.won - c.homeLost FROM coaches c JOIN teams t ON c.tmID = t.tmID WHERE c.year = 2000 AND c.won > 50;
Error: 第 2805 个样本有 0 个SQL。
SELECT t.name, c.year, t.o_fgm FROM coaches c JOIN teams t ON c.tmID = t.tmID WHERE c.coachID = 'adelmri01' AND c.year BETWEEN 1990 AND 1995;
SELECT c.coachID, c.year FROM coaches c JOIN teams t ON c.tmID = t.tmID WHERE (t.won, t.games) > 0.9;
Error: 第 2808 个样本有 0 个SQL。
SELECT divisionID FROM coaches JOIN awards_coaches ON coaches.coachID = awards_coaches.coachID WHERE awards_coaches.year = 1977 AND awards_coaches.award = 'NBA Coach of the Year' AND coaches.year = 1976;
Error: 第 2810 个样本有 0 个SQL。
Error: 第 2811 个样本有 0 个SQL。
Error: 第 2812 个样本有 0 个SQL。
SELECT birthDate FROM players WHERE playerID IN (   SELECT playerID   FROM player_allstar   WHERE season_id = 1985   ORDER BY assists DESC   LIMIT 1 )
SELECT p.firstName, p.lastName FROM player_allstar pa JOIN players p ON pa.playerID = p.playerID WHERE p.birthCity = 'Winter Haven' AND pa.season_id = 1980 AND pa.minutes = 12;
SELECT COUNT(*) FROM player_allstar JOIN players ON player_allstar.playerID = players.playerID WHERE conference = 'East' AND minutes < 5 AND players.college = 'Illinois';
SELECT    p.playerID,    p.firstName,    p.lastName,    SUM(dRebounds) AS totalRebounds,    SUM(dRebounds) / (SELECT SUM(rebounds) FROM player_allstar WHERE year BETWEEN 1990 AND 2007) * 100 AS percentDefRebounds FROM    players p   JOIN player_allstar pa ON p.playerID = pa.playerID WHERE    year BETWEEN 1990 AND 2007 GROUP BY    p.playerID,    p.firstName,    p.lastName HAVING    (SUM(dRebounds) / (SELECT SUM(rebounds) FROM player_allstar WHERE year BETWEEN 1990 AND 2007) * 100) > 75;
Error: 第 2817 个样本有 0 个SQL。
Error: 第 2818 个样本有 0 个SQL。
SELECT tmID, name, MAX(homeLost) AS MaxHomeLost FROM teams JOIN coaches ON teams.tmID = coaches.tmID JOIN awards_coaches ON coaches.coachID = awards_coaches.coachID WHERE year = 1994 AND award = 'NBA Coach of the Year' GROUP BY tmID, name;
SELECT * FROM series_post WHERE year = 1996 AND round = 'CSF' AND tmIDLoser = 'LAL' AND lgID = 'NBA' AND W > 60
Error: 第 2821 个样本有 0 个SQL。
Error: 第 2822 个样本有 0 个SQL。
Error: 第 2823 个样本有 0 个SQL。
SELECT c.year, c.tmID, c.lgID, c.stint, c.won, c.lost, c.post_wins, c.post_losses FROM coaches c JOIN players_teams pt ON c.tmID = pt.tmID WHERE c.year IN (   SELECT coachID   FROM (     SELECT coachID, COUNT(tmID) AS tm_count     FROM coaches     GROUP BY coachID     HAVING COUNT(tmID) >= 2   ) AS t ) ORDER BY pt.post_losses LIMIT 1;
SELECT COUNT(*) FROM players WHERE lgID = 'ABA' AND pos IN ('C', 'F-C');
SELECT firstName FROM players WHERE lgID = 'NBA' AND pos IN ('F', 'F-C');
Error: 第 2827 个样本有 0 个SQL。
Error: 第 2828 个样本有 0 个SQL。
Error: 第 2829 个样本有 0 个SQL。
Error: 第 2830 个样本有 0 个SQL。
Error: 第 2831 个样本有 0 个SQL。
Error: 第 2832 个样本有 0 个SQL。
Error: 第 2833 个样本有 0 个SQL。
SELECT AVG(h.height)  FROM players h  JOIN players_teams pt ON h.playerID = pt.playerID  JOIN awards_players ap ON h.playerID = ap.playerID  WHERE h.highSchool LIKE '%New York%' AND ap.award = 'Most Valuable Player';
Error: 第 2835 个样本有 0 个SQL。
Error: 第 2836 个样本有 0 个SQL。
SELECT c.coachID FROM coaches c JOIN teams t ON c.tmID = t.tmID WHERE t.won / (t.won + t.lost) > 0.8;
SELECT coachID FROM coaches WHERE lgID = 'NBA' AND (MAX(year) - MIN(year)) > 10;
SELECT COUNT(DISTINCT tmID) FROM teams JOIN players_teams ON teams.tmID = players_teams.tmID JOIN players ON players_teams.playerID = players.playerID WHERE teams.year IN (SELECT year FROM teams GROUP BY year HAVING SUM(points) >= 3800) AND EXISTS (   SELECT 1   FROM awards_players   WHERE awards_players.playerID = players.playerID   AND awards_players.award = 'Most Valuable Player' )
Error: 第 2840 个样本有 0 个SQL。
Error: 第 2841 个样本有 0 个SQL。
SELECT COUNT(*)  FROM awards_coaches  WHERE year BETWEEN 1962 AND 1975;
SELECT coachID FROM awards_coaches WHERE year BETWEEN 1970 AND 1990 GROUP BY coachID HAVING COUNT(coachID) = 2;
SELECT COUNT(DISTINCT coachID) FROM coaches JOIN awards_coaches ON coaches.coachID = awards_coaches.coachID WHERE year BETWEEN 1960 AND 2011 AND award LIKE 'NBA%' AND award LIKE 'ABA%';
SELECT AVG(SUM(points) / COUNT(playerID))  FROM player_allstar  WHERE season_id = 1975 AND birthCountry = 'USA';
SELECT p.first_name, p.last_name FROM player_allstar pa JOIN players p ON pa.playerID = p.playerID WHERE pa.height > 75;
Error: 第 2847 个样本有 0 个SQL。
Error: 第 2848 个样本有 0 个SQL。
SELECT SUM(points)  FROM player_allstar  WHERE season_id BETWEEN 1960 AND 1970 AND deathDate = '0000-00-00';
SELECT p.lastName, p.firstName FROM players p JOIN players_teams pt ON p.playerID = pt.playerID WHERE p.birthDate >= '1950-01-01' AND pt.oRebounds / pt.rebounds > 0.3;
Error: 第 2851 个样本有 0 个SQL。
SELECT t.name FROM teams t JOIN players_teams pt ON t.tmID = pt.tmID JOIN player_allstar pa ON pt.playerID = pa.playerID GROUP BY t.name HAVING COUNT(pa.playerID) >= 3;
Error: 第 2853 个样本有 0 个SQL。
SELECT p.lastName, p.firstName FROM player_allstar pa JOIN players p ON pa.playerID = p.playerID JOIN players_teams pt ON p.playerID = pt.playerID JOIN teams t ON pt.tmID = t.tmID WHERE t.year BETWEEN 1937 AND 1940 AND t.tmID IN (   SELECT tmID   FROM teams   GROUP BY tmID   HAVING COUNT(rank) >= 3   AND MAX(year) BETWEEN 1937 AND 1940 )
Error: 第 2855 个样本有 0 个SQL。
SELECT COUNT(DISTINCT tmID)  FROM players_teams  WHERE year = 1937 AND points >= 500;
Error: 第 2857 个样本有 0 个SQL。
SELECT firstName, lastName, height FROM players WHERE race = 'B' ORDER BY height ASC LIMIT 3;
SELECT COUNT(*)  FROM draft  WHERE firstName = 'Joe' AND draftYear = 1970;
SELECT SUM(fg_made)  FROM player_allstar  WHERE season_id BETWEEN '1951' AND '1953'  AND first_name = 'George'  AND last_name = 'Mikan';
SELECT    CONCAT(firstName, ' ', lastName) AS player_name,    (weight / (height * height)) * 703 AS bmi FROM    players WHERE    height > 0;
SELECT name FROM teams WHERE (homeLost / (homeWon + homeLost)) = (SELECT MAX(homelost / (homeWon + homeLost)) FROM teams);
SELECT Subtract(draftYear, year(birthDate)) AS age_when_drafted FROM draft WHERE firstName = 'Alexis' AND lastName = 'Ajinca' ORDER BY draftYear LIMIT 1;
Error: 第 2864 个样本有 0 个SQL。
Error: 第 2865 个样本有 0 个SQL。
SELECT t.name FROM teams t JOIN players_teams pt ON t.tmID = pt.tmID JOIN players p ON pt.playerID = p.playerID WHERE p.college = 'UCLA' GROUP BY t.name ORDER BY COUNT(DISTINCT pt.playerID) DESC LIMIT 1;
SELECT AVG(Multiply(Divide(weight, Multiply(height, height)), 703)) AS avg_bmi FROM players JOIN player_allstar ON players.playerID = player_allstar.playerID WHERE player_allstar.games_played > 10;
SELECT t.name FROM teams t WHERE t.lgID = 'ABA' AND t.year IN (1972, 1973) ORDER BY (SUM(CASE WHEN t.year = 1973 THEN t.won ELSE t.lost END) - SUM(CASE WHEN t.year = 1972 THEN t.won ELSE t.lost END)) / SUM(CASE WHEN t.year = 1972 THEN t.won + t.lost ELSE t.won + t.lost END) DESC LIMIT 1;
SELECT p.firstName FROM players p JOIN players_teams pt ON p.playerID = pt.playerID WHERE p.lgID = 'NBL' GROUP BY p.firstName ORDER BY COUNT(pt.PF) DESC LIMIT 1;
SELECT AVG(height)  FROM players p  JOIN player_allstar pa ON p.playerID = pa.playerID  WHERE p.lgID = 'E' AND pa.conference = 'E';
SELECT coachID, SUM(won) AS total_won FROM coaches JOIN awards_coaches ON coaches.coachID = awards_coaches.coachID WHERE award = 'ABA Coach of the Year' GROUP BY coachID ORDER BY total_won DESC LIMIT 1;
SELECT teams.name FROM coaches JOIN awards_coaches ON coaches.coachID = awards_coaches.coachID WHERE awards_coaches.year = 1992 AND awards_coaches.award = "NBA Coach of the Year"
Error: 第 2873 个样本有 0 个SQL。
Error: 第 2874 个样本有 0 个SQL。
SELECT COUNT(*) FROM awards_players JOIN players ON awards_players.playerID = players.playerID WHERE award = 'Most Improved Player' AND year BETWEEN 1985 AND 1990 AND birthCountry = 'USA';
Error: 第 2876 个样本有 0 个SQL。
Error: 第 2877 个样本有 0 个SQL。
SELECT COUNT(*)  FROM awards_players  WHERE award = 'Most Valuable Player' AND year BETWEEN 1969 AND 1975;
SELECT teams.name FROM teams WHERE teams.name IN (   SELECT players_teams.tmID   FROM players_teams   GROUP BY players_teams.tmID   HAVING COUNT(DISTINCT players.birthState) >= 5 )
Error: 第 2880 个样本有 0 个SQL。
Error: 第 2881 个样本有 0 个SQL。
Error: 第 2882 个样本有 0 个SQL。
SELECT COUNT(*) FROM players WHERE year = 1950 AND EXISTS (   SELECT 1   FROM teams   WHERE teams.year = 1950 AND teams.tmID = players.tmID AND (teams.won / (teams.won + teams.lost)) < 0.2 );
Error: 第 2884 个样本有 0 个SQL。
Error: 第 2885 个样本有 0 个SQL。
Error: 第 2886 个样本有 0 个SQL。
Error: 第 2887 个样本有 0 个SQL。
SELECT p.firstName, p.lastName, p.height, p.weight FROM players p JOIN players_teams pt ON p.playerID = pt.playerID WHERE pt.ftAttempted > 0 AND pt.ftAttempted = pt.ftMade;
Error: 第 2889 个样本有 0 个SQL。
SELECT CONCAT(firstName, ' ', middleName, ' ', lastName) AS full_name, 2003 - EXTRACT(YEAR FROM birthDate) AS age FROM players WHERE playerID IN (   SELECT playerID   FROM awards_players   WHERE award = 'Finals MVP' AND year = 2003 );
SELECT t.name, s.year FROM teams t JOIN series_post s ON t.tmID = s.tmIDWinner WHERE s.year BETWEEN 1950 AND 1960 AND s.round = 'F';
SELECT t.name AS team_name, c.coachID AS coach FROM series_post sp JOIN teams t ON sp.tmIDWinner = t.tmID AND sp.year = t.year JOIN coaches c ON sp.tmIDWinner = c.tmID AND sp.year = c.year AND sp.round = 'QF' WHERE sp.year = 1946 AND sp.round = 'QF';
Error: 第 2893 个样本有 0 个SQL。
SELECT college FROM players WHERE playerID IN (   SELECT playerID   FROM awards_players   WHERE year = 1970   ORDER BY COUNT(award) DESC   LIMIT 1 )
SELECT p.firstName, p.lastName FROM players p JOIN draft d ON p.playerID = d.playerID JOIN awards_players ap ON d.playerID = ap.playerID AND ap.award = 'Rookie of the Year' WHERE p.birthDate = (SELECT MAX(birthDate) FROM players)
SELECT firstName, middleName, lastName FROM players WHERE playerID IN (   SELECT playerID   FROM draft   WHERE draftYear = 1973 AND draftRound = 1 ) AND birthCountry <> 'USA';
SELECT (SUM(o_rebounds) / SUM(rebounds)) * 100 FROM player_allstar WHERE season_id = '2000';
SELECT t.year, t.name AS team, c.coachID AS coach FROM teams t JOIN coaches c ON t.tmID = c.tmID WHERE c.won / (c.won + c.lost) > 0.75;
Error: 第 2899 个样本有 0 个SQL。
Error: 第 2900 个样本有 0 个SQL。
SELECT COUNT(*) FROM player_allstar WHERE season_id BETWEEN 2000 AND 2005 AND steals <= 10;
Error: 第 2902 个样本有 0 个SQL。
SELECT COUNT(*) FROM player_allstar WHERE season_id = 1973 AND race = 'B';
SELECT t.name FROM teams t JOIN series_post sp ON t.tmID = sp.tmIDWinner WHERE sp.year = 1947 AND sp.round = 'QF' AND t.d_pts >= 3513;
SELECT (SUM(lost) / SUM(games)) * 100 AS percentage FROM players_teams WHERE name = 'Houston Mavericks';
SELECT playerID FROM awards_players WHERE award = 'Most Valuable Player' AND year > 1990;
Error: 第 2907 个样本有 0 个SQL。
Error: 第 2908 个样本有 0 个SQL。
SELECT      100 *      (COUNT(series_post WHERE year = 1947 AND tmIDWinner = 'CHS') / COUNT(series_post WHERE year = 1947) -       COUNT(series_post WHERE year = 1946 AND tmIDWinner = 'CHS') / COUNT(series_post WHERE year = 1946))  AS difference
Error: 第 2910 个样本有 0 个SQL。
Error: 第 2911 个样本有 0 个SQL。
SELECT p.firstName, p.middleName, p.lastName FROM players p JOIN player_allstar pa ON p.playerID = pa.playerID WHERE pa.year = 1997 ORDER BY pa.steals DESC LIMIT 5;
SELECT p.highSchool FROM draft d JOIN players p ON d.playerID = p.playerID WHERE d.draftYear = 1990 AND d.lgID = 'NBA' AND d.draftSelection IN (   SELECT dp.playerID   FROM awards_players ap   JOIN draft_players dp ON ap.playerID = dp.playerID   WHERE ap.year = 1990 AND ap.award = 'Finals MVP' )
SELECT playerID FROM player_allstar WHERE season_id = 1996 AND ft_made >= 0 AND ft_attempted > 0 AND ft_made / ft_attempted > 0.7;
SELECT COUNT(*)  FROM player_allstar pa WHERE year BETWEEN 1980 AND 1983 AND lgID = 'NBA' AND threeAttempted > 0 AND threeMade / threeAttempted > 0.6;
Error: 第 2916 个样本有 0 个SQL。
SELECT COUNT(*)  FROM coaches c  JOIN awards_coaches ac ON c.coachID = ac.coachID  WHERE c.tmID = 'CHI' AND ac.lgID = 'NBA' AND ac.award = 'Coach of the Year';
Error: 第 2918 个样本有 0 个SQL。
Error: 第 2919 个样本有 0 个SQL。
SELECT players.firstName, players.middleName, players.lastName, players_teams.tmID FROM players JOIN players_teams ON players.playerID = players_teams.playerID WHERE players.birthCity = 'Atlanta' ORDER BY players_teams.blocks DESC LIMIT 1;
Error: 第 2921 个样本有 0 个SQL。
SELECT p.firstName, p.lastName, pt.tmID FROM players p JOIN players_teams pt ON p.playerID = pt.playerID WHERE pt.year BETWEEN 1991 AND 2000 AND pt.lgID = 'NBA' AND pt.minutes > 0 ORDER BY pt.points / pt.minutes DESC LIMIT 1;
SELECT      AVG(YEAR(birthDate) - 1970) AS ABA_avg_age      FROM players      WHERE lgID = 'ABA' AND draftYear BETWEEN 1970 AND 1970 UNION ALL SELECT      AVG(YEAR(birthDate) - 1970) AS NBA_avg_age      FROM players      WHERE lgID = 'NBA' AND draftYear BETWEEN 1970 AND 1970 SELECT      NBA_avg_age - ABA_avg_age AS age_diff
SELECT playerID, max(GP) as max_GP FROM players_teams WHERE year = 2011 AND lgID = 'NBA' GROUP BY playerID ORDER BY max_GP DESC LIMIT 1;
Error: 第 2925 个样本有 0 个SQL。
SELECT tmID FROM awards_players WHERE award LIKE '%MVP' AND year = 1997 AND lgID = 'NBA';
Error: 第 2927 个样本有 0 个SQL。
SELECT AVG(tg) AS turnovers_per_game FROM (   SELECT AVG(t) AS tg   FROM players_teams   WHERE year = 2003 AND lgID = 'NBA'   GROUP BY playerID   ORDER BY assists DESC   LIMIT 1 ) AS assist_champion;
SELECT COUNT(*)  FROM players_teams  WHERE playerID IN (   SELECT playerID    FROM players    WHERE lastName = 'Allen' AND firstName = 'Ray' )  AND tmID IN (   SELECT tmID    FROM teams    WHERE lgID = 'NBA'    AND franchiseID IN (     SELECT tmID      FROM series_post      WHERE W > L    ) )
SELECT    (SUM(won) / (SUM(won) + SUM(lost))) AS prev_win_rate,   (SUM(won) / (SUM(won) + SUM(lost))) - (SELECT (SUM(won) / (SUM(won) + SUM(lost))) FROM coaches WHERE year = 2003) AS win_rate_increase FROM    coaches WHERE    year = 2004 AND tmID IN (SELECT tmID FROM draft WHERE draftYear = 2003 AND draftRound = 1)
SELECT COUNT(*)  FROM coaches  JOIN awards_coaches ON coaches.coachID = awards_coaches.coachID  WHERE awards_coaches.award = 'NBA coach of the year'  AND coaches.year BETWEEN 1971 AND 1975  AND coaches.tmID = 'POR';
Error: 第 2932 个样本有 0 个SQL。
SELECT firstName, middleName, lastName FROM players WHERE year = 1996 AND playoff IS NULL AND playerID IN (   SELECT playerID   FROM players_teams   WHERE year = 1996   GROUP BY playerID   ORDER BY MAX(steals) DESC   LIMIT 1 )
Error: 第 2934 个样本有 0 个SQL。
Error: 第 2935 个样本有 0 个SQL。
Error: 第 2936 个样本有 0 个SQL。
SELECT teams.name FROM teams WHERE year = 2001 AND PostGP = 0 ORDER BY won DESC LIMIT 1;
Error: 第 2938 个样本有 0 个SQL。
SELECT tmID FROM draft WHERE draftYear = 1976 AND draftRound = 1 AND draftSelection = 6;
Error: 第 2940 个样本有 0 个SQL。
SELECT p.height, p.weight FROM players p JOIN player_allstar pa ON p.playerID = pa.playerID WHERE pa.rebounds = (   SELECT MAX(rebounds)   FROM player_allstar );
SELECT hsCity, hsState, hsCountry FROM players WHERE playerID IN (   SELECT playerID   FROM player_allstar   ORDER BY rebounds DESC   LIMIT 1 )
SELECT p.tmID FROM player_allstar pa JOIN players p ON pa.playerID = p.playerID WHERE pa.season_id = '1997' AND pa.rebounds = (   SELECT MAX(pa2.rebounds)   FROM player_allstar pa2   WHERE pa2.season_id = '1997' )
Error: 第 2944 个样本有 0 个SQL。
SELECT t.tmID FROM players p JOIN players_teams pt ON p.playerID = pt.playerID JOIN teams t ON pt.tmID = t.tmID WHERE p.pos LIKE '%F' AND p.year = (SELECT MAX(year) FROM players p2 WHERE p2.pos LIKE '%F') AND p.lgID = 'NBA';
SELECT p.firstName, p.lastName FROM player_allstar pa JOIN players p ON pa.playerID = p.playerID WHERE pa.games_played = (SELECT MAX(games_played) FROM player_allstar) AND p.college = 'Central Missouri State';
SELECT t.name FROM players_teams pt JOIN players p ON pt.playerID = p.playerID JOIN teams t ON pt.tmID = t.tmID WHERE pt.year = 2000 AND pt.GP = 82 AND pt.minutes = (SELECT MIN(minutes) FROM players_teams WHERE year = 2000 AND GP = 82);
SELECT CONCAT(p.firstName, ' ', p.lastName) AS full_name FROM players p JOIN players_teams pt ON p.playerID = pt.playerID WHERE p.lastseason = 1995 AND pt.GP = 82 ORDER BY pt.turnovers DESC LIMIT 1;
SELECT p.tmID, SUM(p.steals) AS total_steals FROM players_teams p WHERE p.year = 2011 AND p.GP = p.GS GROUP BY p.tmID ORDER BY total_steals DESC LIMIT 1;
SELECT t.name FROM teams t JOIN (   SELECT tmID, COUNT(*) as count   FROM players_teams   WHERE GP = GS   GROUP BY tmID ) p ON t.tmID = p.tmID ORDER BY p.count DESC LIMIT 1;
Error: 第 2951 个样本有 0 个SQL。
SELECT t.name FROM players p JOIN players_teams pt ON p.playerID = pt.playerID JOIN teams t ON pt.tmID = t.tmID JOIN (   SELECT playerID, MAX(rebounds) AS max_rebounds   FROM player_allstar   WHERE season_id = '1997'   GROUP BY playerID ) AS all_star ON p.playerID = all_star.playerID WHERE rebounds = max_rebounds;
SELECT teams.name FROM players_teams JOIN teams ON players_teams.tmID = teams.tmID WHERE year = 2011 AND rebounds > 600 GROUP BY teams.name HAVING COUNT(DISTINCT playerID) > 1;
SELECT COUNT(*)  FROM works  WHERE Date < 1602;
Error: 第 2955 个样本有 0 个SQL。
Error: 第 2956 个样本有 0 个SQL。
SELECT SUM(CASE WHEN Act = 1 AND work_id IN (SELECT id FROM works WHERE Title = 'Twelfth Night') THEN 1 ELSE 0 END) -         SUM(CASE WHEN Act = 5 AND work_id IN (SELECT id FROM works WHERE Title = 'Twelfth Night') THEN 1 ELSE 0 END) AS Difference
Error: 第 2958 个样本有 0 个SQL。
Error: 第 2959 个样本有 0 个SQL。
Error: 第 2960 个样本有 0 个SQL。
SELECT PlainText FROM paragraphs WHERE chapter_id IN (   SELECT id   FROM chapters   WHERE Act = '1' AND Scene = '1' AND work_id IN (     SELECT id     FROM works     WHERE Title = 'Twelfth Night'   ) )
SELECT COUNT(*)  FROM paragraphs  WHERE character_id IN (SELECT id FROM characters WHERE CharName = 'Lord Abergavenny');
SELECT p.id FROM paragraphs p JOIN characters c ON p.character_id = c.id WHERE c.Description = 'son to Tamora';
SELECT COUNT(*)  FROM chapters  WHERE Description = 'OLIVIA’S house.' AND work_id IN (SELECT id FROM works WHERE Title = 'Twelfth Night');
SELECT COUNT(*)  FROM characters  WHERE id IN (   SELECT character_id    FROM paragraphs    WHERE chapter_id IN (     SELECT id      FROM chapters      WHERE work_id IN (       SELECT id        FROM works        WHERE Title = 'Twelfth Night'     )   ) )
SELECT w.Title FROM works w WHERE w.id = (   SELECT work_id   FROM characters   GROUP BY work_id   ORDER BY COUNT(character_id) DESC   LIMIT 1 );
SELECT AVG(SUM(character_id)) / COUNT(work_id) AS Average_Characters FROM characters, works WHERE characters.work_id = works.id;
SELECT AVG(avg_scenes) AS average_scenes FROM (   SELECT AVG(Scene) AS avg_scenes   FROM chapters   WHERE work_id = (SELECT id FROM works WHERE Title = 'Twelfth Night') ) AS subquery;
SELECT COUNT(*)  FROM works  WHERE GenreType = 'Comedy';
SELECT Date FROM works WHERE GenreType = 'Poem' ORDER BY Date ASC LIMIT 1;
SELECT Abbrev FROM characters WHERE CharName = 'Earl of Westmoreland';
SELECT c.Description, c.id FROM chapters c WHERE c.id = (   SELECT chapter_id   FROM paragraphs   GROUP BY chapter_id   ORDER BY COUNT(chapter_id) DESC   LIMIT 1 );
SELECT CharName  FROM characters  WHERE id IN (   SELECT character_id    FROM paragraphs    WHERE PlainText = 'Would he do so, I''ld beg your precious mistress, Which he counts but a trifle.' );
SELECT COUNT(*)  FROM characters  WHERE id IN (   SELECT character_id    FROM paragraphs    WHERE chapter_id IN (     SELECT id      FROM chapters      WHERE work_id IN (       SELECT id        FROM works        WHERE Title = 'Titus Andronicus'     )   ) )
Error: 第 2975 个样本有 0 个SQL。
SELECT Description FROM characters WHERE id = (SELECT character_id FROM paragraphs WHERE id = '640171');
SELECT Title  FROM works  WHERE id IN (   SELECT work_id    FROM chapters    WHERE id IN (     SELECT chapter_id      FROM paragraphs      WHERE character_id IN (       SELECT id        FROM characters        WHERE CharName = 'Shylock'     )   ) )
SELECT COUNT(DISTINCT Scene)  FROM chapters  WHERE work_id IN (SELECT id FROM works WHERE Title = 'King John');
SELECT COUNT(DISTINCT chapters.id)  FROM chapters  JOIN paragraphs ON chapters.id = paragraphs.chapter_id  JOIN characters ON paragraphs.character_id = characters.id  WHERE characters.CharName = 'Demetrius';
SELECT w.Title FROM characters c JOIN paragraphs p ON c.id = p.character_id JOIN chapters ch ON p.chapter_id = ch.id JOIN works w ON ch.work_id = w.id WHERE c.id = 324 AND c.Description = 'this friend of Caesar';
SELECT Description  FROM chapters  WHERE Act = '2' AND Scene = '2' AND work_id = (SELECT id FROM works WHERE Title = 'Midsummer Night''s Dream');
SELECT w.LongTitle FROM works w WHERE w.GenreType = 'Tragedy' ORDER BY (SELECT COUNT(c.Scene) FROM chapters c WHERE c.work_id = w.id) DESC LIMIT 1;
SELECT COUNT(*) FROM paragraphs WHERE chapter_id IN (   SELECT id   FROM chapters   WHERE Description = 'A Sea-port in Cyprus. An open place near the quay.' );
SELECT ROUND((SUM(Scene) FROM chapters WHERE GenreType = 'Tragedy' AND Date = '1594') / (SELECT COUNT(Scene) FROM chapters) * 100, 2) AS percentage
SELECT AVG(chapters_count)  FROM (   SELECT COUNT(chapters.id) AS chapters_count    FROM chapters    JOIN works ON chapters.work_id = works.id    WHERE works.Date = '1599' ) AS temp;
SELECT COUNT(*)  FROM characters  WHERE Description = 'servant to Timon';
SELECT Title FROM works WHERE id = (SELECT MIN(id) FROM works);
SELECT COUNT(*)  FROM works  WHERE GenreType = 'Poem';
Error: 第 2989 个样本有 0 个SQL。
Error: 第 2990 个样本有 0 个SQL。
SELECT CharName FROM characters WHERE Description = 'Daughter to Capulet';
SELECT COUNT(*) FROM paragraphs WHERE PlainText = 'Ay, surely, mere the truth: I know his lady.';
SELECT w.LongTitle FROM works w JOIN (   SELECT work_id, COUNT(Scene) AS MaxScenes   FROM chapters   WHERE Act = 1   GROUP BY work_id   ORDER BY MaxScenes DESC   LIMIT 1 ) c ON w.id = c.work_id;
SELECT Description FROM chapters WHERE id = (   SELECT chapter_id   FROM paragraphs   GROUP BY chapter_id   ORDER BY COUNT(ParagraphNum) DESC   LIMIT 1 );
SELECT Description  FROM chapters  WHERE work_id IN (SELECT id FROM works WHERE LongTitle = 'Twelfth Night, Or What You Will')  AND Scene = 2;
SELECT Description  FROM chapters  WHERE ParagraphNum < 150;
Error: 第 2997 个样本有 0 个SQL。
SELECT COUNT(p.id) FROM paragraphs p JOIN chapters c ON p.chapter_id = c.id WHERE c.Act = 1 AND c.Scene = (SELECT MAX(c2.Scene) FROM chapters c2 WHERE c2.Act = 1)
SELECT CharName FROM characters WHERE CharName != '(stage directions)' AND EXISTS (   SELECT 1   FROM paragraphs   WHERE paragraphs.character_id = characters.id   AND paragraphs.chapter_id IN (     SELECT id     FROM chapters     WHERE chapters.work_id IN (       SELECT id       FROM works       WHERE Title = 'the sea-coast'     )     AND chapters.Description = 'The sea-coast.'   )   GROUP BY paragraphs.character_id   HAVING COUNT(paragraphs.character_id) = 5 );
SELECT COUNT(*) FROM chapters c JOIN works w ON c.work_id = w.id WHERE w.Title = 'As You Like It' AND EXISTS (   SELECT 1   FROM paragraphs p   WHERE p.chapter_id = c.id   AND p.ParagraphNum < 50 );
SELECT c.id FROM paragraphs p JOIN characters c ON p.character_id = c.id WHERE p.PlainText = 'His name, I pray you.' AND p.chapter_id IN (   SELECT c.id   FROM chapters   WHERE Description = 'Florence. Without the walls. A tucket afar off.' );
SELECT COUNT(*)  FROM characters  WHERE id IN (SELECT character_id                FROM paragraphs                WHERE chapter_id IN (SELECT id                                      FROM chapters                                      WHERE work_id IN (SELECT id                                                        FROM works                                                        WHERE Title = 'Hamlet')));
SELECT COUNT(DISTINCT Scene) FROM chapters WHERE Act = 5 AND work_id IN (SELECT id FROM works WHERE LongTitle = 'History of Henry VIII');
SELECT COUNT(*) FROM works WHERE GenreType = 'History'   AND EXISTS (     SELECT 1     FROM chapters     WHERE work_id = works.id       AND Act = 1       AND COUNT(Scene) < 2   );
SELECT COUNT(DISTINCT Act)  FROM chapters  WHERE work_id IN (SELECT id FROM works WHERE Title = 'Sonnets');
SELECT Description FROM chapters WHERE chapter_id = (   SELECT chapter_id   FROM paragraphs   WHERE character_id = (     SELECT id     FROM characters     WHERE Abbrev = '1Play'   )   ORDER BY id ASC   LIMIT 1 )
SELECT w.Title, w.GenreType FROM works w WHERE w.id IN (   SELECT c.work_id   FROM chapters c   GROUP BY c.work_id   HAVING COUNT(c.Act) = 1 )
SELECT COUNT(*) FROM paragraphs WHERE chapter_id IN (   SELECT id   FROM chapters   WHERE work_id IN (     SELECT id     FROM works   )   AND (Act, Scene) IN (     SELECT Act, Scene     FROM chapters     WHERE Description IN (       SELECT Description       FROM chapters       WHERE work_id IN (         SELECT id         FROM works       )       AND character_id IN (         SELECT id         FROM characters         WHERE CharName = 'Sir Richard Ratcliff'       )     )   )   AND ParagraphNum = (     SELECT MAX(ParagraphNum)     FROM paragraphs     WHERE chapter_id IN (       SELECT id       FROM chapters       WHERE work_id IN (         SELECT id         FROM works       )       AND (Act, Scene) IN (         SELECT Act, Scene         FROM chapters         WHERE Description IN (           SELECT Description           FROM chapters           WHERE work_id IN (             SELECT id             FROM works           )           AND character_id IN (             SELECT id             FROM characters             WHERE CharName = 'Sir Richard Ratcliff'           )         )     )   ) )
SELECT Description FROM chapters WHERE Act = '1' AND Scene = '1' AND work_id IN (   SELECT id   FROM works   WHERE Title = 'A Lover''s Complaint' );
SELECT Date FROM works WHERE id IN (   SELECT work_id   FROM chapters   GROUP BY work_id   HAVING COUNT(Scene) = 154 );
SELECT AVG(scenes) AS avg_scenes FROM (   SELECT COUNT(Scene) AS scenes   FROM chapters   WHERE work_id IN (     SELECT id     FROM works     WHERE GenreType = 'Comedy'   ) ) AS scene_count;
SELECT      CharName,      COUNT(*) as TotalAppearance,      ROUND(COUNT(*)/(SELECT COUNT(*) FROM paragraphs WHERE character_id IN (SELECT id FROM characters WHERE CharName IN ('Romeo', 'Juliet'))) * 100, 2) as Percentage FROM      paragraphs WHERE      character_id IN (SELECT id FROM characters WHERE CharName IN ('Romeo', 'Juliet')) AND      chapter_id IN (SELECT id FROM chapters WHERE work_id IN (SELECT id FROM works WHERE LongTitle = 'The Tragedy of Romeo and Juliet')) GROUP BY      CharName ORDER BY      TotalAppearance DESC;
SELECT ParagraphNum FROM paragraphs WHERE PlainText = 'This is Illyria, lady';
SELECT COUNT(*)  FROM paragraphs  WHERE chapter_id = 18881;
SELECT Title FROM works WHERE GenreType = 'History' LIMIT 5;
Error: 第 3016 个样本有 0 个SQL。
Error: 第 3017 个样本有 0 个SQL。
SELECT COUNT(*)  FROM chapters  WHERE work_id IN (SELECT id FROM works WHERE Title = 'Midsummer Night\'s Dream');
SELECT COUNT(*)  FROM paragraphs  WHERE chapter_id IN (   SELECT id    FROM chapters    WHERE Act = '5' AND Scene = '1' AND work_id = (     SELECT id      FROM works      WHERE Title = 'Comedy of Errors'   ) )
SELECT c.CharName, c.Description  FROM characters c  JOIN works w ON c.id = w.id  WHERE w.Title = 'Venus and Adonis';
SELECT w.Title  FROM works w  JOIN characters c ON w.id = (SELECT work_id FROM chapters WHERE id = (SELECT chapter_id FROM paragraphs WHERE character_id = c.id AND CharName = 'Froth'));
SELECT COUNT(*) FROM chapters WHERE id IN (   SELECT chapter_id   FROM paragraphs   WHERE character_id IN (     SELECT id     FROM characters     WHERE CharName = 'First Witch'   ) );
SELECT Scene, Description  FROM chapters  WHERE Act = '1' AND work_id IN (SELECT id FROM works WHERE LongTitle = 'Pericles, Prince of Tyre');
SELECT w.LongTitle  FROM works w  JOIN characters c ON w.id = (SELECT work_id FROM chapters WHERE id = (SELECT chapter_id FROM paragraphs WHERE character_id = c.id AND paragraphs.PlainText LIKE '%Servant to Montague%'));
SELECT c.Scene, c.Act, w.Title FROM chapters c JOIN works w ON c.work_id = w.id WHERE c.Description LIKE '%The house of ANTIPHOLUS of Ephesus%';
SELECT c.CharName, p.ParagraphNum, p.PlainText FROM characters c JOIN paragraphs p ON c.id = p.character_id WHERE c.CharName = 'Cousin to the King';
SELECT AVG(chapters.Scene)  FROM chapters  WHERE chapters.work_id IN (SELECT id FROM works WHERE Title = 'Antony and Cleopatra')  GROUP BY chapters.Act;
SELECT      (SUM(p.id) / (SELECT COUNT(*) FROM paragraphs p2 WHERE p2.chapter_id IN (SELECT c.id FROM chapters c WHERE c.work_id IN (SELECT w.id FROM works w WHERE w.Title = 'All''s Well That Ends Well'))) * 100) AS percentage FROM      paragraphs p WHERE      p.chapter_id IN (SELECT c.id FROM chapters c WHERE c.work_id IN (SELECT w.id FROM works w WHERE w.Title = 'All''s Well That Ends Well'));
SELECT COUNT(*)  FROM characters  WHERE Abbrev = 'all';
SELECT Title, LongTitle FROM works WHERE GenreType = 'comedy' LIMIT 3;
SELECT      COUNT(CASE WHEN GenreType = 'comedy' THEN 1 END) -      COUNT(CASE WHEN GenreType = 'History' THEN 1 END)  FROM      works  WHERE      Date > 1593;
SELECT name FROM works WHERE GenreType = 'History' ORDER BY Date DESC LIMIT 1;
SELECT id  FROM works  WHERE Title LIKE '%Henry%';
SELECT CharName FROM characters WHERE Description = 'a senator of Venice';
SELECT CharName FROM characters WHERE id IN (   SELECT character_id   FROM paragraphs   WHERE ParagraphNum = 8 AND chapter_id = 18820 )
SELECT c.Description  FROM chapters c  JOIN paragraphs p ON c.id = p.chapter_id  JOIN characters ch ON p.character_id = ch.id  WHERE c.id = 18704 AND ch.CharName = 'Orsino';
SELECT COUNT(DISTINCT Scene) FROM chapters WHERE work_id IN (   SELECT id   FROM works   WHERE LongTitle = 'Twelfth Night, Or What You Will' );
SELECT Description FROM characters WHERE id IN (   SELECT character_id   FROM paragraphs   WHERE ParagraphNum = 20 )
Error: 第 3039 个样本有 0 个SQL。
SELECT Description  FROM chapters  WHERE id = 18706 AND work_id = (SELECT id FROM works WHERE Title = 'All\'s Well That Ends Well');
SELECT CharName FROM characters JOIN paragraphs ON characters.id = paragraphs.character_id WHERE paragraphs.ParagraphNum = 3;
Error: 第 3042 个样本有 0 个SQL。
SELECT CharName  FROM characters  WHERE id IN (SELECT character_id                FROM paragraphs                WHERE chapter_id = 18708                LIMIT 2);
Error: 第 3044 个样本有 0 个SQL。
SELECT      ROUND(         (COUNT(w.id)          WHERE w.GenreType = 'history'          AND c.Count > 0          AND w.Date >= 1500          AND w.Date <= 1599)      / (COUNT(w.id) WHERE w.GenreType = 'history') * 100, 2)  AS percentage FROM      works w  JOIN      chapters c ON w.id = c.work_id  GROUP BY      1
SELECT ROUND((COUNT(*) FILTER (WHERE chapters.Act = 5 AND works.Title = 'Titus Andronicus') / COUNT(*)) * 100, 2) AS percentage FROM chapters JOIN works ON chapters.work_id = works.id
SELECT COUNT(*)  FROM works  WHERE GenreType = 'Tragedy';
SELECT COUNT(*) FROM works WHERE Title LIKE '%Henry%';
SELECT character_id FROM paragraphs WHERE PlainText = 'O my poor brother! and so perchance may he be.';
SELECT paragraphs.ParagraphNum FROM paragraphs JOIN characters ON paragraphs.character_id = characters.id WHERE characters.CharName = 'Sir Andrew Aguecheek';
SELECT w.Title, c.CharName FROM works w JOIN characters c ON w.id = (SELECT work_id FROM chapters WHERE chapters.Date = (SELECT MAX(Date) FROM chapters)) WHERE w.id = (SELECT work_id FROM chapters WHERE chapters.Date = (SELECT MAX(Date) FROM chapters));
SELECT paragraphs.PlainText  FROM paragraphs  WHERE paragraphs.ParagraphNum >= 1500 AND paragraphs.ParagraphNum <= 1950  AND paragraphs.character_id IN (   SELECT characters.id    FROM characters    WHERE characters.Description = 'a sea captain, friend to Sebastian' );
SELECT w.LongTitle FROM works w JOIN chapters c ON w.id = c.work_id WHERE c.Description = 'Mytilene. A street before the brothel.';
SELECT CharName  FROM characters  JOIN paragraphs ON characters.id = paragraphs.character_id  WHERE PlainText = 'This is Illyria, lady.';
Error: 第 3055 个样本有 0 个SQL。
SELECT Description  FROM chapters  WHERE work_id = (SELECT id FROM works WHERE Title = 'Venus and Adonis')  AND Scene = (SELECT MAX(Scene) FROM chapters WHERE work_id = (SELECT id FROM works WHERE Title = 'Venus and Adonis'));
SELECT COUNT(p.id)  FROM paragraphs p  JOIN characters c ON p.character_id = c.id  WHERE p.chapter_id IN (   SELECT id    FROM chapters    WHERE Act = 1 AND Scene = 2  ) AND c.CharName = 'Viola'  AND (SELECT w.Title FROM works w WHERE w.id = (SELECT work_id FROM chapters WHERE id = p.chapter_id)) = 'Twelfth Night';
SELECT c.CharName, p.chapter_id FROM paragraphs p JOIN characters c ON p.character_id = c.id WHERE p.PlainText = 'Fear not thou, man, thou shalt lose nothing here.';
SELECT Description FROM chapters WHERE id IN (   SELECT chapter_id   FROM paragraphs   WHERE PlainText = 'What, wilt thou hear some music, my sweet love?' );
Error: 第 3060 个样本有 0 个SQL。
SELECT w.Title FROM works w JOIN chapters c ON w.id = c.work_id JOIN paragraphs p ON c.id = p.chapter_id JOIN characters ch ON p.character_id = ch.id WHERE w.Date < 1600 AND w.GenreType = 'Tragedy' AND ch.CharName = 'Tybalt';
SELECT c.id FROM chapters c JOIN works w ON c.work_id = w.id WHERE w.Date > (   SELECT AVG(w2.Date) * 0.89   FROM works w2 );
SELECT      (SUM(CASE WHEN CharName = 'Antonio' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage FROM      characters WHERE      CharName = 'Antonio' AND EXISTS (         SELECT 1         FROM works         WHERE GenreType = 'Comedy'     );
SELECT car_name FROM data WHERE cylinders = 8 ORDER BY (SELECT price FROM price WHERE ID = data.ID) DESC LIMIT 1;
SELECT COUNT(*) FROM data WHERE weight > 3000 AND EXISTS (   SELECT 1   FROM price   WHERE price.ID = data.ID   AND price.price < 30000 );
SELECT d.acceleration FROM data d JOIN price p ON d.ID = p.ID WHERE p.price = (SELECT MAX(price) FROM price);
SELECT p.price FROM price p, data d WHERE p.ID = d.ID AND d.car_name = 'ford torino';
SELECT country.origin FROM production JOIN data ON production.ID = data.ID JOIN country ON production.country = country.country WHERE data.car_name = 'ford torino' AND production.model_year = 1970;
SELECT COUNT(*)  FROM production p  JOIN data d ON p.ID = d.ID  JOIN country c ON p.country = c.country  WHERE p.model_year = 1970 AND c.country = 'USA';
SELECT car_name FROM data WHERE model IN (   SELECT car_name   FROM data   JOIN production ON data.ID = production.ID   JOIN country ON production.country = country.country   WHERE country.origin = 'USA' )
SELECT d.car_name FROM data d JOIN price p ON d.ID = p.ID ORDER BY p.price DESC LIMIT 3;
SELECT model_year FROM production WHERE car_name = 'Chevrolet Impala';
SELECT COUNT(*) FROM data JOIN production ON data.ID = production.ID JOIN price ON production.ID = price.ID WHERE data.acceleration > 10 AND price.price BETWEEN 20000 AND 30000;
SELECT d.weight FROM data d JOIN production p ON d.ID = p.ID JOIN price pr ON p.ID = pr.ID WHERE pr.price > 40000;
SELECT MAX(d.acceleration) FROM data d JOIN production p ON d.ID = p.ID JOIN price pr ON p.ID = pr.ID WHERE pr.price > 40000;
SELECT AVG(p.price)  FROM price p, data d  WHERE p.ID = d.ID AND d.cylinders = 8;
SELECT MAX(displacement / cylinders)  FROM data, price  WHERE data.ID = price.ID AND price.price < 30000;
SELECT COUNT(*) FROM data WHERE EXISTS (   SELECT 1   FROM country   WHERE data.model = country.country AND country.origin = 'Europe' )
SELECT c.country  FROM data d  JOIN production p ON d.ID = p.ID  WHERE d.car_name = 'Chevrolet Malibu';
SELECT d.mpg FROM data d JOIN price p ON d.ID = p.ID WHERE p.price = (SELECT MAX(price) FROM price);
SELECT country.country FROM country JOIN production ON country.origin = production.country WHERE production.ID = 382;
SELECT c.country FROM country c JOIN production p ON c.origin = p.country JOIN price pr ON p.model_year = (SELECT model_year FROM data WHERE ID = (SELECT ID FROM data WHERE price = 44274.40748)) WHERE pr.price = 44274.40748;
SELECT p.price FROM data d JOIN production p ON d.ID = p.ID WHERE d.car_name = 'Volkswagen Dasher' AND d.acceleration = 14.1;
SELECT displacement FROM data WHERE ID IN (   SELECT ID   FROM price   WHERE price = 37443.85589 )
SELECT p.model_year FROM price p JOIN production pr ON p.ID = pr.ID WHERE p.price = 32650.65157;
SELECT p.price FROM data d JOIN production p ON d.ID = p.ID WHERE d.car_name = 'toyota corona hardtop';
SELECT d.cylinders FROM data d JOIN price p ON d.ID = p.ID WHERE p.price = (SELECT MIN(price) FROM price);
SELECT d.car_name, p.price FROM data d JOIN production p ON d.ID = p.ID WHERE d.weight = (SELECT MAX(weight) FROM data);
SELECT c.country FROM data d JOIN production p ON d.ID = p.ID JOIN country c ON p.country = c.origin WHERE d.horsepower = (SELECT MAX(horsepower) FROM data)
SELECT (COUNT(p.ID) WHERE p.country = 'Japan') * 100.0 / COUNT(DISTINCT p.ID) AS percentage
SELECT displacement / cylinders AS swept_volume FROM data WHERE price = 34538.97449;
SELECT car_name FROM data WHERE ID = (SELECT ID FROM data ORDER BY price DESC LIMIT 1);
SELECT COUNT(*) FROM production WHERE country = 'USA' AND model_year = 1981;
SELECT p.price FROM data d JOIN production p ON d.ID = p.ID WHERE d.model = (SELECT model FROM data WHERE d.displacement / d.cylinders = (SELECT MAX(d.displacement / d.cylinders) FROM data));
SELECT car_name FROM data WHERE country = 'Japan' ORDER BY horsepower DESC LIMIT 1;
SELECT COUNT(*)  FROM data  WHERE car_name = 'ford maverick';
SELECT p.country FROM country p JOIN production c ON p.origin = c.country JOIN data d ON c.ID = d.ID GROUP BY p.country ORDER BY MAX(d.mpg) DESC LIMIT 1;
SELECT car_name FROM data WHERE car_name LIKE 'dodge%' ORDER BY price.ID LIMIT 1;
SELECT car_name FROM data WHERE ID IN (   SELECT data.ID   FROM data   JOIN production ON data.ID = production.ID   JOIN country ON production.country = country.country   WHERE country.origin = 'USA' ) ORDER BY price.ID DESC LIMIT 1;
SELECT COUNT(*) FROM data, price WHERE data.displacement > 400 AND price.price > 30000
SELECT MAX(model_year) FROM production WHERE country = 'Europe';
SELECT p.price FROM data d JOIN production p ON d.model = p.model WHERE d.car_name = 'Peugeot 505s Turbo Diesel';
SELECT d.acceleration FROM data d JOIN production p ON d.ID = p.ID JOIN country c ON p.country = c.country WHERE c.country = 'USA' AND d.ID = (SELECT ID FROM price ORDER BY price LIMIT 1);
SELECT c.country FROM (   SELECT country, COUNT(*) as count   FROM production   GROUP BY country ) c WHERE c.count = (   SELECT MAX(count)   FROM (     SELECT country, COUNT(*) as count     FROM production     GROUP BY country   ) c2 ) SELECT AVG(c.count) / AVG(c2.count) FROM (   SELECT country, COUNT(*) as count, model_year   FROM production   GROUP BY country, model_year ) c
SELECT (COUNT(DISTINCT data.ID) / COUNT(DISTINCT production.ID)) * 100 AS percentage FROM data JOIN production ON data.ID = production.ID WHERE production.country = 'Japan' AND data.displacement / data.cylinders > 30;
SELECT car_name FROM data WHERE ID IN (SELECT ID FROM production WHERE model_year = 1975)
SELECT AVG(p.price)  FROM price p  JOIN data d ON p.ID = d.ID  JOIN production pr ON d.ID = pr.ID  WHERE pr.country = 'Europe';
SELECT price FROM price WHERE ID = 15;
SELECT COUNT(*)  FROM data  WHERE country = 'Japan' AND weight < 3000;
SELECT COUNT(*) FROM data WHERE ID IN (   SELECT production.ID   FROM production   WHERE model_year = 1973 ) AND horsepower < 100;
SELECT d.ID FROM data d JOIN production p ON d.ID = p.ID JOIN price pr ON d.ID = pr.ID JOIN country c ON p.country = c.country WHERE c.country = 'Japan' AND pr.price > 35000 AND d.acceleration = 14;
SELECT p.model_year FROM production p JOIN data d ON p.ID = d.ID ORDER BY d.weight DESC LIMIT 1;
SELECT d.horsepower, p.model_year FROM data d JOIN production p ON d.ID = p.ID WHERE d.car_name = 'subaru dl';
SELECT car_name FROM data WHERE origin = 'Japan' ORDER BY (SELECT price FROM price WHERE price.ID = data.ID) DESC LIMIT 1;
SELECT d.car_name  FROM data d  JOIN price p ON d.ID = p.ID  WHERE p.price = 20000;
SELECT COUNT(*) FROM data JOIN production ON data.ID = production.ID JOIN price ON data.ID = price.ID WHERE price.price > 40000 AND production.country = 'USA';
SELECT p.price, c.country FROM data d JOIN production p ON d.ID = p.ID JOIN country c ON p.model_year = c.origin WHERE d.car_name = 'Ford Maverick';
SELECT d.car_name FROM data d JOIN production p ON d.ID = p.ID JOIN price pr ON p.ID = pr.ID WHERE pr.price > (SELECT AVG(pr2.price) * 0.85 FROM price pr2);
SELECT COUNT(ID) - COUNT(CASE WHEN model_year = 1976 THEN 1 ELSE NULL END)  FROM data  WHERE horsepower = 130;
SELECT d.ID  FROM data d  JOIN production p ON d.ID = p.ID  WHERE p.country = 'Japan' AND p.model_year = 1979;
SELECT c.country FROM data d JOIN production p ON d.ID = p.ID JOIN country c ON p.country = c.country WHERE d.mpg = (SELECT MIN(mpg) FROM data);
SELECT d.car_name, d.model, d.displacement / d.cylinders AS sweep_volume, p.model_year FROM data d JOIN production p ON d.ID = p.ID WHERE d.weight = (SELECT MAX(weight) FROM data);
SELECT car_name, horsepower FROM data JOIN production ON data.ID = production.ID WHERE production.model_year = 1977 AND production.country = 'Europe';
SELECT d.car_name, d.model FROM data d JOIN price p ON d.ID = p.ID WHERE p.price = (SELECT MAX(price) FROM price)
SELECT p.price FROM price p JOIN data d ON p.ID = d.ID WHERE d.car_name = 'Chevrolet Bel Air';
SELECT AVG(p.price)  FROM price p  JOIN production pr ON p.ID = pr.ID  WHERE pr.country = 'Japan';
SELECT country.origin FROM country JOIN production ON country.ID = production.country JOIN data ON production.ID = data.model JOIN price ON data.ID = price.ID WHERE price.price = (SELECT MIN(price.price) FROM price);
SELECT d.ID, d.car_name, p.country FROM data d JOIN production p ON d.ID = p.ID WHERE p.model_year = 1975 AND d.cylinders = (SELECT MAX(cylinders) FROM data)
SELECT d.acceleration, d.cylinders, p.model_year FROM data d JOIN production p ON d.ID = p.ID WHERE d.ID = (SELECT ID FROM data ORDER BY price LIMIT 1);
SELECT d.car_name, p.price FROM data d JOIN production p ON d.ID = p.ID WHERE d.model = 82 AND d.mpg > 30
SELECT COUNT(*)  FROM production p  JOIN data d ON p.ID = d.ID  JOIN country c ON p.country = c.country  WHERE c.country = 'origin' AND d.car_name = 'ford maverick';
SELECT (COUNT(p.ID) WHERE p.country = 'USA') / COUNT(d.ID) * 100 FROM data d JOIN production p ON d.ID = p.ID;
SELECT    car_name,    AVG(COUNT(*)) AS average_production_rate FROM    production WHERE    model_year BETWEEN 1971 AND 1980   AND country IN (SELECT origin FROM country) GROUP BY    car_name HAVING    AVG(COUNT(*)) > 0   AND weight < 1800;
SELECT AVG(p.price)  FROM price p  JOIN data d ON p.ID = d.ID  WHERE d.model = 70;
SELECT p.price FROM data d JOIN production p ON d.ID = p.ID WHERE d.car_name = 'chevrolet vega 2300';
SELECT country.origin FROM production JOIN data ON production.model = data.model WHERE data.car_name = 'chevy c20';
SELECT p.price  FROM data d  JOIN production p ON d.ID = p.ID  JOIN country c ON p.country = c.country  WHERE car_name LIKE 'ford%' AND model_year BETWEEN 1970 AND 1980;
SELECT car_name FROM data WHERE model_year = 1975 ORDER BY mpg DESC LIMIT 1;
SELECT * FROM data WHERE mpg = (SELECT MIN(mpg) FROM data) AND ID IN (   SELECT ID   FROM data   JOIN production ON data.ID = production.ID   JOIN price ON production.ID = price.ID   WHERE price.price = (SELECT MAX(price) FROM price) )
SELECT COUNT(*) FROM data WHERE country = 'USA' AND acceleration < 12;
SELECT COUNT(*) FROM data WHERE country = 'Japan' AND weight > 2000;
SELECT d.car_name FROM data d JOIN price p ON d.ID = p.ID ORDER BY p.price DESC LIMIT 1;
SELECT DISTINCT model_year FROM production WHERE country = (SELECT origin FROM country WHERE country = 'United States') AND car_name = 'Buick Skylark 320';
SELECT country.origin FROM production JOIN data ON production.model_year = 1970 AND production.ID = data.ID JOIN price ON data.ID = price.ID WHERE price.price = (SELECT MAX(price.price) FROM price) ORDER BY price.price DESC LIMIT 1;
SELECT COUNT(*) FROM data WHERE horsepower > 200 AND EXISTS (   SELECT 1   FROM production   WHERE data.ID = production.ID   AND model_year = 1975 );
SELECT (COUNT(p.ID) WHERE p.country = 'USA') * 100.0 / COUNT(DISTINCT p.ID) AS percentage FROM data p JOIN production p2 ON p.ID = p2.ID;
SELECT AVG(weight)  FROM data  WHERE country = 'Japan' AND cylinders = 4 AND ID IN (SELECT ID FROM production WHERE model_year BETWEEN 1975 AND 1980);
SELECT SUM(donation_total)  FROM donations  WHERE donation_timestamp LIKE '2012%';
SELECT MAX(donation_timestamp) AS highest_donation_timestamp, MAX(donation_total) AS highest_donation_amount FROM donations;
SELECT SUM(donation_total)  FROM donations  WHERE donation_timestamp LIKE '2011%'    AND for_honoree = 't'    AND via_giving_page = 't';
SELECT    donor_acctid,    (donation_optional_support / donation_total) * 100 AS percentage_of_donation FROM    donations WHERE    is_teacher_acct = 'f';
SELECT essays.title FROM essays WHERE essays.projectid IN (   SELECT projects.projectid   FROM projects   WHERE projects.primary_focus_subject = 'Literacy' )
SELECT e.title FROM essays e JOIN projects p ON e.projectid = p.projectid WHERE p.poverty_level = 'highest poverty';
SELECT    p.projectid,    p.title,    p.primary_focus_subject FROM    projects p WHERE    p.title = 'Toot Your Flute!' UNION ALL SELECT    p.projectid,    p.title,    p.primary_focus_subject FROM    projects p WHERE    p.primary_focus_subject IN (     SELECT        primary_focus_subject     FROM        projects     WHERE        primary_focus_subject = (         SELECT            primary_focus_subject         FROM            projects         WHERE            title = 'Toot Your Flute!'       )   ) ORDER BY    p.primary_focus_subject;
Error: 第 3155 个样本有 0 个SQL。
SELECT p.title, p.total_price_excluding_optional_support FROM projects p WHERE p.students_reached = 320;
SELECT d.donation_message, p.title FROM donations d JOIN projects p ON d.projectid = p.projectid WHERE d.donor_city = 'Texas City';
SELECT r.vendor_name, r.item_name, r.item_unit_price FROM resources r JOIN projects p ON r.projectid = p.projectid WHERE p.title = 'Lights, Camera, Action!';
SELECT SUM(donation_to_project)  FROM donations  WHERE projectid IN (SELECT projectid FROM essays WHERE title = 'Whistle While We Work!');
SELECT p.projectid, p.title AS "Name", p.short_description AS "Describe" FROM projects p WHERE p.teacher_ny_teaching_fellow = 't';
SELECT p.title AS project_name, p.total_price_excluding_optional_support AS project_cost FROM projects p JOIN donations d ON p.projectid = d.projectid WHERE p.students_reached >= 600 AND p.poverty_level = 'moderate poverty' AND d.donation_to_project = 1;
SELECT ROUND((SUM(d.donation_to_project) / SUM(CASE WHEN p.school_metro = 'rural' THEN d.donation_to_project ELSE 0 END)) * 100, 2) AS percentage FROM donations d JOIN projects p ON d.projectid = p.projectid WHERE d.donation_to_project > 0;
SELECT    e.title AS project_name,   MAX(p.total_price_excluding_optional_support) AS total_cost,   SUM(d.donation_to_project) AS amount_collected,   (SUM(d.donation_to_project) / MAX(p.total_price_excluding_optional_support)) * 100 AS percentage_amount_lacking FROM    essays e   JOIN projects p ON e.projectid = p.projectid   JOIN donations d ON p.projectid = d.projectid GROUP BY    e.title ORDER BY    total_cost DESC LIMIT 1;
SELECT COUNT(DISTINCT schoolid)  FROM projects  WHERE school_district = 'West New York School District' AND poverty_level = 'highest poverty';
SELECT COUNT(*)  FROM donations  WHERE is_teacher_acct = 't' AND donor_state = 'CO-Colorado';
SELECT projectid FROM projects WHERE projectid IN (   SELECT projectid   FROM projects   ORDER BY total_price_including_optional_support DESC   LIMIT 1 )
Error: 第 3167 个样本有 0 个SQL。
SELECT donationid, donation_total FROM donations ORDER BY donation_total DESC LIMIT 1;
SELECT p.projectid, r.item_name FROM projects p JOIN (   SELECT projectid, total_price_including_optional_support - total_price_excluding_optional_support AS highest_optional_tip   FROM donations   GROUP BY projectid   ORDER BY highest_optional_tip DESC   LIMIT 1 ) d ON p.projectid = d.projectid JOIN resources r ON p.projectid = r.projectid ORDER BY p.projectid;
SELECT r.item_name, r.item_quantity FROM resources r JOIN projects p ON r.projectid = p.projectid WHERE p.projectid = 'd6ef27c07c30c81f0c16c32b6acfa2ff' AND p.teacher_prefix LIKE 'Dr. %';
SELECT SUM(total_price_including_optional_support) FROM projects JOIN essays ON projects.projectid = essays.projectid WHERE essays.title = 'Recording Rockin'' Readers';
Error: 第 3172 个样本有 0 个SQL。
SELECT      e.title,      SUM(d.donation_total) AS total_donation FROM      donations d JOIN      donations d2 ON d.donor_acctid = d2.donor_acctid AND d.donation_total < d2.donation_total WHERE      d2.donation_total IS NULL JOIN      essays e ON d.projectid = e.projectid GROUP BY      e.title
SELECT    d.donor_acctid,    r.project_resource_type,    COUNT(*) AS favorite_project_type FROM    donations d   JOIN resources r ON d.projectid = r.projectid WHERE    d.donation_total IN (     SELECT        MAX(donation_total)     FROM        donations   ) GROUP BY    d.donor_acctid, r.project_resource_type ORDER BY    d.donor_acctid, favorite_project_type DESC LIMIT 10;
SELECT      MIN(date_posted) AS first_date_posted,     p.projectid,     r.item_name FROM      projects p JOIN      donations d ON p.projectid = d.projectid JOIN      resources r ON p.projectid = r.projectid WHERE      d.date_posted = (SELECT MIN(date_posted) FROM donations) GROUP BY      p.projectid, r.item_name;
SELECT vendor_name FROM resources JOIN projects ON resources.projectid = projects.projectid WHERE projects.title = 'iMath';
SELECT    p.date_posted,    p.grade_level FROM    projects p WHERE    p.projectid = (SELECT projectid FROM resources WHERE item_quantity = (SELECT MAX(item_quantity) FROM resources)) ORDER BY    p.date_posted DESC LIMIT 1;
SELECT AVG(donation_to_project)  FROM donations  WHERE projectid IN (SELECT projectid FROM essays WHERE title = 'Recording Rockin\' Readers')  GROUP BY projectid;
SELECT    e.title,    d.donor_acctid,    (d.donation_to_project / p.total_price_excluding_optional_support) * 100 AS percentage FROM    essays e   JOIN projects p ON e.projectid = p.projectid   JOIN donations d ON p.projectid = d.projectid WHERE    p.total_price_excluding_optional_support = (SELECT MAX(total_price_excluding_optional_support) FROM projects) ORDER BY    p.total_price_excluding_optional_support DESC;
SELECT      d.donor_state,      d.donor_acctid,      AVG(d.donation_optional_support) AS avg_donation_optional_support,      r.project_resource_type FROM      donations d JOIN      resources r ON d.projectid = r.projectid WHERE      d.donationid IN (         SELECT              donationid          FROM              donations          GROUP BY              donor_acctid          ORDER BY              MAX(donation_optional_support) DESC          LIMIT 5     ) GROUP BY      d.donor_state,      d.donor_acctid ORDER BY      d.donor_state;
SELECT P.projectid, P.school_city, GROUP_CONCAT(R.item_name) AS item_names FROM projects P JOIN resources R ON P.projectid = R.projectid WHERE P.school_city = 'Brooklyn' GROUP BY P.projectid, P.school_city ORDER BY COUNT(R.item_name) DESC LIMIT 1;
SELECT COUNT(DISTINCT schoolid) FROM projects WHERE school_metro = 'urban' AND EXISTS (   SELECT 1   FROM resources   WHERE resources.projectid = projects.projectid   AND resources.project_resource_type = 'Books' );
SELECT schoolid FROM projects WHERE schoolid IN (   SELECT schoolid   FROM resources   WHERE vendor_name = 'Amazon'   GROUP BY schoolid   ORDER BY COUNT(schoolid) DESC   LIMIT 1 )
SELECT COUNT(DISTINCT d.donor_acctid) FROM donations d JOIN projects p ON d.projectid = p.projectid WHERE d.donor_city = 'Los Angeles' AND p.school_city != 'Los Angeles';
Error: 第 3185 个样本有 0 个SQL。
Error: 第 3186 个样本有 0 个SQL。
SELECT p.title, d.donor_acctid FROM projects p JOIN donations d ON p.projectid = d.projectid WHERE p.school_city = 'Chicago';
SELECT e.title FROM essays e JOIN projects p ON e.projectid = p.projectid WHERE p.teacher_prefix = 'Dr.' AND p.students_reached > 300;
Error: 第 3189 个样本有 0 个SQL。
SELECT e.title FROM essays e JOIN projects p ON e.projectid = p.projectid JOIN (   SELECT projectid, MAX(item_unit_price * item_quantity) as max_funds   FROM resources   GROUP BY projectid ) r ON p.projectid = r.projectid ORDER BY r.max_funds DESC LIMIT 1;
Error: 第 3191 个样本有 0 个SQL。
Error: 第 3192 个样本有 0 个SQL。
Error: 第 3193 个样本有 0 个SQL。
SELECT project_resource_type FROM resources WHERE vendor_name = 'Lakeshore Learning Materials';
Error: 第 3195 个样本有 0 个SQL。
SELECT COUNT(*)  FROM projects p  JOIN donations d ON p.projectid = d.projectid  WHERE p.teacher_acctid IN (   SELECT teacher_acctid    FROM projects    WHERE school_state = 'New York'    AND teacher_ny_teaching_fellow = 't' )  AND d.donor_city = 'New York';
Error: 第 3197 个样本有 0 个SQL。
SELECT v.vendor_name FROM resources r JOIN projects p ON r.projectid = p.projectid JOIN schools s ON p.schoolid = s.schoolid WHERE s.poverty_level = 'highest poverty' GROUP BY v.vendor_name ORDER BY COUNT(r.resourceid) DESC;
Error: 第 3199 个样本有 0 个SQL。
SELECT r.vendor_name FROM resources r JOIN projects p ON r.projectid = p.projectid WHERE p.projectid = (   SELECT projectid   FROM projects   ORDER BY total_price_including_optional_support - total_price_excluding_optional_support DESC   LIMIT 1 )
Error: 第 3201 个样本有 0 个SQL。
SELECT d.donation_message FROM donations d JOIN projects p ON d.projectid = p.projectid WHERE p.school_city = 'Brooklyn' AND p.school_magnet = 't';
SELECT COUNT(*) FROM donations WHERE payment_included_acct_credit = 't' AND       projectid IN (SELECT projectid FROM projects WHERE school_year_round = 't');
SELECT SUM(dollar_amount)  FROM donations  WHERE projectid IN (   SELECT projectid    FROM projects    WHERE primary_focus_area = 'Literacy & Language' );
SELECT d.donor_acctid FROM donations d JOIN projects p ON d.projectid = p.projectid WHERE p.primary_focus_area = 'Literacy & Language' ORDER BY d.donation_total DESC LIMIT 1;
Error: 第 3206 个样本有 0 个SQL。
SELECT item_name, item_unit_price FROM resources JOIN projects ON resources.projectid = projects.projectid WHERE primary_focus_area = 'Literacy & Language' ORDER BY item_unit_price DESC LIMIT 1;
SELECT AVG(donation_total)  FROM donations  WHERE projectid IN (   SELECT projectid    FROM projects    WHERE school_city = 'Brooklyn'    AND teacher_acctid IN (     SELECT teacher_acctid      FROM projects      WHERE school_city = 'Brooklyn'   ) )
Error: 第 3209 个样本有 0 个SQL。
SELECT is_teacher_acct FROM donations WHERE donor_acctid = '22cbc920c9b5fa08dfb331422f5926b5';
Error: 第 3211 个样本有 0 个SQL。
SELECT * FROM projects WHERE teacher_acctid = '42d43fa6f37314365d08692e08680973' AND teacher_ny_teaching_fellow = 1;
Error: 第 3213 个样本有 0 个SQL。
Error: 第 3214 个样本有 0 个SQL。
Error: 第 3215 个样本有 0 个SQL。
Error: 第 3216 个样本有 0 个SQL。
SELECT      ROUND((COUNT(DISTINCT p.projectid) WHERE p.school_magnet = 't' AND r.project_resource_type = 'Books') /             (COUNT(DISTINCT p.projectid) WHERE p.school_magnet = 't') * 100, 2) AS percentage FROM      projects p      JOIN resources r ON p.projectid = r.projectid WHERE      p.school_magnet = 't';
SELECT COUNT(DISTINCT schoolid) FROM projects WHERE projectid IN (   SELECT projectid   FROM resources   WHERE vendorid IN (     SELECT resourceid     FROM resources     WHERE vendor_name = 'ABC School Supply'   ) ) AND school_magnet = 't';
SELECT COUNT(DISTINCT schoolid) FROM projects WHERE teacher_acctid IN (   SELECT donor_acctid   FROM donations   WHERE donor_acctid = '000eebf28658900e63b538cf8a73afbd' ) AND poverty_level = 'highest poverty';
SELECT e.short_description FROM projects p JOIN donations d ON p.projectid = d.projectid WHERE p.schoolid = '301c9bf0a45d159d162b65a93fddd74e';
Error: 第 3221 个样本有 0 个SQL。
SELECT payment_method FROM donations WHERE projectid IN (   SELECT projectid   FROM projects   WHERE teacher_acctid = '822b7b8768c17456fdce78b65abcc18e' )
Error: 第 3223 个样本有 0 个SQL。
SELECT * FROM donations WHERE projectid IN (   SELECT projectid   FROM projects   WHERE schoolid = 'd4af834b1d3fc8061e1ee1b3f1a77b85' ) AND is_teacher_acct = 't';
Error: 第 3225 个样本有 0 个SQL。
Error: 第 3226 个样本有 0 个SQL。
SELECT COUNT(DISTINCT schoolid) FROM projects WHERE school_city = 'Bethlehem' AND school_metro = 'suburban';
SELECT COUNT(*)  FROM projects  WHERE school_city = 'Los Angeles' AND school_year_round = 't';
SELECT COUNT(*) FROM projects WHERE school_state = 'New York' AND school_city = 'Manhattan' AND school_magnet = 't';
Error: 第 3230 个样本有 0 个SQL。
SELECT COUNT(*)  FROM projects  WHERE primary_focus_subject = 'Literature & Writing' AND teacher_prefix = 'Mr';
Error: 第 3232 个样本有 0 个SQL。
Error: 第 3233 个样本有 0 个SQL。
SELECT teacher_prefix FROM projects WHERE title = 'Creating Memories and Inspiring Dreams';
SELECT *  FROM donations  WHERE projectid IN (SELECT projectid FROM essays WHERE title = 'Calculate, Financial Security For Tomorrow Starts Today!')  AND is_teacher_acct = 't';
SELECT e.title FROM donations d JOIN projects p ON d.projectid = p.projectid JOIN essays e ON p.projectid = e.projectid WHERE d.donation_message = 'Donation on behalf of Matt Carpenter because I''m a strong believer in education';
Error: 第 3237 个样本有 0 个SQL。
SELECT SUM(donation_to_project + donation_optional_support) AS total_donation_amount FROM donations WHERE projectid IN (   SELECT projectid   FROM essays   WHERE title = 'Engaging Young Readers with a Leveled Classroom Library' );
SELECT donation_optional_support FROM donations WHERE projectid IN (   SELECT projectid   FROM essays   WHERE title = 'Armenian Genocide' )
Error: 第 3240 个样本有 0 个SQL。
SELECT *  FROM donations  WHERE projectid IN (   SELECT projectid    FROM essays    WHERE title = 'I Can\'t See It...Can You Help Me???' ) AND donation_to_project = 'tip';
Error: 第 3242 个样本有 0 个SQL。
SELECT schoolid FROM projects WHERE title = 'Virtual Aquarium Needs Help!';
SELECT e.title FROM essays e JOIN projects p ON e.projectid = p.projectid JOIN donations d ON p.projectid = d.projectid WHERE d.donation_total = (SELECT MAX(donation_total) FROM donations);
SELECT    (donation_optional_support / donation_total) * 100 AS percentage_tip FROM    donations WHERE    projectid IN (     SELECT        projectid     FROM        essays     WHERE        title = 'Awesome Audiobooks Make Avid Readers'   );
Error: 第 3246 个样本有 0 个SQL。
Error: 第 3247 个样本有 0 个SQL。
SELECT need_statement FROM essays WHERE title = 'Family History Project';
Error: 第 3249 个样本有 0 个SQL。
SELECT vendor_name AS "Vendor Name" FROM resources WHERE item_name = 'Classroom Keepers Management Center';
Error: 第 3251 个样本有 0 个SQL。
SELECT school_county FROM projects WHERE school_state = 'NY' AND poverty_level = 'low poverty' GROUP BY school_county ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 3253 个样本有 0 个SQL。
Error: 第 3254 个样本有 0 个SQL。
SELECT COUNT(*)  FROM donations  WHERE payment_method = 'creditcard'  AND school_district = 'Memphis City School District';
SELECT DISTINCT school_district FROM projects JOIN resources ON projects.projectid = resources.projectid WHERE vendor_name = 'Barnes and Noble';
SELECT school_latitude, school_longitude FROM projects WHERE projectid IN (   SELECT projectid   FROM resources   WHERE item_name = 'R & A Plant Genetics' AND vendor_name = 'Benchmark Education' ) AND school_charter = 0;
SELECT payment_method FROM donations WHERE school_state = 'GA' GROUP BY payment_method ORDER BY COUNT(*) DESC LIMIT 1;
SELECT school_latitude, school_longitude FROM projects WHERE title = 'Look, Look, We Need a Nook!';
SELECT d.donation_message FROM donations d JOIN projects p ON d.projectid = p.projectid WHERE p.school_latitude = 40.735332 AND p.school_longitude = -74.196014 AND p.school_district = 'Newark School District';
SELECT date_posted FROM projects WHERE title = 'Lets Share Ideas';
Error: 第 3262 个样本有 0 个SQL。
SELECT project_resource_type FROM resources JOIN projects ON resources.projectid = projects.projectid WHERE school_district = 'Los Angeles Unif Sch Dist' GROUP BY project_resource_type ORDER BY COUNT(project_resource_type) DESC LIMIT 1;
Error: 第 3264 个样本有 0 个SQL。
SELECT    SUM(MULTIPLY(item_unit_price, item_quantity)) AS total_price,   d.donor_city, d.donor_state, d.donor_zip,    p.school_district FROM    resources r   JOIN projects p ON r.projectid = p.projectid   JOIN donations d ON p.projectid = d.projectid   JOIN schools s ON p.schoolid = s.schoolid WHERE    r.vendor_name = 'ABC School Supply' AND    r.project_resource_type = 'Other' GROUP BY    d.donor_city, d.donor_state, d.donor_zip, p.school_district;
SELECT      SUM(donation_total) AS total_amount_donated,      school_city,      poverty_level FROM      donations JOIN      projects ON donations.projectid = projects.projectid WHERE      projects.title = 'Lets Share Ideas'     AND payment_method = 'paypal' GROUP BY      school_city,      poverty_level;
Error: 第 3267 个样本有 0 个SQL。
Error: 第 3268 个样本有 0 个SQL。
SELECT SUM(donation_to_project + donation_optional_support)  FROM donations  WHERE payment_method = 'Amazon';
Error: 第 3270 个样本有 0 个SQL。
SELECT vendorid FROM resources WHERE item_unit_price <= 15 AND project_resource_type != 'technology'
SELECT COUNT(*) FROM resources WHERE projectid IN (   SELECT projectid   FROM resources   WHERE item_quantity BETWEEN 5 AND 10   AND vendor_name = 'Quill.com' )
SELECT p.projectid, p.schoolid FROM projects p WHERE p.school_district = 'Union Pub School District I-9' AND p.teacher_ny_teaching_fellow = 't';
Error: 第 3274 个样本有 0 个SQL。
Error: 第 3275 个样本有 0 个SQL。
Error: 第 3276 个样本有 0 个SQL。
SELECT      (COUNT(DISTINCT p.projectid) /       (SELECT COUNT(DISTINCT p2.projectid)        FROM projects p2        WHERE p2.school_city = 'Santa Barbara' AND p2.school_metro = 'suburban')) * 100 FROM      projects p WHERE      p.school_city = 'Santa Barbara' AND p.school_metro = 'suburban';
SELECT DIVIDE(SUM(CASE WHEN substr(donation_timestamp,1,7) = '2013-03' THEN payment_method ELSE 0 END),                SUM(CASE WHEN substr(donation_timestamp,1,7) = '2013-03' THEN 1 ELSE 0 END))*100 AS percentage
SELECT AVG(item_unit_price)  FROM resources  WHERE vendor_name = 'AKJ Books';
SELECT COUNT(*)  FROM projects p  JOIN resources r ON p.projectid = r.projectid  WHERE p.school_city = 'Brooklyn'  AND p.school_metro = 'urban'  AND for_honoree = 't'  AND r.item_name = 'TT992 - Refill Pack for Safety Name Tags';
Error: 第 3281 个样本有 0 个SQL。
Error: 第 3282 个样本有 0 个SQL。
SELECT p.projectid, p.title FROM projects p WHERE p.school_latitude = 42003718 AND p.school_longitude = -87668289;
SELECT * FROM projects WHERE title = 'Team More Books!' AND teacher_ny_teaching_fellow = 't';
Error: 第 3285 个样本有 0 个SQL。
Error: 第 3286 个样本有 0 个SQL。
Error: 第 3287 个样本有 0 个SQL。
Error: 第 3288 个样本有 0 个SQL。
SELECT SUM(donation_total)  FROM donations  WHERE donation_included_optional_support = 't'  AND projectid IN (   SELECT projectid    FROM projects    WHERE students_reached > 300 )
SELECT COUNT(DISTINCT r.item_name)  FROM resources r  JOIN projects p ON r.projectid = p.projectid  WHERE p.school_district = 'Onslow Co School District'    AND p.school_metro = 'urban';
SELECT AVG(donation_optional_support + donation_to_project) / SUM(donation_total) AS average_total_donations FROM donations JOIN projects ON donations.projectid = projects.projectid WHERE projects.school_county = 'Fresno';
Error: 第 3292 个样本有 0 个SQL。
SELECT AVG(SUM(item_quantity) / COUNT(donationid))  FROM resources  JOIN projects ON resources.projectid = projects.projectid  JOIN donations ON projects.projectid = donations.projectid  WHERE for_honoree = 't';
SELECT date_posted FROM projects WHERE title = 'Photojournalists Want to Exhibit Their Best Works';
SELECT item_name, item_unit_price FROM resources WHERE projectid IN (   SELECT projectid   FROM projects   WHERE primary_focus_subject = 'Mathematics' ) ORDER BY item_unit_price DESC LIMIT 1;
SELECT school_latitude, school_longitude FROM projects WHERE EXISTS (   SELECT 1   FROM resources   WHERE resources.projectid = projects.projectid   AND resources.item_name = 'Viewscreen LCD from Texas Instruments, TI-84 Plus' )
Error: 第 3297 个样本有 0 个SQL。
Error: 第 3298 个样本有 0 个SQL。
Error: 第 3299 个样本有 0 个SQL。
Error: 第 3300 个样本有 0 个SQL。
SELECT school_latitude, school_longitude FROM projects WHERE title = 'Wiping Away Bad Grades';
SELECT d.donor_city, d.donor_state, d.donor_zip, p.primary_focus_subject FROM donations d JOIN projects p ON d.projectid = p.projectid WHERE d.payment_included_campaign_gift_card = 't';
SELECT    r.item_name, r.item_unit_price, p.short_description FROM    resources r   JOIN projects p ON r.projectid = p.projectid WHERE    r.project_resource_type = 'Books' ORDER BY    r.item_unit_price DESC LIMIT 1;
SELECT grade_level FROM projects WHERE title = 'Too Close for Comfort';
SELECT COUNT(students_reached)  FROM donations  JOIN projects ON donations.projectid = projects.projectid  WHERE donor_zip = '22205';
SELECT      ROUND(DIVIDE(         COUNT(CASE WHEN via_giving_page = 't' THEN donationid ELSE NULL END),          COUNT(donationid)     ) * 100, 2) AS percentage,     primary_focus_area AS primary_area FROM      donations WHERE      via_giving_page = 't' GROUP BY      primary_focus_area
SELECT      ROUND(         (COUNT(CASE WHEN vendor_name = 'Best Buy for Business' THEN 1 END) / COUNT(DISTINCT projectid)) * 100, 2     ) AS percentage FROM      resources WHERE      project_resource_type = 'Technology'
SELECT SUM(num_sales) - SUM(num_sales)  FROM region_sales  WHERE game_platform_id = 50 AND region_id = 1  MINUS  SELECT SUM(num_sales)  FROM region_sales  WHERE game_platform_id = 51 AND region_id = 1;
SELECT game.game_name FROM game WHERE game.genre_id = (   SELECT genre.id   FROM genre   WHERE genre.genre_name = '3D Lemmings' );
SELECT COUNT(*)  FROM game  WHERE genre_id IN (SELECT id FROM genre WHERE genre_name = 'Action');
SELECT g.genre_name FROM game g WHERE g.game_name = '3D Lemmings';
SELECT publisher_name FROM game_publisher JOIN game ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE game.game_name = '3D Lemmings';
SELECT game_name FROM game JOIN game_publisher ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE publisher_name = '10TACLE Studios';
SELECT COUNT(g.id) FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id JOIN game_platform gp2 ON g.id = gp2.game_id JOIN region_sales rs ON gp2.id = rs.game_platform_id JOIN genre genre ON g.genre_id = genre.id WHERE p.publisher_name = '10TACLE Studios' AND genre.genre_name = 'Puzzle';
Error: 第 3315 个样本有 0 个SQL。
SELECT publisher_name FROM publisher WHERE publisher_id = (   SELECT publisher_id   FROM game_publisher   GROUP BY publisher_id   ORDER BY COUNT(game_id) DESC   LIMIT 1 )
SELECT platform_name FROM game_platform JOIN game_publisher ON game_platform.game_publisher_id = game_publisher.id JOIN game ON game_publisher.game_id = game.id JOIN platform ON game_platform.platform_id = platform.id WHERE game_name = 'Panzer Tactics' AND release_year = 2007;
SELECT release_year FROM game_platform WHERE game_name = 'Panzer Tactics' AND platform_name = 'DS';
SELECT publisher_name FROM game JOIN game_publisher ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE genre_name = 'Puzzle';
SELECT publisher_name FROM publisher WHERE id IN (   SELECT publisher_id   FROM game_publisher   WHERE game_id IN (     SELECT id     FROM game     WHERE genre_id IN (       SELECT id       FROM genre       WHERE genre_name = 'Puzzle'     )   )   GROUP BY publisher_id   ORDER BY COUNT(game_id) DESC   LIMIT 1 )
Error: 第 3321 个样本有 0 个SQL。
SELECT (COUNT(gp.game_id) / COUNT(g.id)) * 100 AS percentage FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id JOIN game_platform gp2 ON gp.game_id = gp2.game_id JOIN region_sales rs ON gp2.id = rs.game_platform_id JOIN platform pl ON gp2.platform_id = pl.id JOIN genre gen ON g.genre_id = gen.id WHERE p.publisher_name = 'Nintendo' AND gen.genre_name = 'Sports';
SELECT AVG(num_sales * 100000) AS average_sales FROM region_sales JOIN game_platform ON region_sales.game_platform_id = game_platform.id JOIN game_publisher ON game_platform.game_publisher_id = game_publisher.id JOIN game ON game_publisher.game_id = game.id JOIN platform ON game_platform.platform_id = platform.id WHERE platform.platform_name = 'DS' GROUP BY region_sales.region_id
SELECT COUNT(g.id)  FROM game g  JOIN game_publisher gp ON g.id = gp.game_id  WHERE gp.publisher_id = 352;
SELECT g.genre_id FROM game g WHERE g.game_name = 'Pro Evolution Soccer 2012';
SELECT region_id FROM region WHERE region_name = 'Japan';
SELECT game_platform_id FROM region_sales WHERE region_id = 2 ORDER BY num_sales DESC LIMIT 1;
SELECT g.id FROM genre g JOIN game ON g.id = game.genre_id GROUP BY g.id ORDER BY COUNT(game.id) DESC LIMIT 1;
SELECT id FROM game WHERE game_name = 'Resident Evil Archives: Resident Evil';
Error: 第 3330 个样本有 0 个SQL。
SELECT p.publisher_name FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id WHERE g.game_name = 'ModNation Racers';
SELECT gp.id FROM game_platform gp JOIN region_sales rs ON gp.id = rs.game_platform_id JOIN region r ON rs.region_id = r.id WHERE r.region_name = 'Japan' ORDER BY rs.num_sales DESC LIMIT 1;
SELECT COUNT(DISTINCT platform_id)  FROM game_platform  WHERE game_id IN (SELECT id FROM game WHERE game_name = 'Pro Evolution Soccer 2016');
SELECT COUNT(*) FROM game WHERE genre_id IN (SELECT id FROM genre WHERE genre_name = 'Sports');
SELECT publisher_name FROM game_publisher JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE game_publisher.game_id = 10031;
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id             FROM game_publisher             GROUP BY publisher_id             ORDER BY COUNT(game_id) DESC             LIMIT 1);
SELECT (SELECT COUNT(*) FROM game WHERE genre_id IN (SELECT id FROM genre WHERE genre_name = 'Sports')) - (SELECT COUNT(*) FROM game WHERE genre_id IN (SELECT id FROM genre WHERE genre_name = 'Simulation'));
SELECT g.genre_name FROM game g JOIN genre g1 ON g.genre_id = g1.id WHERE g.game_name = 'Resident Evil: Revelations';
SELECT SUM(num_sales * 100000)  FROM region_sales  WHERE game_platform_id = 3871  AND region_id IN (SELECT id FROM region WHERE region_name = 'Europe');
SELECT COUNT(*)  FROM game  WHERE id IN (SELECT game_id FROM game_publisher WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Ascaron Entertainment GmbH'));
Error: 第 3341 个样本有 0 个SQL。
SELECT (COUNT(g.id) / (SELECT COUNT(*) FROM game WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Namco Bandai Games'))) * 100 FROM game g JOIN genre g_gen ON g.genre_id = g_gen.id WHERE g_gen.genre_name = 'Adventure' AND g.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Namco Bandai Games');
SELECT SUM(CASE WHEN publisher_name = 'Atari' THEN 1 ELSE 0 END) /         SUM(CASE WHEN publisher_name = 'Athena' THEN 1 ELSE 0 END) AS times FROM game_publisher JOIN publisher ON game_publisher.publisher_id = publisher.id;
SELECT COUNT(*) FROM game_publisher JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE publisher.publisher_name = 'Electronic Arts';
SELECT g.genre_name FROM game g JOIN genre mg ON g.genre_id = mg.id WHERE g.game_name = 'Advent Rising';
SELECT COUNT(*) FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id JOIN genre ge ON g.genre_id = ge.id WHERE ge.genre_name = 'Role-Playing' AND p.publisher_name = 'Microsoft Game Studios';
SELECT publisher_name FROM publisher WHERE publisher_id = (   SELECT publisher_id   FROM game_publisher   GROUP BY publisher_id   ORDER BY COUNT(publisher_id) DESC   LIMIT 1 )
Error: 第 3348 个样本有 0 个SQL。
SELECT COUNT(*) FROM game g JOIN game_platform gp ON g.id = gp.game_id JOIN platform p ON gp.platform_id = p.id WHERE p.platform_name = 'PS4' AND gp.release_year = 2014;
SELECT p.publisher_name FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id WHERE g.id = (SELECT MIN(g2.id) FROM game g2);
Error: 第 3351 个样本有 0 个SQL。
SELECT gp.platform_name FROM game_platform gp JOIN region_sales rs ON gp.id = rs.game_platform_id JOIN region r ON rs.region_id = r.id WHERE r.region_name = 'Europe' ORDER BY rs.num_sales DESC LIMIT 1;
SELECT      release_year  FROM      game_platform  WHERE      platform_id IN (SELECT id FROM platform WHERE platform_name = 'PC')  GROUP BY      release_year  ORDER BY      COUNT(game_id) DESC  LIMIT 1;
SELECT publisher_name  FROM publisher  WHERE id IN (SELECT publisher_id               FROM game_publisher               GROUP BY publisher_id               HAVING COUNT(publisher_id) = 1);
SELECT game.game_name FROM game JOIN game_publisher ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE publisher.publisher_name = '505 Games';
SELECT genre_id FROM game WHERE game_name = '25 to Life';
SELECT game.id FROM game WHERE game.genre_id = 2;
Error: 第 3358 个样本有 0 个SQL。
SELECT gp.publisher_id FROM game_platform gp WHERE gp.platform_id = 15;
Error: 第 3360 个样本有 0 个SQL。
SELECT num_sales * 100000 AS total_sales FROM region_sales WHERE region_id = 2 AND game_platform_id = 9615;
SELECT platform_name FROM platform WHERE id IN (   SELECT platform_id   FROM game_platform   WHERE release_year = 2016 );
SELECT release_year FROM game_platform WHERE game_name = '3DS Classic Collection';
SELECT AVG(num_sales * 100000)  FROM region_sales  JOIN region ON region_sales.region_id = region.id  WHERE region.region_name = 'Japan';
SELECT g.genre_name  FROM game g  JOIN game_platform gp ON g.id = gp.game_id  WHERE gp.release_year BETWEEN 2000 AND 2002;
SELECT game.game_name FROM game JOIN game_publisher ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE publisher.publisher_name = '3DO';
SELECT COUNT(*) FROM game WHERE genre_id IN (SELECT id FROM genre WHERE genre_name = 'Role-Playing');
Error: 第 3368 个样本有 0 个SQL。
SELECT publisher_name FROM game_publisher JOIN game_platform ON game_publisher.id = game_platform.game_publisher_id JOIN region_sales ON game_platform.id = region_sales.game_platform_id JOIN region ON region_sales.region_id = region.id JOIN game ON game_platform.game_id = game.id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE region.region_name = 'North America' ORDER BY num_sales DESC LIMIT 1;
SELECT g_platform.release_year FROM game_platform g_platform JOIN region_sales r_sales ON g_platform.id = r_sales.game_platform_id JOIN region r ON r.id = r_sales.region_id WHERE r.region_name = 'North America' AND r_sales.num_sales = 350000;
SELECT platform_name  FROM game  JOIN game_platform ON game.id = game_platform.game_id  JOIN platform ON game_platform.platform_id = platform.id  WHERE game.game_name = '15 Days';
SELECT publisher_name  FROM game_publisher  JOIN publisher ON game_publisher.publisher_id = publisher.id  WHERE game_publisher.game_id = 75;
SELECT game_name FROM game WHERE id = (   SELECT game_id   FROM game_platform   JOIN region_sales ON game_platform_id = id   JOIN region ON region_id = id   WHERE region_name = 'Japan'   ORDER BY num_sales DESC   LIMIT 1 );
SELECT p.publisher_name FROM game_publisher gp JOIN game g ON gp.game_id = g.id JOIN game_platform gp2 ON gp.game_id = gp2.game_publisher_id JOIN region_sales rs ON gp2.id = rs.game_platform_id JOIN region r ON rs.region_id = r.id JOIN publisher p ON gp.publisher_id = p.id WHERE r.region_name = 'Japan' AND rs.num_sales > (SELECT 0.9 * AVG(num_sales) FROM region_sales WHERE region_id = r.id);
SELECT (COUNT(gp.platform_id) WHERE gp.platform_id IN (SELECT gp2.id FROM game_platform gp2 WHERE gp2.release_year = 2004 AND gp2.platform_id IN (SELECT p.id FROM platform p WHERE p.platform_name = 'PSP'))) /         (SELECT COUNT(gp3.id) FROM game_platform gp3 WHERE gp3.release_year = 2004) * 100
SELECT COUNT(*)  FROM game_platform  WHERE release_year = 1981;
Error: 第 3377 个样本有 0 个SQL。
SELECT      r.region_name,      SUM(num_sales * 100000) AS total_game_sales FROM      region_sales rs  JOIN      region r ON rs.region_id = r.id  JOIN      game_platform gp ON rs.game_platform_id = gp.id  WHERE      gp.platform_id = 9658 GROUP BY      r.region_name;
SELECT id FROM publisher WHERE publisher_name = '1C Company';
SELECT genre_name  FROM genre  WHERE id = 3;
SELECT game.id FROM game_platform WHERE release_year = 2017;
Error: 第 3382 个样本有 0 个SQL。
SELECT COUNT(*) FROM game WHERE genre_id IN (   SELECT id   FROM genre   WHERE genre_name = 'Puzzle' );
SELECT game.game_name FROM game JOIN game_platform ON game.id = game_platform.game_id JOIN platform ON game_platform.platform_id = platform.id WHERE platform.platform_name = 'SCD';
SELECT COUNT(*) FROM game JOIN game_publisher ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE publisher.publisher_name = 'Acclaim Entertainment';
SELECT publisher_name FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id WHERE g.game_name = 'Chronicles of the Sword';
SELECT SUM(num_sales * 100000) FROM region_sales JOIN game_platform ON region_sales.game_platform_id = game_platform.id JOIN game ON game_platform.game_id = game.id JOIN platform ON game_platform.platform_id = platform.id JOIN region ON region_sales.region_id = region.id WHERE region.region_name = 'North America' AND platform.platform_name = 'PS4';
SELECT game_platform_id FROM region_sales WHERE region_id = (SELECT id FROM region WHERE region_name = 'Europe') ORDER BY num_sales DESC LIMIT 1;
SELECT game.game_name FROM game WHERE game.release_year = 2011;
SELECT COUNT(DISTINCT g.id) FROM game g JOIN game_platform gp ON g.id = gp.game_id JOIN platform p ON gp.platform_id = p.id WHERE p.platform_name = 'Wii';
SELECT g.game_name, gp.release_year FROM game g JOIN game_platform gp ON g.id = gp.game_id JOIN genre gen ON g.genre_id = gen.id WHERE gen.genre_name = 'Sports' LIMIT 5;
SELECT g.genre_name FROM game g JOIN genre genre ON g.genre_id = genre.id WHERE g.game_name = '2Xtreme';
SELECT platform_name FROM platform JOIN game_platform ON platform.id = game_platform.platform_id JOIN game ON game.id = game_platform.game_id WHERE game.game_name = 'Panzer Tactics';
SELECT ROUND((SUM(num_sales) - AVG(num_sales)) / AVG(num_sales) * 100, 2) FROM region_sales JOIN game_platform ON region_sales.game_platform_id = game_platform.id JOIN game ON game_platform.game_id = game.id JOIN platform ON game_platform.platform_id = platform.id JOIN region ON region_sales.region_id = region.id WHERE region.region_name = 'North America' AND game_platform.game_platform_id = 9577;
SELECT game_name FROM game ORDER BY LENGTH(game_name) DESC LIMIT 1;
SELECT COUNT(*)  FROM game_platform  WHERE release_year = 2001;
Error: 第 3397 个样本有 0 个SQL。
SELECT AVG(count_game / count_publisher) AS average_games_published FROM (   SELECT COUNT(gp.game_id) AS count_game, COUNT(gp.publisher_id) AS count_publisher   FROM game_publisher gp   GROUP BY gp.publisher_id ) AS subquery;
SELECT MIN(release_year)  FROM game_platform;
SELECT MIN(genre_name) AS least_common_game_genre FROM genre WHERE id = (SELECT genre_id FROM game GROUP BY genre_id ORDER BY COUNT(genre_id) LIMIT 1);
SELECT publisher_name FROM game JOIN game_publisher ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE game.game_name = 'Prism: Light the Way';
SELECT      gp.release_year,      p.platform_name,      COUNT(gp.game_publisher_id) as num_games FROM      game_platform gp JOIN      game_publisher gp_id ON gp_id.id = gp.game_publisher_id JOIN      platform p ON gp.platform_id = p.id GROUP BY      gp.release_year, p.platform_name ORDER BY      gp.release_year, num_games DESC;
SELECT COUNT(*) FROM game g WHERE NOT EXISTS (   SELECT 1   FROM region_sales rs   JOIN game_platform gp ON rs.game_platform_id = gp.id   JOIN game_publisher gpublisher ON gp.id = gpublisher.id   JOIN game game ON gpublisher.game_id = game.id   JOIN region r ON rs.region_id = r.id   WHERE r.region_name = 'Europe'   AND rs.num_sales > 0 )
Error: 第 3404 个样本有 0 个SQL。
Error: 第 3405 个样本有 0 个SQL。
SELECT publisher_name FROM game_publisher JOIN publisher ON game_publisher.publisher_id = publisher.id GROUP BY publisher_name ORDER BY COUNT(game_id) DESC LIMIT 1;
Error: 第 3407 个样本有 0 个SQL。
SELECT DISTINCT release_year FROM game_platform WHERE platform_id IN (   SELECT id   FROM platform   WHERE platform_name = 'WiiU' ) AND game_id IN (   SELECT id   FROM game   WHERE genre_id IN (     SELECT id     FROM genre   ) );
SELECT game.game_name FROM game JOIN game_platform ON game.id = game_platform.game_id JOIN region_sales ON game_platform.id = region_sales.game_platform_id JOIN region ON region_sales.region_id = region.id WHERE region.region_name = 'Japan' ORDER BY region_sales.num_sales DESC LIMIT 1;
SELECT game.game_name  FROM game  JOIN game_publisher ON game.id = game_publisher.game_id  JOIN publisher ON game_publisher.publisher_id = publisher.id  WHERE publisher.publisher_name = 'Activision';
Error: 第 3411 个样本有 0 个SQL。
SELECT MULTIPLY(DIVIDE(SUM(g.genre_name = 'sport'), COUNT(g.game_name)), 100.0) AS percentage FROM game g JOIN genre on g.genre_id = genre.id WHERE genre.genre_name = 'sport';
SELECT DIVIDE(SUM(num_sales WHERE region_name = 'North America'), SUM(num_sales WHERE region_name = 'Japan')) AS ratio FROM region_sales JOIN region ON region_sales.region_id = region.id WHERE region_name IN ('North America', 'Japan');
SELECT MAX(COUNT(release_year))  FROM game_platform;
SELECT COUNT(*)  FROM publisher  WHERE publisher_name LIKE '%Interactive%';
SELECT platform_name, MAX(num_sales)  FROM region_sales  JOIN game_platform ON region_sales.game_platform_id = game_platform.id  JOIN game ON game_platform.game_id = game.id  JOIN platform ON game_platform.platform_id = platform.id  JOIN region ON region_sales.region_id = region.id  WHERE region.region_name = 'North America'  GROUP BY platform_name  ORDER BY MAX(num_sales) DESC  LIMIT 2;
Error: 第 3417 个样本有 0 个SQL。
SELECT publisher_name FROM game_publisher JOIN game_platform ON game_publisher.id = game_platform.game_publisher_id JOIN game ON game_platform.game_id = game.id WHERE release_year = 2007 GROUP BY publisher_name ORDER BY COUNT(publisher_name) DESC LIMIT 1;
Error: 第 3419 个样本有 0 个SQL。
SELECT p.publisher_name FROM publisher p JOIN game_publisher gp ON p.id = gp.publisher_id JOIN game g ON gp.game_id = g.id JOIN genre genre ON g.genre_id = genre.id WHERE genre.genre_name = 'Action' GROUP BY p.publisher_name ORDER BY COUNT(g.id) DESC LIMIT 1;
SELECT COUNT(*) FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id JOIN game_platform gp2 ON g.id = gp2.game_id WHERE g.genre_id IN (SELECT id FROM genre WHERE genre_name = 'Sports') AND p.publisher_name = 'Nintendo';
SELECT g.genre_name FROM game g WHERE g.game_name = '2 Games in 1: Sonic Advance & ChuChu Rocket!';
SELECT COUNT(*)  FROM region_sales  WHERE region_id IN (SELECT id FROM region WHERE region_name = 'Other')  AND num_sales > 0  AND game_platform_id IN (SELECT id FROM game_platform WHERE platform_id IN (SELECT id FROM platform WHERE platform_name = 'DS'));
SELECT game_name FROM game WHERE id IN (   SELECT game_id   FROM game_publisher   WHERE publisher_id IN (     SELECT id     FROM publisher     WHERE publisher_name = 'American Softworks'   ) );
SELECT COUNT(*) FROM game WHERE genre_id IN (   SELECT id   FROM genre   WHERE genre_name = 'Strategy' );
SELECT publisher_name FROM game_publisher JOIN game ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE game.game_name = 'Overwatch';
SELECT g.genre_name FROM genre g JOIN game j ON g.id = j.genre_id GROUP BY g.genre_name ORDER BY COUNT(j.genre_id) DESC LIMIT 1;
SELECT SUM(num_sales * 100000) FROM region_sales WHERE region_id = (SELECT id FROM region WHERE region_name = 'Europe') AND game_platform_id IN (SELECT id FROM game_platform WHERE id = 26);
SELECT COUNT(*)  FROM game_platform  WHERE release_year = 2001;
SELECT COUNT(*)  FROM game  WHERE game_name LIKE '%Box%';
SELECT game.game_name, MAX(region_sales.num_sales) AS max_sales FROM game JOIN game_platform ON game.id = game_platform.game_id JOIN region_sales ON game_platform.id = region_sales.game_platform_id GROUP BY game.game_name ORDER BY max_sales DESC LIMIT 3;
SELECT MIN(release_year)  FROM game_platform;
SELECT *  FROM publisher  WHERE publisher_name LIKE '%Entertainment%';
SELECT game_name  FROM game  WHERE genre_id IN (SELECT id FROM genre WHERE genre_name = 'Adventure');
Error: 第 3435 个样本有 0 个SQL。
Error: 第 3436 个样本有 0 个SQL。
Error: 第 3437 个样本有 0 个SQL。
SELECT g.genre_name FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id WHERE p.publisher_name = 'Agatsuma Entertainment';
SELECT COUNT(*) FROM game WHERE genre_id NOT IN (SELECT id FROM genre WHERE genre_name IN ('Role-Playing', 'Shooter', 'Simulation'));
SELECT      r.region_name,      p.platform_name,      SUM(num_sales) AS total_sales FROM      region_sales rs JOIN      game_platform gp ON rs.game_platform_id = gp.id JOIN      game g ON gp.game_publisher_id = g.id JOIN      platform p ON gp.platform_id = p.id JOIN      region r ON rs.region_id = r.id GROUP BY      r.region_name, p.platform_name ORDER BY      total_sales DESC;
SELECT publisher_name FROM game_publisher JOIN game ON game.id = game_publisher.game_id JOIN genre ON game.genre_id = genre.id WHERE genre.genre_name = 'Puzzle' GROUP BY publisher_name ORDER BY COUNT(publisher_name) DESC LIMIT 1;
SELECT g.game_name FROM game g JOIN game_platform gp ON g.id = gp.game_id JOIN region_sales rs ON gp.id = rs.game_platform_id JOIN game_platform gp2 ON rs.game_platform_id = gp2.id WHERE gp2.release_year = (SELECT MIN(release_year) FROM game_platform) ORDER BY rs.num_sales ASC LIMIT 1;
Error: 第 3443 个样本有 0 个SQL。
SELECT r.region_name FROM region r JOIN region_sales rs ON r.id = rs.region_id JOIN game_platform gp ON rs.game_platform_id = gp.id JOIN game_publisher gp_pub ON gp.game_publisher_id = gp_pub.id JOIN game g ON gp_pub.game_id = g.id WHERE g.game_name = 'Pengo';
SELECT game.game_name FROM game JOIN game_platform ON game.id = game_platform.game_id WHERE game_platform.release_year = 2010;
SELECT AVG(num_sales * 100000)  FROM region_sales  WHERE game_platform_id IN (   SELECT id    FROM game_platform    WHERE platform_id IN (     SELECT id      FROM platform      WHERE platform_name = 'PS2'   ) );
SELECT    MULTIPLY(DIVIDE(SUM(gp.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Brash Entertainment')), COUNT(g.id)), 100.0) AS percentage FROM    game g   JOIN game_publisher gp ON g.id = gp.game_id   JOIN publisher p ON gp.publisher_id = p.id
SELECT SUM(num_sales) * 100000 AS total_games_sold FROM region_sales WHERE region_id = 1;
Error: 第 3449 个样本有 0 个SQL。
SELECT platform_name FROM platform WHERE id IN (   SELECT platform_id   FROM game_platform   WHERE game_platform_id IN (     SELECT game_platform_id     FROM region_sales     WHERE region_id IN (       SELECT id       FROM region       WHERE region_name = 'Europe'     )   )   ORDER BY num_sales DESC   LIMIT 1 )
SELECT publisher_name FROM game_publisher JOIN publisher ON game_publisher.publisher_id = publisher.id JOIN game ON game_publisher.game_id = game.id WHERE game.game_name = '2002 FIFA World Cup';
Error: 第 3452 个样本有 0 个SQL。
SELECT g.genre_name FROM game g JOIN game_genre gg ON g.id = gg.game_id WHERE g.game_name = '2010 FIFA World Cup South Africa';
SELECT r.region_name FROM region r JOIN region_sales rs ON r.id = rs.region_id GROUP BY r.region_name ORDER BY SUM(rs.num_sales) DESC LIMIT 1;
SELECT    MULTIPLY(SUM(num_sales), 100000)  FROM    region_sales  WHERE    game_platform_id IN (     SELECT        id      FROM        game_platform      WHERE        platform_id IN (         SELECT            id          FROM            platform          WHERE            platform_name = 'PS3'       )        AND region_id IN (         SELECT            id          FROM            region          WHERE            region_name = 'Japan'       )   )
SELECT game.game_name FROM game JOIN game_platform ON game.id = game_platform.game_id WHERE game_platform.release_year = 2007;
SELECT COUNT(g.id)  FROM game g  JOIN game_publisher gp ON g.id = gp.game_id  JOIN publisher p ON gp.publisher_id = p.id  WHERE p.publisher_name = 'Activision';
SELECT gp.release_year FROM game_platform gp JOIN region_sales rs ON gp.id = rs.game_platform_id JOIN region r ON rs.region_id = r.id WHERE SUM(rs.num_sales) > 200000 AND r.region_name = 'Japan';
SELECT COUNT(*) FROM game_platform WHERE release_year = 2010 AND platform_id IN (   SELECT id   FROM platform   WHERE platform_name = 'PS3' )
SELECT publisher_name FROM publisher WHERE publisher_name IN (   SELECT publisher_name   FROM game_publisher   GROUP BY publisher_name   ORDER BY COUNT(*) DESC   LIMIT 1 )
Error: 第 3461 个样本有 0 个SQL。
SELECT      MULTIPLY(DIVIDE(SUM(gp.platform_id = (SELECT id FROM platform WHERE platform_name = 'PS4')), COUNT(gp.game_id)), 100) AS percentage FROM      game_platform gp WHERE      gp.release_year = 2014
SELECT SUM(num_sales)  FROM region_sales  WHERE region_id = 4;
SELECT game_platform_id  FROM region_sales  WHERE region_id = 1;
SELECT SUM(num_sales) WHERE region_id = 2) - SUM(num_sales) WHERE region_id = 3) AS difference FROM region_sales;
SELECT gp.platform_id FROM game_platform gp WHERE gp.release_year = 2007;
SELECT gp.publisher_id FROM game_platform gp WHERE gp.platform_id = 16;
Error: 第 3468 个样本有 0 个SQL。
Error: 第 3469 个样本有 0 个SQL。
Error: 第 3470 个样本有 0 个SQL。
SELECT COUNT(DISTINCT gp.publisher_id) FROM game_platform gp JOIN game_publisher gp_pub ON gp_pub.id = gp.game_publisher_id JOIN game g ON gp_pub.game_id = g.id JOIN platform p ON p.id = gp.platform_id WHERE p.platform_name = 'X360';
SELECT platform_name FROM game_platform JOIN game_publisher ON game_platform.game_publisher_id = game_publisher.id JOIN game ON game_publisher.game_id = game.id JOIN platform ON game_platform.platform_id = platform.id WHERE game_platform.release_year = 2000;
SELECT    (SELECT COUNT(*) FROM game_platform WHERE platform_id IN (SELECT id FROM platform WHERE platform_name = 'PS3')) -    (SELECT COUNT(*) FROM game_platform WHERE platform_id IN (SELECT id FROM platform WHERE platform_name = 'X360'));
Error: 第 3474 个样本有 0 个SQL。
SELECT COUNT(DISTINCT gp.game_id)  FROM game_publisher gp  JOIN publisher p ON gp.publisher_id = p.id  WHERE p.publisher_name IN ('Capcom', 'Sony Computer Entertainment');
SELECT g.genre_name FROM game g JOIN genre m ON g.genre_id = m.id WHERE g.game_name = 'Grand Theft Auto V';
SELECT game.game_name FROM game JOIN genre ON game.genre_id = genre.id WHERE genre.genre_name = 'Racing';
SELECT COUNT(*)  FROM game  WHERE genre_id IN (SELECT id FROM genre WHERE genre_name = 'Fighting');
SELECT g.genre_name FROM game g JOIN game_publisher gp ON g.id = gp.game_id JOIN publisher p ON gp.publisher_id = p.id WHERE p.id = 464;
Error: 第 3480 个样本有 0 个SQL。
SELECT SUM(num_sales)  FROM region_sales  WHERE game_platform_id IN (   SELECT id    FROM game_platform    WHERE release_year = 2000 )
SELECT      SUM(num_sales) - SUM(num_sales) OVER (PARTITION BY game_platform_id)  FROM      region_sales  WHERE      game_platform_id IN (         SELECT              gp.id          FROM              game_platform gp          JOIN              game_publisher gp_p ON gp.id = gp_p.game_publisher_id          JOIN              game g ON gp_p.game_id = g.id          JOIN              game_platform gp_2 ON gp_p.game_id = gp_2.game_id          WHERE              gp_2.release_year = 2000     )  MINUS  SELECT      SUM(num_sales) - SUM(num_sales) OVER (PARTITION BY game_platform_id)  FROM      region_sales  WHERE      game_platform_id IN (         SELECT              gp.id          FROM              game_platform gp          JOIN              game_publisher gp_p ON gp.id = gp_p.game_publisher_id          JOIN              game g ON gp_p.game_id = g.id          JOIN              game_platform gp_2 ON gp_p.game_id = gp_2.game_id          WHERE              gp_2.release_year = 1990     );
SELECT platform_id FROM game_platform WHERE release_year = 2006;
SELECT AVG(num_sales * 100000)  FROM region_sales  WHERE region_id = 3;
SELECT release_year FROM game_platform WHERE id = 19;
SELECT SUM(num_sales) * 100000 AS total_sales FROM region_sales WHERE game_platform_id = 66;
SELECT game_name FROM game WHERE id = 44;
Error: 第 3488 个样本有 0 个SQL。
SELECT game_name  FROM game  WHERE id IN (   SELECT game_id    FROM game_platform    WHERE release_year = 2015 );
SELECT COUNT(*) FROM game g JOIN game_platform gp ON g.id = gp.game_id JOIN genre ge ON g.genre_id = ge.id WHERE ge.genre_name = 'Adventure' AND gp.release_year = 2005;
SELECT publisher_name FROM game, game_publisher, publisher WHERE game.game_name = 'Adventure Time: Explore the Dungeon Because I Don''t Know!' AND game.id = game_publisher.game_id AND game_publisher.publisher_id = publisher.id;
SELECT gp.id, r.region_name FROM region_sales rs JOIN game_platform gp ON rs.game_platform_id = gp.id JOIN region r ON rs.region_id = r.id WHERE rs.num_sales < 20000;
SELECT game_name FROM game WHERE id IN (   SELECT game_id   FROM game_publisher   WHERE publisher_id IN (     SELECT id     FROM publisher     WHERE publisher_name = '505 Games'   ) ) AND release_year = 2006;
SELECT g.genre_name FROM game g WHERE g.id = 119;
SELECT game.id FROM game JOIN game_publisher ON game.id = game_publisher.game_id JOIN publisher ON game_publisher.publisher_id = publisher.id WHERE publisher.publisher_name = 'Abylight';
SELECT r.region_name FROM region_sales rs JOIN game_platform gp ON rs.game_platform_id = gp.id JOIN game_publisher gp2 ON gp.game_publisher_id = gp2.id JOIN game g ON gp2.game_id = g.id JOIN region r ON rs.region_id = r.id WHERE rs.num_sales = (SELECT MIN(num_sales) FROM region_sales);
SELECT game.game_name FROM game JOIN genre ON game.genre_id = genre.id WHERE genre.genre_name = 'Strategy';
Error: 第 3498 个样本有 0 个SQL。
SELECT g.genre_name FROM game g WHERE g.game_name IN ('Airlock', 'Airline Tycoon', 'Airblade');
SELECT SUM(num_sales) * 100000 FROM region_sales JOIN game_platform ON region_sales.game_platform_id = game_platform.id JOIN game_publisher ON game_platform.game_publisher_id = game_publisher.id JOIN game ON game_publisher.game_id = game.id JOIN region ON region_sales.region_id = region.id WHERE region.region_name = 'North America';
SELECT p.publisher_name FROM game_publisher gp JOIN game g ON gp.game_id = g.id JOIN game_platform gp2 ON gp.game_id = gp2.game_publisher_id JOIN region_sales rs ON gp2.id = rs.game_platform_id JOIN region r ON rs.region_id = r.id JOIN publisher p ON gp.publisher_id = p.id WHERE rs.num_sales < 10000;
SELECT platform_id  FROM game  WHERE game_name = 'Airborne Troops: Countdown to D-Day';
SELECT COUNT(g.id) FROM game g JOIN game_platform gp ON g.id = gp.game_id JOIN platform p ON gp.platform_id = p.id WHERE p.platform_name = 'PSP' AND gp.release_year = 2004;
SELECT g.genre_name FROM game g JOIN genre mg ON g.genre_id = mg.id WHERE g.game_name = '999: Nine Hours, Nine Persons, Nine Doors';
SELECT release_year FROM game_platform WHERE game_id = 156;
SELECT      SUM(CASE WHEN g_platform.platform_name = 'SNES' THEN 1 ELSE 0 END) -      SUM(CASE WHEN g_platform.platform_name = 'DS' THEN 1 ELSE 0 END) AS difference FROM      game_publisher gp JOIN      game_platform g_platform ON gp.id = g_platform.game_publisher_id JOIN      game game ON gp.game_id = game.id JOIN      publisher pub ON gp.publisher_id = pub.id WHERE      pub.publisher_name = 'Culture Brain';
SELECT      MULTIPLY(DIVIDE(SUM(gp.release_year = 2007), COUNT(gp.release_year)), 100.0) AS percentage FROM      game_platform gp WHERE      gp.platform_id IN (SELECT id FROM platform WHERE platform_name = 'Wii') AND     gp.release_year = 2007;
SELECT gp.platform_id FROM game_platform gp JOIN region_sales rs ON gp.id = rs.game_platform_id JOIN region r ON rs.region_id = r.id WHERE r.region_name = 'Europe' AND SUM(num_sales) < (AVG(num_sales) * 0.3);
SELECT COUNT(*)  FROM Author  WHERE Affiliation = 'University of California Berkeley';
SELECT Title, Keyword FROM Paper WHERE Title = 'Stitching videos streamed by mobile phones in real-time';
SELECT Paper.Title FROM Paper JOIN Journal ON Paper.JournalId = Journal.Id WHERE Journal.FullName = 'Concepts in Magnetic Resonance Part A' AND Paper.Year = 2008;
SELECT COUNT(*)  FROM Paper  WHERE JournalId IN (SELECT Id FROM Journal WHERE FullName = 'Concepts in Magnetic Resonance Part A');
SELECT HomePage FROM Journal WHERE Id = (SELECT JournalId             FROM Paper             WHERE Title = 'Area Effects in Cepaea');
SELECT COUNT(*) FROM Paper WHERE JournalId IN (   SELECT Id   FROM Journal   WHERE FullName = 'Molecular Brain' ) AND Year = 2011;
Error: 第 3515 个样本有 0 个SQL。
SELECT COUNT(DISTINCT a.Id) FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title = 'Equation Solving in Geometrical Theories';
SELECT a.Name FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title = 'Area Effects in Cepaea';
SELECT COUNT(*) FROM PaperAuthor pa JOIN Author a ON pa.AuthorId = a.Id WHERE pa.PaperId IN (   SELECT p.Id   FROM Paper p   WHERE p.Title = 'Stitching videos streamed by mobile phones in real-time' ) AND a.Affiliation = 'Cairo Microsoft Innovation Lab';
SELECT P.Title FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId JOIN Author A ON PA.AuthorId = A.Id WHERE A.Name = 'Klaus Zimmermann';
SELECT a.Name FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title = 'Incremental Extraction of Keyterms for Classifying Multilingual Documents in the Web' AND a.Affiliation = 'National Taiwan University Department of Computer Science and Information Engineering Taiwan';
SELECT p.Title FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE p.Year = 1995 AND a.Name = 'Thomas Wiegand';
Error: 第 3522 个样本有 0 个SQL。
SELECT AVG(COUNT(Paper.Id))  FROM Paper  WHERE JournalId IN (SELECT Id FROM Journal WHERE FullName = 'Molecular Brain')  AND Year BETWEEN 2008 AND 2011;
SELECT (COUNT(p.Id) - COUNT(j1.Id) + COUNT(j2.Id)) / COUNT(j2.Id) * 100 FROM Paper p JOIN Journal j1 ON p.JournalId = j1.Id JOIN Journal j2 ON p.JournalId = j2.Id WHERE j1.FullName = 'Cases Journal' AND j2.FullName = 'Molecular Brain';
SELECT COUNT(*)  FROM Journal  WHERE FullName LIKE '%computing%';
SELECT P.Id, A.Id FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId JOIN Author A ON PA.AuthorId = A.Id WHERE A.Affiliation = 'Cairo Microsoft Innovation Lab';
SELECT c.ShortName, c.FullName FROM Conference c WHERE c.HomePage = 'http://www.informatik.uni-trier.de/~ley/db/conf/ices/index.html';
SELECT Author.Id FROM Author WHERE Author.Name = 'Peter';
Error: 第 3529 个样本有 0 个SQL。
SELECT p.Title, j.HomePage FROM Paper p JOIN Journal j ON p.JournalId = j.Id WHERE p.Year = (SELECT MAX(Year) FROM Paper)
SELECT P.Title, C.ShortName FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId JOIN Author A ON PA.AuthorId = A.Id WHERE P.Year = 1999 AND A.Name LIKE 'Philip%' JOIN Conference C ON P.ConferenceId = C.Id
SELECT COUNT(p.Id), c.HomePage FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE p.Year BETWEEN 1990 AND 2000 AND p.ConferenceId = 187;
SELECT Paper.Title FROM Paper JOIN PaperAuthor ON Paper.Id = PaperAuthor.PaperId JOIN Author ON PaperAuthor.AuthorId = Author.Id WHERE Paper.Year = 2003 AND Author.Affiliation = 'Department of Network Science, Graduate School of Information Systems, The University of Electro-Communications';
SELECT a.Name, j.ShortName FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id JOIN Journal j ON p.JournalId = j.Id JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title LIKE 'chemiluminescence%' AND p.JournalId BETWEEN 245 AND 250;
SELECT DISTINCT pa.Name, pa.Affiliation FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id WHERE p.ConferenceId = 0 AND p.JournalId < 100
SELECT p.Title, pa.AuthorId FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId WHERE p.ConferenceId < 100 AND p.Year = 2006;
Error: 第 3537 个样本有 0 个SQL。
SELECT    j.HomePage,    pa.AuthorId FROM    Paper p    JOIN PaperAuthor pa ON p.Id = pa.PaperId    JOIN Author a ON pa.AuthorId = a.Id    JOIN Journal j ON p.JournalId = j.Id  WHERE    p.Year BETWEEN 2000 AND 2005    AND p.Title LIKE '%SOCIAL%';
SELECT a.Id, a.Affiliation FROM PaperAuthor pa JOIN Author a ON pa.AuthorId = a.Id WHERE pa.PaperId IN (   SELECT p.Id   FROM Paper p   WHERE p.Year = 2009 AND p.JournalId = 0 )
SELECT      (COUNT(pa.ConferenceId = 0) / COUNT(pa.ConferenceId)) * 100 FROM      Paper p JOIN      PaperAuthor pa ON p.Id = pa.PaperId JOIN      Journal j ON p.JournalId = j.Id WHERE      j.Id BETWEEN 200 AND 300 AND j.ShortName LIKE 'A%';
SELECT      DIVIDE(         COUNT(pa.PaperId),          COUNT(p.PaperId)     ) * 100 AS Percentage FROM      Paper p     JOIN PaperAuthor pa ON p.Id = pa.PaperId WHERE      p.Year = 2001
SELECT FullName, HomePage FROM Conference WHERE ShortName = 'ICWE';
SELECT Affiliation FROM Author WHERE Affiliation IN ('Standford University', 'Massachusetts Institute of Technolgy') GROUP BY Affiliation ORDER BY COUNT(Id) DESC LIMIT 1;
SELECT COUNT(DISTINCT AuthorId) AS WithAffiliation, COUNT(DISTINCT AuthorId) - COUNT(DISTINCT AuthorId) AS WithoutAffiliation FROM PaperAuthor WHERE Affiliation IS NOT NULL UNION ALL SELECT 0 AS WithAffiliation, COUNT(DISTINCT AuthorId) AS WithoutAffiliation FROM PaperAuthor WHERE Affiliation IS NULL
SELECT a.Name, a.Id FROM Author a WHERE a.Affiliation = 'University of Oulu';
SELECT p.Title, a.Affiliation FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE a.Name = 'Roger J. Marshal' AND p.ConferenceId = 0 AND p.JournalId = 0;
SELECT p.Id, p.Title, p.Year, j.FullName FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id JOIN Journal j ON p.JournalId = j.Id GROUP BY p.Id, p.Title, p.Year, j.FullName ORDER BY COUNT(pa.PaperId) DESC LIMIT 1;
SELECT P.Title, P.Year, C.ShortName, PA.Name FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId JOIN Author A ON PA.AuthorId = A.Id JOIN Conference C ON P.ConferenceId = C.Id WHERE P.Id = 15;
SELECT pa.PaperId, p.Year, p.Keyword FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id JOIN Author a ON pa.AuthorId = a.Id WHERE a.Id < 1000 AND a.Affiliation IN ('Zurich, ETH')
SELECT a.Name, a.Id FROM PaperAuthor pa JOIN Author a ON pa.AuthorId = a.Id WHERE pa.PaperId IN (   SELECT p.Id   FROM Paper p   WHERE p.Title = 'Inspection resistant memory: Architectural support for security from physical examination' ) AND a.Affiliation = 'Microsoft Research, USA';
SELECT a.Name, a.Affiliation, j.ShortName, j.FullName FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id JOIN Paper p2 ON pa.PaperId = p2.Id JOIN Journal j ON p2.JournalId = j.Id WHERE p2.Title = 'Decreased Saliva Secretion and Down-Regulation of AQP5 in Submandibular Gland in Irradiated Rats';
SELECT P.Title, P.JournalId FROM Paper P JOIN Conference C ON P.ConferenceId = C.Id WHERE C.FullName = 'International Symposium of Robotics Research';
SELECT p.Title, p.Year, p.Keyword FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE a.Id = 661002 AND a.Affiliation = 'Scientific Computing and Imaging Institute, University of Utah, UT 84112, USA';
SELECT      'IWC' AS JournalName,      COUNT(Paper.Id) AS PaperCount2000,      COUNT(Paper.Id) AS PaperCount2010,      COUNT(Paper.Id) - COUNT(Paper.Id) AS Difference FROM      Paper WHERE      Paper.Year = '2000' OR Paper.Year = '2010'     AND Paper.JournalId IN (         SELECT              Id         FROM              Journal         WHERE              ShortName = 'IWC'     );
SELECT    J.Id, J.ShortName, J.FullName, P.Title FROM    Journal J   INNER JOIN Paper P ON J.Id = P.JournalId WHERE    P.Year = 2013 AND J.Id IN (SELECT JournalId FROM Paper WHERE JournalId != 0 AND JournalId != -1) LIMIT 4;
SELECT    p.Title,    pa.Name,    c.ShortName FROM    Paper p   JOIN PaperAuthor pa ON p.Id = pa.PaperId   JOIN Author a ON pa.AuthorId = a.Id   JOIN Conference c ON p.ConferenceId = c.Id WHERE    c.ShortName = 'MICRO'    AND p.Year BETWEEN '1971' AND '1980' ORDER BY    p.Year;
SELECT COUNT(*)  FROM Paper  WHERE Year = 0;
SELECT C.FullName FROM Paper P JOIN Conference C ON P.ConferenceId = C.Id WHERE P.Title = 'The Dissimilarity Representation as a Tool for Three-Way Data Classification: A 2D Measure';
SELECT c.HomePage FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE p.Title = 'Energy-efficiency bounds for noise-tolerant dynamic circuits';
SELECT a.Name  FROM PaperAuthor pa  JOIN Author a ON pa.AuthorId = a.Id  WHERE pa.PaperId BETWEEN 101 AND 105;
Error: 第 3561 个样本有 0 个SQL。
SELECT Journal.HomePage FROM Paper JOIN Journal ON Paper.JournalId = Journal.Id WHERE Paper.Title = '364: Induction of Mixed Chimerism and Transplantation Tolerance in a Non-Human Primate Lung Allograft Model: Early Results';
Error: 第 3563 个样本有 0 个SQL。
SELECT pa.Name FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id WHERE p.Year = '2005' AND p.Keyword = 'LOAD; IDE; SNP; haplotype; association studies';
SELECT COUNT(DISTINCT a.Id) FROM Author a JOIN PaperAuthor pa ON a.Id = pa.AuthorId JOIN Paper p ON pa.PaperId = p.Id WHERE p.Title LIKE '%145 GROWTH HORMONE RECEPTORS AND THE ONSET OF HYPERINSULINEMIA IN THE OBESE ZUCKER RAT:%';
SELECT p.Title FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id WHERE pa.AuthorId IN (   SELECT a.Id   FROM Author a   WHERE a.Name = 'Jei Keon Chae' ) AND pa.Name != 'Jei Keon Chae';
SELECT      c.ShortName AS ConferenceName,      j.ShortName AS JournalName,      pa.Name AS CoAuthor,      p.Title  FROM      Paper p  JOIN      PaperAuthor pa ON p.Id = pa.PaperId  JOIN      Author a ON pa.AuthorId = a.Id  WHERE      a.Name = 'Shueh-Lin Yau'  JOIN      Conference c ON p.ConferenceId = c.Id  JOIN      Journal j ON p.JournalId = j.Id;
SELECT COUNT(p.Id) FROM Paper p WHERE p.Year BETWEEN '1990' AND '2000';
SELECT a.Name FROM Author a WHERE a.Affiliation = 'Birkbeck University of London';
SELECT ShortName FROM Conference WHERE FullName LIKE 'International Symposium%';
SELECT COUNT(*)  FROM Journal  WHERE HomePage = '';
SELECT a.Name  FROM PaperAuthor pa  JOIN Paper p ON pa.PaperId = p.Id  JOIN Author a ON pa.AuthorId = a.Id  WHERE p.Year = 0;
SELECT a.Affiliation FROM PaperAuthor pa JOIN Author a ON pa.AuthorId = a.Id JOIN Paper p ON pa.PaperId = p.Id WHERE p.Keyword = 'Quantum Physics';
SELECT C.FullName AS ConferenceName, P.* FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId JOIN Author A ON PA.AuthorId = A.Id WHERE P.ConferenceId != 0 AND P.JournalId = 0 AND P.Year != 0 GROUP BY C.FullName, P.Id
SELECT P.Title FROM Paper P WHERE P.ConferenceId IN (   SELECT C.Id   FROM Conference C   WHERE C.HomePage IS NULL OR C.HomePage = '' )
SELECT J.ShortName, J.FullName, J.HomePage FROM Journal J WHERE J.ShortName IS NULL OR J.ShortName = ''
SELECT a.Affiliation FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title = 'A combined search for the standard model Higgs boson at s = 1.96 Â TeV';
SELECT J.FullName FROM Paper P JOIN Journal J ON P.JournalId = J.Id WHERE P.Year = 2001;
SELECT pa.Name, pa.Affiliation FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id WHERE p.Title = 'Particle identification using the time-over-threshold method in the ATLAS Transition Radiation Tracker' AND pa.AuthorId != (SELECT AuthorId FROM PaperAuthor WHERE pa.PaperId = PaperId AND pa.Name = p.Name);
SELECT COUNT(DISTINCT p.Id), p.Year FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE c.FullName = 'International Conference on Database Theory' AND p.Year <> 0;
SELECT J.FullName FROM Journal J JOIN Paper P ON J.Id = P.JournalId WHERE P.Keyword = 'Sustainability';
SELECT a.Name FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id JOIN Conference c ON p.ConferenceId = c.Id JOIN Author a ON pa.AuthorId = a.Id WHERE c.FullName LIKE '%Workshop%';
SELECT DIVIDE(COUNT(pa.Affiliation), COUNT(pa.AuthorId)) * 100 AS Percentage FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id WHERE p.Title LIKE '%Charged particle multiplicity%' AND pa.Affiliation LIKE '%INFN%';
SELECT DIVIDE(COUNT(J.ShortName), COUNT(P.Id)) * 100 FROM Journal J JOIN Paper P ON J.Id = P.JournalId WHERE J.ShortName LIKE 'ANN%' AND P.Year = 1989
SELECT COUNT(*)  FROM PaperAuthor pa  JOIN Author a ON pa.AuthorId = a.Id  WHERE pa.PaperId = 1 AND a.Affiliation LIKE '%Microsoft Research%';
SELECT Title, Year FROM Paper WHERE Title = 'A Formal Approach to Service Component Architecture';
SELECT (COUNT(Paper.Id) * 100.0 / (SELECT COUNT(*) FROM Paper)) AS Percentage FROM Paper WHERE Paper.Year > 2000 AND Paper.ConferenceId = 0 AND Paper.JournalId = 0;
SELECT a.Name FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title = 'Hypermethylation of the <I>TPEF/HPP1</I> Gene in Primary and Metastatic Colorectal Cancers';
SELECT J.FullName FROM Paper P JOIN Journal J ON P.JournalId = J.Id WHERE P.Title = 'Multiple paternity in a natural population of a salamander with long-term sperm storage';
SELECT COUNT(Paper.Id) FROM Paper WHERE JournalId IN (SELECT Id FROM Journal WHERE FullName = 'Iet Software/iee Proceedings - Software');
SELECT FullName FROM Conference WHERE Id = (SELECT ConferenceId FROM Paper WHERE Id = 5);
Error: 第 3592 个样本有 0 个SQL。
SELECT Title FROM Paper WHERE Id IN (   SELECT PaperId   FROM PaperAuthor   WHERE Name = 'Cheng Huang'   AND Affiliation LIKE 'Microsoft %' )
SELECT c.FullName FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE a.Name = 'Jean-luc Hainaut' JOIN Conference c ON p.ConferenceId = c.Id
SELECT J.FullName  FROM Paper P  JOIN Journal J ON P.JournalId = J.Id  WHERE P.Title IN (   SELECT P2.Title    FROM Paper P2    JOIN PaperAuthor PA2 ON P2.Id = PA2.PaperId    WHERE PA2.Name = 'Andrew Cain' )
SELECT a.Affiliation FROM PaperAuthor pa JOIN Author a ON pa.AuthorId = a.Id WHERE pa.PaperId IN (   SELECT p.Id   FROM Paper p   WHERE p.Title = 'FIBER: A Generalized Framework for Auto-tuning Software' )
SELECT P.Title, J.FullName FROM Paper P JOIN Journal J ON P.JournalId = J.Id WHERE P.Year = 0;
SELECT J.ShortName, J.FullName FROM Journal J JOIN Paper P ON J.Id = P.JournalId WHERE P.Keyword = 'Materials';
SELECT Name FROM Author WHERE Affiliation = 'University of Oxford' ORDER BY Name;
SELECT c.ShortName, c.HomePage FROM Conference c WHERE c.FullName LIKE 'International Conference on Artificial Intelligence%'
SELECT P.Title FROM Paper P WHERE P.Year = 1996;
SELECT P.Title, PA.Name FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId JOIN Author A ON PA.AuthorId = A.Id JOIN Journal J ON P.JournalId = J.Id WHERE P.Year = 2007 AND J.FullName = 'Neoplasia';
SELECT a.Name  FROM Author a  JOIN PaperAuthor pa ON a.Id = pa.AuthorId  JOIN Paper p ON pa.PaperId = p.Id  WHERE a.Affiliation = 'Soongsil University'  AND p.Year = 2000;
SELECT P.Title, PA.Name FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId WHERE P.Year BETWEEN 2000 AND 2005 AND P.Keyword LIKE '%optical properties%';
SELECT AVG(papers) AS avg_papers FROM (   SELECT COUNT(*) AS papers   FROM Paper p   JOIN Conference c ON p.ConferenceId = c.Id   WHERE c.FullName = 'World Computer Congress'   GROUP BY p.Year ) AS temp;
SELECT P.Title, PA.Name FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId WHERE P.Year = 1997 AND P.ConferenceId = 0 AND P.JournalId = 0;
SELECT p.Title, j.ShortName FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE a.Name = 'Adam Jones' AND p.Year BETWEEN 2005 AND 2010 AND p.JournalId IN (   SELECT j.Id   FROM Journal j   WHERE NOT EXISTS (     SELECT 1     FROM Conference c     WHERE c.Id = p.ConferenceId   ) )
SELECT COUNT(*)  FROM Author  WHERE Affiliation = 'Otterbein University';
SELECT COUNT(DISTINCT a.Id) FROM Author a JOIN PaperAuthor pa ON a.Id = pa.AuthorId JOIN Paper p ON pa.PaperId = p.Id WHERE p.Title = 'Subcellular localization of nuclease in barley aleurone';
SELECT c.FullName FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE p.Title = 'Extended Fuzzy Regression Models';
SELECT COUNT(*)  FROM Paper  WHERE ConferenceId IN (   SELECT Id    FROM Conference    WHERE FullName = 'Mathematics of Program Construction' );
SELECT pa.Name FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id WHERE p.Title = 'Open Sourcing Social Solutions (Building Communities of Change)';
SELECT p.Title FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE a.Name = 'Jianli Hua';
SELECT PA.Name, PA.Affiliation FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId WHERE P.Title = 'Testing timed automata';
SELECT COUNT(*)  FROM Paper  WHERE Year = 2000 AND ConferenceId IN (   SELECT Id    FROM Conference    WHERE ShortName = 'SSPR' )
SELECT P.Title FROM Paper P JOIN Journal J ON P.JournalId = J.Id WHERE J.FullName = 'Theoretical Computer Science' AND P.Year = 2003;
SELECT C.HomePage FROM Paper P JOIN Conference C ON P.ConferenceId = C.Id WHERE P.Title = 'Quality evaluation of long duration audiovisual content';
SELECT p.AuthorId, a.Name, a.Affiliation FROM PaperAuthor p JOIN Author a ON p.AuthorId = a.Id WHERE p.PaperId IN (   SELECT pa.PaperId   FROM PaperAuthor pa   JOIN Paper p ON pa.PaperId = p.Id   WHERE p.Title = 'A Randomized Comparison of Sirolimus- Versus Paclitaxel-Eluting Stent Implantation in Patients With Diabetes Mellitus' ) AND a.Affiliation = 'Asan Medical Center, University of Ulsan College of Medicine, Seoul, Korea';
SELECT COUNT(*)  FROM Paper  WHERE JournalId IN (SELECT Id FROM Journal WHERE FullName = 'Software - Practice and Experience');
SELECT Paper.Title FROM Paper JOIN Conference ON Paper.ConferenceId = Conference.Id WHERE Conference.HomePage = 'http://www.irma-international.org/';
SELECT AVG(COUNT(DISTINCT p.Id)) / 9 AS Average_Papers FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE p.Year BETWEEN 2002 AND 2010 AND c.FullName = 'Information and Knowledge Engineering';
SELECT      SUBTRACT(         SUM(Paper.Id)          FROM Paper          WHERE Year BETWEEN 1991 AND 2000 AND ConferenceId IN (             SELECT Id              FROM Conference              WHERE FullName = 'International Conference on Supercomputing'         ),         SUM(Paper.Id)          FROM Paper          WHERE Year BETWEEN 1991 AND 2000 AND JournalId IN (             SELECT Id              FROM Journal              WHERE FullName = 'Informatik & Schule'         )     ) AS Difference
SELECT ShortName FROM Conference WHERE FullName = 'Software - Concepts and Tools / Structured Programming';
SELECT J.FullName FROM Paper P JOIN Journal J ON P.JournalId = J.Id WHERE P.Title = 'Education, democracy and growth';
Error: 第 3625 个样本有 0 个SQL。
SELECT P.Title FROM Paper P JOIN Journal J ON P.JournalId = J.Id WHERE J.FullName = 'IEEE Transactions on Pattern Analysis and Machine Intelligence' AND P.Year = '2011';
SELECT Keyword FROM Paper WHERE Year = '1994' AND JournalId IN (   SELECT Id   FROM Journal   WHERE FullName = 'Modeling Identification and Control' )
SELECT P.Year FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId JOIN Author A ON PA.AuthorId = A.Id WHERE A.Name = 'Zvezdan Protić' AND P.Year = 0;
Error: 第 3629 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Paper  WHERE ConferenceId IN (SELECT Id FROM Conference WHERE FullName = 'International Symposium on Software Testing and Analysis');
SELECT c.HomePage FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE p.Title = 'Increasing the Concurrency in Estelle';
SELECT COUNT(DISTINCT pa1.AuthorId)  FROM PaperAuthor pa1  JOIN PaperAuthor pa2 ON pa1.PaperId = pa2.PaperId  WHERE pa1.Name != pa2.Name  AND pa1.PaperId IN (SELECT id FROM Paper WHERE Title = 'An Improved Active Suspension Model for Attitude Control of Electric Vehicles');
SELECT c.ShortName FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE p.Year = 2012 GROUP BY c.ShortName ORDER BY COUNT(p.Id) DESC LIMIT 1;
Error: 第 3634 个样本有 0 个SQL。
SELECT Keyword FROM Paper WHERE Year = '2012' AND ConferenceId IN (   SELECT Id   FROM Conference   WHERE FullName = 'International Radar Symposium' )
SELECT SUBTRACT(SUM(p1.Id), SUM(p2.Id)) FROM Paper p1 JOIN Paper p2 ON 1=1 JOIN Conference c1 ON p1.ConferenceId = c1.Id JOIN Conference c2 ON p2.ConferenceId = c2.Id WHERE c1.FullName = 'International Conference on Thermoelectrics' AND c2.FullName = 'International Conference on Wireless Networks, Communications and Mobile Computing';
SELECT DIVIDE(SUM(paper.Id WHERE PaperAuthor.Name = 'John Van Reenen' AND Paper.ConferenceId = 0 AND Paper.JournalId = 0),                SUM(paper.Id WHERE PaperAuthor.Name = 'John Van Reenen')) AS percentage FROM Paper JOIN PaperAuthor ON Paper.Id = PaperAuthor.PaperId JOIN Author ON PaperAuthor.AuthorId = Author.Id WHERE Author.Name = 'John Van Reenen';
SELECT Title FROM Paper WHERE Year = (SELECT MIN(Year) FROM Paper);
SELECT ShortName, FullName FROM Conference WHERE FullName = (SELECT MAX(length(FullName)) FROM Conference);
SELECT COUNT(*)  FROM Author  WHERE Affiliation = 'NASA Langley Research Center';
SELECT COUNT(*)  FROM Journal  WHERE ShortName IS NULL;
SELECT COUNT(*) FROM Paper WHERE Year = 0;
SELECT p.Title FROM Paper p WHERE p.Id = (SELECT PaperId               FROM PaperAuthor               GROUP BY PaperId               ORDER BY COUNT(*) DESC               LIMIT 1);
SELECT Title FROM Paper WHERE JournalId IN (   SELECT Id   FROM Journal   WHERE ShortName = 'TUBERCLE LUNG DIS' ) ORDER BY Year ASC LIMIT 1;
SELECT p.Title FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE a.Name = 'Karin Rengefors';
SELECT COUNT(*)  FROM Paper  WHERE ConferenceId IN (   SELECT Id    FROM Conference    WHERE FullName = 'Virtual Reality, IEEE Annual International Symposium' )  AND Year = 2012;
SELECT J.ShortName FROM Paper P JOIN Journal J ON P.JournalId = J.Id WHERE P.Title = 'A Case of Unilateral Ashy Dermatosis';
SELECT a.Affiliation FROM PaperAuthor pa JOIN Author a ON pa.AuthorId = a.Id WHERE a.Name = 'Mark A. Musen'
SELECT a.Name, a.Affiliation FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title = 'Determination of Planetary Meteorology from Aerobot Flight Sensors';
SELECT p.Title, j.ShortName FROM Paper p JOIN Journal j ON p.JournalId = j.Id WHERE p.Year BETWEEN 1960 AND 1970;
SELECT Paper.Year FROM Paper JOIN Conference ON Paper.ConferenceId = Conference.Id WHERE Conference.FullName = 'Internet, Multimedia Systems and Applications' ORDER BY COUNT(Paper.Year) DESC LIMIT 1;
SELECT DISTINCT pa.Name FROM PaperAuthor pa JOIN Author a ON pa.AuthorId = a.Id WHERE a.Name LIKE '%Randall Davis%' OR a.Name LIKE 'Randall Davis%' OR a.Name LIKE 'Randall %Davis%' OR a.Name LIKE 'Randal Davis%' OR a.Name LIKE 'Randal l Davis%' OR a.Name LIKE 'Randal L Davis%' OR a.Name LIKE 'Randal D Davis%' OR a.Name LIKE 'Randal D a Davis%' OR a.Name LIKE 'Randall L D Davis%';
SELECT c.ShortName, c.FullName FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE p.Year = 2008;
SELECT HomePage FROM Journal WHERE JournalId = (SELECT JournalId                    FROM Paper                    GROUP BY JournalId                    ORDER BY COUNT(*) DESC                    LIMIT 1);
SELECT      a.Name, a.Affiliation,      (COUNT(pa.PaperId) / (SELECT COUNT(PaperId) FROM Paper)) * 100 AS CancerPaperProportion FROM      PaperAuthor pa JOIN      Paper p ON pa.PaperId = p.Id JOIN      Author a ON pa.AuthorId = a.Id WHERE      p.Keyword = 'cancer' GROUP BY      a.Name, a.Affiliation;
SELECT Name FROM Author WHERE Id = 1722;
SELECT COUNT(*) FROM Paper WHERE Year = 0;
SELECT a.Name FROM Author a JOIN PaperAuthor pa ON a.Id = pa.AuthorId WHERE a.Affiliation = 'University of Illinois Chicago';
SELECT    SUM(CASE WHEN Year = 2005 THEN 1 ELSE 0 END) AS papers_in_2005,   SUM(CASE WHEN Year = 2004 THEN 1 ELSE 0 END) AS papers_in_2004,   SUM(CASE WHEN Year = 2005 THEN 1 ELSE 0 END) - SUM(CASE WHEN Year = 2004 THEN 1 ELSE 0 END) AS difference FROM    Paper WHERE    Year IN (2004, 2005);
SELECT Paper.Title FROM Paper JOIN Journal ON Paper.JournalId = Journal.Id WHERE Journal.FullName = 'Ibm Journal of Research and Development';
SELECT a.Name, a.Affiliation FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title = 'Education, democracy and growth';
SELECT COUNT(PaperAuthor.Name) FROM PaperAuthor JOIN Paper ON PaperAuthor.PaperId = Paper.Id JOIN Journal ON Paper.JournalId = Journal.Id WHERE Journal.FullName = 'IEEE Computer';
SELECT C.FullName FROM Paper P JOIN Conference C ON P.ConferenceId = C.Id WHERE P.Title = 'A context-based navigation paradigm for accessing Web data';
SELECT COUNT(*)  FROM Paper  WHERE Year BETWEEN 2001 AND 2009  AND ConferenceId IN (SELECT Id FROM Conference WHERE FullName = 'International Workshop on Inductive Logic Programming');
SELECT      p.Title,      AVG(COUNT(pa.AuthorId)) AS Average_Authors FROM      Paper p JOIN      PaperAuthor pa ON p.Id = pa.PaperId WHERE      p.Year BETWEEN 1990 AND 2000 GROUP BY      p.Title
SELECT p.Year, j.FullName FROM Paper p JOIN Journal j ON p.JournalId = j.Id WHERE p.Title = 'Area Effects in Cepaea';
SELECT a.Name, a.Affiliation FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE p.Title = 'Real-Time Automata';
SELECT Name FROM Author WHERE Affiliation = 'ABB Electrical Machines';
SELECT COUNT(*) FROM Paper WHERE JournalId IN (   SELECT Id   FROM Journal   WHERE FullName = 'Academic Medicine' ) AND Year BETWEEN 2005 AND 2010;
SELECT p.Title FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE a.Name = 'Zuliang Du' ORDER BY p.Year DESC LIMIT 1;
SELECT COUNT(*)  FROM Paper  WHERE Year = 2007 AND Title LIKE '%Adaptive Multimedia Retrieval%';
SELECT AVG(COUNT(PaperId))  FROM Paper  WHERE JournalId = (SELECT Id FROM Journal WHERE FullName = 'Information Sciences')  GROUP BY Year;
SELECT COUNT(*)  FROM PaperAuthor pa  JOIN Author a ON pa.AuthorId = a.Id  WHERE a.Name = 'Howard F. Lipson';
SELECT DIVIDE(SUM(Paper.Keyword = 'Turbulent Fluids'), SUM(Journal.FullName = 'Physics of Fluids')) AS percentage FROM Paper JOIN Journal ON Paper.JournalId = Journal.Id WHERE Paper.Keyword = 'Turbulent Fluids';
SELECT COUNT(*)  FROM Author  WHERE Affiliation = 'Arizona State University';
SELECT c.FullName, c.HomePage FROM Conference c WHERE c.ShortName = 'ICCI';
SELECT P.Title FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId WHERE PA.Name = 'Joe Lograsso';
SELECT COUNT(*) FROM Paper p JOIN PaperAuthor pa ON p.Id = pa.PaperId JOIN Author a ON pa.AuthorId = a.Id WHERE a.Affiliation = 'University of Hong Kong';
SELECT P.Year, P.Title FROM Paper P JOIN PaperAuthor PA ON P.Id = PA.PaperId WHERE PA.Name = 'Barassa';
SELECT a.Name, p.Year FROM PaperAuthor pa JOIN Author a ON pa.AuthorId = a.Id JOIN Paper p ON pa.PaperId = p.Id WHERE p.Id = 2;
SELECT a.Name, p.Keyword FROM PaperAuthor pa JOIN Paper p ON pa.PaperId = p.Id JOIN Author a ON pa.AuthorId = a.Id WHERE p.Id = 5;
SELECT c.FullName FROM Paper p JOIN Conference c ON p.ConferenceId = c.Id WHERE p.Title = '2004 YD5';
Error: 第 3683 个样本有 0 个SQL。
SELECT      idd.chronname,      idd.site FROM      institution_details idd JOIN      institution_grads ig ON idd.unitid = ig.unitid WHERE      ig.year = '2011' AND ig.grad_cohort = 209;
Error: 第 3685 个样本有 0 个SQL。
SELECT SUM(ig.grad_cohort) AS total_male_graduates FROM institution_grads ig JOIN institution_details id ON ig.unitid = id.unitid WHERE ig.year = 2012 AND ig.gender = 'M' AND id.unitid IN (   SELECT unitid   FROM institution_details   WHERE aid_value = (     SELECT MAX(aid_value)     FROM institution_details   ) );
SELECT AVG(med_sat_value) FROM institution_details WHERE state = (   SELECT state   FROM institution_grads   WHERE year = 2013 AND gender = 'M'   GROUP BY state   ORDER BY COUNT(grad_cohort) DESC   LIMIT 1 )
SELECT    s.state,    i.chronname FROM    state_sector_grads s   JOIN institution_details i ON s.state_abbr = i.state WHERE    s.year = 2012    AND s.control = 'Private for-profit'    AND s.grad_cohort = (SELECT MAX(SUM(grad_cohort)) FROM state_sector_grads WHERE year = 2012 AND control = 'Private for-profit') ORDER BY    s.grad_cohort DESC;
Error: 第 3689 个样本有 0 个SQL。
SELECT      institution_details.chronname,      institution_details.fte_value FROM      institution_details JOIN      institution_grads ON institution_details.unitid = institution_grads.unitid WHERE      institution_grads.year = 2013 AND      institution_grads.grad_cohort < 200 AND      institution_grads.race = 'X' AND      institution_grads.gender = 'B'
SELECT COUNT(*) FROM institution_grads WHERE unitid IN (   SELECT unitid   FROM institution_details   WHERE chronname = 'Oakwood University' ) AND year = 2013 AND gender = 'F' AND race = 'X';
Error: 第 3692 个样本有 0 个SQL。
Error: 第 3693 个样本有 0 个SQL。
Error: 第 3694 个样本有 0 个SQL。
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN race = 'A' THEN 1 ELSE 0 END), SUM(CASE WHEN grad_100 THEN 1 ELSE 0 END)), 100) AS percentage FROM    institution_grads WHERE    unitid IN (SELECT unitid FROM institution_details WHERE state = 'Alabama') AND    year = 2013;
Error: 第 3696 个样本有 0 个SQL。
SELECT i1.chronname FROM institution_details i1 WHERE MIN(i1.grad_100_value) = (   SELECT MIN(i2.grad_100_value)   FROM institution_details i2   WHERE i2.chronname IN ('Amridge University', 'Auburn University') ) ORDER BY i1.grad_100_value LIMIT 1;
SELECT COUNT(*) FROM institution_details WHERE control = 'Private not-for-profit';
Error: 第 3699 个样本有 0 个SQL。
Error: 第 3700 个样本有 0 个SQL。
SELECT COUNT(*)  FROM institution_grads  WHERE unitid IN (SELECT unitid FROM institution_details WHERE chronname = 'Central Alabama Community College')  AND year = 2011  AND gender = 'M'  AND race = 'H'  AND grad_100 = 1;
SELECT COUNT(*) FROM institution_grads WHERE unitid IN (   SELECT unitid   FROM institution_details   WHERE chronname = 'Central Alabama Community College' ) AND year = 2011;
SELECT    (SUM(CASE WHEN gender = 'F' AND race = 'w' AND year = 2011 AND grad_150 = 1 THEN 1 ELSE 0 END) /     (SELECT COUNT(*) FROM institution_grads WHERE unitid IN (SELECT unitid FROM institution_details WHERE chronname = 'Central Alabama Community College') AND year = 2011 AND gender = 'F' AND race = 'w')    ) * 100 AS female_percent FROM    institution_grads WHERE    unitid IN (SELECT unitid FROM institution_details WHERE chronname = 'Central Alabama Community College')    AND year = 2011    AND gender = 'F'    AND race = 'w' UNION ALL SELECT    (SUM(CASE WHEN gender = 'M' AND race = 'w' AND year = 2011 AND grad_150 = 1 THEN 1 ELSE 0 END) /     (SELECT COUNT(*) FROM institution_grads WHERE unitid IN (SELECT unitid FROM institution_details WHERE chronname = 'Central Alabama Community College') AND year = 2011 AND gender = 'M' AND race = 'w')    ) * 100 AS male_percent FROM    institution_grads WHERE    unitid IN (SELECT unitid FROM institution_details WHERE chronname = 'Central Alabama Community College')    AND year = 2011    AND gender = 'M'    AND race = 'w' ORDER BY    female_percent DESC, male_percent DESC LIMIT 1;
SELECT i.chronname FROM institution_details i JOIN institution_grads ig ON i.unitid = ig.unitid WHERE ig.year = 2011 AND ig.gender = 'M' AND ig.race = 'w' AND ig.grad_150 = 1 ORDER BY ig.grad_150_rate DESC LIMIT 1;
SELECT    institution_details.chronname  FROM    institution_details    JOIN institution_grads ON institution_details.unitid = institution_grads.unitid  WHERE    institution_grads.year = 2011    AND institution_grads.gender = 'M'    AND institution_grads.race = 'w'    AND institution_grads.grad_150 > 20;
SELECT COUNT(*)  FROM institution_details AS T1  JOIN institution_grads AS T2  ON T1.unitid = T2.unitid  WHERE T1.state = 'Alabama'  AND T1.level = '2y'  AND T2.year = 2011  AND T2.cohort = '2y all'  AND T2.gender IN ('M', 'F');
SELECT    SUM(grad_cohort) AS grad_cohort_2012,   SUM(grad_cohort) AS grad_cohort_2011 FROM    institution_grads WHERE    chronname = 'Central Alabama Community College'   AND year = 2012 UNION ALL SELECT    SUM(grad_cohort) AS grad_cohort_2011 FROM    institution_grads WHERE    chronname = 'Central Alabama Community College'   AND year = 2011
Error: 第 3708 个样本有 0 个SQL。
SELECT COUNT(*)  FROM institution_details  JOIN institution_grads ON institution_details.unitid = institution_grads.unitid  WHERE control = 'Public' AND state = 'Alabama' AND year = 2011 AND grad_100 > 30;
Error: 第 3710 个样本有 0 个SQL。
SELECT SUM(SUM(grad_cohort)  FROM institution_grads  WHERE unitid IN (SELECT unitid                    FROM institution_details                    WHERE chronname = 'Central Alabama Community College')  AND year IN (2011, 2012, 2013)) / 3 AS avg_graduates;
SELECT AVG(grad_100_rate) AS avg_percentage FROM institution_grads WHERE unitid IN (   SELECT unitid   FROM institution_details   WHERE chronname = 'Central Alabama Community College' );
Error: 第 3713 个样本有 0 个SQL。
Error: 第 3714 个样本有 0 个SQL。
Error: 第 3715 个样本有 0 个SQL。
SELECT state_abbr FROM state_sector_details WHERE state = 'Delaware';
Error: 第 3717 个样本有 0 个SQL。
Error: 第 3718 个样本有 0 个SQL。
SELECT chronname FROM institution_details WHERE state = 'New Jersey' AND level = '4-year' ORDER BY student_count DESC LIMIT 1;
Error: 第 3720 个样本有 0 个SQL。
Error: 第 3721 个样本有 0 个SQL。
SELECT COUNT(*) FROM institution_details JOIN institution_grads ON institution_details.unitid = institution_grads.unitid JOIN state_sector_grads ON institution_details.state = state_sector_grads.state_abbr WHERE institution_details.level = '2-year' AND institution_details.control = 'Private not-for-profit' AND institution_details.state = 'CT' AND institution_grads.grad_150_rate < state_sector_grads.grad_150_rate;
SELECT chronname FROM institution_details WHERE level = '4-year' AND control = 'Public' AND state = 'ID' ORDER BY grad_100_value LIMIT 1;
SELECT i.unitid FROM institution_details i JOIN institution_grads ig ON i.unitid = ig.unitid WHERE i.level = '4-year' AND i.control = 'Private for-profit' AND i.state = 'KY' ORDER BY ig.grad_150_value DESC LIMIT 1;
SELECT COUNT(*)  FROM institution_grads  WHERE unitid IN (   SELECT unitid    FROM institution_details    WHERE chronname = 'Pennsylvania State University-Altoona' )  AND gender = 'F'  AND race = 'H'  AND grad_100 = 1;
SELECT distinct chronname FROM institution_details WHERE cohort_size = (SELECT MAX(cohort_size) FROM institution_details) AND similar = '4y bach';
Error: 第 3727 个样本有 0 个SQL。
SELECT SUM(grad_cohort)  FROM institution_grads  WHERE unitid IN (SELECT unitid FROM institution_details WHERE level = '2-year' AND control = 'Public' AND state = 'Alabama' AND year = '2011')  AND gender = 'X'  AND race = 'X';
Error: 第 3729 个样本有 0 个SQL。
Error: 第 3730 个样本有 0 个SQL。
Error: 第 3731 个样本有 0 个SQL。
Error: 第 3732 个样本有 0 个SQL。
SELECT    control,    level,    MAX(student_count) AS max_students FROM    institution_details WHERE    race = 'X' GROUP BY    control,    level ORDER BY    max_students DESC LIMIT 1;
Error: 第 3734 个样本有 0 个SQL。
Error: 第 3735 个样本有 0 个SQL。
SELECT COUNT(*)  FROM institution_grads  WHERE unitid IN (   SELECT unitid    FROM institution_details    WHERE state = 'Alaska'    AND level = '4'    AND control = 'P'    AND year BETWEEN '2011' AND '2013'    AND state_sector_ct = 1  )  AND race = 'W';
Error: 第 3737 个样本有 0 个SQL。
Error: 第 3738 个样本有 0 个SQL。
Error: 第 3739 个样本有 0 个SQL。
SELECT sd.state FROM institution_details id JOIN institution_grads ig ON id.unitid = ig.unitid JOIN state_sector_details sd ON id.state = sd.state WHERE ig.year = '2011' AND ig.gender = 'M' AND id.control = 'Private for-profit' AND ig.race = 'B';
Error: 第 3741 个样本有 0 个SQL。
Error: 第 3742 个样本有 0 个SQL。
SELECT distinct r.race FROM institution_details AS i JOIN institution_grads AS ig ON i.unitid = ig.unitid WHERE i.state = 'Alabama' AND student_count > (SELECT AVG(student_count) * 0.9 FROM institution_details)
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN level = '2-year' THEN 1 ELSE 0 END), COUNT(*)), 1.0) AS percentage FROM    institution_details WHERE    state = 'Hawaii'   AND vsa_year = 2010   AND level IN ('2-year', '4-year') GROUP BY    state
SELECT i.chronname FROM institution_details i JOIN state_sector_details s ON i.state = s.state WHERE i.state = 'CT' AND s.control = 'Sector' ORDER BY i.retain_percentile DESC LIMIT 1;
SELECT site FROM institution_details WHERE level = '2y' AND year = '2008' AND race = 'W' AND cohort = '2y all' ORDER BY grad_cohort DESC LIMIT 1;
SELECT    year  FROM    institution_details  WHERE    chronname = 'Harvard University'  ORDER BY    grad_cohort DESC  LIMIT 1;
SELECT i.unitid, i.chronname FROM institution_details i JOIN institution_grads ig ON i.unitid = ig.unitid WHERE ig.year = 2010 AND i.student_count = (SELECT MIN(student_count) FROM institution_details WHERE year = 2010) AND i.state = (   SELECT s.state   FROM state_sector_details s   WHERE s.year = 2011   ORDER BY s.state_appr_value DESC   LIMIT 1 );
SELECT AVG(COUNT(*))  FROM institution_grads  WHERE unitid IN (SELECT unitid FROM institution_details WHERE chronname = 'Yale University')  AND race = 'B'  AND cohort = '4y bach'  AND year BETWEEN 2002 AND 2005;
Error: 第 3750 个样本有 0 个SQL。
Error: 第 3751 个样本有 0 个SQL。
SELECT    s.state,    s.state_appr_value FROM    state_sector_details s   JOIN institution_details i ON s.state = i.state WHERE    i.chronname IN ('Brown University', 'Columbia University', 'Cornell University', 'Dartmouth College', 'Harvard University', 'Princeton University', 'University of Pennsylvania', 'Yale University')   AND s.year = 2011   AND s.state_appr_value = (SELECT MIN(state_appr_value) FROM state_sector_details);
SELECT chronname FROM institution_details WHERE state = (   SELECT state   FROM state_sector_details   ORDER BY schools_count DESC   LIMIT 1 ) AND ft_pct > 90;
SELECT AVG(med_sat_value) AS average FROM institution_details WHERE state = (SELECT state                FROM state_sector_details                WHERE level = 'Higher Education'                AND year = 2011                AND control = 'Public'                AND state_appr_value = (SELECT MIN(state_appr_value)                                        FROM state_sector_details                                        WHERE level = 'Higher Education'                                        AND year = 2011                                        AND control = 'Public'));
SELECT chronname FROM institution_details WHERE ft_pct = 1 AND level = '4y' AND gender = 'F' AND cohort = '4y other' ORDER BY grad_cohort DESC LIMIT 1;
Error: 第 3756 个样本有 0 个SQL。
SELECT AVG(grad_150) FROM institution_grads WHERE unitid IN (   SELECT unitid   FROM institution_details   WHERE chronname = 'United Education Institute-Huntington Park Campus'     AND level = '2'     AND year BETWEEN '2011' AND '2013'     AND gender = 'M'     AND race = 'H' )
SELECT    id.institution_details.chronname AS school_name,   id.institution_details.state AS state_name,   ssd.state_sector_details.state_appr_value AS state_appropriations FROM    institution_details id   JOIN institution_grads ig ON id.unitid = ig.unitid   JOIN state_sector_details ssd ON id.state = ssd.state WHERE    id.state_sector_ct = 'Public'    AND id.carnegie_ct = 'Master's Colleges and Universities'   AND ig.year = '2011'   AND ig.grad_cohort = '4'   AND ig.grad_100_rate IS NOT NULL   AND ig.grad_150_rate IS NOT NULL ORDER BY    ABS(id.institution_details.awards_per_value - id.institution_details.awards_per_natl_value) DESC LIMIT 1;
SELECT COUNT(*)  FROM Business  WHERE state = 'AZ' AND stars < 3;
Error: 第 3760 个样本有 0 个SQL。
Error: 第 3761 个样本有 0 个SQL。
SELECT COUNT(*) FROM Users WHERE user_fans = 'uber';
SELECT COUNT(DISTINCT b.business_id) FROM Business_Attributes ba JOIN Business b ON ba.business_id = b.business_id WHERE ba.attribute_id IN (   SELECT a.attribute_id   FROM Attributes a   WHERE a.attribute_name = 'Open 24 Hours' ) AND ba.attribute_value = 'true';
SELECT attribute_value FROM Business_Attributes WHERE attribute_id IN (SELECT attribute_id FROM Attributes WHERE attribute_name = 'Wi-Fi') AND business_id = 10172;
Error: 第 3765 个样本有 0 个SQL。
SELECT SUM(CASE WHEN category_name = 'Buffets' THEN 1 ELSE 0 END) -         SUM(CASE WHEN category_name = 'Gyms' THEN 1 ELSE 0 END) AS difference FROM Categories;
SELECT c.category_name FROM Reviews r JOIN Business_Categories bc ON r.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE r.review_stars = 5 GROUP BY c.category_name ORDER BY COUNT(r.review_stars) DESC LIMIT 1;
SELECT y.year_id FROM Users u JOIN Elite e ON u.user_id = e.user_id WHERE u.user_yelping_since_year = e.year_id ORDER BY (SELECT COUNT(*) FROM Reviews r WHERE r.business_id = u.user_id AND r.review_stars = 5) DESC LIMIT 1;
SELECT AVG(r.review_stars)  FROM Reviews r  WHERE r.review_length = 'long'  GROUP BY r.user_id  ORDER BY COUNT(*) DESC  LIMIT 1;
SELECT c.category_name FROM Reviews r JOIN Business b ON r.business_id = b.business_id JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE r.review_length = 'long' GROUP BY c.category_name ORDER BY COUNT(r.review_length = 'long') DESC LIMIT 1;
Error: 第 3771 个样本有 0 个SQL。
SELECT Y.actual_year FROM Years Y JOIN Elite E ON Y.year_id = E.year_id JOIN Users U ON E.user_id = U.user_id WHERE U.user_yelping_since_year = Y.actual_year AND (SELECT COUNT(*) FROM Tips T WHERE T.business_id = U.user_id AND T.tip_length = 'Short') =      (SELECT MAX(COUNT(*)) FROM Tips T WHERE T.business_id = U.user_id AND T.tip_length = 'Short');
Error: 第 3773 个样本有 0 个SQL。
SELECT B.stars FROM Business B JOIN Tips T ON B.business_id = T.business_id WHERE T.business_id IN (   SELECT business_id   FROM Tips   WHERE user_id = 69722   GROUP BY business_id   HAVING COUNT(*) = 1 )
SELECT      (COUNT(business_id) FROM Business_Categories WHERE category_id IN (SELECT category_id FROM Categories WHERE category_name = 'Automotive')) * 1.0 /      (SELECT COUNT(business_id) FROM Business) * 100 AS percentage
SELECT      (SUM(CASE WHEN category_name = 'Women''s Clothing' THEN 1 ELSE 0 END) -       SUM(CASE WHEN category_name = 'Men''s Clothing' THEN 1 ELSE 0 END)) *      100 /      SUM(CASE WHEN category_name IN ('Women''s Clothing', 'Men''s Clothing') THEN 1 ELSE 0 END) AS percentage FROM      Business_Categories     JOIN Business ON Business_Categories.business_id = Business.business_id WHERE      category_name IN ('Women''s Clothing', 'Men''s Clothing');
Error: 第 3777 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Users  WHERE user_yelping_since_year = 2005 AND user_fans = 'None';
SELECT COUNT(*)  FROM Business  WHERE active = 'TRUE' AND city = 'Tolleson';
Error: 第 3780 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Reviews  WHERE business_id = 10682 AND review_stars = 5;
SELECT business_id FROM Business WHERE active = 'False' AND city = 'Sun City' ORDER BY (SELECT COUNT(user_id) FROM Reviews WHERE business_id = Business.business_id) DESC LIMIT 1;
SELECT COUNT(*)  FROM Reviews  WHERE business_id IN (SELECT business_id FROM Business WHERE city = 'Yuma')  AND review_length = 'Medium';
Error: 第 3784 个样本有 0 个SQL。
Error: 第 3785 个样本有 0 个SQL。
Error: 第 3786 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business_Categories  JOIN Categories ON Business_Categories.category_id = Categories.category_id  WHERE Categories.category_name = 'Hair Removal';
SELECT SUM(CASE WHEN category_name = 'Chinese' THEN 1 ELSE 0 END) -         SUM(CASE WHEN category_name = 'Filipino' THEN 1 ELSE 0 END)  FROM Categories JOIN Business_Categories ON Categories.category_id = Business_Categories.category_id JOIN Business ON Business.business_id = Business_Categories.business_id WHERE category_name IN ('Chinese', 'Filipino');
SELECT b.city FROM Business b JOIN Tips t ON b.business_id = t.business_id WHERE t.business_id IN (   SELECT business_id   FROM Tips   WHERE user_id = (SELECT user_id FROM Users WHERE user_id = 63469)   AND likes = 1 )
Error: 第 3790 个样本有 0 个SQL。
Error: 第 3791 个样本有 0 个SQL。
SELECT user_id FROM Users_Compliments WHERE compliment_id IN (   SELECT compliment_id   FROM Compliments   WHERE compliment_type = 'funny' ) GROUP BY user_id ORDER BY COUNT(number_of_compliments) DESC LIMIT 1;
SELECT COUNT(*)  FROM Business_Attributes ba  JOIN Business b ON ba.business_id = b.business_id  WHERE ba.attribute_name = 'Drive-Thru' AND ba.attribute_value = 'true' AND b.city = 'Scottsdale' AND b.business_id < 1000;
Error: 第 3794 个样本有 0 个SQL。
SELECT    MULTIPLY(DIVIDE(SUM(b.city = 'Phoenix'), COUNT(b.business_id)), 1.0) AS percentage FROM    Business_Attributes ba   JOIN Business b ON ba.business_id = b.business_id   JOIN Attributes a ON ba.attribute_id = a.attribute_id WHERE    a.attribute_name = 'BYOB' AND ba.attribute_value = 'TRUE' AND b.city = 'Phoenix';
Error: 第 3796 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE active = 'true' AND city = 'city' AND review_count = 'Low';
SELECT user_id FROM Users WHERE user_id BETWEEN 1 AND 20 AND user_fans = 'None' AND user_review_count = 'Low';
SELECT bh.business_id, c.category_name, bh.opening_time, bh.closing_time FROM Business_Hours bh JOIN Business_Categories bc ON bh.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE c.category_name = 'fashion';
SELECT COUNT(DISTINCT b.business_id) FROM Business_Categories bc JOIN Categories c ON bc.category_id = c.category_id JOIN Business_Hours bh ON bc.business_id = bh.business_id JOIN Days d ON bh.day_id = d.day_id WHERE c.category_name = 'Shopping' AND bh.opening_time < '08:00:00';
SELECT B.business_name FROM Business B JOIN Business_Categories BC ON B.business_id = BC.business_id JOIN Categories C ON BC.category_id = C.category_id WHERE C.category_name = 'pets' AND EXISTS (   SELECT 1   FROM Business_Hours BH   WHERE BH.business_id = B.business_id   AND BH.day_id IN (     SELECT D.day_id     FROM Days D     WHERE D.day_of_week IN (       SELECT '0' AS day_of_week       FROM Days       WHERE '9PM' <= closing_time     )   )   AND BH.closing_time > '9PM' )
SELECT COUNT(DISTINCT b.business_id) FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Business_Hours bh ON b.business_id = bh.business_id WHERE bc.category_id IN (   SELECT category_id   FROM Categories ) AND bh.day_id BETWEEN 2 AND 5;
SELECT COUNT(*)  FROM Business  WHERE city = 'Phoenix' AND active = 1 AND category_id IN (SELECT category_id FROM Business_Categories WHERE category_name = 'Active Life');
SELECT b.business_id, b.city, b.state FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.stars < 5 AND c.category_name = 'men''s clothing';
Error: 第 3805 个样本有 0 个SQL。
Error: 第 3806 个样本有 0 个SQL。
SELECT ba.attribute_value FROM Business_Attributes ba JOIN Business_Categories bc ON ba.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id JOIN Business b ON ba.business_id = b.business_id WHERE c.category_name = 'Fashion' AND b.city = 'Scottsdale';
SELECT COUNT(*)  FROM Users_Compliments  JOIN Users ON Users_Compliments.user_id = Users.user_id  JOIN Business ON Users_Compliments.user_id = Business.user_id  WHERE Users.user_yelping_since_year = (SELECT year_id FROM Years WHERE actual_year = (SELECT actual_year FROM Years ORDER BY year_id LIMIT 1))  AND Users.user_average_stars BETWEEN 3 AND 4  AND Users.user_votes_funny + Users.user_votes_useful + Users.user_votes_cool > 0  AND Users.user_review_count > 5  AND Users.user_fans > 10  AND Users.user_id IN (SELECT user_id FROM Elite WHERE year_id = (SELECT year_id FROM Years WHERE actual_year = (SELECT actual_year FROM Years ORDER BY year_id LIMIT 1)))  AND Users_Compliments.number_of_compliments = 'Medium'  AND Business.active = 1  AND Business.city = 'Phoenix';
SELECT b.business_name FROM Business b JOIN Business_Hours bh ON b.business_id = bh.business_id WHERE bh.day_id IN (   SELECT d.day_id   FROM Days d   WHERE d.day_of_week IN (     SELECT 'Sunday' AS day_of_week     UNION ALL SELECT 'Monday'     UNION ALL SELECT 'Tuesday'     UNION ALL SELECT 'Wednesday'     UNION ALL SELECT 'Thursday'     UNION ALL SELECT 'Friday'   ) ) AND bh.opening_time < '08:00:00';
Error: 第 3810 个样本有 0 个SQL。
SELECT    COUNT(business_id) AS num_businesses,   (COUNT(business_id) / (SELECT COUNT(*) FROM Business)) * 1.0 AS percentage FROM    Business WHERE    city = 'Phoenix';
SELECT    city,    COUNT(*) AS num_cities FROM    Business   JOIN Business_Categories ON Business.business_id = Business_Categories.business_id   JOIN Categories ON Business_Categories.category_id = Categories.category_id WHERE    Categories.category_name = 'Active Life' AND Business.active = 1 GROUP BY    city
Error: 第 3813 个样本有 0 个SQL。
Error: 第 3814 个样本有 0 个SQL。
SELECT AVG(stars)  FROM Business  WHERE active = 'False';
SELECT COUNT(DISTINCT b.business_id) FROM Business_Attributes ba JOIN Business b ON ba.business_id = b.business_id WHERE ba.attribute_value = 'beer_and_wine' AND b.state = 'AZ';
SELECT city FROM Business JOIN Business_Attributes ON Business.business_id = Business_Attributes.business_id WHERE attribute_value = 'full_bar' GROUP BY city ORDER BY COUNT(business_id) DESC LIMIT 1;
Error: 第 3818 个样本有 0 个SQL。
SELECT city FROM Business JOIN Business_Categories ON Business.business_id = Business_Categories.business_id JOIN Categories ON Business_Categories.category_id = Categories.category_id WHERE category_name = 'Food' AND review_count = 'High' GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 3820 个样本有 0 个SQL。
Error: 第 3821 个样本有 0 个SQL。
SELECT    MULTIPLY(DIVIDE(SUM(bc.business_id), COUNT(b.business_id)), 100) AS percentage FROM    Business b   JOIN Business_Categories bc ON b.business_id = bc.business_id   JOIN Categories c ON bc.category_id = c.category_id WHERE    c.category_name = 'Real Estate' AND b.city = 'Chandler' AND b.stars = 5;
SELECT COUNT(*) FROM Users WHERE user_yelping_since_year = '2012' AND user_votes_funny = 'High';
Error: 第 3824 个样本有 0 个SQL。
Error: 第 3825 个样本有 0 个SQL。
SELECT review_length FROM Reviews WHERE business_id = 2 AND user_id = 612;
SELECT COUNT(*)  FROM Business  WHERE active = 'true' AND city = 'Gilbert';
Error: 第 3828 个样本有 0 个SQL。
SELECT b.business_id FROM Business b JOIN Reviews r ON b.business_id = r.business_id WHERE b.state = 'AZ' AND r.review_stars = 5;
SELECT attribute_name FROM Business_Attributes WHERE business_id = 2 AND attribute_value != 'none';
SELECT COUNT(*)  FROM Users_Compliments  WHERE compliment_id IN (SELECT compliment_id FROM Compliments WHERE compliment_type = 'cool')  AND user_id = 33;
SELECT opening_time FROM Business_Hours WHERE business_id = 53 AND day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Friday');
SELECT attribute_name FROM Attributes JOIN Business_Attributes ON Attributes.attribute_id = Business_Attributes.attribute_id WHERE Business_Attributes.business_id = 56 AND attribute_value = 'true';
Error: 第 3834 个样本有 0 个SQL。
Error: 第 3835 个样本有 0 个SQL。
SELECT user_id FROM Users_Compliments WHERE number_of_compliments = 'Uber' AND compliment_type = 'cute' LIMIT 2;
SELECT COUNT(*)  FROM Business b  JOIN Business_Categories bc ON b.business_id = bc.business_id  JOIN Categories c ON bc.category_id = c.category_id  JOIN Reviews r ON b.business_id = r.business_id  WHERE c.category_name = 'Accessories' AND r.review_stars > 3;
Error: 第 3838 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE state = 'AZ'  AND NOT EXISTS (   SELECT 1    FROM Business_Hours    WHERE business_id = Business.business_id    AND day_id IN (     SELECT day_id      FROM Days      WHERE day_of_week = 'Thursday'   )    AND opening_time IS NOT NULL );
Error: 第 3840 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE state = 'AZ' AND active = 'true';
SELECT COUNT(*) FROM Business B JOIN Reviews R ON B.business_id = R.business_id WHERE B.city = 'Scottsdale' AND R.review_stars > 3;
SELECT city, COUNT(*) as business_count FROM Business WHERE city IN ('Scottsdale', 'Anthem') GROUP BY city ORDER BY business_count DESC;
Error: 第 3844 个样本有 0 个SQL。
Error: 第 3845 个样本有 0 个SQL。
SELECT city FROM Business WHERE stars = 5;
SELECT COUNT(*) FROM Reviews WHERE user_id = 3;
SELECT COUNT(*)  FROM Reviews  WHERE user_id = 3 AND review_length = 'Long';
SELECT COUNT(*) FROM Reviews WHERE business_id IN (   SELECT business_id   FROM Reviews   WHERE user_id = 3 AND review_length = 'Long' ) AND review_votes_useful = 'medium';
Error: 第 3850 个样本有 0 个SQL。
SELECT user_id  FROM Users  WHERE user_fans = 'High';
SELECT COUNT(*)  FROM Business_Attributes ba  JOIN Attributes a ON ba.attribute_id = a.attribute_id  WHERE a.attribute_name = 'Alcohol' AND ba.attribute_value = 'none';
SELECT COUNT(*) FROM Business JOIN Business_Attributes ON Business.business_id = Business_Attributes.business_id WHERE Business.state = 'AZ' AND Business_Attributes.attribute_name = 'Alcohol' AND Business_Attributes.attribute_value = 'none';
SELECT business_id FROM Business_Attributes WHERE attribute_id IN (   SELECT attribute_id   FROM Attributes   WHERE attribute_name = 'Good for Kids' ) AND attribute_value = 'true';
Error: 第 3855 个样本有 0 个SQL。
SELECT category_name  FROM Categories  JOIN Business_Categories ON Categories.category_id = Business_Categories.category_id  WHERE Business_Categories.business_id = 1;
SELECT COUNT(b.business_id) FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.active = 'true' AND c.category_name = 'Food';
Error: 第 3858 个样本有 0 个SQL。
Error: 第 3859 个样本有 0 个SQL。
SELECT COUNT(b.business_id) FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id JOIN Business_Attributes ba ON b.business_id = ba.business_id WHERE c.category_name = 'Food' AND ba.attribute_id IN (SELECT attribute_id FROM Attributes WHERE attribute_name = 'Good for Kids' AND attribute_value = 'true');
SELECT COUNT(*)  FROM Business  WHERE state = 'AZ'  AND EXISTS (   SELECT 1    FROM Reviews    WHERE Reviews.business_id = Business.business_id    AND Reviews.user_id = 3 );
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.state = 'AZ';
SELECT      SUM(DATEDIFF(Closing_time, Opening_time))  FROM      Business_Hours  WHERE      Business_id = 1 AND day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Tuesday');
SELECT Business_Hours.opening_time FROM Business_Hours WHERE Business_Hours.business_id = 1 AND Business_Hours.day_id IN (   SELECT Days.day_id   FROM Days   WHERE Days.day_of_week = 'Tuesday' )
SELECT COUNT(*) FROM Business_Hours WHERE business_id IN (   SELECT business_id   FROM Business ) AND day_id IN (   SELECT day_id   FROM Days   WHERE day_of_week = 'Monday' ) AND closing_time IN ('9PM', '10PM', '11PM', '12AM');
Error: 第 3866 个样本有 0 个SQL。
Error: 第 3867 个样本有 0 个SQL。
SELECT c.category_name FROM Business_Categories bc JOIN Categories c ON bc.category_id = c.category_id JOIN Business_Hours bh ON bc.business_id = bh.business_id JOIN Days d ON bh.day_id = d.day_id WHERE bh.closing_time = '12PM' AND d.day_of_week = 'Sunday'
Error: 第 3869 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Elite, Users  WHERE Elite.user_id = Users.user_id AND Elite.year_id = Users.user_yelping_since_year;
Error: 第 3871 个样本有 0 个SQL。
Error: 第 3872 个样本有 0 个SQL。
Error: 第 3873 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Users  WHERE user_id IN (   SELECT user_id    FROM Reviews    GROUP BY user_id    HAVING COUNT(*) > 10 )  AND user_id IN (   SELECT user_id    FROM Elite );
Error: 第 3875 个样本有 0 个SQL。
SELECT AVG(review_stars)  FROM Reviews  WHERE business_id IN (SELECT business_id FROM Business WHERE city = 'Anthem');
SELECT AVG(review_stars)  FROM Reviews  WHERE user_id = 3 AND business_id IN (SELECT business_id FROM Business WHERE state = 'AZ');
SELECT AVG(DATEDIFF(closing_time, opening_time) / 2)  FROM Business_Hours  WHERE business_id = 1 AND day_id IN (SELECT day_id FROM Days WHERE day_of_week IN ('Saturday', 'Sunday'));
SELECT AVG(stars) AS average_elitestar_rating FROM (   SELECT B.business_id, R.stars   FROM Business B   JOIN Reviews R ON B.business_id = R.business_id   JOIN Business_Hours BH ON B.business_id = BH.business_id   JOIN Days D ON BH.day_id = D.day_id   WHERE BH.closing_time = '12PM' AND D.day_of_week = 'Sunday' ) AS T
Error: 第 3880 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE active = 'true' AND state = 'AZ' AND review_count < 100;
SELECT business_id FROM Business WHERE stars >= 2 AND stars < 4 AND city = 'Mesa';
SELECT COUNT(*) FROM Users WHERE user_yelping_since_year >= 2011 AND user_yelping_since_year < 2014 AND user_fans > ?;
SELECT review_length FROM Reviews WHERE business_id = 2 AND user_id = 35026;
Error: 第 3885 个样本有 0 个SQL。
Error: 第 3886 个样本有 0 个SQL。
SELECT B.business_id, B.stars FROM Business B JOIN Business_Categories BC ON B.business_id = BC.business_id JOIN Categories C ON BC.category_id = C.category_id WHERE B.active = 'true' AND C.category_name = 'Fashion';
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.stars = (SELECT MAX(stars) FROM Business)
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.business_id BETWEEN 6 AND 9 AND b.business_id IN (   SELECT business_id   FROM Reviews   WHERE review_length = (     SELECT AVG(review_length) FROM Reviews     WHERE business_id BETWEEN 6 AND 9   )   AND review_stars = (     SELECT MAX(review_stars) FROM Reviews     WHERE business_id BETWEEN 6 AND 9   ) );
Error: 第 3890 个样本有 0 个SQL。
Error: 第 3891 个样本有 0 个SQL。
Error: 第 3892 个样本有 0 个SQL。
Error: 第 3893 个样本有 0 个SQL。
SELECT b.city, b.state FROM Business b JOIN Business_Hours bh ON b.business_id = bh.business_id JOIN Days d ON bh.day_id = d.day_id WHERE bh.opening_time = '8AM' AND bh.closing_time = '9PM' AND d.day_of_week = 'Friday';
SELECT ba.attribute_value FROM Business_Attributes ba JOIN Business b ON ba.business_id = b.business_id JOIN Reviews r ON b.business_id = r.business_id WHERE b.active = 'true' AND b.city = 'Mesa' AND b.state = 'AZ' AND r.review_count > (SELECT AVG(review_count) FROM Business) AND r.review_stars = 3;
Error: 第 3896 个样本有 0 个SQL。
SELECT      (COUNT(b.business_id) * 100 / COUNT(b2.business_id)) AS percentage FROM      Business b     JOIN Business_Categories bc ON b.business_id = bc.business_id     JOIN Categories c ON bc.category_id = c.category_id WHERE      c.category_name = 'Accessories'     AND b.stars < 4;
SELECT bh.closing_time, d.day_of_week FROM Business_Hours bh JOIN Business b ON bh.business_id = b.business_id JOIN Days d ON bh.day_id = d.day_id WHERE b.active = 'true' AND b.city = 'Tempe' AND b.stars > (SELECT AVG(stars) FROM Business) * 0.7;
SELECT COUNT(*) FROM Business WHERE active = 'true' AND city = 'Phoenix';
SELECT COUNT(*) FROM Business WHERE review_count = 'High';
Error: 第 3901 个样本有 0 个SQL。
Error: 第 3902 个样本有 0 个SQL。
SELECT COUNT(*) FROM Users_Compliments WHERE compliment_id = 1 AND number_of_compliments = 'High';
Error: 第 3904 个样本有 0 个SQL。
SELECT    ba.attribute_name FROM    Business_Attributes ba   JOIN Business_Hours bh ON ba.business_id = bh.business_id WHERE    bh.day_id IN (SELECT day_id FROM Days WHERE day_of_week IN ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'))   AND bh.opening_time = bh.closing_time GROUP BY    ba.attribute_name
Error: 第 3906 个样本有 0 个SQL。
SELECT c.category_name FROM Business_Categories bc JOIN Categories c ON bc.category_id = c.category_id JOIN Business b ON bc.business_id = b.business_id WHERE b.state = 'AZ' GROUP BY c.category_name ORDER BY AVG(b.review_count) DESC LIMIT 1;
SELECT COUNT(user_id) AS best_elite_count FROM Users WHERE user_yelping_since_year <= 2013 AND user_yelping_since_year >= 2013 AND user_average_stars = 5  UNION ALL  SELECT COUNT(user_id) AS worse_elite_count FROM Users WHERE user_yelping_since_year <= 2013 AND user_yelping_since_year >= 2013 AND user_average_stars = 1  SELECT COUNT(best_elite_count) / COUNT(worse_elite_count) AS elite_ratio
SELECT      y.actual_year AS year,     (COUNT(e.user_id) WHERE e.year_id < 2014) AS count_previous_year,     (COUNT(e.user_id) WHERE e.year_id = 2015) AS count_current_year,     ((COUNT(e.user_id) WHERE e.year_id < 2014) / (COUNT(e.user_id) WHERE e.year_id = 2015)) * 100 AS increment_percentage FROM      Elite e JOIN      Years y ON e.year_id = y.year_id WHERE      e.year_id BETWEEN 2005 AND 2014 GROUP BY      y.actual_year ORDER BY      y.actual_year;
SELECT COUNT(DISTINCT b.business_id) as num_businesses,         DATEDIFF(YEAR, u.user_yelping_since_year, YEAR(CURRENT_TIMESTAMP)) as years_with_yelp FROM Users u JOIN Reviews r ON u.user_id = r.user_id JOIN Business b ON r.business_id = b.business_id WHERE u.user_id = 3;
SELECT AVG(Count(business_id))  FROM Reviews  WHERE user_id = 3;
SELECT AVG(Count(user_id))  FROM Reviews  WHERE business_id IN (SELECT business_id FROM Business)  AND user_id IN (SELECT user_id FROM Elite);
SELECT u.user_id, AVG(t.likes) AS avg_star, COUNT(e.year_id) AS consecutive_years FROM Users u JOIN Elite e ON u.user_id = e.user_id JOIN Tips t ON u.user_id = t.user_id GROUP BY u.user_id HAVING COUNT(e.year_id) > 5;
SELECT      b.business_id,      b.city,      b.state,      COUNT(r.business_id) AS total_reviews,      AVG(r.review_stars) AS average_star_per_user,      STDEV(r.review_stars) AS std_dev_review_stars FROM      Business b JOIN      Reviews r ON b.business_id = r.business_id JOIN      Business_Categories bc ON b.business_id = bc.business_id JOIN      Categories c ON bc.category_id = c.category_id WHERE      c.category_name = 'Hotel & Travel' GROUP BY      b.business_id, b.city, b.state ORDER BY      total_reviews DESC LIMIT 1;
SELECT      ROUND(AVG(review_stars), 2) AS avg_review_stars,      ROUND(AVG(Business.stars), 2) AS avg_business_stars FROM      Reviews INNER JOIN      Business ON Reviews.business_id = Business.business_id GROUP BY      Business.business_id ORDER BY      avg_business_stars DESC;
Error: 第 3916 个样本有 0 个SQL。
Error: 第 3917 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE active = 'true' AND state = 'AZ' AND stars = (SELECT AVG(stars) FROM Business WHERE state = 'AZ');
SELECT business_id FROM Business WHERE city = 'Tempe' AND stars >= 3 AND stars < 5;
Error: 第 3920 个样本有 0 个SQL。
SELECT review_length FROM Reviews WHERE business_id = 1 AND user_id = 60776;
SELECT a.attribute_name FROM Business b JOIN Business_Attributes ba ON b.business_id = ba.business_id JOIN Attributes a ON ba.attribute_id = a.attribute_id WHERE b.city = 'Scottsdale' AND b.stars = (SELECT MAX(stars) FROM Business WHERE city = 'Scottsdale');
SELECT COUNT(*) FROM Business WHERE business_id IN (   SELECT business_id   FROM Business_Categories   WHERE category_id IN (     SELECT category_id     FROM Categories     WHERE category_name = 'Automotive'   ) ) AND stars < 3;
SELECT b.business_id, b.stars FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.active = 'true' AND c.category_name = 'Pets';
SELECT a.attribute_name FROM Business b JOIN Business_Attributes ba ON b.business_id = ba.business_id JOIN Attributes a ON ba.attribute_id = a.attribute_id WHERE b.stars = (SELECT MAX(stars) FROM Business);
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id JOIN Reviews r ON b.business_id = r.business_id WHERE b.business_id BETWEEN 5 AND 10 AND r.review_length = 'Short' AND r.review_stars = (SELECT MAX(review_stars) FROM Reviews WHERE business_id BETWEEN 5 AND 10);
SELECT COUNT(b.business_id) FROM Business b JOIN Business_Attributes ba ON b.business_id = ba.business_id JOIN Attributes a ON ba.attribute_id = a.attribute_id WHERE b.active = 'true' AND a.attribute_name = 'Wi-Fi' AND b.stars = 'Medium';
SELECT bh.opening_time, bh.closing_time FROM Business b JOIN Business_Hours bh ON b.business_id = bh.business_id WHERE b.city = 'Gilbert' AND b.stars = (SELECT MAX(stars) FROM Business);
SELECT    c.category_name,    a.attribute_name FROM    Business b   JOIN Business_Categories bc ON b.business_id = bc.business_id   JOIN Categories c ON bc.category_id = c.category_id   JOIN Business_Attributes ba ON b.business_id = ba.business_id   JOIN Attributes a ON ba.attribute_id = a.attribute_id WHERE    b.active = 'true' AND    b.city = 'Mesa' AND    b.state = 'AZ' AND    b.review_count = 'Low';
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.active = 'FALSE' AND b.state = 'AZ';
SELECT city FROM Business WHERE business_id IN (   SELECT business_id   FROM Business_Hours   WHERE day_id IN (     SELECT day_id     FROM Days     WHERE day_of_week = 'Saturday'   )   AND opening_time = '9AM'   AND closing_time = '9PM' )
Error: 第 3932 个样本有 0 个SQL。
Error: 第 3933 个样本有 0 个SQL。
SELECT (COUNT(b.business_id) / (SELECT COUNT(*) FROM Business) * 100)  FROM Business b  JOIN Business_Categories bc ON b.business_id = bc.business_id  JOIN Categories c ON bc.category_id = c.category_id  WHERE c.category_name = 'Local Services'  AND b.stars < 3;
SELECT bh.closing_time, d.day_of_week FROM Business b JOIN Business_Hours bh ON b.business_id = bh.business_id JOIN Days d ON bh.day_id = d.day_id WHERE b.active = 'true' AND b.city = 'Scottsdale' AND b.stars > (SELECT AVG(stars) FROM Business) * 0.6;
Error: 第 3936 个样本有 0 个SQL。
SELECT u.user_id, u.user_yelping_since_year, u.user_average_stars, u.user_votes_funny, u.user_votes_useful, u.user_votes_cool, u.user_review_count, u.user_fans FROM Users u WHERE u.user_id IN (   SELECT uc.user_id   FROM Users_Compliments uc   WHERE uc.number_of_compliments < 5 ) ORDER BY u.user_id LIMIT 5;
SELECT user_id FROM Users WHERE user_average_stars = 4;
SELECT city FROM Business JOIN Business_Hours ON Business.business_id = Business_Hours.business_id JOIN Days ON Business_Hours.day_id = Days.day_id WHERE day_of_week = 'Sunday' AND opening_time = '10AM' AND closing_time = '12PM';
Error: 第 3940 个样本有 0 个SQL。
SELECT business_id  FROM Business_Attributes  WHERE attribute_id IN (SELECT attribute_id FROM Attributes WHERE attribute_name IN ('Good for Groups', 'Good for Dancing'))  AND attribute_value = 'true'  AND business_id IN (SELECT business_id FROM Business WHERE active = true);
SELECT business_id FROM Business WHERE active = 'true' AND city = 'Ahwatukee' INTERSECT SELECT business_id FROM Business_Hours WHERE day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Sunday') AND opening_time IS NOT NULL;
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.active = 'true' AND b.state != 'AZ';
SELECT c.category_name  FROM Business b  JOIN Business_Categories bc ON b.business_id = bc.business_id  JOIN Categories c ON bc.category_id = c.category_id  WHERE b.active = 1 AND b.review_count = 'High' AND b.stars = 2;
SELECT COUNT(DISTINCT b.business_id) FROM Business_Attributes ba JOIN Business b ON ba.business_id = b.business_id WHERE ba.attribute_id IN (SELECT attribute_id FROM Attributes WHERE attribute_name = 'ambience_romantic') AND ba.attribute_value = 'true';
Error: 第 3946 个样本有 0 个SQL。
SELECT COUNT(DISTINCT u.user_id) FROM Users u JOIN Tips t ON u.user_id = t.user_id WHERE t.likes = (SELECT MAX(likes) FROM Tips);
SELECT city FROM Business WHERE business_id IN (   SELECT business_id   FROM Checkins   WHERE day_id IN (     SELECT day_id     FROM Days     WHERE day_of_week = 'Saturday'   ) AND opening_time = '12AM' AND closing_time = '1AM'   GROUP BY business_id   HAVING COUNT(*) > 10 )
SELECT COUNT(DISTINCT b.business_id) FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id JOIN Business b2 ON b.review_count = 'High' WHERE c.category_name = 'Shopping Centers';
SELECT COUNT(*)  FROM Business_Attributes  WHERE attribute_name = 'Accepts Insurance' AND attribute_value = 'true';
Error: 第 3951 个样本有 0 个SQL。
SELECT COUNT(business_id) - COUNT(business_id) AS difference FROM Business_Hours WHERE day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Monday') AND opening_time = '10AM' AND closing_time = '9PM' AND day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Tuesday') AND opening_time = '10AM' AND closing_time = '9PM';
Error: 第 3953 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE active = 'true' AND city = 'Phoenix';
Error: 第 3955 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE city = 'Gilbert' AND stars = (SELECT business_id FROM Business WHERE review_count = 'High');
SELECT b.business_id FROM Business b WHERE b.active = 'true' AND b.city = 'Gilbert' ORDER BY b.review_count DESC LIMIT 1;
Error: 第 3958 个样本有 0 个SQL。
SELECT ba.attribute_value  FROM Business_Attributes ba  JOIN Business b ON ba.business_id = b.business_id  JOIN Business_Categories bc ON b.business_id = bc.business_id  JOIN Categories c ON bc.category_id = c.category_id  WHERE c.category_name = 'Uber'  AND b.city = 'Mesa'  AND ba.attribute_name = 'Noise Level';
SELECT *  FROM Attributes a  JOIN Business_Attributes ba ON a.attribute_id = ba.attribute_id  WHERE ba.business_id = 14033 AND a.attribute_name = 'good_for_dinner';
SELECT opening_time, closing_time FROM Business_Hours WHERE business_id = '15098' AND day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Monday');
SELECT business_id FROM Reviews JOIN Business ON Reviews.business_id = Business.business_id WHERE review_stars = 5 AND review_votes_funny = 'Uber' AND Business.city = 'Phoenix';
Error: 第 3963 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Users_Compliments  WHERE user_id IN (   SELECT user_id    FROM Users    WHERE user_yelping_since_year = '2010'    AND user_average_stars = '4.5'    AND user_fans = (SELECT MAX(user_fans) FROM Users) )  AND compliment_id IN (   SELECT compliment_id    FROM Compliments    WHERE compliment_type = 'funny' );
Error: 第 3965 个样本有 0 个SQL。
SELECT * FROM Business_Attributes WHERE business_id = 12476 AND attribute_value = 'parking_lot';
Error: 第 3967 个样本有 0 个SQL。
Error: 第 3968 个样本有 0 个SQL。
SELECT COUNT(category_name = 'Women''s Clothing') / COUNT(category_name = 'Men''s Clothing') AS times FROM Business_Categories WHERE category_name IN ('Women''s Clothing', 'Men''s Clothing');
SELECT business_id, active, city FROM Business WHERE state = 'CA';
SELECT (COUNT(business_id) - COUNT(CASE WHEN active = 'false' THEN 1 ELSE NULL END)) / COUNT(business_id) * 100 AS percentage_of_running_business FROM Business;
SELECT attribute_id, attribute_name FROM Attributes WHERE attribute_name LIKE 'music%';
SELECT year_id, COUNT(user_id) AS elite_user_count FROM Elite WHERE year_id BETWEEN 2006 AND 2007 GROUP BY year_id ORDER BY elite_user_count DESC LIMIT 1;
Error: 第 3974 个样本有 0 个SQL。
Error: 第 3975 个样本有 0 个SQL。
SELECT U.user_id, B.business_id, T.tip_length FROM Users U JOIN Business B ON U.user_id = B.business_id JOIN Tips T ON B.business_id = T.business_id WHERE U.user_yelping_since_year = '2004' AND U.user_fans = 'High';
SELECT B.business_id, B.active, R.user_id, U.user_yelping_since_year FROM Reviews R JOIN Business B ON R.business_id = B.business_id JOIN Users U ON R.user_id = U.user_id WHERE R.review_votes_funny = 'Uber' AND R.review_votes_cool = 'Uber' AND R.review_length > ?;
SELECT    ba.attribute_id,    ba.business_id,    b.city,    CASE      WHEN b.active = 'true' THEN 'active'     ELSE 'inactive'   END AS status FROM    Business_Attributes ba    JOIN Business b ON ba.business_id = b.business_id WHERE    ba.attribute_name = 'music_playlist';
SELECT (COUNT(a.attribute_name = 'Accepts Credit Cards') / COUNT(b.business_id)) * 100 FROM Business_Attributes a JOIN Business b ON a.business_id = b.business_id WHERE a.attribute_name = 'Accepts Credit Cards';
Error: 第 3980 个样本有 0 个SQL。
SELECT    u.user_average_stars,    e.year_id,    c.compliment_type FROM    Users u   JOIN Elite e ON u.user_id = e.user_id   JOIN Users_Compliments uc ON u.user_id = uc.user_id   JOIN Compliments c ON uc.compliment_id = c.compliment_id WHERE    u.user_id = 6027 AND uc.number_of_compliments = 'Uber';
SELECT b.business_id, b.state, b.city FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE c.category_name = 'Coffee & Tea' LIMIT 5;
SELECT c.category_name,         (COUNT(bc.business_id) / COUNT(c.category_id)) * 100 AS percentage FROM Categories c JOIN Business_Categories bc ON c.category_id = bc.category_id GROUP BY c.category_name HAVING (COUNT(bc.business_id) / COUNT(c.category_id)) * 100 > 10;
SELECT u.user_id, u.user_fans FROM Users u JOIN Reviews r ON u.user_id = r.user_id JOIN Business b ON r.business_id = b.business_id WHERE b.active = 1 AND b.city = 'Sun Lakes' AND b.stars = 5;
Error: 第 3985 个样本有 0 个SQL。
SELECT    uc.compliment_id,    c.compliment_type,    u.user_id,    u.user_fans FROM    Users_Compliments uc   INNER JOIN Compliments c ON uc.compliment_id = c.compliment_id   INNER JOIN Users u ON uc.user_id = u.user_id WHERE    u.user_id < 100 AND    uc.number_of_compliments = 'Uber' ORDER BY    uc.number_of_compliments DESC LIMIT 1;
SELECT business_id FROM Business_Hours WHERE closing_time = '8PM';
Error: 第 3988 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE city = 'Tempe' AND stars > 3;
SELECT * FROM Users WHERE user_yelping_since_year = 2012 AND user_average_stars < 3;
SELECT (COUNT(business_id) * 100.0) / (SELECT COUNT(*) FROM Business WHERE stars = 5) AS percentage FROM Business WHERE stars = 5;
SELECT      (SELECT MAX(review_count) FROM Business) - (SELECT MIN(review_count) FROM Business) AS review_diff
SELECT b.business_id, b.name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id JOIN Business_Hours bh ON b.business_id = bh.business_id WHERE c.category_name = 'Tires' AND bh.day_id IN (   SELECT day_id   FROM Days ) GROUP BY b.business_id, b.name HAVING COUNT(DISTINCT bh.opening_time) = 7;
Error: 第 3994 个样本有 0 个SQL。
Error: 第 3995 个样本有 0 个SQL。
SELECT COUNT(DISTINCT b.business_id) FROM Business b JOIN Checkins c ON b.business_id = c.business_id WHERE c.day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Sunday') AND c.label_time_10 = 'Low';
SELECT COUNT(DISTINCT business_id) FROM Reviews WHERE business_id IN (   SELECT business_id   FROM Business   WHERE city = 'Glendale' ) AND user_id = 20241;
Error: 第 3998 个样本有 0 个SQL。
SELECT COUNT(*) FROM Compliments c JOIN Users_Compliments uc ON c.compliment_id = uc.compliment_id JOIN Users u ON uc.user_id = u.user_id WHERE c.compliment_type = 'photos' AND u.user_votes_cool = 'High';
Error: 第 4000 个样本有 0 个SQL。
SELECT b.business_id FROM Business b JOIN Business_Attributes ba ON b.business_id = ba.business_id JOIN Attributes a ON ba.attribute_id = a.attribute_id WHERE b.city = 'Mesa' AND a.attribute_name = 'Alcohol';
SELECT      ROUND(         (COUNT(business_id)          FROM Reviews          WHERE review_votes_funny = 'Low'          AND city = 'Phoenix')      /          (SELECT COUNT(business_id)          FROM Business          WHERE city = 'Phoenix')      * 100, 2) AS percentage
SELECT      (COUNT(ba1.business_id) / COUNT(ba2.business_id))  FROM      Business_Categories bc      JOIN Business_Attributes ba1 ON bc.business_id = ba1.business_id      JOIN Categories c1 ON bc.category_id = c1.category_id      JOIN Business_Attributes ba2 ON bc.business_id = ba2.business_id      JOIN Categories c2 ON bc.business_id = c2.category_id  WHERE      c1.category_name = 'Shopping'      AND c2.category_name = 'Pets';
SELECT COUNT(*)  FROM Business_Categories  JOIN Categories ON Business_Categories.category_id = Categories.category_id  WHERE Categories.category_name = 'Banks & Credit Unions';
Error: 第 4005 个样本有 0 个SQL。
SELECT opening_time FROM Business_Hours WHERE business_id = 12 AND day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Monday');
Error: 第 4007 个样本有 0 个SQL。
SELECT b.business_id, b.stars FROM Business b WHERE b.active = 'true' AND b.city = 'Gilbert' ORDER BY b.review_count DESC, b.stars DESC LIMIT 1;
SELECT b.business_id, c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.active = 1 AND b.city = 'Ahwatukee' AND b.stars = 5;
SELECT (COUNT(b.business_id) * 100 / COUNT(b.business_id)) AS percentage FROM Business b WHERE b.active = 'false' AND b.city = 'Avondale' AND b.stars > 3;
SELECT u.user_id FROM Users u WHERE u.user_yelping_since_year = 2004 AND EXISTS (   SELECT 1   FROM Elite e   WHERE e.user_id = u.user_id );
SELECT      (COUNT(b.business_id)       WHERE r.review_length = 'Long' AND r.review_stars = 5)      / (COUNT(b.business_id)) * 100 AS percentage FROM      Reviews r JOIN      Business b ON r.business_id = b.business_id;
SELECT (COUNT(u.user_id) / (SELECT COUNT(*) FROM Users WHERE user_average_stars >= 4)) * 100 FROM Users u WHERE user_average_stars >= 4 AND user_fans = 'None';
SELECT COUNT(*) FROM Tips WHERE business_id = 2 AND tip_length = 'Short';
SELECT user_id FROM Users WHERE user_average_stars = 5 ORDER BY user_yelping_since_year LIMIT 1;
SELECT BH.business_id, BH.day_id, BH.opening_time, BH.closing_time FROM Business_Hours BH JOIN Business B ON BH.business_id = B.business_id WHERE B.city = 'Black Canyon City' AND B.review_count > (   SELECT AVG(review_count) FROM Business )
SELECT (COUNT(UC.user_id) / COUNT(UC.user_id)) * 100 FROM Users_Compliments UC WHERE UC.number_of_compliments = 'High' AND UC.compliment_id IN (SELECT C.compliment_id FROM Compliments C WHERE C.compliment_type = 'cute');
SELECT COUNT(*)  FROM Business_Attributes  WHERE attribute_value NOT IN ('none', 'no', 'false');
SELECT opening_time, closing_time FROM Business_Hours WHERE business_id = 1 AND day_id = 2;
SELECT B.city FROM Business B JOIN Reviews R ON B.business_id = R.business_id WHERE R.review_length = 'Medium';
Error: 第 4021 个样本有 0 个SQL。
SELECT b.business_id FROM Business b JOIN Reviews r ON b.business_id = r.business_id WHERE r.review_length = 'Short' AND b.city = 'Phoenix';
Error: 第 4023 个样本有 0 个SQL。
SELECT user_id FROM Users_Compliments JOIN Users ON Users_Compliments.user_id = Users.user_id WHERE number_of_compliments = 'Low' AND user_yelping_since_year = 2012;
SELECT COUNT(*) FROM Business WHERE active = 1 AND city = 'Gilbert' AND NOT EXISTS (   SELECT 1   FROM Business_Attributes   WHERE business_id = Business.business_id AND attribute_value <> 'None' );
SELECT COUNT(b.business_id) FROM Business b JOIN Business_Attributes ba ON b.business_id = ba.business_id WHERE ba.attribute_value = 'full_bar' AND b.stars IN (   SELECT AVG(stars)   FROM Business )
SELECT b.state FROM Business b JOIN Business_Hours bh ON b.business_id = bh.business_id WHERE bh.day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Saturday' OR day_of_week = 'Sunday') AND bh.opening_time = '01:00:00';
SELECT c.category_name  FROM Business_Categories bc  JOIN Categories c ON bc.category_id = c.category_id  WHERE bc.business_id = 5;
SELECT user_id  FROM Users_Compliments, Compliments  WHERE Users_Compliments.compliment_id = Compliments.compliment_id  AND Compliments.compliment_type = 'photos';
SELECT      (COUNT(tips.tip_length = 'Medium') / COUNT(tips)) * 100 AS percentage_of_medium_tip_length,     users.user_yelping_since_year AS time_when_users_join_yelp FROM      tips JOIN      users ON tips.user_id = users.user_id WHERE      tips.tip_length = 'Medium' GROUP BY      users.user_yelping_since_year;
SELECT      (COUNT(b.business_id) / (SELECT COUNT(*) FROM Business)) * 100 AS percentage,     ba.attribute_value FROM      Business b JOIN      Business_Attributes ba ON b.business_id = ba.business_id WHERE      b.city = 'Mesa' GROUP BY      ba.attribute_value;
Error: 第 4032 个样本有 0 个SQL。
Error: 第 4033 个样本有 0 个SQL。
SELECT user_id, user_yelping_since_year FROM Users, Users_Compliments WHERE Users.user_id = Users_Compliments.user_id AND Users_Compliments.number_of_compliments = 'High' ORDER BY user_yelping_since_year ASC LIMIT 1;
SELECT business_id FROM Reviews GROUP BY business_id ORDER BY COUNT(user_id) DESC LIMIT 1;
SELECT year_id FROM Elite GROUP BY year_id ORDER BY COUNT(user_id) DESC LIMIT 1;
SELECT COUNT(*)  FROM Reviews  WHERE business_id IN (SELECT business_id FROM Business WHERE stars = 5.0)    AND review_stars = 5.0    AND review_votes_funny = 'uber';
Error: 第 4038 个样本有 0 个SQL。
SELECT business_id FROM Business_Hours ORDER BY closing_time - opening_time ASC LIMIT 1;
SELECT business_id FROM Business_Hours WHERE day_id BETWEEN 1 AND 7 AND opening_time = closing_time;
SELECT    tip_length,    COUNT(*) as likes_count,    AVG(likes) as avg_likes FROM    Tips WHERE    business_id IN (     SELECT        business_id      FROM        Business_Categories      WHERE        category_name = 'Hotels & Travel'   ) GROUP BY    tip_length ORDER BY    tip_length;
SELECT AVG(user_average_stars) AS average_stars FROM Users WHERE user_id IN (   SELECT user_id   FROM Reviews   WHERE review_votes_funny = 'uber' AND review_votes_useful = 'uber' AND review_votes_cool = 'uber' )
SELECT      COUNT(stars BETWEEN 3.5 AND 5) / COUNT(stars BETWEEN 1 AND 2.5) AS good_to_bad_ratio FROM      Business WHERE      business_id IN (         SELECT              business_id         FROM              Business_Hours         WHERE              day_id BETWEEN 1 AND 7 AND opening_time = closing_time     );
SELECT    b.business_id,    b.review_count,    c.category_name FROM    Business b   JOIN Business_Categories bc ON b.business_id = bc.business_id   JOIN Categories c ON bc.category_id = c.category_id ORDER BY    b.review_count DESC LIMIT 10;  SELECT    c.category_name FROM    Business_Categories bc   JOIN Categories c ON bc.category_id = c.category_id GROUP BY    c.category_name ORDER BY    COUNT(bc.business_id) DESC LIMIT 3;
Error: 第 4045 个样本有 0 个SQL。
SELECT      DIVIDE(SUBTRACT(COUNT(user_id), COUNT(Elite.user_id)), COUNT(user_id)) as percentage FROM      Users WHERE      user_id NOT IN (SELECT user_id FROM Elite);
SELECT c.compliment_type, COUNT(c.compliment_id) AS compliment_count FROM Users u JOIN Users_Compliments uc ON u.user_id = uc.user_id JOIN Compliments c ON uc.compliment_id = c.compliment_id WHERE u.user_fans = 'uber' GROUP BY c.compliment_type ORDER BY compliment_count DESC LIMIT 1;
Error: 第 4048 个样本有 0 个SQL。
SELECT AVG(user_yelping_since_year)  FROM Users, Elite  WHERE Users.user_id = Elite.user_id;
SELECT    COUNT(business_id) as num_businesses,   (COUNT(business_id) / (SELECT COUNT(business_id) FROM Business WHERE city = 'Mesa')) * 100 as percentage FROM    Business_Hours WHERE    city = 'Mesa' AND    active = 'true' AND    (closing_time - opening_time) > 8;
Error: 第 4051 个样本有 0 个SQL。
Error: 第 4052 个样本有 0 个SQL。
SELECT AVG(review_count)  FROM Business  WHERE active = 'true'  AND business_id IN (   SELECT business_id    FROM Business_Hours    GROUP BY business_id    HAVING SUM(closing_time - opening_time) < 30 );
SELECT COUNT(DISTINCT business_id) FROM Business_Hours WHERE opening_time = '8AM' AND closing_time = '6PM';
Error: 第 4055 个样本有 0 个SQL。
SELECT b.business_id, d.day_id FROM Business_Hours b JOIN Days d ON b.day_id = d.day_id WHERE b.opening_time = '8AM' AND b.closing_time = '6PM';
Error: 第 4057 个样本有 0 个SQL。
SELECT c.category_name  FROM Business_Categories bc  JOIN Categories c ON bc.category_id = c.category_id  JOIN Business_Hours bh ON bc.business_id = bh.business_id  JOIN Days d ON bh.day_id = d.day_id  WHERE d.day_of_week = 1;
Error: 第 4059 个样本有 0 个SQL。
SELECT bh.business_id, bh.day_id, bh.closing_time FROM Business_Categories bc JOIN Business_Hours bh ON bc.business_id = bh.business_id WHERE bc.category_id IN (   SELECT c.category_id   FROM Categories c   WHERE c.category_name = 'Doctors' );
SELECT B.category_name, COUNT(B.business_id) as max_days FROM Business_Categories BC JOIN Categories C ON BC.category_id = C.category_id JOIN Business B ON BC.business_id = B.business_id WHERE C.category_name IN (SELECT category_name FROM Categories WHERE category_id IN (SELECT category_id FROM Business_Categories WHERE business_id IN (SELECT business_id FROM Business_Hours WHERE day_id BETWEEN 2 AND 7))) GROUP BY B.category_name ORDER BY max_days DESC;
Error: 第 4062 个样本有 0 个SQL。
Error: 第 4063 个样本有 0 个SQL。
SELECT bh.business_id FROM Business_Hours bh JOIN Business b ON bh.business_id = b.business_id WHERE bh.opening_time = '7AM' AND bh.closing_time = '8PM' AND b.active = 'true';
SELECT COUNT(business_id) FROM Business WHERE business_id IN (   SELECT business_id   FROM Business_Categories   WHERE category_id IN (     SELECT category_id     FROM Categories     WHERE category_name = 'Stadiums & Arenas'   )   AND business_id IN (     SELECT business_id     FROM Business     WHERE stars = (       SELECT MAX(stars)       FROM Business     )   ) )
SELECT c.category_id FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.review_count < 10 AND b.stars > 2;
SELECT b.business_id FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Business_Hours bh ON b.business_id = bh.business_id JOIN Days d ON bh.day_id = d.day_id WHERE bc.category_id IN (   SELECT c.category_id   FROM Categories c   WHERE c.category_name = 'Accessories' ) AND bh.opening_time < '7AM';
Error: 第 4068 个样本有 0 个SQL。
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.business_id IN (   SELECT r.business_id   FROM Reviews r   WHERE r.user_id = 16328 )
SELECT      b.business_id FROM      Business_Categories bc JOIN      Categories c ON bc.category_id = c.category_id WHERE      c.category_name = 'Food' UNION SELECT      business_id FROM      Business WHERE      stars < 2;
SELECT    DIVIDE(COUNT(b.business_id)           WHERE b.category_id = c.category_id           AND b.day_id = bh.day_id           AND bh.opening_time = '7AM'           AND bh.closing_time = '8PM'),    COUNT(b.business_id)    WHERE bh.day_id = bh.day_id    AND bh.opening_time = '7AM'    AND bh.closing_time = '8PM')  AS percentage FROM    Business b    JOIN Business_Categories bc ON b.business_id = bc.business_id    JOIN Categories c ON bc.category_id = c.category_id    JOIN Business_Hours bh ON b.business_id = bh.business_id
SELECT      review_count,      COUNT(business_id) AS num_running_businesses FROM      Business WHERE      active = 'true' AND      city = 'Cave Creek' GROUP BY      review_count;
SELECT AVG(user_id)  FROM Users  WHERE user_yelping_since_year BETWEEN '2005' AND '2014';
SELECT    DIVIDE(     COUNT(b.business_id)      FROM Business b      WHERE b.review_count = 'Low' AND b.active = 'true'   ),    COUNT(b.business_id)    FROM Business b    WHERE b.review_count = 'Low' AND b.active = 'false' ) AS active_inactive_ratio;
SELECT user_id  FROM Elite  WHERE year_id = '2006'  LIMIT 5;
SELECT category_id, category_name FROM Categories WHERE category_name LIKE 'P%';
Error: 第 4077 个样本有 0 个SQL。
Error: 第 4078 个样本有 0 个SQL。
Error: 第 4079 个样本有 0 个SQL。
SELECT Users.user_id, Years.actual_year FROM Users JOIN Elite ON Users.user_id = Elite.user_id JOIN Years ON Elite.year_id = Years.year_id JOIN Reviews ON Users.user_id = Reviews.user_id WHERE Reviews.business_id = 143 AND Reviews.review_stars = 5;
SELECT u.user_id, y.year_id FROM Users u JOIN Elite e ON u.user_id = e.user_id JOIN Years y ON e.year_id = y.year_id JOIN Users_Compliments uc ON u.user_id = uc.user_id JOIN Compliments c ON uc.compliment_id = c.compliment_id WHERE c.compliment_type = 'profile' AND uc.number_of_compliments = 'Uber' ORDER BY y.year_id LIMIT 5;
SELECT u.user_id, b.business_id, r.review_length FROM Tips t JOIN Business b ON t.business_id = b.business_id JOIN Reviews r ON t.business_id = r.business_id JOIN Users u ON r.user_id = u.user_id WHERE t.likes = (   SELECT MAX(likes)    FROM Tips );
Error: 第 4083 个样本有 0 个SQL。
SELECT    DIVIDE(COUNT(bh.opening_time = '9AM' and bh.closing_time = '9PM' and d.day_of_week = 'Sunday'),           COUNT(bh.opening_time IS NOT NULL and bh.closing_time IS NOT NULL and d.day_of_week = 'Sunday'))    AS percentage FROM    Business_Hours bh    JOIN Days d ON bh.day_id = d.day_id WHERE    d.day_of_week = 'Sunday'    AND bh.opening_time = '9AM'    AND bh.closing_time = '9PM';
SELECT bh.business_id, d.day_of_week FROM Business_Hours bh JOIN Days d ON bh.day_id = d.day_id JOIN Business b ON bh.business_id = b.business_id WHERE b.active = 'true' AND b.city = 'Black Canyon City';
SELECT U.user_id, R.review_length FROM Users U JOIN Reviews R ON U.user_id = R.user_id WHERE U.user_yelping_since_year = 2014 AND U.user_average_stars = 5;
SELECT b.business_id, b.active, b.city FROM Business b WHERE b.business_id IN (   SELECT r.business_id   FROM Reviews r   WHERE r.review_stars > 4   GROUP BY r.business_id   HAVING COUNT(CASE WHEN r.review_stars > 4 THEN 1 END) / COUNT(r.review_stars) >= 0.65 )
SELECT      COUNT(CASE WHEN city = 'Glendale' AND active = 'true' THEN 1 ELSE NULL END) AS glendale_running_business,     COUNT(CASE WHEN city = 'Mesa' AND active = 'true' THEN 1 ELSE NULL END) AS mesa_running_business FROM      Business WHERE      active = 'true';
Error: 第 4089 个样本有 0 个SQL。
SELECT tip_length FROM Tips WHERE user_id IN (   SELECT user_id   FROM Users   WHERE user_average_stars = 3 ) GROUP BY tip_length ORDER BY COUNT(user_id) DESC LIMIT 1;
SELECT SUM(likes)  FROM Tips  WHERE business_id IN (   SELECT business_id    FROM Business    WHERE city = 'Goodyear'  )  AND tip_length = 'Short';
SELECT b.state  FROM Business b  JOIN Reviews r ON b.business_id = r.business_id  WHERE r.review_length > (SELECT AVG(review_length) FROM Reviews);
Error: 第 4093 个样本有 0 个SQL。
SELECT    business_Hours.day_id AS closing_day FROM    Business_Hours   INNER JOIN Business    ON Business_Hours.business_id = Business.business_id WHERE    Business.state = 'SC';
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.stars = 5;
SELECT DISTINCT b.state FROM Business_Attributes ba JOIN Business b ON ba.business_id = b.business_id WHERE ba.attribute_value = 'beer_and_wine';
SELECT COUNT(*) FROM Users_Compliments WHERE compliment_id IN (   SELECT compliment_id   FROM Compliments   WHERE compliment_type = 'photo' ) AND number_of_compliments = 'Medium';
SELECT B.business_id FROM Business_Attributes BA JOIN Business B ON BA.business_id = B.business_id WHERE BA.attribute_name = 'Wi-Fi' AND BA.attribute_value = 'true' JOIN Business_Categories BC ON B.business_id = BC.business_id WHERE BC.category_id IN (   SELECT C.category_id   FROM Categories C   WHERE C.category_name = 'SC' )
Error: 第 4099 个样本有 0 个SQL。
SELECT      DIVIDE(         (SELECT COUNT(*) FROM Business_Attributes WHERE attribute_name = 'Good for Kids' AND attribute_value = 'true'),         (SELECT COUNT(*) FROM Business_Attributes)      ) * 100 AS percentage
Error: 第 4101 个样本有 0 个SQL。
SELECT COUNT(DISTINCT b.business_id) FROM Business b WHERE b.stars IN (1, 2);
SELECT b.business_id FROM Business b JOIN Reviews r ON b.business_id = r.business_id WHERE b.city = 'Paradise Valley' AND r.review_count = 'Low' AND r.review_stars > 3;
SELECT COUNT(DISTINCT b.business_id)  FROM Business_Attributes ba  JOIN Business b ON ba.business_id = b.business_id  GROUP BY b.business_id  HAVING COUNT(ba.attribute_value) > 1;
SELECT COUNT(*)  FROM Business_Hours  WHERE day_id BETWEEN 1 AND 7  GROUP BY business_id  HAVING MIN(opening_time) = MAX(opening_time)  AND MIN(closing_time) = MAX(closing_time);
SELECT COUNT(*) FROM Reviews WHERE Business.active = 'true' AND review_votes_funny = 'Uber';
SELECT COUNT(*)  FROM Users  WHERE user_fans = 'None'  AND user_id IN (   SELECT user_id    FROM Users_Compliments    WHERE number_of_compliments = 'High' );
SELECT compliment_type FROM Users_Compliments GROUP BY compliment_type ORDER BY COUNT(compliment_type) DESC LIMIT 1;
SELECT u.user_average_stars FROM Users u WHERE u.user_id IN (   SELECT t.user_id   FROM Tips t   GROUP BY t.user_id   ORDER BY MAX(t.likes) DESC   LIMIT 3 )
Error: 第 4110 个样本有 0 个SQL。
SELECT business_id  FROM Business_Hours  WHERE day_id = 1;
Error: 第 4112 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE active = 'true' AND city = 'Phoenix'    AND EXISTS (     SELECT 1      FROM Reviews      WHERE business_id = Business.business_id        AND review_length = 'Long'   );
SELECT COUNT(*) FROM Users WHERE user_votes_cool = 'Low'   AND EXISTS (     SELECT 1     FROM Reviews     WHERE user_id = Users.user_id       AND review_votes_cool = 'Low'   );
SELECT COUNT(*) FROM Users WHERE user_fans = 'High' AND EXISTS (   SELECT 1   FROM Tips   WHERE Tips.business_id = Users.user_id   AND tip_length = 'Long'   AND likes = 2 );
Error: 第 4116 个样本有 0 个SQL。
SELECT COUNT(*) FROM Business_Hours JOIN Business ON Business_Hours.business_id = Business.business_id WHERE Business.city = 'Scottsdale' AND Business_Hours.day_id IN (SELECT day_id FROM Days WHERE day_of_week = 'Sunday') AND Business_Hours.opening_time = '12PM';
Error: 第 4118 个样本有 0 个SQL。
SELECT DIVIDE(COUNT(DISTINCT u.user_id), COUNT(DISTINCT e.user_id)) * 100 FROM Users u JOIN Elite e ON u.user_id = e.user_id WHERE u.user_fans = 'High' AND e.year_id = (SELECT year_id FROM Years WHERE actual_year = 2011)
Error: 第 4120 个样本有 0 个SQL。
Error: 第 4121 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Business  WHERE active = 'true' AND state = 'AZ' AND review_count = 'Medium';
SELECT business_id FROM Business WHERE city = 'Chandler' AND stars BETWEEN 3 AND 5;
Error: 第 4124 个样本有 0 个SQL。
SELECT review_length FROM Reviews WHERE business_id = 3 AND user_id = 11021;
SELECT ba.attribute_name FROM Business_Attributes ba JOIN Business b ON ba.business_id = b.business_id JOIN Business_Categories bc ON b.business_id = bc.business_id WHERE b.city = 'Tempe' AND b.state = 'AZ' AND b.active = 1 AND b.review_count = 'High' ORDER BY ba.attribute_name;
Error: 第 4127 个样本有 0 个SQL。
SELECT b.business_id, b.stars FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id WHERE b.active = 'true' AND c.category_name = 'Food';
SELECT      c.category_name,      a.attribute_name FROM      Business b JOIN      Business_Categories bc ON b.business_id = bc.business_id JOIN      Categories c ON bc.category_id = c.category_id JOIN      Business_Attributes ba ON b.business_id = ba.business_id JOIN      Attributes a ON ba.attribute_id = a.attribute_id WHERE      b.stars = (SELECT MAX(stars) FROM Business)
SELECT c.category_name FROM Business b JOIN Business_Categories bc ON b.business_id = bc.business_id JOIN Categories c ON bc.category_id = c.category_id JOIN Reviews r ON b.business_id = r.business_id WHERE b.business_id BETWEEN 7 AND 14 AND r.review_length = 'Short' AND r.review_stars = (SELECT MAX(stars) FROM Reviews);
SELECT COUNT(b.business_id) FROM Business b JOIN Business_Attributes ba ON b.business_id = ba.business_id JOIN Attributes a ON ba.attribute_id = a.attribute_id JOIN Categories c ON b.category_id = c.category_id WHERE b.active = 'true' AND a.attribute_name = 'BYOB' AND c.category_name = 'Food' AND b.stars = 'High';
SELECT bh.opening_time, bh.closing_time FROM Business b JOIN Business_Hours bh ON b.business_id = bh.business_id JOIN Business_Categories bc ON b.business_id = bc.business_id WHERE b.city = 'Glendale' AND b.stars = (SELECT MAX(stars) FROM Business);
Error: 第 4133 个样本有 0 个SQL。
Error: 第 4134 个样本有 0 个SQL。
SELECT b.city FROM Business b JOIN Business_Hours bh ON b.business_id = bh.business_id JOIN Days d ON bh.day_id = d.day_id WHERE bh.opening_time = '7AM' AND bh.closing_time = '7PM' AND d.day_of_week = 'Wednesday';
Error: 第 4136 个样本有 0 个SQL。
SELECT Business_Hours.opening_time FROM Business JOIN Business_Hours ON Business.business_id = Business_Hours.business_id WHERE Business.active = 'true' AND Business.city = 'Glendale' AND Business.stars = 'Medium';
SELECT    DIVIDE(COUNT(business.stars > 3), SUM(business.stars)) AS percentage_of_business_with_greater_than_3_stars FROM    Business    JOIN Business_Categories ON Business.business_id = Business_Categories.business_id   JOIN Categories ON Business_Categories.category_id = Categories.category_id WHERE    Categories.category_name = 'Food'
SELECT bh.closing_time, d.day_of_week FROM Business_Hours bh JOIN Business b ON bh.business_id = b.business_id JOIN Days d ON bh.day_id = d.day_id WHERE b.active = 'true' AND b.city = 'Goodyear' AND b.stars > (SELECT AVG(stars) * 0.8 FROM Business);
SELECT (COUNT(paper_id) WHERE class_label = 'Agents') * 100.0 / COUNT(paper_id) AS percentage FROM paper
SELECT word_cited_id, COUNT(*) as count FROM content GROUP BY word_cited_id ORDER BY count DESC LIMIT 1;
SELECT COUNT(*) FROM content JOIN paper ON content.paper_id = paper.paper_id WHERE paper.class_label = 'AI';
SELECT p2.paper_id, p2.class_label FROM cites c1 JOIN cites c2 ON c1.cited_paper_id = c2.cited_paper_id JOIN paper p1 ON c1.citing_paper_id = p1.paper_id JOIN paper p2 ON c2.citing_paper_id = p2.paper_id JOIN content c ON c1.cited_paper_id = c.paper_id WHERE c.paper_id = 315017;
SELECT word_cited_id, COUNT(*) as frequency FROM content JOIN paper ON content.paper_id = paper.paper_id WHERE paper.class_label = 'DB' GROUP BY word_cited_id ORDER BY frequency DESC LIMIT 1;
SELECT (COUNT(content.word_cited_id WHERE paper.class_label = 'Agents') / COUNT(content.word_cited_id)) * 100 AS percentage
SELECT p.paper_id, p.class_label FROM paper p JOIN (SELECT paper_id, COUNT(*) as max_cited       FROM content       GROUP BY paper_id       ORDER BY max_cited DESC       LIMIT 1) c ON p.paper_id = c.paper_id;
SELECT p.paper_id, p.class_label FROM paper p JOIN content c ON p.paper_id = c.paper_id WHERE c.word_cited_id = 'word1002';
Error: 第 4148 个样本有 0 个SQL。
SELECT p.class_label, COUNT(c.word_cited_id) FROM paper p JOIN content c ON p.paper_id = c.paper_id WHERE p.paper_id = 'chakrabarti01integrating';
SELECT p.paper_id, p.class_label FROM paper p JOIN content c ON p.paper_id = c.paper_id GROUP BY p.paper_id, p.class_label HAVING COUNT(c.word_cited_id) > 20;
SELECT word_cited_id FROM content WHERE paper_id IN (   SELECT paper_id   FROM paper   WHERE class_label IN ('AI', 'IR') ) GROUP BY word_cited_id HAVING COUNT(DISTINCT paper_id) = 2;
SELECT      citing_paper_id AS paper_id,      COUNT(*) AS citation_count FROM      cites GROUP BY      citing_paper_id ORDER BY      citation_count ASC LIMIT 1;  SELECT      citing_paper_id AS paper_id,      COUNT(*) AS citation_count FROM      cites GROUP BY      citing_paper_id ORDER BY      citation_count DESC LIMIT 1;
SELECT AVG(count_paper) AS avg_papers FROM (   SELECT COUNT(paper_id) AS count_paper   FROM paper   WHERE class_label = 'ML' ) AS subquery;
SELECT c.word_cited_id FROM content c JOIN paper p ON c.paper_id = p.paper_id JOIN cites ci ON p.paper_id = ci.citing_paper_id WHERE ci.citing_paper_id = 'sima01computational';
SELECT COUNT(*)  FROM cites  WHERE citing_paper_id = 'schmidt99advanced'  AND cited_paper_id IN (   SELECT paper_id    FROM paper    WHERE class_label = 'word3555' )
SELECT c.class_label FROM cites c JOIN paper p ON c.citing_paper_id = p.paper_id WHERE c.cited_paper_id IN (   SELECT paper_id   FROM content   WHERE word_cited_id = 1163 );
SELECT p.paper_id, COUNT(c.word_cited_id) AS num_words_cited FROM content c JOIN paper p ON c.paper_id = p.paper_id WHERE p.class_label = 'DB' GROUP BY p.paper_id ORDER BY num_words_cited DESC LIMIT 1;
SELECT COUNT(*)  FROM cites  WHERE citing_paper_id = 'butz01algorithmic'  AND cited_paper_id IN (   SELECT paper_id    FROM paper    WHERE class_label = 'ML' )
Error: 第 4159 个样本有 0 个SQL。
SELECT nickname FROM Person WHERE name = 'Dan Castellaneta';
Error: 第 4161 个样本有 0 个SQL。
Error: 第 4162 个样本有 0 个SQL。
SELECT Award.award FROM Award JOIN Credit ON Award.episode_id = Credit.episode_id JOIN Person ON Credit.person = Person.name WHERE Person.nickname = 'Doofus' AND Award.result = 'Winner';
SELECT COUNT(DISTINCT p.name) FROM Person p JOIN Award a ON p.name = a.person JOIN Credit c ON a.episode_id = c.episode_id AND c.category = 'Writer' OR c.category = 'Director' WHERE p.birth_country = 'USA' AND a.year = 2009 AND a.award = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND a.result = 'Nominee';
SELECT c.character  FROM Character_Award ca  JOIN Award a ON ca.award_id = a.award_id  WHERE a.year = 2009 AND a.award_category = 'Outstanding Voice-Over Performance' AND a.result = 'Winner';
SELECT keyword FROM Keyword JOIN Episode ON Keyword.episode_id = Episode.episode_id WHERE Episode.title = 'Lost Verizon';
Error: 第 4167 个样本有 0 个SQL。
Error: 第 4168 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Vote  WHERE episode_id IN (   SELECT episode_id    FROM Episode    WHERE title = 'Lost Verizon'    AND stars = 7 )
SELECT AVG(stars)  FROM Vote  WHERE episode_id IN (SELECT episode_id                       FROM Episode                       WHERE title = 'Lost Verizon')  ORDER BY votes DESC  LIMIT 1;
SELECT title FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Vote   WHERE stars = 10 AND votes > 200 );
SELECT COUNT(*)  FROM simpson_episodes  WHERE air_date LIKE '2009%'    AND EXISTS (SELECT 1 FROM Vote WHERE episode_id = simpson_episodes.episode_id AND stars = 10 AND percent > 15);
SELECT title FROM Episode WHERE episode_id = (   SELECT episode_id   FROM Vote   WHERE stars = 7   ORDER BY votes DESC   LIMIT 1 );
SELECT AVG(stars)  FROM Vote  WHERE episode_id IN (   SELECT episode_id    FROM Episode    WHERE title = 'Lost Verizon' );
SELECT (COUNT(e.episode_id) * 100 / COUNT(DISTINCT e.episode_id)) AS percentage FROM Episode e JOIN Award a ON e.episode_id = a.episode_id WHERE a.award_category = 'Primetime Emmy' AND a.result = 'Nominee' AND e.rating > 7;
SELECT title FROM Episode JOIN Credit ON Episode.episode_id = Credit.episode_id JOIN Person ON Credit.person = Person.name WHERE Person.name = 'Pamela Hayden' AND Credit.role = 'Ruthie';
SELECT Credit.role, Episode.episode, Episode.number_in_series FROM Credit JOIN Episode ON Credit.episode_id = Episode.episode_id JOIN Person ON Credit.person = Person.name WHERE Person.name = 'Matt Groening' AND Episode.title = 'In the Name of the Grandfather';
Error: 第 4178 个样本有 0 个SQL。
SELECT AVG(stars)  FROM Vote  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE title = 'Wedding for Disaster');
Error: 第 4180 个样本有 0 个SQL。
SELECT name, birth_name FROM Person, Credit WHERE Person.name = Credit.person AND Credit.role = 'Helen Lovejoy';
SELECT    e.title,    p.name,    p.role  FROM    Award a    JOIN Episode e ON a.episode_id = e.episode_id    JOIN Credit c ON a.episode_id = c.episode_id    JOIN Person p ON c.person = p.name  WHERE    a.year = 2017    AND a.award_category = 'Jupiter Award'    AND a.award = 'Best International TV Series'    AND a.result = 'Winner'    AND c.credited = ''  ORDER BY    e.title;
Error: 第 4183 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Person  WHERE birth_place = 'New York' AND birth_region = 'USA';
Error: 第 4185 个样本有 0 个SQL。
Error: 第 4186 个样本有 0 个SQL。
SELECT AVG(height_meters) AS average_height FROM Person;
SELECT MAX(votes) - MIN(votes)  FROM Vote;
SELECT P.name  FROM Award A  JOIN Person P ON A.person = P.name  WHERE A.organization = 'Outstanding Voice-Over Performance' AND A.year = 2009;
Error: 第 4190 个样本有 0 个SQL。
SELECT title  FROM Episode  WHERE episode_id IN (   SELECT episode_id    FROM Award    WHERE award = 'Best International TV Series' AND year = 2017 AND result = 'Winner' );
SELECT P.name FROM Person P WHERE P.name NOT IN (   SELECT C.person   FROM Credit C   WHERE C.episode_id IN (     SELECT E.episode_id     FROM Episode E     WHERE E.title = 'How the Test Was Won'   )   AND C.credited != '' )
SELECT title FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Keyword   WHERE keyword IN ('riot', 'cake') );
SELECT episode.title FROM Episode JOIN Vote ON Episode.episode_id = Vote.episode_id WHERE Vote.stars = 10 ORDER BY Vote.votes DESC LIMIT 1;
SELECT p.name FROM Person p JOIN Credit c ON p.name = c.person JOIN Episode e ON c.episode_id = e.episode_id WHERE strftime('%m', e.air_date) BETWEEN '10' AND '11' AND e.number_in_series LIKE '20%';
SELECT P.name FROM Episode E JOIN Credit C ON E.episode_id = C.episode_id JOIN Person P ON C.person = P.name WHERE E.title = 'Treehouse of Horror XIX' AND C.category = 'director';
SELECT COUNT(*)  FROM Credit  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE season = 20 AND episode = 5);
SELECT keyword FROM Keyword WHERE episode_id IN (   SELECT episode_id   FROM Episode   WHERE title = 'Take My Life, Please' );
SELECT      COUNT(episode_id) AS number_of_episodes,     DIVIDE(COUNT(a.award_id), COUNT(e.episode_id)) * 100 AS percentage FROM      Episode e JOIN      Award a ON e.episode_id = a.episode_id WHERE      e.votes > 950     AND a.year = 2009     AND a.result = 'Nominee'     AND a.award = 'Outstanding Voice-Over Performance';
SELECT      (SELECT votes FROM Vote WHERE stars = 5 AND title = 'No Loan Again, Naturally') /      (SELECT votes FROM Vote WHERE stars = 5 AND title = 'Coming to Homerica') AS ratio
SELECT COUNT(*)  FROM Award  WHERE person = 'Ian Maxtone-Graham' AND organization = 'Writers Guild of America, USA' AND result = 'Nominee';
SELECT p.name FROM Person p WHERE p.name IN (   SELECT a.person   FROM Award a   WHERE a.result = 'Nominee'   GROUP BY a.person   ORDER BY COUNT(a.person) DESC   LIMIT 1 ) AND p.name NOT IN (   SELECT a.person   FROM Award a   WHERE a.result = 'Winner' )
SELECT title FROM Episode WHERE rating = (SELECT MIN(rating) FROM Episode);
Error: 第 4204 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Episode e  WHERE NOT EXISTS (   SELECT 1    FROM Credit c    WHERE c.episode_id = e.episode_id AND c.person = (SELECT person FROM Person WHERE name = 'Dell Hake') );
SELECT    SUBSTR(b.birthdate, 0, 5) AS birthdate,   MIN(a.year) AS year,   TO_NUMBER(SUBSTR(b.birthdate, 7, 4)) - TO_NUMBER(SUBSTR(birthdate, 0, 5)) AS age FROM    Person b   JOIN Award a ON b.name = a.person WHERE    a.organization = 'Primetime Emmy Awards'   AND a.award_category = 'Outstanding Voice-Over Performance'   AND a.result = 'Winner'   AND a.year = (SELECT MIN(year) FROM Award)
SELECT c.character FROM Award a JOIN Person p ON a.person = p.name WHERE p.name = 'Dan Castellaneta' AND a.result = 'Winner' AND a.year = 2009 AND a.organization = 'Primetime Emmy Awards' AND a.award = 'Outstanding Voice-Over Performance' JOIN Character_Award ca ON a.award_id = ca.award_id
SELECT COUNT(*)  FROM Award  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE SUBSTR(air_date, 0, 5) = '2009' AND SUBSTR(air_date, 6, 2) = '04');
SELECT birth_place FROM Person WHERE name IN (   SELECT person   FROM Award   WHERE award = 'Best Voice-Over Performance'   AND organization = 'Online Film & Television Association'   AND year = 2009   AND result = 'Winner' )
SELECT COUNT(*)  FROM Vote  WHERE stars = 10 AND episode_id IN (   SELECT episode_id    FROM Episode    ORDER BY rating DESC    LIMIT 4 );
SELECT SUM(stars)  FROM Vote  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE title = 'No Loan Again, Naturally')  AND votes < 50;
Error: 第 4212 个样本有 0 个SQL。
Error: 第 4213 个样本有 0 个SQL。
SELECT p.name  FROM Award a  JOIN Person p ON a.person = p.name  WHERE a.result = 'Winner'  ORDER BY a.year  LIMIT 1;
Error: 第 4215 个样本有 0 个SQL。
Error: 第 4216 个样本有 0 个SQL。
SELECT p.name, p.birth_date FROM Person p WHERE p.birth_place = 'Los Angeles' AND p.height_meters >= 1.8;
SELECT e.episode, e.title, e.rating FROM Episode e WHERE Substr(e.air_date, 0, 5) = '2008' AND Substr(e.air_date, 6, 2) = '10';
SELECT a.award_id, a.award, p.name AS winner FROM Award a JOIN Character_Award ca ON a.award_id = ca.award_id JOIN Person p ON a.person = p.name JOIN Character_Award ca2 ON a.award_id = ca2.award_id WHERE ca.character = 'Homer Simpson 20' AND a.result = 'Winner';
SELECT a.award, a.result, c.category, c.credited FROM Award a JOIN Person p ON a.person = p.name JOIN Credit c ON a.episode_id = c.episode_id WHERE p.name = 'Billy Kimball' AND c.credited = 'true';
SELECT p.name, a.award, o.organization, a.result, c.credited FROM Person p JOIN Credit c ON p.name = c.person JOIN Episode e ON c.episode_id = e.episode_id JOIN Award a ON c.episode_id = a.episode_id JOIN Organization o ON a.organization = o.organization WHERE p.height_meters IS NULL AND e.episode_id = 'S20-E13' AND c.role = 'assistant director' AND c.credited = 'true';
SELECT Person.birth_country, Person.height_meters, Person.name FROM Person WHERE Person.height_meters IS NOT NULL AND Person.name NOT IN (SELECT Credit.person FROM Credit WHERE Credit.category = 'Casting Department');
SELECT    Award.person,    Keyword.keyword,    Award.episode_id FROM    Award   JOIN Award ON Award.result = 'Nominee'   JOIN Episode ON Award.episode_id = Episode.episode_id WHERE    Episode.title = 'The Good, the Sad and the Drugly';
SELECT v.stars, v.percent FROM Vote v JOIN Episode e ON v.episode_id = e.episode_id JOIN Keyword k ON e.episode_id = k.episode_id WHERE k.keyword = 'arab stereotype' AND v.stars = 10;
SELECT      a.award,      e.air_date,      e.rating  FROM      Award a  JOIN      Episode e ON a.episode_id = e.episode_id  WHERE      a.organization = 'Jupiter Award' AND a.result = 'Winner';
SELECT e.episode_id, e.title, k.keyword FROM Episode e JOIN Vote v ON e.episode_id = v.episode_id JOIN Keyword k ON e.episode_id = k.episode_id WHERE v.stars = 1 ORDER BY v.votes DESC LIMIT 3;
SELECT      E.title,      E.episode_image,      A.award,      P.name  FROM      Episode E  JOIN      Award A ON E.episode_id = A.episode_id  JOIN      Person P ON A.person = P.name  WHERE      E.rating BETWEEN 7 AND 10      AND SUBSTRING(E.air_date, 1, 5) = '2008'      AND A.result = 'Nominee';
Error: 第 4228 个样本有 0 个SQL。
SELECT      P.name,      P.birth_country,      C.role,      2022 - SUBSTR(P.birthdate, 0, 5) AS age_in_2022 FROM      Person P JOIN      Credit C ON P.name = C.person WHERE      P.birthdate = (SELECT MIN(birthdate) FROM Person)
SELECT COUNT(c.credited) AS number_of_credits, c.category, c.role, p.birth_place FROM Credit c JOIN Person p ON c.person = p.name WHERE p.birth_country = 'North Korea';
SELECT      p.name AS winner_name,      a.award AS award_name,      e.title AS episode_title,      a.role AS role_in_episode FROM      Award a  JOIN      Person p ON a.person = p.name  JOIN      Episode e ON a.episode_id = e.episode_id  WHERE      a.year = 2010 AND a.result = 'winner' GROUP BY      a.award, e.title, p.name, a.role
SELECT title FROM Episode WHERE (episode_id, stars) IN (   SELECT episode_id, MAX(stars)   FROM Vote   GROUP BY episode_id ) AND (episode_id, votes) IN (   SELECT episode_id, MAX(votes)   FROM Vote   GROUP BY episode_id );
SELECT COUNT(a.award_id) FROM Award a JOIN Person p ON a.person = p.name JOIN Character_Award ca ON a.award_id = ca.award_id WHERE p.name = 'The Simpson 20s' AND a.year = 20 AND a.result = 'Winner';
Error: 第 4234 个样本有 0 个SQL。
SELECT AVG(v.stars) AS average_stars, e.summary FROM Vote v JOIN Episode e ON v.episode_id = e.episode_id WHERE e.episode_id = 'S20-E12';
SELECT P.name FROM Award A JOIN Person P ON A.person = P.name JOIN Character_Award CA ON A.award_id = CA.award_id WHERE A.organization = 'Primetime Emmy Awards' AND A.award = 'Outstanding Voice-Over Performance' AND A.result = 'Winner' AND CA.character = 'Homer simpson 20';
SELECT P.birth_name, C.role FROM Person P JOIN Credit C ON P.name = C.person WHERE P.name = 'Al Jean' AND C.episode_id IN (   SELECT E.episode_id   FROM Episode E   WHERE E.title LIKE '%The simpson 20s%' AND E.season = 20 );
SELECT COUNT(*)  FROM Award  WHERE year = 2010 AND result = 'Nominee' AND person IN      (SELECT name FROM Person WHERE name = 'Billy Kimball')      AND episode_id IN      (SELECT episode_id FROM Episode WHERE season = 20 AND title = 'The Simpsons 20s');
SELECT keyword FROM Keyword WHERE episode_id IN (   SELECT episode_id   FROM Episode   WHERE title = 'Take My Life, Please' );
SELECT a.award, a.award_category FROM Award a WHERE a.result = 'Winner' ORDER BY a.year DESC LIMIT 1;
SELECT AVG(DIVIDE(SUM(CASE WHEN result = 'winner' THEN 1 ELSE 0 END), COUNT(*))) AS average_awards_winning_rate FROM Award WHERE season = 20;
Error: 第 4242 个样本有 0 个SQL。
SELECT episode_id, title, rating FROM Episode WHERE YEAR(air_date) = 2009 ORDER BY rating ASC LIMIT 1;
Error: 第 4244 个样本有 0 个SQL。
SELECT P.* FROM Person P JOIN Credit C ON P.name = C.person JOIN Episode E ON C.episode_id = E.episode_id WHERE P.birthdate = '1957-10-29' AND P.birth_place = 'Chicago' AND P.birth_region = 'Illinois' AND E.season = 20;
SELECT p.name FROM Episode e JOIN Credit c ON e.episode_id = c.episode_id JOIN Person p ON c.person = p.name WHERE e.title = 'The Simpsons 20s' AND e.season = 20 AND c.role = 'producer';
SELECT    CONCAT(name, ' ', birth_name) AS full_name,    SUBTRACT(2009, birthdate) AS age FROM    Person WHERE    role = 'composer'   AND episode_id IN (     SELECT        episode_id     FROM        Award     WHERE        organization = 'Primetime Emmy Awards'       AND year = 2009       AND award = 'Outstanding Music Composition for a Series (Original Dramatic Score)'       AND result = 'Nominee'   );
SELECT E.title FROM Episode E JOIN Award A ON E.episode_id = A.episode_id WHERE E.season = 20 GROUP BY E.title ORDER BY COUNT(A.episode_id) DESC LIMIT 1;
Error: 第 4249 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Person  WHERE birth_country = 'USA';
SELECT P.name FROM Person P WHERE P.birthdate < '1970-01-01'
SELECT name FROM Person WHERE birth_place = 'California' AND birth_country = 'USA' AND birthdate BETWEEN '1958-01-01' AND '1969-12-31';
Error: 第 4253 个样本有 0 个SQL。
SELECT keyword FROM Keyword WHERE episode_id IN (   SELECT episode_id   FROM Episode   WHERE title = 'Double, Double, Boy in Trouble' );
Error: 第 4255 个样本有 0 个SQL。
Error: 第 4256 个样本有 0 个SQL。
SELECT person.name, SUM(Award.result) as total_votes FROM Award JOIN Person on Award.person = Person.name WHERE Award.organization = 'Primetime Emmy' AND Award.award_category = 'Primetime Emmy' GROUP BY person.name ORDER BY total_votes DESC LIMIT 1;
SELECT award_id, episode_id FROM Award WHERE award = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND stars = 10;
SELECT p.name FROM Award a JOIN Credit c ON a.episode_id = c.episode_id JOIN Person p ON c.person = p.name WHERE a.award_category = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND a.result = 'award' AND a.episode_id IN (   SELECT e.episode_id   FROM Episode e   WHERE e.title = 'No Loan Again, Naturally' ) AND c.role = 'director';
Error: 第 4260 个样本有 0 个SQL。
SELECT COUNT(*) FROM Person JOIN Award ON Person.name = Award.person WHERE Award.award_category = 'WGA Award (TV)' AND birth_country = 'USA' AND birthdate BETWEEN '2009-01-01' AND '2010-12-31';
SELECT E.episode_id, E.title FROM Award A JOIN Credit C ON A.episode_id = C.episode_id AND C.role = 'composer' JOIN Episode E ON A.episode_id = E.episode_id WHERE A.award = 'Outstanding Music Composition for a Series (Original Dramatic Score)' AND A.result = 'result'  -- assuming result column exists AND A.votes > 200;
SELECT E.episode_id, E.title FROM Award A JOIN Person P ON A.person = P.name WHERE A.year = 2009 AND A.organization = 'Primetime Emmy Award' AND A.award_category = 'category' AND P.name = 'Al Jean' JOIN Episode E ON A.episode_id = E.episode_id;
SELECT SUM(votes) - SUM(votes) AS more_votes FROM Vote WHERE episode_id = 1 MINUS SELECT SUM(votes) FROM Vote WHERE episode_id = 5;
Error: 第 4265 个样本有 0 个SQL。
SELECT    COUNT(*) AS num_episodes,   (COUNT(*)/(SELECT COUNT(*) FROM Vote)) * 100 AS percentage FROM    Vote WHERE    votes < 100   AND episode_id IN (     SELECT        episode_id      FROM        Award      WHERE        award = 'Outstanding Animated Program (Programming Under One Hour)'   )
SELECT    COUNT(*) as total_americans,    COUNT(CASE WHEN birth_country = 'USA' THEN 1 ELSE NULL END) as americans,    (COUNT(CASE WHEN birth_country = 'USA' THEN 1 ELSE NULL END) / COUNT(award_id)) * 100 as percentage FROM    Person p  JOIN    Award a ON p.name = a.person  WHERE    a.organization = 'Primetime Emmy Award'    AND a.award_category = 'recipients'    AND birth_country = 'USA';
Error: 第 4268 个样本有 0 个SQL。
SELECT COUNT(DISTINCT p.name) FROM Credit c JOIN Person p ON c.person = p.name JOIN Award a ON c.episode_id = a.episode_id WHERE a.result = 'Nominee' AND a.award = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND c.role = 'executive producer';
SELECT name FROM Person WHERE year(birthdate) = 1962 AND birth_region = 'California';
Error: 第 4271 个样本有 0 个SQL。
SELECT COUNT(DISTINCT person)  FROM Award  WHERE award = 'Animation' AND result = 'Nominee';
SELECT *  FROM Episode  WHERE rating BETWEEN 7 AND 10;
SELECT episode_id, title, MAX(votes) as max_votes FROM simpson_episodes.Episode JOIN simpson_episodes.Vote ON simpson_episodes.Episode.episode_id = simpson_episodes.Vote.episode_id GROUP BY episode_id, title ORDER BY max_votes DESC LIMIT 5;
SELECT E.* FROM Episode E JOIN Vote V ON E.episode_id = V.episode_id WHERE V.stars = 1 ORDER BY COUNT(V.votes) DESC LIMIT 3;
SELECT c.character FROM Character_Award ca JOIN Award a ON ca.award_id = a.award_id JOIN Person p ON a.person = p.name WHERE p.name = 'Dan Castellaneta' AND a.award LIKE '%Voice-Over%';
SELECT E.* FROM Episode E WHERE E.air_date LIKE '2008%' AND E.episode_id IN (   SELECT E2.episode_id   FROM Episode E2   WHERE E2.episode_id IN (     SELECT E3.episode_id     FROM Episode E3     WHERE E3.episode_id IN (       SELECT E4.episode_id       FROM Episode E4       WHERE E4.episode_id IN (         SELECT E5.episode_id         FROM Episode E5         WHERE E5.episode_id IN (           SELECT episode_id           FROM Vote           WHERE stars = 10           GROUP BY episode_id           ORDER BY MAX(votes) DESC           LIMIT 1         )       )     )   ) )
Error: 第 4278 个样本有 0 个SQL。
SELECT E.title FROM Episode E JOIN Keyword K ON E.episode_id = K.episode_id WHERE K.keyword = '1930s to 2020s' GROUP BY E.title HAVING COUNT(DISTINCT E.title) > 1;
SELECT E.title FROM Award A JOIN Person P ON A.person = P.name JOIN Episode E ON A.episode_id = E.episode_id WHERE A.year = 2010 AND P.name = 'Joel H. Cohen';
Error: 第 4281 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Vote  WHERE episode_id IN (   SELECT episode_id    FROM Keyword    WHERE keyword = 'reference to the fantastic four' )  AND stars = 10;
SELECT SUM(votes) - SUM(votes) AS difference FROM Vote WHERE episode_id IN (   SELECT episode_id   FROM Episode   WHERE title = 'The Burns and the Bees' ) AND stars = 1 UNION ALL SELECT SUM(votes) AS votes FROM Vote WHERE episode_id IN (   SELECT episode_id   FROM Episode   WHERE title = 'The Burns and the Bees' ) AND stars = 10;
SELECT k.keyword FROM Keyword k JOIN Vote v ON k.episode_id = v.episode_id WHERE v.votes = (SELECT MIN(votes) FROM Vote);
SELECT e.episode_id, e.title FROM Episode e WHERE e.rating > 5 AND e.rating <= 7 AND EXISTS (   SELECT 1   FROM Vote v   WHERE v.episode_id = e.episode_id AND v.stars = 2 AND v.votes > 20 )
SELECT episode_id, votes FROM Vote WHERE votes = (SELECT MAX(votes) FROM Vote);
Error: 第 4287 个样本有 0 个SQL。
Error: 第 4288 个样本有 0 个SQL。
SELECT DISTINCT Credit.role FROM Credit JOIN Person ON Credit.person = Person.name WHERE Person.birth_country != 'USA';
SELECT COUNT(*)  FROM Vote  WHERE stars = 1 AND episode_id IN (   SELECT episode_id    FROM Episode    WHERE rating = (     SELECT MIN(rating)      FROM Episode   ) )
Error: 第 4291 个样本有 0 个SQL。
SELECT summary  FROM Episode  WHERE episode_id IN (   SELECT episode_id    FROM Credit    WHERE person IN (     SELECT name      FROM Person      WHERE name = 'Emily Blunt'   ) );
SELECT p.name FROM Person p JOIN Credit c ON p.name = c.person WHERE p.nickname = 'The Tiny Canadian';
SELECT E.episode_id, E.title, V.percent FROM Episode E JOIN Vote V ON E.episode_id = V.episode_id WHERE E.episode_id IN (   SELECT A.episode_id   FROM Award A   WHERE A.result = 'winner' OR A.result = 'nominee' ) ORDER BY V.percent DESC LIMIT 1;
SELECT p.name, p.nickname, c.role FROM Credit c JOIN Person p ON c.person = p.name WHERE c.episode_id IN (   SELECT e.episode_id   FROM Episode e   WHERE e.title = 'In the Name of the Grandfather' ) AND c.category = 'Cast' AND c.credited = 'true';
Error: 第 4296 个样本有 0 个SQL。
SELECT P.name  FROM Credit C, Person P  WHERE C.episode_id IN (   SELECT E.episode_id    FROM Episode E, Vote V    WHERE E.episode_id = V.episode_id    AND V.stars = 10    AND V.votes = (     SELECT MAX(V2.votes)      FROM Vote V2      WHERE V2.stars = 10   ) )  AND C.person = P.name  AND C.role = 'Writer';
Error: 第 4298 个样本有 0 个SQL。
SELECT p.name, p.birthdate, p.nickname, c.role, e.title FROM Person p JOIN Credit c ON p.name = c.person JOIN Episode e ON c.episode_id = e.episode_id WHERE c.category = 'Music Department';
Error: 第 4300 个样本有 0 个SQL。
SELECT E.title FROM Episode E WHERE E.episode_id IN (   SELECT E2.episode_id   FROM Episode E2   JOIN Vote V ON E2.episode_id = V.episode_id   GROUP BY E2.episode_id   HAVING SUM(CASE WHEN V.stars = 7 THEN 1 ELSE 0 END) > (     SUM(V.votes) / COUNT(V.stars = 7)   ) )
SELECT    DIVIDE(SUM(CASE WHEN A.result = 'Nominee' THEN 1 ELSE 0 END), SUM(A.votes)) AS percentage FROM    Award A WHERE    A.result = 'Nominee';
SELECT name  FROM Person  WHERE nickname IS NOT NULL;
SELECT birth_country FROM Person WHERE height_meters = (SELECT MAX(height_meters) FROM Person);
SELECT AVG(height_meters)  FROM Person  WHERE birth_country = 'USA';
SELECT (COUNT(P.birthdate > '1970-01-01' AND P.birth_region = 'California') / COUNT(P.birthdate)) * 100 AS percentage FROM Person P;
SELECT COUNT(*)  FROM Person  WHERE birth_region != 'Connecticut' AND birth_country != 'USA';
Error: 第 4308 个样本有 0 个SQL。
Error: 第 4309 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Vote  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE rating > 7.0);
Error: 第 4311 个样本有 0 个SQL。
Error: 第 4312 个样本有 0 个SQL。
SELECT COUNT(*) FROM Person WHERE birthdate > '1970-01-01' AND EXISTS (   SELECT 1   FROM Credit   WHERE Credit.person = Person.name   AND Credit.role = 'animation executive producer' );
SELECT E.summary FROM Episode E WHERE E.episode_id NOT IN (     SELECT C.episode_id     FROM Credit C     WHERE C.credited <> '' )
SELECT rating FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Credit   WHERE person = 'Jason Bikowski' );
SELECT AVG(height_meters)  FROM Person p  JOIN Credit c ON p.name = c.person  WHERE c.category = 'Animation Department';
SELECT character FROM Award JOIN Character_Award ON Award.award_id = Character_Award.award_id WHERE Award.organization = 'Primetime Emmy' AND Award.year = 2009;
Error: 第 4318 个样本有 0 个SQL。
SELECT SUM(votes)  FROM Vote  WHERE episode_id IN (   SELECT episode_id    FROM Credit    WHERE person = 'Adam Kuhlman' );
SELECT k.keyword, p.name FROM Keyword k JOIN Credit c ON k.episode_id = c.episode_id JOIN Person p ON c.person = p.name WHERE k.episode_id = (SELECT episode_id FROM Episode WHERE season = 20 AND episode = 1);
SELECT k.keyword FROM Vote v JOIN Episode e ON v.episode_id = e.episode_id WHERE v.stars = 10 AND v.percent > 29 JOIN Keyword k ON v.episode_id = k.episode_id;
Error: 第 4322 个样本有 0 个SQL。
Error: 第 4323 个样本有 0 个SQL。
Error: 第 4324 个样本有 0 个SQL。
Error: 第 4325 个样本有 0 个SQL。
SELECT birth_place FROM Person WHERE role = 'co-executive producer'   AND person IN (     SELECT person     FROM Award     WHERE award = 'Outstanding Animated Program (For Programming Less Than One Hour)'       AND result = 'Nominee'   );
SELECT SUM(votes)  FROM Vote  WHERE episode_id IN (SELECT award_id                       FROM Award                       WHERE award = 'Blimp Award'                         AND result IN ('Winner', 'Nominee')                         AND 1 < stars AND stars < 5);
SELECT SUM(E.rating)  FROM Episode E  JOIN Award A ON E.episode_id = A.episode_id  WHERE A.result = 'Winner' AND (A.award = 'OFTA Television Award' OR A.award = 'WGA Award (TV)');
SELECT    (SUM(percent) / (SELECT SUM(votes) FROM Vote WHERE episode_id IN (SELECT episode_id FROM Episode WHERE title = 'No Loan Again, Naturally')) * 100) AS percent FROM    Vote WHERE    episode_id IN (SELECT episode_id FROM Episode WHERE title = 'No Loan Again, Naturally') AND stars >= 5
SELECT COUNT(*)  FROM Vote  WHERE stars > 8;
SELECT E.episode_id, E.title, V.votes FROM Episode E JOIN Vote V ON E.episode_id = V.episode_id ORDER BY V.votes DESC LIMIT 1;
SELECT COUNT(*)  FROM Episode e  JOIN Keyword k ON e.episode_id = k.episode_id  WHERE k.keyword = '2d animation';
Error: 第 4333 个样本有 0 个SQL。
Error: 第 4334 个样本有 0 个SQL。
Error: 第 4335 个样本有 0 个SQL。
SELECT Person.birth_name FROM Person JOIN Credit ON Person.name = Credit.person WHERE Credit.episode_id IN (   SELECT Episode.episode_id   FROM Episode   JOIN Credit ON Episode.episode_id = Credit.episode_id   WHERE Credit.category = 'Producer' AND Credit.role IN ('co-executive producer', 'executive producer') ) AND Person.height_meters > 1.60;
SELECT (COUNT(CASE WHEN Award.result = 'Nominee' AND Person.birth_country = 'USA' THEN 1 ELSE NULL END) / COUNT(Person.name)) * 100 AS percentage FROM Award JOIN Person ON Award.person = Person.name;
SELECT (COUNT(CASE WHEN a.result = 'Winner' AND p.height_meters > 1.75 THEN 1 END) / COUNT(CASE WHEN a.result = 'Winner' THEN 1 END)) * 100 AS percentage FROM Award a JOIN Person p ON a.person = p.name;
SELECT E.title FROM Episode E, Vote V WHERE E.episode_id = V.episode_id AND V.stars = 2;
SELECT Vote.stars FROM Episode JOIN Vote ON Episode.episode_id = Vote.episode_id WHERE Episode.title = 'How the Test Was Won';
SELECT COUNT(*) FROM simpson_episodes.Episode WHERE rating > 5 AND air_date LIKE '2008%';
SELECT ca.character  FROM Character_Award ca  JOIN Award a ON ca.award_id = a.award_id  WHERE a.year = 2009;
Error: 第 4343 个样本有 0 个SQL。
SELECT award_category FROM Award JOIN Character_Award ON Award.award_id = Character_Award.award_id WHERE character = 'Lenny';
SELECT p.name FROM Person p JOIN Credit c ON p.name = c.person JOIN Character_Award ca ON c.episode_id = ca.episode_id WHERE c.role = 'Smithers';
SELECT keyword FROM Keyword WHERE episode_id IN (   SELECT episode_id   FROM Episode   WHERE title = 'Dangerous Curves' );
SELECT keyword FROM Keyword WHERE episode_id IN (   SELECT episode_id   FROM Episode   WHERE air_date LIKE '2008%' )
SELECT COUNT(*)  FROM Episode  WHERE air_date LIKE '2009%' AND EXISTS (   SELECT 1    FROM Vote    WHERE episode_id = Episode.episode_id AND stars < 8 );
Error: 第 4349 个样本有 0 个SQL。
SELECT COUNT(*) FROM Award WHERE person IN (SELECT name FROM Person WHERE nickname = 'Simpson') AND year = 2009 AND result = 'Winner';
Error: 第 4351 个样本有 0 个SQL。
SELECT name  FROM Person  WHERE birth_region = 'California' AND birth_country = 'USA';
Error: 第 4353 个样本有 0 个SQL。
SELECT episode_id FROM Vote WHERE stars = 2 AND votes = 9;
SELECT title FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Award   WHERE organization = 'Primetime Emmy Awards' AND year = 2009 AND result = 'Winner' )
SELECT episode_id FROM Episode WHERE air_date LIKE '2008%' AND stars < 5;
SELECT category FROM Credit WHERE person = 'Carlton Batten' AND episode_id IN (   SELECT episode_id   FROM Vote   WHERE votes = (     SELECT MAX(votes)     FROM Vote   ) );
SELECT percent FROM Vote WHERE episode_id IN (SELECT episode_id FROM Episode WHERE air_date LIKE '2008%') AND votes BETWEEN 920 AND 950;
Error: 第 4359 个样本有 0 个SQL。
SELECT COUNT(*) FROM Vote WHERE episode_id IN (   SELECT award_id   FROM Award   WHERE organization = 'Annie Awards' AND result = 'Nominee' ) AND percent > 6;
Error: 第 4361 个样本有 0 个SQL。
Error: 第 4362 个样本有 0 个SQL。
Error: 第 4363 个样本有 0 个SQL。
SELECT title FROM Episode WHERE episode_id IN (   SELECT episode_id   FROM Award   WHERE award_category = 'Prism Award'   AND result = 'Nominee'   AND EXISTS (     SELECT 1     FROM Vote     WHERE episode_id = Award.episode_id     AND stars = 5   )   AND air_date = '2009-04-19' )
SELECT c.category  FROM Award a  JOIN Character_Award ca ON a.award_id = ca.award_id  JOIN Credit c ON a.episode_id = c.episode_id  WHERE a.result = 'Nominee'  AND a.episode_id IN (SELECT episode_id FROM Vote ORDER BY votes DESC LIMIT 1);
SELECT COUNT(*)  FROM Credit  WHERE episode_id IN (SELECT episode_id FROM Episode WHERE air_date LIKE '2009%')  AND person = 'Sam Im'  AND credited = 'true'  AND role = 'additional timer';
SELECT E.title FROM Episode E, Vote V WHERE E.episode_id = V.episode_id AND V.stars > (SELECT AVG(V2.stars) * 0.7 FROM Vote V2);
SELECT (COUNT(a.result = 'Nominee') / COUNT(a.result)) * 100 FROM Award a JOIN Episode e ON a.episode_id = e.episode_id WHERE a.year = 2009 AND e.title = 'Gone Maggie Gone' AND a.result = 'Nominee';
SELECT COUNT(*) FROM enrolled WHERE month = 0;
SELECT MAX(month)  FROM longest_absense_from_school;
SELECT COUNT(*) FROM enlist, enrolled WHERE enlist.name = enrolled.name AND enlist.organ = 'navy';
SELECT COUNT(male.name) FROM male JOIN longest_absense_from_school ON male.name = longest_absense_from_school.name WHERE longest_absense_from_school.month >= 5;
SELECT p.name  FROM male m  JOIN enlist e ON m.name = e.name  WHERE e.organ = 'navy';
Error: 第 4374 个样本有 0 个SQL。
SELECT COUNT(*)  FROM no_payment_due  WHERE name IN (SELECT name FROM enlist WHERE organ = 'navy') AND bool = 'pos';
SELECT name FROM male, disabled, filed_for_bankrupcy WHERE male.name = disabled.name AND male.name = filed_for_bankrupcy.name;
SELECT COUNT(*) FROM disabled WHERE name IN (SELECT name FROM male);
SELECT COUNT(*)  FROM student_loan  WHERE name IN (SELECT name FROM unemployed)    AND name IN (SELECT name FROM no_payment_due);
SELECT MAX(month)  FROM enrolled, enlist  WHERE enrolled.name = enlist.name AND enlist.organ = 'navy';
SELECT COUNT(*) FROM disabled d JOIN longest_absense_from_school las ON d.name = las.name WHERE las.month = 0;
Error: 第 4381 个样本有 0 个SQL。
SELECT organ, COUNT(name) AS most_disabled FROM disabled JOIN enlist ON disabled.name = enlist.name GROUP BY organ ORDER BY most_disabled DESC LIMIT 1;
SELECT name FROM male WHERE name IN (SELECT name FROM filed_for_bankrupcy);
SELECT (COUNT(m.name) / COUNT(e.name)) * 100 AS percentage FROM enrolled e JOIN enlist m ON e.name = m.name WHERE m.organ = 'navy'
SELECT AVG(SUM(longest_absense_from_school.month)) / COUNT(disabled.name) AS average_time FROM disabled JOIN longest_absense_from_school ON disabled.name = longest_absense_from_school.name;
Error: 第 4386 个样本有 0 个SQL。
SELECT *  FROM no_payment_due  WHERE name = 'student348' AND bool = 'pos';
SELECT school FROM enrolled WHERE name = 'student829';
SELECT COUNT(DISTINCT month)  FROM longest_absense_from_school  WHERE name = 'student217';
Error: 第 4390 个样本有 0 个SQL。
Error: 第 4391 个样本有 0 个SQL。
SELECT * FROM disabled JOIN enrolled ON disabled.name = enrolled.name WHERE disabled.name = 'student281';
SELECT e.name, e.school FROM enrolled e JOIN enlist ee ON e.name = ee.name WHERE ee.organ = 'air_force';
SELECT * FROM person WHERE name NOT IN (SELECT name FROM male) AND name NOT IN (SELECT name FROM no_payment_due WHERE bool != 'neg');
SELECT e.name, e.organ FROM enrolled e JOIN no_payment_due npd ON e.name = npd.name AND npd.bool = 'pos' JOIN bool b ON e.name = b.name AND b.bool = 'pos';
SELECT name FROM disabled WHERE name IN (SELECT name FROM enrolled WHERE school = 'smc');
SELECT * FROM filed_for_bankrupcy WHERE name IN (   SELECT name   FROM enlist   WHERE organ = 'foreign_legion' );
Error: 第 4398 个样本有 0 个SQL。
Error: 第 4399 个样本有 0 个SQL。
SELECT COUNT(*)  FROM enrolled, unemployed  WHERE enrolled.name = unemployed.name  AND enrolled.school = 'smc';
SELECT COUNT(*)  FROM unemployed, longest_absense_from_school  WHERE unemployed.name = longest_absense_from_school.name AND longest_absense_from_school.month = 6;
SELECT COUNT(*)  FROM enrolled  WHERE name IN (SELECT name FROM enlist WHERE organ = 'peace_corps')  AND school = 'ucsd';
SELECT e.organ, l.month FROM enrolled e JOIN longest_absense_from_school l ON e.name = l.name WHERE e.name = 'Student21';
SELECT      (COUNT(no_payment_due.name) FILTER (WHERE no_payment_due.bool = 'pos') /       COUNT(DISTINCT bool.name)) * 100 AS percentage FROM      bool     JOIN no_payment_due ON bool.name = no_payment_due.name     JOIN enlist ON bool.name = enlist.name WHERE      enlist.organ = 'foreign_legion'     AND no_payment_due.bool = 'pos';
SELECT      ROUND((COUNT(e.name) / COUNT(en.name)) * 100, 2) AS percentage FROM      enlist e     JOIN enrolled en ON e.name = en.name WHERE      e.organ = 'navy' AND en.school = 'OCC';
SELECT name FROM longest_absense_from_school WHERE month = (SELECT MAX(month) FROM longest_absense_from_school);
SELECT COUNT(DISTINCT name)  FROM person;
SELECT MAX(month) AS longest_absense_duration FROM longest_absense_from_school;
SELECT COUNT(*) FROM longest_absense_from_school WHERE month = 4;
SELECT COUNT(*) FROM unemployed WHERE name IN (SELECT name FROM filed_for_bankrupcy);
SELECT d.name, e.organ  FROM disabled d  JOIN enlist e ON d.name = e.name  WHERE d.name IN (SELECT name FROM disabled);
SELECT COUNT(*) FROM unemployed WHERE name IN (SELECT name FROM filed_for_bankrupcy) AND name IN (SELECT name FROM no_payment_due WHERE bool = 'pos');
SELECT 'yes' FROM disabled WHERE name = (SELECT name FROM person WHERE name = '124') INTERSECT SELECT 'yes' FROM male WHERE name = (SELECT name FROM person WHERE name = '124');
SELECT    CASE WHEN EXISTS (SELECT 1 FROM male WHERE name = 'student180') THEN 'male' ELSE 'female' END AS gender,   CASE WHEN EXISTS (SELECT 1 FROM disabled WHERE name = 'student180') THEN 'disabled' ELSE 'abled' END AS disability,   CASE WHEN EXISTS (SELECT 1 FROM filed_for_bankrupcy WHERE name = 'student180') THEN 'filed_for_bankrupcy' ELSE 'not_filed_for_bankrupcy' END AS employment,   (CASE WHEN EXISTS (SELECT 1 FROM no_payment_due WHERE name = 'student180' AND bool = 'pos') THEN 'has_payment_due' ELSE 'doesnt_have_payment_due' END) AS school_debt_status UNION ALL SELECT    CASE WHEN EXISTS (SELECT 1 FROM male WHERE name = 'student117') THEN 'male' ELSE 'female' END AS gender,   CASE WHEN EXISTS (SELECT 1 FROM disabled WHERE name = 'student117') THEN 'disabled' ELSE 'abled' END AS disability,   CASE WHEN EXISTS (SELECT 1 FROM filed_for_bankrupcy WHERE name = 'student117') THEN 'filed_for_bankrupcy' ELSE 'not_filed_for_bankrupcy' END AS employment,   (CASE WHEN EXISTS (SELECT 1 FROM no_payment_due WHERE name = 'student117' AND bool = 'pos') THEN 'has_payment_due' ELSE 'doesnt_have_payment_due' END) AS school_debt_status;
SELECT COUNT(*) FROM enlisted, person WHERE enlisted.name = person.name AND person.name IN (SELECT name FROM male) AND enlisted.organ IN ('marines', 'air_force');
SELECT e.organ AS "Organization Joined", e.school AS "School Enrolled" FROM enrolled e WHERE e.name IN ('student27', 'student17', 'student101');
SELECT DIVIDE(COUNT(name), COUNT(name FROM male))  FROM person p  WHERE NOT EXISTS (SELECT 1 FROM male m WHERE p.name = m.name)  AND EXISTS (SELECT 1 FROM disabled d WHERE p.name = d.name)
SELECT COUNT(*) FROM enrolled WHERE name NOT IN (SELECT name FROM male) AND name NOT IN (SELECT name FROM enlist WHERE organ IS NOT NULL);
SELECT f.name FROM filed_for_bankrupcy f JOIN no_payment_due npd ON f.name = npd.name WHERE npd.bool = 'neg';
SELECT AVG(SUM(month)) / COUNT(name) AS average_absence_period FROM longest_absense_from_school;
SELECT AVG(DIVIDE(SUM(enrolled.month), COUNT(enrolled.name)))  FROM enrolled, unemployed  WHERE enrolled.name = unemployed.name AND unemployed.name NOT IN (SELECT name FROM no_payment_due WHERE bool = 'True');
SELECT AVG(month)  FROM longest_absense_from_school, disabled  WHERE longest_absense_from_school.name = disabled.name;
SELECT organ FROM enlist WHERE name = '313';
Error: 第 4424 个样本有 0 个SQL。
SELECT COUNT(*) FROM enrolled WHERE month = 0;
SELECT COUNT(*) FROM longest_absense_from_school WHERE month > 2;
SELECT COUNT(*) FROM no_payment_due WHERE bool = 'neg';
SELECT COUNT(*) FROM no_payment_due WHERE bool = 'pos';
SELECT d.name  FROM disabled d LEFT JOIN longest_absense_from_school las ON d.name = las.name WHERE las.month IS NULL OR las.month = 0;
SELECT COUNT(*)  FROM unemployed u  JOIN enrolled e ON u.name = e.name  JOIN enlist e2 ON e.name = e2.name  WHERE e2.organ = 'navy';
Error: 第 4431 个样本有 0 个SQL。
Error: 第 4432 个样本有 0 个SQL。
SELECT d.name FROM disabled d JOIN longest_absense_from_school las ON d.name = las.name WHERE las.month = (SELECT MAX(month) FROM longest_absense_from_school);
SELECT name  FROM unemployed  WHERE name IN (SELECT name FROM enlist WHERE organ = 'marines');
SELECT AVG(DIVIDE(SUM(month), COUNT(name)))  FROM longest_absense_from_school  JOIN disabled ON longest_absense_from_school.name = disabled.name;
SELECT      DIVIDE(COUNT(unemployed.name), COUNT(enrolled.name)) * 100 AS percentage FROM      unemployed JOIN      enrolled ON unemployed.name = enrolled.name WHERE      enrolled.month = (SELECT MAX(month) FROM longest_absense_from_school);
Error: 第 4437 个样本有 0 个SQL。
SELECT p.name FROM person p JOIN longest_absense_from_school las ON p.name = las.name JOIN enrolled e ON p.name = e.name WHERE p.name IN (SELECT u.name FROM unemployed u) ORDER BY las.month DESC LIMIT 1;
SELECT name FROM unemployed WHERE name NOT IN (SELECT name FROM longest_absense_from_school WHERE month != 0);
SELECT COUNT(*)  FROM longest_absense_from_school AS las, disabled AS d  WHERE las.name = d.name AND las.month = 3;
SELECT name  FROM filed_for_bankrupcy  WHERE name IN (SELECT name FROM enrolled WHERE month = 0);
SELECT DISTINCT p.name  FROM person p  JOIN filed_for_bankrupcy f ON p.name = f.name  JOIN longest_absense_from_school las ON p.name = las.name  WHERE las.month = (SELECT MAX(month) FROM longest_absense_from_school);
SELECT 'Male' AS gender WHERE NOT EXISTS (SELECT 1 FROM male WHERE name = 'student1000') UNION ALL SELECT 'Female' AS gender WHERE EXISTS (SELECT 1 FROM male WHERE name = 'student1000');
Error: 第 4444 个样本有 0 个SQL。
SELECT COUNT(*) FROM enrolled e JOIN longest_absense_from_school las ON e.name = las.name WHERE las.month > 6;
SELECT name, MAX(month) as max_absent FROM longest_absense_from_school GROUP BY name ORDER BY max_absent DESC;
Error: 第 4447 个样本有 0 个SQL。
SELECT    AVG(DIVIDE(SUM(month), COUNT(name))) AS average_absence FROM    longest_absense_from_school;
SELECT COUNT(*)  FROM enlist, enrolled  WHERE enlist.name = enrolled.name AND enroll.school IN ('foreign_legion', 'peace_corps', 'army');
Error: 第 4450 个样本有 0 个SQL。
Error: 第 4451 个样本有 0 个SQL。
SELECT e.name  FROM enrolled e  WHERE e.name NOT IN (SELECT l.name FROM longest_absense_from_school l WHERE l.month > 0)  AND e.name NOT IN (SELECT p.name FROM person p WHERE NOT EXISTS (SELECT 1 FROM male m WHERE m.name = p.name));
SELECT school FROM enrolled JOIN disabled ON enrolled.name = disabled.name GROUP BY school ORDER BY COUNT(disabled.name) DESC LIMIT 1;
Error: 第 4454 个样本有 0 个SQL。
SELECT COUNT(*) FROM enrolled e JOIN enlist o ON e.name = o.name WHERE e.name IN (SELECT name FROM male) GROUP BY e.name HAVING COUNT(o.organ) > 1;
SELECT * FROM disabled JOIN enlist ON disabled.name = enlist.name WHERE enlist.organ = 'navy';
Error: 第 4457 个样本有 0 个SQL。
Error: 第 4458 个样本有 0 个SQL。
SELECT DIVIDE(COUNT(name) FROM unemployed, COUNT(name) FROM disabled) AS ratio
SELECT (COUNT(m.name) / COUNT(e.name)) * 100 AS percentage FROM male m JOIN enlisted e ON m.name = e.name WHERE e.school = 'fire_department';
SELECT COUNT(*) FROM longest_absense_from_school WHERE month = 5;
SELECT COUNT(*)  FROM enlist  WHERE organ = 'army';
Error: 第 4463 个样本有 0 个SQL。
SELECT e.name FROM enrolled e JOIN longest_absense_from_school la ON e.name = la.name WHERE la.month = (SELECT MAX(month) FROM longest_absense_from_school) LIMIT 5;
SELECT COUNT(*)  FROM enlist  WHERE COUNT(organ) >= 2;
Error: 第 4466 个样本有 0 个SQL。
Error: 第 4467 个样本有 0 个SQL。
SELECT COUNT(*) FROM enrolled WHERE name IN (SELECT name FROM enlist WHERE organ = 'peace_corps') AND school = 'ucsd';
SELECT COUNT(*)  FROM no_payment_due  WHERE name IN (SELECT name FROM unemployed) AND bool = 'neg';
Error: 第 4470 个样本有 0 个SQL。
SELECT COUNT(*) FROM enrolled e JOIN person p ON e.name = p.name JOIN unemployed u ON p.name = u.name WHERE e.month = 0;
SELECT * FROM enrolled e JOIN enlist ee ON e.name = ee.name WHERE ee.organ = 'fire_department' AND e.name IN (   SELECT n.name   FROM no_payment_due n   WHERE n.bool = 'neg' );
SELECT COUNT(*) FROM enrolled WHERE name NOT IN (SELECT name FROM male) AND organ = 'navy';
SELECT COUNT(*)  FROM enrolled e  JOIN enlist o ON e.name = o.name AND o.organ = 'army'  JOIN unemployed u ON e.name = u.name;
Error: 第 4475 个样本有 0 个SQL。
SELECT * FROM enrolled JOIN no_payment_due ON enrolled.name = no_payment_due.name WHERE no_payment_due.bool = 'pos' AND enrolled.name IN (   SELECT name   FROM enlist   WHERE organ = 'Peace Corps' );
SELECT COUNT(*)  FROM disabled  WHERE name NOT IN (SELECT name FROM male);
Error: 第 4478 个样本有 0 个SQL。
SELECT DIVIDE(COUNT(d.name), COUNT(m.name))  FROM disabled d  WHERE d.name NOT IN (SELECT name FROM male)    AND d.name IN (SELECT name FROM enlist WHERE organ = 'Foreign Legion');
SELECT    CONCAT(MULTIPLY(DIVIDE(COUNT(e.name), COUNT(m.name)), '%')) AS ratio FROM    enlist e   LEFT JOIN male m ON e.name = m.name WHERE    e.organ = 'fire_department';
SELECT COUNT(*) FROM enlist WHERE organ = 'navy';
SELECT CONCAT(DIVIDE(MULTIPLY(COUNT(enrolled.name WHERE enrolled.month = 0), 100), COUNT(enrolled.name)), '%') AS percentage
SELECT DIVIDE(COUNT(n.name), COUNT(no_payment_due.name WHERE no_payment_due.bool = 'pos')) AS ratio FROM no_payment_due n JOIN bool b ON n.name = b.name;
SELECT e.name, e.school FROM enrolled e WHERE e.month = 15;
SELECT DIVIDE(FLOOR(COUNT(enlist.name), COUNT(DISTINCT enlist.organ)), 1) AS average_enlisted_students_per_organization FROM enroll, enlist;
SELECT school, month FROM enrolled WHERE name = 'student214';
SELECT CONCAT(DIVIDE(MULTIPLY(COUNT(disabled.name), 100), COUNT(p.name)),'%') AS percentage FROM disabled JOIN person p ON disabled.name = p.name;
Error: 第 4488 个样本有 0 个SQL。
SELECT person.name FROM person WHERE person.name NOT IN (SELECT filed_for_bankrupcy.name FROM filed_for_bankrupcy);
SELECT e.name  FROM enlisted e  WHERE e.name NOT IN (SELECT m.name FROM male m)  AND e.organ = 'air_force';
SELECT COUNT(DISTINCT person.name) FROM person LEFT JOIN disabled ON person.name = disabled.name WHERE disabled.name IS NULL;
SELECT    CASE      WHEN EXISTS (SELECT 1 FROM male WHERE name = 'student995')      THEN 'male'      ELSE 'female'    END AS gender,   e.name, e.school, e.month FROM    enrolled e WHERE    e.name = 'student995';
SELECT d.name  FROM disabled d  JOIN unemployed u ON d.name = u.name  LIMIT 5;
SELECT COUNT(*) FROM unemployed WHERE name IN (SELECT name FROM filed_for_bankrupcy);
SELECT b.name, e.organ  FROM longest_absense_from_school l  JOIN enlist e ON l.name = e.name  JOIN bool b ON l.name = b.name  WHERE l.month = 4  LIMIT 5;
SELECT COUNT(*)  FROM no_payment_due  WHERE bool = 'pos' AND name IN (SELECT name FROM unemployed);
SELECT e.organ, n.bool FROM enrolled e JOIN person p ON e.name = p.name WHERE p.name = 'student160' JOIN no_payment_due n ON e.name = n.name;
SELECT m.name FROM male m JOIN enlist e ON m.name = e.name WHERE e.organ = 'foreign_legion' LIMIT 10;
SELECT CONCAT(DIVIDE(MULTIPLY(COUNT(p.name), 100), COUNT(m.name)),'%') AS percentage FROM person p LEFT JOIN male m ON p.name = m.name;
Error: 第 4500 个样本有 0 个SQL。
Error: 第 4501 个样本有 0 个SQL。
SELECT COUNT(*)  FROM enlist  WHERE organ = 'air_force';
Error: 第 4503 个样本有 0 个SQL。
SELECT COUNT(*)  FROM disabled  WHERE name IN (SELECT name FROM male)  AND name IN (SELECT name FROM enlist);
SELECT e.school, COUNT(DISTINCT d.name) AS disabled_students FROM enrolled e JOIN person p ON e.name = p.name JOIN disabled d ON p.name = d.name GROUP BY e.school;
SELECT    m.organ AS organization,    COUNT(m.name) AS male,    COUNT(e.name) AS female FROM    male m   LEFT JOIN enlist e ON m.name != e.name GROUP BY    m.organ
SELECT e.name FROM enrolled e JOIN enlist f ON e.name = f.name GROUP BY e.name HAVING COUNT(e.school) = 2 AND COUNT(f.organ) = 2;
SELECT CONCAT(DIVIDE(MULTIPLY(SUBTRACT(COUNT(name), COUNT(name WHERE month = 0)), 100), COUNT(name WHERE month = 0)), '%') FROM longest_absense_from_school;
SELECT school, COUNT(*) as total_students FROM enrolled GROUP BY school ORDER BY total_students DESC LIMIT 1;  SELECT COUNT(*) as filed_for_bankruptcy FROM filed_for_bankrupcy WHERE name IN (   SELECT name   FROM enrolled   WHERE school = (     SELECT school     FROM enrolled     GROUP BY school     ORDER BY COUNT(*) DESC     LIMIT 1   ) );
SELECT COUNT(*) FROM disabled WHERE name IN (SELECT name FROM unemployed)
SELECT p.name  FROM enrolled e  JOIN person p ON e.name = p.name  JOIN enlist ee ON e.name = ee.name  WHERE e.school = 'occ' AND ee.organ = 'fire_department';
SELECT m.name FROM male m JOIN unemployed u ON m.name = u.name JOIN disabled d ON u.name = d.name JOIN longest_absense_from_school las ON d.name = las.name WHERE las.month = 5;
SELECT e.name  FROM enrolled e  WHERE e.name NOT IN (SELECT m.name FROM male m)  AND e.school IN ('occ', 'ulca');
SELECT school, organ FROM enrolled WHERE name = 'student211';
SELECT    COUNT(f.name) - COUNT(fp.name) AS difference FROM    filed_for_bankrupcy f   LEFT JOIN male m ON f.name = m.name   LEFT JOIN person p ON f.name = p.name WHERE    p.name NOT IN (SELECT name FROM male)
SELECT DIVIDE(SUM(enrolled.month), COUNT(DISTINCT male.name)) AS average FROM enrolled JOIN male ON enrolled.name = male.name JOIN unemployed ON male.name = unemployed.name;
SELECT    MULTIPLY(DIVIDE(SUBTRACT(COUNT(l.name), COUNT(l2.name)), COUNT(l.name)), 100) AS difference FROM    longest_absense_from_school l   LEFT JOIN disabled d ON l.name = d.name   LEFT JOIN longest_absense_from_school l2 ON l2.name NOT IN (SELECT name FROM disabled) WHERE    l.name IS NOT NULL   AND l2.name IS NOT NULL;
SELECT AVG(DIVIDE(SUM(longest_absense_from_school.month), COUNT(longest_absense_from_school.month))) FROM disabled INNER JOIN male ON disabled.name = male.name WHERE disabled.name IN (SELECT name FROM male);
SELECT CONCAT(DIVIDE(MULTIPLY(COUNT(unemployed.name WHERE month = 0), 100), COUNT(month)), '%') AS ratio FROM enrolled WHERE name IN (SELECT name FROM unemployed WHERE month = 0)
SELECT COUNT(*) FROM male WHERE name IN (SELECT name FROM no_payment_due WHERE bool = 'neg');
SELECT COUNT(*) FROM no_payment_due WHERE name IN (SELECT name FROM filed_for_bankrupcy) AND bool = 'pos';
SELECT bool FROM no_payment_due WHERE name = 'student124';
SELECT COUNT(*) FROM disabled WHERE name IN (SELECT name FROM no_payment_due WHERE bool = 'pos');
SELECT s.name FROM enrolled s JOIN longest_absense_from_school l ON s.name = l.name JOIN no_payment_due np ON s.name = np.name WHERE l.month = (SELECT MAX(month) FROM longest_absense_from_school) AND np.bool = 'neg';
Error: 第 4525 个样本有 0 个SQL。
Error: 第 4526 个样本有 0 个SQL。
SELECT COUNT(*)  FROM enrolled e  JOIN enlist ee ON e.name = ee.name  WHERE e.month = (SELECT MAX(month) FROM enrolled)  AND ee.organ = 'peace_corps';
SELECT COUNT(*)  FROM filed_for_bankrupcy, enlist  WHERE filed_for_bankrupcy.name = enlist.name  AND enlist.organ = 'navy';
SELECT COUNT(*)  FROM enrolled, enlist, no_payment_due  WHERE enrolled.name = enlist.name AND        enlist.name = no_payment_due.name AND        enlist.organ = 'marines' AND        no_payment_due.bool = 'pos';
SELECT    MULTIPLY(DIVIDE(SUM(longest_absense_from_school.month = 0), COUNT(disabled.name)), 100) AS ratio FROM    disabled   LEFT JOIN longest_absense_from_school ON disabled.name = longest_absense_from_school.name WHERE    longest_absense_from_school.month IS NULL OR longest_absense_from_school.month = 0;
SELECT COUNT(*)  FROM enlist  WHERE organ = 'air_force';
SELECT COUNT(*) FROM longest_absense_from_school WHERE month < 4;
SELECT COUNT(*) FROM enrolled WHERE name IN (   SELECT name   FROM enlist   WHERE organ = 'marines' ) AND name NOT IN (   SELECT name   FROM male );
SELECT DIVIDE(SUM(month), COUNT(l.name))  FROM longest_absense_from_school l  WHERE l.name NOT IN (SELECT name FROM male);
SELECT filed_for_bankrupcy.name FROM filed_for_bankrupcy WHERE filed_for_bankrupcy.name NOT IN (   SELECT male.name   FROM male )
SELECT bool FROM no_payment_due WHERE name = 'student299';
SELECT COUNT(*) FROM enlist, person WHERE enlist.name = person.name AND enlist.organ = 'air_force';
Error: 第 4538 个样本有 0 个SQL。
SELECT b.name FROM bool b JOIN enlist e ON b.name = e.name WHERE e.organ = 'fire_department';
SELECT COUNT(*)  FROM disabled  WHERE name IN (SELECT name FROM no_payment_due WHERE bool = 'pos');
SELECT COUNT(*) FROM enrolled WHERE name IN (   SELECT name   FROM filed_for_bankrupcy ) AND school = 'occ';
Error: 第 4542 个样本有 0 个SQL。
SELECT d.name  FROM disabled d  JOIN enlist e ON d.name = e.name  WHERE e.organ = 'navy';
SELECT m.name  FROM male m, no_payment_due npd, bool b  WHERE m.name = npd.name AND npd.bool = b.name AND b.bool = 'pos';
SELECT    CASE      WHEN EXISTS (SELECT 1 FROM unemployed WHERE name = 'student110') THEN 'unemployed'     ELSE 'employed'   END AS employment_status,   (SELECT bool FROM no_payment_due WHERE name = 'student110') AS payment_status
SELECT MULTIPLY(DIVIDE(COUNT(male.name), COUNT(person.name)), 100) AS percentage
SELECT e.school,         CASE WHEN m.name IS NOT NULL THEN 'male' ELSE 'female' END AS gender FROM enrolled e LEFT JOIN male m ON e.name = m.name WHERE e.name = 'student34';
SELECT MAX(month)  FROM longest_absense_from_school ls  JOIN enlist e ON ls.name = e.name  WHERE e.organ = 'fire_department';
SELECT COUNT(*)  FROM enrolled  WHERE name IN (SELECT name FROM longest_absense_from_school WHERE month = 1)  AND organ = 'air_force';
SELECT name FROM disabled WHERE name IN (SELECT name FROM male) AND name IN (SELECT name FROM unemployed);
SELECT COUNT(*)  FROM male, enrolled  WHERE male.name = enrolled.name AND enrolled.school = 'occ';
SELECT MULTIPLY(DIVIDE(COUNT(male.name), COUNT(person.name)), 100)  FROM male, person  WHERE male.name = person.name  AND male.name IN (SELECT name FROM enlisted WHERE school = 'ucla' AND organ = 'air_force');
SELECT DIVIDE(SUM(disabled.name), COUNT(enrolled.name)) FROM disabled, enrolled WHERE disabled.name NOT IN (SELECT name FROM male) AND enrolled.name = disabled.name AND enrolled.school = 'uci';
Error: 第 4554 个样本有 0 个SQL。
SELECT name  FROM enlist  WHERE organ = 'marines';
Error: 第 4556 个样本有 0 个SQL。
SELECT e.name FROM enrolled e JOIN longest_absense_from_school la ON e.name = la.name GROUP BY e.name ORDER BY la.month DESC LIMIT 1;
SELECT organ FROM enlist GROUP BY organ ORDER BY COUNT(organ) DESC LIMIT 1;
SELECT COUNT(*)  FROM longest_absense_from_school  WHERE month <= 3;
SELECT COUNT(*) FROM no_payment_due WHERE bool = 'pos'   AND name IN (SELECT name FROM unemployed);
Error: 第 4561 个样本有 0 个SQL。
SELECT enlist.organ FROM enlist WHERE enlist.name IN (SELECT male.name FROM male) GROUP BY enlist.organ ORDER BY COUNT(male.name) ASC LIMIT 1;
Error: 第 4563 个样本有 0 个SQL。
SELECT COUNT(*)  FROM unemployed u  JOIN disabled d ON u.name = d.name;
Error: 第 4565 个样本有 0 个SQL。
Error: 第 4566 个样本有 0 个SQL。
SELECT COUNT(*) FROM disabled WHERE name IN (   SELECT name   FROM filed_for_bankrupcy )
SELECT MAX(COUNT(month))  FROM enrolled, enlist  WHERE enrolled.name = enlist.name AND enlist.organ = 'air_force';
Error: 第 4569 个样本有 0 个SQL。
SELECT COUNT(*)  FROM enrolled AS e  JOIN disabled AS d ON e.name = d.name  WHERE e.month = 0 AND e.name NOT IN (SELECT name FROM unemployed);
SELECT enlist.organ,         COUNT(male.name) AS total_male_students,         COUNT(person.name) AS total_students,         DIVIDE(COUNT(male.name), COUNT(person.name), 1.0) AS percentage FROM male JOIN person ON male.name = person.name JOIN enlisted ON male.name = enlisted.name GROUP BY enlist.organ ORDER BY COUNT(male.name) DESC LIMIT 1;
SELECT COUNT(*)  FROM Answer  WHERE AnswerText = 'No' AND QuestionID = 19;
SELECT      YEAR(Survey.Description) AS Year,      COUNT(DISTINCT UserID) AS NumUsers FROM      Survey JOIN      Answer ON Survey.SurveyID = Answer.SurveyID JOIN      Question ON Answer.QuestionID = Question.QuestionID WHERE      Survey.SurveyID BETWEEN 2016 AND 2019     AND Question.QuestionID = 13 GROUP BY      YEAR(Survey.Description)
SELECT COUNT(DISTINCT UserID)  FROM Answer  WHERE AnswerText BETWEEN 27 AND 35  AND QuestionID = 1  AND SurveyID IN (SELECT SurveyID FROM Survey WHERE Description LIKE '%2018%');
SELECT COUNT(DISTINCT UserID) FROM Answer WHERE SurveyID = (SELECT SurveyID FROM Survey WHERE Description = '2019') AND AnswerText = 'Yes' AND QuestionID = 6 AND EXISTS (   SELECT 1   FROM Answer AS A2   WHERE A2.SurveyID = Answer.SurveyID   AND A2.QuestionID = 3   AND A2.AnswerText = 'United States' );
SELECT      YEAR(Survey.Description) AS Year,     COUNT(*) AS Count FROM      Survey JOIN      Answer ON Survey.SurveyID = Answer.SurveyID WHERE      Survey.SurveyID BETWEEN 2016 AND 2019     AND Answer.AnswerText = 'Yes'     AND Answer.QuestionID = 34 GROUP BY      YEAR(Survey.Description) ORDER BY      Count DESC LIMIT 1;
SELECT COUNT(DISTINCT UserID)  FROM Answer  WHERE AnswerText = 'Female'  AND QuestionID = 2  AND SurveyID IN (   SELECT SurveyID    FROM Survey    WHERE Description LIKE '%2017%'    AND Description LIKE '%Nebraska%' )
SELECT COUNT(*)  FROM Answer  WHERE AnswerText = 'Yes' AND QuestionID = 54;
SELECT MAX(CASE WHEN QuestionID = 1 THEN CAST(AnswerText AS INT) END) AS OldestUserAge,         MAX(CASE WHEN QuestionID = 1 THEN UserID END) AS OldestUserID,        MIN(CASE WHEN QuestionID = 1 THEN CAST(AnswerText AS INT) END) AS YoungestUserAge,         MIN(CASE WHEN QuestionID = 1 THEN UserID END) AS YoungestUserID FROM Answer;
SELECT s.Description FROM Survey s WHERE s.SurveyID IN (   SELECT SurveyID   FROM Answer   WHERE QuestionID = 3   GROUP BY SurveyID   ORDER BY COUNT(AnswerText) ASC   LIMIT 1 ) UNION ALL SELECT s.Description FROM Survey s WHERE s.SurveyID IN (   SELECT SurveyID   FROM Answer   WHERE QuestionID = 3   GROUP BY SurveyID   ORDER BY COUNT(AnswerText) ASC   OFFSET 1 LIMIT (     SELECT COUNT(*) - 1     FROM (       SELECT COUNT(AnswerText)       FROM Answer       WHERE QuestionID = 3       GROUP BY SurveyID       ORDER BY COUNT(AnswerText) ASC     ) AS subquery   ) );
SELECT AVG(AnswerText) AS Average_Age FROM Answer WHERE AnswerText = (SELECT AnswerText FROM Answer WHERE QuestionID = 1)   AND AnswerText = 'United States' AND QuestionID = 3;
SELECT DIVIDE(SUM(CASE WHEN AnswerText = 'Yes' OR AnswerText = 'Maybe' THEN 1 ELSE 0 END),                COUNT(QuestionID = 12))*100 AS Percentage FROM Answer WHERE QuestionID = 12;
SELECT COUNT(*)  FROM Answer  WHERE SurveyID = (SELECT SurveyID FROM Survey WHERE Description LIKE '%2014%')  AND COUNT(QuestionID) = (SELECT COUNT(*) FROM Answer WHERE SurveyID = (SELECT SurveyID FROM Survey WHERE Description LIKE '%2014%') GROUP BY QuestionID HAVING COUNT(*) > 200);
SELECT MAX(CAST(SUBSTRING_INDEX(AnswerText, ' ', -1) AS UNSIGNED))  FROM Answer  WHERE SurveyID IN (SELECT SurveyID FROM Survey WHERE Description = '2014')  AND QuestionID IN (SELECT questionid FROM Question WHERE questiontext = 'What is your age?');
SELECT COUNT(*) FROM Answer WHERE AnswerText = 'No' AND QuestionID = (SELECT questionid FROM Question WHERE questiontext = 'Would you bring up a mental health issue with a potential employer in an interview?') AND SurveyID = (SELECT SurveyID FROM Survey WHERE Description = '2014');
SELECT UserID  FROM Answer  WHERE AnswerText = 'Yes'  AND QuestionID IN (   SELECT QuestionID    FROM Question    WHERE questiontext = 'Do you think that discussing a physical health issue with your employer would have negative consequences?' )  AND SurveyID IN (   SELECT SurveyID    FROM Survey    WHERE Description LIKE '%2014%' );
SELECT COUNT(DISTINCT UserID)  FROM Answer  WHERE SurveyID = 2014;
SELECT AnswerText  FROM Answer  WHERE QuestionID IN (   SELECT questionid    FROM Question    WHERE questiontext = 'Any additional notes or comments' ) AND AnswerText != -1 AND SurveyID IN (   SELECT SurveyID    FROM Survey    WHERE Description LIKE '%2014%' );
SELECT q.questiontext FROM Question q WHERE q.questionid IN (   SELECT a.questionid   FROM Answer a   WHERE a.surveyid IN (     SELECT s.surveyid     FROM Survey s     WHERE s.description LIKE '2014%' OR s.description LIKE '2016%'   )   GROUP BY a.questionid   HAVING COUNT(DISTINCT a.surveyid) = 2 )
SELECT COUNT(DISTINCT UserID) FROM Answer WHERE SurveyID IN (SELECT SurveyID FROM Survey WHERE Description = '2018') AND QuestionID = 3 AND AnswerText = 'Canada';
SELECT q.questiontext  FROM Question q  JOIN Survey s ON q.questionid IN (   SELECT a.questionid    FROM Answer a    WHERE a.SurveyID = 2014   GROUP BY a.questionid )
SELECT COUNT(DISTINCT UserID) FROM Answer WHERE SurveyID = (SELECT SurveyID FROM Survey WHERE Description = '2016') AND QuestionID = 32 AND AnswerText = 'Yes';
SELECT COUNT(*) FROM Answer WHERE AnswerText = 'Yes' AND QuestionID IN (   SELECT questionid   FROM Question   WHERE questiontext = 'Have you had a mental health disorder in the past?' ) AND SurveyID IN (2016, 2017, 2018);
SELECT AVG(CAST(AnswerText AS INT)) FROM Answer WHERE SurveyID = (SELECT SurveyID FROM Survey WHERE Description = '2014') AND QuestionID = (SELECT questionid FROM Question WHERE questiontext = 'What is your age?');
SELECT      (COUNT(CASE WHEN SurveyID = 2019 AND QuestionID = 33 AND AnswerText = 'Yes' THEN 1 END) /       COUNT(CASE WHEN SurveyID = 2019 AND QuestionID = 33 THEN 1 END)) -      (COUNT(CASE WHEN SurveyID = 2016 AND QuestionID = 33 AND AnswerText = 'Yes' THEN 1 END) /       COUNT(CASE WHEN SurveyID = 2016 AND QuestionID = 33 THEN 1 END))
SELECT questionid FROM Question WHERE questiontext = 'Would you bring up a physical health issue with a potential employer in an interview?';
SELECT COUNT(*)  FROM Answer  WHERE QuestionID = 20;
SELECT COUNT(*)  FROM Answer  WHERE UserID = 5;
SELECT COUNT(DISTINCT UserID)  FROM Answer  WHERE SurveyID = 2016;
SELECT COUNT(*)  FROM Question  WHERE questionid IN (SELECT QuestionID                       FROM Answer                       WHERE SurveyID = 2018);
SELECT COUNT(*)  FROM Survey  WHERE SurveyID IN (SELECT SurveyID                      FROM Answer                      WHERE QuestionID IN (SELECT questionid                                           FROM Question                                           WHERE questiontext = 'What country do you work in?'));
SELECT AnswerText FROM Answer WHERE UserID = 2681 AND QuestionID = (SELECT questionid FROM Question WHERE questiontext = 'Do you currently have a mental health disorder?');
SELECT COUNT(DISTINCT UserID)  FROM Answer  WHERE SurveyID = 2016;
SELECT AnswerText FROM Answer WHERE QuestionID = 3 GROUP BY AnswerText ORDER BY COUNT(*) DESC LIMIT 1;
SELECT COUNT(DISTINCT AnswerText)  FROM Answer  WHERE QuestionID IN (SELECT questionid FROM Question WHERE questiontext = 'Describe the conversation you had with your previous employer about your mental health, including their reactions and actions taken to address your mental health issue/questions.');
SELECT COUNT(*)  FROM Answer  WHERE AnswerText = 'Kansas'  AND QuestionID IN (SELECT questionid FROM Question WHERE questiontext = 'What US state or territory do you work in?');
SELECT COUNT(*)  FROM Answer  WHERE QuestionID = (SELECT questionid FROM Question WHERE questiontext = 'Any additional notes or comments.') AND AnswerText != '-1';
SELECT COUNT(*)  FROM Answer  WHERE AnswerText = 'Yes'  AND QuestionID IN (SELECT questionid FROM Question WHERE questiontext = 'Have you ever been diagnosed with a mental health disorder?');
SELECT COUNT(DISTINCT UserID) FROM Answer WHERE SurveyID = 2018;
SELECT COUNT(*)  FROM Answer  WHERE QuestionID IN (SELECT questionid FROM Question WHERE questiontext = 'Overall, how much importance does your employer place on physical health?');
SELECT q.questiontext  FROM Answer a  JOIN Question q ON a.QuestionID = q.questionid  WHERE a.AnswerText = 'Mood Disorder (Depression, Bipolar Disorder, etc)'  AND a.UserID = 2183;
SELECT (COUNT(QuestionID = 15 AND AnswerText = 'Yes') / COUNT(QuestionID = 15)) * 100 AS Percentage
SELECT (COUNT(UserID) FROM Answer WHERE SurveyID = 2017) - (COUNT(UserID) FROM Answer WHERE SurveyID = 2018)
SELECT (COUNT(A.SurveyID) / (SELECT COUNT(*) FROM Survey WHERE SurveyID = 2016)) * 100 FROM Answer A WHERE A.SurveyID = 2016 AND A.QuestionID = 32 AND A.AnswerText = 'Yes';
SELECT COUNT(DISTINCT UserID)  FROM Answer  WHERE SurveyID = (SELECT SurveyID FROM Survey WHERE Description = '2016')  AND QuestionID = (SELECT questionid FROM Question WHERE questiontext = 'QuestionID = 1')  AND AnswerText < 25;
SELECT AVG(COUNT(DISTINCT UserID))  FROM Answer  WHERE SurveyID IN (SELECT SurveyID FROM Survey WHERE Description BETWEEN '2014' AND '2019')  GROUP BY SurveyID;
SELECT COUNT(DISTINCT UserID)  FROM Answer  WHERE SurveyID = (SELECT SurveyID FROM Survey WHERE Description = '2019')  AND QuestionID = (SELECT questionid FROM Question WHERE questiontext = 'Have you ever sought treatment for a mental health disorder from a mental health professional?')  AND AnswerText = '1';
SELECT COUNT(DISTINCT UserID)  FROM Answer  WHERE SurveyID = 2014 AND QuestionID = 93 AND AnswerText = 'Yes';
SELECT COUNT(*)  FROM Question  WHERE questionid IN (SELECT QuestionID FROM Answer);
SELECT COUNT(DISTINCT UserID) FROM Answer WHERE AnswerText LIKE '%Substance Use Disorder%' AND QuestionID IN (   SELECT questionid   FROM Question   WHERE questiontext LIKE '%Substance Use Disorder%' );
SELECT AnswerText, COUNT(*) as Count FROM Answer WHERE SurveyID = 2017 AND QuestionID = 85 GROUP BY AnswerText ORDER BY Count DESC LIMIT 3;
SELECT SUM(CASE WHEN Year = 1998 THEN Total ELSE 0 END) - SUM(CASE WHEN Year = 1997 THEN Total ELSE 0 END) AS Difference FROM revenue;
Error: 第 4623 个样本有 0 个SQL。
Error: 第 4624 个样本有 0 个SQL。
SELECT villian FROM characters WHERE movie_title IN (   SELECT movie_title   FROM movies_total_gross   WHERE director = 'Wolfgang Reitherman' )
Error: 第 4626 个样本有 0 个SQL。
SELECT d.name  FROM characters c  JOIN movies_total_gross m ON c.movie_title = m.movie_title  JOIN director d ON m.release_date = d.director  WHERE c.song = 'Once Upon a Dream';
SELECT voice-actors.voice-actor FROM characters T1 JOIN voice-actors T2 ON T1.character = T2.character WHERE T1.villian LIKE '%'||T1.villian||'%' AND T1.movie_title = 'Alice in Wonderland';
SELECT movie.release_date FROM voice-actors JOIN movies_total_gross ON voice-actors.movie = movies_total_gross.movie_title WHERE voice-actors.voice-actor = 'Alan Tudyk';
SELECT COUNT(*) FROM voice-actors WHERE voice-actor = 'Alan Tudyk' AND (release_date, instr(release_date, '-') + 5) > 12;
SELECT COUNT(*)  FROM movies_total_gross  WHERE director = 'Wolfgang Reitherman' AND genre = 'Comedy';
SELECT movie_title FROM movies_total_gross WHERE director = 'Wolfgang Reitherman' ORDER BY total_gross DESC LIMIT 1;
Error: 第 4633 个样本有 0 个SQL。
SELECT c.hero AS villain FROM characters c JOIN movies_total_gross m ON c.movie_title = m.movie_title WHERE c.villain = c.hero ORDER BY m.total_gross DESC LIMIT 1;
SELECT genre FROM movies_total_gross WHERE movie_title IN (   SELECT movie_title   FROM characters   WHERE villian = 'Commander Rourke' )
SELECT villian FROM characters WHERE movie_title = 'Beauty and the Beast';
SELECT movie_title FROM characters WHERE hero = 'Robin Hood';
SELECT movie_title FROM characters WHERE song = 'I Thought I Lost You';
SELECT voice_actor FROM voice-actors WHERE character = 'Binkie Muddlefoot';
SELECT hero FROM characters WHERE movie_title IN (   SELECT movie_title   FROM movies_total_gross   WHERE total_gross = 222527828 );
SELECT song FROM characters WHERE movie_title IN (   SELECT movie_title   FROM movies_total_gross   WHERE cast(SUBSTR(release_date, instr(release_date, ', ') + 1) as int) BETWEEN 1970 AND 1979   ORDER BY total_gross DESC   LIMIT 1 );
SELECT c.hero FROM characters c JOIN director d ON c.release_date = d.name WHERE d.director = 'Will Finn';
Error: 第 4643 个样本有 0 个SQL。
SELECT d.name FROM director d JOIN voice-actors v ON d.name = v.voice-actor WHERE v.character = 'Aunt Sarah' AND v.voice-actor = 'Verna Felton';
Error: 第 4645 个样本有 0 个SQL。
Error: 第 4646 个样本有 0 个SQL。
SELECT movie_title FROM movies_total_gross WHERE director = 'Wolfgang Reitherman' ORDER BY inflation_adjusted_gross DESC LIMIT 1;
SELECT hero FROM characters WHERE movie_title IN (   SELECT movie_title   FROM movies_total_gross   WHERE release_date = '4-Mar-16' AND genre = 'Adventure' )
SELECT movie_title, total_gross FROM movies_total_gross WHERE movie_title IN (   SELECT movie_title   FROM characters   WHERE hero = 'Donald Duck' ) ORDER BY total_gross DESC LIMIT 1;
SELECT COUNT(*)  FROM director  WHERE name = 'Wolfgang Reitherman';
Error: 第 4651 个样本有 0 个SQL。
Error: 第 4652 个样本有 0 个SQL。
SELECT character FROM voice-actors WHERE voice-actor = 'Frank Welker';
Error: 第 4654 个样本有 0 个SQL。
Error: 第 4655 个样本有 0 个SQL。
Error: 第 4656 个样本有 0 个SQL。
SELECT COUNT(*) FROM movies_total_gross WHERE director = 'Gary Trousdale' AND genre = 'Adventure';
SELECT d.name FROM director d JOIN (   SELECT voice-actor, COUNT(name) as count   FROM voice-actors   GROUP BY voice-actor ) v ON d.name = (   SELECT name   FROM director   JOIN voice-actors va ON d.name = va.voice-actor   GROUP BY name   ORDER BY COUNT(name) DESC   LIMIT 1 ) WHERE voice-actor = 'Bill Thompson';
SELECT movie_title FROM movies_total_gross WHERE movie_title IN (   SELECT movie_title   FROM director   WHERE name = 'Ron Clements' ) ORDER BY total_gross DESC LIMIT 1;
Error: 第 4660 个样本有 0 个SQL。
Error: 第 4661 个样本有 0 个SQL。
SELECT COUNT(*)  FROM movies_total_gross  WHERE genre = 'Horror';
Error: 第 4663 个样本有 0 个SQL。
Error: 第 4664 个样本有 0 个SQL。
SELECT name FROM director GROUP BY name ORDER BY COUNT(name) DESC LIMIT 1;
SELECT Year FROM revenue WHERE Year BETWEEN 2000 AND 2010 ORDER BY Studio Entertainment[NI 1] DESC LIMIT 1;
SELECT song FROM characters WHERE movie_title IN (   SELECT movie_title   FROM movies_total_gross   WHERE genre = 'Drama' );
SELECT v.voice_actor FROM voice-actors v JOIN characters c ON v.character = c.hero;
SELECT d.name  FROM director d WHERE CAST(SUBSTR(director.release_date, INSTR(director.release_date, ', ') + 1) AS INT) BETWEEN 1990 AND 2000;
SELECT voice-actor FROM voice-actors WHERE character = (SELECT villian                    FROM characters                    WHERE movie_title = 'The Rescuers');
SELECT m.movie_title, v.voice_actor FROM movies_total_gross m JOIN director d ON m.movie_title = d.name JOIN voice-actors v ON m.movie_title = v.movie WHERE d.name = 'Wolfgang Reitherman';
SELECT DISTINCT hero, villian, song FROM characters WHERE EXISTS (   SELECT 1   FROM movies_total_gross   WHERE movies_total_gross.movie_title = characters.movie_title   AND movies_total_gross.MPAA_rating = 'PG' );
SELECT movie_title FROM movies_total_gross WHERE song IS NULL ORDER BY total_gross DESC LIMIT 1;
SELECT d.name FROM director d JOIN (   SELECT movie, COUNT(*) as num_voice_actors   FROM voice-actors   GROUP BY movie   ORDER BY num_voice_actors DESC   LIMIT 1 ) v ON d.name = (   SELECT director   FROM movies_total_gross   WHERE movie_title = v.movie );
Error: 第 4675 个样本有 0 个SQL。
SELECT d.name FROM director d JOIN characters c ON d.name = (SELECT director FROM characters WHERE song IS NOT NULL)
SELECT mg.total_gross FROM movies_total_gross mg JOIN voice-actors va ON mg.movie_title = va.movie WHERE va.voice-actor = 'Jim Cummings';
SELECT m.total_gross FROM movies_total_gross m JOIN director d ON m.movie_title = d.name WHERE d.name = 'Ron Clements' ORDER BY m.total_gross DESC LIMIT 1;
SELECT AVG(total_gross)  FROM movies_total_gross  WHERE movie_title IN (   SELECT movie    FROM voice-actors    WHERE voice-actor = 'Sterling Holloway' );
SELECT      DIVIDE(SUM(total_gross), SUM(total_gross)) * 100 AS percentage FROM      movies_total_gross  WHERE      song IS NOT NULL;
SELECT movie_title, genre FROM movies_total_gross WHERE SUBSTR(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) = '2016';
SELECT villian FROM characters WHERE movie_title = 'Little Mermaid';
Error: 第 4683 个样本有 0 个SQL。
SELECT m.movie_title,         (m.inflation_adjusted_gross / m.total_gross) * 100 AS estimated_inflation_rate FROM movies_total_gross m WHERE m.total_gross = (SELECT MAX(total_gross) FROM movies_total_gross);
SELECT movie_title, release_date FROM movies_total_gross WHERE MPAA_rating = 'PG-13' AND genre = 'Romantic Comedy';
SELECT c1.movie_title, c2.character FROM voice-actors c1 JOIN characters c2 ON c1.character = c2.character WHERE c1.voice-actor = 'Bill Thompson';
Error: 第 4687 个样本有 0 个SQL。
SELECT m.movie_title, c.hero, s.song FROM movies_total_gross m JOIN characters c ON m.movie_title = c.movie_title JOIN director d ON m.movie_title = d.name WHERE d.name = 'Wolfgang Reitherman' AND substr(m.release_date, length(m.release_date) - 3, length(m.release_date)) = '1977';
SELECT m.movie_title, d.name FROM characters c JOIN movies_total_gross m ON c.movie_title = m.movie_title JOIN director d ON m.release_date = d.name WHERE c.hero = 'Donald Duck';
SELECT c.hero, d.name, c.release_date FROM characters c JOIN director d ON c.movie_title = d.name WHERE c.movie_title = 'Mulan';
Error: 第 4691 个样本有 0 个SQL。
Error: 第 4692 个样本有 0 个SQL。
SELECT m.total_gross FROM movies_total_gross m JOIN voice-actors v ON m.movie_title = v.movie WHERE v.voice-actor = 'Frank Welker' AND m.total_gross > 0 AND m.total_gross / m.inflation_adjusted_gross < 2;
SELECT d.name, m.movie_title FROM director d JOIN movies_total_gross m ON d.name = m.director ORDER BY m.total_gross DESC LIMIT 1;
SELECT v.voice-actor, c.villian FROM voice-actors v JOIN characters c ON v.character = c.character WHERE c.movie_title = 'Cinderella';
SELECT voice_actor FROM voice-actors WHERE character = (SELECT hero FROM characters WHERE movie_title = 'Lion King');
SELECT d.name, mg.MPAA_rating FROM director d JOIN movies_total_gross mg ON d.name = mg.director WHERE mg.genre = 'Musical' AND substr(mg.release_date, length(mg.release_date) - 3, length(mg.release_date)) = '1993';
SELECT      movie_title,      director.name  FROM      movies_total_gross  JOIN      director ON movies_total_gross.release_date = director.name  WHERE      substr(movies_total_gross.release_date, length(movies_total_gross.release_date) - 3, length(movies_total_gross.release_date)) BETWEEN '1991' AND '2000'      AND movies_total_gross.genre = 'Comedy'  ORDER BY      RAND()  LIMIT 5;
SELECT m.movie_title, d.name AS director FROM movies_total_gross m JOIN director d ON m.movie_title = d.name WHERE SUBSTR(m.release_date, LENGTH(m.release_date) - 3, LENGTH(m.release_date)) BETWEEN '2001' AND '2005' AND m.total_gross > (SELECT AVG(total_gross) * 1.1 FROM movies_total_gross WHERE SUBSTR(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) BETWEEN '2001' AND '2005');
Error: 第 4700 个样本有 0 个SQL。
SELECT COUNT(DISTINCT voice-actor)  FROM voice-actors  WHERE movie = 'Aladdin';
SELECT movie_title FROM voice-actors WHERE voice-actor = 'Jeff Bennett';
SELECT d.name  FROM director d  JOIN movies_total_gross m ON d.name = m.genre  WHERE m.movie_title = 'Wreck-It Ralph';
Error: 第 4704 个样本有 0 个SQL。
SELECT COUNT(*)  FROM movies_total_gross  WHERE SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) BETWEEN '37' AND '50';
Error: 第 4706 个样本有 0 个SQL。
Error: 第 4707 个样本有 0 个SQL。
Error: 第 4708 个样本有 0 个SQL。
SELECT movie_title FROM characters WHERE villian IS NULL AND (SELECT director FROM director WHERE director.name = 'Wolfgang Reitherman') = (SELECT movie_title FROM characters WHERE hero IS NOT NULL);
Error: 第 4710 个样本有 0 个SQL。
Error: 第 4711 个样本有 0 个SQL。
SELECT m.movie_title FROM movies_total_gross m JOIN characters c ON m.movie_title = c.movie_title ORDER BY m.total_gross DESC LIMIT 1;
SELECT d.name FROM director d JOIN movies_total_gross m ON d.name = m.genre WHERE substr(release_date, length(release_date) - 3, length(release_date)) BETWEEN '1937' AND '1990' ORDER BY total_gross DESC LIMIT 1;
SELECT hero  FROM characters  WHERE movie_title IN (   SELECT movie_title    FROM movies_total_gross    WHERE genre = 'Comedy' )
SELECT v.voice_actor FROM voice-actors v JOIN characters c ON v.character = c.hero OR v.character = c.villian JOIN director d ON c.movie_title = (SELECT movie_title FROM director WHERE name = 'Wolfgang Reitherman')
SELECT genre  FROM movies_total_gross  WHERE movie_title IN (   SELECT movie_title    FROM characters    WHERE hero = 'Taran' )
SELECT v.voice-actor, d.name FROM characters c JOIN voice-actors v ON c.hero = v.character JOIN movies_total_gross m ON c.movie_title = m.movie_title JOIN director d ON m.release_date = d.name;
SELECT    DIVIDE(COUNT(movies_total_gross.movie_title), COUNT(director.name)) as percentage FROM    director   LEFT JOIN movies_total_gross ON director.name = movies_total_gross.movie_title WHERE    movies_total_gross.total_gross > 100000000;
SELECT    DIVIDE(COUNT(v.voice_actor) WHERE m.genre = 'Drama'),    COUNT(v.voice_actor)) as percentage FROM    voice-actors v   JOIN movies_total_gross m ON v.movie = m.movie_title   JOIN characters c ON v.movie = c.movie_title WHERE    c.hero IN (c.hero, c.villian) AND m.genre = 'Drama'
Error: 第 4720 个样本有 0 个SQL。
SELECT COUNT(*)  FROM movies_total_gross  WHERE substr(release_date, length(release_date) - 4, length(release_date)) BETWEEN '2010' AND '2016';
SELECT villian FROM characters WHERE release_date = (   SELECT release_date   FROM characters   ORDER BY SUBSTRING(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) DESC   LIMIT 1 );
SELECT movie_title FROM movies_total_gross WHERE genre = 'Action' ORDER BY total_gross DESC LIMIT 1;
SELECT voice-actor FROM voice-actors WHERE character = 'Akela' AND movie = 'The Jungle Book';
SELECT SUM(total_gross)  FROM movies_total_gross  WHERE release_date BETWEEN '2010-01-01' AND '2016-12-31';
SELECT hero FROM characters WHERE movie_title IN (   SELECT movie_title   FROM movies_total_gross   WHERE genre = 'Adventure'   ORDER BY inflation_adjusted_gross DESC   LIMIT 1 )
SELECT d.name FROM director d JOIN movies_total_gross m ON d.name = m.director WHERE m.total_gross = (SELECT MIN(total_gross) FROM movies_total_gross);
SELECT DIVIDE((SELECT SUM(Revenue) FROM revenue WHERE Year = 2010 AND Revenue = 'Walt Disney Parks and Resorts'),                (SELECT SUM(Revenue) FROM revenue WHERE Year = 2010)) AS percentage;
SELECT DIVIDE(SUM(total_gross), COUNT(movie_title))  FROM movies_total_gross  WHERE genre = 'Action' AND MPAA_rating = 'PG-13';
SELECT COUNT(DISTINCT voice-actor) FROM voice-actors WHERE movie = 'Bambi';
SELECT DIVIDE(inflation_adjusted_gross, total_gross) as percentage  FROM movies_total_gross  WHERE substr(release_date, length(release_date) - 3, length(release_date)) = '1995';
SELECT      (SELECT inflation_adjusted_gross FROM movies_total_gross WHERE movie_title = 'Cars 2') -      (SELECT inflation_adjusted_gross FROM movies_total_gross WHERE movie_title = 'Cars') AS difference,     (SELECT movie_title FROM movies_total_gross WHERE movie_title IN ('Cars', 'Cars 2') ORDER BY inflation_adjusted_gross DESC LIMIT 1) AS more_popular_movie;
SELECT m1.movie_title FROM director d JOIN movies_total_gross m1 ON d.name = 'Chris Buck' AND d.name = m1.movie_title WHERE m1.release_date = (SELECT MAX(release_date) FROM movies_total_gross WHERE movie_title IN (SELECT movie_title FROM director WHERE name = 'Chris Buck')) ORDER BY m1.inflation_adjusted_gross DESC;
SELECT voice-actor FROM voice-actors GROUP BY voice-actor HAVING COUNT(character) > 5;
SELECT      movie_title,      total_gross,      inflation_adjusted_gross,      (SUM(inflation_adjusted_gross) OVER ()) * 100 / SUM(total_gross) OVER () as percentage FROM      movies_total_gross WHERE      movie_title IN (         SELECT              movie_title         FROM              movies_total_gross         ORDER BY              inflation_adjusted_gross DESC         LIMIT 5     ) ORDER BY      inflation_adjusted_gross DESC;
SELECT    DIVIDE(COUNT(m.movie_title)           WHERE m.movie_title IN (d.movie_title)           AND m.total_gross > 100000000),    COUNT(m.movie_title)    WHERE m.movie_title IN (d.movie_title))  AS percentage FROM    movies_total_gross m    JOIN director d ON m.movie_title = d.name  WHERE    d.name = 'Gary Trousdale';
SELECT COUNT(*)  FROM current  WHERE ballotpedia_id IS NULL OR ballotpedia_id = '';
Error: 第 4738 个样本有 0 个SQL。
Error: 第 4739 个样本有 0 个SQL。
SELECT COUNT(*)  FROM current  WHERE gender_bio = 'F' AND fec_id IS NULL;
Error: 第 4741 个样本有 0 个SQL。
Error: 第 4742 个样本有 0 个SQL。
SELECT s.facebook FROM current c JOIN social_media s ON c.bioguide_id = s.bioguide WHERE c.official_full_name = 'Todd Young';
SELECT COUNT(*) FROM current LEFT JOIN social_media ON current.bioguide = social_media.bioguide WHERE instagram IS NULL;
SELECT official_full_name FROM current JOIN social_media ON current.bioguide_id = social_media.bioguide WHERE social_media.twitter_id = '234128524';
SELECT s.youtube FROM current c JOIN social-media s ON c.bioguide_id = s.bioguide WHERE c.gender_bio = 'F';
Error: 第 4747 个样本有 0 个SQL。
SELECT COUNT(*)  FROM current  WHERE opensecrets_id IS NULL OR opensecrets_id = ''  AND social_media.instagram IS NULL;
SELECT COUNT(*)  FROM current-terms  WHERE bioguide = (SELECT bioguide_id FROM current WHERE official_full_name = 'Roger F. Wicker')  AND district IS NULL OR district = '';
SELECT COUNT(*)  FROM current-terms  WHERE bioguide = (SELECT bioguide_id FROM current WHERE official_full_name = 'Sherrod Brown');
Error: 第 4751 个样本有 0 个SQL。
Error: 第 4752 个样本有 0 个SQL。
Error: 第 4753 个样本有 0 个SQL。
Error: 第 4754 个样本有 0 个SQL。
Error: 第 4755 个样本有 0 个SQL。
Error: 第 4756 个样本有 0 个SQL。
Error: 第 4757 个样本有 0 个SQL。
SELECT COUNT(*)  FROM current  WHERE party = 'Republican';
Error: 第 4759 个样本有 0 个SQL。
Error: 第 4760 个样本有 0 个SQL。
SELECT COUNT(*)  FROM current  WHERE gender_bio = 'M' AND religion_bio = 'Roman Catholic';
SELECT party FROM current-terms WHERE bioguide = (SELECT bioguide_id                   FROM current                   WHERE official_full_name = 'Sherrod Brown' AND start = '2005');
SELECT official_full_name  FROM current  WHERE type = 'sen' AND state_rank = 'senior' AND start LIKE '2013%';
Error: 第 4764 个样本有 0 个SQL。
Error: 第 4765 个样本有 0 个SQL。
SELECT last_name FROM current WHERE state = 'CA';
SELECT official_full_name FROM current WHERE gender_bio = 'F' AND type = 'sen';
SELECT govtrack_id FROM current WHERE official_full_name = 'Chris Van Hollen';
Error: 第 4769 个样本有 0 个SQL。
Error: 第 4770 个样本有 0 个SQL。
Error: 第 4771 个样本有 0 个SQL。
Error: 第 4772 个样本有 0 个SQL。
SELECT COUNT(*)  FROM current  WHERE official_full_name = (SELECT official_full_name FROM current WHERE first_name = 'Richard' AND last_name = 'Durbin')  AND district = 20;
SELECT AVG(COUNT(bioguide_id)) / 22 FROM current WHERE gender_bio = 'M' AND party = 'Democrat' AND start >= 2000 AND end <= 2021;
SELECT    'Current Female Legislators' AS 'Legislator Type',    COUNT(current.gender_bio = 'F' THEN current.bioguide_id) AS 'Current Female Count',    'Past Female Legislators' AS 'Legislator Type',    COUNT(historical.gender_bio = 'F' THEN historical.bioguide_id) AS 'Past Female Count',    (COUNT(current.gender_bio = 'F' THEN current.bioguide_id) /     (COUNT(historical.gender_bio = 'F' THEN historical.bioguide_id)) * 1.0) AS 'Calculation' UNION ALL SELECT    'Legislator Type',    MAX(calculation) AS 'Highest Value' FROM    (SELECT       'Current Female Legislators' AS 'Legislator Type',       COUNT(current.gender_bio = 'F' THEN current.bioguide_id) AS 'Current Female Count',       'Past Female Legislators' AS 'Legislator Type',       COUNT(historical.gender_bio = 'F' THEN historical.bioguide_id) AS 'Past Female Count',       (COUNT(current.gender_bio = 'F' THEN current.bioguide_id) /        (COUNT(historical.gender_bio = 'F' THEN historical.bioguide_id)) * 1.0) AS 'Calculation'   FROM      current   JOIN      historical ON current.bioguide_id = historical.bioguide_id   WHERE      current.gender_bio = 'F' OR historical.gender_bio = 'F'   GROUP BY      current.gender_bio = 'F', historical.gender_bio = 'F') AS subquery
SELECT youtube_id FROM social_media WHERE bioguide = 'Wasserman_Schultz';
Error: 第 4777 个样本有 0 个SQL。
SELECT party FROM current WHERE first_name = 'Christopher' AND middle_name = 'Henderson' AND last_name = 'Clark';
SELECT c.official_full_name FROM current c JOIN social_media sm ON c.bioguide_id = sm.bioguide WHERE sm.youtube_id IS NOT NULL AND (sm.instagram_id IS NULL OR sm.instagram_id = '');
Error: 第 4780 个样本有 0 个SQL。
SELECT first_name, last_name FROM historical WHERE party = 'National Greenbacker';
SELECT official_full_name FROM current JOIN social_media ON current.bioguide_id = social_media.bioguide WHERE youtube = 'RoskamIL06';
Error: 第 4783 个样本有 0 个SQL。
SELECT official_full_name FROM current WHERE state_rank = 'junior' AND party = 'Republican';
Error: 第 4785 个样本有 0 个SQL。
Error: 第 4786 个样本有 0 个SQL。
SELECT official_full_name  FROM current  WHERE party = 'Republican' AND nickname_name IS NOT NULL;
Error: 第 4788 个样本有 0 个SQL。
SELECT COUNT(*)  FROM historical  WHERE birthday_bio = 1973;
SELECT    DIVIDE(COUNT(CASE WHEN gender_bio = 'M' THEN bioguide_id END),           COUNT(CASE WHEN gender_bio = 'F' THEN bioguide_id END)) AS ratio FROM    historical;
Error: 第 4791 个样本有 0 个SQL。
SELECT official_full_name, gender_bio FROM current WHERE last_name = 'Collins';
SELECT    MULTIPLY(DIVIDE(COUNT(CASE WHEN type = 'sen' AND class = 1 THEN bioguide ELSE NULL END),                    COUNT(bioguide)), 1.0) * 100 AS percentage_of_senators FROM    current-terms;
Error: 第 4794 个样本有 0 个SQL。
SELECT SUM(SUBTRACT(end, start)) AS years_served FROM current-terms WHERE official_full_name = 'Jr. John Conyers';
SELECT DATEDIFF(MIN(start), birthday_bio)  FROM current  WHERE official_full_name = 'Jr. F. James Sensenbrenner';
Error: 第 4797 个样本有 0 个SQL。
SELECT c.official_full_name, c.nickname_name FROM current c JOIN social_media sm ON c.bioguide_id = sm.bioguide WHERE sm.instagram IS NOT NULL AND c.thomas_id < 1000;
Error: 第 4799 个样本有 0 个SQL。
Error: 第 4800 个样本有 0 个SQL。
SELECT bioguide_id, CONCAT(first_name, ' ', last_name) AS full_name FROM current WHERE party_bio = 'Liberal Republican';
SELECT COUNT(*) FROM current-terms WHERE start = '1793-12-02' AND EXISTS (   SELECT 1   FROM current   WHERE current.ballotpedia_id = current-terms.bioguide   AND gender_bio = 'M' );
Error: 第 4803 个样本有 0 个SQL。
Error: 第 4804 个样本有 0 个SQL。
Error: 第 4805 个样本有 0 个SQL。
SELECT birthday_bio FROM current WHERE official_full_name = 'Amy Klobuchar';
SELECT COUNT(*)  FROM current  WHERE fec_id IS NULL OR fec_id = '';
SELECT COUNT(*)  FROM current  WHERE gender_bio = 'F';
SELECT first_name, last_name  FROM current  WHERE opensecrets_id IS NOT NULL AND opensecrets_id <> '';
SELECT middle_name FROM current WHERE birthday_bio = '1956-08-24';
Error: 第 4811 个样本有 0 个SQL。
SELECT official_full_name, title FROM current WHERE birthday_bio = '1942-02-20';
SELECT gender_bio FROM current WHERE address = '317 Russell Senate Office Building Washington DC 20510';
SELECT first_name FROM current WHERE gender_bio = 'senior'
SELECT COUNT(*) FROM current WHERE gender_bio = 'M' AND (class IS NULL OR class = '')
SELECT      MULTIPLY(DIVIDE(COUNT(class IS NOT NULL AND birthday_bio = 1964), COUNT(bioguide_id)), 1.0) AS percentage
SELECT MULTIPLY(DIVIDE(COUNT(CASE WHEN class IS NULL THEN bioguide_id ELSE NULL END), COUNT(bioguide_id)), 1.0) * 100 AS percentage FROM current WHERE birthday_bio <= '1975-01-01';
Error: 第 4818 个样本有 0 个SQL。
SELECT opensecrets_id FROM current JOIN social_media ON current.bioguide_id = social_media.bioguide WHERE social_media.youtube = 'Bluetkemeyer';
Error: 第 4820 个样本有 0 个SQL。
SELECT first_name FROM current WHERE address = '1005 Longworth HOB; Washington DC 20515-1408';
SELECT instagram FROM social_media WHERE bioguide IN (   SELECT bioguide_id FROM current   WHERE birthday_bio = '1952-08-24' )
Error: 第 4823 个样本有 0 个SQL。
SELECT religion_bio FROM current WHERE last_name = 'Waters' AND wikipedia_id = 'MaxineWaters';
Error: 第 4825 个样本有 0 个SQL。
SELECT COUNT(*)  FROM current  WHERE gender_bio = 'M';
SELECT facebook_id FROM social_media WHERE bioguide IN (   SELECT bioguide   FROM legislator.current   WHERE official_full_name = 'RepWilson' )
SELECT COUNT(*)  FROM current  WHERE first_name = 'John';
Error: 第 4829 个样本有 0 个SQL。
Error: 第 4830 个样本有 0 个SQL。
Error: 第 4831 个样本有 0 个SQL。
SELECT * FROM current JOIN current_terms ON current.ballotpedia_id = current_terms.bioguide WHERE type = 'sen' AND party = 'Pro-Administration' AND start = '1789-03-04' AND end = '1791-12-31';
Error: 第 4833 个样本有 0 个SQL。
Error: 第 4834 个样本有 0 个SQL。
SELECT o.opensecrets_id, t.thomas_id FROM current AS c JOIN current-terms AS ct ON c.bioguide_id = ct.bioguide JOIN historical AS h ON c.ballotpedia_id = h.ballotpedia_id JOIN historical-terms AS ht ON h.bioguide_id = ht.bioguide WHERE c.party_bio = 'Democrat' AND ct.type = 'sen' AND ct.state = 'NJ';
SELECT google_entity_id_id  FROM current  WHERE type = 'sen' AND state = 'NY';
SELECT religion_bio FROM current WHERE rss_url = 'http://www.corker.senate.gov/public/index.cfm/rss/feed';
Error: 第 4838 个样本有 0 个SQL。
Error: 第 4839 个样本有 0 个SQL。
SELECT p.party, s.state FROM current c JOIN current-terms t ON c.bioguide_id = t.bioguide JOIN historical h ON c.ballotpedia_id = h.ballotpedia_id JOIN historical-terms ht ON h.bioguide_id = ht.bioguide JOIN social-media sm ON c.bioguide_id = sm.bioguide JOIN current c2 ON c.ballotpedia_id = c2.ballotpedia_id WHERE c.opensecrets_id = 'N00003689' AND c.thomas_id = 186
SELECT official_full_name, birthday_bio FROM current WHERE contact_form = 'http://www.brown.senate.gov/contact/';
SELECT s.state, ht.type FROM current c JOIN current-terms ht ON c.bioguide_id = ht.bioguide WHERE c.google_entity_id_id = 'kg:/m/02pyzk';
SELECT t.type, h.end FROM current c JOIN current_terms t ON c.bioguide_id = t.bioguide JOIN historical h ON c.ballotpedia_id = h.ballotpedia_id WHERE c.last_name = 'Vining' AND c.first_name = 'John';
SELECT    SUBTRACT(     SUM(CASE WHEN type = 'sen' AND gender_bio = 'F' AND strftime('%Y', birthday_bio) BETWEEN '1930' AND '1970' THEN 1 ELSE 0 END),     SUM(CASE WHEN type = 'rep' AND gender_bio = 'F' AND strftime('%Y', birthday_bio) BETWEEN '1930' AND '1970' THEN 1 ELSE 0 END)   ) AS difference
SELECT MULTIPLY(DIVIDE(SUM(party = 'Independent' WHERE gender_bio = 'M' AND strftime('%Y', birthday_bio) BETWEEN '1955' AND '1965'), COUNT(party WHERE gender_bio = 'M' AND strftime('%Y', birthday_bio) BETWEEN '1955' AND '1965')), 100.0) AS percentage
SELECT first_name, last_name FROM current WHERE bioguide_id = 'W000059';
SELECT * FROM current WHERE first_name = 'Thomas' AND last_name = 'Carnes' AND ballotpedia_id IS NOT NULL;
SELECT COUNT(*)  FROM current  WHERE birthday_bio LIKE '1736%';
Error: 第 4849 个样本有 0 个SQL。
SELECT COUNT(DISTINCT district)  FROM current-terms  WHERE state = 'ID';
SELECT COUNT(*)  FROM current  WHERE class IS NULL;
SELECT DIVIDE(SUM(CASE WHEN gender_bio = 'M' THEN 1 ELSE 0 END),                SUM(CASE WHEN gender_bio = 'F' THEN 1 ELSE 0 END)) AS ratio FROM current;
SELECT MULTIPLY(DIVIDE(SUM(CASE WHEN wikipedia_id IS NOT NULL THEN 1 ELSE 0 END), COUNT(bioguide_id)), 100.0) AS percentage FROM current;
SELECT * FROM social_media WHERE instagram IS NULL;
SELECT h.ballotpedia_id, h.last_name, h.district, h.state FROM historical h JOIN historical_terms ht ON h.ballotpedia_id = ht.bioguide WHERE ht.type = 'rep' AND ht.start LIKE '1789%';
SELECT district  FROM current-terms  WHERE bioguide = (SELECT bioguide_id FROM current WHERE last_name = 'Contee' AND first_name = 'Benjamin');
Error: 第 4857 个样本有 0 个SQL。
SELECT * FROM current JOIN current_terms ON current.ballotpedia_id = current_terms.bioguide WHERE current_terms.chamber = 'senate' AND current_terms.state_rank = 'junior' AND current_terms.start LIKE '1997%';
Error: 第 4859 个样本有 0 个SQL。
Error: 第 4860 个样本有 0 个SQL。
Error: 第 4861 个样本有 0 个SQL。
Error: 第 4862 个样本有 0 个SQL。
SELECT * FROM current WHERE religion_bio = 'Jewish' AND state = 'FL';
SELECT DIVIDE(COUNT(current.bioguide_id WHERE current.wikipedia_id is not null), COUNT(historical.bioguide_id WHERE historical.wikipedia_id is not null)) AS ratio;
Error: 第 4865 个样本有 0 个SQL。
SELECT COUNT(*)  FROM current  WHERE religion_bio = 'Catholic' AND ballotpedia_id IS NULL;
Error: 第 4867 个样本有 0 个SQL。
SELECT first_name, last_name  FROM current  WHERE google_entity_id_id IS NULL AND gender_bio = 'F' AND fec_id IS NULL;
Error: 第 4869 个样本有 0 个SQL。
SELECT first_name, last_name FROM current ORDER BY birthday_bio LIMIT 1;
SELECT distinct bioguide_id FROM current JOIN current_terms ON current.bioguide_id = current_terms.bioguide WHERE party = 'Democrat' AND district = 13 AND end = '2019-01-03' AND type = 'rep';
SELECT twitter FROM social_media WHERE bioguide = (SELECT bioguide_id FROM current WHERE last_name = 'Lewis' AND first_name = 'Jason');
Error: 第 4873 个样本有 0 个SQL。
SELECT COUNT(*) FROM current WHERE religion_bio = 'Jewish' AND facebook IS NULL;
SELECT party, COUNT(*) AS count FROM current WHERE religion_bio = 'Baptist' GROUP BY party ORDER BY count DESC LIMIT 1;
SELECT official_full_name  FROM current  JOIN social_media ON current.bioguide_id = social_media.bioguide  WHERE facebook IS NOT NULL AND instagram IS NOT NULL AND twitter IS NOT NULL AND youtube IS NOT NULL;
Error: 第 4877 个样本有 0 个SQL。
SELECT wikipedia_id AS Wikipedia_page_name FROM current WHERE type = 'sen' AND party = 'Anti-Administration';
SELECT official_full_name FROM current JOIN current_terms ON current.ballotpedia_id = current_terms.bioguide WHERE district = '13' AND        (SELECT SUM(CAST(strftime('%Y', end) AS INTEGER)) -         SUM(CAST(strftime('%Y', start) AS INTEGER)) = 26         FROM current_terms) = 1;
Error: 第 4880 个样本有 0 个SQL。
Error: 第 4881 个样本有 0 个SQL。
Error: 第 4882 个样本有 0 个SQL。
SELECT l.first_name, l.last_name FROM current l JOIN current_terms ct ON l.bioguide_id = ct.bioguide WHERE l.religion_bio = 'Lutheran' AND ct.type = 'rep' AND        SUBTRACT(SUM(CAST(strftime('%Y', ct.end), CAST(strftime('%Y', ct.start)))) = 14 AND        ct.state = 'Ohio';
Error: 第 4884 个样本有 0 个SQL。
Error: 第 4885 个样本有 0 个SQL。
SELECT COUNT(*) FROM current WHERE icpsr_id IS NOT NULL AND maplight_id IS NOT NULL;
Error: 第 4887 个样本有 0 个SQL。
Error: 第 4888 个样本有 0 个SQL。
SELECT religion_bio, COUNT(*) as count FROM current GROUP BY religion_bio ORDER BY count DESC LIMIT 1;
Error: 第 4890 个样本有 0 个SQL。
Error: 第 4891 个样本有 0 个SQL。
Error: 第 4892 个样本有 0 个SQL。
Error: 第 4893 个样本有 0 个SQL。
SELECT phone FROM current-terms WHERE bioguide IN (   SELECT bioguide   FROM current   WHERE last_name = 'Brown'   AND first_name = 'Sherrod' ) AND start = '2013-01-03' AND chamber = 'senate';
SELECT COUNT(*)  FROM current-terms  WHERE bioguide = (SELECT bioguide FROM current WHERE first_name = 'Sherrod' AND last_name = 'Brown')  AND party = 'Democrat';
Error: 第 4896 个样本有 0 个SQL。
Error: 第 4897 个样本有 0 个SQL。
Error: 第 4898 个样本有 0 个SQL。
Error: 第 4899 个样本有 0 个SQL。
SELECT official_full_name FROM current WHERE facebook = 'senjoniernst';
Error: 第 4901 个样本有 0 个SQL。
SELECT    MULTIPLY(     DIVIDE(       SUM(gender_bio = 'F'),        COUNT(bioguide)     ),      100.0   ) AS percentage_of_female_legislators FROM    current  WHERE    (SELECT COUNT(*) FROM current-terms WHERE bioguide = current.bioguide) > 4;
SELECT AVG(COUNT(bioguide)) AS average FROM current WHERE wikipedia_id IS NOT NULL;
Error: 第 4904 个样本有 0 个SQL。
SELECT COUNT(*)  FROM current-terms  WHERE type = 'sen' AND state = 'NJ';
SELECT address FROM current-terms WHERE contact_form = 'http://www.carper.senate.gov/contact/';
SELECT instagram FROM social_media WHERE bioguide IN (SELECT bioguide FROM current WHERE last_name = 'Hawkins' AND first_name = 'Benjamin');
Error: 第 4908 个样本有 0 个SQL。
SELECT maplight_id FROM current WHERE state = 'ME' AND type = 'rep';
Error: 第 4910 个样本有 0 个SQL。
Error: 第 4911 个样本有 0 个SQL。
Error: 第 4912 个样本有 0 个SQL。
SELECT      MULTIPLY(DIVIDE(SUM(type = 'sen'), COUNT(type)), 100.0) AS percentage FROM      current WHERE      gender_bio = 'F' AND state = 'ME' AND type = 'sen';
SELECT g.games_name FROM games_competitor gc JOIN games g ON gc.games_id = g.id WHERE gc.person_id IN (   SELECT p.id   FROM person p   WHERE p.full_name = 'John Aalberg' );
Error: 第 4915 个样本有 0 个SQL。
Error: 第 4916 个样本有 0 个SQL。
Error: 第 4917 个样本有 0 个SQL。
SELECT person.full_name FROM person JOIN person_region ON person.id = person_region.person_id JOIN noc_region ON person_region.region_id = noc_region.id WHERE noc_region.region_name = 'Finland';
Error: 第 4919 个样本有 0 个SQL。
SELECT noc_region.noc FROM person JOIN person_region ON person.id = person_region.person_id JOIN noc_region ON person_region.region_id = noc_region.id WHERE gender = 'M' AND height = (SELECT MAX(height) FROM person)
Error: 第 4921 个样本有 0 个SQL。
SELECT c.city_name FROM city c JOIN games_city gc ON c.id = gc.city_id JOIN games g ON gc.games_id = g.id WHERE g.games_name = '1992 Summer';
Error: 第 4923 个样本有 0 个SQL。
SELECT games_year FROM games JOIN games_city ON games.id = games_city.games_id JOIN city ON games_city.city_id = city.id WHERE city.city_name = 'London' ORDER BY games_year ASC LIMIT 1;
SELECT COUNT(games_id)  FROM games_city  WHERE city_id IN (SELECT id FROM city WHERE city_name = 'London');
SELECT DIVIDE(SUM(p.height), COUNT(p.id)) FROM person p JOIN person_region pr ON p.id = pr.person_id JOIN noc_region nr ON pr.region_id = nr.id WHERE nr.region_name = 'Finland' AND p.gender = 'M';
Error: 第 4927 个样本有 0 个SQL。
SELECT sport_name FROM sport JOIN event ON sport.id = event.sport_id WHERE event_name = 'Shooting Women''s Trap';
Error: 第 4929 个样本有 0 个SQL。
Error: 第 4930 个样本有 0 个SQL。
Error: 第 4931 个样本有 0 个SQL。
SELECT region_name FROM person p JOIN person_region pr ON p.id = pr.person_id JOIN noc_region nr ON pr.region_id = nr.id WHERE p.full_name = 'Peter Kohnke';
SELECT gc.games_id FROM games_competitor gc JOIN person p ON gc.person_id = p.id WHERE p.full_name = 'Jessica Carolina Aguilera Aguilera';
SELECT sport_name FROM sport WHERE sport_name = (SELECT sport_name                     FROM event                     GROUP BY sport_id                     ORDER BY COUNT(id) DESC                     LIMIT 1);
SELECT full_name FROM person WHERE region_id = (SELECT id FROM noc_region WHERE region_name = 'Sweden') AND height = (SELECT MAX(height) FROM person);
Error: 第 4936 个样本有 0 个SQL。
SELECT p.full_name, COUNT(gc.games_id) as total_games FROM person p JOIN games_competitor gc ON p.id = gc.person_id GROUP BY p.full_name ORDER BY total_games DESC LIMIT 1;
SELECT full_name FROM person WHERE id = 90991;
SELECT COUNT(DISTINCT competitor_id)  FROM competitor_event  WHERE event_id IN (   SELECT id    FROM event    JOIN sport ON event.sport_id = sport.id    JOIN games_competitor ON event.id = competitor_event.event_id    JOIN person ON games_competitor.person_id = person.id    WHERE person.full_name = 'Martina Kohlov');
SELECT    (weight / (height * height)) AS bmi FROM    person WHERE    id = 147420;
SELECT      DIVIDE(COUNT(p.id), COUNT(p.id)) as percentage  FROM      person p  JOIN      person_region pr ON p.id = pr.person_id  JOIN      noc_region nr ON pr.region_id = nr.id  WHERE      p.gender = 'M'      AND nr.region_name = 'Estonia';
SELECT p.full_name FROM person p JOIN games_competitor gc ON p.id = gc.person_id WHERE gc.age = (SELECT MIN(gc2.age) FROM games_competitor gc2);
Error: 第 4943 个样本有 0 个SQL。
SELECT event_name FROM event WHERE sport_id IN (SELECT id FROM sport WHERE sport_name = 'Art Competitions');
SELECT COUNT(*)  FROM competitor_event ce  JOIN medal m ON ce.medal_id = m.id  WHERE m.medal_name = 'Gold'  AND ce.competitor_id IN (   SELECT gc.id    FROM games_competitor gc    JOIN person p ON gc.person_id = p.id    WHERE p.full_name = 'Henk Jan Zwolle' );
SELECT e.event_name FROM event e JOIN competitor_event ce ON e.id = ce.event_id JOIN medal m ON ce.medal_id = m.id WHERE m.medal_name = 'Gold' GROUP BY e.event_name ORDER BY COUNT(m.medal_name) DESC LIMIT 1;
SELECT COUNT(*)  FROM person  WHERE person_id IN (SELECT person_id FROM person_region WHERE region_id IN (SELECT id FROM noc_region WHERE region_name = 'Australia'));
SELECT c.city_name FROM city c JOIN games_city gc ON c.id = gc.city_id GROUP BY c.city_name HAVING COUNT(gc.games_id) >= 3;
Error: 第 4949 个样本有 0 个SQL。
SELECT r.region_name FROM person p JOIN person_region pr ON p.id = pr.person_id JOIN noc_region r ON pr.region_id = r.id GROUP BY r.region_name ORDER BY COUNT(p.id) DESC LIMIT 1;
Error: 第 4951 个样本有 0 个SQL。
Error: 第 4952 个样本有 0 个SQL。
SELECT COUNT(DISTINCT p.id) FROM person p JOIN games_competitor gc ON p.id = gc.person_id JOIN games g ON gc.games_id = g.id WHERE g.games_name = '1928 Summer' AND g.season = 'Summer';
SELECT COUNT(event_id) as total_events,         DIVIDE(COUNT(event_id), COUNT(event_id)) * 100 as percentage FROM competitor_event ce JOIN event e ON ce.event_id = e.id JOIN games_competitor gc ON ce.competitor_id = gc.id JOIN person p ON gc.person_id = p.id WHERE p.full_name = 'Michael Fred Phelps, II' AND ce.medal_id IN (SELECT id FROM medal WHERE medal_name = 'Gold');
SELECT      games_name,      MAX(COUNT(person_id)) AS max_competitors,     MAX(COUNT(person_id)) -      (SELECT COUNT(person_id) FROM games_competitor WHERE games_name = '1988 Summer') AS competitor_diff FROM      games_competitor WHERE      games_name IN ('1988 Summer', '1988 Winter') GROUP BY      games_name;
SELECT games_competitor.age, COUNT(games_competitor.age) as count_age FROM games_competitor GROUP BY games_competitor.age ORDER BY count_age DESC LIMIT 1;
SELECT c.city_name FROM city c JOIN games_city gc ON c.id = gc.city_id JOIN games g ON gc.games_id = g.id WHERE c.city_name LIKE 'M%';
Error: 第 4958 个样本有 0 个SQL。
SELECT m.medal_name FROM competitor_event ce JOIN medal m ON ce.medal_id = m.id WHERE ce.competitor_id IN (   SELECT pc.id   FROM person p   JOIN person_region pr ON p.id = pr.person_id   JOIN noc_region nr ON pr.region_id = nr.id   WHERE p.full_name = 'Coleen Dufresne' );
SELECT p.full_name FROM person p JOIN games_competitor gc ON p.id = gc.person_id JOIN competitor_event ce ON gc.id = ce.competitor_id GROUP BY p.full_name ORDER BY COUNT(ce.medal_id) DESC LIMIT 1;
Error: 第 4961 个样本有 0 个SQL。
Error: 第 4962 个样本有 0 个SQL。
SELECT full_name FROM person WHERE id = (   SELECT person_id   FROM games_competitor   WHERE age = (     SELECT MAX(age)     FROM games_competitor   ) );
SELECT games_year FROM games WHERE games_year IN (   SELECT games_id   FROM games_competitor   GROUP BY games_id   ORDER BY COUNT(gender = 'F') DESC   LIMIT 1 )
SELECT COUNT(*) FROM person JOIN person_region ON person.id = person_region.person_id JOIN noc_region ON person_region.region_id = noc_region.id JOIN games_competitor ON person.id = games_competitor.person_id WHERE person.gender = 'M' AND noc_region.region_name = 'Belgium';
SELECT COUNT(DISTINCT p.id)  FROM person p  JOIN games_competitor gc ON p.id = gc.person_id  JOIN games g ON gc.games_id = g.id  JOIN games_city gc2 ON g.id = gc2.games_id  JOIN city c ON gc2.city_id = c.id  WHERE c.city_name = 'Sapporo';
Error: 第 4967 个样本有 0 个SQL。
SELECT COUNT(DISTINCT person_id) FROM competitor_event JOIN event ON competitor_event.event_id = event.id WHERE event.event_name = 'Sailing Mixed 12 metres';
SELECT COUNT(DISTINCT e.id) FROM event e JOIN sport s ON e.sport_id = s.id WHERE s.sport_name = 'Modern Pentathlon';
SELECT      DIVIDE(COUNT(games_competitor.person_id), COUNT(games_competitor.person_id)) as percentage  FROM      games_competitor  JOIN      competitor_event ON games_competitor.id = competitor_event.competitor_id  JOIN      event ON competitor_event.event_id = event.id  JOIN      sport ON event.sport_id = sport.id  WHERE      sport.sport_name = 'Equestrianism'      AND event.event_name = 'Equestrianism Mixed Three-Day Event, Individual'      AND gender = 'F';
SELECT DIVIDE(SUM(gc.age), COUNT(gc.person_id))  FROM games_competitor gc  JOIN games g ON gc.games_id = g.id  WHERE g.games_name = '1992 Summer';
Error: 第 4972 个样本有 0 个SQL。
Error: 第 4973 个样本有 0 个SQL。
Error: 第 4974 个样本有 0 个SQL。
SELECT COUNT(*)  FROM person p  JOIN person_region pr ON p.id = pr.person_id  JOIN noc_region nr ON pr.region_id = nr.id  JOIN games_competitor gc ON p.id = gc.person_id  JOIN competitor_event ce ON gc.id = ce.competitor_id  WHERE nr.id = 151 AND ce.medal_id <> 4;
SELECT COUNT(*) FROM person JOIN person_region ON person.id = person_region.person_id JOIN noc_region ON person_region.region_id = noc_region.id WHERE noc_region.noc = 'CHN' AND games_name = '2016 Summer';
SELECT COUNT(m.id) FROM competitor_event ce JOIN event e ON ce.event_id = e.id JOIN medal m ON ce.medal_id = m.id WHERE m.medal_name = 'Gold' AND e.event_name = 'Ice Hockey Men''s Ice Hockey';
SELECT noc_region.region_name, MAX(COUNT(medal_id)) AS highest_medal_number FROM competitor_event JOIN person_region ON competitor_event.competitor_id = person_region.person_id JOIN noc_region ON person_region.region_id = noc_region.id GROUP BY noc_region.region_name ORDER BY highest_medal_number DESC LIMIT 1;
Error: 第 4979 个样本有 0 个SQL。
Error: 第 4980 个样本有 0 个SQL。
Error: 第 4981 个样本有 0 个SQL。
Error: 第 4982 个样本有 0 个SQL。
SELECT games_name, COUNT(person_id) AS participant_count FROM games_competitor JOIN games ON games_competitor.games_id = games.id WHERE season = 'Summer' GROUP BY games_name ORDER BY participant_count DESC;
SELECT COUNT(*)  FROM person p  JOIN person_region pr ON p.id = pr.person_id  JOIN noc_region nr ON pr.region_id = nr.id  JOIN games_competitor gc ON p.id = gc.person_id  JOIN competitor_event ce ON gc.id = ce.competitor_id  WHERE nr.region_name = 'Malaysia' AND ce.medal_id <> 4;
Error: 第 4985 个样本有 0 个SQL。
SELECT AVG(p.height)  FROM person p  JOIN competitor_event ce ON p.id = ce.competitor_id  JOIN event e ON ce.event_id = e.id  JOIN sport s ON e.sport_id = s.id  WHERE s.sport_name = 'Basketball' AND e.event_name = 'Basketball Men''s' AND p.gender = 'M';
SELECT COUNT(*) FROM person WHERE gender = 'F' AND person_id IN (   SELECT person_id   FROM person_region   WHERE region_id IN (     SELECT id     FROM noc_region     WHERE region_name = 'Philippines'   ) )
Error: 第 4988 个样本有 0 个SQL。
Error: 第 4989 个样本有 0 个SQL。
SELECT COUNT(*)  FROM person p  JOIN person_region pr ON p.id = pr.person_id  JOIN noc_region nr ON pr.region_id = nr.id  WHERE p.full_name = 'Clara Hughes';
SELECT COUNT(*)  FROM competitor_event  WHERE event_id IN (SELECT id FROM event WHERE sport_id IN (SELECT id FROM sport WHERE sport_name = 'Swimming') AND event_name = 'Swimming Men''s 200 metres Freestyle')  AND competitor_id IN (SELECT id FROM person WHERE full_name = 'Ian James Thorpe' AND gender = 'M');
SELECT COUNT(*)  FROM competitor_event ce  JOIN event e ON ce.event_id = e.id  JOIN medal m ON ce.medal_id = m.id  WHERE e.event_name = 'Gymnastics Women''s Individual All-Around' AND m.medal_name = 'Gold'  AND ce.competitor_id IN (   SELECT pc.id    FROM person p    JOIN person_region pr ON p.id = pr.person_id    JOIN noc_region nr ON pr.region_id = nr.id    WHERE p.full_name = 'Larysa Semenivna Latynina' AND nr.noc = 'Diriy-' )
Error: 第 4993 个样本有 0 个SQL。
SELECT COUNT(*)  FROM games  WHERE id IN (SELECT games_id FROM games_city WHERE city_id IN (SELECT id FROM city WHERE city_name = 'London'));
Error: 第 4995 个样本有 0 个SQL。
SELECT COUNT(*) FROM person p JOIN games_competitor gc ON p.id = gc.person_id JOIN games g ON gc.games_id = g.id WHERE g.games_name = '2016 Summer' AND p.age > 59;
SELECT games_name FROM games JOIN games_city ON games.id = games_city.games_id JOIN city ON games_city.city_id = city.id WHERE city.city_name = 'Los Angeles' GROUP BY games_name ORDER BY COUNT(games_name) DESC LIMIT 1;
Error: 第 4998 个样本有 0 个SQL。
SELECT AVG(gc.age) FROM games_competitor gc JOIN person p ON gc.person_id = p.id JOIN person_region pr ON p.id = pr.person_id JOIN noc_region nr ON pr.region_id = nr.id WHERE gc.games_id IN (   SELECT gc2.games_id   FROM games gc2   JOIN games_city gc3 ON gc2.id = gc3.games_id   JOIN city c ON gc3.city_id = c.id   WHERE c.city_name LIKE '%Summer%' AND gc2.games_year = 2016 ) AND nr.noc = 'USA';
SELECT region_name FROM noc_region WHERE noc = 'COL';
SELECT sport_name FROM sport WHERE id = 19;
SELECT id FROM event WHERE event_name = 'Shooting Mixed Skeet';
SELECT id FROM sport WHERE sport_name = 'hockey';
SELECT weight FROM person WHERE full_name = 'Dagfinn Sverre Aarskog';
SELECT id FROM city WHERE city_name = 'Rio de Janeiro';
SELECT COUNT(DISTINCT person_id) FROM competitor_event JOIN event ON competitor_event.event_id = event.id JOIN medal ON competitor_event.medal_id = medal.id WHERE event_name = 'Rowing Women''s Coxed Eights' AND medal_name = 'Gold';
Error: 第 5007 个样本有 0 个SQL。
Error: 第 5008 个样本有 0 个SQL。
Error: 第 5009 个样本有 0 个SQL。
SELECT COUNT(*) FROM person JOIN games_competitor ON person.id = games_competitor.person_id JOIN games ON games_competitor.games_id = games.id WHERE person.age = 20 AND games.games_name = '1984 Summer';
SELECT COUNT(DISTINCT g.id)  FROM games_competitor gc  JOIN person p ON gc.person_id = p.id  WHERE p.full_name = 'Prithipal Singh';
SELECT COUNT(*) FROM person WHERE id IN (   SELECT person_id   FROM games_competitor   WHERE games_id IN (     SELECT id     FROM games     WHERE games_name = '1984 Summer'   )   AND age > 50 )
SELECT COUNT(DISTINCT event_name) FROM event WHERE sport_id IN (   SELECT id   FROM sport   WHERE sport_name = 'Athletics' );
SELECT full_name FROM person WHERE region_name = 'Russia' ORDER BY weight DESC LIMIT 1;
SELECT p.height FROM person p JOIN person_region pr ON p.id = pr.person_id JOIN noc_region nr ON pr.region_id = nr.id WHERE nr.region_name = 'Portugal' ORDER BY p.height DESC LIMIT 1;
SELECT c.city_name FROM games g JOIN games_city gc ON g.id = gc.games_id JOIN city c ON gc.city_id = c.id WHERE g.games_name = '1968 Winter' AND g.season = 'Winter';
SELECT region_name FROM noc_region WHERE region_name = (SELECT region_name                      FROM person_region                      GROUP BY region_name                      ORDER BY COUNT(region_name) DESC                      LIMIT 1);
SELECT    DIVIDE(COUNT(p.id), COUNT(p.id)) as percentage FROM    person p   JOIN person_region pr ON p.id = pr.person_id   JOIN noc_region nr ON pr.region_id = nr.id WHERE    nr.region_name = 'Vanuatu' AND p.height > 175;
Error: 第 5019 个样本有 0 个SQL。
Error: 第 5020 个样本有 0 个SQL。
Error: 第 5021 个样本有 0 个SQL。
SELECT COUNT(*)  FROM games g  JOIN games_city gc ON g.id = gc.games_id  JOIN city c ON gc.city_id = c.id  WHERE g.season = 'Summer' AND c.city_name = 'Paris';
Error: 第 5023 个样本有 0 个SQL。
SELECT c.city_name FROM city c JOIN games_city gc ON c.id = gc.city_id GROUP BY c.city_name ORDER BY COUNT(gc.games_id) DESC LIMIT 1;
SELECT games_name FROM games JOIN games_city ON games.id = games_city.games_id JOIN city ON games_city.city_id = city.id WHERE city.city_name = 'Beijing' AND games_year = '2008';
SELECT    DIVIDE(COUNT(competitor_id), COUNT(competitor_id)) AS percentage FROM    competitor_event WHERE    medal_id = 1   AND age > 30;
SELECT games_competitor.age FROM games_competitor JOIN person ON person.id = games_competitor.person_id WHERE person.full_name = 'A Lamusi' AND games_competitor.games_id IN (   SELECT games.id   FROM games   WHERE games.games_name = '2012 Summer' )
SELECT COUNT(*)  FROM games_competitor gc  JOIN person p ON gc.person_id = p.id  WHERE gc.games_id IN (SELECT id FROM games WHERE games_name = '2000 Summer') AND p.age = 31;
Error: 第 5029 个样本有 0 个SQL。
SELECT person.full_name FROM person JOIN games_competitor ON person.id = games_competitor.person_id JOIN games ON games_competitor.games_id = games.id WHERE games.games_name = '1936 Summer';
SELECT p.full_name FROM person p JOIN games_competitor gc ON p.id = gc.person_id JOIN games g ON gc.games_id = g.id WHERE g.games_name = '2014 Winter' ORDER BY gc.age LIMIT 1;
SELECT AVG(gc.age) FROM games_competitor gc JOIN games g ON gc.games_id = g.id WHERE g.games_name = '1988 Winter';
SELECT    DIVIDE(COUNT(games_competitor.person_id), COUNT(games_competitor.person_id)) as percentage  FROM    games_competitor    JOIN person ON games_competitor.person_id = person.id  WHERE    games_competitor.games_id IN (SELECT id FROM games WHERE games_year = 1988)    AND person.gender = 'F'    AND person.height > 170;
SELECT s.sport_name FROM event e JOIN sport s ON e.sport_id = s.id WHERE e.event_name = 'Cross Country Skiing Men''s 10/15 kilometres Pursuit';
SELECT DIVIDE(COUNT(gc.games_id and gc.age > 24), COUNT(gc.games_id)) as percentage FROM games_competitor gc JOIN games g ON gc.games_id = g.id WHERE g.season = 'Winter';
SELECT pr.region_id FROM person p JOIN person_region pr ON p.id = pr.person_id WHERE p.full_name = 'Christine Jacoba Aaftink';
SELECT height  FROM person  WHERE person_id IN (SELECT person_id FROM person_region WHERE region_id = 7);
SELECT city_name FROM city JOIN games_city ON city.id = games_city.city_id WHERE games_city.games_id = 3;
Error: 第 5039 个样本有 0 个SQL。
SELECT COUNT(DISTINCT p.id) FROM person p JOIN games_competitor gc ON p.id = gc.person_id JOIN games g ON gc.games_id = g.id WHERE p.age < 30 AND g.season = 'Summer';
Error: 第 5041 个样本有 0 个SQL。
SELECT AVG(age)  FROM games_competitor  WHERE games_id IN (SELECT id FROM games WHERE season = 'Winter');
SELECT      DIVIDE(COUNT(games_competitor.age < 35), COUNT(games_competitor.person_id)) as percentage FROM      games_competitor JOIN      games ON games_competitor.games_id = games.id WHERE      games.season = 'Summer';
Error: 第 5044 个样本有 0 个SQL。
SELECT m.metal_name FROM competitor_event ce JOIN medal m ON ce.metal_id = m.id WHERE ce.competitor_id = 9;
SELECT e.id FROM event e JOIN competitor_event ce ON e.id = ce.event_id JOIN medal m ON ce.medal_id = m.id WHERE m.medal_name = 'Gold';
SELECT full_name FROM person WHERE weight = (SELECT MAX(weight) FROM person);
Error: 第 5048 个样本有 0 个SQL。
SELECT region_name FROM (   SELECT region_name, COUNT(*) as count   FROM person_region   GROUP BY region_name ) as t WHERE count = (SELECT MAX(count) FROM (   SELECT region_name, COUNT(*) as count   FROM person_region   GROUP BY region_name ) as t);
SELECT full_name FROM person WHERE age = (SELECT MAX(age) FROM person);
SELECT s.sport_name FROM person p JOIN games_competitor gc ON p.id = gc.person_id JOIN competitor_event ce ON gc.id = ce.competitor_id JOIN event e ON ce.event_id = e.id JOIN sport s ON e.sport_id = s.id WHERE p.full_name = 'John Aalberg';
SELECT COUNT(*)  FROM person p  JOIN person_region pr ON p.id = pr.person_id  JOIN noc_region nr ON pr.region_id = nr.id  JOIN games_competitor gc ON p.id = gc.person_id  WHERE nr.noc = 'BEL' AND p.gender = 'M';
Error: 第 5053 个样本有 0 个SQL。
Error: 第 5054 个样本有 0 个SQL。
SELECT c.city_name FROM games_city gc JOIN city c ON gc.city_id = c.id JOIN games_competitor gc2 ON gc.games_id = gc2.games_id JOIN person p ON gc2.person_id = p.id WHERE p.full_name = 'John Aalberg';
SELECT COUNT(g.id)  FROM games g  JOIN games_city gc ON g.id = gc.games_id  JOIN city c ON gc.city_id = c.id  WHERE c.city_name = 'Barcelona';
Error: 第 5057 个样本有 0 个SQL。
SELECT games_name FROM games JOIN games_city ON games.id = games_city.games_id JOIN city ON games_city.city_id = city.id WHERE city.city_name = 'Barcelona' ORDER BY COUNT(games_name) DESC LIMIT 1;
SELECT p.full_name  FROM person p  JOIN person_region pr ON p.id = pr.person_id  JOIN noc_region nr ON pr.region_id = nr.id  WHERE nr.region_name = 'Argentina';
SELECT AVG(age) FROM games_competitor JOIN person ON games_competitor.person_id = person.id JOIN person_region ON person.id = person_region.person_id JOIN noc_region ON person_region.region_id = noc_region.id WHERE games_name = '2012 Summer' AND noc = 'Argentina';
SELECT      DIVIDE(COUNT(ce.competitor_id), COUNT(ce.competitor_id)) * 100 as percentage FROM      competitor_event ce JOIN      event e ON ce.event_id = e.id JOIN      games_competitor gc ON ce.competitor_id = gc.id JOIN      person p ON gc.person_id = p.id JOIN      sport s ON e.sport_id = s.id WHERE      e.event_name = 'Basketball Men''s Basketball'     AND p.gender = 'M'     AND ce.medal_id IN (SELECT id FROM medal WHERE medal_name = 'Bronze');
SELECT g.games_name  FROM games_competitor gc  JOIN person p ON gc.person_id = p.id  WHERE p.full_name = 'Georgios Abaris';
SELECT p.full_name FROM person p JOIN person_region pr ON p.id = pr.person_id JOIN noc_region nr ON pr.region_id = nr.id WHERE nr.region_name = 'Greece';
SELECT AVG(age)  FROM games_competitor  WHERE games_id IN (SELECT id FROM games WHERE games_name = '1924 Winter');
SELECT nr.noc FROM person p JOIN person_region pr ON p.id = pr.person_id JOIN noc_region nr ON pr.region_id = nr.id WHERE p.weight = 77;
SELECT games_name  FROM games  JOIN games_city ON games.id = games_city.games_id  JOIN city ON games_city.city_id = city.id  WHERE city.city_name = 'Paris';
SELECT person.full_name  FROM person  JOIN games_competitor ON person.id = games_competitor.person_id  JOIN games ON games_competitor.games_id = games.id  WHERE games.games_name = '2000 Summer';
SELECT c.city_name FROM games_city gc JOIN city c ON gc.city_id = c.id JOIN games_competitor gc1 ON gc.games_id = gc1.games_id JOIN person p ON gc1.person_id = p.id WHERE gc1.age = (SELECT MAX(age) FROM games_competitor);
SELECT full_name FROM person WHERE age = (SELECT MIN(age) FROM games_competitor);
Error: 第 5070 个样本有 0 个SQL。
SELECT nr.noc, nr.region_name FROM person p JOIN person_region pr ON p.id = pr.person_id JOIN noc_region nr ON pr.region_id = nr.id WHERE p.id = (SELECT MAX(id) FROM person p2 WHERE p2.weight = (SELECT MAX(weight) FROM person));
SELECT g.games_year, g.games_name FROM games_competitor gc JOIN games g ON gc.games_id = g.id WHERE gc.person_id = (SELECT id FROM person WHERE full_name = 'Sohail Abbas');
Error: 第 5073 个样本有 0 个SQL。
Error: 第 5074 个样本有 0 个SQL。
SELECT season FROM games WHERE id IN (   SELECT games_id   FROM games_competitor   WHERE person_id IN (     SELECT id     FROM person     WHERE height = 180 AND weight = 73   ) )
SELECT p.full_name FROM person p JOIN games_competitor gc ON p.id = gc.person_id JOIN competitor_event ce ON gc.id = ce.competitor_id JOIN medal m ON ce.medal_id = m.id WHERE m.medal_name = 'Gold';
SELECT AVG(height)  FROM person p  JOIN games_competitor gc ON p.id = gc.person_id  WHERE gc.age BETWEEN 22 AND 28;
SELECT COUNT(*) FROM person JOIN person_region ON person.id = person_region.person_id JOIN noc_region ON person_region.region_id = noc_region.id WHERE person.gender = 'F' AND noc_region.region_name = 'Iran';
SELECT MAX(p.height)  FROM person p  JOIN games_competitor gc ON p.id = gc.person_id;
SELECT SUBTRACT(COUNT(games_competitor.age > 24 OR weight > 70), COUNT(games_competitor.age > 24 OR weight < 70))  FROM person, games_competitor, person_region, noc_region, city, games, event, sport WHERE person.id = games_competitor.person_id AND person_region.person_id = person.id AND noc_region.id = person_region.region_id AND city.id = games_city.city_id AND games.id = games_city.games_id AND event.id = competitor_event.event_id AND games_competitor.id = competitor_event.id AND weight IS NOT NULL AND games_competitor.age <= 24;
SELECT      DIVIDE(COUNT(gc.age), COUNT(gc.id)) as percentage  FROM      games_competitor gc  WHERE      gc.games_id IN (SELECT gc2.games_id FROM games gc2 WHERE gc2.games_name = '2014 Winter')      AND gc.age = 28;
SELECT nr.region_name FROM person p JOIN person_region pr ON p.id = pr.person_id JOIN noc_region nr ON pr.region_id = nr.id WHERE p.gender = 'M' AND p.height > (SELECT AVG(height) FROM person) * 0.87;
Error: 第 5083 个样本有 0 个SQL。
SELECT z.zip_code FROM zip_data z JOIN country c ON z.state = c.state AND z.county = c.county WHERE c.state = 'ARECIBO' ORDER BY z.avg_house_value DESC LIMIT 1;
Error: 第 5085 个样本有 0 个SQL。
SELECT COUNT(*)  FROM zip_data  WHERE state = (SELECT abbreviation FROM state WHERE name = 'Delaware')  AND daylight_savings = 'Yes';
SELECT zip_code FROM zip_data WHERE state_fips IN (SELECT fips FROM state WHERE name = 'ARECIBO') ORDER BY white_population DESC LIMIT 1;
SELECT county FROM zip_data WHERE avg_income_per_household = (SELECT MAX(avg_income_per_household) FROM zip_data)
SELECT c.name FROM country c JOIN zip_data z ON c.zip_code = z.zip_code WHERE z.daylight_savings = 'Yes' GROUP BY c.county, c.state HAVING COUNT(DISTINCT z.zip_code) > 0;
SELECT DISTINCT zip_data.zip_code FROM zip_data JOIN country ON zip_data.zip_code = country.zip_code JOIN state ON country.state = state.abbreviation WHERE state.name = 'Pennsylvania' AND country.county = 'HUNTINGDON' AND zip_data.employees > 30;
Error: 第 5091 个样本有 0 个SQL。
SELECT COUNT(*) FROM zip_data JOIN avoid ON zip_data.zip_code = avoid.zip_code WHERE avoid.bad_alias = 'Internal Revenue Service' AND zip_data.time_zone = 'Eastern';
SELECT b.bad_alias FROM avoid b JOIN zip_data a ON b.zip_code = a.zip_code WHERE a.avg_house_value = (SELECT MAX(avg_house_value) FROM zip_data)
SELECT a.bad_alias FROM zip_data zd JOIN alias a ON zd.zip_code = a.zip_code JOIN avoid av ON a.zip_code = av.zip_code WHERE zd.median_female_age > 32 AND zd.residential_mailboxes > 0;
SELECT MAX(male_population / female_population) AS highest_gender_ratio FROM zip_data WHERE state LIKE '%ARECIBO%';
SELECT AVG(median_female_age)  FROM zip_data  WHERE state = (SELECT abbreviation FROM state WHERE name = 'Puerto Rico')  AND county_fips IN (SELECT county_fips FROM country WHERE county = 'ARECIBO');
Error: 第 5097 个样本有 0 个SQL。
SELECT alias FROM alias, zip_data WHERE zip_data.city = 'Hartford' AND zip_data.zip_code = alias.zip_code;
SELECT COUNT(*)  FROM country  WHERE state = (SELECT abbreviation FROM state WHERE name = 'Alabama');
Error: 第 5100 个样本有 0 个SQL。
SELECT z.latitude, z.longitude FROM zip_data z JOIN area_code ac ON z.zip_code = ac.zip_code WHERE ac.area_code = 787;
SELECT COUNT(total_delivery_receptacles) FROM zip_data JOIN CBSA ON zip_data.CBSA = CBSA.CBSA WHERE state = 'CA' AND CBSA_type = 'Community Post Office' ORDER BY total_delivery_receptacles DESC LIMIT 1;
SELECT c.fips AS county_fips, c.name AS county_name FROM zip_data z JOIN country c ON z.state_fips = c.fips WHERE z.female_population = (SELECT MAX(female_population) FROM zip_data);
SELECT s.name FROM state s WHERE s.abbreviation NOT IN (   SELECT z.state   FROM zip_data z   WHERE z.organization IS NOT NULL )
SELECT MAX(population_2020) - population_2010 AS population_difference FROM zip_data JOIN CBSA ON zip_data.CBSA = CBSA.CBSA WHERE CBSA_name = 'Allentown-Bethlehem-Easton, PA-NJ';
SELECT DISTINCT zip_code FROM zip_data WHERE state = (SELECT abbreviation FROM state WHERE name = 'Delaware') AND county_fips IN (SELECT fips FROM country WHERE county = 'NEW CASTLE' AND state = (SELECT abbreviation FROM state WHERE name = 'Delaware'));
SELECT COUNT(*)  FROM congress  WHERE state = (SELECT state FROM zip_data WHERE monthly_benefits_retired_workers = (SELECT MAX(monthly_benefits_retired_workers) FROM zip_data));
SELECT COUNT(DISTINCT zip_data.city) FROM zip_data JOIN congress ON zip_data.state = congress.state AND congress.last_name = 'Murkowski' WHERE zip_data.employees = 0;
SELECT s.name, CONCAT(c.first_name, ' ', c.last_name) FROM state s JOIN congress c ON s.abbreviation = c.state WHERE s.name IN (   SELECT z.state   FROM zip_data z   GROUP BY z.state   ORDER BY SUM(z.asian_population) DESC   LIMIT 3 ) ORDER BY s.name;
Error: 第 5110 个样本有 0 个SQL。
SELECT c.party FROM congress c JOIN zip_congress z ON c.CID = z.district JOIN zip_data zd ON z.zip_code = zd.zip_code WHERE zd.zip_code = '91701';
Error: 第 5112 个样本有 0 个SQL。
Error: 第 5113 个样本有 0 个SQL。
SELECT area_code.area_code FROM zip_data JOIN area_code ON zip_data.zip_code = area_code.zip_code WHERE zip_data.zip_code IN (   SELECT zip_code   FROM zip_data   ORDER BY over_65 DESC   LIMIT 1 )
SELECT COUNT(*)  FROM avoid  WHERE zip_code IN (SELECT zip_code                     FROM congress                     WHERE last_name = 'Bennie' AND first_name = 'Thompson');
Error: 第 5116 个样本有 0 个SQL。
Error: 第 5117 个样本有 0 个SQL。
Error: 第 5118 个样本有 0 个SQL。
Error: 第 5119 个样本有 0 个SQL。
SELECT c.CBSA_name, c.CBSA_type, z.latitude, z.longitude FROM CBSA c JOIN zip_data z ON c.CBSA = z.CBSA WHERE z.zip_code = '45503';
SELECT c.county FROM country c JOIN congress con ON c.state = con.state WHERE con.last_name = 'Hartzler' AND con.first_name = 'Vicky';
Error: 第 5122 个样本有 0 个SQL。
SELECT AVG(female_median_age)  FROM congress c JOIN state s ON c.state = s.abbreviation WHERE c.last_name = 'DeSantis' AND c.first_name = 'Ron';
SELECT a.area_code FROM zip_data z JOIN area_code a ON z.zip_code = a.zip_code WHERE z.city = 'Bishopville' AND z.state = 'SC';
Error: 第 5125 个样本有 0 个SQL。
SELECT city, state FROM zip_data JOIN alias ON zip_data.zip_code = alias.zip_code JOIN avoid ON alias.zip_code = avoid.zip_code WHERE avoid.bad_alias = 'Lawrenceville';
Error: 第 5127 个样本有 0 个SQL。
Error: 第 5128 个样本有 0 个SQL。
SELECT CBSA.CBSA_name, CBSA.CBSA_type FROM CBSA JOIN zip_data ON CBSA.CBSA = zip_data.CBSA WHERE zip_data.city = 'York' AND zip_data.state = 'ME';
SELECT z.city, z.zip_code, a.area_code FROM zip_data z JOIN area_code a ON z.zip_code = a.zip_code WHERE z.median_age > 40 ORDER BY z.median_age LIMIT 10;
Error: 第 5131 个样本有 0 个SQL。
Error: 第 5132 个样本有 0 个SQL。
SELECT z.zip_code, c.first_name, c.last_name, z.land_area FROM congress c JOIN zip_congress zc ON c.state = zc.zip_code JOIN zip_data z ON zc.zip_code = z.zip_code WHERE c.state = (SELECT abbreviation FROM state WHERE name = 'Wisconsin') ORDER BY z.land_area DESC LIMIT 1;
Error: 第 5134 个样本有 0 个SQL。
Error: 第 5135 个样本有 0 个SQL。
SELECT      (COUNT(CASE WHEN party = 'Democrat' THEN 1 END) / COUNT(CASE WHEN party = 'Republican' THEN 1 END)) * 100 AS percentage_ratio,     zip_code FROM      congress JOIN      state ON congress.state = state.abbreviation WHERE      state.name = 'Indiana'     AND party IN ('Democrat', 'Republican') GROUP BY      zip_code ORDER BY      percentage_ratio;
SELECT COUNT(CASE WHEN state = 'Alabama' THEN 1 END) / COUNT(CASE WHEN state = 'Illinois' THEN 1 END) AS ratio FROM congress;
SELECT AVG(population_2020)  FROM zip_data  GROUP BY zip_code;
Error: 第 5139 个样本有 0 个SQL。
SELECT CBSA.CBSA FROM CBSA GROUP BY CBSA.CBSA HAVING COUNT(CBSA.CBSA) > 10;
Error: 第 5141 个样本有 0 个SQL。
SELECT zip_data.longitude, zip_data.latitude FROM congress JOIN zip_congress ON congress.CID = zip_congress.zip_code JOIN zip_data ON zip_congress.zip_code = zip_data.zip_code WHERE congress.first_name = 'Grayson' AND congress.last_name = 'Alan';
Error: 第 5143 个样本有 0 个SQL。
Error: 第 5144 个样本有 0 个SQL。
SELECT z.zip_code FROM zip_data z JOIN area_code ac ON z.zip_code = ac.zip_code JOIN state s ON z.state = s.name WHERE s.name = 'Massachusetts' GROUP BY z.zip_code HAVING COUNT(ac.area_code) > 1;
SELECT c.fips as county FROM zip_data z JOIN state s ON z.state = s.name WHERE z.city = 'Arecibo' AND s.name = 'Puerto Rico';
SELECT COUNT(DISTINCT zip_data.zip_code) FROM zip_data JOIN CBSA ON zip_data.CBSA = CBSA.CBSA WHERE CBSA.CBSA_name = 'Barre, VT';
Error: 第 5148 个样本有 0 个SQL。
SELECT      zip_data.CBSA,      zip_congress.district,      population_2020 - population_2010 AS difference FROM      zip_congress JOIN      congress ON zip_congress.zip_code = congress.state_fips JOIN      zip_data ON zip_congress.zip_code = zip_data.zip_code WHERE      congress.last_name = 'Tim' AND congress.first_name = 'Griffin';
SELECT (z.asian_population / z.population_2020) * 100 FROM zip_data z JOIN CBSA c ON z.CBSA = c.CBSA WHERE c.CBSA_name = 'Atmore, AL';
Error: 第 5151 个样本有 0 个SQL。
SELECT c.name AS country, s.name AS state, z.city FROM zip_data z JOIN country c ON z.state = c.state AND z.county = c.county JOIN state s ON z.state = s.abbreviation WHERE z.elevation = 1039;
SELECT a.alias, z.elevation FROM alias a JOIN zip_data z ON a.zip_code = z.zip_code WHERE z.zip_code = '1028';
SELECT area_code.area_code FROM congress JOIN zip_data ON congress.state = zip_data.state WHERE land_area = (SELECT MAX(land_area) FROM zip_data);
SELECT area_code.area_code FROM zip_data JOIN area_code ON zip_data.zip_code = area_code.zip_code WHERE white_population BETWEEN 1700 AND 2000;
SELECT SUM(asian_population)  FROM zip_data  WHERE city IN (SELECT alias FROM alias WHERE alias = 'Leeds');
Error: 第 5157 个样本有 0 个SQL。
Error: 第 5158 个样本有 0 个SQL。
Error: 第 5159 个样本有 0 个SQL。
Error: 第 5160 个样本有 0 个SQL。
Error: 第 5161 个样本有 0 个SQL。
SELECT a.alias  FROM alias a  JOIN zip_data z ON a.zip_code = z.zip_code  WHERE z.type = 'Post Office'  GROUP BY a.alias  ORDER BY COUNT(a.alias) DESC  LIMIT 5;
SELECT SUBTRACT(COUNT(type = 'P.O. Box Only'), COUNT(type = 'Post Office'))  FROM zip_data  WHERE area_code = 787;
SELECT      DIVIDE(SUBTRACT(SUM(population_2020)), SUM(population_2010)),      SUM(population_2010) as percentage  FROM      zip_data  WHERE      state = (SELECT abbreviation FROM state WHERE name = 'Arroyo')      AND multi_county = 'Y';
SELECT zip_data.zip_code, city FROM zip_data JOIN state ON zip_data.state = state.name WHERE state.name = 'Texas' AND total_beneficiaries > 10000;
SELECT COUNT(*)  FROM zip_data  WHERE state = (SELECT abbreviation FROM state WHERE name = 'District of Columbia')  AND black_population > 20000;
SELECT z.city, a.alias FROM zip_data z JOIN alias a ON z.zip_code = a.zip_code WHERE z.zip_code = '19019';
Error: 第 5168 个样本有 0 个SQL。
SELECT z.zip_code, z.city, c.first_name || ' ' || c.last_name FROM zip_data z JOIN congress c ON z.state = c.state AND z.CBSA = c.CBSA WHERE z.population_2020 = (SELECT MAX(population_2020) FROM zip_data)
SELECT COUNT(DISTINCT zip_code) FROM zip_data WHERE daylight_savings = 'Yes' AND region = 'Midwest' AND state = (SELECT name FROM state WHERE name = 'Illinois');
SELECT country.zip_code, country.county, country.state FROM country JOIN state ON country.state = state.name WHERE state.name = 'Virgin Islands';
Error: 第 5172 个样本有 0 个SQL。
SELECT COUNT(zip_code)  FROM congress  WHERE first_name = 'Smith' AND last_name = 'Adrian'  UNION ALL  SELECT COUNT(zip_code)  FROM congress  WHERE first_name = 'Heck' AND last_name = 'Joe';
SELECT z.zip_code, c.CBSA_name FROM zip_data z JOIN CBSA c ON z.CBSA = c.CBSA WHERE z.city = 'Oxford';
Error: 第 5175 个样本有 0 个SQL。
SELECT zip_data.zip_code, congress.first_name, congress.last_name FROM zip_data JOIN zip_congress ON zip_data.zip_code = zip_congress.zip_code JOIN congress ON zip_congress.district = congress.District WHERE zip_data.organization = 'Readers Digest';
SELECT      DIVIDE(COUNT(z.zip_code), COUNT(z.zip_code)) as percentage  FROM      zip_data z  JOIN      state s ON z.state = s.name  WHERE      s.name = 'California'  AND z.type = 'Post Office';
SELECT z.zip_code FROM zip_congress z JOIN congress c ON z.zip_code = c.state_fips WHERE c.House = 'Senate';
SELECT city FROM zip_data WHERE zip_code IN (   SELECT zip_code   FROM avoid   GROUP BY zip_code   ORDER BY COUNT(bad_alias) DESC   LIMIT 1 )
SELECT country.county FROM country, state WHERE country.state = state.name AND state.name = 'Georgia';
SELECT zip_data.latitude, zip_data.longitude FROM zip_data JOIN area_code ON zip_data.zip_code = area_code.zip_code WHERE area_code.area_code = '410';
SELECT CBSA_name FROM zip_data JOIN CBSA ON zip_data.CBSA = CBSA.CBSA ORDER BY avg_house_value DESC LIMIT 1;
SELECT a.bad_alias FROM alias AS a JOIN zip_data AS z ON a.zip_code = z.zip_code JOIN state AS s ON z.state = s.name WHERE s.name = 'New York' AND z.city = 'East Setauket';
Error: 第 5184 个样本有 0 个SQL。
SELECT area_code.zip_code FROM zip_data JOIN area_code ON zip_data.zip_code = area_code.zip_code WHERE asian_population = (SELECT MAX(asian_population) FROM zip_data);
Error: 第 5186 个样本有 0 个SQL。
SELECT s.name FROM state s JOIN (   SELECT state_fips, COUNT(*) as max_count   FROM zip_data   GROUP BY state_fips   ORDER BY max_count DESC   LIMIT 1 ) t ON s.abbreviation = t.state_fips
Error: 第 5188 个样本有 0 个SQL。
SELECT AVG(avg_income_per_household)  FROM zip_data  WHERE city IN (SELECT alias FROM alias WHERE bad_alias = 'Danzig');
SELECT s.name  FROM state s  WHERE s.name IN (   SELECT z.state    FROM zip_data z    WHERE z.female_population > (     SELECT SUM(female_population) / COUNT(state)      FROM zip_data   ) );
SELECT      DIVIDE(SUM(households WHERE zip_data.state = (SELECT name FROM state WHERE abbreviation = 'TX' AND name = 'CORYELL')),             SUM(households)) AS percentage
Error: 第 5192 个样本有 0 个SQL。
SELECT c.name FROM zip_data z JOIN country c ON z.state = c.state AND z.county = c.county WHERE z.city = 'Las Marias';
SELECT COUNT(DISTINCT city)  FROM zip_data  JOIN congress ON zip_data.state = congress.state AND zip_data.CBSA = congress.CBSA  WHERE last_name = 'Pierluisi' AND first_name = 'Pedro';
SELECT a.alias FROM alias a JOIN zip_data z ON a.zip_code = z.zip_code WHERE z.city = 'Aguadilla' AND a.alias IN (SELECT bad_alias FROM avoid);
SELECT congress.first_name, congress.last_name FROM congress JOIN zip_data ON congress.state = zip_data.state WHERE zip_data.city = 'Guanica';
SELECT s.name FROM state s JOIN (   SELECT country.state, COUNT(avoid.bad_alias) AS bad_alias_count   FROM country   JOIN avoid ON country.zip_code = avoid.zip_code   GROUP BY country.state   ORDER BY bad_alias_count DESC   LIMIT 1 ) AS bad_aliases ON s.abbreviation = bad_aliases.state
SELECT    SUBTRACT(     COUNT(bad_alias)      WHERE city = 'Aguada',      COUNT(bad_alias)      WHERE city = 'Aguadilla')  AS difference_in_bad_alias;
SELECT s.name FROM state s JOIN CBSA c ON s.abbreviation = c.state WHERE COUNT(c.CBSA_type = 'Metro') > 50 GROUP BY s.name;
Error: 第 5200 个样本有 0 个SQL。
Error: 第 5201 个样本有 0 个SQL。
SELECT country.name FROM country JOIN zip_data ON country.zip_code = zip_data.zip_code WHERE zip_data.households = (SELECT MAX(households) FROM zip_data)
SELECT      DIVIDE(SUM(households > 10000), SUM(households)) as percentage FROM      zip_data WHERE      residential_mailboxes > 0     AND zip_data.country > 10000;
SELECT      DIVIDE(COUNT(type = 'Post Office' ), COUNT(type)) as percentage  FROM      zip_data  WHERE      state = (SELECT name FROM state WHERE abbreviation = 'VI') AND      city = 'Saint Croix';
Error: 第 5205 个样本有 0 个SQL。
SELECT zip_data.elevation FROM zip_data JOIN alias ON zip_data.zip_code = alias.zip_code WHERE alias.alias = 'East Longmeadow';
SELECT COUNT(DISTINCT city) FROM zip_data WHERE daylight_savings = 'No';
Error: 第 5208 个样本有 0 个SQL。
SELECT z.city, a.type FROM zip_data z JOIN alias a ON z.zip_code = a.zip_code WHERE a.alias = 'St Thomas';
Error: 第 5210 个样本有 0 个SQL。
SELECT area_code.area_code FROM zip_data JOIN area_code ON zip_data.zip_code = area_code.zip_code WHERE zip_data.water_area = (SELECT MAX(water_area) FROM zip_data);
SELECT alias FROM zip_data JOIN alias ON zip_data.zip_code = alias.zip_code WHERE population_2020 = (SELECT MAX(population_2020) FROM zip_data)
Error: 第 5213 个样本有 0 个SQL。
SELECT area_code.area_code FROM zip_data JOIN area_code ON zip_data.zip_code = area_code.zip_code WHERE hispanic_population = (SELECT MAX(hispanic_population) FROM zip_data);
SELECT alias FROM zip_data JOIN alias ON zip_data.zip_code = alias.zip_code WHERE zip_data.asian_population = 7;
SELECT AVG(white_population) FROM zip_data WHERE area_code = 920;
SELECT      DIVIDE(COUNT(country.zip_code), COUNT(DISTINCT zip_data.zip_code)) as percentage FROM      zip_data JOIN      alias ON zip_data.zip_code = alias.zip_code JOIN      country ON zip_data.zip_code = country.zip_code WHERE      alias.alias = 'Ponce' AND country.state_fips < 20;
SELECT country.zip_code, country.state, country.county, zip_data.population_2020 FROM country JOIN zip_data ON country.zip_code = zip_data.zip_code WHERE zip_data.population_2020 > (SELECT MULTIPLY(0.97, AVG(population_2020)) FROM zip_data);
SELECT COUNT(DISTINCT zip_data.zip_code) FROM zip_data JOIN zip_congress ON zip_data.zip_code = zip_congress.zip_code WHERE zip_congress.state = (SELECT state FROM congress WHERE last_name = 'Kirkpatrick' AND first_name = 'Ann');
Error: 第 5220 个样本有 0 个SQL。
SELECT z.zip_code, z.city, CONCAT(z.latitude, ', ', z.longitude) AS location FROM zip_data z JOIN alias a ON z.zip_code = a.zip_code JOIN avoid av ON a.alias = av.bad_alias WHERE av.bad_alias = 'Shared Reshipper';
Error: 第 5222 个样本有 0 个SQL。
SELECT COUNT(*)  FROM zip_data  WHERE CBSA IN (SELECT CBSA FROM CBSA WHERE CBSA_name = 'New York-Newark-Jersey City, NY-NJ-PA');
Error: 第 5224 个样本有 0 个SQL。
SELECT COUNT(DISTINCT zip_code) AS postal_points, 'West Virginia' AS state FROM zip_data JOIN state ON zip_data.state = state.name WHERE state.name = 'West Virginia';
SELECT zip_data.zip_code, area_code.area_code FROM zip_data JOIN area_code ON zip_data.zip_code = area_code.zip_code WHERE zip_data.type = 'Community Post Office' AND zip_data.elevation > 6000;
Error: 第 5227 个样本有 0 个SQL。
Error: 第 5228 个样本有 0 个SQL。
SELECT CBSA_name FROM CBSA JOIN zip_data ON CBSA.CBSA = zip_data.CBSA WHERE employees = (SELECT MAX(employees) FROM zip_data);
Error: 第 5230 个样本有 0 个SQL。
SELECT DIVIDE(SUM(total_beneficiaries), COUNT(zip_code))  FROM zip_data  WHERE state = (SELECT name FROM state WHERE abbreviation = 'GU');
SELECT    DIVIDE(COUNT(c.party = 'Democrat'), COUNT(c.congress_rep_id)) as percentage,   COUNT(z.zip_code) as num_postal_points FROM    congress c   JOIN zip_congress z ON c.state = z.state AND c.District = z.district WHERE    c.party = 'Democrat' AND c.state = 'Hawaii';
SELECT BrandName FROM rootbeerbrand ORDER BY FirstBrewedYear LIMIT 1;
SELECT COUNT(DISTINCT rootbeerbrand.BreweryName)  FROM rootbeerbrand  WHERE country = 'United States';
SELECT BrandName FROM rootbeerbrand WHERE FacebookPage IS NOT NULL;
SELECT r.BrandName FROM rootbeerbrand r ORDER BY (r.CurrentRetailPrice - r.WholesaleCost) ASC LIMIT 1;
Error: 第 5237 个样本有 0 个SQL。
SELECT City FROM rootbeerbrand WHERE BrandName = 'AJ Stephans' AND BreweryName = 'AJ Stephans Beverages';
SELECT COUNT(*) FROM transaction WHERE CustomerID IN (   SELECT CustomerID   FROM customers   WHERE First = 'Frank-Paul' AND Last = 'Santangelo' ) AND SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '07';
SELECT COUNT(*)  FROM transaction  WHERE SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '07' AND customers.Gender = 'M';
SELECT COUNT(*)  FROM customers, transaction  WHERE customers.SubscribedToEmailList = 'TRUE'  AND transaction.CreditCardType = 'Visa'  AND SUBSTR(transaction.TransactionDate, 1, 4) = '2014'  AND SUBSTR(transaction.TransactionDate, 6, 2) = '07';
SELECT First || ' ' || Last AS Full_Name FROM customers WHERE CustomerID IN (   SELECT CustomerID   FROM transaction   WHERE SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08'   GROUP BY CustomerID   ORDER BY COUNT(TransactionID) DESC   LIMIT 1 );
SELECT r.BrandID, rb.BrandName FROM rootbeer r JOIN rootbeerreview rr ON r.RootBeerID = rr.BrandID JOIN transaction t ON r.RootBeerID = t.RootBeerID JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.First = 'Frank-Paul' AND c.Last = 'Santangelo' AND t.TransactionDate = '2014-07-07';
Error: 第 5244 个样本有 0 个SQL。
SELECT COUNT(*)  FROM transaction  WHERE SUBSTR(TransactionDate, 1, 4) = '2014'  AND SUBSTR(TransactionDate, 6, 2) = '08'  AND RootBeerID IN (SELECT RootBeerID FROM rootbeer WHERE BrandID IN (SELECT BrandID FROM rootbeerbrand WHERE BrandName = 'Bulldog'));
SELECT c.First, c.Last FROM customers c JOIN rootbeer r ON c.CustomerID = r.CustomerID JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE rb.BreweryName = 'AJ Stephans Beverages';
Error: 第 5247 个样本有 0 个SQL。
SELECT CreditCardNumber FROM transaction WHERE TransactionDate = '2014-07-07' AND CustomerID IN (   SELECT CustomerID   FROM customers   WHERE First = 'Frank-Paul' AND Last = 'Santangelo' );
Error: 第 5249 个样本有 0 个SQL。
SELECT DISTINCT TransactionDate FROM transaction WHERE CustomerID IN (   SELECT CustomerID   FROM customers   WHERE Gender = 'M' ) GROUP BY TransactionDate HAVING COUNT(CustomerID) > 3;
SELECT DIVIDE(SUM(COUNT(RootBeerID)), 31)  FROM transaction  WHERE BrandID = (SELECT BrandID FROM rootbeerbrand WHERE BrandName = 'A&W')  AND SUBSTR(TransactionDate, 1, 4) = '2014'  AND SUBSTR(TransactionDate, 6, 2) = '08';
SELECT    DIVIDE(MULTIPLY(SUM(CASE WHEN r.BrandID IN (SELECT BrandID FROM rootbeerbrand WHERE BreweryName = 'AJ Stephans Beverages') THEN 1 ELSE 0 END), 1.0), COUNT(r.RootBeerID))  FROM    transaction t    JOIN rootbeer r ON t.RootBeerID = r.RootBeerID  WHERE    SUBSTR(t.TransactionDate, 1, 4) = '2014';
Error: 第 5253 个样本有 0 个SQL。
SELECT CreditCardNumber FROM transaction WHERE CustomerID IN (   SELECT CustomerID   FROM customers   WHERE First = 'Lisa' AND Last = 'Ling' )
SELECT Latitude, Longitude FROM geolocation WHERE LocationID IN (   SELECT LocationID   FROM location   WHERE LocationName = 'Sac State American River Courtyard' );
Error: 第 5256 个样本有 0 个SQL。
SELECT City FROM customers WHERE CustomerID IN (   SELECT CustomerID   FROM transaction   WHERE TransactionID = 103545 )
SELECT PhoneNumber FROM customers WHERE CustomerID IN (   SELECT CustomerID   FROM transaction   WHERE CreditCardNumber = '6011179359005380' );
SELECT First || ' ' || Last AS FullName FROM customers WHERE CustomerID IN (   SELECT CustomerID   FROM rootbeerreview   GROUP BY CustomerID   ORDER BY COUNT(CustomerID) DESC   LIMIT 1 )
SELECT FirstPurchaseDate FROM customers WHERE CustomerID IN (   SELECT CustomerID   FROM rootbeerreview   WHERE Review = 'Tastes like Australia.' );
SELECT FirstPurchaseDate FROM customers WHERE First = 'Natalie' AND Last = 'Dorris';
SELECT r.BrandName FROM rootbeerbrand r JOIN (   SELECT BrandID, COUNT(*) AS total_5_star_ratings   FROM rootbeerreview   WHERE StarRating = 5   GROUP BY BrandID   ORDER BY total_5_star_ratings DESC   LIMIT 1 ) AS most_5_star_ratings ON r.BrandID = most_5_star_ratings.BrandID;
SELECT c.SubscribedToEmailList FROM customers c JOIN rootbeerreview r ON c.CustomerID = r.CustomerID JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE r.StarRating = 3 AND rb.BrandName = 'Frostie' AND r.ReviewDate = '2014-04-24';
SELECT rwh.CurrentRetailPrice FROM rootbeerbrand rbb JOIN rootbeerreview rbr ON rbb.BrandID = rbr.BrandID JOIN rootbeer rwh ON rbr.BrandID = rwh.BrandID WHERE rbr.Review = 'The quintessential dessert root beer. No ice cream required.';
SELECT    MULTIPLY(     DIVIDE(       SUM(StarRating)        WHERE BrandName = 'River City' AND StarRating = 5     ),      1.0 /      COUNT(BrandID)      WHERE BrandName = 'River City'   ) * 100 AS Percentage
SELECT AVG(COUNT(CustomerID))  FROM rootbeerreview  WHERE BrandID IN (SELECT BrandID FROM rootbeerbrand WHERE State = 'CA')  DIVIDE BY COUNT(DISTINCT BrandID);
SELECT COUNT(*) FROM customers WHERE Gender = 'F' AND SubscribedToEmailList = 'TRUE';
SELECT BrandName FROM rootbeerbrand ORDER BY FirstBrewedYear LIMIT 1;
SELECT CONCAT(First, ' ', Last) AS FullName FROM customers ORDER BY FirstPurchaseDate LIMIT 10;
SELECT COUNT(*)  FROM rootbeerbrand  WHERE Country = 'Australia';
SELECT COUNT(*) FROM customers WHERE First = 'Charles' AND City = 'Sacramento';
SELECT COUNT(*)  FROM transaction  WHERE CreditCardType = 'MasterCard'  AND TransactionDate >= '2014-01-01'  AND TransactionDate <= '2014-12-31';
SELECT r.BrandID, rb.BrandName FROM rootbeerreview r JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE r.CustomerID = (   SELECT c.CustomerID   FROM customers c   WHERE c.First = 'Jayne' AND c.Last = 'Collins' ) AND r.StarRating = (   SELECT MIN(StarRating)   FROM rootbeerreview   WHERE CustomerID = (     SELECT c.CustomerID     FROM customers c     WHERE c.First = 'Jayne' AND c.Last = 'Collins'   ) );
SELECT COUNT(*) FROM rootbeer r JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID JOIN location l ON r.LocationID = l.LocationID WHERE r.ContainerType = 'Bottle' AND rb.CaneSugar = 'FALSE' AND r.PurchaseDate <= '2015-12-31' AND l.LocationName = 'Sac State American River Courtyard'
SELECT r.BrandID, rb.BreweryName FROM rootbeer r JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE r.PurchaseDate >= '2016-01-01' AND r.PurchaseDate <= '2016-12-31' GROUP BY r.BrandID, rb.BreweryName ORDER BY COUNT(r.BrandID) DESC LIMIT 1;
SELECT c.First, c.Last FROM customers c JOIN rootbeerreview r ON c.CustomerID = r.CustomerID JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE rb.BrandName = 'River City' AND r.StarRating = 5;
SELECT COUNT(RootBeerID)  FROM transaction  WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Last = 'Hanks')  AND TransactionDate >= '2015-01-01'  AND TransactionDate < '2016-12-31';
SELECT r.BrandName FROM rootbeerbrand r JOIN rootbeerreview rr ON r.BrandID = rr.BrandID GROUP BY r.BrandName ORDER BY COUNT(CASE WHEN rr.StarRating = 5 THEN 1 END) DESC;
SELECT COUNT(*)  FROM transaction  WHERE RootBeerID IN (   SELECT RootBeerID    FROM rootbeer    WHERE BrandID IN (     SELECT BrandID      FROM rootbeerbrand      WHERE BrandName = 'Henry Weinhard''s'   ) )  AND CustomerID IN (   SELECT CustomerID    FROM customers    WHERE First = 'Nicholas'    AND Last = 'Sparks' );
SELECT BrandName FROM rootbeerbrand WHERE FacebookPage IS NULL AND Twitter IS NULL ORDER BY MAX(COUNT(BrandID)) DESC LIMIT 1;
SELECT l.LocationName, COUNT(r.RootBeerID) AS TotalRootBeerSold FROM rootbeer r JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID JOIN location l ON r.LocationID = l.LocationID WHERE l.LocationName IN ('Sac State American River Courtyard', 'Sac State Union') AND rb.BrandName = 'Dog n Suds' GROUP BY l.LocationName ORDER BY TotalRootBeerSold DESC LIMIT 1;
SELECT COUNT(*) FROM rootbeer JOIN rootbeerbrand ON rootbeer.BrandID = rootbeerbrand.BrandID WHERE ContainerType = 'Can' AND BrandName = 'A&W' AND PurchaseDate >= '2016-01-01' AND PurchaseDate <= '2016-12-31';
SELECT Latitude, Longitude FROM geolocation WHERE LocationID IN (   SELECT LocationID   FROM location   WHERE LocationName = 'Sac State Union' );
SELECT r.BrandID, rb.BrandName FROM rootbeerreview r JOIN rootbeer rb ON r.BrandID = rb.BrandID GROUP BY r.BrandID, rb.BrandName HAVING COUNT(r.CustomerID) >= 5 AND MAX(r.StarRating) = 5;
SELECT    BrandName,    (SUM(CASE WHEN PurchaseDate >= '2014-01-01' AND PurchaseDate <= '2016-12-31' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS PercentageOfPurchases FROM    rootbeer   JOIN rootbeerbrand ON rootbeer.BrandID = rootbeerbrand.BrandID WHERE    rootbeerbrand.BreweryName = 'Dr Pepper Snapple Group' GROUP BY    BrandName
SELECT rb.BrandID, rb.BrandName,         MIN(rb.BrandID, rb.BrandName) AS lowest_unit_profit_brand,         MAX(COUNT(c.CustomerID)) AS highest_number_of_purchases_customer FROM rootbeerbrand rb JOIN rootbeer r ON rb.BrandID = r.BrandID JOIN transaction t ON r.RootBeerID = t.RootBeerID JOIN customers c ON t.CustomerID = c.CustomerID GROUP BY rb.BrandID, rb.BrandName ORDER BY MIN(rb.BrandID, rb.BrandName);
SELECT First, Last, PhoneNumber FROM customers WHERE Gender = 'M' AND City = 'Fair Oaks' AND SubscribedToEmailList = 'TRUE';
SELECT      MULTIPLY(         DIVIDE(             SUM(ContainerType = 'Can'),              COUNT(RootBeerID)              WHERE PurchaseDate >= '2014-01-01' AND PurchaseDate <= '2014-12-31'         ),          1.0     ) AS Percentage_Sold_In_Cans
SELECT BrandName FROM rootbeerbrand WHERE FirstBrewedYear >= 1996 AND FirstBrewedYear <= 2000 ORDER BY FirstBrewedYear DESC;
SELECT r.BrandID FROM rootbeerreview r JOIN rootbeer b ON r.BrandID = b.BrandID GROUP BY r.BrandID ORDER BY COUNT(CASE WHEN r.StarRating = 1 THEN 1 END) DESC LIMIT 1;
SELECT    MULTIPLY(DIVIDE(SUM(CreditCardType = 'Visa'), COUNT(TransactionID)), 1.0) AS PercentageVisa FROM    transaction;
SELECT COUNT(DISTINCT BrandID) FROM rootbeerbrand WHERE AvailableInCans = 'TRUE' AND CornSyrup = 'TRUE' AND ArtificialSweetener = 'TRUE';
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN LocationName = 'Sac State American River Courtyard' THEN 1 ELSE 0 END), COUNT(LocationID)), 1.0) AS PercentageOfSales FROM    transaction
SELECT AVG(DIVIDE(COUNT(RootBeerID WHERE Caffeinated = 'TRUE'), COUNT(TransactionDate))) AS Average_Caffeinated_RootBeers_Sold_Daily FROM transaction, rootbeer WHERE transaction.RootBeerID = rootbeer.RootBeerID AND Caffeinated = 'TRUE';
SELECT      r.ContainerType,      r.BrandID,      r.CurrentRetailPrice,      r.WholesaleCost,      (r.CurrentRetailPrice - r.WholesaleCost) AS ProfitPerUnit FROM      rootbeer r WHERE      (r.CurrentRetailPrice - r.WholesaleCost) IN (         SELECT              MAX((CurrentRetailPrice - WholesaleCost)) AS MaxProfit         FROM              rootbeer     ),     (r.CurrentRetailPrice - r.WholesaleCost) IN (         SELECT              MIN((CurrentRetailPrice - WholesaleCost)) AS MinProfit         FROM              rootbeer     );
SELECT AVG(PurchasePrice)  FROM transaction  WHERE PurchasePrice > 2 AND ContainerType = 'Bottle';
SELECT COUNT(*)  FROM rootbeer  WHERE ContainerType = 'Bottle'  AND LocationID IN (SELECT LocationID FROM location WHERE Latitude = 38.559615 AND Longitude = -121.42243);
SELECT      MULTIPLY(DIVIDE(SUM(CustomerID WHERE StarRating > 3), COUNT(CustomerID) WHERE SubscribedToEmailList = 'FALSE'), 1.0) AS Percentage FROM      rootbeerreview WHERE      SubscribedToEmailList = 'FALSE'
SELECT rb.BrandName FROM rootbeerbrand rb JOIN rootbeerreview r ON rb.BrandID = r.BrandID WHERE r.FirstPurchaseDate = '2012-01-01' AND r.StarRating = 5 GROUP BY rb.BrandName ORDER BY COUNT(r.StarRating) DESC LIMIT 1;
SELECT COUNT(*) FROM customers JOIN transaction ON customers.CustomerID = transaction.CustomerID JOIN rootbeer ON transaction.RootBeerID = rootbeer.RootBeerID JOIN rootbeerbrand ON rootbeer.BrandID = rootbeerbrand.BrandID WHERE customers.Gender = 'F' AND rootbeerbrand.ArtificialSweetener = 'TRUE';
SELECT      SUM(CASE WHEN CaneSugar = 'TRUE' THEN 1 ELSE 0 END) -      SUM(CASE WHEN CornSyrup = 'TRUE' THEN 1 ELSE 0 END) AS difference FROM      rootbeer
SELECT r.BrandName, COUNT(r.BrandID) as MostSold FROM rootbeer r JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE rb.FirstBrewedYear <= 2015 AND rb.FirstBrewedYear >= 1900 GROUP BY r.BrandName ORDER BY MostSold DESC LIMIT 1;
SELECT      MULTIPLY(         DIVIDE(             SUM(BrandID)              WHERE BrandName = 'Dominion'              AND TransactionDate >= '2013-01-01'              AND TransactionDate < '2014-01-01'         ),         COUNT(BrandID)          WHERE City = 'Sacramento'          AND Gender = 'M'     ) * 1.0 AS Percentage FROM      rootbeer,      rootbeerbrand,      rootbeer,      customers,      location WHERE      rootbeer.BrandID = rootbeerbrand.BrandID      AND rootbeer.LocationID = location.LocationID      AND location.City = 'Sacramento'      AND customers.CustomerID = rootbeer.CustomerID      AND customers.Gender = 'M';
SELECT      DIVIDE(MULTIPLY(SUM(CASE WHEN rootbeerbrand.Honey = 'TRUE' THEN 1 ELSE 0 END), 1.0), COUNT(transaction.TransactionDate)) -     DIVIDE(MULTIPLY(SUM(CASE WHEN rootbeerbrand.Honey = 'FALSE' THEN 1 ELSE 0 END), 1.0), COUNT(transaction.TransactionDate)) AS difference_in_average FROM      transaction     JOIN rootbeer ON transaction.RootBeerID = rootbeer.RootBeerID     JOIN rootbeerbrand ON rootbeer.BrandID = rootbeerbrand.BrandID WHERE      rootbeer.ContainerType IN ('Cans', 'Bottles', 'Kegs') GROUP BY      1;
SELECT c.First, c.Last, c.Email FROM customers c JOIN transaction t ON c.CustomerID = t.CustomerID JOIN location l ON t.LocationID = l.LocationID WHERE t.CreditCardType = 'American Express' AND l.LocationName = 'Sac State Union';
SELECT rb.BrandName, MAX(rr.StarRating) AS HighestRating FROM rootbeerreview rr JOIN rootbeerbrand rb ON rr.BrandID = rb.BrandID WHERE rr.ReviewDate LIKE '2014-09%' GROUP BY rb.BrandName ORDER BY HighestRating DESC;
SELECT g.Latitude, g.Longitude FROM customers c JOIN transaction t ON c.CustomerID = t.CustomerID JOIN geolocation g ON t.LocationID = g.LocationID WHERE t.CreditCardType = 'American Express';
SELECT COUNT(*) FROM customers c JOIN transaction t ON c.CustomerID = t.CustomerID WHERE c.City = 'Folsom' AND t.CreditCardType = 'Visa';
SELECT City FROM customers WHERE CustomerID IN (   SELECT CustomerID   FROM rootbeerreview   WHERE StarRating = 5 AND ReviewDate LIKE '2012-11%' )
SELECT r.BrandName FROM rootbeerreview r WHERE r.CustomerID IN (   SELECT c.CustomerID   FROM customers c   WHERE c.First = 'Peg' AND c.Last = 'Winchester' );
SELECT rbb.BrandName FROM rootbeerbrand rbb JOIN (SELECT BrandID, COUNT(*) as WorstRatedCount       FROM rootbeerreview       WHERE StarRating = 1       GROUP BY BrandID       ORDER BY WorstRatedCount DESC       LIMIT 1) wr ON rbb.BrandID = wr.BrandID;
SELECT CreditCardType FROM transaction WHERE Alcoholic = 'FALSE' GROUP BY CreditCardType ORDER BY COUNT(CreditCardType) DESC LIMIT 1;
SELECT c.First, c.Last FROM customers c JOIN rootbeerreview r ON c.CustomerID = r.CustomerID WHERE r.StarRating = 5;
SELECT g.Latitude FROM rootbeer r JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE rb.BrandName = 'Thomas Kemper' GROUP BY g.Latitude ORDER BY COUNT(r.RootBeerID) DESC LIMIT 1;
SELECT MAX(StarRating) AS MostCommonStarRating FROM rootbeerreview WHERE BrandID IN (   SELECT RootBeerID   FROM rootbeer   WHERE CornSyrup = 'TRUE' )
SELECT g.Latitude, g.Longitude FROM geolocation g JOIN location l ON g.LocationID = l.LocationID WHERE l.ZipCode = '95819';
Error: 第 5317 个样本有 0 个SQL。
SELECT      SUM(SUBTRACT(CurrentRetailPrice, WholesaleCost)) / COUNT(ContainerType = 'Can') AS AverageUnitProfit FROM      rootbeerbrand JOIN      rootbeer ON rootbeer.BrandID = rootbeerbrand.BrandID WHERE      rootbeer.ContainerType = 'Can';
SELECT MULTIPLY(DIVIDE(COUNT(r.CustomerID), COUNT(t.CustomerID)), 100) AS Percentage FROM rootbeerreview r JOIN transaction t ON r.CustomerID = t.CustomerID WHERE t.CreditCardType = 'Discover' AND r.StarRating = 3;
SELECT r.BrandID FROM rootbeerreview r WHERE r.StarRating > 3;
SELECT COUNT(DISTINCT r.BrandID)  FROM rootbeer r  WHERE r.ContainerType = 'Bottle'    AND r.PurchaseDate BETWEEN '2015-04-23' AND '2015-10-26';
SELECT First, Last  FROM customers  WHERE CustomerID IN (   SELECT CustomerID    FROM rootbeerreview    WHERE StarRating = 5 AND Review = 'The quintessential dessert root beer. No ice cream required');
SELECT Email, PhoneNumber FROM customers JOIN rootbeerreview ON customers.CustomerID = rootbeerreview.CustomerID WHERE customers.City = 'Sacramento' AND rootbeerreview.ReviewDate LIKE '2014%' AND rootbeerreview.StarRating > 3;
SELECT COUNT(*)  FROM rootbeerreview  WHERE Gender = 'F'  AND SubscribedToEmailList = 'TRUE'  AND City = 'Sacramento'  AND StarRating = 4  AND ReviewDate BETWEEN '2016-01-03' AND '2016-10-26';
SELECT r.brandname, rb.brandname  FROM rootbeer rb  JOIN rootbeerbrand r ON rb.brandid = r.brandid  WHERE rb.containertype = 'Can'  AND rb.purchaseDate < '2015-06-06';
SELECT BrandName  FROM rootbeerbrand  WHERE FirstBrewedYear < 1930    AND EXISTS (SELECT 1                FROM rootbeer                WHERE rootbeer.BrandID = rootbeerbrand.BrandID                  AND rootbeer.ContainerType = 'Bottle');
SELECT COUNT(*)  FROM transaction  WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE First = 'Anna' AND Last = 'Himes')  AND CreditCardType = 'MasterCard'  AND TransactionDate BETWEEN '2014-12-25' AND '2016-05-20';
SELECT AVG(StarRating) FROM rootbeerreview WHERE Gender = 'F' AND BrandID = 10018 AND ReviewDate BETWEEN '2015-01-25' AND '2015-03-10';
SELECT r.BrandID, rb.BrandName FROM rootbeerreview r JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE r.CustomerID = 331115 AND r.StarRating = 1 AND r.Review = 'Yuk, more like licorice soda';
Error: 第 5330 个样本有 0 个SQL。
SELECT COUNT(*)  FROM transaction  WHERE LocationID IN (SELECT LocationID FROM location WHERE LocationName = 'Sac State Union')  AND CreditCardType = 'American Express'  AND TransactionDate LIKE '2014%';
SELECT Latitude, Longitude  FROM geolocation  WHERE LocationID IN (   SELECT LocationID    FROM location    WHERE LocationName = 'Sac State Union' );
SELECT Review FROM rootbeerreview WHERE CustomerID IN (   SELECT CustomerID   FROM rootbeer   WHERE BrandID IN (     SELECT BrandID     FROM rootbeerbrand     WHERE BrandName = 'Bulldog'   ) AND ReviewDate = '2013-07-26';
SELECT rb.BrandName,         SUM(SUBTRACT(rb.CurrentRetailPrice, rb.WholesaleCost)) AS UnitProfit FROM rootbeerbrand rb JOIN rootbeerreview r ON rb.BrandID = r.BrandID WHERE r.StarRating = 5 AND r.ReviewDate LIKE '2013%' GROUP BY rb.BrandName;
SELECT CONCAT(c.First, ' ', c.Last) AS FullName,         TIMESTAMPDIFF(YEAR, c.FirstPurchaseDate, r.ReviewDate) AS YearsSinceFirstPurchase FROM customers c JOIN rootbeerreview r ON c.CustomerID = r.CustomerID WHERE c.CustomerID = (SELECT CustomerID FROM customers ORDER BY FirstPurchaseDate LIMIT 1);
SELECT CreditCardType FROM transaction WHERE CustomerID IN (   SELECT CustomerID   FROM customers   WHERE First = 'Kenneth' AND Last = 'Walton' );
Error: 第 5337 个样本有 0 个SQL。
SELECT r.BrandID, rb.BrandName FROM rootbeer r JOIN rootbeerreview rr ON r.RootBeerID = rr.BrandID JOIN customers c ON rr.CustomerID = c.CustomerID WHERE c.First = 'Tim' AND c.Last = 'Ocel' UNION SELECT r.BrandID, rb.BrandName FROM rootbeer r JOIN rootbeerreview rr ON r.RootBeerID = rr.BrandID JOIN customers c ON rr.CustomerID = c.CustomerID WHERE c.First = 'Dawn' AND c.Last = 'Childress';
SELECT RootBeerID  FROM rootbeer  WHERE BrandID IN (   SELECT BrandID    FROM rootbeerbrand    WHERE BrandName IN ('Bulldog', 'Bundaberg', 'Dad''s', 'Dog n Suds', 'Virgil''s') );
SELECT COUNT(*)  FROM transaction  WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE First = 'Jim' AND Last = 'Breech')  AND RootBeerID IN (SELECT RootBeerID FROM rootbeer WHERE ContainerType = 'Bottle');
SELECT COUNT(*)  FROM transaction  WHERE LocationID IN (SELECT LocationID FROM location WHERE State = 'CA')  AND RootBeerID IN (SELECT RootBeerID FROM rootbeer WHERE BrandID IN (SELECT BrandID FROM rootbeerbrand WHERE State = 'CA'));
SELECT AVG(StarRating)  FROM rootbeerreview  WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE SubscribedToEmailList = 'TRUE');
SELECT    SUBTRACT(     COUNT(r.RootBeerID)      WHERE r.ContainerType = 'Bottle' AND l.State = 'LA',      COUNT(r.RootBeerID)      WHERE r.ContainerType = 'Bottle' AND l.State = 'MO'   ) AS difference FROM    rootbeer r   JOIN location l ON r.LocationID = l.LocationID;
SELECT      DIVIDE(         SUM(t.TransactionID)          FROM transaction t          WHERE t.LocationID IN (             SELECT l.LocationID              FROM location l              WHERE l.LocationName = 'Sac State American River Courtyard'         ),         SUM(t.TransactionID)          FROM transaction t          WHERE t.LocationID IN (             SELECT l.LocationID              FROM location l              WHERE l.LocationName = 'Sac State Union'         )     ) AS TransactionRatio
SELECT c.First, c.Last, t.CreditCardType FROM transaction t JOIN customers c ON t.CustomerID = c.CustomerID ORDER BY t.PurchasePrice DESC LIMIT 10;
SELECT      r.BrandName,      SUM(t.PurchasePrice) AS TotalAmountSold FROM      rootbeerbrand r  WHERE      r.Caffeinated = 'FALSE' AND r.CaneSugar = 'FALSE' JOIN      transaction t ON r.BrandID = t.RootBeerID GROUP BY      r.BrandName;
SELECT r.BrandName, COUNT(r.BrandID) AS LowestPurchase FROM rootbeer r GROUP BY r.BrandName ORDER BY LowestPurchase ASC LIMIT 1;
SELECT      r.BrandName,      AVG(rr.StarRating) AS AverageStarRating FROM      rootbeer r JOIN      rootbeerreview rr ON r.BrandID = rr.BrandID GROUP BY      r.BrandID, r.BrandName ORDER BY      COUNT(r.BrandID) DESC, AverageStarRating DESC LIMIT 1;
SELECT (DIVIDE(MULTIPLY(SUBTRACT(SUM(PurchasePrice) FROM (SELECT SUM(PurchasePrice) FROM transaction WHERE rootbeerbrand.BrandName = 'River City')), 100), SUM(PurchasePrice) FROM (SELECT SUM(PurchasePrice) FROM transaction WHERE rootbeerbrand.BrandName = 'Frostie')))) AS percentage_difference FROM transaction JOIN rootbeer ON transaction.RootBeerID = rootbeer.RootBeerID JOIN rootbeerbrand ON rootbeer.BrandID = rootbeerbrand.BrandID WHERE rootbeerbrand.BrandName IN ('River City', 'Frostie');
Error: 第 5350 个样本有 0 个SQL。
SELECT MULTIPLY(DIVIDE(COUNT(CustomerID WHERE Gender = 'F' AND SubscribedToEmailList = 'TRUE'), COUNT(CustomerID) WHERE SubscribedToEmailList = 'TRUE'), 1.0) AS PercentageOfFemaleCustomersWhoSubscribedToEmailList
Error: 第 5352 个样本有 0 个SQL。
Error: 第 5353 个样本有 0 个SQL。
SELECT StarRating FROM rootbeerreview WHERE CustomerID IN (   SELECT CustomerID   FROM customers   WHERE First = 'Urijah' AND Last = 'Faber' ) AND BrandID IN (   SELECT BrandID   FROM rootbeerbrand   WHERE BrandName = 'Frostie' );
SELECT r.BrandID, rb.BrandName FROM rootbeerreview r JOIN rootbeerbrand rb ON r.BrandID = rb.BrandID WHERE r.Review = 'Too Spicy!' ORDER BY r.StarRating LIMIT 1;
SELECT COUNT(*)  FROM transaction  WHERE LocationID IN (SELECT LocationID FROM location WHERE LocationName = 'Sac State American River Courtyard')  AND CreditCardType = 'MasterCard';
SELECT r.BrandID, r.BrandName FROM rootbeerbrand r JOIN rootbeerreview rr ON r.BrandID = rr.BrandID WHERE r.CaneSugar = 'TRUE' AND r.Honey = 'TRUE' AND rr.ReviewDate LIKE '2012%' AND rr.StarRating = (SELECT MIN(StarRating) FROM rootbeerreview);
SELECT g.Latitude, g.Longitude FROM transaction t JOIN rootbeer r ON t.RootBeerID = r.RootBeerID JOIN location l ON r.LocationID = l.LocationID JOIN geolocation g ON l.LocationID = g.LocationID WHERE t.TransactionDate LIKE '2014%' AND EXISTS (   SELECT 1   FROM customers c   WHERE c.CustomerID = t.CustomerID AND c.Last = 'Kono' AND c.First = 'Tommy' )
SELECT Email FROM customers WHERE CustomerID IN (   SELECT CustomerID   FROM transaction   WHERE TransactionID = 100016 );
SELECT COUNT(*)  FROM transaction  WHERE CreditCardType = 'American Express' AND RootBeerID IN (SELECT RootBeerID FROM rootbeer WHERE ContainerType = 'Bottle');
SELECT l.LocationName, COUNT(r.RootBeerID) as TotalBottles FROM rootbeer r JOIN location l ON r.LocationID = l.LocationID WHERE r.ContainerType = 'Bottle' GROUP BY l.LocationName ORDER BY TotalBottles DESC;
SELECT r.BrandName FROM rootbeerbrand r JOIN (SELECT BrandID, COUNT(*) AS total_stars       FROM rootbeerreview       WHERE StarRating = 5       GROUP BY BrandID       ORDER BY total_stars DESC       LIMIT 3) AS top_brands ON r.BrandID = top_brands.BrandID;
Error: 第 5363 个样本有 0 个SQL。
SELECT COUNT(SalesID) FROM Sales WHERE CustomerID = 80;
SELECT SUM(Quantity)  FROM Sales  WHERE SalesID BETWEEN 1 AND 10;
SELECT AVG(Quantity)  FROM Sales  WHERE SalesID BETWEEN 20 AND 30;
SELECT ProductID FROM Sales WHERE Quantity = (SELECT MAX(Quantity) FROM Sales);
SELECT ProductID FROM Products WHERE Price = (SELECT MIN(Price) FROM Products);
SELECT p.Name FROM Products p WHERE p.Price = 0;
SELECT Name  FROM Products  WHERE ProductID BETWEEN 1 AND 10;
SELECT P.Name FROM Products P JOIN Sales S ON P.ProductID = S.ProductID GROUP BY P.Name ORDER BY MIN(S.Quantity) LIMIT 1;
SELECT COUNT(DISTINCT c.CustomerID) FROM Sales s JOIN Products p ON s.ProductID = p.ProductID JOIN Customers c ON s.CustomerID = c.CustomerID WHERE p.Name = 'Hex Nut 9';
SELECT COUNT(SalesID) FROM Sales WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'Flat Washer 8');
SELECT p.Name  FROM Sales s  JOIN Employees e ON s.SalesPersonID = e.EmployeeID  JOIN Products p ON s.ProductID = p.ProductID  WHERE e.EmployeeID = 10;
SELECT c.FirstName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN Products p ON s.ProductID = p.ProductID WHERE p.ProductID = 1;
SELECT c.LastName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID WHERE s.SalesID = 178;
Error: 第 5377 个样本有 0 个SQL。
SELECT ProductID FROM Sales WHERE CustomerID IN (   SELECT CustomerID   FROM Customers   WHERE FirstName = 'Meander' )
SELECT e.LastName FROM Employees e JOIN Sales s ON e.EmployeeID = s.SalesPersonID WHERE s.SalesID = 100;
SELECT e.FirstName FROM Employees e JOIN Sales s ON e.EmployeeID = s.SalesPersonID JOIN Customers c ON s.CustomerID = c.CustomerID WHERE c.FirstName = 'Abigail' ORDER BY e.EmployeeID LIMIT 1;
SELECT COUNT(*) FROM Sales WHERE ProductID IN (   SELECT ProductID   FROM Products   WHERE Price = 0 ) AND CustomerID = 11782;
SELECT c.FirstName, c.MiddleInitial, c.LastName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN Employees e ON s.SalesPersonID = e.EmployeeID WHERE e.EmployeeID = 5;
SELECT SalesID  FROM Sales  WHERE SalesPersonID IN (   SELECT EmployeeID    FROM Employees    WHERE FirstName LIKE 's%' )
SELECT MAX(p.Price) FROM Products p JOIN Sales s ON p.ProductID = s.ProductID JOIN Customers c ON s.CustomerID = c.CustomerID WHERE c.CustomerID BETWEEN 1 AND 100;
SELECT c.FirstName, c.LastName, s.Quantity FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID WHERE c.LastName = 'Valdez' ORDER BY s.Quantity DESC LIMIT 1;
SELECT SUM(SalesID)  FROM Sales  WHERE SalesPersonID IN (SELECT EmployeeID FROM Employees WHERE FirstName IN ('Morningstar', 'Heather', 'Dean'));
SELECT COUNT(*) > 0 FROM Sales WHERE ProductID = 498 AND FirstName = 'Alex';
SELECT SUM(p.Price * s.Quantity)  FROM Sales s  JOIN Products p ON s.ProductID = p.ProductID  JOIN Customers c ON s.CustomerID = c.CustomerID  WHERE c.FirstName = 'Adam';
SELECT SUM(p.Price * s.Quantity)  FROM Sales s  JOIN Products p ON s.ProductID = p.ProductID  WHERE p.ProductID BETWEEN 400 AND 500;
SELECT SUM(Quantity)  FROM Sales s  JOIN Products p ON s.ProductID = p.ProductID  WHERE p.Name LIKE 'C%';
SELECT SUM(Quantity)  FROM Sales  WHERE CustomerID IN (   SELECT CustomerID    FROM Customers    WHERE FirstName = 'Adrian' );
SELECT ProductID FROM Products ORDER BY Price DESC LIMIT 5;
SELECT COUNT(*)  FROM Products  WHERE Price = 0;
SELECT p.Name FROM Sales s JOIN Products p ON s.ProductID = p.ProductID WHERE s.Quantity > 950;
SELECT e.FirstName, e.MiddleInitial, e.LastName FROM Employees e JOIN Sales s ON e.EmployeeID = s.SalesPersonID WHERE s.Quantity = 1000;
SELECT p.Name, SUM(s.Quantity) AS TotalQuantity FROM Sales s JOIN Products p ON s.ProductID = p.ProductID WHERE s.SalesID BETWEEN 1 AND 10 GROUP BY p.Name ORDER BY TotalQuantity DESC LIMIT 10;
SELECT SUM(p.Price * s.Quantity)  FROM Sales s  JOIN Products p ON s.ProductID = p.ProductID  WHERE p.Name = 'Reflector';
SELECT      'Silver' AS BestSellingColour WHERE      (SELECT SUM(Quantity) FROM Sales WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'HL Mountain Frame - Silver, 42')) >      (SELECT SUM(Quantity) FROM Sales WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'HL Mountain Frame - Black, 42')) UNION ALL SELECT      'Black' AS BestSellingColour WHERE      (SELECT SUM(Quantity) FROM Sales WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'HL Mountain Frame - Silver, 42')) <=      (SELECT SUM(Quantity) FROM Sales WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'HL Mountain Frame - Black, 42'));
SELECT (p1.Price - p2.Price) AS PriceDifference FROM Products p1, Products p2 WHERE p1.Name = 'HL Mountain Frame - Black, 42' AND p2.Name = 'LL Mountain Frame - Black, 42';
SELECT COUNT(*)  FROM Sales  WHERE SalesPersonID IN (SELECT EmployeeID FROM Employees WHERE FirstName = 'Michel' AND MiddleInitial = 'E' AND LastName = 'DeFrance');
SELECT AVG(DIVIDE(COUNT(Sales.CustomerID), COUNT(Sales.SalesPersonID))) AS AverageCustomersPerSalesPerson FROM Sales JOIN Employees ON Sales.SalesPersonID = Employees.EmployeeID;
SELECT COUNT(*) FROM Sales WHERE CustomerID IN (   SELECT CustomerID   FROM Customers   WHERE FirstName = 'Innes' AND MiddleInitial = 'E.' AND LastName = 'del Castillo' ) AND ProductID IN (   SELECT ProductID   FROM Products   WHERE Name = 'Short-Sleeve Classic Jersey, L' );
SELECT e.FirstName, e.MiddleInitial, e.LastName FROM Employees e JOIN Sales s ON e.EmployeeID = s.SalesPersonID JOIN Products p ON s.ProductID = p.ProductID JOIN Customers c ON s.CustomerID = c.CustomerID WHERE c.FirstName = 'Elizabeth' AND c.MiddleInitial = 'A' AND c.LastName = 'White' AND p.Name = 'Road-250 Black, 48';
SELECT COUNT(DISTINCT e.EmployeeID) FROM Sales s JOIN Employees e ON s.SalesPersonID = e.EmployeeID JOIN Products p ON s.ProductID = p.ProductID WHERE p.Name = 'Headlights - Weatherproof';
SELECT SUM(Quantity * p.Price) AS Revenue FROM Sales s JOIN Products p ON s.ProductID = p.ProductID WHERE p.Name = 'HL Road Frame - Red, 56';
SELECT COUNT(*)  FROM Sales  WHERE CustomerID IN (   SELECT CustomerID    FROM Customers    WHERE FirstName = 'Joe' AND MiddleInitial = 'L.' AND LastName = 'Lopez' );
SELECT c.FirstName, c.MiddleInitial, c.LastName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN Products p ON s.ProductID = p.ProductID WHERE p.Name = 'Touring Rim';
SELECT      E.FirstName,      E.LastName,      COUNT(S.CustomerID) AS TotalCustomers FROM      Sales S JOIN      Employees E ON S.SalesPersonID = E.EmployeeID GROUP BY      E.FirstName,      E.LastName
SELECT COUNT(DISTINCT e.EmployeeID)  FROM Employees e  JOIN Sales s ON e.EmployeeID = s.SalesPersonID  GROUP BY e.EmployeeID  HAVING COUNT(DISTINCT s.CustomerID) = (SELECT COUNT(DISTINCT c.CustomerID) FROM Customers c);
SELECT FirstName, MiddleInitial, LastName FROM Employees WHERE EmployeeID = 7;
SELECT MAX(p.Price) AS MostExpensive, MIN(p.Price) AS LeastExpensive FROM Products p WHERE p.Price > 0;
SELECT    (MULTIPLY(DIVIDE(SUM(s.CustomerID), COUNT(s.CustomerID)), 1.0)) AS Percentage FROM    Sales s   JOIN Products p ON s.ProductID = p.ProductID   JOIN Customers c ON s.CustomerID = c.CustomerID WHERE    p.Name = 'ML Bottom Bracket' AND c.FirstName = 'Albert' AND c.MiddleInitial = 'I' AND c.LastName = 'Ringer';
SELECT COUNT(*)  FROM Customers  WHERE FirstName = 'Abigail';
SELECT SUM(Quantity)  FROM Sales  WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'Blade');
SELECT e.FirstName, e.LastName FROM Employees e JOIN (   SELECT SalesPersonID, SUM(Quantity) as TotalQuantity   FROM Sales   GROUP BY SalesPersonID   ORDER BY TotalQuantity DESC   LIMIT 1 ) s ON e.EmployeeID = s.SalesPersonID
SELECT c.FirstName, c.LastName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN (   SELECT CustomerID, SUM(Quantity) AS TotalQuantity   FROM Sales   GROUP BY CustomerID   ORDER BY TotalQuantity DESC   LIMIT 1 ) t ON c.CustomerID = t.CustomerID;
SELECT p.Name FROM Products p JOIN Sales s ON p.ProductID = s.ProductID WHERE s.SalesPersonID = 20 ORDER BY s.Quantity DESC LIMIT 1;
SELECT E.FirstName FROM Employees E JOIN Sales S ON E.EmployeeID = S.SalesPersonID WHERE S.Quantity > 500;
SELECT c.FirstName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN Employees e ON s.SalesPersonID = e.EmployeeID WHERE e.EmployeeID = 1;
SELECT SUM(Quantity)  FROM Sales  WHERE SalesPersonID IN (SELECT EmployeeID FROM Employees WHERE FirstName = 'Abraham')  AND CustomerID IN (SELECT CustomerID FROM Customers WHERE FirstName = 'Aaron' AND LastName = 'Alexander');
SELECT c.FirstName, c.LastName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID WHERE s.Quantity > 600;
SELECT c.FirstName, c.LastName, MAX(s.Quantity) FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID WHERE c.FirstName = 'Cameron' GROUP BY c.FirstName, c.LastName;
SELECT s.SalesID FROM Sales s JOIN Products p ON s.ProductID = p.ProductID WHERE p.Name = 'Hex Nut' AND p.Price > 100;
SELECT c.CustomerID FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN Products p ON s.ProductID = p.ProductID WHERE p.Price BETWEEN 1000 AND 2000;
SELECT SUM(Quantity)  FROM Sales  WHERE ProductID IN (SELECT ProductID FROM Products WHERE Price = 0);
SELECT MULTIPLY(DIVIDE(SUM(Quantity), SUM(Quantity WHERE Price = 0)), 1.0) AS 'Quantity Percentage of Gift Products' FROM Sales JOIN Products ON Sales.ProductID = Products.ProductID WHERE Products.Price = 0;
SELECT MULTIPLY(DIVIDE(SUM(Quantity), (SELECT SUM(Quantity) FROM Sales WHERE Name = 'Blade')), 1.0) AS PercentageSoldBlades FROM Sales JOIN Products ON Sales.ProductID = Products.ProductID WHERE Name = 'Blade';
SELECT COUNT(*)  FROM Employees  WHERE LastName = 'Ringer';
SELECT COUNT(*) FROM Products WHERE ProductID < 15 AND Price <= 10;
SELECT p.Name FROM Sales s JOIN Products p ON s.ProductID = p.ProductID JOIN Employees e ON s.SalesPersonID = e.EmployeeID WHERE e.FirstName = 'Aaron' AND e.LastName = 'Alexander';
SELECT p.ProductID, p.Name FROM Products p WHERE p.Price = (SELECT MAX(Price) FROM Products) AND EXISTS (   SELECT 1   FROM Sales s   WHERE s.ProductID = p.ProductID   AND s.Quantity BETWEEN 400 AND 500 );
SELECT MAX(S.Quantity) AS HighestQuantity FROM Sales S JOIN Customers C ON S.CustomerID = C.CustomerID WHERE C.FirstName = 'Kate';
SELECT s.SalesID, c.CustomerID FROM Sales s JOIN Products p ON s.ProductID = p.ProductID JOIN Customers c ON s.CustomerID = c.CustomerID WHERE p.Price BETWEEN 100 AND 150 AND s.Quantity < 25;
SELECT s.Quantity, p.Price FROM Sales s JOIN Products p ON s.ProductID = p.ProductID JOIN Customers c ON s.CustomerID = c.CustomerID WHERE c.FirstName = 'Abigail' AND c.LastName = 'Henderson';
SELECT COUNT(*)  FROM Sales  WHERE Quantity = 60 AND        ProductID IN (SELECT ProductID FROM Products WHERE Price <= 500);
SELECT COUNT(*) FROM Sales JOIN Customers ON Sales.CustomerID = Customers.CustomerID WHERE Customers.FirstName = 'Erica' AND Sales.Quantity < 200;
SELECT p.Name FROM Sales s JOIN Products p ON s.ProductID = p.ProductID JOIN Customers c ON s.CustomerID = c.CustomerID WHERE c.LastName = 'Ashe' AND c.FirstName = 'Kathryn' ORDER BY s.Quantity DESC LIMIT 1;
SELECT p.Price, s.Quantity FROM Products p JOIN Sales s ON p.ProductID = s.ProductID WHERE p.Name = 'Seat Tube';
SELECT p.Name, p.Price FROM Products p JOIN Sales s ON p.ProductID = s.ProductID JOIN Customers c ON s.CustomerID = c.CustomerID WHERE c.FirstName = 'Erica' AND c.LastName = 'Xu';
SELECT SalesID FROM Sales WHERE ProductID IN (   SELECT ProductID   FROM Products   WHERE Name = 'External Lock Washer 7' ) AND Quantity = 590;
SELECT FirstName, LastName FROM Customers WHERE CustomerID IN (   SELECT CustomerID   FROM Sales   WHERE SalesID BETWEEN 30 AND 40   GROUP BY CustomerID   HAVING SUM(Quantity) = 403 )
SELECT c.CustomerID, c.LastName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID WHERE s.Quantity > (SELECT AVG(Quantity) * 0.9 FROM Sales);
SELECT    (COUNT(DISTINCT p.ProductID) /     (SELECT COUNT(*) FROM Sales WHERE SalesID BETWEEN 1 AND 200)) * 100 AS Percentage FROM    Sales s    JOIN Products p ON s.ProductID = p.ProductID  WHERE    s.SalesID BETWEEN 1 AND 200    AND p.Price BETWEEN 200 AND 300;
SELECT Name FROM Products WHERE Price = (SELECT MAX(Price) FROM Products);
SELECT COUNT(*)  FROM Customers  WHERE FirstName = 'Madison';
Error: 第 5446 个样本有 0 个SQL。
SELECT COUNT(DISTINCT c.LastName) AS Most_Common_Last_Name FROM Customers c JOIN (   SELECT LastName, COUNT(*) AS Count   FROM Customers   GROUP BY LastName   ORDER BY Count DESC   LIMIT 1 ) AS t ON c.LastName = t.LastName;
SELECT COUNT(*)  FROM Products  WHERE Price = 0;
SELECT e.FirstName, e.MiddleInitial, e.LastName FROM Employees e JOIN (   SELECT SalesPersonID, COUNT(SalesID) as TotalSales   FROM Sales   GROUP BY SalesPersonID   ORDER BY TotalSales DESC   LIMIT 1 ) s ON e.EmployeeID = s.SalesPersonID;
SELECT CONCAT(c.FirstName, ' ', c.MiddleInitial, ' ', c.LastName) AS FullName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN Products p ON s.ProductID = p.ProductID WHERE (s.SalesPersonID, s.ProductID, s.Quantity, p.Price) IN (   SELECT s1.SalesPersonID, s1.ProductID, s1.Quantity, p1.Price   FROM Sales s1   JOIN Products p1 ON s1.ProductID = p1.ProductID   GROUP BY s1.SalesPersonID, s1.ProductID, s1.Quantity, p1.Price   ORDER BY s1.Quantity * p1.Price DESC   LIMIT 1 )
SELECT SUM(Quantity)  FROM Sales  WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'Mountain-500 Black 42');
SELECT SUM(Quantity * p.Price)  FROM Sales s  JOIN Employees e ON s.SalesPersonID = e.EmployeeID  JOIN Customers c ON s.CustomerID = c.CustomerID  JOIN Products p ON s.ProductID = p.ProductID  WHERE e.FirstName = 'Heather' AND e.LastName = 'McBadden';
SELECT COUNT(*)  FROM Sales  WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'Mountain-100 Silver, 38')  AND SalesPersonID IN (SELECT EmployeeID FROM Employees WHERE FirstName = 'Stearns' AND LastName = 'MacFeather');
SELECT COUNT(DISTINCT p.Name)  FROM Sales s  JOIN Customers c ON s.CustomerID = c.CustomerID  JOIN Employees e ON c.CustomerID = e.EmployeeID  JOIN Products p ON s.ProductID = p.ProductID  WHERE e.FirstName = 'Dalton' AND e.MiddleInitial = 'M' AND e.LastName = 'Coleman';
SELECT e.FirstName, e.MiddleInitial, e.LastName FROM Employees e JOIN (   SELECT SalesPersonID, COUNT(SalesID) AS TotalSales   FROM Sales   GROUP BY SalesPersonID   ORDER BY TotalSales DESC   LIMIT 3 ) s ON e.EmployeeID = s.SalesPersonID
SELECT p.Name, SUM(s.Quantity) as TotalQuantity FROM Sales s JOIN Products p ON s.ProductID = p.ProductID WHERE p.Name LIKE 'Mountain-500 Black%' GROUP BY p.Name ORDER BY TotalQuantity DESC LIMIT 1;
SELECT COUNT(DISTINCT E.EmployeeID)  FROM Employees E  JOIN Sales S ON E.EmployeeID = S.SalesPersonID  JOIN Products P ON S.ProductID = P.ProductID  WHERE P.Name = 'ML Road Frame-W - Yellow' AND P.Price = 40;
SELECT COUNT(*)  FROM Sales  WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'Chainring Bolts')  AND SalesID = 551971;
SELECT COUNT(*)  FROM Sales  WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'Touring-2000 Blue, 50')  AND Quantity > 20000;
SELECT SUM(Quantity * Price)  FROM Sales  WHERE ProductID IN (SELECT ProductID FROM Products WHERE Name = 'Road-650, Red, 60')  AND SalesPersonID IN (SELECT EmployeeID FROM Employees WHERE FirstName = 'Abraham' AND LastName = 'Bennet');
SELECT p.Name, SUM(s.Quantity * p.Price) AS TotalPrice FROM Sales s JOIN Products p ON s.ProductID = p.ProductID GROUP BY p.Name ORDER BY SUM(s.Quantity * p.Price) DESC LIMIT 1;
SELECT FirstName FROM Customers WHERE LastName = 'Chen';
SELECT MAX(COUNT(MiddleInitial)) AS MostCommonMiddleInitial FROM Employees;
SELECT AVG(P.Price)  FROM Products P  WHERE P.Price BETWEEN 100 AND 200;
SELECT c.FirstName, c.MiddleInitial, c.LastName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID WHERE s.Quantity > (SELECT AVG(Quantity) FROM Sales)
SELECT c.FirstName, c.MiddleInitial, c.LastName FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN Products p ON s.ProductID = p.ProductID WHERE (c.FirstName, c.MiddleInitial, c.LastName),        (s.Quantity, p.Price) IN (       SELECT c2.FirstName, c2.MiddleInitial, c2.LastName,               SUM(s2.Quantity * p2.Price)        FROM Customers c2       JOIN Sales s2 ON c2.CustomerID = s2.CustomerID       JOIN Products p2 ON s2.ProductID = p2.ProductID       GROUP BY c2.FirstName, c2.MiddleInitial, c2.LastName       ORDER BY SUM(s2.Quantity * p2.Price) DESC       LIMIT 1       )
SELECT e.FirstName, e.LastName, SUM(p.Price * s.Quantity) AS TotalSales FROM Sales s JOIN Products p ON s.ProductID = p.ProductID JOIN Employees e ON s.SalesPersonID = e.EmployeeID WHERE p.Name = 'Blade' GROUP BY e.FirstName, e.LastName ORDER BY TotalSales DESC LIMIT 1;
SELECT c.FirstName, c.MiddleInitial, c.LastName, SUM(p.Price * s.Quantity) AS TotalSpent FROM Customers c JOIN Sales s ON c.CustomerID = s.CustomerID JOIN Products p ON s.ProductID = p.ProductID GROUP BY c.FirstName, c.MiddleInitial, c.LastName HAVING SUM(p.Price * s.Quantity) > 50000 ORDER BY TotalSpent DESC;
SELECT p.Name FROM Products p JOIN Sales s ON p.ProductID = s.ProductID GROUP BY p.Name ORDER BY COUNT(s.Quantity) DESC LIMIT 1;
SELECT p.* FROM Products p WHERE p.ProductID IN (   SELECT s.ProductID   FROM Sales s   WHERE s.Quantity < (     SELECT AVG(Quantity)     FROM Sales   ) );
SELECT COUNT(*)  FROM Dish  WHERE first_appeared < 1851 OR first_appeared > 2012;
SELECT      CASE          WHEN (SUBTRACT(last_appeared, first_appeared) WHERE name = 'Anchovies') >              (SUBTRACT(last_appeared, first_appeared) WHERE name = 'Fresh lobsters in every style')          THEN 'Anchovies'         ELSE 'Fresh lobsters in every style'     END AS longest_lasting_dish FROM      Dish WHERE      name IN ('Anchovies', 'Fresh lobsters in every style');
SELECT name FROM Dish WHERE lowest_price = 0 ORDER BY menus_appeared DESC LIMIT 1;
SELECT COUNT(*)  FROM Menu  WHERE name = 'Waldorf Astoria' AND page_count = 4;
SELECT name FROM Dish WHERE id IN (   SELECT dish_id   FROM MenuItem   WHERE menu_page_id = 1389 AND xpos < 0.25 AND ypos < 0.25 )
SELECT m.name AS menu_name, mp.page_number, mi.price FROM MenuItem mi JOIN MenuPage mp ON mi.menu_page_id = mp.id JOIN Dish d ON mi.dish_id = d.id WHERE d.name = 'Clear green turtle';
Error: 第 5477 个样本有 0 个SQL。
SELECT MAX(price)  FROM MenuItem  WHERE dish_id IN (SELECT id FROM Dish WHERE name = 'Clear green turtle');
SELECT m.id FROM Dish d JOIN Menu m ON d.menus_appeared = m.id WHERE d.name = 'Clear green turtle';
Error: 第 5480 个样本有 0 个SQL。
SELECT COUNT(*) FROM Menu WHERE id IN (   SELECT menu_id   FROM MenuPage   JOIN MenuItem ON MenuPage.id = MenuItem.menu_page_id   JOIN Dish ON MenuItem.dish_id = Dish.id   WHERE Dish.name = 'Clear green turtle' ) AND call_number IS NULL;
Error: 第 5482 个样本有 0 个SQL。
Error: 第 5483 个样本有 0 个SQL。
Error: 第 5484 个样本有 0 个SQL。
SELECT COUNT(DISTINCT dish.id) FROM dish JOIN menu ON dish.menus_appeared = menu.id WHERE menu.name = 'Waldorf Astoria';
Error: 第 5486 个样本有 0 个SQL。
SELECT AVG(mp.page_number)  FROM MenuPage mp  JOIN MenuItem mi ON mp.id = mi.menu_page_id  JOIN Dish d ON mi.dish_id = d.id  WHERE d.name = 'Clear green turtle';
SELECT AVG(price)  FROM MenuItem  WHERE menu_page_id IN (SELECT id FROM MenuPage WHERE menu_id IN (SELECT id FROM Menu WHERE name = 'Zentral Theater Terrace'));
SELECT COUNT(*)  FROM MenuItem  WHERE created_at LIKE '2011-03-28%';
Error: 第 5490 个样本有 0 个SQL。
Error: 第 5491 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Dish  WHERE times_appeared > menus_appeared;
SELECT COUNT(*)  FROM Menu  WHERE venue = 'STEAMSHIP';
SELECT COUNT(DISTINCT menu_page_id)  FROM MenuPage  WHERE menu_id IN (   SELECT id    FROM Menu    WHERE date = '1898-11-17' )
Error: 第 5495 个样本有 0 个SQL。
SELECT D.name, MP.id FROM Dish D JOIN MenuItem MI ON D.id = MI.dish_id JOIN MenuPage MP ON MI.menu_page_id = MP.id WHERE D.first_appeared = 1861;
SELECT d.name, MAX(mi.high_price) FROM MenuItem mi JOIN MenuPage mp ON mi.menu_page_id = mp.id JOIN Dish d ON mi.dish_id = d.id WHERE mp.id = 7610 AND mi.created_at LIKE '2011-05-23%' GROUP BY d.name;
SELECT d.*  FROM Dish d  JOIN MenuItem mi ON d.id = mi.dish_id  JOIN MenuPage mp ON mi.menu_page_id = mp.id  WHERE mp.page_number = 30  ORDER BY mp.full_height ASC  LIMIT 1;
SELECT mp.id, m.name FROM MenuPage mp JOIN Menu m ON mp.menu_id = m.id WHERE mp.menu_id IN (   SELECT m.id   FROM Menu m   ORDER BY m.page_count DESC   LIMIT 1 )
SELECT COUNT(*) FROM MenuItem WHERE menu_page_id IN (   SELECT id   FROM MenuPage   WHERE menu_id IN (     SELECT id     FROM Menu     WHERE dish_count = (       SELECT MAX(dish_count)       FROM Menu     )   )   AND page_number = 2 )
SELECT MenuItem.id FROM Dish JOIN MenuItem ON Dish.id = MenuItem.dish_id WHERE Dish.name = 'Fresh lobsters in every style'
SELECT d.* FROM Dish d JOIN MenuItem mi ON d.id = mi.dish_id JOIN MenuPage mp ON mi.menu_page_id = mp.id JOIN Menu m ON mp.menu_id = m.id WHERE m.sponsor = 'CHAS.BRADLEY''S OYSTER & DINING ROOM' AND mi.xpos < 0.25 AND mi.ypos < 0.25;
SELECT M.sponsor, M.event FROM Menu M JOIN MenuItem MI ON M.id = MI.menu_page_id JOIN Dish D ON MI.dish_id = D.id WHERE D.name = 'Cerealine with Milk';
SELECT    MULTIPLY(     DIVIDE(       SUM(CASE WHEN xpos BETWEEN 0.25 AND 0.75 AND ypos BETWEEN 0.25 AND 0.75 THEN 1 ELSE 0 END),        COUNT(id)     ),      1.0   ) AS percent FROM    MenuItem   JOIN Dish ON MenuItem.dish_id = Dish.id WHERE    Dish.name LIKE '%Bluefish%';
SELECT sponsor FROM Menu WHERE id = 12463;
SELECT m.name FROM Menu m WHERE m.sponsor = 'REPUBLICAN HOUSE';
SELECT location.place FROM Menu JOIN location ON Menu.place = location.id WHERE Menu.id = 12472;
SELECT M.physical_description FROM Menu M WHERE M.sponsor = 'Noviomagus';
Error: 第 5509 个样本有 0 个SQL。
SELECT location FROM Menu WHERE sponsor = 'Norddeutscher Lloyd Bremen';
SELECT MenuPage.id FROM MenuPage JOIN Menu ON MenuPage.menu_id = Menu.id WHERE Menu.sponsor = 'Occidental & Oriental';
SELECT image_id  FROM MenuPage  WHERE menu_id IN (   SELECT id    FROM Menu    WHERE location = 'Manhattan Hotel' )
SELECT full_height, full_width FROM MenuPage WHERE menu_id IN (   SELECT id   FROM Menu   WHERE name = 'El Fuerte Del Palmar' );
SELECT m.name  FROM MenuPage mp  JOIN Menu m ON mp.menu_id = m.id  WHERE mp.uuid = 'c02c9a3b-6881-7080-e040-e00a180631aa';
SELECT m.name FROM Menu m JOIN MenuPage mp ON m.id = mp.menu_id WHERE mp.full_height = (SELECT MAX(full_height) FROM MenuPage);
SELECT page_count FROM Menu WHERE id IN (SELECT menu_id FROM MenuPage WHERE id = 130);
Error: 第 5517 个样本有 0 个SQL。
SELECT DISTINCT mp.page_number FROM MenuPage mp JOIN MenuItem mi ON mp.id = mi.menu_page_id WHERE mi.xpos > 0.75 AND mi.ypos < 0.25;
SELECT d.name FROM Dish d JOIN MenuItem mi ON d.id = mi.dish_id JOIN Menu m ON mi.menu_page_id IN (   SELECT mp.id   FROM MenuPage mp   JOIN MenuPage mi ON mp.menu_id = mi.menu_id   WHERE SUBSTR(mi.created_at, 7, 1) = '4' )
Error: 第 5520 个样本有 0 个SQL。
SELECT MAX(high_price)  FROM MenuItem  WHERE id BETWEEN 1 AND 5;
SELECT d.name  FROM Dish d  JOIN MenuItem mi ON d.id = mi.dish_id  WHERE mi.xpos < 0.25 AND mi.ypos < 0.25;
SELECT SUM(dish_count)  FROM Menu  WHERE uuid IN ('510d47e4-2958-a3d9-e040-e00a18064a99', '510d47e4-295a-a3d9-e040-e00a18064a99');
SELECT SUM(price)  FROM MenuItem  WHERE menu_page_id IN (SELECT id FROM MenuPage WHERE menu_id = 12882);
SELECT d.name, d.highest_price FROM Dish d ORDER BY d.highest_price DESC LIMIT 5;
SELECT COUNT(*) FROM Dish WHERE lowest_price = 0;
SELECT d.* FROM Dish d WHERE d.first_appeared = 1855 AND d.last_appeared = 1900;
SELECT m.* FROM Menu m ORDER BY dish_count DESC LIMIT 10;
SELECT COUNT(DISTINCT dish_id)  FROM MenuItem  WHERE xpos > 0.75 AND ypos < 0.25;
SELECT    TIMESTAMPDIFF(YEAR, first_appeared, last_appeared) AS years_on_menu,   MAX(updated_at) AS latest_update FROM    Dish WHERE    name = 'Clear Green Turtle';
SELECT *  FROM Dish  WHERE SUBTRACT(last_appeared, first_appeared) > 100;
SELECT COUNT(*) FROM Dish WHERE SUBTRACT(last_appeared, first_appeared) < 5;
SELECT d.name, mi.price FROM Dish d JOIN MenuItem mi ON d.id = mi.dish_id WHERE d.lowest_price = 0;
Error: 第 5534 个样本有 0 个SQL。
SELECT COUNT(*)  FROM MenuItem  WHERE created_at BETWEEN '2011-03-31 20:24:46 UTC' AND '2011-04-15 23:09:51 UTC';
SELECT m.sponsor FROM Menu m JOIN MenuPage mp ON m.id = mp.menu_id WHERE mp.full_height > 10000;
SELECT mp.image_id, mp.full_height, mp.full_width FROM MenuPage mp JOIN Menu m ON mp.menu_id = m.id WHERE m.event = '100TH ANNIVERSARY OF BIRTH OF DANIEL WEBSTER';
SELECT m.name AS event FROM MenuPage mp JOIN Menu m ON mp.menu_id = m.id WHERE mp.full_width < 2000;
SELECT name  FROM Dish  WHERE id IN (SELECT dish_id FROM MenuItem WHERE price = 180000);
SELECT xpos, ypos, last_appeared - first_appeared AS appearance_duration FROM Dish WHERE name = 'Small Hominy'
SELECT    mp.page_number,    mp.image_id,    mp.full_height,    mp.full_width,    mp.full_height * mp.full_width AS image_area FROM    MenuPage mp   JOIN MenuItem mi ON mp.id = mi.menu_page_id   JOIN Dish d ON mi.dish_id = d.id WHERE    d.name = 'Baked Stuffed Mullet & Sauce Pomard';
SELECT COUNT(*)  FROM Dish  WHERE times_appeared > menus_appeared;
Error: 第 5543 个样本有 0 个SQL。
SELECT name FROM Dish ORDER BY (last_appeared - first_appeared) DESC LIMIT 1;
Error: 第 5545 个样本有 0 个SQL。
Error: 第 5546 个样本有 0 个SQL。
SELECT COUNT(DISTINCT m.id) FROM Menu m JOIN MenuItem mi ON m.id = mi.menu_page_id JOIN Dish d ON mi.dish_id = d.id WHERE d.name = 'puree of split peas aux croutons';
SELECT name  FROM Dish  WHERE highest_price IS NULL AND SUBSTR(created_at,1,4) = '2011' AND SUBSTR(created_at, 7, 1) = '4';
SELECT m.name FROM Menu m JOIN MenuPage mp ON m.id = mp.menu_id GROUP BY m.name ORDER BY COUNT(mp.page_number) DESC LIMIT 1;
SELECT mp.id FROM MenuPage mp JOIN MenuItem mi ON mp.id = mi.menu_page_id JOIN Dish d ON mi.dish_id = d.id WHERE d.name = 'mashed potatoes';
Error: 第 5551 个样本有 0 个SQL。
SELECT menu_page_id FROM MenuItem JOIN Dish ON MenuItem.dish_id = Dish.id WHERE name = 'milk' ORDER BY price DESC LIMIT 1;
SELECT m.id FROM Menu m WHERE m.sponsor = 'OCCIDENTAL & ORIENTAL STEAMSHIP COMPANY' ORDER BY (SELECT COUNT(mp.page_number) FROM MenuPage mp WHERE mp.menu_id = m.id) DESC LIMIT 1;
SELECT m_menu.menu_id, m_menu_page.page_number, menu_item.xpos, menu_item.ypos FROM MenuItem JOIN MenuPage ON MenuItem.menu_page_id = MenuPage.id JOIN Menu ON MenuPage.menu_id = Menu.id JOIN Dish ON MenuItem.dish_id = Dish.id WHERE Dish.name = 'breaded veal cutlet with peas';
SELECT d.name FROM MenuItem mi JOIN MenuPage mp ON mi.menu_page_id = mp.id JOIN Dish d ON mi.dish_id = d.id WHERE mp.id IN (   SELECT mp.id   FROM MenuPage mp   WHERE mp.page_number = 48706   AND mi.xpos > 0.75   AND mi.ypos > 0.75 )
SELECT name FROM Dish WHERE id IN (   SELECT dish_id   FROM MenuItem   WHERE menu_page_id IN (     SELECT id     FROM MenuPage     WHERE menu_id IN (       SELECT id       FROM Menu       WHERE sponsor = 'THE SOCIETY OF THE CUMBERLAND'         AND event = '19NTH REUNION'         AND place = 'GRAND PACIFIC HOTEL, CHICAGO, ILL'     )   ) )
SELECT M.sponsor FROM Menu M JOIN MenuPage MP ON M.id = MP.menu_id JOIN MenuItem MI ON MP.id = MI.menu_page_id JOIN Dish D ON MI.dish_id = D.id WHERE D.name = 'baked apples with cream' ORDER BY MI.price DESC LIMIT 1;
SELECT AVG(COUNT(dish_id)) / COUNT(menu_page_id) AS avg_dishes_per_menu,        (SELECT name FROM Dish WHERE id = (SELECT dish_id FROM MenuItem ORDER BY COUNT(dish_id) DESC LIMIT 1)) AS most_appeared_dish_name FROM MenuItem JOIN MenuPage ON MenuItem.menu_page_id = MenuPage.id JOIN Menu ON MenuPage.menu_id = Menu.id WHERE Menu.name = 'Souper de Luxe';
SELECT id  FROM Menu  WHERE sponsor IS NULL;
Error: 第 5560 个样本有 0 个SQL。
SELECT COUNT(*) FROM Menu WHERE page_count > 10 AND dish_count > 20;
SELECT id FROM Menu WHERE id = (SELECT menu_id             FROM MenuPage             GROUP BY menu_id             ORDER BY COUNT(dish_count) DESC             LIMIT 1);
SELECT COUNT(DISTINCT dish.id)  FROM Dish  JOIN Menu ON Dish.menus_appeared = Menu.id  WHERE Menu.name = 'Zentral Theater Terrace';
SELECT COUNT(*) FROM Menu WHERE call_number IS NULL AND strftime('%Y', date) < '1950';
Error: 第 5565 个样本有 0 个SQL。
SELECT m.name  FROM MenuPage mp  JOIN Menu m ON mp.menu_id = m.id  WHERE mp.image_id = 5189412;
SELECT    CASE      WHEN SUM(m1.full_width) > SUM(m2.full_width) THEN 'Zentral Theater Terrace'     WHEN SUM(m1.full_width) < SUM(m2.full_width) THEN 'Young''s Hotel'     ELSE 'Both have the same width'   END  FROM    MenuPage m1    JOIN Menu m ON m1.menu_id = m.id  WHERE    m.name = 'Zentral Theater Terrace'    AND m1.page_number = 1  UNION ALL  SELECT    CASE      WHEN SUM(m1.full_width) > SUM(m2.full_width) THEN 'Young''s Hotel'     WHEN SUM(m1.full_width) < SUM(m2.full_width) THEN 'Zentral Theater Terrace'     ELSE 'Both have the same width'   END  FROM    MenuPage m1    JOIN Menu m ON m1.menu_id = m.id  WHERE    m.name = 'Young''s Hotel'    AND m1.page_number = 1
Error: 第 5568 个样本有 0 个SQL。
SELECT COUNT(*)  FROM MenuPage  WHERE menu_id IN (SELECT id FROM Menu WHERE name = 'Ritz Carlton')  AND full_width > 1000;
SELECT COUNT(*)  FROM MenuItem  WHERE menu_page_id IN (   SELECT id    FROM MenuPage    WHERE menu_id = 12882 AND page_number = 1 )
SELECT d.name FROM MenuItem mi JOIN MenuPage mp ON mi.menu_page_id = mp.id JOIN Menu m ON mp.menu_id = m.id JOIN Dish d ON mi.dish_id = d.id WHERE m.id = 12882 AND mp.page_number = 1;
Error: 第 5572 个样本有 0 个SQL。
SELECT m.id FROM MenuPage mp JOIN MenuItem mi ON mp.id = mi.menu_page_id JOIN Dish d ON mi.dish_id = d.id WHERE d.name = 'Chicken gumbo' ORDER BY mp.full_width DESC LIMIT 1;
Error: 第 5574 个样本有 0 个SQL。
SELECT COUNT(*) FROM MenuPage mp JOIN MenuItem mi ON mp.id = mi.menu_page_id JOIN Dish d ON mi.dish_id = d.id WHERE d.name = 'Paysanne Soup' AND mi.high_price IS NULL;
SELECT MAX(mi.price)  FROM MenuItem mi  JOIN Dish d ON mi.dish_id = d.id  WHERE d.name = 'Chicken gumbo';
SELECT    MULTIPLY(full_height, full_width)  FROM    MenuPage  WHERE    menu_id IN (     SELECT        id      FROM        Menu      WHERE        name = 'Zentral Theater Terrace'   )    AND page_number = 1;
SELECT AVG(COUNT(DISTINCT menu_item.id)) AS avg_dishes_per_page FROM menu_item JOIN menu_page ON menu_item.menu_page_id = menu_page.id WHERE menu_page.menu_id = 12882;
Error: 第 5579 个样本有 0 个SQL。
SELECT SUM(weight)  FROM shipment  WHERE cust_id IN (SELECT cust_id FROM customer WHERE cust_name = 'S K L Enterprises Inc');
SELECT COUNT(*)  FROM shipment  WHERE cust_id IN (SELECT cust_id FROM customer WHERE cust_name = 'S K L Enterprises Inc')  AND driver_id IN (SELECT driver_id FROM driver WHERE first_name = 'Sue' AND last_name = 'Newell');
Error: 第 5582 个样本有 0 个SQL。
SELECT ship_id FROM shipment WHERE cust_id IN (   SELECT cust_id   FROM customer   WHERE cust_type = 'retailer' );
SELECT COUNT(*) FROM customer WHERE cust_id IN (SELECT cust_id FROM shipment WHERE CAST(ship_date AS DATE) = 2017) AND annual_revenue > 30000000;
Error: 第 5585 个样本有 0 个SQL。
SELECT d.first_name, d.last_name FROM driver d JOIN shipment s ON d.driver_id = s.driver_id WHERE Cast(s.ship_date AS DATE) = 2017 GROUP BY d.driver_id ORDER BY SUM(s.weight) DESC LIMIT 1;
SELECT COUNT(*) FROM shipment WHERE CAST(ship_date AS DATE) = 2017 AND city.state = 'New Jersey';
SELECT MAX(weight) FROM shipment WHERE city_id IN (SELECT city_id FROM city WHERE city_name = 'New York');
SELECT SUM(weight) AS new_york_weight, SUM(weight) AS chicago_weight FROM shipment WHERE city_id IN (   SELECT city_id   FROM city   WHERE city_name IN ('New York', 'Chicago') )
Error: 第 5590 个样本有 0 个SQL。
SELECT AVG(weight)  FROM shipment  WHERE cust_id IN (SELECT cust_id FROM customer WHERE cust_name = 'S K L Enterprises Inc')  GROUP BY ship_id  ORDER BY ship_id;
SELECT      (COUNT(s.ship_id) / (SELECT COUNT(*) FROM shipment WHERE city_id IN (SELECT city_id FROM city WHERE state = 'Florida'))) * 100 AS percentage FROM      shipment s WHERE      s.city_id IN (SELECT city_id FROM city WHERE city_name = 'Jacksonville' AND state = 'Florida')
SELECT    CASE      WHEN t.make = 'Peterbilt' THEN 'Texas(TX)'     WHEN t.make = 'Mack' THEN 'North Carolina (NC)'     WHEN t.make = 'Kenworth' THEN 'Washington (WA)'   END AS headquarter FROM    shipment s    JOIN truck t ON s.truck_id = t.truck_id  WHERE    s.ship_id = 1045;
SELECT COUNT(*) FROM shipment WHERE truck_id IN (   SELECT truck_id   FROM truck   ORDER BY model_year ASC   LIMIT 1 )
SELECT c.cust_name FROM customer c JOIN shipment s ON c.cust_id = s.cust_id WHERE s.ship_id = 1275;
SELECT city_name FROM shipment WHERE ship_id = 1701 JOIN city ON shipment.city_id = city.city_id;
SELECT first_name, last_name FROM driver WHERE driver_id IN (   SELECT driver_id   FROM shipment   WHERE ship_id = 1021 );
SELECT d.first_name, d.last_name FROM shipment s JOIN driver d ON s.driver_id = d.driver_id WHERE s.ship_date = '2017-11-05';
SELECT city.population FROM city JOIN shipment ON city.city_id = shipment.city_id WHERE shipment.ship_id = 1398;
SELECT ship_date FROM shipment WHERE city_id IN (   SELECT city_id   FROM city   WHERE state = 'SC' ) ORDER BY ship_date ASC LIMIT 1;
Error: 第 5601 个样本有 0 个SQL。
SELECT c.area FROM shipment s JOIN city c ON s.city_id = c.city_id WHERE s.ship_id = 1346;
SELECT weight FROM shipment WHERE cust_id = (SELECT cust_id FROM customer WHERE cust_name = 'U-haul Center Of N Syracuse') AND ship_date = '2016/09/21';
SELECT CONCAT(d.first_name, ' ', d.last_name) AS full_name FROM shipment s JOIN driver d ON s.driver_id = d.driver_id WHERE s.truck_id = 3 AND s.ship_date = '2016-09-19';
SELECT city_name, area, population, area / population AS population_density FROM city JOIN shipment ON city.city_id = shipment.city_id WHERE ship_id = 1369;
SELECT AVG(ship_id)  FROM shipment s  JOIN truck t ON s.truck_id = t.truck_id  WHERE t.make = 'Kenworth';
SELECT SUM(weight) FROM shipment WHERE ship_date = (SELECT MIN(ship_date) FROM shipment) AND driver_id IN (   SELECT driver_id   FROM driver   WHERE first_name = 'Sue' AND last_name = 'Newell' );
SELECT c.cust_name, c.address, c.city, c.state, c.zip FROM customer c JOIN shipment s ON c.cust_id = s.cust_id WHERE s.weight = (SELECT MAX(weight) FROM shipment);
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM driver WHERE driver_id = (   SELECT driver_id   FROM shipment   ORDER BY ship_date   LIMIT 1 );
SELECT COUNT(*)  FROM shipment  WHERE cust_id IN (SELECT cust_id FROM customer WHERE cust_name = 'Olympic Camper Sales Inc');
SELECT COUNT(*) FROM shipment WHERE city_id IN (SELECT city_id FROM city WHERE city_name = 'New York') AND cust_id IN (SELECT cust_id FROM customer WHERE cust_name = 'Harry''s Hot Rod Auto & Truck Accessories');
SELECT COUNT(*)  FROM shipment  WHERE weight = (SELECT MAX(weight) FROM shipment)  AND make = 'Mack';
SELECT d.first_name, d.last_name FROM driver d JOIN shipment s ON d.driver_id = s.driver_id JOIN city c ON s.city_id = c.city_id WHERE c.population = (SELECT MIN(population) FROM city) GROUP BY d.driver_id ORDER BY COUNT(s.ship_id) DESC LIMIT 1;
SELECT COUNT(*) FROM shipment WHERE weight < 1000 AND truck_id IN (   SELECT truck_id   FROM truck   ORDER BY model_year   LIMIT 1 );
SELECT c.annual_revenue FROM customer c JOIN (   SELECT cust_id, COUNT(ship_id) as num_shipments   FROM shipment   GROUP BY cust_id   ORDER BY COUNT(ship_id) DESC   LIMIT 1 ) s ON c.cust_id = s.cust_id;
SELECT COUNT(*) FROM shipment WHERE city_id IN (   SELECT city_id   FROM city   WHERE city_name = 'Downey' AND state = 'CA' ) AND EXTRACT(YEAR FROM ship_date) = 2016;
SELECT COUNT(*)  FROM shipment  WHERE driver_id IN (SELECT driver_id FROM driver WHERE city_id IN (SELECT city_id FROM city WHERE city_name = 'North Las Vegas'))  AND driver_id IN (SELECT driver_id FROM driver WHERE last_name = 'Nohr' AND first_name = 'Holger');
SELECT COUNT(*)  FROM shipment  WHERE city_id IN (   SELECT city_id    FROM city    ORDER BY area / population DESC    LIMIT 1 )
SELECT (COUNT(cust_id WHERE state = 'TX') / COUNT(cust_id)) * 100 AS percentage FROM customer WHERE cust_type = 'manufacturer';
SELECT SUM(weight)  FROM shipment  WHERE city_id IN (SELECT city_id FROM city WHERE city_name = 'San Mateo' AND state = 'California')  AND CAST(ship_date AS DATE) = 2016;
SELECT SUM(s.weight) FROM shipment s JOIN truck t ON s.truck_id = t.truck_id JOIN driver d ON s.driver_id = d.driver_id JOIN city c ON s.city_id = c.city_id WHERE CAST(s.ship_date AS DATE) = 2016 AND t.make = 'Peterbilt' AND t.model_year = (SELECT MAX(model_year) FROM truck WHERE make = 'Peterbilt');
SELECT c.cust_name, MAX(s.weight) FROM shipment s JOIN city c ON s.city_id = c.city_id WHERE c.city_name = 'Boston' GROUP BY c.cust_name;
SELECT city_name FROM shipment WHERE ship_id = 1002 JOIN city ON shipment.city_id = city.city_id;
SELECT AVG(s.weight) FROM shipment s JOIN truck t ON s.truck_id = t.truck_id WHERE t.make = 'Mack' AND t.model_year = (SELECT MIN(model_year) FROM truck WHERE make = 'Mack');
SELECT CONCAT(d.first_name, ' ', d.last_name) AS full_name FROM shipment s JOIN driver d ON s.driver_id = d.driver_id WHERE s.city_id IN (SELECT city_id FROM city WHERE city_name = 'New York') AND s.ship_date LIKE '2016-02%';
SELECT cust_name FROM customer WHERE city IN (SELECT city_id FROM city WHERE city_name = 'Oak Park');
Error: 第 5627 个样本有 0 个SQL。
SELECT      D.driver_id,      AVG(COUNT(S.ship_id) / 24) AS avg_shipments_per_month FROM      shipment S JOIN      driver D ON S.driver_id = D.driver_id GROUP BY      D.driver_id
SELECT ROUND((SUM(CASE WHEN weight >= 10000 THEN 1 ELSE 0 END) / SUM(weight)) * 100, 2) AS percentage FROM shipment WHERE cust_id IN (SELECT cust_id FROM customer WHERE cust_name = 'Sunguard Window Tinting & Truck Accessories') AND CAST(ship_date AS DATE) = 2017;
SELECT (COUNT(s.ship_id) WHERE c.cust_name = 'Autoware Inc') / COUNT(s.ship_id) * 100 FROM shipment s JOIN customer c ON s.cust_id = c.cust_id WHERE s.driver_id IN (SELECT d.driver_id FROM driver d WHERE d.first_name = 'Sue' AND d.last_name = 'Newel');
SELECT COUNT(DISTINCT c.city_name) FROM city c JOIN shipment s ON c.city_id = s.city_id WHERE c.state = 'New Jersey' AND SUM(s.weight) > 20000;
SELECT COUNT(*) FROM city JOIN shipment ON city.city_id = shipment.city_id WHERE city.population > 50000 AND EXTRACT(YEAR FROM shipment.ship_date) = 2017;
SELECT SUM(s.weight)  FROM shipment s  JOIN truck t ON s.truck_id = t.truck_id  WHERE t.make = 'Peterbilt';
SELECT model_year FROM truck WHERE truck_id IN (   SELECT truck_id   FROM shipment   WHERE ship_id = 1003 );
SELECT make FROM shipment WHERE ship_id = 1011 JOIN truck ON shipment.truck_id = truck.truck_id;
SELECT first_name FROM driver WHERE driver_id IN (   SELECT driver_id   FROM shipment   WHERE ship_id = 1028 )
SELECT DISTINCT state FROM driver JOIN shipment ON driver.driver_id = shipment.driver_id WHERE ship_id = 1055;
SELECT d.address FROM driver d JOIN shipment s ON d.driver_id = s.driver_id GROUP BY d.address HAVING SUM(s.weight) > 50000;
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM driver WHERE driver_id IN (   SELECT driver_id   FROM shipment   WHERE ship_date = '2016-02-03' )
SELECT AVG(c.annual_revenue)  FROM customer c  JOIN shipment s ON c.cust_id = s.cust_id  WHERE s.weight < 65000;
SELECT (COUNT(c.cust_id) WHERE s.weight < 70000) / (SELECT COUNT(c.cust_id) FROM customer c WHERE c.cust_type = 'wholesaler') * 100
SELECT d.last_name FROM shipment s JOIN driver d ON s.driver_id = d.driver_id WHERE s.ship_id = 1088;
SELECT d.phone FROM shipment s JOIN driver d ON s.driver_id = d.driver_id GROUP BY d.phone HAVING SUM(s.weight) > 20000;
SELECT t.make, t.model_year FROM shipment s JOIN truck t ON s.truck_id = t.truck_id WHERE s.ship_id = 1055;
SELECT COUNT(*)  FROM truck  WHERE model_year = 2009;
SELECT COUNT(*)  FROM customer  WHERE cust_type = 'manufacturer';
SELECT COUNT(*) FROM customer WHERE state = 'CA' AND cust_type = 'retailer';
SELECT COUNT(*)  FROM city  WHERE state = 'Connecticut';
SELECT city_name FROM city WHERE state = 'CA' ORDER BY population DESC LIMIT 1;
SELECT annual_revenue FROM customer WHERE cust_name = 'Klett & Sons Repair';
SELECT d.first_name, d.last_name FROM shipment s JOIN driver d ON s.driver_id = d.driver_id WHERE s.weight = (SELECT MIN(weight) FROM shipment);
Error: 第 5652 个样本有 0 个SQL。
SELECT t.make FROM shipment s JOIN truck t ON s.truck_id = t.truck_id JOIN driver d ON s.driver_id = d.driver_id WHERE d.first_name = 'Zachery' AND d.last_name = 'Hicks';
SELECT cust_name FROM customer WHERE cust_id IN (   SELECT cust_id   FROM shipment   WHERE ship_date LIKE '2017-02-%' )
SELECT t.make, CONCAT(d.first_name, ' ', d.last_name) AS driver_name FROM shipment s JOIN customer c ON s.cust_id = c.cust_id JOIN driver d ON s.driver_id = d.driver_id JOIN truck t ON s.truck_id = t.truck_id WHERE c.cust_name = 'Klett & Sons Repair';
SELECT ship_id FROM shipment WHERE driver_id = (SELECT driver_id FROM driver WHERE first_name = 'Zachery' AND last_name = 'Hicks') ORDER BY weight DESC LIMIT 1;
SELECT COUNT(*)  FROM shipment  WHERE driver_id IN (   SELECT driver_id    FROM driver    WHERE last_name = 'Hicks' AND first_name = 'Zachery' ) AND city_id IN (   SELECT city_id    FROM city    WHERE city_name = 'New York' ) AND CAST(ship_date AS DATE) = 2016;
SELECT    'Texas (TX)' AS headquarters FROM    shipment s   JOIN truck t ON s.truck_id = t.truck_id WHERE    CAST(s.ship_date AS DATE) = 2016   AND t.make = 'Peterbilt' GROUP BY    t.make ORDER BY    COUNT(s.ship_id) DESC LIMIT 1;
SELECT COUNT(*) FROM shipment WHERE city_id IN (   SELECT city_id   FROM city   WHERE state = 'California'   ORDER BY population ASC   LIMIT 1 )
SELECT c.city_name FROM shipment s JOIN city c ON s.city_id = c.city_id WHERE s.weight = (SELECT MAX(weight) FROM shipment);
Error: 第 5661 个样本有 0 个SQL。
SELECT AVG(percentage)  FROM (SELECT COUNT(ship_id) / (SELECT COUNT(ship_id) FROM shipment) * 100 AS percentage       FROM shipment       WHERE CAST(ship_date AS DATE) = 2017       AND driver_id IN (SELECT driver_id FROM driver WHERE first_name = 'Zachery' AND last_name = 'Hicks')) AS temp;
SELECT (SUM(weight)          FROM shipment s          JOIN driver d ON s.driver_id = d.driver_id          JOIN customer c ON s.cust_id = c.cust_id          WHERE d.first_name = 'Zachery'            AND d.last_name = 'Hicks'            AND c.state = 'California'            AND CAST(s.ship_date AS DATE) = 2016)    * 100.0 / (SELECT SUM(weight) FROM shipment) AS percentage
SELECT COUNT(*)  FROM shipment  WHERE driver_id IN (SELECT driver_id FROM driver WHERE first_name = 'Zachary' AND last_name = 'Hicks');
SELECT ship_id FROM shipment WHERE city_id IN (   SELECT city_id   FROM city   ORDER BY area DESC   LIMIT 1 )
SELECT d.first_name, d.last_name FROM driver d JOIN shipment s ON d.driver_id = s.driver_id JOIN city c ON s.city_id = c.city_id WHERE c.population = (SELECT MIN(population) FROM city)
SELECT COUNT(*) FROM shipment WHERE city_id IN (SELECT city_id FROM city WHERE city_name = 'Cicero' AND state = 'Illinois') AND weight BETWEEN 9000 AND 15000;
SELECT model_year FROM truck WHERE truck_id IN (   SELECT truck_id   FROM shipment   WHERE ship_id = 1233 )
SELECT d.address FROM driver d JOIN shipment s ON d.driver_id = s.driver_id JOIN customer c ON s.cust_id = c.cust_id WHERE c.address = '7052 Carroll Road' AND c.city = 'San Diego' AND c.state = 'California';
SELECT COUNT(*) FROM shipment WHERE driver_id IN (   SELECT driver_id   FROM driver   WHERE last_name = 'Craft' AND first_name = 'Maria' ) AND CAST(ship_date AS DATE) = 2017;
SELECT model_year FROM truck WHERE truck_id IN (   SELECT truck_id   FROM shipment   WHERE ship_id = 1245 )
SELECT d.address FROM shipment s JOIN driver d ON s.driver_id = d.driver_id WHERE s.ship_id = 1127;
SELECT c.annual_revenue FROM customer c JOIN shipment s ON c.cust_id = s.cust_id WHERE s.ship_id = 1047;
SELECT weight FROM shipment WHERE ship_date = '2016-03-07' AND driver_id IN (   SELECT driver_id   FROM driver   WHERE first_name = 'Andrea' AND last_name = 'Simons' );
SELECT c.city_name FROM shipment s JOIN city c ON s.city_id = c.city_id WHERE s.ship_date <= '2017-01-16';
SELECT COUNT(*) FROM shipment WHERE city_id IN (   SELECT city_id   FROM city   WHERE state = 'NY' )
SELECT cust_name FROM customer WHERE cust_id IN (   SELECT cust_id   FROM shipment   WHERE ship_id = 1147 );
SELECT s.ship_id FROM shipment s JOIN city c ON s.city_id = c.city_id WHERE c.population = (SELECT MAX(population) FROM city);
SELECT d.first_name, d.last_name FROM shipment s JOIN driver d ON s.driver_id = d.driver_id WHERE s.ship_date = '2016-02-22';
Error: 第 5680 个样本有 0 个SQL。
SELECT c.address FROM customer c JOIN shipment s ON c.cust_id = s.cust_id WHERE s.ship_id = 1117;
SELECT (COUNT(ship_id) WHERE CAST(ship_date AS DATE) = 2017) * 100 / COUNT(ship_id) AS percentage FROM shipment WHERE city_id IN (   SELECT city_id   FROM city   WHERE state = 'TX' ) AND CAST(ship_date AS DATE) = 2017;
SELECT COUNT(ship_id) WHERE model_year = 2005 - COUNT(ship_id) WHERE model_year = 2006 FROM shipment JOIN truck ON shipment.truck_id = truck.truck_id WHERE truck.model_year IN (2005, 2006);
SELECT d.first_name, d.last_name FROM shipment s JOIN driver d ON s.driver_id = d.driver_id WHERE s.weight > (SELECT AVG(weight) * 0.95 FROM shipment);
SELECT title, COUNT(DISTINCT w.word)  FROM pages p  JOIN words w ON p.words = w.wid  WHERE p.lid = (SELECT lid FROM langs WHERE lang = 'Catalan')  AND p.revision = (SELECT MAX(revision) FROM pages)  GROUP BY title  ORDER BY LENGTH(title) DESC, title LIMIT 1;
SELECT p.title FROM pages p JOIN langs l ON p.lid = l.lid WHERE l.lang = 'ca' AND p.words < 10;
SELECT pages.page FROM pages WHERE pages.lid IN (   SELECT langs.lid   FROM langs   WHERE langs.lang = 'Catalan' ) AND pages.title LIKE '% Art %';
SELECT title FROM pages WHERE lid IN (SELECT lid FROM langs WHERE lang = 'Catalan') AND revision = 16203226;
Error: 第 5689 个样本有 0 个SQL。
SELECT COUNT(*) FROM pages p JOIN langs l ON p.lid = l.lid WHERE l.lang = 'Catalan' AND p.words BETWEEN 1000 AND 2000;
SELECT pid FROM pages WHERE lid IN (   SELECT lid   FROM langs   WHERE lang = 'Catalan' ) AND wid IN (   SELECT wid   FROM words   WHERE word = 'decimal' ) AND pid IN (   SELECT pid   FROM pages_words   WHERE wid IN (     SELECT wid     FROM words     WHERE word = 'decimal'   ) );
SELECT w.word  FROM words w  JOIN pages_words pw ON w.wid = pw.wid  JOIN pages p ON pw.pid = p.pid  JOIN langs langs ON p.lid = langs.lid  WHERE langs.lang = 'Catalan'  GROUP BY w.word  ORDER BY MAX(pw.occurrences) DESC  LIMIT 1;
SELECT w1st.word FROM biwords WHERE w2nd.word = 'antic';
SELECT p.title, pw.occurances FROM pages p JOIN pages_words pw ON p.pid = pw.pid WHERE pw.wid IN (   SELECT w.wid   FROM words w   WHERE w.word = 'quipu' );
SELECT AVG(sum) AS average_word_occurrences FROM (   SELECT SUM(occurrences) AS sum   FROM biwords   WHERE w1st = 'system' ) AS subquery;
SELECT SUM(pages)  FROM pages p  JOIN langs l ON p.lid = l.lid  WHERE l.lang = 'ca';
SELECT w1st.word AS w1, w2nd.word AS w2, occurrences FROM biwords JOIN langs ON biwords.lid = langs.lid WHERE langs.lang = 'Catalan' ORDER BY occurrences DESC LIMIT 1;
SELECT lw.wid FROM langs_words lw WHERE lw.lid IN (SELECT l.lid FROM langs l WHERE l.lang = 'catalan') AND lw.occurances <= 10;
SELECT p.title FROM pages p JOIN langs l ON p.lid = l.lid WHERE l.lang = 'Catalan' ORDER BY (SELECT COUNT(DISTINCT w.word) FROM words w WHERE w.wid IN (SELECT pw.wid FROM pages_words pw WHERE pw.pid = p.pid)) DESC LIMIT 1;
SELECT pid FROM pages WHERE title = 'Arqueozoologia';
SELECT lw.wid, lw.occurrences FROM langs l JOIN langs_words lw ON l.lid = lw.lid WHERE l.lang = 'Catalan' AND l.locale = 'Abadia' ORDER BY lw.occurrences DESC LIMIT 1;
SELECT p.title, lw.wid FROM pages p JOIN langs_pages lp ON p.lid = lp.lid JOIN langs langs ON lp.lid = langs.lid JOIN (SELECT lid, COUNT(DISTINCT wid) AS words, MAX(occurrences) AS max_occurrences       FROM pages_words       GROUP BY lid       ORDER BY words LIMIT 5) AS min_words ON p.lid = min_words.lid WHERE langs.locale = 'ca' ORDER BY p.title;
SELECT COUNT(biwords.occurances)  FROM biwords  WHERE biwords.lid IN (SELECT langs.lid FROM langs WHERE langs.lang = 'Catalan')  AND biwords.w1st.word = 'i'  AND biwords.w2nd.word = 'a';
SELECT w1st.word, w2nd.word FROM biwords WHERE occurrences = 2;
SELECT w1st.word, w2nd.word, max(occurrences)  FROM biwords  WHERE lid IN (SELECT lid FROM langs WHERE lang = 'Addicio')  GROUP BY w1st.word, w2nd.word  ORDER BY max(occurrences) DESC  LIMIT 1;
SELECT SUM(words)  FROM pages_words  WHERE pid IN (   SELECT pid    FROM pages    WHERE title IN ('Adam', 'Acampada') );
SELECT pid FROM pages WHERE title LIKE 'Aigua dolça%';
SELECT title FROM pages WHERE pid IN (   SELECT pid   FROM pages_words   GROUP BY pid   ORDER BY COUNT(*) DESC   LIMIT 1 )
SELECT AVG(words)  FROM pages  WHERE words >= 10  ORDER BY words  LIMIT 1;
SELECT pid  FROM pages  WHERE words < 10;
SELECT pid  FROM pages  WHERE title LIKE 'b%';
SELECT p.title  FROM pages p  JOIN pages_words pw ON p.pid = pw.pid  JOIN words w ON pw.wid = w.wid  WHERE w.word = 'desena';
SELECT w.wid FROM words w WHERE w.word = 'Sometent';
SELECT p.title FROM pages p WHERE p.words IN (   SELECT w.wid   FROM words w   WHERE w.wid = 88 ) AND p.title = (   SELECT p.title   FROM pages p   WHERE p.words IN (     SELECT w.wid     FROM words w     WHERE w.wid = 88   )   ORDER BY p.revision DESC   LIMIT 1 );
SELECT COUNT(*)  FROM pages_words pw  JOIN pages p ON pw.pid = p.pid  WHERE p.title LIKE '%Any anormalist%' AND pw.wid IN (   SELECT wid    FROM words    WHERE word = 'del' );
SELECT w1st.word, w2nd.word, occurrences FROM biwords WHERE occurrences = 4;
SELECT SUM(occurrences)  FROM biwords  WHERE w1st.word = "nombre" OR w2nd.word = "nombre";
SELECT w1st.word  FROM biwords  WHERE w1st.word = 'John' OR w2nd.word = 'John'  LIMIT 10;
SELECT p.pid  FROM pages p  JOIN words w ON p.words = w.wid  WHERE w.word = 'fresc';
SELECT w1.word AS word, w2.word AS paired_word FROM words w1 JOIN words w2 ON w1.wid + 1 = w2.wid WHERE w1.wid BETWEEN 1 AND 10;
SELECT SUM(occurrences)  FROM words  WHERE word IN (SELECT word FROM pages WHERE title = 'Atomium')  LIMIT 3;
SELECT word, MAX(occurrences) AS max_occurrences FROM words GROUP BY word ORDER BY max_occurrences DESC LIMIT 1;
SELECT pid  FROM pages  WHERE lid IN (SELECT lid FROM langs WHERE lang = 'Catalan')  AND title LIKE '%0%' OR title LIKE '%1%' OR title LIKE '%2%' OR title LIKE '%3%' OR title LIKE '%4%' OR title LIKE '%5%' OR title LIKE '%6%' OR title LIKE '%7%' OR title LIKE '%8%' OR title LIKE '%9%';
SELECT title FROM pages WHERE pid IN (   SELECT pid   FROM pages_words   GROUP BY pid   ORDER BY COUNT(wid) LIMIT 1 )
SELECT w1st, w2nd FROM biwords WHERE occurrences = (SELECT MAX(occurrences) FROM biwords);
SELECT COUNT(*)  FROM words  WHERE LENGTH(word) = 3;
SELECT AVG(DISTINCT w2.wid)  FROM words w2  JOIN pages_words pw ON w2.wid = pw.wid  JOIN pages p ON pw.pid = p.pid  WHERE p.title LIKE 'A%'  GROUP BY p.pid;
SELECT SUM(occurrences) / COUNT(occurrences)  FROM biwords  WHERE w1st = 34;
SELECT DIVIDE(COUNT(*), COUNT(DISTINCT pid)) as percentage FROM pages_words WHERE occurrences = 1500;
SELECT      DIVIDE(COUNT(biwords.occurances), COUNT(DISTINCT biwords.w1st)) AS percentage FROM      biwords WHERE      biwords.w1st = biwords.w2nd;
SELECT title  FROM pages  WHERE pid IN (   SELECT pid    FROM pages_words    WHERE wid IN (     SELECT wid      FROM words      WHERE word = 'comunitat'   ) );
SELECT COUNT(DISTINCT p.pid)  FROM pages p  JOIN pages_words pw ON p.pid = pw.pid  JOIN words w ON pw.wid = w.wid  WHERE w.word = 'ripoll';
SELECT COUNT(*)  FROM pages_words pw, words w  WHERE pw.pid IN (SELECT pid FROM pages WHERE title = 'Llista de conflictes armats')  AND pw.wid = w.wid  AND w.occurrences > 1;
SELECT COUNT(*)  FROM biwords  WHERE w1st IN (SELECT wid FROM words WHERE word = 'fukunaga')     OR w2nd IN (SELECT wid FROM words WHERE word = 'fukunaga')     AND w1st IN (SELECT wid FROM words WHERE word = 'd''egees')     OR w2nd IN (SELECT wid FROM words WHERE word = 'd''egees');
SELECT      DIVIDE(SUM(ow.occurrences), COUNT(p.pid)) AS percentage FROM      pages p     JOIN pages_words pw ON p.pid = pw.pid     JOIN words w ON pw.wid = w.wid GROUP BY      p.pid HAVING      COUNT(DISTINCT w.word) = 100;
Error: 第 5736 个样本有 0 个SQL。
SELECT p.page FROM pages p JOIN langs l ON p.lid = l.lid WHERE l.words > 300 LIMIT 3;
SELECT COUNT(occurrences)  FROM words  WHERE wid = 8;
SELECT wid, word, MAX(occurrences) AS max_occurrences FROM words GROUP BY word, wid ORDER BY max_occurrences DESC LIMIT 3;
SELECT COUNT(*)  FROM biwords  WHERE w1st = 1 AND w2nd = 25 OR w1st = 25 AND w2nd = 1;
SELECT COUNT(*)  FROM pages_words  WHERE pid IN (   SELECT pid    FROM pages    WHERE revision = 27457362 );
SELECT DIVIDE(COUNT(w1.word), COUNT(w1.word)) * 100 AS percentage FROM words w1 WHERE w1.lid = 1 AND w1.occurances > 16000;
SELECT pid FROM pages WHERE lid = (SELECT lid FROM langs WHERE lang = 'Catalan' AND locale = 'MAX(lid = 1)') ORDER BY words DESC LIMIT 1;
SELECT      DIVIDE(COUNT(biwords.lid where biwords.occurances < 80), COUNT(biwords.lid)) as percentage FROM      biwords WHERE      biwords.lid = (SELECT lid from langs where lang = 'Catalan')
SELECT COUNT(*) FROM pages WHERE lid IN (   SELECT lid   FROM langs   WHERE lang = 'ca' );
SELECT p.page, p.revision, p.title FROM pages p JOIN langs l ON p.lid = l.lid WHERE l.lang = 'Catalan' AND l.locale = 'Catalan-language' LIMIT 3;
SELECT lang FROM biwords WHERE w1st = 1 AND w2nd = 616;
SELECT COUNT(*)  FROM langs_words  WHERE lid = 1 AND word = 'nombre';
SELECT w2nd.word FROM biwords WHERE lid = (SELECT lid FROM langs_words WHERE w1st = 1 AND wid = (SELECT wid FROM words WHERE word = (SELECT w1st FROM biwords WHERE lid = (SELECT lid FROM langs_words WHERE w1st = 1 AND wid = 8968))))
SELECT word FROM words WHERE wid IN (   SELECT wid   FROM langs_words   WHERE lid = 1 ) ORDER BY occurrences DESC LIMIT 1;
SELECT COUNT(*)  FROM pages_words  WHERE pid = 44 AND wid IN (SELECT wid FROM words WHERE word = 'votives');
SELECT COUNT(*)  FROM biwords  WHERE lid IN (SELECT lid FROM langs WHERE pages IN (SELECT pid FROM pages WHERE page = 16))  AND w2nd = 109;
SELECT      DIVIDE(COUNT(w1.word), COUNT(w2.word)) * 100 AS percentage FROM      words w1 WHERE      w1.occurances < 180     AND w1.lang = 'ca' GROUP BY      w1.lang
SELECT      DIVIDE(COUNT(p.pid), COUNT(p.pid)) as percentage FROM      pages p WHERE      p.lid IN (SELECT l.lid FROM langs l WHERE l.lang = 'ca') AND     p.words > 10000;
SELECT COUNT(*)  FROM words  WHERE word = 'desena';
SELECT COUNT(*)  FROM words  WHERE occurrences > 10;
Error: 第 5757 个样本有 0 个SQL。
SELECT COUNT(*)  FROM words  WHERE occurrences BETWEEN 2000 AND 5000;
SELECT title  FROM pages  WHERE lid IN (SELECT lid FROM langs WHERE lang = 'Catalan')  AND revision = 106601;
SELECT title FROM pages WHERE revision = 28040864;
SELECT COUNT(*)  FROM biwords  WHERE w1st = (SELECT wid FROM words WHERE word = 'barcelona')     OR w2nd = (SELECT wid FROM words WHERE word = 'barcelona')     AND w1st = (SELECT wid FROM words WHERE word = 'precolombina')     OR w2nd = (SELECT wid FROM words WHERE word = 'precolombina');
SELECT locale FROM langs JOIN pages ON langs.lid = pages.lid WHERE pages.title = 'Anys 90';
SELECT word  FROM words  WHERE occurrences = 71303  AND EXISTS (   SELECT 1    FROM langs_words    WHERE lid IN (     SELECT lid      FROM langs      WHERE lang = 'Catalan'   )    AND wid = words.wid );
SELECT locale FROM langs JOIN pages ON langs.lid = pages.lid WHERE pages.title = 'Abril';
SELECT COUNT(*) FROM pages_words JOIN words ON pages_words.wid = words.wid WHERE pages_words.pid IN (   SELECT pid   FROM biwords   WHERE w1st = 100 AND w2nd = 317 );
SELECT COUNT(DISTINCT p.pid)  FROM pages_words pw  JOIN words w ON pw.wid = w.wid  WHERE w.occurrences = 2593;
SELECT p.title FROM pages p JOIN pages_words pw ON p.pid = pw.pid JOIN words w ON pw.wid = w.wid WHERE w.wid < 20;
SELECT COUNT(*)  FROM words  WHERE occurrences = (SELECT COUNT(DISTINCT wid)                       FROM langs_words                       WHERE lid = (SELECT lid                                    FROM langs                                    WHERE lang = 'english'));
SELECT w.word, lw.lid FROM words w JOIN langs_words lw ON w.wid = lw.wid WHERE lw.occurances = 8;
SELECT      DIVIDE(         SUM(occurrences),          COUNT(occurrences)     ) AS percentage FROM      words WHERE      wid IN (         SELECT              wid         FROM              pages_words         WHERE              pid IN (                 SELECT                      pid                 FROM                      pages                 WHERE                      revision < 106680             )     )
SELECT COUNT(DISTINCT p.pid)  FROM pages_words pw  JOIN words w ON pw.wid = w.wid  WHERE w.occurrences > 3000;
SELECT w1st, w2nd FROM biwords WHERE lid = (SELECT lid FROM langs_words WHERE wid = 20) AND w1st = (SELECT word FROM words WHERE wid = 20) AND lid = (SELECT lid FROM langs_words WHERE wid = 50) AND w2nd = (SELECT word FROM words WHERE wid = 50);
SELECT COUNT(DISTINCT pid)  FROM pages  WHERE lid IN (SELECT lid FROM langs WHERE lang = 'ca');
Error: 第 5774 个样本有 0 个SQL。
SELECT COUNT(*)  FROM pages_words  WHERE pid IN (SELECT pid FROM pages WHERE title = 'Asclepi');
SELECT pid FROM pages WHERE title IN ('Afluent', 'Asclepi') ORDER BY COUNT(wid) DESC;
SELECT occurrences  FROM words  WHERE word = 'nombre';
SELECT w.word  FROM words w  JOIN langs_words lw ON w.wid = lw.wid  JOIN langs l ON lw.lid = l.lid  WHERE l.lang = 'Catalan' AND lw.occurrences > 200000;
SELECT l.locale FROM langs l JOIN pages p ON l.lid = p.lid WHERE p.title = 'Asclepi';
SELECT COUNT(*)  FROM pages_words  WHERE pid IN (SELECT pid FROM pages WHERE title = 'Àbac')  AND wid IN (SELECT wid FROM words WHERE word = 'grec');
SELECT p.title FROM pages p JOIN pages_words pw ON p.pid = pw.pid JOIN words w ON pw.wid = w.wid WHERE w.word = 'grec' AND pw.occurrences > 20;
SELECT COUNT(*)  FROM words  WHERE word = 'grec'  AND occurrences = 52;
SELECT occurrences  FROM biwords  WHERE lid IN (SELECT lid FROM langs_words WHERE word = 'àbac')  AND w1st = 'àbac'  AND lid IN (SELECT lid FROM langs_words WHERE word = 'xinès')  AND w2nd = 'xinès';
SELECT 'àbac-xinès' AS pair1, 'àbac-grec' AS pair2,         (SELECT MAX(occurrences) FROM biwords WHERE w1st = 'àbac' AND w2nd = 'xinès') AS occurrences1,         (SELECT MAX(occurrences) FROM biwords WHERE w1st = 'àbac' AND w2nd = 'grec') AS occurrences2 FROM dual ORDER BY occurrences1 DESC, occurrences2 DESC;
SELECT (w.occurrences - bw.occurrences)  FROM langs l  JOIN langs_words lw ON l.lid = lw.lid  JOIN words w ON lw.wid = w.wid  JOIN biwords bw ON l.lid = bw.lid  WHERE l.lang = 'àbac' AND w.word = 'àbac'    AND l.lang = 'xinès' AND w.word = 'xinès';
SELECT *  FROM biwords  WHERE w1st = 'àbac';
SELECT SUM(biwords.occurances)  FROM biwords  WHERE w1st = 'àbac';
SELECT COUNT(DISTINCT p.pid) FROM pages p JOIN langs l ON p.lid = l.lid JOIN biwords bw ON l.lang = bw.lang WHERE bw.w1st = 'àbac' AND bw.w2nd = 'xinès';
SELECT DIVIDE(SUBTRACT((SELECT occurrences FROM pages_words pw WHERE pw.pid IN (SELECT pid FROM pages p WHERE p.title = 'Àbac') AND pw.wid IN (SELECT wid FROM words w WHERE w.word = 'grec')),                        (SELECT occurrences FROM pages_words pw WHERE pw.pid IN (SELECT pid FROM pages p WHERE p.title = 'Astronomia') AND pw.wid IN (SELECT wid FROM words w WHERE w.word = 'grec'))),                 (SELECT occurrences FROM pages_words pw WHERE pw.pid IN (SELECT pid FROM pages p WHERE p.title = 'Astronomia') AND pw.wid IN (SELECT wid FROM words w WHERE w.word = 'grec'))) AS percentage
SELECT COUNT(*)  FROM pages  WHERE lid IN (SELECT lid FROM langs WHERE lang = 'ca');
SELECT w.wid FROM words w JOIN langs_words lw ON w.wid = lw.wid JOIN langs l ON lw.lid = l.lid WHERE l.lang = 'Catalan' ORDER BY lw.occurrences DESC LIMIT 1;
SELECT w2nd FROM biwords WHERE occurrences = (SELECT MAX(occurrences) FROM biwords)
SELECT SUM(occurrences)  FROM words  WHERE word = 'panajot';
SELECT word  FROM words  WHERE occurrences = 340691;
SELECT wid FROM words WHERE word = 'periodograma';
SELECT w2nd FROM biwords WHERE occurrences = 116430;
SELECT SUM(occurrences)  FROM biwords  WHERE lid IN (SELECT lid FROM langs_words WHERE wid IN (SELECT wid FROM words WHERE word = 'riu') AND w1st IN (SELECT wid FROM words WHERE word = 'riu') OR w2nd IN (SELECT wid FROM words WHERE word = 'riu'));
SELECT w1st FROM biwords JOIN langs l ON biwords.lid = l.lid JOIN pages p ON l.lid = p.lid WHERE p.title = 'Agricultura' ORDER BY biwords.occurrences DESC LIMIT 1;
SELECT COUNT(occurrences)  FROM pages_words  WHERE pid IN (SELECT pid FROM pages WHERE title = 'Astre')  AND wid = 2823;
SELECT p.title FROM pages p JOIN pages_words pw ON p.pid = pw.pid WHERE pw.wid = 174 ORDER BY pw.occurrences DESC LIMIT 1;
SELECT SUM(pid)  FROM pages_words, words  WHERE words.word = 'heròdot' AND pages_words.wid = words.wid AND pages_words.pid = pages.pid;
SELECT w.wid FROM words w JOIN pages_words pw ON w.wid = pw.wid JOIN pages p ON pw.pid = p.pid WHERE p.revision = 28278070 ORDER BY pw.occurrences DESC LIMIT 1;
SELECT COUNT(*)  FROM biwords  WHERE w1st IN (SELECT wid FROM words WHERE word = 'que')    AND w2nd IN (SELECT wid FROM words WHERE word = 'gregorio');
SELECT SUM(biwords.occurances) FROM biwords WHERE biwords.w2nd IN (   SELECT words.wid   FROM words   WHERE words.word = 'base' )
SELECT langs_words.occurrences  FROM langs_words  WHERE lid = (SELECT lid FROM langs WHERE lang = 'Catalan') AND word = 'exemple';
SELECT word FROM words WHERE occurrences = 274499 AND EXISTS (   SELECT 1   FROM langs_words   WHERE lid = 1 AND wid = words.wid );
SELECT    (biwords.occurrences WHERE w1st = 'a' AND w2nd = 'base' - biwords.occurrences WHERE w1st = 'a' AND w2nd = 'decimal') / biwords.occurrences WHERE w1st = 'a' AND w2nd = 'decimal'
SELECT DIVIDE(SUM(occurrences), SUM(SUM(occurrences))) * 100 FROM pages_words JOIN pages ON pages_words.pid = pages.pid JOIN words ON pages_words.wid = words.wid WHERE words.word = 'grec' AND pages.title = 'Art';
SELECT COUNT(*) FROM pages WHERE lid = 1 AND words > 4000;
Error: 第 5810 个样本有 0 个SQL。
SELECT word  FROM words  WHERE word IN (SELECT w2nd                  FROM biwords                  WHERE lid IN (SELECT lid                                FROM langs                                WHERE lang = 'Catalan')                  UNION                  SELECT w1st                  FROM biwords                  WHERE lid IN (SELECT lid                                FROM langs                                WHERE lang = 'Catalan'))  ORDER BY occurrences DESC  LIMIT 1;
SELECT title FROM pages WHERE lid = 1 ORDER BY (SELECT COUNT(DISTINCT word) FROM words WHERE words.wid IN (SELECT wid FROM pages_words WHERE pid = pages.pid)) DESC LIMIT 3;
SELECT revision FROM pages WHERE lid = 1 AND title = 'Arqueologia';
SELECT COUNT(*) FROM pages WHERE lid = 1 AND words > 300 AND revision > 28330000;
SELECT pid FROM pages WHERE pid IN (   SELECT pid   FROM pages_words   WHERE wid IN (     SELECT wid     FROM words     WHERE word = 'nombre'   ) );
SELECT COUNT(*) FROM pages p JOIN langs l ON p.lid = l.lid JOIN langs_words lw ON l.lid = lw.lid JOIN words w ON lw.wid = w.wid JOIN pages_words pw ON p.pid = pw.pid WHERE l.lang = 'Catalan' AND w.word = 'nombre' AND pw.occurrences > 5;
SELECT COUNT(*)  FROM biwords  WHERE w2nd = (SELECT wid FROM words WHERE word = 'grec');
SELECT title  FROM pages  WHERE pid IN (   SELECT pid    FROM pages_words    WHERE wid IN (     SELECT wid      FROM words      WHERE word = 'grec'   ) AND occurrences = 52 );
SELECT COUNT(*)  FROM biwords  WHERE w1st = 'àbac' AND occurrences > 10;
SELECT AVG(occurrences)  FROM pages_words  WHERE wid IN (SELECT wid FROM words WHERE word = 'grec');
SELECT COUNT(*)  FROM Airlines  WHERE FL_DATE = '2018/8/1';
SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1' AND ORIGIN = 'JFK';
SELECT DEST FROM Airlines WHERE CANCELLED = 1 AND FL_DATE = '2018/8/1';
SELECT FL_DATE FROM Airlines WHERE CANCELLED = 1 AND CANCELLATION_CODE = 'A';
SELECT DISTINCT ORIGIN FROM Airlines WHERE FL_DATE = '2018/8/1' AND DEP_DELAY > 0
SELECT COUNT(*)  FROM Airlines  WHERE FL_DATE = '2018/8/1' AND ORIGIN = (SELECT Code FROM Airports WHERE Description = 'New York, NY: John F. Kennedy International');
SELECT DEST_AIRPORT_ID FROM Airlines WHERE FL_DATE = '2018/8/1' AND DEP_DELAY = (SELECT MAX(DEP_DELAY) FROM Airlines WHERE FL_DATE = '2018/8/1');
SELECT COUNT(*) FROM Airlines WHERE ORIGIN_AIRPORT_ID IN (   SELECT Airports.Code   FROM Airports   WHERE Description = 'New York, NY: John F. Kennedy International' ) AND ARR_DELAY < 0;
Error: 第 5829 个样本有 0 个SQL。
Error: 第 5830 个样本有 0 个SQL。
SELECT OP_CARRIER_FL_NUM FROM Airlines WHERE OP_CARRIER_AIRLINE_ID IN (   SELECT Air_Carriers.Code   FROM Air_Carriers   WHERE Description = 'American Airlines Inc.: AA' ) AND ORIGIN = (   SELECT Airports.Code   FROM Airports   WHERE Description = 'New York, NY: John F. Kennedy International' );
SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1' AND OP_CARRIER_AIRLINE_ID IN (SELECT Code FROM Air Carriers WHERE Description = 'American Airlines Inc.: AA') AND ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME;
SELECT OP_CARRIER_FL_NUM FROM Airlines WHERE OP_CARRIER_AIRLINE_ID = (SELECT Code FROM Air Carriers WHERE Description = 'American Airlines Inc.: AA') ORDER BY DEP_DELAY DESC LIMIT 1;
SELECT COUNT(*)  FROM Airlines  WHERE OP_CARRIER_AIRLINE_ID IN (SELECT Code FROM Air Carriers WHERE Description = 'American Airlines Inc.: AA')  AND DEST = 'JFK';
SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1' AND OP_CARRIER_AIRLINE_ID IN (   SELECT Code   FROM Air Carriers   WHERE Description = 'American Airlines Inc.: AA' ) AND CANCELLED = 1;
SELECT      SUM(CASE WHEN OP_CARRIER_AIRLINE_ID IN (SELECT Code FROM Air Carriers WHERE Description = 'American Airlines Inc.: AA') THEN 1 ELSE 0 END) AS American,     SUM(CASE WHEN OP_CARRIER_AIRLINE_ID IN (SELECT Code FROM Air Carriers WHERE Description = 'Endeavor Air Inc.: 9E') THEN 1 ELSE 0 END) AS Endeavor FROM      Airlines WHERE      FL_DATE = '2018/8/1';
SELECT AVG(DEP_DELAY)  FROM Airlines  WHERE OP_CARRIER_AIRLINE_ID = (SELECT Code FROM Air Carriers WHERE Description = 'American Airlines Inc.: AA');
SELECT    AVG(COUNT(OP_CARRIER_AIRLINE_ID))  FROM    Airlines  WHERE    FL_DATE LIKE '2018/8%'    AND Description = 'American Airlines Inc.: AA';
Error: 第 5839 个样本有 0 个SQL。
SELECT COUNT(DISTINCT TAIL_NUM) FROM Airlines WHERE FL_DATE = '2018/8/27' AND ORIGIN_AIRPORT_ID = (SELECT Airports.Code FROM Airports WHERE Description = 'Los Angeles, CA: Los Angeles International');
SELECT COUNT(DISTINCT TAIL_NUM) FROM Airlines WHERE FL_DATE = '2018/8/7' AND DEST_AIRPORT_ID IN (   SELECT Airports.Code   FROM Airports   WHERE Description LIKE '%Oakland%' )
SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/2' AND OP_CARRIER_AIRLINE_ID IN (   SELECT Airline_ID   FROM Air Carriers   WHERE Description = 'Alaska Airlines Inc.: AS' ) AND DEP_DELAY > 0;
SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/12' AND DEST = 'MIA' AND ARR_DELAY < 0;
SELECT COUNT(*) FROM Airlines JOIN Air Carriers ON Airlines.OP_CARRIER_AIRLINE_ID = Air Carriers.Code WHERE Air Carriers.Description = 'American Airlines Inc.: AA' AND Cancelled = 1 AND CANCELLATION_CODE = 'A';
Error: 第 5845 个样本有 0 个SQL。
SELECT COUNT(TAIL_NUM) FROM Airlines WHERE FL_DATE = '2018/8/7' AND OP_CARRIER_AIRLINE_ID IN (   SELECT Code   FROM Air Carriers   WHERE Description = 'Spirit Air Lines: NK' );
SELECT a.Description FROM Airlines a JOIN Air Carriers ac ON a.OP_CARRIER_AIRLINE_ID = ac.Code WHERE a.TAIL_NUM = 'N702SK';
SELECT a.Description FROM Airlines a JOIN Airports d ON a.DEST_AIRPORT_ID = d.Code WHERE a.FL_DATE = '2018/8/15' GROUP BY a.DEST_AIRPORT_ID, a.Description ORDER BY COUNT(a.DEST_AIRPORT_ID) DESC LIMIT 1;
Error: 第 5849 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Airlines  WHERE FL_DATE = '2018/8/15'  AND DEST_AIRPORT_ID = (SELECT Code FROM Airports WHERE Description = 'Lake Charles, LA: Lake Charles Regional');
SELECT COUNT(*) FROM Airlines WHERE ORIGIN_AIRPORT_ID = (SELECT Code FROM Airports WHERE Description = 'San Diego, CA: San Diego International') AND DEST_AIRPORT_ID = (SELECT Code FROM Airports WHERE Description = 'Los Angeles, CA: Los Angeles International') AND FL_DATE LIKE '2018/8%';
SELECT      MULTIPLY(DIVIDE(SUM(CANCELLED = 1 AND CANCELLATION_CODE = 'C'), COUNT(a.CODE)), 100) AS percentage FROM      Airlines a     JOIN Airports b ON a.ORIGIN_AIRPORT_ID = b.CODE WHERE      b.Description = 'Los Angeles, CA: Los Angeles International'
SELECT MULTIPLY(DIVIDE(SUM(CASE WHEN ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME THEN 1 ELSE 0 END), COUNT(DISTINCT DEST_AIRPORT_ID)), 100) AS percentage FROM Airlines JOIN Airports AS T2 ON Airlines.DEST_AIRPORT_ID = T2.Code WHERE T2.Description LIKE '%Pittsburgh%';
Error: 第 5854 个样本有 0 个SQL。
SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1' AND DEP_DELAY <= 0;
SELECT Code FROM Airports WHERE Description LIKE '%Ankara, Turkey%';
SELECT MAX(WEATHER_DELAY)  FROM Airlines  WHERE ORIGIN_AIRPORT_ID = 12264;
SELECT Code FROM Airports WHERE Description = 'Anita Bay, AK: Anita Bay Airport';
SELECT ORIGIN_AIRPORT_ID FROM Airlines WHERE LATE_AIRCRAFT_DELAY = (SELECT MAX(LATE_AIRCRAFT_DELAY) FROM Airlines);
SELECT COUNT(*) FROM Airlines WHERE ORIGIN_AIRPORT_ID = (SELECT ID FROM Airports WHERE Description = 'Chicago, IL: Chicago O''Hare International') AND DEST_AIRPORT_ID = (SELECT ID FROM Airports WHERE Description = 'Atlanta, GA: Hartsfield-Jackson Atlanta International');
SELECT COUNT(TAIL_NUM)  FROM Airlines  WHERE OP_CARRIER_AIRLINE_ID IN (   SELECT Airline_ID    FROM Air Carriers    WHERE Description = 'Southwest Airlines Co.: WN' )
SELECT FL_DATE, COUNT(*) AS num_cancelled FROM Airlines WHERE FL_DATE LIKE '2018/8%' AND CANCELLED = 1 AND CANCELLATION_CODE = 'A' AND ORIGIN_AIRPORT_ID IN (   SELECT Airports.ID   FROM Airports   WHERE Description = 'Dallas/Fort Worth, TX: Dallas/Fort Worth International' ) GROUP BY FL_DATE ORDER BY num_cancelled DESC LIMIT 1;
SELECT TAIL_NUM FROM Airlines WHERE FL_DATE LIKE '2018/8%' AND ORIGIN_AIRPORT_ID IN (SELECT Code FROM Airports WHERE Description = 'Bakersfield, CA: Meadows Field') AND ARR_DELAY <= 0;
SELECT OP_CARRIER_AIRLINE_ID FROM Airlines WHERE DEST = (SELECT Code FROM Airports WHERE Description = 'Boston, MA: Logan International') AND SECURITY_DELAY = (SELECT MAX(SECURITY_DELAY) FROM Airlines WHERE DEST = (SELECT Code FROM Airports WHERE Description = 'Boston, MA: Logan International'));
SELECT a.Description, MAX(COUNT(t.TAIL_NUM)) AS Total_Aircraft FROM Air Carriers a JOIN Airlines t ON a.Code = t.OP_CARRIER_AIRLINE_ID GROUP BY a.Description ORDER BY Total_Aircraft DESC LIMIT 5;
SELECT Description  FROM Air Carriers  WHERE Code = (SELECT OP_CARRIER_AIRLINE_ID                FROM Airlines                WHERE CANCELLED = 0                GROUP BY OP_CARRIER_AIRLINE_ID                ORDER BY COUNT(CANCELLED = 0) DESC                LIMIT 1);
SELECT Description FROM Air Carriers WHERE Code = (SELECT OP_CARRIER_AIRLINE_ID               FROM Airlines               WHERE TAIL_NUM = 'N202NN');
SELECT Description FROM Air Carriers WHERE Code = (SELECT OP_CARRIER_AIRLINE_ID               FROM Airlines               WHERE DEST = (SELECT Code                             FROM Airports                             WHERE Description = 'Chicago, IL: Chicago Midway International')               GROUP BY OP_CARRIER_AIRLINE_ID               ORDER BY COUNT(DEST) DESC               LIMIT 1);
SELECT TAIL_NUM FROM Airlines WHERE OP_CARRIER_AIRLINE_ID IN (   SELECT OP_CARRIER_AIRLINE_ID   FROM Airlines   WHERE OP_CARRIER_AIRLINE_ID IN (     SELECT OP_CARRIER_AIRLINE_ID     FROM Air Carriers     WHERE Description = 'Compass Airlines: CP'   )   AND ORIGIN = 'LAX'   AND DEST = 'ABQ' ) GROUP BY TAIL_NUM ORDER BY COUNT(OP_CARRIER_AIRLINE_ID) DESC LIMIT 1;
SELECT a.Description, a.Code, COUNT(o.ORIGIN) as total_flights FROM Airlines o JOIN Air Carriers a ON o.OP_CARRIER_AIRLINE_ID = a.Code JOIN Airports p ON o.ORIGIN_AIRPORT_ID = p.Code WHERE a.Description = 'Republic Airline: YX' GROUP BY a.Description, a.Code ORDER BY total_flights DESC LIMIT 1;
SELECT      a.Code, a.Description FROM      Airlines a JOIN      (SELECT           OP_CARRIER_AIRLINE_ID,           MIN(ACTUAL_ELAPSED_TIME - CRS_ELAPSED_TIME) AS fastest_flight      FROM           Airlines      GROUP BY           OP_CARRIER_AIRLINE_ID) AS fastest_flight_airline ON      a.OP_CARRIER_AIRLINE_ID = fastest_flight_airline.OP_CARRIER_AIRLINE_ID
SELECT    SUM(LATE_AIRCRAFT_DELAY) / 60 AS total_hours,   TAIL_NUM FROM    Airlines WHERE    FL_DATE LIKE '2018/8/%' AND   OP_CARRIER_AIRLINE_ID IN (     SELECT        Air_Carriers.Code     FROM        Air_Carriers     WHERE        Description = 'Delta Air Lines Inc.: DL'   ) AND   LATE_AIRCRAFT_DELAY > 0 GROUP BY    TAIL_NUM ORDER BY    SUM(LATE_AIRCRAFT_DELAY) / 60 DESC LIMIT 1;
SELECT Code, Description FROM Airports LIMIT 3;
SELECT Code FROM Air Carriers WHERE Description LIKE 'Mississippi Valley Airlines%';
SELECT CRS_DEP_TIME, DEP_TIME FROM Airlines WHERE FL_DATE = '2018/8/13' AND TAIL_NUM = 'N627AE' AND ORIGIN = 'PHL' AND DEST = 'MDT';
SELECT COUNT(*)  FROM Airlines  WHERE FL_DATE = '2018/8/1' AND ORIGIN = 'ABE';
SELECT DEST FROM Airlines WHERE ORIGIN = 'ABY';
SELECT COUNT(*)  FROM Airlines  WHERE ORIGIN = 'DFW'    AND DEST = 'SNA'    AND DEP_DELAY = 0;
SELECT COUNT(*)  FROM Airlines  WHERE ORIGIN_CITY_MARKET_ID IN (SELECT Airports.AIRPORT_ID                                   FROM Airports                                   WHERE Description = 'Charlotte, NC: Charlotte Douglas International')    AND DEST_CITY_MARKET_ID IN (SELECT Airports.AIRPORT_ID                                 FROM Airports                                 WHERE Description = 'Austin, TX: Austin - Bergstrom')    AND CANCELLATION_CODE = 'A';
SELECT AC.Description, COUNT(CANCELLED = 1) as Cancelled_Flights FROM Airlines A JOIN Air Carriers AC ON A.OP_CARRIER_AIRLINE_ID = AC.Code WHERE CANCELLED = 1 GROUP BY AC.Description ORDER BY Cancelled_Flights DESC LIMIT 1;
SELECT DEP_TIME FROM Airlines WHERE FL_DATE = '2018/8/20' AND OP_CARRIER_AIRLINE_ID IN (   SELECT Code   FROM Air Carriers   WHERE Description LIKE '%JetBlue Airways%' ) AND TAIL_NUM = 'N903JB' AND DEST_AIRPORT_ID IN (   SELECT Code   FROM Airports   WHERE Description LIKE '%Fort Lauderdale-Hollywood%' );
SELECT      Description  FROM      Air Carriers  WHERE      Code = (SELECT                  OP_CARRIER_AIRLINE_ID              FROM                  Airlines              WHERE                  ORIGIN = 'ACY'                  AND DEST = 'FLL');
SELECT Description FROM Airports WHERE Code = 'A11';
Error: 第 5884 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Airports  WHERE Code LIKE 'C%';
SELECT DEST FROM Airlines WHERE OP_CARRIER_FL_NUM = 1596;
SELECT Description FROM Airports WHERE Code LIKE '%3';
SELECT Code FROM Airports WHERE Description = 'Driftwood Bay, AK: Driftwood Bay Airport';
SELECT COUNT(*)  FROM Airlines  WHERE CANCELLED = 1;
Error: 第 5890 个样本有 0 个SQL。
SELECT    A.Origin  FROM    Airlines A  JOIN    Airports O ON A.ORIGIN_AIRPORT_ID = O.Code  JOIN    Airports D ON A.DEST_AIRPORT_ID = D.Code  WHERE    A.ACTUAL_ELAPSED_TIME = (SELECT MIN(ACTUAL_ELAPSED_TIME) FROM Airlines);
SELECT FL_DATE, TAIL_NUM FROM Airlines WHERE OP_CARRIER_AIRLINE_ID = (SELECT Code FROM Air Carriers WHERE Description = 'Ross Aviation Inc.: GWE');
SELECT ac.Code, ac.Description FROM Airlines a JOIN Air Carriers ac ON a.OP_CARRIER_AIRLINE_ID = ac.Code ORDER BY a.ARR_TIME ASC LIMIT 1;
Error: 第 5894 个样本有 0 个SQL。
SELECT a.Description FROM Airlines a JOIN Airports d ON a.DEST_AIRPORT_ID = d.Code WHERE d.Description = 'Miami International Airport' AND d.Code = 'MIA';
SELECT      ac.Description  FROM      Airlines a  INNER JOIN      Air Carriers ac ON a.OP_CARRIER_AIRLINE_ID = ac.Code  WHERE      a.CANCELLED = 1;
SELECT ACTUAL_ELAPSED_TIME FROM Airlines JOIN Air Carriers ON Airlines.OP_CARRIER_AIRLINE_ID = Air Carriers.Code WHERE Air Carriers.Description = 'Semo Aviation Inc.: SEM';
SELECT TAIL_NUM FROM Airlines WHERE OP_CARRIER_AIRLINE_ID = (SELECT Code FROM Air Carriers WHERE Description = 'Asap Air Inc.: ASP') ORDER BY DEP_DELAY DESC LIMIT 1;
SELECT a.description FROM Airlines a JOIN Air Carriers c ON a.OP_CARRIER_AIRLINE_ID = c.Code WHERE a.DEP_DELAY = 0;
SELECT      a.Description  FROM      Airlines a  JOIN      Air Carriers c ON a.OP_CARRIER_AIRLINE_ID = c.Code  WHERE      a.ACTUAL_ELAPSED_TIME = (SELECT MAX(ACTUAL_ELAPSED_TIME) FROM Airlines);
SELECT DEST FROM Airlines JOIN Air Carriers ON Airlines.OP_CARRIER_AIRLINE_ID = Air Carriers.Code WHERE Air Carriers.Description = 'Southeast Alaska Airlines: WEB';
Error: 第 5902 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Airlines  WHERE FL_DATE = '2018/8/2' AND OP_CARRIER_AIRLINE_ID IN (   SELECT Code    FROM Air Carriers    WHERE Description LIKE '%Horizon Air%' )
SELECT TAIL_NUM FROM Airlines WHERE OP_CARRIER_AIRLINE_ID IN (   SELECT Code   FROM Air Carriers   WHERE Description = 'Iscargo Hf: ICQ' ) AND ARR_TIME <= 1000;
SELECT FL_DATE FROM Airlines WHERE OP_CARRIER_AIRLINE_ID IN (SELECT Code FROM Air Carriers WHERE Description = 'Profit Airlines Inc.: XBH') AND ACTUAL_ELAPSED_TIME < 100;
Error: 第 5906 个样本有 0 个SQL。
SELECT a.Description  FROM Airlines a  WHERE a.FL_DATE = '2018/8/25' AND a.DEP_DELAY = -5  JOIN Air Carriers c ON a.OP_CARRIER_AIRLINE_ID = c.Code;
SELECT ac.Description FROM Airlines a JOIN Air Carriers ac ON a.OP_CARRIER_AIRLINE_ID = ac.Code WHERE a.TAIL_NUM = 'N922US' AND a.ORIGIN = 'PHX';
SELECT ac.Description FROM Airlines a JOIN Air Carriers ac ON a.OP_CARRIER_AIRLINE_ID = ac.Code WHERE ARR_DELAY < 0 AND DEP_DELAY < 0;
SELECT TAIL_NUM FROM Airlines WHERE OP_CARRIER_AIRLINE_ID = (SELECT Code FROM Air Carriers WHERE Description = 'Southwest Airlines Co.: WN') AND ACTUAL_ELAPSED_TIME < (SELECT AVG(ACTUAL_ELAPSED_TIME) FROM Airlines WHERE OP_CARRIER_AIRLINE_ID = (SELECT Code FROM Air Carriers WHERE Description = 'Southwest Airlines Co.: WN')) * 0.8;
SELECT ac.Description FROM Air_Carriers ac JOIN Airlines a ON ac.Code = a.OP_CARRIER_AIRLINE_ID WHERE DEST = 'PHX' AND ARR_TIME < (SELECT AVG(ARR_TIME) * 0.4 FROM Airlines WHERE DEST = 'PHX');
SELECT    MULTIPLY(DIVIDE(SUM(DEP_DELAY < 0), COUNT(DEP_DELAY)), 1.0) AS percentage FROM    Airlines   JOIN Air Carriers ON Airlines.OP_CARRIER_AIRLINE_ID = Air Carriers.Code WHERE    Air Carriers.Description LIKE '%American Airlines%';
Error: 第 5913 个样本有 0 个SQL。
SELECT publication_date FROM book WHERE num_pages = (SELECT MAX(num_pages) FROM book);
SELECT publisher_name FROM book WHERE title = 'The Illuminati' JOIN publisher ON book.publisher_id = publisher.publisher_id;
SELECT COUNT(*)  FROM book  WHERE publisher_id IN (SELECT publisher_id FROM publisher WHERE publisher_name = 'Thomas Nelson');
SELECT publisher_name FROM publisher WHERE publisher_id = (   SELECT publisher_id   FROM book   GROUP BY publisher_id   ORDER BY COUNT(book_id) DESC   LIMIT 1 )
Error: 第 5918 个样本有 0 个SQL。
SELECT COUNT(*)  FROM book  WHERE publisher_id IN (SELECT publisher_id FROM publisher WHERE publisher_name = 'Thomas Nelson')  AND num_pages > 300;
SELECT publisher_name FROM book JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE num_pages = (SELECT MAX(num_pages) FROM book);
SELECT COUNT(*)  FROM book  WHERE language_id IN (SELECT language_id FROM book_language WHERE language_name = 'English');
SELECT title  FROM book  WHERE language_id IN (SELECT language_id FROM book_language WHERE language_name = 'British English');
SELECT MIN(ol.price)  FROM order_line ol  JOIN book b ON ol.book_id = b.book_id  WHERE b.title = 'The Little House';
Error: 第 5924 个样本有 0 个SQL。
SELECT COUNT(*)  FROM book b  JOIN cust_order co ON b.book_id = co.order_id  JOIN customer c ON co.customer_id = c.customer_id  WHERE c.first_name = 'Lucas' AND c.last_name = 'Wyldbore' AND b.num_pages > 300;
SELECT SUM(ol.price)  FROM order_line ol  JOIN cust_order co ON ol.order_id = co.order_id  JOIN customer c ON co.customer_id = c.customer_id  WHERE c.email = 'lucas.wyldbore';
SELECT AVG(ol.price)  FROM order_line ol  JOIN cust_order co ON ol.order_id = co.order_id  JOIN customer c ON co.customer_id = c.customer_id  WHERE c.first_name = 'Lucas' AND c.last_name = 'Wyldbore';
SELECT      (SUM(ol.price > 13) / COUNT(ol.order_id)) * 100 AS percentage FROM      order_line ol JOIN      cust_order co ON ol.order_id = co.order_id JOIN      customer c ON co.customer_id = c.customer_id WHERE      c.first_name = 'Lucas' AND c.last_name = 'Wyldbore';
Error: 第 5929 个样本有 0 个SQL。
SELECT COUNT(*)  FROM cust_order  WHERE customer_id IN (SELECT customer_id FROM customer WHERE first_name = 'Cordy' AND last_name = 'Dumbarton');
Error: 第 5931 个样本有 0 个SQL。
SELECT publisher_name FROM publisher WHERE publisher_id = (   SELECT publisher_id   FROM book   GROUP BY publisher_id   ORDER BY COUNT(book_id) DESC   LIMIT 1 );
SELECT COUNT(*)  FROM book  WHERE publisher_id IN (SELECT publisher_id FROM publisher WHERE publisher_name = 'Kensington');
SELECT language_name FROM book_language JOIN book ON book_language.language_id = book.language_id WHERE book.book_id = 1405;
SELECT c.first_name, c.last_name FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id GROUP BY c.customer_id ORDER BY COUNT(co.order_id) DESC LIMIT 1;
SELECT title FROM book WHERE book_id = (   SELECT book_id   FROM book_author   GROUP BY book_id   ORDER BY COUNT(order_id) DESC   LIMIT 1 )
SELECT COUNT(DISTINCT book_id)  FROM book_author  JOIN author ON book_author.author_id = author.author_id  WHERE author_name = 'David Foster Wallace';
SELECT COUNT(*)  FROM cust_order  WHERE order_id IN (   SELECT order_id    FROM book    WHERE title = 'O Xará' );
Error: 第 5939 个样本有 0 个SQL。
SELECT COUNT(*)  FROM address  WHERE country_id IN (SELECT country_id FROM country WHERE country_name = 'Ukraine');
SELECT country_name FROM country WHERE city = 'Žirovnica';
SELECT (SUM(CASE WHEN shipping_method.method_name = 'International' THEN 1 ELSE 0 END) / COUNT(*)) * 100 FROM cust_order JOIN shipping_method ON cust_order.shipping_method_id = shipping_method.method_id WHERE cust_order.order_date LIKE '2022-11-10%';
SELECT AVG(b.num_pages)  FROM book b  JOIN book_author ba ON b.book_id = ba.book_id  JOIN author a ON ba.author_id = a.author_id  WHERE a.author_name = 'David Coward';
SELECT method_name, cost FROM shipping_method WHERE method_name = 'Standard' ORDER BY cost LIMIT 1;
SELECT title FROM book WHERE publication_date LIKE '1900%' ORDER BY publication_date LIMIT 1;
SELECT first_name, last_name FROM customer WHERE email = 'aalleburtonkc@yellowbook.com';
Error: 第 5947 个样本有 0 个SQL。
Error: 第 5948 个样本有 0 个SQL。
SELECT c.first_name, c.last_name FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id GROUP BY c.customer_id, c.first_name, c.last_name ORDER BY COUNT(co.order_id) DESC LIMIT 1;
SELECT COUNT(*)  FROM cust_order  WHERE customer_id IN (   SELECT customer_id    FROM customer    WHERE first_name = 'Antonia' AND last_name = 'Poltun' )  AND order_id IN (   SELECT order_id    FROM order_history    WHERE status_id IN (     SELECT status_id      FROM order_status      WHERE status_value = 'Returned'   ) );
SELECT method_name FROM shipping_method WHERE method_id = (SELECT method_id FROM cust_order GROUP BY method_id ORDER BY COUNT(*) DESC LIMIT 1);
SELECT COUNT(*) FROM order_history WHERE status_id IN (SELECT status_id FROM order_status WHERE status_value = 'Delivered') AND status_date LIKE '2021%';
SELECT title FROM book JOIN book_author ON book.book_id = book_author.book_id JOIN author ON book_author.author_id = author.author_id WHERE author.author_name = 'J.K Rowling' AND book.publication_date = (SELECT Min(publication_date) FROM book);
SELECT COUNT(*)  FROM book_author  JOIN author ON book_author.author_id = author.author_id  WHERE author.author_name = 'A.R. Braunmuller';
SELECT p.publisher_name FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id WHERE a.author_name = 'Agatha Christie' ORDER BY b.publication_date LIMIT 1;
SELECT book.title FROM book JOIN book_author ON book.book_id = book_author.book_id JOIN author ON book_author.author_id = author.author_id WHERE author.author_name = 'Danielle Steel';
SELECT COUNT(*) FROM book JOIN book_author ON book.book_id = book_author.book_id JOIN author ON book_author.author_id = author.author_id JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE author.author_name = 'William Shakespeare' AND publisher.publisher_name = 'Penguin Classics';
SELECT publisher_name FROM book, publisher WHERE book.publisher_id = publisher.publisher_id GROUP BY publisher_name ORDER BY COUNT(book_id) DESC LIMIT 1;
SELECT SUM(sh.cost) AS total_shipping_cost, COUNT(*) AS num_orders FROM cust_order co JOIN shipping_method sh ON co.shipping_method_id = sh.method_id JOIN customer c ON co.customer_id = c.customer_id WHERE c.email = 'page.holsey' AND co.order_date LIKE '2022%';
SELECT publisher_name FROM publisher WHERE publisher_id = 22;
SELECT COUNT(*)  FROM book_author ba  JOIN book b ON ba.book_id = b.book_id  JOIN author a ON ba.author_id = a.author_id  WHERE a.author_name = 'AI Gore' AND b.num_pages < 400;
SELECT a.author_name, p.publisher_name FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id JOIN publisher p ON b.publisher_id = p.publisher_id WHERE b.publication_date LIKE '1997-07-10';
SELECT language_name FROM book JOIN book_language ON book.language_id = book_language.language_id WHERE book.isbn13 = '23755004321';
SELECT title FROM book WHERE price = (SELECT MAX(price) FROM order_line);
SELECT SUM(ol.price)  FROM order_line ol  JOIN cust_order co ON ol.order_id = co.order_id  JOIN customer c ON co.customer_id = c.customer_id  WHERE c.first_name = 'Lucas' AND c.last_name = 'Wyldbore';
SELECT book.isbn13 FROM book WHERE book.language_id IN (   SELECT language_id   FROM book_language   WHERE language_name = 'Spanish' )
SELECT COUNT(*) FROM book_author ba JOIN book b ON ba.book_id = b.book_id JOIN publisher p ON b.publisher_id = p.publisher_id WHERE b.price < 1 AND p.publisher_name = 'Berkley Trade';
Error: 第 5968 个样本有 0 个SQL。
SELECT a.author_name FROM book_author ba JOIN book b ON ba.book_id = b.book_id JOIN author a ON ba.author_id = a.author_id WHERE b.num_pages = (SELECT MAX(num_pages) FROM book);
SELECT c.email FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id JOIN order_line ol ON co.order_id = ol.order_id JOIN book b ON ol.book_id = b.book_id WHERE b.title = 'Switch on the Night';
Error: 第 5971 个样本有 0 个SQL。
SELECT publisher_name FROM book JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE title = 'The Illuminati';
SELECT (COUNT(b.publication_date WHERE b.publication_date LIKE '1992%') / COUNT(b.publication_date)) * 100 FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id WHERE a.author_name = 'Abraham Lincoln';
SELECT p.publisher_name FROM book b JOIN publisher p ON b.publisher_id = p.publisher_id WHERE b.publication_date LIKE '2004%' AND b.num_pages > (SELECT AVG(num_pages) * 0.7 FROM book);
SELECT c.email FROM customer c WHERE c.first_name = 'Moss' AND c.last_name = 'Zarb';
Error: 第 5976 个样本有 0 个SQL。
SELECT title FROM book WHERE language_id IN (   SELECT language_id   FROM book_language   WHERE language_name IN (     SELECT language_name     FROM author     WHERE author_name = 'Orson Scott Card'   ) ) AND publication_date LIKE '2001%';
Error: 第 5978 个样本有 0 个SQL。
SELECT a.author_name, b.title FROM book_author ba JOIN author a ON ba.author_id = a.author_id JOIN book b ON ba.book_id = b.book_id WHERE b.num_pages > 3000;
SELECT author_name FROM book_author JOIN book ON book_author.book_id = book.book_id JOIN author ON book_author.author_id = author.author_id WHERE book.title = 'The Prophet';
SELECT COUNT(*) FROM book WHERE publisher_id IN (   SELECT publisher_id   FROM publisher   WHERE publisher_name = 'Ace Hardcover' )
SELECT p.publisher_name FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id WHERE a.author_name = 'Barry Eisler' JOIN publisher p ON b.publisher_id = p.publisher_id;
SELECT COUNT(*)  FROM book  WHERE language_id IN (SELECT language_id FROM book_language WHERE language_name = 'Japanese');
SELECT SUM(ol.price)  FROM order_line ol  JOIN book b ON ol.book_id = b.book_id  WHERE b.title = 'The Prophet';
Error: 第 5985 个样本有 0 个SQL。
Error: 第 5986 个样本有 0 个SQL。
SELECT COUNT(*)  FROM order_history  WHERE status_date LIKE '2019-12%' AND status_id IN (   SELECT status_id    FROM order_status    WHERE status_value = 'Delivered' );
SELECT c.first_name, c.last_name FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id JOIN order_line ol ON co.order_id = ol.order_id JOIN book b ON ol.book_id = b.book_id WHERE b.title = 'Fantasmas';
SELECT (SUM(CASE WHEN shipping_method.method_name = 'International' THEN 1 ELSE 0 END) / COUNT(cust_order.order_id)) * 100 FROM cust_order JOIN shipping_method ON cust_order.shipping_method_id = shipping_method.method_id WHERE cust_order.order_date LIKE '2020%';
SELECT author_name FROM author WHERE author_name LIKE 'George%';
SELECT    EXTRACT(YEAR FROM cust_order.order_date) AS year,   COUNT(cust_order.order_id) AS count_orders FROM    cust_order GROUP BY    EXTRACT(YEAR FROM cust_order.order_date) ORDER BY    count_orders DESC LIMIT 1;
SELECT AVG(price)  FROM order_line;
Error: 第 5993 个样本有 0 个SQL。
SELECT SUBSTR(email, CHARINDEX('@', email) + 1, LEN(email) - CHARINDEX('@', email)) AS domain, COUNT(*) AS count FROM customer GROUP BY SUBSTR(email, CHARINDEX('@', email) + 1, LEN(email) - CHARINDEX('@', email)) ORDER BY count DESC LIMIT 1;
SELECT COUNT(*) FROM publisher WHERE publisher_name LIKE '%book%';
SELECT language_name FROM book_language WHERE language_id = (   SELECT language_id   FROM book   GROUP BY language_id   ORDER BY COUNT(book_id) LIMIT 1 )
SELECT order_date FROM cust_order WHERE customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'Adrian' AND last_name = 'Kunzelmann' )
SELECT COUNT(*)  FROM address  WHERE country_id IN (   SELECT country_id    FROM country    WHERE country_name = 'Philippines' )
SELECT author_name FROM author WHERE author_id = (SELECT author_id FROM book_author GROUP BY author_id ORDER BY COUNT(author_id) DESC LIMIT 1);
SELECT title FROM book WHERE publisher_id IN (   SELECT publisher_id   FROM publisher   WHERE publisher_name = 'Harper Collins' )
SELECT COUNT(*)  FROM order_history  WHERE status_id IN (SELECT status_id FROM order_status WHERE status_value = 'Returned')  AND status_date LIKE '%2020%';
SELECT method_name FROM shipping_method WHERE method_id = (   SELECT method_id   FROM (     SELECT method_id, COUNT(*) as count     FROM shipping_method     GROUP BY method_id     ORDER BY count   ) as temp   WHERE count > (     SELECT MIN(count)     FROM (       SELECT method_id, COUNT(*) as count       FROM shipping_method       GROUP BY method_id     ) as temp   )   LIMIT 1 );
SELECT COUNT(*)  FROM customer_address  WHERE status_id IN (SELECT status_id FROM address_status WHERE address_status = 'Inactive');
SELECT b.title FROM book b JOIN cust_order co ON b.book_id = co.order_id GROUP BY b.title ORDER BY COUNT(co.order_id) DESC LIMIT 1;
SELECT a.street_name, a.city, COUNT(c.dest_address_id) AS max_orders FROM cust_order c JOIN address a ON c.dest_address_id = a.address_id GROUP BY a.street_name, a.city ORDER BY max_orders DESC LIMIT 1;
SELECT    Subtract(strftime('%Y', oh.status_date), strftime('%Y', co.order_date)) AS "year",    Subtract(strftime('%m', oh.status_date), strftime('%m', co.order_date)) AS "month",    Subtract (strftime('%d', oh.status_date), strftime('%d', co.order_date)) AS "day" FROM    order_history oh   JOIN cust_order co ON oh.order_id = co.order_id WHERE    co.order_id = 2398;
SELECT c.first_name, c.last_name, COUNT(ca.address_id) AS max_addresses FROM customer c JOIN customer_address ca ON c.customer_id = ca.customer_id GROUP BY c.customer_id, c.first_name, c.last_name ORDER BY max_addresses DESC LIMIT 1;
SELECT (SUM(ol.price) FROM order_line ol JOIN cust_order co ON ol.order_id = co.order_id JOIN shipping_method sm ON co.shipping_method_id = sm.method_id WHERE sm.method_name = 'International') * 100 / (SELECT SUM(ol.price) FROM order_line ol)
SELECT author_name FROM author WHERE author_id IN (   SELECT book_author.author_id   FROM book_author   JOIN book ON book_author.book_id = book.book_id   WHERE num_pages < (     SELECT AVG(num_pages)     FROM book   ) )
SELECT MIN(price)  FROM order_line  WHERE price != 0;
SELECT COUNT(DISTINCT c.customer_id) FROM customer c JOIN customer_address ca ON c.customer_id = ca.customer_id JOIN address a ON ca.address_id = a.address_id WHERE a.city = 'Villeneuve-la-Garenne';
SELECT COUNT(*)  FROM author  WHERE author_name LIKE 'Adam';
SELECT COUNT(*)  FROM customer  WHERE email LIKE '%@yahoo.com';
SELECT a.street_name, a.street_number, a.city FROM address a JOIN customer_address ca ON a.address_id = ca.address_id JOIN customer c ON ca.customer_id = c.customer_id JOIN country cn ON a.country_id = cn.country_id WHERE cn.country_name = 'United States of America';
SELECT COUNT(*) FROM cust_order WHERE customer_id IN (SELECT customer_id FROM customer WHERE first_name = 'Marcelia' AND last_name = 'Goering') AND substr(order_date, 1, 4) = '2021' AND shipping_method_id IN (SELECT method_id FROM shipping_method WHERE method_name = 'Priority');
SELECT b.title, MAX(ol.price) AS max_price FROM book b JOIN order_line ol ON b.book_id = ol.book_id GROUP BY b.title ORDER BY max_price DESC;
SELECT COUNT(DISTINCT c.customer_id) FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id JOIN order_line ol ON co.order_id = ol.order_id JOIN book b ON ol.book_id = b.book_id WHERE b.title = 'Anleitung zum Zickigsein';
SELECT MAX(price) FROM order_line WHERE book_id IN (   SELECT book_id   FROM book   WHERE title = 'Bite Me If You Can (Argeneau #6)' )
SELECT COUNT(DISTINCT c.customer_id) FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id JOIN order_line ol ON co.order_id = ol.order_id JOIN book b ON ol.book_id = b.book_id WHERE b.publication_date = (SELECT MIN(publication_date) FROM book);
SELECT book.title FROM book JOIN book_language ON book.language_id = book_language.language_id JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE book_language.language_name = 'Spanish' AND publisher.publisher_name = 'Alfaguara';
Error: 第 6021 个样本有 0 个SQL。
SELECT b.language_name FROM book b WHERE b.publication_date = (SELECT MIN(publication_date) FROM book) ORDER BY b.publication_date LIMIT 2;
SELECT p.publisher_name FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id JOIN publisher p ON b.publisher_id = p.publisher_id WHERE b.title = 'The Secret Garden';
SELECT COUNT(*) FROM book JOIN book_author ON book.book_id = book_author.book_id JOIN author ON book_author.author_id = author.author_id JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE author.author_name = 'J.K Rowling' AND publisher.publisher_name = 'Scholastic';
SELECT publisher_name FROM book GROUP BY publisher_id, publisher_name HAVING COUNT(book_id) >= 30;
SELECT Substr(street_number, -1) AS last_number_of_street FROM address;
SELECT a.street_number, a.street_name, a.city, c.country_name FROM address a JOIN customer_address ca ON a.address_id = ca.address_id JOIN customer c ON ca.customer_id = c.customer_id WHERE a.city = 'Lazaro Cardenas';
SELECT book.isbn13 FROM book WHERE num_pages > 135 AND num_pages < 140;
SELECT b.title FROM book b ORDER BY b.publication_date LIMIT 6;
SELECT COUNT(*) FROM cust_order WHERE order_date LIKE '2020-12-%';
SELECT first_name, last_name FROM customer WHERE last_name LIKE 'K%';
SELECT city FROM address JOIN customer_address ON address.address_id = customer_address.address_id JOIN customer ON customer_address.customer_id = customer.customer_id JOIN country ON address.country_id = country.country_id WHERE country.country_name = 'Costa Rica';
SELECT a.street_number, a.street_name, a.city FROM customer_address ca JOIN address a ON ca.address_id = a.address_id JOIN address_status as ON ca.status_id = as.status_id WHERE as.status_id = 'Inactive';
SELECT c.first_name, c.last_name FROM customer c JOIN customer_address ca ON c.customer_id = ca.customer_id JOIN address a ON ca.address_id = a.address_id WHERE a.city = 'Baiyin';
SELECT c.email FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id JOIN shipping_method sm ON co.shipping_method_id = sm.method_id WHERE sm.method_name = 'Priority';
SELECT order_date FROM cust_order WHERE customer_id IN (   SELECT customer_id   FROM customer_address   WHERE address_id IN (     SELECT address_id     FROM address     WHERE street_number = '460'   ) )
SELECT order_id FROM cust_order WHERE order_id IN (   SELECT order_id   FROM order_history   WHERE status_id IN (     SELECT status_id     FROM order_status     WHERE status_value = 'cancelled'   ) )
Error: 第 6038 个样本有 0 个SQL。
SELECT MAX(ol.price) FROM order_line ol JOIN book b ON ol.book_id = b.book_id WHERE b.title = 'The Prophet';
SELECT order_date FROM cust_order JOIN order_line ON cust_order.order_id = order_line.order_id WHERE price = 16.54;
SELECT book.title FROM book JOIN book_author ON book.book_id = book_author.book_id JOIN author ON book_author.author_id = author.author_id WHERE author.author_name = 'Peter H. Smith';
SELECT COUNT(*)  FROM book  WHERE num_pages < 300 AND publisher_id IN (SELECT publisher_id FROM publisher WHERE publisher_name = 'HarperCollins Publishers');
SELECT COUNT(*)  FROM book  WHERE language_id IN (SELECT language_id FROM book_language WHERE language_name = 'Japanese');
Error: 第 6044 个样本有 0 个SQL。
SELECT (COUNT(shipping_method.method_name = 'International') / COUNT(*)) * 100 FROM cust_order JOIN customer ON cust_order.customer_id = customer.customer_id JOIN customer_address ON cust_order.dest_address_id = customer_address.address_id JOIN shipping_method ON cust_order.shipping_method_id = shipping_method.method_id WHERE customer.first_name = 'Kaleena';
SELECT c.first_name, c.last_name FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id JOIN book b ON co.dest_address_id = (SELECT address_id FROM address WHERE street_name = 'street_name' AND city = 'city' AND country_id = (SELECT country_id FROM country WHERE country_name = 'country_name')) WHERE b.title = 'The Sorrows of Young Werther';
SELECT b.title FROM book b JOIN cust_order co ON b.book_id = co.order_id JOIN customer c ON co.customer_id = c.customer_id WHERE c.first_name = 'Ursola' AND c.last_name = 'Purdy';
SELECT a.author_name FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id WHERE b.num_pages = (SELECT MAX(num_pages) FROM book);
SELECT COUNT(b.book_id) FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id WHERE a.author_name = 'Akira Watanabe' AND b.publication_date <= CURDATE()
SELECT a.street_number, a.street_name, a.city, c.country_name FROM address a JOIN customer_address ca ON a.address_id = ca.address_id JOIN customer c ON ca.customer_id = c.customer_id WHERE c.first_name = 'Ursola' AND c.last_name = 'Purdy';
SELECT author_name FROM author JOIN book_author ON author.author_id = book_author.author_id JOIN book ON book_author.book_id = book.book_id WHERE book.title = 'The Mystery in the Rocky Mountains';
SELECT publisher_name FROM book WHERE title = 'Girls\' Night In';
SELECT publisher_name FROM book, publisher WHERE book.publisher_id = publisher.publisher_id ORDER BY publication_date ASC LIMIT 1;
SELECT SUM(CASE WHEN method_name = 'Express' THEN cost ELSE 0 END) -         SUM(CASE WHEN method_name = 'Priority' THEN cost ELSE 0 END) AS cost_difference FROM shipping_method;
SELECT COUNT(*)  FROM order_history  WHERE status_id = (SELECT status_id FROM order_status WHERE status_value = 'Cancelled')  AND SUBSTR(status_date, 1, 4) = '2022';
SELECT book.title FROM book JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE publisher.publisher_name = 'BBC Audiobooks';
SELECT COUNT(*)  FROM book  WHERE SUBSTR(publication_date, 1, 4) = '2017';
SELECT isbn13 FROM book WHERE title = 'The Mystery in the Rocky Mountains';
SELECT ROUND(COUNT(oh.status_id) / (SELECT COUNT(*) FROM order_history) * 100, 2)  FROM order_history oh  WHERE SUBSTR(oh.status_date, 1, 4) = '2022' AND oh.status_id IN (SELECT status_id FROM order_status WHERE status_value = 'Returned');
SELECT (COUNT(ca.status_id) WHERE ca.status_id IN (SELECT status_id FROM address_status WHERE address_status = 'Inactive')) * 100 / COUNT(ca.status_id) AS percentage FROM customer_address ca;
SELECT num_pages FROM book WHERE title = 'Seaward';
SELECT author_name FROM book_author JOIN book ON book_author.book_id = book.book_id JOIN author ON book_author.author_id = author.author_id WHERE book.title = 'First Things First';
SELECT b.title FROM book_author ba JOIN book b ON ba.book_id = b.book_id JOIN author a ON ba.author_id = a.author_id WHERE a.author_name = 'Tom Clancy';
SELECT title FROM book WHERE language_id IN (   SELECT language_id   FROM book_language   WHERE language_code = (     SELECT language_code     FROM book_language     WHERE language_name = (       SELECT author_name       FROM author       WHERE author_id IN (         SELECT author_id         FROM book_author         WHERE book_id IN (           SELECT book_id           FROM book           WHERE author_name = 'Hirohiko Araki'         )       )     )   ) ) AND publication_date = '2006-06-06';
SELECT publisher_name FROM book WHERE title = 'Hitchhiker''s Guide To The Galaxy: The Filming of the Douglas Adams classic';
SELECT title  FROM book  WHERE publisher_id IN (SELECT publisher_id FROM publisher WHERE publisher_name = 'ADV Manga');
SELECT c.first_name, c.last_name FROM customer c JOIN customer_address ca ON c.customer_id = ca.customer_id JOIN address a ON ca.address_id = a.address_id WHERE a.street_number = '55' AND a.street_name = 'Dorton Pass' AND a.city = 'Huangqiao';
SELECT country_name FROM address JOIN country ON address.country_id = country.country_id WHERE street_number = 9 AND street_name = 'Green Ridge Point' AND city = 'Arendal';
SELECT address.street_number, address.street_name, address.city FROM address JOIN customer_address ON address.address_id = customer_address.address_id JOIN customer ON customer_address.customer_id = customer.customer_id JOIN country ON customer.country_id = country.country_id WHERE country.country_name = 'Poland';
Error: 第 6070 个样本有 0 个SQL。
SELECT title FROM book WHERE language_id IN (   SELECT language_id   FROM book_language   WHERE language_name = 'Arabic' )
SELECT language_name FROM book JOIN book_language ON book.language_id = book_language.language_id WHERE title = 'El plan infinito';
SELECT (COUNT(b.author_id) / (SELECT COUNT(*) FROM book)) * 100 FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id WHERE a.author_name = 'Hirohiko Araki' AND b.publisher_id = (SELECT publisher_id FROM publisher WHERE publisher_name = 'Viz Media');
SELECT AVG(num_pages)  FROM book  WHERE language_id IN (SELECT language_id FROM book_language                        WHERE language_name IN (SELECT language_name                                               FROM author                                               WHERE author_name = 'Zilpha Keatley Snyder'))
SELECT first_name, last_name  FROM customer  WHERE email = 'ckupis4@tamu.edu';
SELECT title, num_pages FROM book WHERE num_pages = (SELECT MAX(num_pages) FROM book);
SELECT COUNT(*)  FROM book_author  JOIN author ON book_author.author_id = author.author_id  WHERE author.author_name = 'A.J. Ayer';
SELECT title FROM book WHERE book_id IN (   SELECT book_id   FROM book_author   WHERE author_id IN (     SELECT author_id     FROM author     WHERE author_name = 'A.J. Ayer'   ) )
SELECT publisher_name FROM book JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE title = 'The Season: A Candid Look at Broadway';
SELECT AVG(COUNT(book_id))  FROM book  WHERE language_id IN (SELECT language_id FROM book_language WHERE language_name = 'English')  AND publisher_id IN (SELECT publisher_id FROM publisher WHERE publisher_name = 'Carole Marsh Mysteries');
Error: 第 6081 个样本有 0 个SQL。
SELECT ol.price FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id JOIN book_title bt ON b.title = bt.title JOIN order_line ol ON b.book_id = ol.book_id WHERE bt.title = 'The Servant Leader' AND SUBSTR(b.publication_date, 1, 4) = '2003';
SELECT a.street_number, a.street_name, a.city FROM address a JOIN customer_address ca ON a.address_id = ca.address_id JOIN customer c ON ca.customer_id = c.customer_id WHERE c.email = 'Kandy' AND ca.status_id = 1;
SELECT COUNT(*)  FROM cust_order  WHERE customer_id IN (   SELECT customer_id    FROM customer    WHERE first_name = 'Kandy' AND last_name = 'Adamec' );
Error: 第 6085 个样本有 0 个SQL。
SELECT country_name FROM customer JOIN customer_address ON customer.customer_id = customer_address.customer_id JOIN address ON customer_address.address_id = address.address_id JOIN country ON address.country_id = country.country_id WHERE customer.email = 'rturbitt2@geocities.jp';
SELECT publisher_name FROM book, publisher WHERE book.publisher_id = publisher.publisher_id GROUP BY publisher_name ORDER BY COUNT(book_id) DESC LIMIT 1;
SELECT b.title FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id WHERE a.author_name = 'A.J. Ayer' ORDER BY b.publication_date LIMIT 1;
SELECT (COUNT(o.line_id) / (SELECT COUNT(*) FROM order_line)) * 100 FROM order_line o JOIN cust_order co ON o.order_id = co.order_id JOIN customer c ON co.customer_id = c.customer_id WHERE c.first_name = 'Ruthanne' AND c.last_name = 'Vatini' AND o.price > 10;
SELECT book.title FROM book JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE publisher.publisher_name = 'AK Press';
SELECT c.first_name, c.last_name FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id JOIN order_line ol ON co.order_id = ol.order_id WHERE ol.price = (SELECT MIN(price) FROM order_line);
SELECT b.isbn13 FROM book b JOIN cust_order co ON b.book_id = co.order_id JOIN customer c ON co.customer_id = c.customer_id WHERE c.email = 'fsier3e@ihg.com';
SELECT author_name FROM author JOIN book_author ON author.author_id = book_author.author_id JOIN book ON book_author.book_id = book.book_id WHERE price >= 19;
SELECT publisher_name FROM book JOIN publisher ON book.publisher_id = publisher.publisher_id WHERE isbn13 = '76092025986';
SELECT COUNT(*) FROM book WHERE publisher_id IN (SELECT publisher_id FROM publisher WHERE publisher_name = 'Birlinn') AND SUBSTR(publication_date, 1, 4) = '2008' AND num_pages BETWEEN 600 AND 700;
SELECT price FROM book WHERE isbn13 = '9780763628321';
SELECT num_pages FROM book WHERE book_id IN (   SELECT book_id   FROM order_line   WHERE order_id = 1167 );
SELECT title FROM book WHERE language_id IN (   SELECT language_id   FROM book_language   WHERE language_name = 'British English' );
Error: 第 6099 个样本有 0 个SQL。
SELECT book.isbn13, order_line.price FROM book JOIN book_author ON book.book_id = book_author.book_id JOIN order_line ON book.book_id = order_line.book_id WHERE book.book_id = 7160;
Error: 第 6101 个样本有 0 个SQL。
SELECT language_name FROM book JOIN book_language ON book.language_id = book_language.language_id WHERE book.title = 'Zorro';
SELECT c.email FROM customer c JOIN cust_order co ON c.customer_id = co.customer_id JOIN order_line ol ON co.order_id = ol.order_id WHERE ol.price BETWEEN 3 AND 5;
SELECT book.isbn13 FROM book WHERE book.price = 7.5;
Error: 第 6105 个样本有 0 个SQL。
Error: 第 6106 个样本有 0 个SQL。
SELECT a.author_name FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id WHERE b.publication_date = (SELECT MAX(publication_date) FROM book);
SELECT (COUNT(b.book_id) WHERE b.language_name = 'English') * 100 / COUNT(b.book_id) AS percentage FROM book b JOIN publisher p ON b.publisher_id = p.publisher_id WHERE p.publisher_name = 'Ace Book';
SELECT      COUNT(book_id) - COUNT(book_id)      FROM order_line      WHERE price < 1      AND num_pages < 500      minus      SELECT      COUNT(book_id)      FROM order_line      WHERE price < 1      AND num_pages > 500;
SELECT bl.language_name, b.title FROM book b JOIN book_author ba ON b.book_id = ba.book_id JOIN author a ON ba.author_id = a.author_id JOIN book_language bl ON b.language_id = bl.language_id JOIN order_line ol ON b.book_id = ol.book_id WHERE ol.price < (SELECT AVG(ol2.price) * 0.2 FROM order_line ol2)
Error: 第 6111 个样本有 0 个SQL。
SELECT first_name, last_name FROM employee WHERE title = 'Sanitarian' AND EXISTS (   SELECT 1   FROM inspection   WHERE employee_id = employee.employee_id   AND inspection_date LIKE '2010-05%' );
SELECT COUNT(*)  FROM inspection  WHERE employee_id IN (SELECT employee_id FROM employee WHERE first_name = 'Joshua' AND last_name = 'Rosa')  AND inspection_date LIKE '2010%';
Error: 第 6114 个样本有 0 个SQL。
SELECT COUNT(DISTINCT license_no) FROM inspection JOIN establishment ON inspection.license_no = establishment.license_no WHERE inspection_date LIKE '2010%' AND facility_type = 'Restaurant';
SELECT e.latitude, e.longitude FROM establishment e JOIN inspection i ON e.license_no = i.license_no WHERE i.inspection_date = '2010-05-11';
SELECT COUNT(*) FROM establishment WHERE license_no IN (   SELECT license_no   FROM inspection   WHERE inspection_date LIKE '2010%' ) AND ward = 42;
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name FROM employee e JOIN inspection i ON e.employee_id = i.employee_id JOIN establishment e2 ON i.license_no = e2.license_no WHERE e2.dba_name = 'Burbank';
Error: 第 6119 个样本有 0 个SQL。
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employee WHERE employee_id IN (   SELECT employee_id   FROM inspection   WHERE inspection_date = '2010-05-11'   AND license_no IN (     SELECT license_no     FROM establishment     WHERE dba_name = 'AMUNDSEN HIGH SCHOOL'   ) );
Error: 第 6121 个样本有 0 个SQL。
SELECT followup_to FROM inspection WHERE inspection_date = '2010-01-21' AND license_no IN (   SELECT license_no   FROM establishment   WHERE dba_name = 'Azha Restaurant Inc.' );
Error: 第 6123 个样本有 0 个SQL。
SELECT AVG(COUNT(inspection.inspection_id))  FROM inspection  JOIN employee ON inspection.employee_id = employee.employee_id  WHERE inspection.inspection_date LIKE '2010%' AND employee.salary > 70000;
SELECT point_level FROM inspection_point WHERE Description = 'Refrigeration and metal stem thermometers provided and conspicuous';
SELECT e.first_name, e.last_name FROM employee e JOIN inspection i ON e.employee_id = i.employee_id WHERE i.inspection_id = '48224';
Error: 第 6127 个样本有 0 个SQL。
SELECT MIN(inspection_date)  FROM inspection  WHERE license_no IN (SELECT license_no FROM establishment WHERE aka_name = 'WING HUNG CHOP SUEY RESTAURANT');
Error: 第 6129 个样本有 0 个SQL。
Error: 第 6130 个样本有 0 个SQL。
Error: 第 6131 个样本有 0 个SQL。
SELECT COUNT(*) FROM inspection WHERE license_no IN (   SELECT license_no   FROM establishment   WHERE address = '3635 W DIVERSEY AVE' AND facility_type = 'Grocery Store' )
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name FROM employee e JOIN inspection i ON e.employee_id = i.employee_id GROUP BY e.employee_id, e.first_name, e.last_name ORDER BY COUNT(e.employee_id) DESC LIMIT 1;
Error: 第 6134 个样本有 0 个SQL。
Error: 第 6135 个样本有 0 个SQL。
SELECT phone FROM employee WHERE title = 'Sanitarian' AND employee_id IN (   SELECT employee_id   FROM inspection   WHERE inspection_id = 634597 );
SELECT e.salary FROM employee e JOIN inspection i ON e.employee_id = i.employee_id GROUP BY e.employee_id, e.salary ORDER BY COUNT(i.employee_id) DESC LIMIT 1;
SELECT AVG(count(inspection_id))  FROM inspection  WHERE license_no IN (   SELECT license_no    FROM establishment    WHERE risk_level = '3' AND facility_type = 'TAVERN' )
SELECT    SUM(CASE WHEN results = 'Pass' THEN 1 ELSE 0 END) / COUNT(DISTINCT license_no) AS inspection_pass_rate FROM    inspection WHERE    dba_name = 'POCKETS' AND facility_type = 'Restaurant';
SELECT COUNT(*) FROM employee WHERE title = 'Sanitarian' AND city = 'Chicago' AND zip = 60617;
SELECT dba_name FROM establishment WHERE address = '2903 W IRVING PARK RD';
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employee ORDER BY salary ASC LIMIT 1;
SELECT COUNT(*)  FROM establishment  WHERE dba_name = 'HOMEMADE PIZZA' AND risk_level = 2;
SELECT COUNT(*) FROM inspection JOIN violation ON inspection.inspection_id = violation.inspection_id WHERE fine = 500 AND point_id = 3;
Error: 第 6145 个样本有 0 个SQL。
SELECT MIN(inspection_date)  FROM inspection  WHERE license_no IN (SELECT license_no FROM establishment WHERE dba_name = 'RENALDI''S PIZZA');
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employee WHERE employee_id IN (   SELECT employee_id   FROM inspection   WHERE inspection_date LIKE '2016-03%'   GROUP BY employee_id   ORDER BY COUNT(*) DESC   LIMIT 1 )
SELECT e.dba_name FROM establishment e JOIN inspection i ON e.license_no = i.license_no WHERE i.results = 'Pass w/ Conditions' AND i.inspection_date LIKE '2012-05%';
SELECT COUNT(*)  FROM inspection  WHERE inspection_type = 'Short Form Complaint' AND results = 'Pass' AND employee_id IN (   SELECT employee_id    FROM employee    WHERE first_name = 'David' AND last_name = 'Hodges' )
Error: 第 6150 个样本有 0 个SQL。
SELECT salary FROM employee WHERE employee_id IN (   SELECT employee_id   FROM inspection   GROUP BY employee_id   ORDER BY COUNT(employee_id) DESC   LIMIT 1 );
SELECT dba_name FROM establishment WHERE license_no IN (   SELECT license_no   FROM inspection   WHERE inspection_date LIKE '2014%'   GROUP BY license_no   ORDER BY SUM(fine) DESC   LIMIT 1 )
SELECT e.latitude, e.longitude FROM establishment e JOIN (   SELECT license_no, COUNT(*) as failed_inspections   FROM inspection   WHERE results = 'Fail'   GROUP BY license_no   ORDER BY failed_inspections DESC   LIMIT 1 ) i ON e.license_no = i.license_no;
SELECT inspector_comment FROM inspection JOIN establishment ON inspection.license_no = establishment.license_no WHERE inspection_date = '2010-01-25' AND dba_name = 'TAQUERIA LA FIESTA';
SELECT SUM(fine)  FROM inspection  JOIN establishment ON inspection.license_no = establishment.license_no  WHERE inspection_date LIKE '2014-02%'  AND dba_name = 'RON OF JAPAN INC';
SELECT e.first_name, e.last_name FROM employee e JOIN inspection i ON e.employee_id = i.employee_id JOIN establishment e2 ON i.license_no = e2.license_no WHERE e2.dba_name = 'TAQUERIA LA PAZ';
SELECT e.first_name, e.last_name FROM employee e JOIN inspection i ON e.employee_id = i.employee_id JOIN violation v ON i.inspection_id = v.inspection_id GROUP BY e.first_name, e.last_name ORDER BY SUM(v.fine) DESC LIMIT 1;
SELECT e.first_name, e.last_name, AVG(inspection_count) AS avg_inspections FROM (   SELECT e.employee_id, COUNT(i.inspection_id) AS inspection_count   FROM employee e   JOIN inspection i ON e.employee_id = i.employee_id   WHERE e.title = 'Sanitarian'   GROUP BY e.employee_id   ORDER BY inspection_count DESC   LIMIT 5 ) AS top_employees JOIN employee e ON top_employees.employee_id = e.employee_id ORDER BY avg_inspections;
SELECT    e.dba_name AS business_name,    COUNT(i.inspection_id) AS total_inspections,    SUM(CASE WHEN i.results = 'Pass' THEN 1 ELSE 0 END) / COUNT(i.inspection_id) * 100 AS passed_percentage,    SUM(CASE WHEN i.results = 'Fail' THEN 1 ELSE 0 END) / COUNT(i.inspection_id) * 100 AS failed_percentage FROM    inspection i   JOIN establishment e ON i.license_no = e.license_no GROUP BY    e.dba_name ORDER BY    total_inspections DESC LIMIT 1;
SELECT last_name FROM employee WHERE address = '7211 S Hermitage Ave' AND city = 'Chicago' AND state = 'IL';
SELECT e.dba_name AS establishment_name, e.first_name, e.last_name FROM inspection i JOIN establishment e ON i.license_no = e.license_no JOIN employee e ON i.employee_id = e.employee_id WHERE i.inspection_id = 44256 AND i.inspection_date = '2010-05-05';
SELECT e.address FROM inspection i JOIN establishment e ON i.license_no = e.license_no WHERE i.inspection_date LIKE '2010-03%' AND i.results = 'Pass' AND e.facility_type = 'School';
SELECT e.first_name, e.last_name FROM employee e JOIN inspection i ON e.employee_id = i.employee_id WHERE i.inspection_date = '2010-03-09' AND i.inspection_type = 'Canvass';
Error: 第 6164 个样本有 0 个SQL。
SELECT COUNT(*) FROM establishment WHERE facility_type = 'Restaurant' AND risk_level = (SELECT MAX(risk_level) FROM establishment) AND results = 'Pass';
SELECT e.first_name, e.last_name FROM employee e JOIN inspection i ON e.employee_id = i.employee_id JOIN inspection_point ip ON i.inspection_id = ip.inspection_id WHERE ip.category = 'Display of Inspection Report Summary';
Error: 第 6167 个样本有 0 个SQL。
SELECT COUNT(*) FROM inspection WHERE inspection_type = 'Complaint' AND results = 'Fail' AND license_no IN (   SELECT license_no   FROM establishment   WHERE facility_type = 'Restaurant'   AND risk_level = (     SELECT MIN(risk_level)     FROM establishment   ) )
SELECT      v.fine,      e.address,      e.city,      e.state FROM      violation v  INNER JOIN      inspection i ON v.inspection_id = i.inspection_id  INNER JOIN      establishment e ON i.license_no = e.license_no  WHERE      i.inspection_id = 48216;
SELECT inspection_id FROM violation WHERE point_id IN (   SELECT point_id   FROM inspection_point   WHERE point_level = 'Critical' AND fine = 500 ) AND inspector_comment = 'CDI ON 5-17-10';
SELECT i.description, v.inspector_comment FROM inspection_point i JOIN violation v ON i.point_id = v.point_id WHERE i.point_id IN (   SELECT ip.point_id   FROM inspection_point ip   JOIN inspection v1 ON ip.point_id = v1.point_id   WHERE v1.inspection_id = 164795 )
SELECT inspector_comment, code FROM violation WHERE inspection_id = 54216 AND point_id = 34;
SELECT      ROUND(COUNT(e.license_no) / (SELECT COUNT(*) FROM establishment) * 100, 2) AS percentage FROM      establishment e WHERE      e.license_no IN (SELECT i.license_no FROM inspection i WHERE i.results = 'Fail')     AND e.risk_level = (SELECT MAX(risk_level) FROM establishment);
SELECT COUNT(inspection_id) - COUNT(inspection_id)  FROM inspection  WHERE fine = 100  MINUS  SELECT COUNT(inspection_id)  FROM inspection  WHERE fine = 500  AND employee_id IN (SELECT employee_id                      FROM employee                      WHERE salary BETWEEN 75000 AND 80000);
Error: 第 6175 个样本有 0 个SQL。
Error: 第 6176 个样本有 0 个SQL。
SELECT ROUND((COUNT(v.inspection_id) / (SELECT COUNT(*) FROM inspection)) * 100, 2) AS percentage FROM violation v WHERE v.fine = 100;
Error: 第 6178 个样本有 0 个SQL。
SELECT COUNT(*)  FROM inspection_point  WHERE category = 'Personnel';
SELECT e.dba_name, i.results FROM establishment e JOIN inspection i ON e.license_no = i.license_no WHERE e.city = 'BURNHAM';
SELECT COUNT(*)  FROM inspection_point  WHERE category IN ('Toxic Items', 'No Smoking Regulations')  GROUP BY category;
Error: 第 6182 个样本有 0 个SQL。
Error: 第 6183 个样本有 0 个SQL。
SELECT COUNT(*)  FROM inspection_point  WHERE category = 'Display of Inspection Report Summary';
SELECT i.inspection_type, i.results FROM inspection i JOIN establishment e ON i.license_no = e.license_no WHERE e.facility_type = 'RIVERWALK CAFE';
SELECT e.first_name, e.last_name, i.inspection_date, i.results FROM employee e JOIN inspection i ON e.employee_id = i.employee_id JOIN establishment es ON i.license_no = es.license_no WHERE es.dba_name = 'JEAN SAMOCKI';
Error: 第 6187 个样本有 0 个SQL。
SELECT SUM(fine)  FROM violation v  JOIN inspection_point ip ON v.point_id = ip.point_id  WHERE ip.category = 'Food Equipment and Utensil';
SELECT e.dba_name AS name, e.latitude, e.longitude AS location FROM establishment e JOIN inspection i ON e.license_no = i.license_no WHERE i.inspection_date = '2013-07-29' AND i.results = 'Fail';
SELECT      ROUND((COUNT(i.inspection_id) / (SELECT COUNT(*) FROM inspection)) * 100, 2) AS percentage_verified_quality,     COUNT(e.license_no) AS num_businesses_from_chicago FROM      inspection i     JOIN employee e ON i.employee_id = e.employee_id     JOIN establishment es ON i.license_no = es.license_no WHERE      i.results LIKE 'Pass%' AND es.city = 'CHICAGO';
SELECT AVG(count) AS average_inspections_per_year FROM (   SELECT COUNT(T2.inspection_id) AS count   FROM inspection T2   WHERE T2.inspection_date > '2010-01-01'   AND T2.inspection_id < '2017-12-31'   AND T2.employee_id IN (     SELECT employee_id     FROM employee     WHERE first_name = 'Jessica' AND last_name = 'Anthony'   ) ) AS subquery;
Error: 第 6192 个样本有 0 个SQL。
Error: 第 6193 个样本有 0 个SQL。
SELECT last_name FROM employee WHERE employee_id IN (   SELECT employee_id   FROM inspection   WHERE inspection_id = 52238 )
Error: 第 6195 个样本有 0 个SQL。
SELECT e.address FROM employee e JOIN inspection i ON e.employee_id = i.employee_id WHERE i.inspection_date = '2010-11-05';
SELECT phone FROM employee WHERE employee_id IN (   SELECT employee_id   FROM inspection   WHERE inspection_type = 'Canvass' )
Error: 第 6198 个样本有 0 个SQL。
SELECT i.results FROM inspection i JOIN establishment e ON i.license_no = e.license_no WHERE e.dba_name = 'XANDO COFFEE & BAR / COSI SANDWICH BAR';
Error: 第 6200 个样本有 0 个SQL。
SELECT e.dba_name FROM inspection i JOIN establishment e ON i.license_no = e.license_no WHERE i.inspection_type = 'License';
SELECT COUNT(*)  FROM inspection  WHERE inspection_date LIKE '2010%'  AND establishment.risk_level = 3;
SELECT dba_name  FROM establishment, inspection  WHERE establishment.license_no = inspection.license_no  AND inspection.results IN ('Pass', 'Pass w/Conditions');
Error: 第 6204 个样本有 0 个SQL。
SELECT AVG(salary)  FROM employee  WHERE employee_id IN (   SELECT employee_id    FROM inspection    WHERE inspection_type = 'License Re-Inspection' );
SELECT e.license_no, e.zip FROM establishment e JOIN inspection i ON e.license_no = i.license_no WHERE i.results = 'pass' AND e.license_no = 1222441;
SELECT inspection_date FROM inspection WHERE employee_id IN (   SELECT employee_id   FROM employee   WHERE first_name = 'John' AND last_name = 'Schaller' ) AND license_no IN (   SELECT license_no   FROM establishment   WHERE dba_name = 'JOHN SCHALLER' ) AND inspection_date LIKE '2010%';
SELECT e.first_name, e.last_name FROM employee e JOIN inspection i ON e.employee_id = i.employee_id WHERE i.license_no = 1334073;
Error: 第 6209 个样本有 0 个SQL。
SELECT COUNT(*)  FROM employee e  JOIN inspection i ON e.employee_id = i.employee_id  WHERE e.salary > 70000 AND i.results = 'Fail';
SELECT e.dba_name FROM establishment e JOIN inspection i ON e.license_no = i.license_no WHERE i.inspection_date LIKE '2010%' AND i.results = 'Pass';
Error: 第 6212 个样本有 0 个SQL。
SELECT COUNT(*)  FROM inspection  WHERE inspection_date LIKE '2010-07%'  AND results = 'Fail'  AND establishment.facility_type = 'Tavern';
Error: 第 6214 个样本有 0 个SQL。
SELECT e.dba_name  FROM establishment e  JOIN inspection i ON e.license_no = i.license_no  JOIN employee emp ON i.employee_id = emp.employee_id  WHERE emp.first_name = 'Bob' AND i.inspection_date LIKE '2010%';
SELECT e.title FROM employee e JOIN inspection i ON e.employee_id = i.employee_id JOIN establishment e2 ON i.license_no = e2.license_no WHERE e2.license_no = 1576687;
SELECT COUNT(*) FROM inspection_point WHERE point_level = 'Serious' AND fine = 0;
SELECT ROUND((SUM(CASE WHEN v.fine = 250 THEN 1 ELSE 0 END) / COUNT(e.license_no)) * 100, 2) AS percentage FROM establishment e JOIN inspection i ON e.license_no = i.license_no JOIN violation v ON i.inspection_id = v.inspection_id
SELECT      (COUNT(e.license_no) * 100.0 /       (SELECT COUNT(*) FROM establishment WHERE results = 'Pass'))  FROM      establishment e  WHERE      e.risk_level = 1 AND e.results = 'Pass';
Error: 第 6220 个样本有 0 个SQL。
SELECT facility_type FROM establishment WHERE dba_name = 'Kinetic Playground';
SELECT salary  FROM employee  WHERE first_name = 'Jessica' AND last_name = 'Anthony';
Error: 第 6223 个样本有 0 个SQL。
Error: 第 6224 个样本有 0 个SQL。
SELECT * FROM establishment WHERE city = 'CHICAGO' AND facility_type = 'Restaurant' AND dba_name = 'OLD TIMERS REST & LOUNGE';
Error: 第 6226 个样本有 0 个SQL。
SELECT COUNT(*)  FROM establishment  WHERE risk_level = (SELECT MAX(risk_level) FROM establishment);
Error: 第 6228 个样本有 0 个SQL。
SELECT last_name FROM employee WHERE employee_id IN (   SELECT employee_id   FROM inspection   WHERE inspection_id = 52256 );
SELECT e.dba_name  FROM establishment e  JOIN inspection i ON e.license_no = i.license_no  JOIN violation v ON i.inspection_id = v.inspection_id  WHERE e.facility_type = 'Tavern' AND v.fine = 100;
Error: 第 6231 个样本有 0 个SQL。
SELECT e.facility_type, e.license_no FROM establishment e JOIN inspection i ON e.license_no = i.license_no WHERE i.results = 'Fail' AND e.risk_level = (SELECT MIN(risk_level) FROM establishment);
SELECT * FROM inspection WHERE inspection_date = '2010-02-24' AND employee_id IN (   SELECT employee_id   FROM employee   WHERE first_name = 'Arnold' AND last_name = 'Holder' );
SELECT COUNT(*)  FROM inspection  WHERE inspection_date LIKE '2010-04%'  AND results = 'Fail'  AND license_no IN (SELECT license_no FROM establishment WHERE facility_type = 'Restaurant');
Error: 第 6235 个样本有 0 个SQL。
SELECT inspection_type FROM inspection WHERE inspection_date = '2010-07-07' AND employee_id IN (   SELECT employee_id   FROM employee   WHERE first_name = 'Lisa' AND last_name = 'Tillman' );
SELECT inspection_id FROM violation WHERE inspector_comment = 'MUST CLEAN AND BETTER ORGANIZE HALLWAY AREA' AND point_id IN (   SELECT point_id   FROM inspection_point   WHERE code = '7-38-030, 015, 010 (A), 005 (A') );
SELECT e.dba_name FROM establishment e JOIN inspection i ON e.license_no = i.license_no WHERE i.results = 'Fail' AND e.risk_level = (     SELECT MAX(risk_level) FROM establishment );
Error: 第 6239 个样本有 0 个SQL。
Error: 第 6240 个样本有 0 个SQL。
SELECT i.inspection_id FROM inspection i JOIN violation v ON i.inspection_id = v.inspection_id JOIN inspection_point ip ON v.point_id = ip.point_id WHERE v.inspector_comment = 'A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served. NO CERTIFIED FOOD MANAGER ON DUTY AT THIS TIME FOODS ARE COOKED AND SERVED SERIOUS CITATION ISSUED' AND ip.category = 'Personnel';
SELECT COUNT(*)  FROM inspection_point  WHERE category = 'Grocery Store' AND fine = 250;
Error: 第 6243 个样本有 0 个SQL。
SELECT eba.dba_name FROM establishment eba JOIN inspection i ON eba.license_no = i.license_no WHERE i.inspection_date LIKE '2010-01%' AND i.results = 'Fail' AND eba.facility_type = 'Tavern';
Error: 第 6245 个样本有 0 个SQL。
SELECT e.dba_name FROM establishment e JOIN inspection i ON e.license_no = i.license_no JOIN inspection_point ip ON i.inspection_id = ip.inspection_id WHERE ip.category = 'No Smoking Regulations';
SELECT      COUNT(CASE WHEN results = 'Pass' THEN 1 ELSE NULL END) -      COUNT(CASE WHEN results = 'Fail' THEN 1 ELSE NULL END) AS difference FROM      inspection WHERE      inspection_type = 'Canvass'     AND facility_type = 'Restaurant';
SELECT e.first_name, e.last_name FROM employee e WHERE e.salary > (SELECT AVG(salary) * 0.7 FROM employee) AND e.employee_id IN (   SELECT i.employee_id   FROM inspection i   WHERE i.results = 'Fail'   AND i.inspection_date LIKE '2010-02%'   AND i.license_no IN (     SELECT e.license_no     FROM establishment e   ) );
SELECT ROUND((COUNT(e.license_no) / (SELECT COUNT(*) FROM establishment WHERE fine = 500)) * 100, 2) AS percentage FROM establishment e WHERE e.fine = 500 AND e.facility_type = 'Restaurant';
SELECT c.name FROM coins c JOIN historical h ON c.id = h.coin_id WHERE year(h.date) = 2018 ORDER BY h.market_cap DESC LIMIT 1;
SELECT SUM(volume_24h)  FROM historical  WHERE date = '2016-10-11' AND coin_id IN (SELECT id FROM coins WHERE name = 'Argentum');
SELECT AVG(price)  FROM historical  WHERE date BETWEEN '2013-11-13' AND '2013-11-20'  AND coin_id IN (SELECT id FROM coins WHERE name = 'Zetacoin');
SELECT    time_high AS "Time to achieve highest price",    time_low AS "Time to achieve lowest price" FROM    historical WHERE    coin_id IN (SELECT id FROM coins WHERE name = 'WRAP')    AND MONTH(date) = 8    AND YEAR(date) = 2016   AND time_high IS NOT NULL    AND time_low IS NOT NULL
SELECT date FROM historical WHERE coin_id = (SELECT id FROM coins WHERE name = 'DigixDAO') AND price = (SELECT MAX(price) FROM historical WHERE coin_id = (SELECT id FROM coins WHERE name = 'DigixDAO'));
SELECT h.coin_id, c.name, h.date, h.price FROM historical h JOIN coins c ON h.coin_id = c.id ORDER BY h.percent_change_24h DESC LIMIT 1;
Error: 第 6256 个样本有 0 个SQL。
SELECT c.name, h.date AS last_transaction_date FROM coins c JOIN historical h ON c.id = h.coin_id WHERE c.status = 'inactive' ORDER BY h.date DESC;
SELECT price FROM historical  WHERE coin_id IN (SELECT id FROM coins WHERE symbol = 'BTC')  AND YEAR(date) = 2016;
SELECT date, price FROM historical WHERE coin_id = (SELECT id FROM coins WHERE name = 'Bitcoin') AND price = (SELECT MIN(price) FROM historical WHERE coin_id = (SELECT id FROM coins WHERE name = 'Bitcoin'));
SELECT c.status  FROM coins c  JOIN (SELECT coin_id, AVG(price) AS avg_price        FROM historical        GROUP BY coin_id        HAVING AVG(price) > 1000) h  ON c.id = h.coin_id;
SELECT c.name, h.date FROM coins c JOIN historical h ON c.id = h.coin_id ORDER BY h.percent_change_1h DESC LIMIT 1;
SELECT c.name  FROM coins c  JOIN historical h ON c.id = h.coin_id  WHERE c.category = 'Token'  ORDER BY h.high - h.low DESC  LIMIT 1;
SELECT name  FROM coins  WHERE id IN (   SELECT coin_id    FROM historical    WHERE DATE = '2013-06-22'    AND percent_change_24h > (SELECT AVG(percent_change_24h) FROM historical WHERE DATE = '2013-05-15') )
Error: 第 6264 个样本有 0 个SQL。
SELECT price FROM historical WHERE date = '2013-04-28' AND coin_id = (SELECT id FROM coins WHERE symbol = 'BTC');
Error: 第 6266 个样本有 0 个SQL。
SELECT close FROM historical WHERE date = '2013-04-29' AND coin_id = (SELECT id FROM coins WHERE symbol = 'BTC');
SELECT date  FROM historical  WHERE coin_id = (SELECT id FROM coins WHERE symbol = 'BTC')  AND date = '2013-04-29'  AND high = (SELECT MAX(high) FROM historical WHERE date = '2013-04-29');
SELECT MAX(high - low) AS max_profit FROM historical WHERE date = '2013-04-28' AND coin_id IN (SELECT id FROM coins WHERE symbol = 'BTC');
Error: 第 6270 个样本有 0 个SQL。
SELECT name, symbol, max(volume_24h) FROM historical WHERE date = '2016-01-08'
SELECT name FROM coins JOIN historical ON coins.id = historical.coin_id WHERE historical.date = '2013-04-28' AND historical.total_supply > 10000000;
Error: 第 6273 个样本有 0 个SQL。
SELECT c1.name, c1.circulating_supply AS circulating_supply_bitcoin, c2.name, c2.circulating_supply AS circulating_supply_litecoin FROM coins c1 JOIN historical h1 ON c1.id = h1.coin_id AND h1.date = '2013-04-28' JOIN coins c2 ON c2.id = h2.coin_id AND h2.date = '2013-04-28' JOIN historical h2 ON c2.id = h2.coin_id AND h2.date = '2013-04-28' WHERE c1.symbol = 'BTC' AND c2.symbol = 'LTC' ORDER BY c1.circulating_supply DESC;
Error: 第 6275 个样本有 0 个SQL。
SELECT SUM(price) / COUNT(*) AS average_price FROM historical WHERE year(date) = 2013 AND coin_id IN (SELECT id FROM coins WHERE name = 'Bitcoin');
SELECT (SUM(max_supply) - SUM(total_supply)) / SUM(total_supply) * 100 FROM coins WHERE category = 'Bitcoin' AND date_launched < '2013-04-08' AND date_added <= '2018-04-28';
Error: 第 6278 个样本有 0 个SQL。
SELECT description FROM coins WHERE name = 'BitBar';
Error: 第 6280 个样本有 0 个SQL。
Error: 第 6281 个样本有 0 个SQL。
Error: 第 6282 个样本有 0 个SQL。
SELECT name FROM coins WHERE length(tag_names)-length(replace(tag_names,',','')) = 2;
SELECT name FROM coins WHERE id = (   SELECT coin_id   FROM historical   ORDER BY price DESC   LIMIT 1 );
SELECT name FROM coins WHERE id IN (   SELECT coin_id   FROM historical   WHERE date = '2013-04-29' AND cmc_rank = 1 )
SELECT h.date FROM historical h JOIN coins c ON h.coin_id = c.id WHERE c.symbol = 'BTC' ORDER BY h.low LIMIT 1;
SELECT c.name  FROM coins c  JOIN historical h ON c.id = h.coin_id  ORDER BY h.volume_24h DESC  LIMIT 1;
SELECT name FROM coins WHERE NOT EXISTS (   SELECT 1   FROM historical   WHERE coins.id = historical.coin_id   AND year(date) = 2013   AND month(date) = 5   AND open IS NOT NULL );
SELECT MAX(close)  FROM historical  WHERE coin_id IN (SELECT id FROM coins WHERE name = 'CHNCoin');
Error: 第 6290 个样本有 0 个SQL。
SELECT date  FROM historical  WHERE coin_id = (SELECT id FROM coins WHERE name = 'Devcoin')  ORDER BY market_cap DESC  LIMIT 1;
SELECT c.name  FROM coins c  JOIN historical h ON c.id = h.coin_id  WHERE h.date = '2014-01-01' AND h.cmc_rank <= 5;
SELECT date FROM historical WHERE coin_id IN (SELECT id FROM coins WHERE name = 'Lebowskis') AND open IS NULL;
SELECT date FROM historical WHERE coin_id IN (SELECT id FROM coins WHERE name = 'Terracoin') ORDER BY price DESC LIMIT 1;
SELECT COUNT(*)  FROM historical  WHERE year(date) = 2013 AND month(date) = 6 AND coin_id IN (   SELECT id    FROM coins    WHERE name = 'Bytecoin' );
SELECT c.name FROM coins c JOIN historical h ON c.id = h.coin_id WHERE h.date = '2013-04-28' AND h.price > (SELECT AVG(h2.price) FROM historical h2 WHERE h2.date = '2013-04-28');
SELECT c.name  FROM coins c  JOIN historical h ON c.id = h.coin_id  WHERE h.date = '2013-05-29' AND h.percent_change_1h > 0;
SELECT COUNT(*)  FROM Employees  WHERE TitleOfCourtesy = 'Dr.';
SELECT e.FirstName, e.LastName FROM Employees e WHERE e.EmployeeID = (   SELECT e2.EmployeeID   FROM Employees e2   WHERE e2.FirstName = 'Nancy' AND e2.LastName = 'Davolio' );
SELECT ContactPhone FROM Customers WHERE ContactName = 'Nancy Davolio';
SELECT COUNT(*) FROM Employees WHERE ReportsTo IN (   SELECT EmployeeID   FROM Employees   WHERE FirstName = 'Andrew' AND LastName = 'Fuller' );
SELECT e.FirstName, e.LastName FROM Employees e WHERE e.BirthDate = (SELECT MAX(e2.BirthDate) FROM Employees e2);
SELECT SUM(Salary) - SUM(Salary) AS 'How much higher'  FROM Employees  WHERE LastName = 'Fuller' AND FirstName = 'Andrew'  MINUS  SELECT SUM(Salary)  FROM Employees  WHERE LastName = 'Davolio' AND FirstName = 'Nancy';
SELECT COUNT(*)  FROM Employees  WHERE Title = 'Sales Representative'  AND Country = 'UK';
Error: 第 6305 个样本有 0 个SQL。
Error: 第 6306 个样本有 0 个SQL。
Error: 第 6307 个样本有 0 个SQL。
Error: 第 6308 个样本有 0 个SQL。
Error: 第 6309 个样本有 0 个SQL。
SELECT COUNT(e.EmployeeID) FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID WHERE c.Country = 'UK' AND o.OrderID IN (   SELECT OrderID   FROM Orders   GROUP BY OrderID   HAVING COUNT(DISTINCT OrderDetails.OrderID) > 4 )
SELECT COUNT(*)  FROM Customers  WHERE Region = 'Eastern';
SELECT TerritoryDescription FROM territories WHERE RegionDescription = 'Eastern';
SELECT COUNT(DISTINCT Employees.EmployeeID)  FROM Employees  JOIN Orders ON Employees.EmployeeID = Orders.EmployeeID  JOIN Customers ON Orders.CustomerID = Customers.CustomerID  WHERE Customers.Address LIKE '%Eastern%';
SELECT e.Photo, e.HomePhone FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID JOIN Suppliers s ON c.Country = s.Country WHERE s.RegionDescription = 'Eastern'
SELECT    SUBTRACT(SUM(CASE WHEN RegionDescription = 'Eastern' THEN 1 ELSE 0 END),             SUM(CASE WHEN RegionDescription = 'Southern' THEN 1 ELSE 0 END)) AS difference FROM    Categories;
SELECT p.ProductName FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID WHERE od.OrderID = 10248;
SELECT Quantity FROM OrderDetails WHERE OrderID = 10273 AND ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Ikura');
SELECT SUM(UnitPrice * Quantity) FROM OrderDetails WHERE OrderID = 10273 AND ProductName = 'Ikura';
SELECT SUM(p.Unit * od.Quantity) AS TotalProduction FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID WHERE od.OrderID = 10248 GROUP BY p.ProductID ORDER BY od.Quantity DESC LIMIT 1;
SELECT p.ProductName FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID WHERE o.OrderID = 10248 ORDER BY p.ReorderLevel DESC LIMIT 1;
SELECT COUNT(*)  FROM Orders  JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID  JOIN Products ON OrderDetails.ProductID = Products.ProductID  WHERE Products.ProductName = 'Tofu';
SELECT o.OrderID FROM Orders o JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID WHERE p.Discontinued = 1;
SELECT COUNT(*) FROM OrderDetails WHERE ProductID IN (   SELECT ProductID   FROM Products   WHERE ProductName = 'Ikura' ) AND UnitPrice < (   SELECT UnitPrice   FROM Products   WHERE ProductName = 'Ikura' );
SELECT s.SupplierName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.ProductName = 'Aniseed Syrup';
SELECT ProductName FROM Products WHERE SupplierID IN (   SELECT SupplierID   FROM Suppliers   WHERE Country = 'Japan' )
SELECT s.Phone FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.UnitsOnOrder > p.UnitsInStock;
SELECT COUNT(*)  FROM Products p  JOIN Suppliers s ON p.SupplierID = s.SupplierID  WHERE p.Discontinued = 1 AND s.Country = 'USA';
SELECT s.SupplierName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.UnitPrice = (SELECT MAX(UnitPrice) FROM Products);
SELECT AVG(e.BirthDate) AS AverageSalary FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID GROUP BY e.EmployeeID HAVING COUNT(DISTINCT c.CustomerID) > 4;
SELECT    MULTIPLY(DIVIDE(SUBTRACT(p.Unit, od.Unit), p.Unit), 100) AS percentage_lower FROM    Products p   JOIN OrderDetails od ON p.ProductID = od.ProductID   JOIN Orders o ON od.OrderID = o.OrderID WHERE    p.ProductName = 'Ikura' AND o.OrderID = 10273;
SELECT AVG(Quantity)  FROM OrderDetails  WHERE ProductID IN (SELECT ProductID                      FROM Products                      WHERE ProductName = 'Ikura');
SELECT p.ProductName FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID WHERE od.OrderID = 10248 ORDER BY (od.Quantity / p.Unit) DESC LIMIT 1;
SELECT FirstName + ' ' + LastName AS Fullname FROM Employees ORDER BY BirthDate DESC LIMIT 1;
SELECT FirstName, LastName FROM Employees ORDER BY BirthDate DESC LIMIT 1;
SELECT COUNT(*)  FROM Orders  WHERE EmployeeID IN (SELECT EmployeeID FROM Employees WHERE FirstName = 'Michael' AND LastName = 'Suyama');
SELECT c.Country FROM Customers c WHERE c.ContactName LIKE 'Mr. Robert King';
SELECT t.TerritoryDescription FROM Employees e JOIN Employees r ON e.ReportsTo = r.EmployeeID JOIN Customers c ON r.CustomerID = c.CustomerID JOIN Categories ca ON c.CategoryID = ca.CategoryID JOIN Territories t ON ca.TerritoryID = t.TerritoryID WHERE e.FirstName = 'Laura' AND e.LastName = 'Callahan' AND e.TitleOfCourtesy = 'Ms.';
SELECT e.FirstName, e.LastName FROM Employees e WHERE e.Address LIKE '%Santa Monica%' OR e.City = 'Santa Monica';
SELECT e.HomePhone FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID WHERE c.ContactName LIKE '%Savannah%';
SELECT SUM(Quantity)  FROM OrderDetails  WHERE OrderID IN (   SELECT OrderID    FROM Orders    WHERE CustomerID = 'HILAA'    AND OrderDate = '1997/12/25')
SELECT COUNT(DISTINCT o.OrderID) AS num_of_products FROM Orders o JOIN OrderDetails od ON o.OrderID = od.OrderID WHERE o.OrderID IN (     SELECT OrderID     FROM Orders     ORDER BY Freight DESC     LIMIT 1 )
SELECT ShipperName FROM Shippers WHERE ShipperID IN (     SELECT ShipperID     FROM Orders     WHERE OrderID = 10585 )
SELECT COUNT(*)  FROM Orders  WHERE ShipperID IN (SELECT ShipperID FROM Shippers WHERE ShipperName = 'Federal Shipping');
SELECT COUNT(DISTINCT ProductID)  FROM Products  WHERE CategoryID IN (SELECT CategoryID                       FROM Categories                       WHERE CategoryName = 'dairy products');
Error: 第 6345 个样本有 0 个SQL。
SELECT SUM(p.Unit * od.Quantity)  FROM Products p  JOIN Suppliers s ON p.SupplierID = s.SupplierID  JOIN OrderDetails od ON p.ProductID = od.ProductID  WHERE s.SupplierName = 'Escargots Nouveaux';
SELECT p.ReorderLevel FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'Nord-Ost-Fisch Handelsgesellschaft mbH';
SELECT COUNT(DISTINCT p.ProductID) FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'Karkki Oy';
SELECT s.ContactName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.ProductName = 'Gudbrandsdalsost';
SELECT s.Country FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.ProductName = 'Scottish Longbreads';
Error: 第 6351 个样本有 0 个SQL。
SELECT r.RegionDescription FROM Regions r JOIN Territories t ON r.RegionID = t.RegionID WHERE t.TerritoryDescription = 'Columbia';
SELECT (COUNT(o.ShipperID) / COUNT(o.ShipperID)) * 100 FROM Orders o JOIN Customers c ON o.CustomerID = c.CustomerID JOIN Shippers s ON o.ShipperID = s.ShipperID WHERE c.CustomerID = 'WHITC' AND s.ShipperName = 'United Package';
SELECT      (COUNT(o.OrderID)       - COUNT(o.OrderID)       WHERE o.ShipperID = (SELECT s.ShipperID FROM Shippers s WHERE s.ShipperName = 'Speedy Express'))      / COUNT(o.OrderID)      WHERE o.ShipperID = (SELECT s.ShipperID FROM Shippers s WHERE s.ShipperName = 'Speedy Express')      * 100 AS percent FROM      Orders o WHERE      o.ShipperID = (SELECT s.ShipperID FROM Shippers s WHERE s.ShipperName = 'United Package')      OR o.ShipperID = (SELECT s.ShipperID FROM Shippers s WHERE s.ShipperName = 'Speedy Express');
SELECT COUNT(*) AS result FROM (SELECT COUNT(*) AS count       FROM Categories       WHERE CategoryName LIKE '%Eastern%') AS Eastern CROSS JOIN (SELECT COUNT(*) AS count             FROM Categories             WHERE CategoryName LIKE '%Southern%') AS Southern;
SELECT COUNT(*)  FROM Customers  WHERE Country = (SELECT Country                    FROM Customers                    GROUP BY Country                    ORDER BY COUNT(CustomerID) DESC                    LIMIT 1);
SELECT OrderID FROM Orders WHERE Freight > 800;
SELECT c.Address, c.City, c.PostalCode, c.Country FROM Customers c WHERE c.CustomerName = 'Island Trading';
SELECT ProductName, UnitPrice FROM Products ORDER BY UnitPrice DESC LIMIT 1;
Error: 第 6360 个样本有 0 个SQL。
SELECT ProductName FROM Products WHERE ProductID = (SELECT ProductID                    FROM Products                    ORDER BY ReorderLevel DESC                    LIMIT 1);
SELECT FirstName + ' ' + LastName AS Fullname FROM Employees ORDER BY BirthDate DESC LIMIT 1;
SELECT ProductName FROM Products WHERE Discontinued = 1;
SELECT AVG(Salary)  FROM Employees  WHERE Title = 'Sales Representative' AND Country = 'UK';
SELECT s.ShipperName FROM Shippers s JOIN Orders o ON s.ShipperID = o.ShipperID WHERE o.ShipCountry = 'USA' GROUP BY s.ShipperName ORDER BY COUNT(s.ShipperID) DESC LIMIT 1;
SELECT COUNT(*)  FROM Products  WHERE SupplierID IN (SELECT SupplierID FROM Suppliers WHERE SupplierName = 'Pavlova, Ltd.')
Error: 第 6367 个样本有 0 个SQL。
SELECT s.SupplierName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.ReorderLevel = (SELECT MAX(ReorderLevel) FROM Products);
SELECT COUNT(*)  FROM Orders  WHERE ShipperID IN (SELECT ShipperID FROM Shippers WHERE ShipperName = 'United Package');
SELECT COUNT(DISTINCT s.SupplierID) FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE s.Country = 'Australia' AND p.Discontinued = 1;
SELECT SUM(UnitPrice * Quantity + Freight) AS TotalPurchasePrice FROM Products WHERE (UnitPrice * Quantity + Freight) = (     SELECT MAX(UnitPrice * Quantity + Freight)     FROM Products ) ORDER BY TotalPurchasePrice DESC LIMIT 2;
SELECT s.SupplierName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierName ORDER BY COUNT(p.ProductID) DESC LIMIT 1;
SELECT ProductName FROM Products WHERE UnitPrice < 5;
SELECT FirstName + ' ' + LastName AS EmployeeTitle FROM Employees WHERE EmployeeID = (   SELECT EmployeeID   FROM Employees   ORDER BY COUNT(TerritoryID) DESC   LIMIT 1 );
SELECT p.ProductID, COUNT(p.ProductID) as TotalCount FROM OrderDetails od JOIN Products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY TotalCount DESC LIMIT 1;
SELECT c.Country FROM Employees e JOIN Customers c ON e.EmployeeID = c.CustomerID WHERE e.TitleOfCourtesy = 'Dr.';
SELECT Description  FROM Categories WHERE CategoryName IN (SELECT CategoryName                         FROM Categories                         WHERE CategoryName LIKE '%Territory%'                         AND RegionDescription = 'Eastern');
SELECT AVG(count(TerritoryID))  FROM Employees e  JOIN Customers c ON e.CustomerID = c.CustomerID  WHERE e.Title = 'Sales Representative';
SELECT p.ProductName FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE c.CategoryName = 'Beverages' ORDER BY ReorderLevel DESC LIMIT 1;
SELECT e.FirstName + ' ' + e.LastName AS FullName FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.FirstName, e.LastName ORDER BY COUNT(o.OrderID) DESC LIMIT 1;
SELECT COUNT(od.ProductID) FROM OrderDetails od JOIN Orders o ON od.OrderID = o.OrderID WHERE o.OrderID = (     SELECT o2.OrderID     FROM Orders o2     ORDER BY Freight DESC     LIMIT 1 );
SELECT p.ProductID, SUM(p.Unit) AS TotalProduction FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE c.CategoryName = 'Seafood' GROUP BY p.ProductID ORDER BY TotalProduction DESC LIMIT 1;
SELECT MAX(employeeA.Salary) - MIN(employeeB.Salary) FROM Employees employeeA, Employees employeeB WHERE employeeA.EmployeeID IN (   SELECT EmployeeID   FROM Employees   ORDER BY COUNT(TerritoryID) DESC   LIMIT 2 ) AND employeeB.EmployeeID IN (   SELECT EmployeeID   FROM Employees   ORDER BY COUNT(TerritoryID) DESC   LIMIT 2 OFFSET 1 );
SELECT AVG(UnitPrice)  FROM Products  WHERE UnitsInStock > 50;
SELECT c.CustomerName FROM Customers c WHERE c.City IN (   SELECT City   FROM Customers   GROUP BY City   ORDER BY COUNT(*) DESC   LIMIT 1 )
SELECT c.CustomerName, c.ContactName, c.Country FROM Customers c WHERE c.City = 'Madrid';
SELECT FirstName + ' ' + LastName AS FullName, NULL AS ContactNumber FROM Employees ORDER BY BirthDate DESC;
SELECT AVG(p.Price)  FROM Products p  JOIN Orders o ON p.ProductID = o.OrderID  JOIN Customers c ON o.CustomerID = c.CustomerID  WHERE c.Country = 'UK';
SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalQuantity DESC LIMIT 1;
SELECT p.SupplierID, s.ContactName, s.Address, s.Phone FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.UnitPrice > 30;
SELECT c.CustomerName, c.Address FROM Customers c WHERE c.CustomerID IN (   SELECT o.CustomerID   FROM Orders o   WHERE o.OrderID IN (     SELECT od.OrderID     FROM OrderDetails od     GROUP BY od.OrderID     HAVING SUM(od.Quantity * p.Price) / COUNT(od.OrderID) > (       SELECT AVG(Freight)       FROM Orders     )   ) )
Error: 第 6392 个样本有 0 个SQL。
SELECT s.SupplierName FROM Suppliers s WHERE s.Country <> 'USA' AND s.SupplierID NOT IN (     SELECT p.SupplierID     FROM Products p     WHERE p.Discontinued = 0 )
SELECT TOP 5 p.ProductName, SUM(od.Quantity * p.UnitPrice) AS TotalCost FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= '1998-01-01 00:00:00' AND o.OrderDate < '1999-01-01 00:00:00' GROUP BY p.ProductName ORDER BY TotalCost DESC;
SELECT COUNT(*)  FROM Orders  WHERE CustomerID IN (SELECT CustomerID FROM Customers WHERE Country = 'Canada')  AND ShipperID IN (SELECT ShipperID FROM Shippers WHERE ShipperName = 'Federal Shipping');
SELECT p.ProductName FROM Products p JOIN (   SELECT ProductID, COUNT(OrderID) as OrderCount   FROM OrderDetails   GROUP BY ProductID   ORDER BY OrderCount DESC ) o ON p.ProductID = o.ProductID ORDER BY o.OrderCount DESC LIMIT 10;
SELECT s.SupplierID, s.SupplierName, COUNT(p.ProductID) as TotalProducts FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.SupplierName ORDER BY TotalProducts DESC LIMIT 1;
SELECT CONCAT(FirstName, ' ', LastName) AS 'Full Name', 'Unknown' AS 'Region' FROM Employees ORDER BY Full Name;
SELECT      e.FirstName,      e.LastName,      e.Title,      e.Address FROM      Employees e WHERE      e.EmployeeID = (         SELECT              o.EmployeeID         FROM              Orders o         WHERE              o.OrderDate >= '1996-01-01 00:00:00' AND o.OrderDate < '1997-01-01 00:00:00'         GROUP BY              o.EmployeeID         ORDER BY              COUNT(o.OrderID) DESC         LIMIT 1     );
SELECT AVG(UnitPrice)  FROM Products p  JOIN OrderDetails od ON p.ProductID = od.ProductID  JOIN Orders o ON od.OrderID = o.OrderID  JOIN Shippers s ON o.ShipperID = s.ShipperID  WHERE s.ShipperName = 'United Package' AND o.OrderDate >= '1997-01-01 00:00:00' AND o.OrderDate < '1998-01-01 00:00:00';
SELECT (COUNT(ShipperID) FROM Shippers WHERE ShipperName = 'Speedy Express') / COUNT(ShipperID) * 100 AS Percentage
SELECT TOP 3 TitleOfCourtesy FROM Employees ORDER BY Salary
SELECT LastName FROM Employees WHERE EmployeeID IN (   SELECT EmployeeID   FROM Employees   WHERE Title = 'Vice President, Sales' )
SELECT MAX(SUM(od.UnitPrice * od.Quantity * (1 - od.Discount))) FROM OrderDetails od JOIN Orders o ON od.OrderID = o.OrderID;
SELECT TOP 3 p.ProductName, SUM(p.UnitsInStock + p.UnitsOnOrder) AS TotalQuantity FROM Products p GROUP BY p.ProductName ORDER BY TotalQuantity DESC;
SELECT p.ProductID FROM Products p JOIN (     SELECT ProductID, MIN(ReorderLevel) AS MinReorderLevel     FROM OrderDetails     GROUP BY ProductID ) AS o ON p.ProductID = o.ProductID WHERE p.ProductID IN (     SELECT ProductID     FROM Products     ORDER BY UnitPrice DESC     LIMIT 10 ) ORDER BY o.MinReorderLevel;
SELECT COUNT(*)  FROM Products  WHERE Discontinued = 0 AND CategoryID IN (SELECT CategoryID FROM Categories WHERE CategoryName = 'Dairy Products');
SELECT t.TerritoryDescription FROM Employees e JOIN Territories t ON e.RegionID = t.RegionID WHERE e.Title = 'Inside Sales Coordinator';
SELECT s.SupplierName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID WHERE o.OrderDate > '1995-01-01' AND o.OrderDate < '1996-12-31' AND od.Quantity * p.Price > 2000000 ORDER BY s.SupplierName;
SELECT s.ShipperName FROM Shippers s JOIN Orders o ON s.ShipperID = o.ShipperID JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID JOIN Suppliers su ON p.SupplierID = su.SupplierID WHERE su.City = 'Aachen' GROUP BY s.ShipperName ORDER BY COUNT(o.OrderID) DESC LIMIT 1;
SELECT FirstName + ' ' + LastName AS FullName FROM Employees WHERE Country IN (   SELECT Country   FROM Customers   WHERE City LIKE '%Northern%' )
SELECT ContactName FROM Suppliers WHERE SupplierName = 'Pavlova';
Error: 第 6413 个样本有 0 个SQL。
SELECT p.ProductName FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID WHERE o.PostalCode = '28023' GROUP BY p.ProductName ORDER BY MIN(od.Quantity) LIMIT 1;
SELECT e.FirstName + ' ' + e.LastName AS FullName FROM Employees e WHERE e.LastName = (   SELECT e2.LastName   FROM Employees e2   WHERE e2.FirstName = 'Andrew' AND e2.LastName = 'Fuller' ) AND EXISTS (   SELECT *   FROM Employees e3   WHERE e3.ReportingEmployeeID = e.EmployeeID   AND e3.LastName IN (     SELECT e4.LastName     FROM Employees e4     WHERE e4.RegionDescription = 'Southern'   ) );
Error: 第 6416 个样本有 0 个SQL。
SELECT c.CategoryName FROM Orders o JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID JOIN Categories c ON p.CategoryID = c.CategoryID WHERE o.OrderID = 10933;
SELECT e.HomePhone FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID WHERE c.Address LIKE '%Portsmouth%' AND o.OrderDate IS NOT NULL;
SELECT DIVIDE(SUM(OD.Quantity), COUNT(OD.ProductID)) FROM OrderDetails OD JOIN Orders O ON OD.OrderID = O.OrderID JOIN Employees E ON O.EmployeeID = E.EmployeeID JOIN Shippers S ON O.ShipperID = S.ShipperID WHERE S.ShipperName = 'Federal Shipping' AND O.OrderDate >= '1996-11-01 00:00:00' AND O.OrderDate < '1996-12-01 00:00:00';
SELECT      DIVIDE(         COUNT(o.OrderID)          WHERE o.CustomerID IN (SELECT s.ShipperID FROM Shippers s WHERE s.ShipperName = 'United Package')          AND o.OrderDate >= '1996-09-01' AND o.OrderDate < '1997-01-01'),      (COUNT(o.OrderID)      WHERE o.CustomerID IN (SELECT s.ShipperID FROM Shippers s WHERE s.ShipperName = 'United Package')      AND o.OrderDate >= '1996-01-01' AND o.OrderDate < '1997-01-01')  AS percentage
Error: 第 6421 个样本有 0 个SQL。
SELECT Address, City, PostalCode, Country FROM Customers WHERE ContactName = 'Andr Fonseca';
SELECT SupplierName FROM Suppliers WHERE Phone LIKE '(171)%';
SELECT    SUBTRACT(COUNT(EmployeeID) FROM Employees WHERE Country = 'UK' AND Title = 'Sales Representative'),    COUNT(EmployeeID) FROM Employees WHERE Country = 'USA' AND Title = 'Sales Representative');
SELECT COUNT(*)  FROM Employees e  JOIN Customers c ON e.FirstName = c.ContactName  WHERE c.City = 'Sao Paulo' AND c.Country = 'Brazil' AND e.ContactTitle = 'Sales Associate';
Error: 第 6426 个样本有 0 个SQL。
SELECT SUM(od.Quantity * p.Price)  FROM Orders o  JOIN OrderDetails od ON o.OrderID = od.OrderID  JOIN Products p ON od.ProductID = p.ProductID  WHERE o.OrderID = 10692;
Error: 第 6428 个样本有 0 个SQL。
Error: 第 6429 个样本有 0 个SQL。
SELECT ProductName FROM Products WHERE CategoryID IN (   SELECT CategoryID   FROM Categories   WHERE CategoryName = 'beverage' )
SELECT Description FROM Categories WHERE CategoryName IN (     SELECT CategoryID     FROM Products     WHERE ProductName = 'tofu' )
SELECT s.SupplierName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.ProductName = 'Gula Malacca';
SELECT ProductName FROM Products WHERE SupplierID IN (   SELECT SupplierID   FROM Suppliers   WHERE SupplierName = 'Aux joyeux ecclsiastiques' )
SELECT p.UnitPrice FROM Products p WHERE p.ProductName = 'Konbu';
SELECT s.ContactName FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE p.ProductName = 'Camembert Pierrot';
SELECT ProductName  FROM Products  WHERE Discontinued = 1  AND CategoryID IN (SELECT CategoryID FROM Categories WHERE CategoryName = 'Meat/Poultry')  LIMIT 3;
SELECT TOP 2 p.ProductName FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID JOIN Customers c ON s.SupplierName = c.CustomerName WHERE c.Country = 'Heli Swaren GmbH & Co. KG' ORDER BY p.ReorderLevel DESC;
SELECT ContactName FROM Customers WHERE CustomerName = 'Heli Swaren GmbH & Co. KG';
SELECT Country FROM Customers WHERE CustomerName = 'Drachenblut Delikatessen';
SELECT COUNT(DISTINCT c.Country) AS TerritoryCount FROM Customers c;
SELECT MAX(MULTIPLY(UnitPrice, Quantity, (1-Discount))) FROM OrderDetails
SELECT ProductName FROM Products WHERE UnitPrice = (SELECT MAX(UnitPrice) FROM Products);
Error: 第 6443 个样本有 0 个SQL。
Error: 第 6444 个样本有 0 个SQL。
SELECT s.Phone AS 'Homepage Link' FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE p.ProductName = 'Thringer Rostbratwurst';
Error: 第 6446 个样本有 0 个SQL。
SELECT MAX(Quantity)  FROM OrderDetails  WHERE ProductID IN (SELECT ProductID                      FROM Products                      WHERE ProductName = 'Manjimup Dried Apples');
SELECT COUNT(*)  FROM Orders  WHERE ShipperID IN (SELECT ShipperID FROM Shippers WHERE ShipperName = 'Speedy Express');
SELECT TerritoryDescription FROM Territories WHERE RegionDescription = 'Southern';
Error: 第 6450 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Orders  WHERE CustomerID IN (SELECT CustomerID FROM Customers WHERE CustomerName = 'Laughing Bacchus Wine Cellars');
Error: 第 6452 个样本有 0 个SQL。
Error: 第 6453 个样本有 0 个SQL。
SELECT c.Description FROM Employees e JOIN Categories c ON e.Photo = c.CategoryID WHERE e.LastName = 'King' AND e.FirstName = 'Robert';
SELECT ContactName FROM Customers WHERE CustomerID IN (   SELECT CustomerID   FROM Orders   WHERE ShipperID IN (     SELECT ShipperID     FROM Shippers   ) AND ShipCountry = 'Switzerland' )
SELECT      DIVIDE(COUNT(o.OrderID), COUNT(o.OrderID)) as percentage FROM      Orders o     JOIN Employees e ON o.EmployeeID = e.EmployeeID WHERE      e.Title = 'Sales Representative'
SELECT COUNT(*)  FROM Employees  WHERE Country = 'USA' AND TitleOfCourtesy = 'Dr.';
SELECT AVG(Salary)  FROM Employees  WHERE EmployeeID BETWEEN 1 AND 9;
SELECT SUM(Employees.BirthDate) AS TotalSalary FROM Employees WHERE Employees.Country = 'UK';
SELECT *  FROM Employees  WHERE FirstName = 'Laura' AND LastName = 'Callahan' AND Phone = '206) 555-1189';
SELECT Notes FROM Employees WHERE EmployeeID = (   SELECT EmployeeID   FROM Employees   ORDER BY BirthDate DESC   LIMIT 1 );
Error: 第 6462 个样本有 0 个SQL。
Error: 第 6463 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Orders  WHERE CustomerID IN (SELECT CustomerID                       FROM Customers                       WHERE ContactName = 'Margaret Peacock');
SELECT AVG(e.BirthDate) AS AverageSalary FROM Employees e WHERE e.FirstName = 'Andrew' AND e.LastName = 'Fuller';
SELECT p.ProductName FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'Exotic Liquids';
SELECT p.Unit, od.Quantity FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID JOIN Customers c ON s.SupplierName = c.CustomerName WHERE c.Country = 'Japan' AND c.CustomerName = 'Tokyo Traders';
SELECT COUNT(*) FROM Products WHERE Discontinued = 1 AND SupplierID IN (   SELECT SupplierID   FROM Suppliers   WHERE SupplierName = 'New Orleans Cajun Delights' )
SELECT AVG(p.Unit) AS AverageUnitPrice FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'Formaggi Fortini s.r.l.';
SELECT COUNT(DISTINCT p.ProductName)  FROM Products p  JOIN Suppliers s ON p.SupplierID = s.SupplierID  WHERE s.Country = 'Japan';
SELECT ContactName FROM Suppliers WHERE SupplierID IN (   SELECT SupplierID   FROM Products   WHERE ProductName = 'Teatime Chocolate Biscuits' )
SELECT s.SupplierName FROM Suppliers s WHERE s.SupplierID IN (   SELECT p.SupplierID   FROM Products p   GROUP BY p.SupplierID   ORDER BY MAX(p.ReorderLevel) DESC   LIMIT 1 )
SELECT ContactName FROM Suppliers WHERE SupplierID IN (   SELECT SupplierID   FROM Products   WHERE QuantityPerUnit = '10 boxes x 12 pieces' )
SELECT SUM(UnitsOnOrder)  FROM Products  WHERE SupplierID IN (SELECT SupplierID FROM Suppliers WHERE SupplierName = 'Exotic Liquids');
SELECT (COUNT(s.SupplierID) / (SELECT COUNT(*) FROM Suppliers)) * 100 FROM Suppliers s WHERE s.SupplierName = 'Gai pturage';
SELECT TOP 5 ProductID, SUM(Quantity) AS TotalQuantity FROM OrderDetails GROUP BY ProductID ORDER BY TotalQuantity DESC;
SELECT COUNT(*) FROM Products WHERE Discontinued = 1;
SELECT c.Address, c.ContactName, e.BirthDate FROM Employees e JOIN Customers c ON e.CustomerID = c.CustomerID WHERE e.LastName LIKE '%Sales Manager%';
SELECT FirstName + ' ' + LastName AS 'Full Name', Photo FROM Employees WHERE Title = 'Vice President, Sales';
SELECT c.CustomerName, SUM(od.Quantity * p.Price) AS TotalSales FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID GROUP BY c.CustomerName ORDER BY TotalSales DESC LIMIT 10;
SELECT      c.CategoryName,      AVG(od.Quantity * p.Price) AS average_sales FROM      Categories c JOIN      Products p ON c.CategoryID = p.CategoryID JOIN      OrderDetails od ON p.ProductID = od.ProductID GROUP BY      c.CategoryName
SELECT SUM(Quantity)  FROM OrderDetails  WHERE ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Uncle Bob''s Organic Dried Pears');
SELECT COUNT(*)  FROM OrderDetails  WHERE ProductID IN (   SELECT ProductID    FROM Products    WHERE CategoryID IN (     SELECT CategoryID      FROM Categories      WHERE CategoryName = 'Seafood'   )  )  AND Quantity > 50;
SELECT p.ProductID, p.ProductName, p.ReorderLevel FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'Pavlova, Ltd';
SELECT s.CompanyName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1;
SELECT FirstName + ' ' + LastName AS FullName FROM Employees WHERE EmployeeID NOT IN (   SELECT EmployeeID   FROM Employees   GROUP BY EmployeeID   HAVING COUNT(EmployeeID) >= 4 )
SELECT COUNT(*) FROM Employees WHERE EXISTS (   SELECT 1   FROM EmployeeTerritories   WHERE EmployeeID = Employees.EmployeeID   AND RegionDescription = 'Eastern' );
Error: 第 6488 个样本有 0 个SQL。
SELECT Orders.CustomerID FROM Orders JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID JOIN Customers ON Orders.CustomerID = Customers.CustomerID WHERE Shippers.ShipperName = 'Speedy Express' AND Customers.Country = 'Brazil' AND Orders.OrderDate BETWEEN '1997-03-31' AND '1997-10-12';
SELECT p.ProductID, p.ReorderLevel FROM Products p WHERE p.ProductID IN (   SELECT od.ProductID   FROM OrderDetails od   WHERE od.Quantity = 1 )
SELECT SUM(UnitPrice * UnitInStock) AS StockValue FROM Products WHERE CategoryID IN (   SELECT CategoryID   FROM Categories   WHERE CategoryName = 'Condiments' )
SELECT COUNT(DISTINCT c.Country)  FROM Customers c  WHERE c.ContactName = 'Anne Dodsworth';
SELECT c.CustomerID, c.CustomerName FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID WHERE c.Country = 'USA' AND o.OrderDate < o.RequiredDate ORDER BY Max(DATEDIFF(o.RequiredDate, o.ShippedDate)) DESC LIMIT 1;
SELECT c.ContactName, c.Phone FROM Customers c JOIN (   SELECT o.CustomerID, SUM(odi.Quantity * p.UnitPrice * (1 - p.Discount)) AS TotalPayment   FROM Orders o   JOIN OrderDetails odi ON o.OrderID = odi.OrderID   JOIN Products p ON odi.ProductID = p.ProductID   GROUP BY o.CustomerID   ORDER BY TotalPayment DESC   LIMIT 1 ) t ON c.CustomerID = t.CustomerID;
SELECT    e.FirstName, e.LastName, e.Photo, e.Notes, m.FirstName, m.LastName FROM    Employees e   INNER JOIN Employees m ON e.ReportsTo = m.EmployeeID WHERE    e.EmployeeID IN (     SELECT        o.EmployeeID     FROM        Orders o       INNER JOIN OrderDetails od ON o.OrderID = od.OrderID       INNER JOIN Products p ON od.ProductID = p.ProductID     WHERE        o.CustomerID IN (         SELECT            c.CustomerID         FROM            Customers c         WHERE            c.CustomerID = (             SELECT                MAX(c2.CustomerID)             FROM                Customers c2           )       )     GROUP BY        o.EmployeeID     ORDER BY        SUM(od.Quantity * p.UnitPrice * (1 - p.Discount)) DESC     LIMIT 1   )
Error: 第 6496 个样本有 0 个SQL。
SELECT COUNT(DISTINCT p.ProductID) FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'Exotic Liquids';
SELECT s.SupplierName, p.ProductName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.UnitPrice = (SELECT MIN(UnitPrice) FROM Products)
SELECT AVG(P.Unit) FROM Products P JOIN Suppliers S ON P.SupplierID = S.SupplierID WHERE S.SupplierName = 'Tokyo Traders';
SELECT COUNT(DISTINCT t.TerritoryID) FROM Regions r JOIN Territories t ON r.RegionID = t.RegionID WHERE r.RegionDescription = 'Eastern';
SELECT RegionDescription AS "Region", COUNT(TerritoryID) AS "Most Territories" FROM Regions GROUP BY RegionDescription ORDER BY COUNT(TerritoryID) DESC LIMIT 1;
SELECT r.RegionDescription FROM Regions r WHERE r.RegionID = (SELECT o.CustomerID                      FROM Customers o                      WHERE o.CustomerID = 2116);
SELECT (COUNT(CustomerID) FROM Orders WHERE YEAR(OrderDate) = 1996 AND City = 'Madrid') / (SELECT COUNT(CustomerID) FROM Customers) * 100
Error: 第 6504 个样本有 0 个SQL。
SELECT FirstName FROM Employees WHERE Salary = (SELECT MAX(Salary) FROM Employees);
SELECT COUNT(*)  FROM Employees  WHERE Title = 'Sales Representative' AND Salary > 2000;
SELECT COUNT(*)  FROM Orders  WHERE YEAR(OrderDate) = 1996 AND Customers.Country = 'UK';
SELECT s.SupplierName FROM Suppliers s JOIN Orders o ON s.SupplierID = o.CustomerID WHERE YEAR(o.OrderDate) = 1998 GROUP BY s.SupplierName ORDER BY COUNT(s.SupplierName) DESC LIMIT 1;
SELECT c.Country, COUNT(o.OrderID) AS NumberOfOrders FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID WHERE YEAR(o.OrderDate) = 1996 GROUP BY c.Country;
SELECT COUNT(*) FROM Orders WHERE CustomerID IN (   SELECT CustomerID   FROM Customers   WHERE CustomerName = 'Hanna Moos' ) AND YEAR(OrderDate) = 1999;
SELECT DATEDIFF(MIN(ShippedDate), MIN(OrderDate)) FROM Orders WHERE CustomerID IN (   SELECT CustomerID   FROM Customers   WHERE CompanyName = 'Berglunds snabbkp' ) AND ShippedDate IS NOT NULL;
SELECT CustomerName FROM Customers WHERE CustomerID IN (   SELECT CustomerID   FROM Orders   WHERE OrderID = 10257 )
SELECT YEAR(o.OrderDate) AS OrderYear FROM Orders o WHERE o.CustomerID IN (SELECT c.CustomerID FROM Customers c WHERE c.CustomerName = 'Around the Horn') ORDER BY COUNT(o.OrderID) DESC LIMIT 1;
SELECT COUNT(*)  FROM Employees  WHERE FirstName = 'Andrew' AND LastName = 'Fuller' AND ReportsTo IS NOT NULL;
SELECT Country FROM Suppliers GROUP BY Country ORDER BY COUNT(SupplierID) DESC LIMIT 1;
SELECT LastName + ' ' + FirstName AS FullName FROM Employees WHERE ReportsTo IS NOT NULL AND Title = 'Sales Manager';
SELECT COUNT(*)  FROM Orders  WHERE OrderDate = '1996-8-1' AND CustomerID IN (   SELECT CustomerID    FROM Orders    GROUP BY CustomerID    ORDER BY COUNT(OrderID) DESC    LIMIT 1 )
SELECT MIN(BirthDate) AS HireDate, LastName, FirstName FROM Employees ORDER BY BirthDate LIMIT 1;
SELECT MAX(DATEDIFF(BirthDate, '1900-01-01')) AS OldestAge FROM Employees;
SELECT SUM(p.UnitPrice * od.Quantity) FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID WHERE p.Discontinued = 1;
SELECT c.CategoryName FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE p.Discontinued = 1 GROUP BY c.CategoryName ORDER BY COUNT(*) DESC LIMIT 1;
SELECT COUNT(*)  FROM OrderDetails  JOIN Products ON OrderDetails.ProductID = Products.ProductID  JOIN Categories ON Products.CategoryID = Categories.CategoryID  WHERE Categories.CategoryName = 'Condiments' AND YEAR(OrderDetails.OrderID) = 1997;
SELECT c.CustomerName FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN OrderDetails od ON o.OrderID = od.OrderID GROUP BY c.CustomerName ORDER BY COUNT(od.ProductID) DESC LIMIT 1;
SELECT AVG(DIVIDE(SUM(od.OrderID), 12)) AS MonthlyAverage FROM Orders o JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Shippers s ON o.ShipperID = s.ShipperID WHERE s.ShipperName = 'Federal Shipping' AND YEAR(o.OrderDate) = 1996;
SELECT p.ProductName FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'G''day, Mate';
SELECT COUNT(DISTINCT c.CustomerID)  FROM Customers c  WHERE c.CustomerID IN (   SELECT o.CustomerID    FROM Orders o    GROUP BY o.CustomerID    ORDER BY COUNT(*) DESC    LIMIT 1 )
SELECT SupplierName FROM Suppliers WHERE SupplierID IN (   SELECT SupplierID   FROM Products   WHERE UnitPrice = (     SELECT MAX(UnitPrice)     FROM Products   ) )
SELECT COUNT(*) FROM Employees WHERE TitleOfCourtesy IN ('Mrs.', 'Ms.')   AND EmployeeID IN (     SELECT EmployeeID     FROM Orders     GROUP BY EmployeeID     HAVING COUNT(DISTINCT CustomerID) >= 3   );
SELECT s.SupplierID, s.SupplierName FROM Suppliers s JOIN (   SELECT p.SupplierID, MAX(p.ReorderLevel) AS MaxReorderLevel   FROM Products p   GROUP BY p.SupplierID   ORDER BY MaxReorderLevel DESC   LIMIT 8 ) t ON s.SupplierID = t.SupplierID ORDER BY t.MaxReorderLevel DESC;
SELECT c.CustomerName FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN OrderDetails od ON o.OrderID = od.OrderID WHERE Discount = 0 GROUP BY c.CustomerName ORDER BY MAX(od.UnitPrice * od.Quantity) DESC LIMIT 1;
SELECT SUM((p.UnitPrice * od.Quantity) * (1 - od.Discount)) AS TotalAmount FROM Orders o JOIN Customers c ON o.CustomerID = c.CustomerID JOIN Employees e ON o.EmployeeID = e.EmployeeID JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID WHERE e.FirstName = 'Nancy' AND e.LastName = 'Davolio' AND year(o.OrderDate) = 1996 AND month(o.OrderDate) = 12 AND od.Discount = 0;
SELECT SUM(UnitPrice * Quantity)  FROM OrderDetails  WHERE year(OrderDate) = 1997;
SELECT AVG(SUM(MULTIPLY(UnitPrice, Quantity, SUBTRACT(1, Discount)))) AS Average_Annual_Amount FROM OrderDetails JOIN Orders ON OrderDetails.OrderID = Orders.OrderID JOIN Products ON OrderDetails.ProductID = Products.ProductID WHERE Orders.OrderDate BETWEEN '1997-01-01' AND '1998-12-31';
SELECT COUNT(*)  FROM Orders  WHERE ShipCountry = 'Venezuela' AND YEAR(ShippedDate) = '1996';
Error: 第 6535 个样本有 0 个SQL。
SELECT o.OrderID, od.ProductID, p.Unit FROM Orders o JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID WHERE (od.Quantity * p.UnitPrice * (1 - ?)) > 15000;
Error: 第 6537 个样本有 0 个SQL。
SELECT s.SupplierName, s.HomePage FROM Suppliers s WHERE s.City = 'Sydney';
SELECT CONCAT(FirstName, ' ', LastName) AS Full_Name, DATEDIFF(CURRENT_DATE, BirthDate) AS Age_When_Hired FROM Employees WHERE Title = 'Vice President, Sales';
SELECT SupplierName  FROM Suppliers  WHERE Country = 'Germany';
SELECT Employees.FirstName, Employees.LastName,         YEAR(CURRENT_DATE) - YEAR(BirthDate) AS Age FROM Employees WHERE City = 'London';
Error: 第 6542 个样本有 0 个SQL。
SELECT FirstName + ' ' + LastName AS 'Full Name' FROM Employees WHERE Title = 'Sales Manager';
SELECT CustomerName, City FROM Customers WHERE Country = 'Canada';
SELECT P.ProductName, SUM((P.UnitsInStock + P.UnitsOnOrder) * P.Quantity) AS TotalProductionAmount FROM Products P WHERE P.Quantity >= 10 AND P.Quantity <= 500 GROUP BY P.ProductName;
SELECT p.ProductName, c.CategoryName FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE p.ReorderLevel = (SELECT MAX(ReorderLevel) FROM Products)
SELECT s.SupplierName, s.City, p.ProductName,         SUM(od.Quantity * p.Price) AS TotalProductionAmount FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN OrderDetails od ON p.ProductID = od.ProductID GROUP BY s.SupplierName, s.City, p.ProductName HAVING SUM(od.Quantity * p.Price) > 120;
SELECT c.ContactName, e.FirstName + ' ' + e.LastName AS Title, p.ProductName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Customers c ON o.CustomerID = c.CustomerID JOIN Employees e ON o.EmployeeID = e.EmployeeID WHERE s.SupplierName = 'Escargots Nouveaux';
SELECT c.CategoryID, c.Description, c.CategoryName FROM Categories c JOIN Employees e ON c.CategoryID = e.CategoryID WHERE e.FirstName = 'Margaret' AND e.LastName = 'Peacock';
Error: 第 6550 个样本有 0 个SQL。
SELECT p.ProductName FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID WHERE o.CustomerID IN (SELECT CustomerID FROM Customers WHERE CustomerName = 'WILMK') AND o.OrderDate <= '1998-03-26 00:00:00' AND od.OrderID IN (SELECT OrderID FROM Orders WHERE RequiredDate = '1998-03-26 00:00:00');
SELECT p.ProductID, p.ProductName FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE c.CategoryName = 'Meat/Poultry';
SELECT COUNT(*)  FROM Orders  WHERE CustomerID IN (   SELECT CustomerID    FROM Customers    WHERE Country = 'Ireland' )
SELECT p.ProductName FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID WHERE year(o.OrderDate) = 1996 AND Customers.Country = 'Norway';
Error: 第 6555 个样本有 0 个SQL。
SELECT      CONCAT(e.FirstName, ' ', e.LastName) AS Full_Name,     e.LastName AS Title,     -- assume 'Salary' is the same as 'AnnualSalary'     -- if there is no 'AnnualSalary' column, please provide the actual column name     -- for simplicity, I'll assume 'AnnualSalary' is the same as 'Unit'     e.Unit AS Salary,     COUNT(o.OrderID) AS Number_of_orders FROM      Employees e JOIN      Orders o ON e.EmployeeID = o.EmployeeID JOIN      Customers c ON o.CustomerID = c.CustomerID WHERE      c.Country = 'USA' ORDER BY      e.BirthDate ASC LIMIT 1;
SELECT c.CategoryID, c.Description FROM Categories c WHERE c.CategoryName IN (   SELECT p.CategoryName   FROM Products p   JOIN Orders o ON p.ProductID = o.OrderID   JOIN Customers c2 ON o.CustomerID = c2.CustomerID   WHERE c2.Country LIKE '%United States%' AND o.OrderDate LIKE '%2000%' )
SELECT AVG(od.Quantity * p.Price) AS AveragePayment FROM OrderDetails od JOIN Products p ON od.ProductID = p.ProductID JOIN Categories c ON p.CategoryID = c.CategoryID WHERE c.CategoryName = 'Confections';
SELECT SUM(p.UnitPrice * od.Quantity * (1 - o.Discount)) AS TotalPayment FROM Orders o JOIN Customers c ON o.CustomerID = c.CustomerID JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Products p ON od.ProductID = p.ProductID WHERE c.City = 'San Francisco';
SELECT p.ProductID, p.ProductName,         SUM(pd.Quantity * p.Unit) AS TotalProduction FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID JOIN Customers c ON s.Country = c.Country WHERE c.Country = 'Japan' GROUP BY p.ProductID, p.ProductName;
SELECT p.ProductName, c.CategoryName FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID JOIN Categories c ON p.CategoryID = c.CategoryID WHERE s.Country = 'Australia' AND p.Discontinued = 1
SELECT s.Country, MAX(od.OrderID) FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE p.ProductName = 'Ipoh Coffee' GROUP BY s.Country
SELECT      od.ProductID,      SUM(od.Quantity * p.UnitPrice * (1 - od.Quantity * p.UnitPrice)) AS TotalPayment FROM      OrderDetails od JOIN      Orders o ON od.OrderID = o.OrderID JOIN      Products p ON od.ProductID = p.ProductID WHERE      o.OrderID = 10979 GROUP BY      od.ProductID;
SELECT s.ContactName, s.SupplierName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN Categories c ON p.CategoryID = c.CategoryID WHERE c.CategoryName = 'Grains/Cereals' AND s.SupplierID BETWEEN 1 AND 10;
SELECT s.Phone, COUNT(o.OrderID) FROM Orders o JOIN Employees e ON o.EmployeeID = e.EmployeeID JOIN Shippers s ON o.ShipperID = s.ShipperID WHERE e.FirstName || ' ' || e.LastName = 'Speedy Express' AND o.OrderDate = '1998-01-30';
SELECT TOP 1      p.ProductName,      p.OrderDate,      DATEDIFF(p.OrderDate, o.RequiredDate) AS OverdueDays FROM      Products p INNER JOIN      OrderDetails od ON p.ProductID = od.ProductID INNER JOIN      Orders o ON od.OrderID = o.OrderID WHERE      DATEDIFF(p.OrderDate, o.RequiredDate) < 0 ORDER BY      DATEDIFF(p.OrderDate, o.RequiredDate) ASC
SELECT p.ProductName FROM Products p JOIN Orders o ON p.ProductID = o.OrderID JOIN Employees e ON o.EmployeeID = e.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID JOIN Shippers s ON o.ShipperID = s.ShipperID WHERE c.Country = 'Mexico' AND YEAR(o.OrderDate) = 1996 AND e.Title = 'Inside Sales Coordinator'
SELECT c.CategoryName FROM Categories c JOIN Products p ON c.CategoryID = p.CategoryID JOIN (   SELECT CategoryID, MAX(Quantity) AS max_quantity   FROM OrderDetails   GROUP BY CategoryID ) od ON c.CategoryID = od.CategoryID WHERE c.CategoryName LIKE '%dairy%' AND od.max_quantity = (   SELECT MAX(Quantity)   FROM OrderDetails )
SELECT SUM(UnitsInStock + UnitsOnOrder) AS ProductionVolume FROM Products WHERE ProductName = 'Mascarpone Fabioli';
SELECT      p.ProductName,      c.CategoryName FROM      Products p INNER JOIN      Categories c ON p.CategoryID = c.CategoryID WHERE      p.ProductName IN (         SELECT              ProductName         FROM              Products         ORDER BY              UnitPrice DESC LIMIT 1     ) UNION ALL SELECT      p.ProductName,      c.CategoryName FROM      Products p INNER JOIN      Categories c ON p.CategoryID = c.CategoryID WHERE      p.ProductName IN (         SELECT              ProductName         FROM              Products         ORDER BY              UnitPrice ASC LIMIT 1     );
SELECT c.CustomerName FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN (   SELECT OrderID, SUM(p.UnitPrice * od.Quantity * (1 - od.Discount)) AS value   FROM OrderDetails od   JOIN Products p ON od.ProductID = p.ProductID   GROUP BY OrderID   ORDER BY value DESC   LIMIT 1 ) max_order ON o.OrderID = max_order.OrderID
SELECT COUNT(*)  FROM Employees  WHERE LastName LIKE '%';
SELECT AVG(DIVIDE(SUM(UnitPrice * Quantity * SUBTRACT(1, Discount)), COUNT(OrderID))) FROM OrderDetails JOIN Orders ON OrderDetails.OrderID = Orders.OrderID JOIN Products ON OrderDetails.ProductID = Products.ProductID
SELECT (COUNT(DISTINCT p.ProductID) - COUNT(DISTINCT p.ProductID)) * 100.0 / COUNT(DISTINCT p.ProductID) AS Percentage_Discontinued FROM Products p WHERE p.Discontinued = 1;
SELECT CONCAT(FirstName, ' ', LastName) AS Full_Name FROM Employees WHERE EmployeeID IN (     SELECT EmployeeID     FROM Orders     WHERE OrderID = 10274 )
SELECT COUNT(*)  FROM Orders  WHERE CustomerID IN (SELECT CustomerID FROM Customers WHERE CustomerName = 'GROSELLA-Restaurante');
SELECT p.ProductName, od.Quantity FROM OrderDetails od JOIN Orders o ON od.OrderID = o.OrderID JOIN Employees e ON o.EmployeeID = e.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID WHERE c.Country = 'Spain' AND e.FirstName = 'Nancy' AND e.LastName = 'Davolio';
SELECT      COUNT(o.OrderID) AS TotalOrders,     AVG(d.UnitPrice * d.Quantity * (1 - od.Discount)) AS AverageOrderValue FROM      Orders o     INNER JOIN Customers c ON o.CustomerID = c.CustomerID     INNER JOIN OrderDetails d ON o.OrderID = d.OrderID     INNER JOIN OrderDetails od ON o.OrderID = od.OrderID WHERE      c.CustomerName = 'Laughing Bacchus Wine Cellars';
Error: 第 6579 个样本有 0 个SQL。
SELECT MAX(Salary) AS MaxSalary, MIN(Salary) AS MinSalary FROM Employees WHERE Title = 'Sales Representative';
SELECT COUNT(*) FROM Suppliers WHERE Country = 'USA';
SELECT ProductName FROM Products WHERE Discontinued = 1;
SELECT e.FirstName, e.LastName FROM Employees e JOIN Customers c ON e.EmployeeID = c.CustomerID WHERE c.CustomerName = 'Eastern Connection' AND e.ContactTitle = 'Sales Agent';
SELECT COUNT(DISTINCT ShipperID) FROM Shippers;
SELECT    DIVIDE(SUM(CASE WHEN o.ShipCountry = 'Austria' THEN 1 ELSE 0 END), COUNT(o.OrderID)) * 100 FROM    Orders o   JOIN Employees e ON o.EmployeeID = e.EmployeeID   JOIN Customers c ON o.CustomerID = c.CustomerID WHERE    e.FirstName = 'Andrew' AND e.LastName = 'Fuller';
SELECT Description FROM Categories WHERE CategoryName IN (   SELECT CategoryName   FROM Categories   WHERE Description LIKE '%soft drinks%' OR         Description LIKE '%coffees%' OR         Description LIKE '%teas%' OR         Description LIKE '%beers%' OR         Description LIKE '%ales%' );
SELECT Phone FROM Suppliers WHERE SupplierName = 'Around the Horn';
SELECT Phone FROM Suppliers WHERE SupplierName = 'Blondesddsl pre et fils' AND City = 'Strasbourg';
Error: 第 6589 个样本有 0 个SQL。
SELECT c.Address FROM Employees e JOIN Customers c ON e.FirstName + ' ' + e.LastName = c.ContactName WHERE e.FirstName = 'Ann' AND e.LastName = 'Devon' AND c.CustomerName = 'Eastern Connection';
SELECT s.SupplierName FROM Suppliers s WHERE s.Country = 'France';
Error: 第 6592 个样本有 0 个SQL。
SELECT s.SupplierName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.UnitPrice = (SELECT MAX(UnitPrice) FROM Products)
SELECT c.CustomerName FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN Products p ON o.OrderID = (SELECT OrderID FROM OrderDetails WHERE ProductID = p.ProductID) WHERE c.City = 'London' GROUP BY c.CustomerName ORDER BY COUNT(p.ProductID) DESC LIMIT 1;
SELECT p.ProductName FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'Exotic Liquids' ORDER BY p.ReorderLevel DESC LIMIT 1;
SELECT c.CategoryName FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE p.ProductName = 'Chef Anton''s Gumbo Mix' AND p.SupplierID IN (   SELECT s.SupplierID   FROM Suppliers s   JOIN Customers c2 ON s.SupplierID = c2.CustomerID   WHERE c2.CompanyName = 'New Orleans Cajun Delights' );
SELECT Country FROM Suppliers JOIN Products ON Suppliers.SupplierID = Products.SupplierID JOIN Categories ON Products.CategoryID = Categories.CategoryID WHERE Suppliers.SupplierName = 'Leka Trading' AND Categories.CategoryName IN (   SELECT CategoryName   FROM Categories   WHERE ProductName = 'Ipoh Coffee' )
SELECT c.CategoryName FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE p.Unit = (SELECT MAX(Unit) FROM Products);
SELECT    (SELECT UnitPrice FROM Products WHERE ProductName = 'Chef Anton''s Cajun Seasoning' AND SupplierID IN (SELECT SupplierID FROM Suppliers WHERE CompanyName = 'New Orleans Cajun Delights'))    - (SELECT UnitPrice FROM Products WHERE ProductName = 'Chef Anton''s Gumbo Mix' AND SupplierID IN (SELECT SupplierID FROM Suppliers WHERE CompanyName = 'New Orleans Cajun Delights'))
SELECT p.ProductName FROM Products p WHERE p.SupplierID IN (   SELECT s.SupplierID   FROM Suppliers s   WHERE s.SupplierName = 'Cooperativa de Quesos ''Las Cabras''' ) AND p.UnitPrice > 20;
SELECT p.ProductName FROM Products p JOIN Orders o ON p.ProductID = o.OrderID JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Customers c ON o.CustomerID = c.CustomerID WHERE c.Country = 'Japan' AND od.Quantity > 40;
SELECT c.CategoryName FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE p.ProductName IN (   SELECT p.ProductName   FROM Products p   JOIN Suppliers s ON p.SupplierID = s.SupplierID   WHERE s.SupplierName = 'Exotic Liquids' ) AND p.UnitsInStock > 100;
SELECT COUNT(DISTINCT p.ProductName) AS ProductCount FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID WHERE od.Quantity < 50  SELECT DIVIDE(SUM(CASE WHEN od.Quantity < 50 THEN 1 ELSE 0 END), SUM(p.ProductID)) * 100 AS Percentage FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID
SELECT      (SUM(OD.Quantity)       WHERE OD.ProductID IN (SELECT ProductID FROM Products WHERE ProductName = 'Geitost'))      / (SELECT COUNT(*) FROM OrderDetails) * 100 AS Percentage
SELECT e.EmployeeID, e.FirstName, e.LastName, e.Photo FROM Employees e WHERE e.FirstName = 'Robert' AND e.LastName = 'King';
SELECT ShipperName, Phone FROM Shippers WHERE Phone = '(503) 555-9931';
SELECT Address, Phone FROM Employees WHERE FirstName = 'Margaret' AND LastName = 'Peacock';
SELECT ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry FROM Orders, Customers WHERE Orders.CustomerID = Customers.CustomerID AND ShipName = 'Rattlesnake Canyon Grocery';
SELECT ProductName  FROM Products  WHERE CategoryID IN (     SELECT CategoryID      FROM Categories      WHERE CategoryName = 'Confections' )
SELECT s.SupplierName, s.ContactName FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.ProductName = 'Sir Rodney''s Marmalade';
SELECT FirstName + ' ' + LastName AS Fullname FROM Employees WHERE EmployeeID IN (   SELECT EmployeeID   FROM Orders   WHERE CustomerID IN (     SELECT CustomerID     FROM Customers     WHERE Address LIKE '%Denver%'   ) )
SELECT TerritoryDescription FROM Employees E JOIN Customers C ON E.FirstName = 'Laura' AND E.LastName = 'Callahan' AND E.CustomerID = C.CustomerID
SELECT COUNT(*)  FROM Orders  WHERE ShipperID IN (SELECT ShipperID FROM Shippers WHERE ShipperName = 'Federal Shipping');
SELECT p.ProductName FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.Country = 'Finland';
SELECT c.CategoryName, c.Description FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE p.ProductName = 'Mozzarella di Giovanni';
SELECT SupplierName  FROM Suppliers  WHERE SupplierID IN (     SELECT SupplierID      FROM Products      WHERE CategoryID IN (         SELECT CategoryID          FROM Categories          WHERE Description = 'cheeses'     ) );
SELECT products.ProductName FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE suppliers.SupplierName = 'Zaanse Snoepfabriek';
SELECT p.ProductName, p.UnitPrice FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE s.SupplierName = 'Plutzer Lebensmittelgromrkte AG' AND p.Discontinued = 1;
SELECT DISTINCT City FROM Orders JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID JOIN Customers ON Orders.CustomerID = Customers.CustomerID JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID JOIN Products ON OrderDetails.ProductID = Products.ProductID WHERE Products.ProductName = 'Mishi Kobe Niku';
SELECT DIVIDE(SUM(CASE WHEN Shippers.ShipperName = 'Speedy Express' AND Orders.ShipCountry = 'Sweden' THEN 1 ELSE 0 END), SUM(1)) * 100 AS Percentage FROM Orders JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID
SELECT COUNT(*)  FROM Customers  WHERE Country IN (   SELECT Country    FROM Customers    WHERE RegionID = 1 );
SELECT c.CategoryName, COUNT(*) AS TotalTerritories FROM Categories c GROUP BY c.CategoryName;
Error: 第 6623 个样本有 0 个SQL。
SELECT ContactName FROM Customers WHERE City = 'Tokyo' AND CustomerName = 'Tokyo Traders';
SELECT COUNT(*) FROM Employees WHERE Country = 'USA' AND LastName IN (SELECT FirstName FROM Employees WHERE Title = 'Sales Representative');
SELECT MAX(e.BirthDate) AS highest_salary, e.FirstName, e.LastName FROM Employees e ORDER BY e.BirthDate DESC LIMIT 1;
SELECT COUNT(*)  FROM Products  WHERE SupplierID IN (SELECT SupplierID FROM Suppliers WHERE SupplierName = 'Plutzer Lebensmittelgromrkte AG')  AND UnitsInStock = 0  AND UnitsOnOrder > 0;
SELECT p.ProductName, p.UnitPrice, SUM(od.Quantity) AS TotalQuantity FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID GROUP BY p.ProductName, p.UnitPrice ORDER BY p.UnitPrice DESC LIMIT 1;
SELECT e.FirstName, e.LastName, 'Sales Representative' AS Title FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, e.FirstName, e.LastName ORDER BY COUNT(o.OrderID) ASC LIMIT 1;
SELECT p.ProductID, p.ProductName, COUNT(od.ProductID) as Count FROM OrderDetails od JOIN Orders o ON od.OrderID = o.OrderID JOIN Customers c ON o.CustomerID = c.CustomerID JOIN Products p ON od.ProductID = p.ProductID WHERE c.Country = 'Germany' GROUP BY p.ProductID, p.ProductName ORDER BY Count DESC LIMIT 1;
SELECT SUM(MULTIPLY(UnitPrice, Quantity))  FROM OrderDetails  JOIN Orders ON OrderDetails.OrderID = Orders.OrderID  JOIN Customers ON Orders.CustomerID = Customers.CustomerID  JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID  WHERE Customers.Country = 'Brazil'    AND Shippers.ShipperName = 'Speedy Express';
SELECT COUNT(*) AS NumOfSubordinates,         (SELECT MAX(Quantity * p.UnitPrice)          FROM OrderDetails od          JOIN Products p ON od.ProductID = p.ProductID          WHERE od.OrderID IN (           SELECT OrderID            FROM Orders            WHERE EmployeeID IN (             SELECT EmployeeID              FROM Employees              WHERE ReportsTo = 2           )         )        ) AS BiggestOrderValue
SELECT      e.FirstName,      e.LastName,      SUM(od.Quantity * p.UnitPrice) AS TotalSales FROM      Employees e JOIN      Orders o ON e.EmployeeID = o.EmployeeID JOIN      OrderDetails od ON o.OrderID = od.OrderID JOIN      Products p ON od.ProductID = p.ProductID WHERE      e.Title = 'Sales Representative' GROUP BY      e.FirstName,      e.LastName ORDER BY      TotalSales DESC;
SELECT COUNT(DISTINCT Employees.FirstName)  FROM Employees  WHERE Country = 'UK';
SELECT c.CustomerName, o.ShipCountry FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID JOIN OrderDetails od ON o.OrderID = od.OrderID WHERE od.OrderID = (   SELECT od2.OrderID   FROM OrderDetails od2   GROUP BY od2.OrderID   ORDER BY SUM(od2.Quantity) DESC   LIMIT 1 )
SELECT c.CustomerName, c.CategoryName FROM (   SELECT c.CustomerID, c.CustomerName, COUNT(c.CustomerID) AS Count, p.CategoryID, p.CategoryName   FROM Customers c   JOIN Orders o ON c.CustomerID = o.CustomerID   JOIN OrderDetails od ON o.OrderID = od.OrderID   JOIN Products p ON od.ProductID = p.ProductID   GROUP BY c.CustomerID, p.CategoryID ) AS temp WHERE Count = (SELECT MAX(Count) FROM (   SELECT COUNT(CustomerID) AS Count   FROM Customers c   JOIN Orders o ON c.CustomerID = o.CustomerID   GROUP BY c.CustomerID ) AS temp) ORDER BY Count DESC;
SELECT p.ProductID, p.ProductName, SUM(p.Quantity * p.UnitPrice) AS TotalSales FROM Products p JOIN Categories c ON p.CategoryID = c.CategoryID WHERE c.CategoryName = 'Confections' GROUP BY p.ProductID, p.ProductName ORDER BY SUM(p.Quantity * p.UnitPrice) DESC LIMIT 1;
SELECT ProductName FROM Products WHERE ProductID = 77;
SELECT SupplierName  FROM Suppliers  WHERE Country = 'USA';
SELECT e.LastName + ', ' + e.FirstName AS 'Position Title' FROM Employees e WHERE e.FirstName = 'Laura' AND e.LastName = 'Callahan';
SELECT e.FirstName FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID WHERE c.CompanyName = 'Victuailles en stock';
SELECT COUNT(*)  FROM Orders  WHERE ShipperID IN (SELECT ShipperID FROM Shippers WHERE ShipperName = 'Federal Shipping');
SELECT E.FirstName, E.LastName FROM Employees E JOIN Orders O ON E.EmployeeID = O.EmployeeID JOIN Customers C ON O.CustomerID = C.CustomerID WHERE C.Address LIKE '%Morristown%' OR C.City = 'Morristown';
SELECT TerritoryDescription FROM [YourTable] WHERE RegionDescription = 'Northern';
SELECT o.OrderID FROM Orders o JOIN Employees e ON o.EmployeeID = e.EmployeeID WHERE e.FirstName = 'Michael' AND e.LastName = 'Suyama';
SELECT      (SELECT COUNT(*) FROM Territories WHERE RegionID = 3) /      (SELECT COUNT(*) FROM Territories WHERE RegionID = 2) AS Ratio
SELECT EmployeeID FROM Employees WHERE TerritoryID BETWEEN 1000 AND 2000;
SELECT c.Country, c.Country FROM Customers c WHERE c.ContactName = 'Nancy Davolio'
Error: 第 6649 个样本有 0 个SQL。
SELECT SUM(p.Unit * od.Quantity * (1 - o.Discount))  FROM Products p  JOIN OrderDetails od ON p.ProductID = od.ProductID  JOIN Orders o ON od.OrderID = o.OrderID  WHERE p.ProductName = 'Vegie-spread';
SELECT Suppliers.SupplierName FROM Suppliers JOIN Products ON Suppliers.SupplierID = Products.SupplierID JOIN OrderDetails ON Products.ProductID = OrderDetails.ProductID JOIN Orders ON OrderDetails.OrderID = Orders.OrderID WHERE Orders.OrderDate = '8/14/1996'
SELECT p.ProductName, s.CompanyName FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID WHERE p.ProductID IN (     SELECT od.ProductID     FROM OrderDetails od     WHERE od.OrderID = 10337 ) AND p.ReorderLevel = (     SELECT MAX(od.ReorderLevel)     FROM OrderDetails od     WHERE od.OrderID = 10337 )
SELECT s.ShipperName FROM Shippers s JOIN Orders o ON s.ShipperID = o.ShipperID WHERE o.OrderDate BETWEEN '1998/01/01' AND '1998/03/31' GROUP BY s.ShipperName ORDER BY COUNT(o.OrderID) DESC LIMIT 1;
SELECT COUNT(*)  FROM Customers  WHERE City = 'London';
SELECT FirstName + ' ' + LastName AS Title FROM Employees WHERE LastName = 'Suyama' AND FirstName = 'Michael';
SELECT CONCAT(FirstName, ' ', LastName) AS FullName FROM Employees WHERE BirthDate = '1955-03-04 00:00:00';
SELECT FirstName FROM Employees WHERE EmployeeID IN (     SELECT EmployeeID     FROM Orders     WHERE OrderID = 10250 )
Error: 第 6658 个样本有 0 个SQL。
SELECT Country FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID = 10257;
SELECT FirstName + ' ' + LastName AS Title FROM Employees WHERE EmployeeID IN (     SELECT EmployeeID     FROM Orders     WHERE OrderID = 10270 )
Error: 第 6661 个样本有 0 个SQL。
Error: 第 6662 个样本有 0 个SQL。
SELECT e.LastName, e.FirstName, MAX(e.BirthDate) AS HighestSalary, AVG(e.BirthDate) AS AverageSalary FROM Employees e JOIN Orders o ON e.EmployeeID = o.EmployeeID JOIN Customers c ON o.CustomerID = c.CustomerID WHERE c.Country = 'Brazil' GROUP BY e.LastName, e.FirstName
SELECT      (SUM(e.Salary) * 100 / (SELECT SUM(Salary) FROM Employees)) AS PercentageSalary FROM      Employees e JOIN      Orders o ON e.EmployeeID = o.EmployeeID JOIN      OrdersDetails od ON o.OrderID = od.OrderID WHERE      o.OrderDate LIKE '1996%';
Error: 第 6665 个样本有 0 个SQL。
Error: 第 6666 个样本有 0 个SQL。
Error: 第 6667 个样本有 0 个SQL。
SELECT ShipperName FROM Orders WHERE OrderID = 10260
Error: 第 6669 个样本有 0 个SQL。
SELECT s.Phone FROM Orders o JOIN Shippers s ON o.ShipperID = s.ShipperID WHERE o.OrderID = 10296;
SELECT COUNT(DISTINCT l_partkey) FROM lineitem WHERE l_orderkey = 5 AND l_returnflag = 'R';
SELECT MAX(l_shipdate) FROM lineitem WHERE l_orderkey = 1;
SELECT o_orderkey FROM orders WHERE o_orderkey IN (4, 36) ORDER BY o_orderdate LIMIT 1;
SELECT o_comment FROM orders WHERE o_orderkey = (SELECT o_orderkey                      FROM orders                      WHERE o_totalprice = (SELECT MAX(o_totalprice) FROM orders));
SELECT c_phone FROM customer WHERE c_name = 'Customer#000000001';
SELECT COUNT(o_orderkey) FROM orders o, customer c WHERE o.o_custkey = c.c_custkey AND c.c_mktsegment = 'HOUSEHOLD';
SELECT MAX(o_totalprice) FROM orders WHERE o_custkey IN (SELECT c_custkey FROM customer WHERE c_mktsegment = 'HOUSEHOLD');
Error: 第 6678 个样本有 0 个SQL。
SELECT c_name FROM customer c, orders o WHERE c.c_custkey = o.o_custkey ORDER BY o.o_totalprice DESC LIMIT 1;
SELECT o_orderkey FROM orders o, customer c WHERE o.o_custkey = c.c_custkey AND c.c_acctbal < 0;
SELECT COUNT(*) FROM orders o, customer c WHERE o.o_orderkey = c.c_custkey AND c.c_mktsegment = 'HOUSEHOLD' AND o.o_orderpriority = '1-URGENT';
SELECT COUNT(*) FROM customer WHERE c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'BRAZIL' );
SELECT c_phone FROM customer WHERE c_mktsegment = 'HOUSEHOLD' AND c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'BRAZIL' );
SELECT COUNT(*) FROM customer WHERE c_nationkey IN (SELECT n_nationkey FROM nation WHERE n_name = 'GERMANY') AND c_acctbal > 1000;
Error: 第 6685 个样本有 0 个SQL。
SELECT SUM(o_totalprice) FROM orders WHERE o_custkey IN (   SELECT c_custkey   FROM customer   WHERE c_nationkey IN (     SELECT n_nationkey     FROM nation     WHERE n_name = 'GERMANY'   ) );
SELECT o_orderkey FROM orders o JOIN customer c ON o.o_custkey = c.c_custkey JOIN nation n ON c.c_nationkey = n.n_nationkey WHERE n.n_name = 'GERMANY' ORDER BY MIN(o_orderdate) LIMIT 1;
SELECT    DIVIDE(SUM(o_totalprice), COUNT(o_orderkey)) FROM    orders o   JOIN customer c ON o.o_custkey = c.c_custkey   JOIN nation n ON c.c_nationkey = n.n_nationkey WHERE    n.n_name = 'GERMANY';
SELECT    DIVIDE(COUNT(c_custkey WHEN n_name = 'GERMANY'), COUNT(c_custkey)) AS percentage FROM    customer c    JOIN nation n ON c.c_nationkey = n.n_nationkey WHERE    n_name = 'GERMANY';
SELECT COUNT(DISTINCT n_name) FROM nation WHERE n_regionkey = 2;
SELECT n_name FROM nation WHERE n_nationkey = (   SELECT s_nationkey   FROM supplier   WHERE s_suppkey = 34 );
SELECT r_name FROM region, nation, supplier WHERE r_regionkey = n_regionkey AND n_nationkey = s_nationkey AND s_name = 'Supplier#000000129';
SELECT n_name FROM customer JOIN nation ON customer.c_nationkey = nation.n_nationkey WHERE c_name = 'Customer#000000055';
SELECT r_name FROM customer c JOIN nation n ON c.c_nationkey = n.n_nationkey JOIN region r ON n.n_regionkey = r.r_regionkey WHERE c.c_custkey = 106936;
Error: 第 6695 个样本有 0 个SQL。
SELECT MULTIPLY(l_extendedprice, SUBTRACT(1, l_discount)) FROM lineitem l, orders o, supplier s WHERE o_totalprice = 231499.38 AND l_suppkey = 9397 AND l_suppkey = s_suppkey AND o_orderkey = l_orderkey;
SELECT l_suppkey FROM lineitem WHERE l_orderkey IN (   SELECT o_orderkey   FROM orders   WHERE o_totalprice = 218195.43 ) AND l_returnflag = 'R';
SELECT MULTIPLY(MULTIPLY(l_extendedprice, SUBTRACT(1, l_discount)), SUM(1, l_tax)) FROM lineitem l, orders o WHERE o_clerk = 'Clerk#000000936' AND o_orderstatus = '4-NOT SPECIFIED' AND o_orderdate = '1995-03-13' AND l_orderkey = o_orderkey AND l_shipmode = 'TRUCK';
SELECT l_shipdate FROM lineitem WHERE l_orderkey IN (   SELECT o_orderkey   FROM orders   WHERE o_custkey = 129301 AND o_orderdate = '1996-07-27' ) ORDER BY l_linenumber LIMIT 1;
Error: 第 6700 个样本有 0 个SQL。
SELECT SUBTRACT(MULTIPLY(l_extendedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))) FROM lineitem, partsupp, orders WHERE l_suppkey = 7414 AND l_orderkey = 817154;
SELECT n_name FROM nation, supplier WHERE n_nationkey = s_nationkey AND s_acctbal < 0 GROUP BY n_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT    DIVIDE(COUNT(n_name), (SELECT COUNT(*) FROM nation n WHERE r_name = 'EUROPE')) as percentage FROM    nation n, region r WHERE    n_regionkey = r_regionkey AND r_name = 'EUROPE';
SELECT      DIVIDE(COUNT(s.s_suppkey),             (SELECT COUNT(s_suppkey) FROM supplier WHERE s_nationkey = (SELECT n_nationkey FROM nation WHERE n_name = 'JAPAN'))) as percentage FROM      supplier s, nation n WHERE      s.s_nationkey = n.n_nationkey AND s.s_acctbal < 0 AND n.n_name = 'JAPAN';
SELECT c_name FROM customer WHERE c_acctbal = (SELECT MIN(c_acctbal) FROM customer);
SELECT COUNT(*) FROM lineitem WHERE year(l_shipdate) = 1998;
SELECT COUNT(*) FROM customer WHERE c_acctbal < 0;
Error: 第 6708 个样本有 0 个SQL。
Error: 第 6709 个样本有 0 个SQL。
SELECT l_orderkey FROM lineitem ORDER BY l_extendedprice DESC LIMIT 2;
SELECT MAX(o_orderdate) AS highest_order_date FROM orders WHERE o_orderkey IN (   SELECT o_orderkey   FROM orders   ORDER BY o_totalprice DESC   LIMIT 1 );
SELECT n_name FROM nation, customer WHERE n_nationkey = c_nationkey GROUP BY n_name ORDER BY COUNT(c_custkey) DESC LIMIT 1;
SELECT COUNT(*) FROM orders o, lineitem l WHERE o_orderpriority = '1-URGENT' AND o_orderkey = l_orderkey AND DATEDIFF(l_shipdate, o_orderdate) = 1;
SELECT COUNT(*) FROM customer WHERE c_mktsegment = 'HOUSEHOLD' AND c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'RUSSIA' ) AND c_custkey IN (   SELECT c_custkey   FROM customer   WHERE c_acctbal < 0 );
SELECT COUNT(*) FROM supplier WHERE s_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'JAPAN' )
SELECT COUNT(*) FROM orders WHERE o_orderkey IN (   SELECT l_orderkey   FROM lineitem   WHERE l_shipmode = 'SHIP' ) AND o_orderpriority = '3-MEDIUM';
SELECT c_mktsegment, COUNT(c_custkey) as max_customers FROM customer JOIN nation ON c_nationkey = n_nationkey WHERE n_name = 'UNITED STATES' GROUP BY c_mktsegment ORDER BY max_customers DESC LIMIT 1;
Error: 第 6718 个样本有 0 个SQL。
Error: 第 6719 个样本有 0 个SQL。
SELECT COUNT(DISTINCT n_nationkey)  FROM nation n, region r  WHERE n_regionkey = r_regionkey AND r_comment = 'asymptotes sublate after the r';
Error: 第 6721 个样本有 0 个SQL。
SELECT SUBTRACT(MULTIPLY(l_extendedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))) FROM lineitem, partsupp, part WHERE p_name = 'smoke turquoise purple blue salmon' AND l_receiptdate = '1996-05-07' AND l_shipinstruct = 'DELIVER IN PERSON' AND l_partkey = ps_partkey AND ps_partkey = p_partkey;
SELECT AVG(l_extendedprice * (1 - l_discount))  FROM lineitem  WHERE l_orderkey IN (   SELECT o_orderkey    FROM orders    ORDER BY o_totalprice DESC    LIMIT 10 );
SELECT c_name, COUNT(o_orderkey) AS total_orders, SUM(o_totalprice) AS total_price, AVG(o_totalprice) AS avg_price_per_order FROM customer c JOIN orders o ON c.c_custkey = o.o_custkey GROUP BY c.c_name ORDER BY total_orders DESC LIMIT 3;
SELECT COUNT(l_linenumber) FROM lineitem WHERE l_shipdate = '1993-12-04';
SELECT o_orderdate FROM orders WHERE o_orderkey IN (   SELECT o_orderkey   FROM orders   ORDER BY o_totalprice DESC   LIMIT 1 );
SELECT DIVIDE(COUNT(c_custkey), (SELECT COUNT(c_custkey) FROM customer WHERE c_acctbal < 0)) as percentage
SELECT COUNT(*) FROM partsupp WHERE ps_partkey IN (SELECT p_partkey FROM part) AND ps_availqty < 10;
SELECT DIVIDE(COUNT(p_partkey), (SELECT COUNT(p_partkey) FROM part WHERE p_mfgr = 'Manufacturer#3')) as percentage FROM part WHERE p_mfgr = 'Manufacturer#3';
SELECT p_name FROM part WHERE p_type = 'MEDIUM PLATED BRASS' LIMIT 5;
SELECT COUNT(*) FROM orders o, lineitem l WHERE o.o_orderkey = l.l_orderkey AND l.l_shipdate LIKE '1998-11-%' AND l.l_shipmode = 'AIR' AND o.o_orderpriority = '1-URGENT';
SELECT COUNT(*) FROM customer WHERE c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'INDIA' );
SELECT COUNT(*) FROM customer WHERE c_nationkey IN (SELECT n_nationkey                        FROM nation                        WHERE n_name = 'MOROCCO')   AND c_acctbal < 0;
SELECT n_nationkey, n_name FROM nation WHERE n_regionkey IN (   SELECT r_regionkey   FROM region   WHERE r_name = 'Africa' );
SELECT SUM(o_totalprice)  FROM orders  WHERE o_custkey = (SELECT c_custkey                      FROM customer                      WHERE c_name = 'Customer#000000013');
SELECT SUM(MULTIPLY(MULTIPLY(l_extendedprice, SUBTRACT(1, l_discount)), SUM(1, l_tax))) FROM lineitem WHERE l_orderkey IN (   SELECT o_orderkey   FROM orders   WHERE o_custkey IN (     SELECT c_custkey     FROM customer     WHERE c_name = 'Customer#000021159'   ) )
SELECT SUM(SUBTRACT(MULTIPLY(l_extendedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))))  FROM lineitem, partsupp, parts  WHERE l_partkey = ps_partkey AND ps_partkey = p_partkey AND p_name = 'chocolate floral blue coral cyan';
SELECT    DIVIDE(COUNT(s_suppkey WHERE n_name = 'GERMANY'), COUNT(s_suppkey)) AS percentage FROM    supplier s   JOIN nation n ON s.s_nationkey = n.n_nationkey WHERE    n.n_name = 'GERMANY';
SELECT s_name FROM supplier WHERE s_name = 'smoke red pale saddle plum';
Error: 第 6740 个样本有 0 个SQL。
Error: 第 6741 个样本有 0 个SQL。
SELECT p_name FROM partsupp JOIN part ON partsupp.ps_partkey = part.p_partkey WHERE partsupp.ps_suppkey IN (   SELECT s_suppkey   FROM supplier   WHERE s_name = 'Supplier#000000018' ) AND partsupp.ps_supplycost > 900;
Error: 第 6743 个样本有 0 个SQL。
Error: 第 6744 个样本有 0 个SQL。
SELECT COUNT(*) FROM customer WHERE c_mktsegment = 'FURNITURE' AND c_nationkey = 1;
SELECT c_phone FROM customer WHERE c_acctbal = (SELECT MAX(c_acctbal) FROM customer);
SELECT o_orderpriority FROM orders WHERE o_orderkey = (SELECT o_orderkey                      FROM orders                      ORDER BY o_totalprice DESC                      LIMIT 1);
SELECT COUNT(*) FROM orders WHERE o_custkey IN (   SELECT c_custkey   FROM customer   WHERE c_nationkey IN (     SELECT n_nationkey     FROM nation     WHERE n_name = 'UNITED STATES'   ) )
SELECT COUNT(*) FROM customer WHERE c_nationkey IN (SELECT n_nationkey                        FROM nation                        WHERE n_name = 'BRAZIL')   AND c_mktsegment = 'automobile';
SELECT o_comment FROM orders WHERE o_custkey IN (   SELECT c_custkey   FROM customer   WHERE c_mktsegment = 'Furniture' )
SELECT n_name FROM nation n, region r WHERE n_regionkey = r_regionkey AND r_name = 'ASIA';
SELECT n_name FROM nation WHERE n_regionkey IN (   SELECT r_regionkey   FROM region   WHERE r_comment = 'furiously express accounts wake sly' )
SELECT COUNT(*) FROM supplier WHERE s_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'GERMANY' )
SELECT COUNT(*) FROM customer WHERE c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'ASIA' ) AND c_acctbal < 0;
SELECT c_phone FROM customer, orders WHERE c_custkey = o_custkey ORDER BY o_totalprice DESC LIMIT 1;
SELECT COUNT(*) FROM lineitem l, part p WHERE l_partkey = p_partkey AND p_retailprice > 1000 AND l_shipmode = 'SHIP';
SELECT c_name, c_mktsegment FROM customer, orders WHERE o_custkey = c_custkey AND o_totalprice = 199180.63;
Error: 第 6758 个样本有 0 个SQL。
SELECT COUNT(*) FROM customer WHERE c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'BRAZIL' ) AND c_acctbal < 1000;
SELECT n_name FROM customer JOIN nation ON customer.c_nationkey = nation.n_nationkey WHERE c_mktsegment = 'BUILDING' AND c_acctbal > (SELECT AVG(c_acctbal) FROM customer) * 0.8;
SELECT DIVIDE(COUNT(c_custkey)                WHERE n_name = 'United States'                AND c_acctbal < 4000,                COUNT(c_custkey)                WHERE c_acctbal < 4000)  AS percentage
SELECT c_name, c_phone FROM customer WHERE c_acctbal > 9000;
SELECT AVG(l_linenumber)  FROM lineitem  WHERE l_shipdate BETWEEN '1994-04-01' AND '1994-04-30';
Error: 第 6764 个样本有 0 个SQL。
SELECT p_partkey FROM part WHERE p_retailprice > (SELECT AVG(p_retailprice) FROM part);
SELECT DIVIDE(COUNT(ps_suppkey), COUNT(ps_suppkey)) * 100 AS percentage FROM partsupp WHERE ps_supplycost > 500;
SELECT s_suppkey, s_acctbal FROM supplier ORDER BY s_acctbal DESC LIMIT 10;
SELECT COUNT(*) FROM customer c JOIN orders o ON c.c_custkey = o.o_custkey WHERE c.c_acctbal > 0 AND o.o_orderpriority = '1-URGENT';
SELECT c_name, c_phone FROM customer WHERE c_nationkey = (SELECT n_nationkey FROM nation WHERE n_name = 'INDIA') AND c_acctbal > (SELECT AVG(c_acctbal) FROM customer);
SELECT ps_partkey, p_name, MAX(ps_supplycost) AS max_supplycost FROM partsupp, part WHERE ps_partkey = p_partkey AND ps_suppkey IN (   SELECT s_suppkey   FROM supplier   WHERE s_name = 'Supplier#000000654' ) GROUP BY ps_partkey, p_name ORDER BY max_supplycost DESC LIMIT 5;
SELECT      DIVIDE(COUNT(c_name), COUNT(c_name)) * 100 as percentage FROM      customer, nation WHERE      c_nationkey = n_nationkey     AND c_mktsegment = 'AUTOMOBILE'     AND n_name = 'FRANCE';
SELECT p_name FROM part p, lineitem l, partsupp ps WHERE p_partkey = l_partkey AND l_partkey = ps_partkey ORDER BY (l_extendedprice * (1 - l_discount) * ps_supplycost * l_quantity) DESC LIMIT 1;
SELECT n_name FROM nation, customer WHERE n_nationkey = c_nationkey GROUP BY n_name HAVING COUNT(c_name) < (SELECT COUNT(*) FROM customer) / (SELECT COUNT(*) FROM nation) ORDER BY COUNT(c_name);
SELECT      DIVIDE(COUNT(c_custkey)             WHERE c_mktsegment = 'HOUSEHOLD'             AND r_name = 'AFRICA'),      COUNT(c_custkey)      WHERE r_name = 'AFRICA')  AS percentage
SELECT p_name FROM part p JOIN partsupp ps ON p.p_partkey = ps.ps_partkey GROUP BY p_name ORDER BY MAX(ps_availqty) DESC LIMIT 10;
SELECT    SUBTRACT(DIVIDE(SUM(p_retailprice), COUNT(l_shipmode = 'SHIP')),             DIVIDE(SUM(p_retailprice), COUNT(l_shipmode = 'AIR')))  FROM    part p    JOIN lineitem l ON p.p_partkey = l.l_partkey  WHERE    l_shipmode IN ('SHIP', 'AIR');
SELECT DIVIDE(SUM(l_discount), COUNT(l_partkey))  FROM lineitem l, part p  WHERE l_partkey = p_partkey AND p_mfgr = 'Manufacturer#5';
Error: 第 6778 个样本有 0 个SQL。
SELECT      DIVIDE(COUNT(s_acctbal < AVG(s_acctbal)), COUNT(s_suppkey)) as percentage  FROM      supplier, region  WHERE      s_nationkey = n_nationkey      AND n_regionkey = r_regionkey      AND r_name = 'EUROPE';
SELECT    DATE_TRUNC('month', l_shipdate) AS month,   SUBTRACT(DIVIDE(SUM(l_orderkey) WHERE EXTRACT(YEAR FROM l_shipdate) = 1995, 12),              DIVIDE(SUM(l_orderkey) WHERE EXTRACT(YEAR FROM l_shipdate) = 1996, 12)) AS diff FROM    lineitem JOIN    orders ON l_orderkey = o_orderkey WHERE    o_orderpriority = '5-LOW' GROUP BY    month
SELECT c_custkey FROM customer WHERE c_acctbal < 0;
SELECT l_orderkey, l_extendedprice * (1 - l_discount) AS price FROM lineitem ORDER BY price LIMIT 3;
SELECT COUNT(*) FROM lineitem WHERE l_orderkey IN (SELECT o_orderkey FROM orders) AND l_returnflag = 'R' AND l_quantity > 10;
SELECT SUM(MULTIPLY(MULTIPLY(l_extendedprice, SUBTRACT(1, l_discount)), SUM(1, l_tax))) FROM lineitem WHERE l_shipmode = 'AIR' AND l_shipinstruct = 'NONE';
SELECT COUNT(*) FROM orders WHERE o_orderkey IN (   SELECT l_orderkey   FROM lineitem   WHERE l_orderkey IN (     SELECT o_orderkey     FROM orders     WHERE o_orderpriority = '1-URGENT'   ) ) AND o_orderdate = (   SELECT MAX(o_orderdate)   FROM orders   WHERE o_orderpriority != '1-URGENT' );
SELECT COUNT(*) FROM supplier WHERE s_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'EGYPT' ) AND s_acctbal < 0;
SELECT COUNT(*) FROM lineitem WHERE l_shipmode = 'REG AIR' AND o_orderdate = '1995-03-22'
SELECT COUNT(*) FROM supplier WHERE s_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_regionkey IN (     SELECT r_regionkey     FROM region     WHERE r_name = 'EUROPE'   ) )
SELECT c_mktsegment FROM customer WHERE c_custkey IN (   SELECT o_custkey   FROM orders   WHERE o_orderdate LIKE '1994-04-%'   GROUP BY o_custkey   ORDER BY COUNT(o_orderkey) DESC   LIMIT 1 )
SELECT p_name FROM part JOIN partsupp ON part.p_partkey = partsupp.ps_partkey JOIN supplier ON partsupp.ps_suppkey = supplier.s_suppkey WHERE s_name = 'Supplier#000000034';
SELECT ps_supplycost FROM partsupp, part WHERE ps_partkey = p_partkey AND p_type = 'LARGE BURNISHED COPPER';
SELECT COUNT(DISTINCT c_custkey) FROM customer c, nation n, orders o WHERE c_nationkey = n_nationkey AND o_custkey = c_custkey AND n_name = 'MOZAMBIQUE' AND o_orderpriority = '5-LOW';
SELECT p_name FROM part p JOIN partsupp ps ON p.p_partkey = ps.ps_partkey WHERE ps.ps_availqty < 10 ORDER BY ps.ps_supplycost LIMIT 1;
SELECT COUNT(DISTINCT o_clerk) FROM orders WHERE o_custkey IN (   SELECT c_custkey   FROM customer   WHERE c_address = 'uFTe2u518et8Q8UC' );
SELECT p_name FROM part, lineitem WHERE p_partkey = l_partkey AND l_discount = 0.0000;
Error: 第 6796 个样本有 0 个SQL。
SELECT COUNT(*) FROM lineitem WHERE l_shipdate = '1994-11-19' AND l_orderkey IN (   SELECT o_orderkey   FROM orders   WHERE o_orderdate = '1994-09-21' );
SELECT SUM((l_extendedprice * (1 - l_discount)) - (ps_supplycost * l_quantity)) / COUNT(ps_partkey) FROM lineitem, partsupp, part WHERE p_partkey = ps_partkey AND p_type = 'PROMO BRUSHED STEEL';
SELECT (COUNT(c_custkey)  FROM customer  WHERE c_mktsegment = 'HOUSEHOLD'  AND n_name = 'IRAN') * 100.0 /  COUNT(c_custkey)  FROM customer  WHERE c_mktsegment = 'HOUSEHOLD';
Error: 第 6800 个样本有 0 个SQL。
SELECT l_linenumber FROM lineitem WHERE l_discount = 0.1;
SELECT COUNT(*) FROM lineitem WHERE l_quantity > 40 AND l_shipmode = 'AIR';
Error: 第 6803 个样本有 0 个SQL。
SELECT o_orderpriority, o_totalprice FROM orders WHERE o_orderkey = 33;
SELECT COUNT(*) FROM orders WHERE YEAR(o_orderdate) = '1998' AND o_totalprice < 950;
SELECT c_name FROM customer WHERE c_acctbal < 0 LIMIT 3;
SELECT l_extendedprice * (1 - l_discount)  FROM lineitem  WHERE l_linenumber = 1;
SELECT      COUNT(CASE WHEN l_returnflag = 'R' THEN 1 ELSE NULL END) -      COUNT(CASE WHEN l_returnflag IN ('A', 'N') THEN 1 ELSE NULL END)  FROM      lineitem  WHERE      l_extendedprice < 16947.7;
SELECT ps_supplycost FROM partsupp JOIN part ON partsupp.ps_partkey = part.p_partkey WHERE part.p_type = 'large plated tin';
SELECT p_name FROM part p, partsupp ps WHERE p_partkey = ps_partkey AND ps_availqty > 9998;
SELECT p_name FROM part, partsupp WHERE p_partkey = ps_partkey AND p_container = 'WRAP BAG' AND ps_supplycost < 10 LIMIT 2;
SELECT n_name FROM nation WHERE n_nationkey = (SELECT s_nationkey                      FROM supplier                      WHERE s_suppkey = 1);
SELECT n_name FROM nation WHERE n_regionkey IN (   SELECT r_regionkey   FROM region   WHERE r_name = 'Africa' )
SELECT r_name FROM region r WHERE r_regionkey = (   SELECT r_regionkey   FROM nation   GROUP BY r_regionkey   ORDER BY COUNT(n_name) ASC   LIMIT 1 )
SELECT COUNT(*) FROM customer WHERE c_mktsegment = 'FURNITURE' AND c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'Iraq' )
Error: 第 6816 个样本有 0 个SQL。
SELECT n_name, r_name FROM nation n JOIN region r ON n.n_regionkey = r.r_regionkey WHERE c_name = 'Customer#000000008' FROM customer;
SELECT l_commitdate, o_clerk FROM lineitem, orders WHERE l_orderkey = o_orderkey AND o_orderkey = 6;
SELECT COUNT(*) FROM supplier WHERE s_nationkey = (SELECT n_nationkey                      FROM nation                      WHERE n_name = 'Japan')   AND s_acctbal < 0;
SELECT c_name FROM customer ORDER BY c_acctbal DESC LIMIT 1;
Error: 第 6821 个样本有 0 个SQL。
SELECT COUNT(*) FROM lineitem WHERE l_shipinstruct = 'DELIVER IN PERSON';
SELECT MAX(s_acctbal) FROM supplier;
SELECT COUNT(*) FROM partsupp WHERE ps_availqty < 10;
SELECT n_name FROM nation WHERE n_regionkey IN (   SELECT r_regionkey   FROM region   WHERE r_name = 'EUROPE' );
SELECT ps_supplycost FROM partsupp WHERE ps_partkey IN (   SELECT p_partkey   FROM part   WHERE p_name = 'violet olive rose ivory sandy' );
Error: 第 6827 个样本有 0 个SQL。
Error: 第 6828 个样本有 0 个SQL。
Error: 第 6829 个样本有 0 个SQL。
SELECT s.s_acctbal FROM supplier s WHERE s.s_acctbal = (   SELECT MAX(s2.s_acctbal)   FROM supplier s2   ORDER BY (     SELECT COUNT(ps.ps_suppkey)     FROM partsupp ps     WHERE ps.ps_suppkey = s2.s_suppkey   ) DESC );
SELECT n_name FROM nation, supplier WHERE s_nationkey = n_nationkey AND s_acctbal = 4393.04;
SELECT r_name FROM region r JOIN nation n ON r.r_regionkey = n.n_regionkey JOIN customer c ON n.n_nationkey = c.c_nationkey GROUP BY r_name ORDER BY COUNT(c_custkey) DESC LIMIT 1;
Error: 第 6833 个样本有 0 个SQL。
SELECT o_clerk FROM orders WHERE o_orderkey IN (   SELECT l_orderkey   FROM lineitem   WHERE l_shipmode = 'MAIL' );
SELECT n_name FROM nation WHERE n_nationkey IN (   SELECT s_nationkey   FROM supplier   ORDER BY s_acctbal ASC   LIMIT 5 )
SELECT s_address FROM supplier s JOIN partsupp ps ON s_suppkey = ps_suppkey JOIN part p ON ps_partkey = p_partkey WHERE p_size = (SELECT MAX(p_size) FROM part);
SELECT p.p_name, s.s_name FROM part p, supplier s, lineitem l, partsupp ps WHERE p.p_partkey = ps.ps_partkey AND ps.ps_suppkey = s.s_suppkey ORDER BY (l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity) DESC LIMIT 1;
SELECT (COUNT(s_name WHERE r_name = 'ASIA') / COUNT(s_name)) * 100 AS proportion FROM supplier, region WHERE s_nationkey = n_nationkey AND n_regionkey = r_regionkey AND r_name = 'ASIA';
SELECT o_totalprice FROM orders WHERE o_orderkey = 32;
SELECT COUNT(*) FROM lineitem WHERE l_discount = 0;
SELECT * FROM lineitem WHERE l_shipmode = 'truck' AND YEAR(l_shipdate) < 1997;
SELECT COUNT(*) FROM lineitem WHERE l_returnflag = 'R' AND year(l_shipdate) = 1998;
SELECT * FROM lineitem WHERE l_shipmode = 'AIR' ORDER BY l_quantity DESC LIMIT 1;
SELECT c_name FROM customer WHERE c_acctbal < 0;
SELECT COUNT(*) FROM customer WHERE c_mktsegment = 'household' AND c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'Germany' );
SELECT c_phone FROM customer WHERE c_custkey IN (   SELECT o_custkey   FROM orders   WHERE o_orderpriority = '1-URGENT' );
SELECT c_name FROM customer, lineitem, orders WHERE customer.c_custkey = orders.o_custkey AND lineitem.l_orderkey = orders.o_orderkey AND l_discount = (SELECT MAX(l_discount) FROM lineitem)
SELECT o_orderkey, o_orderdate AS delivery_date, o_totalprice FROM orders WHERE o_orderkey IN (   SELECT o_orderkey   FROM orders   ORDER BY o_totalprice DESC   LIMIT 5 ) ORDER BY o_totalprice DESC;
SELECT o_comment FROM orders WHERE o_custkey IN (   SELECT c_custkey   FROM customer   WHERE c_mktsegment = 'FURNITURE' );
SELECT c_name FROM customer, orders WHERE o_custkey = c_custkey AND o_totalprice > 300000;
SELECT c_name FROM customer WHERE c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'INDIA' ) AND c_acctbal > 5000;
Error: 第 6852 个样本有 0 个SQL。
SELECT s_name FROM supplier WHERE s_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_name = 'ARGENTINA' ) AND s_acctbal < 0;
SELECT COUNT(DISTINCT n_nationkey) FROM nation WHERE n_regionkey IN (   SELECT r_regionkey   FROM region   WHERE r_name = 'ALGERIA' );
SELECT c_name FROM customer WHERE c_custkey IN (   SELECT o_custkey   FROM orders   WHERE o_orderdate BETWEEN '1994-01-01' AND '1995-01-01'   AND o_orderkey IN (     SELECT l_orderkey     FROM lineitem     WHERE l_discount = 0.1   ) );
SELECT (COUNT(n_name) WHERE n_regionkey IN (SELECT r_regionkey FROM region WHERE r_name = 'America')) * 100.0 / COUNT(n_name) AS percentage FROM nation;
SELECT (COUNT(c.c_custkey) FILTER (WHERE c.c_mktsegment = 'HOUSEHOLD' AND n.n_name = 'Indonesia')) * 100.0 /         COUNT(c.c_custkey)  FROM customer c  JOIN nation n ON c.c_nationkey = n.n_nationkey  WHERE n.n_name = 'Indonesia';
Error: 第 6858 个样本有 0 个SQL。
SELECT p_comment FROM part WHERE p_name = 'burlywood plum powder puff mint';
SELECT COUNT(*) FROM part WHERE p_retailprice > 1900;
SELECT COUNT(*) FROM part WHERE p_type = 'PROMO BRUSHED STEEL' AND p_mfgr = 'Manufacturer#5';
Error: 第 6862 个样本有 0 个SQL。
SELECT p_name FROM part WHERE p_retailprice = (SELECT MAX(p_retailprice) FROM part);
SELECT p1.p_partkey, p1.p_name FROM part p1 WHERE p1.p_name IN ('pink powder drab lawn cyan', 'cornflower sky burlywood green beige') ORDER BY p1.p_size DESC LIMIT 1;
SELECT COUNT(*) FROM part WHERE p_container = 'JUMBO CASE';
SELECT MIN(p_size) FROM part WHERE p_container = 'JUMBO CASE';
SELECT COUNT(*) FROM supplier WHERE s_acctbal < 0;
SELECT s_name FROM supplier ORDER BY s_acctbal DESC LIMIT 3;
Error: 第 6869 个样本有 0 个SQL。
Error: 第 6870 个样本有 0 个SQL。
SELECT ps_supplycost FROM partsupp, part WHERE ps_partkey = p_partkey AND p_name = 'hot spring dodger dim light' ORDER BY ps_supplycost LIMIT 1;
SELECT s_name FROM supplier WHERE s_suppkey IN (   SELECT ps_suppkey   FROM partsupp   WHERE ps_partkey IN (     SELECT p_partkey     FROM part     WHERE p_name = 'hot spring dodger dim light'   )   ORDER BY ps_supplycost   LIMIT 1 )
Error: 第 6873 个样本有 0 个SQL。
SELECT s_phone FROM supplier, partsupp, part WHERE s_suppkey = ps_suppkey AND ps_partkey = p_partkey AND p_name = 'hot spring dodger dim light' ORDER BY ps_availqty DESC LIMIT 1;
SELECT s_name FROM supplier WHERE s_suppkey IN (   SELECT ps_suppkey   FROM partsupp   WHERE ps_partkey IN (     SELECT p_partkey     FROM part     WHERE p_retailprice = (       SELECT MAX(p_retailprice)       FROM part     )   ) );
Error: 第 6876 个样本有 0 个SQL。
SELECT COUNT(*) FROM supplier WHERE s_nationkey IN (   SELECT ps_suppkey   FROM partsupp   WHERE ps_partkey IN (     SELECT p_partkey     FROM part     WHERE p_type = 'PROMO BRUSHED STEEL'   ) ) AND s_acctbal < 0;
Error: 第 6878 个样本有 0 个SQL。
SELECT COUNT(*) FROM part p JOIN partsupp ps ON p.p_partkey = ps.ps_partkey WHERE p.p_type = 'PROMO BRUSHED STEEL' GROUP BY p.p_partkey HAVING SUM(ps.ps_availqty) < 5000;
Error: 第 6880 个样本有 0 个SQL。
Error: 第 6881 个样本有 0 个SQL。
SELECT o_orderkey FROM lineitem JOIN orders o ON l_orderkey = o_orderkey JOIN part p ON l_partkey = p_partkey WHERE p_container = 'JUMBO CASE' GROUP BY o_orderkey HAVING COUNT(l_partkey) > 2;
Error: 第 6883 个样本有 0 个SQL。
Error: 第 6884 个样本有 0 个SQL。
SELECT s_phone FROM supplier WHERE s_suppkey IN (   SELECT ps_suppkey   FROM partsupp   WHERE ps_partkey IN (     SELECT l_partkey     FROM lineitem     WHERE l_orderkey = 1   ) )
SELECT COUNT(*) FROM supplier WHERE s_suppkey IN (   SELECT l_suppkey   FROM lineitem   WHERE l_orderkey = 4 ) AND s_acctbal < 0;
Error: 第 6887 个样本有 0 个SQL。
Error: 第 6888 个样本有 0 个SQL。
SELECT l_quantity FROM lineitem WHERE l_orderkey = 1 AND p_name = 'burnished seashell gainsboro navajo chocolate';
SELECT p_name, SUM(l_quantity) AS amount FROM lineitem JOIN orders ON l_orderkey = o_orderkey JOIN part ON l_partkey = p_partkey WHERE l_orderkey = 1 AND p_name IN ('salmon white grey tan navy', 'burnished seashell gainsboro navajo chocolate') GROUP BY p_name ORDER BY amount DESC LIMIT 1;
SELECT MAX(l_discount)  FROM lineitem  WHERE l_partkey IN (SELECT p_partkey                       FROM part                       WHERE p_name = 'burnished seashell gainsboro navajo chocolate');
SELECT DISTINCT l_shipmode FROM lineitem WHERE l_partkey IN (   SELECT p_partkey   FROM part   WHERE p_name = 'burnished seashell gainsboro navajo chocolate' );
Error: 第 6893 个样本有 0 个SQL。
SELECT (MAX(ps_supplycost) - MIN(ps_supplycost)) / MIN(ps_supplycost) * 100 AS percentage FROM partsupp WHERE p_name = 'hot spring dodger dim light';
SELECT (l_extendedprice * (1 - l_discount)) - (ps_supplycost * l_quantity) FROM lineitem JOIN partsupp ON l_partkey = ps_partkey JOIN orders ON l_orderkey = o_orderkey WHERE l_partkey = 98768 AND l_orderkey = 1;
SELECT l_extendedprice * (1 - l_discount) FROM lineitem WHERE l_orderkey = 1 AND l_partkey IN (   SELECT p_partkey   FROM part   WHERE p_name = 'burnished seashell gainsboro navajo chocolate' );
SELECT c_mktsegment FROM customer WHERE c_acctbal = (SELECT MAX(c_acctbal) FROM customer);
SELECT COUNT(*) FROM lineitem WHERE year(l_shipdate) = 1997 AND l_shipmode = 'MAIL';
SELECT COUNT(*) FROM customer WHERE c_mktsegment = 'FURNITURE';
Error: 第 6900 个样本有 0 个SQL。
SELECT COUNT(*) FROM customer WHERE c_mktsegment = 'MACHINERY' AND c_acctbal < 0;
SELECT COUNT(*) FROM orders WHERE o_orderpriority = '1-URGENT' AND o_clerk = 'Clerk#000000001' AND EXTRACT(YEAR FROM o_orderdate) = 1997;
SELECT c_name FROM customer c JOIN orders o ON c.c_custkey = o.o_custkey JOIN lineitem l ON o.o_orderkey = l.l_orderkey WHERE l_receiptdate - l_commitdate = (   SELECT MAX(l_receiptdate - l_commitdate)   FROM lineitem );
SELECT SUM(o_totalprice)  FROM orders o, customer c, nation n  WHERE o_custkey = c_custkey AND c_nationkey = n_nationkey AND n_name = 'Argentina';
SELECT COUNT(*) FROM customer, orders WHERE c_mktsegment = 'BUILDING' AND c_custkey = o_custkey AND o_totalprice > 50000;
SELECT n_name FROM nation WHERE n_nationkey = (   SELECT s_nationkey   FROM supplier   GROUP BY s_nationkey   ORDER BY COUNT(s_name) ASC   LIMIT 1 );
SELECT ps_supplycost FROM partsupp WHERE ps_partkey IN (   SELECT p_partkey   FROM part   WHERE p_name = 'medium metallic grey dodger linen' );
SELECT c_name FROM customer WHERE c_nationkey IN (   SELECT n_nationkey   FROM nation   WHERE n_nationkey IN (     SELECT s_nationkey     FROM supplier     WHERE s_acctbal < 0   )   ORDER BY (     SELECT SUM(s_acctbal)     FROM supplier     WHERE s_nationkey = n_nationkey     AND s_acctbal < 0   ) DESC ) ORDER BY (   SELECT SUM(s_acctbal)   FROM supplier   WHERE s_nationkey = c_nationkey   AND s_acctbal < 0 ) DESC LIMIT 2;
SELECT p_name FROM part p, partsupp ps WHERE p_partkey = ps_partkey AND ps_supplycost > 1000;
SELECT n_name FROM nation WHERE n_nationkey IN (   SELECT s_nationkey   FROM supplier   ORDER BY s_acctbal ASC   LIMIT 1 )
SELECT o_clerk FROM orders WHERE o_orderkey IN (   SELECT l_orderkey   FROM lineitem   ORDER BY l_extendedprice DESC   LIMIT 1 )
SELECT SUM(l_quantity) FROM lineitem WHERE l_orderkey IN (   SELECT o_orderkey   FROM orders   WHERE o_custkey = 101660 AND o_orderdate = '1995-10-05' );
Error: 第 6913 个样本有 0 个SQL。
SELECT p_name FROM part, lineitem, orders WHERE part.p_partkey = lineitem.l_partkey AND lineitem.l_orderkey = orders.o_orderkey AND orders.o_custkey = 110942;
SELECT      p_name,      l_extendedprice * (1 - l_discount) AS discounted_price FROM      lineitem WHERE      l_orderkey = 53159 AND      l_custkey = 111511 AND      l_partkey IN (SELECT                      ps_partkey                  FROM                      partsupp                  WHERE                      ps_suppkey IN (SELECT                                      s_suppkey                                  FROM                                      supplier                                  WHERE                                      s_nationkey IN (SELECT                                                      n_nationkey                                                  FROM                                                      nation                                                  WHERE                                                      n_regionkey IN (SELECT                                                                      r_regionkey                                                                  FROM                                                                      region                                                                  WHERE                                                                      r_name = 'EUROPE') AND                                                      n_name = 'UNITED KINGDOM'))     )
Error: 第 6916 个样本有 0 个SQL。
Error: 第 6917 个样本有 0 个SQL。
Error: 第 6918 个样本有 0 个SQL。
Error: 第 6919 个样本有 0 个SQL。
SELECT weight_in_kg FROM weight_info, PlayerInfo WHERE PlayerName = 'David Bornhammar';
SELECT COUNT(*) FROM weight_info, PlayerInfo WHERE weight_info.weight_in_kg > 90 AND weight_info.weight_id = PlayerInfo.weight;
SELECT COUNT(*) FROM PlayerInfo WHERE weight_in_kg > 90 AND position_info = 'D';
SELECT PlayerName FROM PlayerInfo WHERE weight_in_kg > 90 ORDER BY sum_7yr_GP DESC LIMIT 1;
SELECT weight_in_kg FROM PlayerInfo WHERE sum_7yr_TOI = (SELECT MAX(sum_7yr_TOI) FROM PlayerInfo) AND GP_greater_than_0 = 1;
SELECT SUBTRACT(SUM(height_in_cm) FROM height_info WHERE PlayerName = 'David Bornhammar'),         SUM(height_in_cm) FROM height_info WHERE PlayerName = 'Pauli Levokari');
SELECT COUNT(*) FROM PlayerInfo JOIN weight_info ON PlayerInfo.weight = weight_info.weight_in_kg WHERE shoots = 'R' AND weight_in_kg > 90;
SELECT PlayerName FROM PlayerInfo WHERE weight_in_kg > 90 AND shoots = 'R';
SELECT    BMI = DIVIDE(w.weight_in_kg, POWER(DIVIDE(h.height_in_cm, 100), 2)) FROM    PlayerInfo p   JOIN height_info h ON p.height = h.height_in_cm   JOIN weight_info w ON p.weight = w.weight_in_kg WHERE    p.PlayerName = 'David Bornhammar';
SELECT AVG(h.height_in_cm)  FROM height_info h  JOIN PlayerInfo p ON h.height_id = p.height  WHERE p.position_info = 'D';
SELECT MAX(weight_in_lbs)  FROM weight_info;
SELECT COUNT(*) FROM PlayerInfo WHERE shoots = 'R' AND height = (SELECT height_in_inch FROM height_info WHERE height_in_cm = (SELECT height_in_cm FROM height_info WHERE height_in_inch = '5''7'));
SELECT PlayerName FROM PlayerInfo, SeasonStatus WHERE PlayerInfo.ELITEID = SeasonStatus.ELITEID AND sum_7yr_GP > 500 AND PIM = (SELECT MAX(PIM) FROM SeasonStatus);
SELECT height_in_cm FROM height_info WHERE height_in_cm = (SELECT MAX(height_in_cm) FROM height_info) AND birthplace = 'Edmonton, AB, CAN';
SELECT COUNT(DISTINCT ELITEID) FROM PlayerInfo JOIN SeasonStatus ON PlayerInfo.ELITEID = SeasonStatus.ELITEID WHERE overallby = 'Anaheim Ducks' AND draftyear = 2008 AND TEAM = 'U.S. National U18 Team';
SELECT w.weight_in_kg FROM SeasonStatus s JOIN PlayerInfo p ON s.ELITEID = p.ELITEID JOIN weight_info w ON p.weight = w.weight_id ORDER BY s.PLUSMINUS DESC LIMIT 1;
SELECT PlayerInfo.PlayerName, SUM(P) AS total_points FROM SeasonStatus JOIN PlayerInfo ON SeasonStatus.ELITEID = PlayerInfo.ELITEID WHERE SeasonStatus.SEASON = '2004-2005' AND SeasonStatus.LEAGUE = 'QMJHL' GROUP BY PlayerInfo.PlayerName ORDER BY total_points DESC LIMIT 1;
SELECT PlayerName FROM PlayerInfo JOIN SeasonStatus ON PlayerInfo.ELITEID = SeasonStatus.ELITEID WHERE TEAM = 'Acadie-Bathurst Titan' AND GAMETYPE = 'Regular Season' AND SEASON = '1998-1999';
Error: 第 6938 个样本有 0 个SQL。
SELECT PlayerInfo.PlayerName FROM PlayerInfo JOIN SeasonStatus ON PlayerInfo.ELITEID = SeasonStatus.ELITEID WHERE SeasonStatus.SEASON = '1997-1998' AND SeasonStatus.LEAGUE = 'OHL' ORDER BY PlayerInfo.birthdate LIMIT 1;
Error: 第 6940 个样本有 0 个SQL。
SELECT      SUM(G) - SUM(CASE WHEN GAMETYPE = 'Playoffs' THEN G ELSE 0 END) AS difference FROM      SeasonStatus WHERE      SEASON = '1998-1999' AND ELITEID = 'Pavel Brendl';
SELECT AVG(w.weight_in_lbs)  FROM PlayerInfo p  JOIN weight_info w ON p.weight = w.weight_id  WHERE p.CSS_rank = (SELECT MAX(CSS_rank) FROM PlayerInfo);
SELECT      MULTIPLY(DIVIDE(SUM(CASE WHEN GP > 20 THEN 1 ELSE 0 END), COUNT(ELITEID)), 100) AS percentage FROM      SeasonStatus WHERE      GAMETYPE = 'Playoffs' AND SEASON = '2007-2008';
SELECT PlayerName FROM SeasonStatus WHERE LEAGUE = 'WHL' AND SEASON = '2007-2008' AND G = (SELECT MAX(G) FROM SeasonStatus WHERE LEAGUE = 'WHL' AND SEASON = '2007-2008');
SELECT PlayerName FROM PlayerInfo JOIN SeasonStatus ON PlayerInfo.ELITEID = SeasonStatus.ELITEID WHERE TEAM = 'Chilliwack Chiefs' AND P > 100;
SELECT PlayerName FROM PlayerInfo WHERE weight = (SELECT weight_in_kg FROM weight_info WHERE weight_in_kg = 120);
SELECT players FROM PlayerInfo WHERE height = (SELECT height_in_cm FROM height_info WHERE height_in_cm = (SELECT height_in_cm FROM PlayerInfo WHERE PlayerName = 'Brian Gionta'));
SELECT PI.PlayerName, PI.position_info FROM PlayerInfo PI JOIN SeasonStatus SS ON PI.ELITEID = SS.ELITEID GROUP BY PI.PlayerName, PI.position_info ORDER BY MAX(SS.PIM) DESC LIMIT 1;
SELECT PlayerName FROM PlayerInfo WHERE draftyear IN (   SELECT draftyear   FROM PlayerInfo   GROUP BY draftyear   ORDER BY MAX(P) DESC   LIMIT 1 )
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN nation IN ('Belarus', 'Bulgaria', 'Czech Republic', 'Hungary', 'Moldova', 'Poland', 'Romania', 'Slovakia', 'Ukraine') THEN 1 ELSE 0 END), COUNT(ELITEID)), 100) AS percentage FROM    PlayerInfo WHERE    overallby = 'Toronto Maple Leafs';
SELECT players FROM PlayerInfo WHERE draftyear = 2008 AND overallby = 'Toronto Maple Leafs' ORDER BY CSS_rank DESC LIMIT 1;
SELECT p.PlayerName, ss.TEAM FROM PlayerInfo p JOIN SeasonStatus ss ON p.ELITEID = ss.ELITEID WHERE ss.LEAGUE = 'SuperElit' AND ss.SEASON = '2006-2007' AND ss.GAMETYPE = 'Playoffs' ORDER BY ss.P DESC LIMIT 1;
Error: 第 6953 个样本有 0 个SQL。
SELECT height_in_cm FROM PlayerInfo JOIN SeasonStatus ON PlayerInfo.ELITEID = SeasonStatus.ELITEID WHERE PlayerInfo.birthplace = 'Yale Univ.' AND SeasonStatus.SEASON = '2005-2006' AND SeasonStatus.PIM = '28';
SELECT      MULTIPLY(         DIVIDE(             SUM(G)              WHERE PlayerName = 'Ian Schultz'              AND SEASON = '2007-2008'              AND TEAM = 'Calgary Hitmen'         ),          SUM(G)          WHERE SEASON = '2007-2008'          AND TEAM = 'Calgary Hitmen'     ) * 100 AS Percentage FROM      SeasonStatus WHERE      SEASON = '2007-2008'      AND TEAM = 'Calgary Hitmen';
SELECT      MULTIPLY(         DIVIDE(             SUM(PIM)              WHERE PlayerName = 'Yevgeni Muratov'              AND SEASON = '1999-2000'              AND TEAM = 'Ak Bars Kazan'         ),         SUM(PIM)          WHERE SEASON = '1999-2000'          AND TEAM = 'Ak Bars Kazan'     ) * 100.0 AS percentage FROM      SeasonStatus WHERE      SEASON = '1999-2000'      AND TEAM = 'Ak Bars Kazan';
SELECT birthplace FROM PlayerInfo WHERE PlayerName = 'Aaron Gagnon';
SELECT weight_in_kg FROM weight_info, PlayerInfo WHERE PlayerName = 'Tony Martensson' AND weight = weight_info.weight_in_kg;
SELECT PlayerName FROM PlayerInfo WHERE weight = (SELECT weight_in_lbs FROM weight_info WHERE weight_in_lbs = 190);
SELECT p.PlayerName FROM PlayerInfo p JOIN weight_info w ON p.weight = w.weight_in_kg WHERE w.weight_in_kg = (SELECT MAX(weight_in_kg) FROM weight_info);
SELECT MULTIPLY(DIVIDE(SUM(CASE WHEN weight_in_lbs > 154 AND nation = 'Denmark' THEN 1 ELSE 0 END), COUNT(ELITEID)), 100) AS percentage FROM PlayerInfo JOIN height_info ON PlayerInfo.height = height_info.height_in_cm JOIN weight_info ON PlayerInfo.weight = weight_info.weight_in_kg WHERE nation = 'Denmark';
Error: 第 6962 个样本有 0 个SQL。
Error: 第 6963 个样本有 0 个SQL。
SELECT GAMETYPE FROM SeasonStatus WHERE ELITEID IN (SELECT ELITEID FROM PlayerInfo WHERE PlayerName = 'Matthias Trattnig');
SELECT nation  FROM PlayerInfo  WHERE ELITEID IN (SELECT ELITEID FROM SeasonStatus WHERE SEASON = '1997-1998');
SELECT MAX(P)  FROM SeasonStatus  WHERE ELITEID IN (SELECT ELITEID FROM PlayerInfo WHERE PlayerName = 'Per Mars' AND draftyear = [draft year])
SELECT PlayerName FROM PlayerInfo WHERE nation = 'Italy' ORDER BY height_in_cm LIMIT 1;
SELECT PlayerName  FROM PlayerInfo  WHERE height = (SELECT height_in_inch                  FROM height_info                  WHERE height_in_inch = '5''8');
SELECT COUNT(*) FROM PlayerInfo WHERE birthyear = 1982 AND height_in_cm > 182;
SELECT MULTIPLY(DIVIDE(SUM(CASE WHEN nation = 'Russia' AND height_in_cm < 200 THEN 1 ELSE 0 END), COUNT(ELITEID)), 100) AS percentage
SELECT PlayerName FROM PlayerInfo WHERE nation = 'USA' ORDER BY weight_in_lbs LIMIT 1;
SELECT PlayerInfo.PlayerName, MAX(SeasonStatus.PIM) AS MAX_PIM FROM PlayerInfo JOIN SeasonStatus ON PlayerInfo.ELITEID = SeasonStatus.ELITEID WHERE SeasonStatus.SEASON = '2000-2001' GROUP BY PlayerInfo.PlayerName ORDER BY MAX_PIM DESC;
Error: 第 6973 个样本有 0 个SQL。
SELECT who.PlayerName FROM PlayerInfo who JOIN SeasonStatus stats ON who.ELITEID = stats.ELITEID WHERE who.draftyear = 2000 AND who.overallby = 'Arizona Coyotes' ORDER BY stats.PIM DESC LIMIT 1;
SELECT COUNT(*)  FROM PlayerInfo  WHERE overallby = 'Arizona Coyotes' AND height = (SELECT height_in_cm FROM height_info WHERE height_in_cm = 195);
SELECT PlayerName FROM PlayerInfo JOIN SeasonStatus ON PlayerInfo.ELITEID = SeasonStatus.ELITEID WHERE TEAM = 'Avangard Omsk' AND SEASON = '2000-2001' AND GAMETYPE = 'Playoffs';
SELECT ELITEID, PlayerName, MAX(P) as P FROM SeasonStatus WHERE SEASON = '2000-2001' AND LEAGUE = 'International' GROUP BY ELITEID, PlayerName
SELECT COUNT(*) FROM PlayerInfo WHERE birthyear = 1980 AND weight_in_lbs = 185;
SELECT ELITEID FROM SeasonStatus WHERE SEASON = '2000-2001' AND LEAGUE = 'International' ORDER BY GP DESC LIMIT 1;
SELECT PlayerName  FROM PlayerInfo  JOIN SeasonStatus ON PlayerInfo.ELITEID = SeasonStatus.ELITEID  WHERE TEAM = 'Avangard Omsk' AND LEAGUE = 'International' AND SEASON = '2000-2001' AND G = 0;
Error: 第 6981 个样本有 0 个SQL。
SELECT PlayerName FROM SeasonStatus JOIN PlayerInfo ON SeasonStatus.ELITEID = PlayerInfo.ELITEID WHERE LEAGUE = 'OHL' AND GAMETYPE = 'Regular Season' AND SEASON = '2007-2008' GROUP BY PlayerName ORDER BY A DESC LIMIT 1;
Error: 第 6983 个样本有 0 个SQL。
SELECT AVG(weight_in_lbs)  FROM weight_info  JOIN PlayerInfo ON weight_info.weight_id = PlayerInfo.weight  WHERE PlayerInfo.overallby = 'Arizona Coyotes';
SELECT AVG(h.height_in_cm)  FROM PlayerInfo p  JOIN height_info h ON p.height = h.height_id  JOIN SeasonStatus s ON p.ELITEID = s.ELITEID  WHERE s.TEAM = 'Acadie-Bathurst Titan' AND s.GAMETYPE = 'Regular Season';
SELECT COUNT(GP)  FROM SeasonStatus  WHERE ELITEID IN (SELECT ELITEID FROM PlayerInfo WHERE PlayerName = 'Per Mars')  AND SEASON = '1997-1998';
SELECT weight_in_kg FROM weight_info, PlayerInfo WHERE PlayerInfo.ELITEID = 'Matthias Trattnig' AND PlayerInfo.height = weight_info.height;
SELECT PlayerName  FROM PlayerInfo, height_info  WHERE PlayerInfo.height = height_info.height_in_inch  AND height_info.height_in_inch > '5''9';
Error: 第 6989 个样本有 0 个SQL。
SELECT TEAM FROM SeasonStatus WHERE nation = 'Sweden' GROUP BY TEAM ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 6991 个样本有 0 个SQL。
SELECT PlayerName FROM SeasonStatus WHERE TEAM = 'Rimouski Oceanic' AND GAMETYPE = 'Playoffs' ORDER BY G DESC LIMIT 1;
SELECT nation FROM PlayerInfo WHERE TEAM = 'Plymouth Whalers' GROUP BY nation ORDER BY COUNT(nation) DESC LIMIT 1;
SELECT who.PlayerName FROM SeasonStatus JOIN PlayerInfo ON SeasonStatus.ELITEID = PlayerInfo.ELITEID WHERE TEAM = 'Plymouth Whalers' AND SEASON = '1999-2000' ORDER BY A DESC LIMIT 1;
SELECT hi.height_in_inch FROM PlayerInfo pi JOIN height_info hi ON pi.height = hi.height_id WHERE pi.PlayerName IN (   SELECT pi.PlayerName   FROM PlayerInfo pi   JOIN SeasonStatus ss ON pi.ELITEID = ss.ELITEID   WHERE ss.TEAM = 'Oshawa Generals' )
Error: 第 6996 个样本有 0 个SQL。
SELECT PlayerName FROM PlayerInfo JOIN height_info ON PlayerInfo.height = height_info.height_in_cm WHERE nation = 'USA' AND draftyear = 2020 AND height_in_cm = (SELECT MAX(height_in_cm) FROM height_info);
SELECT    MULTIPLY(DIVIDE(SUM(CASE WHEN nation = 'Sweden' THEN 1 ELSE 0 END), COUNT(ELITEID) WHERE SEASON IN ('1997-1998', '1998-1999', '1999-2000')), 100) AS percentage
SELECT    MULTIPLY(     DIVIDE(       SUM(PIM)        FROM SeasonStatus        WHERE nation = 'Sweden' AND LEAGUE = 'OHL'     ),     COUNT(ELITEID)      FROM PlayerInfo      WHERE nation = 'Sweden' AND LEAGUE = 'OHL'   ) * 100 AS percentage
SELECT AVG(StandardCost)  FROM ProductCostHistory  WHERE ProductID IN (SELECT ProductID FROM Product WHERE ProductNumber = 'CA-1098');
SELECT p.Name, ph.StartDate FROM Product p JOIN ProductCostHistory ph ON p.ProductID = ph.ProductID WHERE ph.EndDate IS NULL
SELECT p.* FROM Product p JOIN ProductCostHistory ch ON p.ProductID = ch.ProductID WHERE ch.StartDate = (SELECT MAX(StartDate) FROM ProductCostHistory WHERE ProductID = p.ProductID) AND SUBTRACT(p.StandardCost, ch.StandardCost) > 80
SELECT p.Name, SUM(sc.Quantity) AS TotalQuantity FROM ShoppingCartItem sc JOIN Product p ON sc.ProductID = p.ProductID WHERE sc.ShoppingCartID = 14951 GROUP BY p.Name
Error: 第 7004 个样本有 0 个SQL。
SELECT p.Name FROM Product p JOIN ProductVendor pv ON p.ProductID = pv.ProductID WHERE p.Class = 'L'
SELECT      th.TransactionDate,      p.Name,      th.Quantity,      p.ListPrice FROM      TransactionHistoryArchive th INNER JOIN      Product p ON th.ProductID = p.ProductID WHERE      th.Quantity > 10000;
SELECT p.* FROM Product p JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID WHERE p.Class = 'H' ORDER BY sod.Quantity LIMIT 1;
Error: 第 7008 个样本有 0 个SQL。
Error: 第 7009 个样本有 0 个SQL。
SELECT p.Name, p.ListPrice FROM Product p WHERE p.Class = 'H'
SELECT pl.ProductLine, COUNT(p.ProductID) AS TotalProducts FROM Product p JOIN ProductSubcategory ps ON p.ProductSubcategoryID = ps.ProductSubcategoryID JOIN ProductCategory pc ON ps.ProductCategoryID = pc.ProductCategoryID WHERE p.FinishedGoodsFlag = 1 GROUP BY pl.ProductLine ORDER BY TotalProducts DESC
SELECT p.ProductID, p.Rating, p.Comments FROM ProductReview p WHERE p.ReviewerName LIKE 'J%';
SELECT p.Name, p.ProductLine, pr.Rating, pl.ListPrice FROM Product p JOIN ProductReview pr ON p.ProductID = pr.ProductID JOIN ProductListPriceHistory pl ON p.ProductID = pl.ProductID WHERE pr.Rating = 1 ORDER BY pr.Rating LIMIT 1;
SELECT p.ProductID, p.Name, (p.ListPrice - p.StandardCost) AS Profit FROM Product p WHERE (p.ListPrice - p.StandardCost) > 100
SELECT p.Name AS ProductName, pr.ReviewerName, pr.Rating, pr.Comments FROM Product p JOIN ProductReview pr ON p.ProductID = pr.ProductID WHERE p.ProductLine = 'R'
SELECT AVG(Rating) AS Average_Rating FROM ProductReview WHERE ProductID IN (   SELECT ProductID   FROM Product   WHERE Name = 'HL Mountain Pedal' ) AND ReviewerName IS NOT NULL;
SELECT p.ProductID, p.Name FROM PurchaseOrderDetail pod JOIN Product p ON pod.ProductID = p.ProductID WHERE pod.RejectedQty = 1
SELECT TOP 1 p.Name, sod.UnitPrice FROM Product p JOIN ProductVendor pv ON p.ProductID = pv.ProductID JOIN PurchaseOrderDetail pod ON pv.ProductID = pod.ProductID JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID WHERE pod.RejectedQty = 0 GROUP BY p.Name, sod.UnitPrice ORDER BY SUM(pod.LineTotal) DESC;
Error: 第 7019 个样本有 0 个SQL。
Error: 第 7020 个样本有 0 个SQL。
SELECT p.Name, sod.LineTotal FROM Product p JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID WHERE p.Class = 'L' ORDER BY sod.LineTotal DESC LIMIT 1;
SELECT p.Name FROM Product p WHERE p.StandardPrice - p.LastReceiptCost = (SELECT MAX(p2.StandardPrice - p2.LastReceiptCost) FROM Product p2)
SELECT p.* FROM Product p JOIN ProductVendor pv ON p.ProductID = pv.ProductID WHERE pv.MinOrderQty = 100 ORDER BY p.Name DESC;
SELECT      p.Name,      (p.ListPrice - p.StandardCost) AS Profit FROM      Product p JOIN      ProductReview pr ON p.ProductID = pr.ProductID WHERE      pr.Rating = 5 ORDER BY      pr.Rating DESC LIMIT 1;
SELECT SUM(MULTIPLY(SUBTRACT(plh.ListPrice, ph.StandardCost), oh.OrderQty)) AS TotalProfit FROM SalesOrderDetail oh JOIN ProductListPriceHistory plh ON oh.ProductID = plh.ProductID JOIN ProductProductHistory ph ON oh.ProductID = ph.ProductID WHERE oh.ProductID = 827;
SELECT      CONCAT(FromCurrencyCode, '/', ToCurrencyCode) AS CurrencyPair,     AVG(AverageRate) AS AverageExchangeRate FROM      CurrencyRate GROUP BY      FromCurrencyCode, ToCurrencyCode ORDER BY      AverageExchangeRate DESC LIMIT 1;
Error: 第 7027 个样本有 0 个SQL。
SELECT      st.TerritoryID,      SUM(soh.TotalDue) AS TotalSales FROM      SalesTerritory st JOIN      SalesOrderHeader soh ON st.TerritoryID = soh.TerritoryID WHERE      st.CountryRegionCode = 'US'      AND st.Name BETWEEN 'Northwest' AND 'Southeast'     AND soh.OrderDate >= DATEADD(year, -1, GETDATE()) GROUP BY      st.TerritoryID ORDER BY      TotalSales DESC
SELECT FirstName + ' ' + MiddleName + ' ' + LastName AS 'Full Name' FROM Document WHERE Status = 2
SELECT c.CustomerID, c.CustomerName, SUM(soh.SubTotal) AS TotalSubtotal FROM SalesOrderHeader soh JOIN SalesOrderHeaderSalesReason sor ON soh.SalesOrderID = sor.SalesOrderID JOIN SalesPerson sp ON soh.SalesPersonID = sp.BusinessEntityID JOIN BusinessEntity be ON sp.BusinessEntityID = be.BusinessEntityID JOIN Employee e ON be.BusinessEntityID = e.BusinessEntityID JOIN SalesPersonQuotaHistory sph ON sp.BusinessEntityID = sph.BusinessEntityID JOIN SalesOrderHeader soh2 ON sph.BusinessEntityID = soh2.SalesPersonID JOIN Customer c ON soh.CustomerID = c.CustomerID WHERE sp.SalesQuota = (SELECT MAX(sph.SalesQuota) FROM SalesPersonQuotaHistory) GROUP BY c.CustomerID, c.CustomerName ORDER BY TotalSubtotal DESC LIMIT 1;
SELECT      SUM((soh.UnitPrice * sod.OrderQty) * (CASE WHEN sod.OrderQty BETWEEN 11 AND 14 THEN 0.9 ELSE 1 END))  FROM      SalesOrderHeader soh  INNER JOIN      SalesOrderDetail sod ON soh.SalesOrderID = sod.SalesOrderID  WHERE      soh.SalesOrderID = 46625      AND sod.ProductID = 716;
SELECT COUNT(*) FROM Product p JOIN ProductSubcategory ps ON p.ProductSubcategoryID = ps.ProductSubcategoryID JOIN ProductModel pm ON p.ProductModelID = pm.ProductModelID JOIN BillOfMaterials bom ON pm.ProductAssemblyID = bom.ProductAssemblyID WHERE p.MakeFlag = 1 AND p.DaysToManufacture = 1 AND bom.BOMLevel = 4 AND p.ReorderPoint < 600;
Error: 第 7033 个样本有 0 个SQL。
SELECT Name FROM ProductReview WHERE Rating = 1 ORDER BY Rating LIMIT 1;
Error: 第 7035 个样本有 0 个SQL。
SELECT      FirstName + ' ' + MiddleName + ' ' + LastName AS Full_Name,     JobTitle FROM      Employee WHERE      Gender = 'F'      AND Status = 'S'      AND Rate = (SELECT MAX(Rate) FROM Employee)
SELECT FirstName + ' ' + MiddleName + ' ' + LastName AS 'Full Name', HireDate FROM Employee WHERE JobTitle = 'Vice President of Engineering';
Error: 第 7038 个样本有 0 个SQL。
Error: 第 7039 个样本有 0 个SQL。
SELECT      p.FirstName + ' ' + p.LastName AS FullName,      e.Gender FROM      Employee e JOIN      Person p ON e.BusinessEntityID = p.BusinessEntityID WHERE      e.StartDate = (SELECT MAX(StartDate) FROM Employee)     AND p.PersonType = 'SC'
SELECT      MIN(SickLeaveHours) AS min_sick_leave_hours FROM      Employee WHERE      SalariedFlag = 1 ORDER BY      min_sick_leave_hours LIMIT 1;  SELECT      PayFrequency, COUNT(*) AS frequency FROM      Employee WHERE      SalariedFlag = 1     AND SickLeaveHours = (SELECT MIN(SickLeaveHours) FROM Employee) GROUP BY      PayFrequency;
Error: 第 7042 个样本有 0 个SQL。
Error: 第 7043 个样本有 0 个SQL。
SELECT      CASE          WHEN ListPrice > 0 THEN              (ListPrice - StandardCost) AS Profit          ELSE              0      END AS Profit,      BOMLevel AS Depth FROM      ProductListPriceHistory      JOIN Product ON ProductListPriceHistory.ProductID = Product.ProductID      JOIN BillOfMaterials ON Product.ProductID = BillOfMaterials.ProductAssemblyID WHERE      ListPrice = (SELECT MAX(ListPrice) FROM ProductListPriceHistory)      OR ListPrice = (SELECT MIN(ListPrice) FROM ProductListPriceHistory WHERE ListPrice > 0)
SELECT v.Name, SUM(pnl.NetProfit) AS NetProfit FROM      ProductVendor pv      JOIN Product p ON pv.ProductID = p.ProductID     JOIN ProductListPriceHistory plph ON p.ProductID = plph.ProductID     JOIN PurchaseOrderDetail pod ON p.ProductID = pod.ProductID     JOIN PurchaseOrderHeader poh ON pod.PurchaseOrderID = poh.PurchaseOrderID     JOIN Vendor v ON poh.VendorID = v.BusinessEntityID     CROSS APPLY (SELECT StandardPrice - LastReceiptCost AS NetProfit FROM ProductVendor) AS pnl WHERE      v.CreditRating > 3 GROUP BY      v.Name ORDER BY      NetProfit DESC;
SELECT COUNT(*)  FROM BusinessEntityAddress  WHERE AddressID IN (     SELECT AddressID      FROM Address      WHERE AddressLine2 IS NULL )
SELECT PostalCode FROM Address WHERE AddressID IN (     SELECT BusinessEntityID     FROM BusinessEntity     WHERE rowguid IN (         SELECT BusinessEntityID         FROM BusinessEntityAddress         WHERE ModifiedDate = (             SELECT MAX(ModifiedDate)             FROM BusinessEntityAddress             WHERE BusinessEntityID IN (                 SELECT BusinessEntityID                 FROM BusinessEntity                 WHERE rowguid IN (                     SELECT BusinessEntityID                     FROM BusinessEntity                     WHERE ModifiedDate LIKE '2022-10-%'                 )             )         )     ) )
SELECT MAX(DATEDIFF(EndDate, StartDate)) AS LongestAssemblyItemDuration FROM BillOfMaterials WHERE ProductID IN (     SELECT ProductID     FROM Product     WHERE ProductNumber LIKE '%Bicycle%' )
SELECT COUNT(bom.ProductID) FROM BillOfMaterials bom WHERE bom.ProductAssemblyID IN (     SELECT p.ProductID     FROM Product p     WHERE p.Name LIKE '%bicycle%' ) AND bom.EndDate IS NULL;
SELECT      BOM.ComponentID,      BOM.UnitMeasureCode,      MAX(BOM.PerAssemblyQty) AS MaxPerAssemblyQty FROM      BillOfMaterials BOM GROUP BY      BOM.ComponentID,      BOM.UnitMeasureCode ORDER BY      MaxPerAssemblyQty DESC;
SELECT COUNT(*)  FROM Document  WHERE DocumentSummary IS NULL;
SELECT Title FROM Document WHERE Status = 1;
Error: 第 7053 个样本有 0 个SQL。
Error: 第 7054 个样本有 0 个SQL。
Error: 第 7055 个样本有 0 个SQL。
Error: 第 7056 个样本有 0 个SQL。
Error: 第 7057 个样本有 0 个SQL。
Error: 第 7058 个样本有 0 个SQL。
SELECT e.VacationHours FROM Employee e WHERE e.PayFrequency = 2 ORDER BY e.PayFrequency DESC LIMIT 1;
SELECT e.PayRate FROM Employee e WHERE e.VacationHours = (SELECT MAX(VacationHours) FROM Employee);
Error: 第 7061 个样本有 0 个SQL。
Error: 第 7062 个样本有 0 个SQL。
Error: 第 7063 个样本有 0 个SQL。
SELECT e.JobTitle FROM Employee e ORDER BY DATEDIFF(CURRENT_DATE, e.BirthDate) DESC LIMIT 1;
Error: 第 7065 个样本有 0 个SQL。
SELECT COUNT(*) FROM Employee WHERE MaritalStatus = 'M' AND NameStyle = '0'
SELECT COUNT(*) FROM Employee WHERE SickLeaveHours > 10 AND EmailPromotion IN (1, 2);
SELECT e.BusinessEntityID, e.FirstName, e.LastName FROM Employee e WHERE e.VacationHours > 20 AND e.EmailPromotion IN (1, 2)
SELECT      AdditionalContactInfo,      Demographics FROM      Person WHERE      PersonType = 'SP'     AND BirthDate = (SELECT MAX(BirthDate) FROM Person)
SELECT FirstName FROM Employee WHERE Gender = 'M' AND NameStyle = 0
SELECT COUNT(*) FROM Employee WHERE CurrentFlag = 1 AND Title LIKE 'Mr%';
SELECT e.* FROM Employee e JOIN EmployeePayHistory ep ON e.BusinessEntityID = ep.BusinessEntityID WHERE e.MaritalStatus = 'M' ORDER BY ep.Rate DESC LIMIT 1;
SELECT LastName, Suffix FROM Employee e JOIN Person p ON e.BusinessEntityID = p.BusinessEntityID WHERE e.PersonType = 'SC' AND e.SickLeaveHours = (SELECT MAX(SickLeaveHours) FROM Employee WHERE PersonType = 'SC')
SELECT COUNT(*) FROM Employee WHERE MaritalStatus = 'M' AND EmployeePayHistory.RateChangeDate IN (     SELECT MAX(RateChangeDate)     FROM EmployeePayHistory     GROUP BY BusinessEntityID ) AND NameStyle = 1;
Error: 第 7075 个样本有 0 个SQL。
SELECT CreditCardID FROM Person WHERE PersonType = 'SC'   AND BusinessEntityID IN (     SELECT BusinessEntityID     FROM Employee   )
SELECT AVG(VacationHours)  FROM Employee  WHERE PersonType = 'EM' AND Gender = 'M';
Error: 第 7078 个样本有 0 个SQL。
Error: 第 7079 个样本有 0 个SQL。
SELECT      (COUNT(BusinessEntityID)      FROM Employee      WHERE CurrentFlag = 1 AND VacationHours > 20 AND SickLeaveHours > 10)      * 100.0 /      (COUNT(BusinessEntityID)      FROM Employee      WHERE CurrentFlag = 1 AND SickLeaveHours > 10)
Error: 第 7081 个样本有 0 个SQL。
Error: 第 7082 个样本有 0 个SQL。
SELECT      (COUNT(BusinessEntityID) * 100.0 /       (SELECT COUNT(BusinessEntityID) FROM Employee WHERE Gender = 'M' AND YEAR(HireDate) = 2009)) AS Percentage FROM      Employee WHERE      Gender = 'M' AND YEAR(HireDate) = 2009 AND MaritalStatus = 'M';
SELECT      (DIVIDE(         COUNT(BusinessEntityID),          (SELECT COUNT(BusinessEntityID) FROM Person WHERE FirstName = 'Mary' AND EmailPromotion = 2 AND PersonType = 'SC')     )) * 100 AS Percentage
SELECT p.ProductID FROM Product p WHERE p.StandardPrice - p.LastReceiptCost < 0
SELECT AVG(TotalDue) AS AverageTotalDue FROM SalesOrderHeader WHERE Status = 2;
SELECT      (COUNT(SO.SalesOrderID) / (SELECT COUNT(*) FROM SalesOrderDetail)) * 100 FROM      SalesOrderDetail SO WHERE      SO.OrderQty < 3 AND SO.UnitPriceDiscount = 0.2
SELECT BusinessEntityID FROM SalesPerson WHERE DIVIDE(SUBTRACT(SalesYTD, SalesLastYear), SalesLastYear) > 0.6 AND Bonus > 3000;
SELECT      COUNT(CASE WHEN AddressTypeID = 2 THEN 1 ELSE NULL END) AS HomeAddress,     COUNT(CASE WHEN AddressTypeID = 5 THEN 1 ELSE NULL END) AS ShippingAddress FROM      BusinessEntityAddress
SELECT c.CustomerID FROM SalesOrderDetail sod JOIN SalesOrderHeader soh ON sod.SalesOrderID = soh.SalesOrderID JOIN Product p ON sod.ProductID = p.ProductID WHERE sod.OrderQty = 32 AND sod.UnitPrice = 35;
SELECT BusinessEntityID FROM CreditCard WHERE CardType = 'ColonialVoice' AND ExpMonth = 3 AND ExpYear = 2005
SELECT v.CreditRating FROM Vendor v JOIN ProductVendor pv ON v.BusinessEntityID = pv.BusinessEntityID WHERE pv.AverageLeadTime = 16 AND pv.StandardPrice = 18.9900 AND pv.LastReceiptDate >= '2011-08-17 00:00:00' AND pv.LastReceiptDate < '2011-08-18 00:00:00'
SELECT COUNT(DISTINCT p.ProductID) FROM Product p JOIN ProductCategory pc ON p.ProductCategoryID = pc.ProductCategoryID WHERE pc.Name IN ('Accessories', 'Components')
SELECT e.JobTitle FROM Employee e JOIN EmployeeDepartmentHistory edh ON e.BusinessEntityID = edh.BusinessEntityID WHERE edh.DepartmentID = 12 ORDER BY edh.StartDate DESC LIMIT 1;
SELECT e.FirstName, e.LastName FROM Employee e WHERE e.Gender = 'M' AND e.MaritalStatus = 'S' AND e.JobTitle LIKE '%Production Supervisor%';
Error: 第 7096 个样本有 0 个SQL。
Error: 第 7097 个样本有 0 个SQL。
SELECT SUM(sod.OrderQty)  FROM SalesOrderDetail sod  JOIN SalesOrderHeader soh ON sod.SalesOrderID = soh.SalesOrderID  JOIN Employee ep ON soh.SalesPersonID = ep.BusinessEntityID  WHERE ep.BusinessEntityID = 257 AND soh.Status = 3;
SELECT COUNT(DISTINCT p.ProductID) FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID JOIN SpecialOfferProduct sop ON p.ProductID = sop.ProductID WHERE sop.SpecialOfferID IS NOT NULL AND sod.OrderQty > 2
SELECT TransactionType FROM TransactionHistory WHERE ProductID IN (   SELECT ProductID   FROM Product   WHERE Color = 'Yellow' AND Size = '62' AND SafetyStockLevel = 500 )
SELECT psc.Name FROM ProductSubcategory psc JOIN Product p ON p.ProductSubcategoryID = psc.ProductSubcategoryID WHERE p.Color = 'gray' ORDER BY p.SafetyStockLevel LIMIT 1;
Error: 第 7102 个样本有 0 个SQL。
Error: 第 7103 个样本有 0 个SQL。
Error: 第 7104 个样本有 0 个SQL。
SELECT sr.Name FROM StateProvince sp JOIN SalesTerritory st ON sp.CountryRegionCode = st.CountryRegionCode WHERE st.TerritoryID = (     SELECT st2.TerritoryID     FROM SalesTerritory st2     ORDER BY (st2.SalesYTD - st2.SalesLastYear) / st2.SalesLastYear * 100 DESC     LIMIT 1 ) ORDER BY sr.Name;
SELECT COUNT(*) FROM EmployeePayHistory WHERE BusinessEntityID IN (SELECT BusinessEntityID FROM Employee) AND PayFrequency = 1 AND Rate > 50;
Error: 第 7107 个样本有 0 个SQL。
SELECT v.Name FROM Vendor v WHERE v.BusinessEntityID = 1492
SELECT COUNT(*) FROM Vendor WHERE BusinessEntityID IN (   SELECT BusinessEntityID   FROM ProductVendor   WHERE MinOrderQty > 500   AND MaxOrderQty < 15000 )
SELECT DepartmentID, Name FROM Department WHERE GroupName = 'Executive General and Administration'
Error: 第 7111 个样本有 0 个SQL。
Error: 第 7112 个样本有 0 个SQL。
SELECT TOP 3 ProductNumber FROM Product ORDER BY StandardCost ASC;
SELECT COUNT(*) FROM Product WHERE Color = 'Black' AND FinishedGoodsFlag = 0;
SELECT TOP 3 e.BusinessEntityID, e.JobTitle, MAX(e.SickLeaveHours) AS UnusedSickLeave FROM Employee e GROUP BY e.BusinessEntityID, e.JobTitle ORDER BY UnusedSickLeave DESC;
SELECT      AddressLine1 + ' ' + AddressLine2 AS FullAddress FROM      Address WHERE      AddressID = 11906
SELECT      SUM(SUBTRACT(PLH.StandardPrice, PV.LastReceiptCost)) AS NetProfit FROM      ProductListPriceHistory PLH INNER JOIN      ProductVendor PV ON PLH.ProductID = PV.ProductID WHERE      PLH.ProductID IN (         SELECT              ProductID         FROM              ProductVendor         WHERE              BusinessEntityID = 1580     )
SELECT SUM(soh.SubTotal - soh.TaxAmt - soh.Freight) AS SalesRevenue FROM SalesOrderHeader soh JOIN SalesOrderDetail sod ON soh.SalesOrderID = sod.SalesOrderID WHERE sod.ProductID = (SELECT ProductID FROM Product WHERE ProductNumber = '740') AND soh.BusinessEntityID = (SELECT BusinessEntityID FROM BusinessEntity WHERE BusinessEntityID = 1580)
Error: 第 7119 个样本有 0 个SQL。
SELECT v.BusinessEntityID FROM Vendor v JOIN ProductVendor pv ON v.BusinessEntityID = pv.BusinessEntityID WHERE v.CreditRating = 5;
Error: 第 7121 个样本有 0 个SQL。
SELECT c.Name FROM ContactType c INNER JOIN BusinessEntityContact bec ON c.ContactTypeID = bec.ContactTypeID INNER JOIN Person p ON bec.BusinessEntityID = p.BusinessEntityID WHERE p.BusinessEntityID = 18;
SELECT b.BusinessEntityID, b.Name FROM BusinessEntity b JOIN Employee e ON b.BusinessEntityID = e.BusinessEntityID JOIN PhoneNumber p ON e.BusinessEntityID = p.BusinessEntityID WHERE p.PhoneNumberTypeID IN (   SELECT PhoneNumberTypeID   FROM PhoneNumberType   WHERE Name = 'cell' ) ORDER BY b.BusinessEntityID LIMIT 3;
SELECT Name FROM Currency WHERE CurrencyCode IN (     SELECT CurrencyCode     FROM CountryRegionCurrency     WHERE CountryRegionCode IN (         SELECT CountryRegionCode         FROM CountryRegion         WHERE Name = 'Brazil'     ) )
SELECT COUNT(DISTINCT e.BusinessEntityID) FROM Employee e JOIN EmployeeDepartmentHistory edh ON e.BusinessEntityID = edh.BusinessEntityID JOIN Department d ON edh.DepartmentID = d.DepartmentID WHERE d.Name = 'Finance';
SELECT AVG(AverageLeadTime) AS AverageLeadTime FROM ProductVendor WHERE BusinessEntityID = 1496
SELECT      (SELECT COUNT(*) FROM Address WHERE Address.AddressLine1 LIKE '%Bothell%') -      (SELECT COUNT(*) FROM Address WHERE Address.AddressLine1 LIKE '%Kenmore%') AS difference,     (SELECT s.Name FROM StateProvince s WHERE s.StateProvinceID IN (SELECT a.StateProvinceID FROM Address a WHERE a.AddressLine1 LIKE '%Bothell%' OR a.AddressLine1 LIKE '%Kenmore%')) AS state_name
SELECT pm.Name FROM ProductModel pm JOIN ProductModelProductDescriptionCulture ppmdc ON pm.ProductModelID = ppmdc.ProductModelID JOIN Culture c ON ppmdc.CultureID = c.CultureID WHERE c.Name = 'English' AND pm.Name LIKE '%chromoly steel%'
SELECT      COUNT(DISTINCT b.BusinessEntityID) AS TotalCompanies,     s.Group AS GeographicalLocation FROM      SalesPerson sp JOIN      BusinessEntity b ON sp.BusinessEntityID = b.BusinessEntityID JOIN      SalesTerritory st ON sp.TerritoryID = st.TerritoryID JOIN      SalesTerritoryGroup s ON st.Group = s.TerritoryGroupID WHERE      sp.CommissionPct >= 0.018 GROUP BY      s.Group;
SELECT PhoneNumberTypeID, COUNT(*) AS Count FROM PhoneNumberType GROUP BY PhoneNumberTypeID ORDER BY Count DESC;
SELECT      ContactTypeID,      COUNT(*) as Count FROM      BusinessEntityContact GROUP BY      ContactTypeID ORDER BY      Count DESC LIMIT 1;
Error: 第 7132 个样本有 0 个SQL。
SELECT e.JobTitle FROM Employee e WHERE e.LastName = 'Suchitra';
SELECT COUNT(*) FROM Employee WHERE BusinessEntityID IN (   SELECT BusinessEntityID   FROM Person   WHERE PersonType = 'EM'   AND MaritalStatus = 'S' )
SELECT      (COUNT(CASE WHEN Culture.Name = 'English' THEN 1 ELSE NULL END) -       COUNT(CASE WHEN Culture.Name = 'Arabic' THEN 1 ELSE NULL END)) AS English_Arabic_Difference FROM      works_cycles.Culture WHERE      Culture.Name IN ('English', 'Arabic');
Error: 第 7136 个样本有 0 个SQL。
SELECT be.BusinessEntityID, be.AccountNumber FROM BusinessEntity be JOIN BusinessEntityAddress bea ON be.BusinessEntityID = bea.BusinessEntityID JOIN Address a ON bea.AddressID = a.AddressID WHERE a.City = 'Duvall'
SELECT      (COUNT(CASE WHEN c.Name = 'Thai' THEN 1 ELSE NULL END) /       (SELECT COUNT(*) FROM Culture)) * 100 AS Percentage FROM      Culture c;
SELECT (COUNT(Gender = 'M') * 100.0 / COUNT(PersonType = 'EM')) AS PercentageOfMen FROM Person WHERE PersonType = 'EM';
SELECT      a.AddressLine1,      a.City,      sp.Name AS StateName FROM      Address a JOIN      StateProvince sp ON a.StateProvinceID = sp.StateProvinceID WHERE      a.AddressID = '15873'     AND a.IsOnlyStateProvinceCode = '0'
SELECT AddressLine1 + ' ' + AddressLine2 AS FullAddress FROM BusinessEntityAddress WHERE BusinessEntityID = 24
SELECT      YEAR(ModifiedDate) AS ExpirationYear FROM      CreditCard WHERE      CardNumber = '9648'
Error: 第 7143 个样本有 0 个SQL。
Error: 第 7144 个样本有 0 个SQL。
SELECT DepartmentID FROM Department WHERE GroupName = 'Sales and Marketing'
Error: 第 7146 个样本有 0 个SQL。
Error: 第 7147 个样本有 0 个SQL。
SELECT Name FROM ContactType WHERE ContactTypeID = 16;
SELECT MIN(ShipBase) FROM ShipMethod WHERE Name = 'OVERSEAS - DELUXE';
SELECT Name FROM Culture WHERE CultureID = 'fr';
SELECT CurrencyCode FROM Currency WHERE Name = 'Mauritius Rupee';
SELECT p.FirstName, p.LastName, ph.PhoneNumberType, ph.PhoneNumber FROM Person p JOIN BusinessEntityContact bec ON p.BusinessEntityID = bec.BusinessEntityID JOIN PhoneNumberType ph ON bec.PhoneTypeID = ph.PhoneTypeID WHERE p.FirstName = 'Cell'
Error: 第 7153 个样本有 0 个SQL。
Error: 第 7154 个样本有 0 个SQL。
Error: 第 7155 个样本有 0 个SQL。
Error: 第 7156 个样本有 0 个SQL。
SELECT      UnitMeasureCode FROM      BillOfMaterials WHERE      ProductAssemblyID IN (         SELECT              ProductAssemblyID         FROM              BillOfMaterials         WHERE              ComponentID = 494 AND EndDate IS NULL     )
SELECT COUNT(*)  FROM Document  WHERE DocumentSummary IS NULL  AND EXISTS (   SELECT 1    FROM Employee    WHERE JobTitle = 'Document Control Assistant'    AND BirthDate = '1975-12-25'   AND EmployeeID = Document.Owner )
SELECT p.ProductID, plph.ListPrice FROM ProductListPriceHistory plph JOIN Product p ON plph.ProductID = p.ProductID WHERE plph.StartDate >= '2012-10-01' AND plph.ListPrice =      (SELECT StandardCost + 21.9037      FROM ProductCostHistory      WHERE StartDate = '2012-05-01' AND EndDate = '2012-05-31') ORDER BY plph.ListPrice;
Error: 第 7160 个样本有 0 个SQL。
Error: 第 7161 个样本有 0 个SQL。
Error: 第 7162 个样本有 0 个SQL。
Error: 第 7163 个样本有 0 个SQL。
SELECT CASE     WHEN Bonus = 0 THEN 'No'     ELSE 'Yes' END AS 'Did Rachel Valdez complete her sales task' FROM SalesPerson WHERE FirstName = 'Rachel' AND LastName = 'Valdez';
Error: 第 7165 个样本有 0 个SQL。
SELECT EmailAddress FROM Person WHERE FirstName = 'Kevin' AND LastName = 'Wright';
Error: 第 7167 个样本有 0 个SQL。
SELECT TransactionType FROM TransactionHistoryArchive WHERE ProductID = (SELECT ProductID FROM Product WHERE Name = 'HL Road Frame - Black, 48') AND TransactionDate = '2012-12-13';
Error: 第 7169 个样本有 0 个SQL。
SELECT CreditRating FROM Vendor WHERE BusinessEntityID IN (   SELECT BusinessEntityID   FROM BusinessEntity   WHERE rowguid = '33671A4E-DF2B-4879-807B-E3F930DD5C0C' )
Error: 第 7171 个样本有 0 个SQL。
Error: 第 7172 个样本有 0 个SQL。
SELECT PhoneNumber FROM Person WHERE FirstName = 'Gerald' AND LastName = 'Patel'
Error: 第 7174 个样本有 0 个SQL。
SELECT e.Title FROM Employee e WHERE e.FirstName = 'Lynn' AND e.LastName = 'Tsoflias';
Error: 第 7176 个样本有 0 个SQL。
Error: 第 7177 个样本有 0 个SQL。
SELECT      DIVIDE(SUBTRACT(p.LastReceiptCost, p.StandardPrice), p.StandardPrice) AS profit_ratio FROM      ProductVendor p WHERE      p.ProductID IN (         SELECT              p.ProductID         FROM              Product p         WHERE              p.Name = 'HL Grip Tape'     )
SELECT      DIVIDE(COUNT(PhoneNumberTypeID = 1), (COUNT(PhoneNumberTypeID)), 0) AS percentage FROM      PhoneNumberType
SELECT BillOfMaterialsID FROM BillOfMaterials WHERE UnitMeasureCode = 'EA' AND BOMLevel = 2 AND PerAssemblyQty > 10
Error: 第 7181 个样本有 0 个SQL。
SELECT ProductID, StockedQty FROM WorkOrder WHERE LocationID = 40
SELECT      [UnitMeasureCode],      SUM([PerAssemblyQty]) AS TotalPerAssemblyQuantity FROM      [BillOfMaterials] WHERE      [UnitMeasureCode] IN ('EA', 'IN', 'OZ') GROUP BY      [UnitMeasureCode]
SELECT ProductID FROM Product WHERE ProductID NOT IN (SELECT ProductID FROM WorkOrder)
Error: 第 7185 个样本有 0 个SQL。
SELECT Person.FirstName + ' ' + Person.MiddleName + ' ' + Person.LastName AS FullAccountantName FROM Person WHERE PersonType = 'B' AND JobTitle = 'Accountant'
SELECT JobTitle FROM Employee WHERE FirstName = 'Ken' AND LastName = 'Sánchez';
SELECT COUNT(*) FROM Employee WHERE Gender = 'M' AND EmailPromotion = 0
SELECT TOP 1      sp.BusinessEntityID,      sp.SalesPersonID,      SUM(sph.SalesQuota) AS SalesQuota,      SUM(sph.SalesLastYear) AS SalesLastYear,      (SUM(sph.SalesLastYear) / SUM(sph.SalesQuota)) * 100 AS percentage FROM      SalesPersonQuotaHistory sph     INNER JOIN SalesPerson sp ON sph.BusinessEntityID = sp.BusinessEntityID WHERE      YEAR(sph.QuotaDate) = 2013 GROUP BY      sp.BusinessEntityID,      sp.SalesPersonID ORDER BY      percentage DESC;
SELECT COUNT(*)  FROM Employee  WHERE PersonType = 'EM' AND MaritalStatus = 'M';
Error: 第 7191 个样本有 0 个SQL。
Error: 第 7192 个样本有 0 个SQL。
SELECT BusinessEntityID, FirstName, LastName FROM Person WHERE PersonType = 'SP' AND YEAR(HireDate) < 2010
SELECT TOP 1      sp.FirstName,      sp.LastName,      sh.SalesYTD,      sq.SalesQuota FROM      SalesPerson sp INNER JOIN      SalesPersonQuotaHistory sq ON sp.BusinessEntityID = sq.BusinessEntityID INNER JOIN      SalesTerritory st ON sp.TerritoryID = st.TerritoryID INNER JOIN      SalesOrderHeader sh ON sp.BusinessEntityID = sh.SalesPersonID WHERE      sp.PersonType = 'SP'     AND sq.QuotaDate = '2011-01-01' ORDER BY      sh.SalesYTD DESC;
SELECT COUNT(*) FROM Employee WHERE FirstName = 'Alex' AND MaritalStatus = 'S' AND OrganizationLevel = 1;
SELECT AVG(VacationHours)  FROM Employee  WHERE PersonType = 'SC'
SELECT e.LastName, e.JobTitle FROM Employee e JOIN BusinessEntityAddress bea ON e.BusinessEntityID = bea.BusinessEntityID JOIN Document d ON bea.AddressID = d.DocumentNode WHERE d.FileName = 'Crank Arm and Tire Maintenance';
SELECT COUNT(*) AS EmployeeCount, OrganizationLevel FROM Employee WHERE Suffix IS NULL GROUP BY OrganizationLevel
SELECT BusinessEntityID FROM SalesPerson WHERE SalesQuota = (SELECT AVG(SalesQuota) FROM SalesPersonQuotaHistory WHERE year(QuotaDate) = 2013) AND TerritoryID = 1;
Error: 第 7200 个样本有 0 个SQL。
Error: 第 7201 个样本有 0 个SQL。
Error: 第 7202 个样本有 0 个SQL。
SELECT SUM(SalesQuota) AS ProjectedSalesQuota FROM SalesPersonQuotaHistory WHERE BusinessEntityID = 275 AND YEAR(QuotaDate) = 2013 UNION ALL SELECT SUM(SalesYTD) AS SalesYTD FROM SalesPerson WHERE BusinessEntityID = 275;
SELECT BusinessEntityID FROM SalesPerson WHERE Year(QuotaDate) = 2013 AND SalesQuota > SalesYTD;
Error: 第 7205 个样本有 0 个SQL。
SELECT      SUM(CASE WHEN MaritalStatus = 'M' AND PersonType = 'EM' THEN 1 ELSE 0 END) AS MarriedNonSales,     SUM(CASE WHEN MaritalStatus = 'S' AND PersonType = 'EM' THEN 1 ELSE 0 END) AS SingleNonSales FROM      Employee WHERE      PersonType = 'EM';
SELECT      SUM(Bonus) AS TotalBonus,     (SUM(Bonus) / SUM(CASE WHEN YEAR(QuotaDate) = 2013 THEN SalesQuota ELSE 0 END)) * 100 AS Percentage FROM      SalesPerson WHERE      YEAR(QuotaDate) = 2013;
SELECT COUNT(*) AS Vista_Card_Count FROM CreditCard WHERE CardType = 'Vista';
SELECT Name FROM Product WHERE ProductID = 475;
Error: 第 7210 个样本有 0 个SQL。
SELECT s.Name FROM Store s INNER JOIN SalesPerson sp ON s.SalesPersonID = sp.BusinessEntityID WHERE sp.BusinessEntityID = 277;
SELECT COUNT(*)  FROM TransactionHistory  WHERE ProductID = 989    AND TransactionDate BETWEEN '2013-08-01' AND '2013-08-30'    AND TransactionType = 'S';
SELECT *  FROM CreditCard  WHERE ExpYear = 2007;
Error: 第 7214 个样本有 0 个SQL。
SELECT s.Name FROM SalesTerritory t INNER JOIN SalesPerson sp ON t.TerritoryID = sp.TerritoryID WHERE sp.BusinessEntityID = 277;
SELECT FirstName + ' ' + MiddleName + ' ' + LastName AS 'Full Name' FROM Employee WHERE JobTitle = 'Vice President of Production';
Error: 第 7217 个样本有 0 个SQL。
SELECT PurchaseOrderHeader.PurchaseOrderID FROM Vendor JOIN ProductVendor ON Vendor.BusinessEntityID = ProductVendor.BusinessEntityID WHERE Vendor.CreditRating = 5;
SELECT      CASE          WHEN PhoneNumber = '114-555-0100'              AND PhoneNumberType.Name = 'Work'         THEN 'Work'         WHEN PhoneNumber = '114-555-0100'              AND PhoneNumberType.Name = 'Home'         THEN 'Home'         ELSE 'Unknown'     END AS PhoneType FROM      PhoneNumberType WHERE      PhoneNumber = '114-555-0100';
SELECT SUM(Freight)  FROM PurchaseOrderHeader  WHERE ShipMethodID IN (SELECT ShipMethodID FROM ShipMethod WHERE Name = 'Catgo Transport 5')  AND OrderDate = '2011-12-14';
Error: 第 7221 个样本有 0 个SQL。
Error: 第 7222 个样本有 0 个SQL。
Error: 第 7223 个样本有 0 个SQL。
SELECT      a.AddressLine1 + ' ' + a.AddressLine2 + ', ' + c.City FROM      SalesOrderHeader soh INNER JOIN      SalesOrderDetail sod ON soh.SalesOrderID = sod.SalesOrderID INNER JOIN      Address b ON soh.ShipToAddressID = b.AddressID INNER JOIN      Address a ON soh.BillToAddressID = a.AddressID INNER JOIN      StateProvince sp ON a.StateProvinceID = sp.StateProvinceID INNER JOIN      City c ON a.City = c.City WHERE      soh.SalesOrderID = 43873;
SELECT FirstName FROM Person WHERE BusinessEntityID IN (SELECT BusinessEntityID FROM Employee WHERE SickLeaveHours > 65);
SELECT COUNT(*) FROM EmployeePayHistory WHERE Rate < (SELECT AVG(Rate) FROM EmployeePayHistory) AND JobTitle = 'Production Technician';
SELECT      (SUM(CASE WHEN SalesTerritory.CountryRegionCode = 'UK' THEN 1 ELSE 0 END) / COUNT(SalesOrderID)) AS proportion FROM      SalesOrderHeader     INNER JOIN SalesTerritory ON SalesOrderHeader.TerritoryID = SalesTerritory.TerritoryID
SELECT ModifiedDate FROM PhoneNumberType WHERE PhoneNumberTypeID = 'PhoneNumberTypeID of the phone number "1500 555-0143"';
SELECT BusinessEntityID FROM SalesPerson WHERE SalesYTD = (SELECT MAX(SalesYTD) FROM SalesPerson)
Error: 第 7230 个样本有 0 个SQL。
Error: 第 7231 个样本有 0 个SQL。
Error: 第 7232 个样本有 0 个SQL。
Error: 第 7233 个样本有 0 个SQL。
SELECT Person.FirstName + ' ' + Person.MiddleName + ' ' + Person.LastName AS FullName FROM Person WHERE Person.Title = 'Production Technician - WC50';
Error: 第 7235 个样本有 0 个SQL。
SELECT p.BusinessEntityID FROM Person p JOIN PersonCreditCard pc ON p.BusinessEntityID = pc.BusinessEntityID JOIN CreditCard c ON pc.CreditCardID = c.CreditCardID WHERE c.CardNumber = '11113366963373';
SELECT a.AddressLine1, a.AddressLine2, a.City, a.PostalCode FROM Person p INNER JOIN BusinessEntityContact bec ON p.BusinessEntityID = bec.BusinessEntityID INNER JOIN EmailAddress ea ON bec.PersonID = ea.PersonID INNER JOIN Address a ON ea.BusinessEntityID = a.AddressID INNER JOIN AddressType at ON a.AddressTypeID = at.AddressTypeID WHERE p.BusinessEntityID = '5555' AND at.Name = 'Home'
SELECT p.Name FROM Product p JOIN SpecialOfferProduct sop ON p.ProductID = sop.ProductID JOIN SpecialOffer so ON sop.SpecialOfferID = so.SpecialOfferID WHERE so.DiscountPct = 15;
SELECT c.CardNumber FROM Person p JOIN BusinessEntityContact bec ON p.BusinessEntityID = bec.BusinessEntityID JOIN EmailAddress ea ON bec.BusinessEntityID = ea.BusinessEntityID JOIN Employee e ON p.BusinessEntityID = e.BusinessEntityID JOIN CreditCard cc ON e.BusinessEntityID = cc.BusinessEntityID WHERE p.FirstName = 'Michelle' AND p.LastName = 'Cox';
SELECT sr.Name FROM SalesOrderHeader soh JOIN SalesOrderHeaderSalesReason sohsr ON soh.SalesOrderID = sohsr.SalesOrderID JOIN SalesReason sr ON sohsr.SalesReasonID = sr.SalesReasonID WHERE soh.SalesOrderID = 51883;
SELECT CreditCard.CardNumber FROM SalesOrderHeader JOIN CreditCard ON SalesOrderHeader.CreditCardID = CreditCard.CreditCardID WHERE SalesOrderID = 45793;
SELECT s.BusinessEntityID, s.Title, s.FirstName, s.LastName FROM SalesPerson s JOIN SalesTerritory st ON s.TerritoryID = st.TerritoryID WHERE st.CountryRegionCode = 'US' AND st.Name = 'Northwest';
Error: 第 7243 个样本有 0 个SQL。
SELECT p.FirstName + ISNULL(p.MiddleName, '') + p.LastName AS FullName FROM SalesPerson sp INNER JOIN Person p ON sp.BusinessEntityID = p.BusinessEntityID WHERE sp.TerritoryID = 9
SELECT d.Description FROM ProductModel pm JOIN ProductModelProductDescriptionCulture pmcdc ON pm.ProductModelID = pmcdc.ProductModelID JOIN ProductDescription pd ON pmcdc.ProductDescriptionID = pd.ProductDescriptionID JOIN SpecialOffer so ON pm.ProductModelID = so.ProductID WHERE pm.ProductModelID = 762;
SELECT      AVG(Rate) AS Male_Avg_Rate,     AVG(CASE WHEN Gender = 'F' THEN Rate ELSE NULL END) AS Female_Avg_Rate,     (AVG(CASE WHEN Gender = 'F' THEN Rate ELSE NULL END) - AVG(Rate)) AS diff FROM      Employee WHERE      Gender IN ('M', 'F');
SELECT      SUM(CASE WHEN Shift.Name = 'Night' THEN 1 ELSE 0 END) / COUNT(Shift.ShiftID) * 100 AS Percentage FROM      Employee     INNER JOIN Shift ON Employee.ShiftID = Shift.ShiftID WHERE      Employee.JobTitle = 'Employee';
Error: 第 7248 个样本有 0 个SQL。
SELECT TOP 5 p.ProductID, p.Name, MAX(plph.ListPrice) AS HighestSellingPrice FROM Product p JOIN ProductListPriceHistory plph ON p.ProductID = plph.ProductID GROUP BY p.ProductID, p.Name ORDER BY HighestSellingPrice DESC;
Error: 第 7250 个样本有 0 个SQL。
SELECT JobTitle FROM Employee WHERE HireDate BETWEEN '2007-1-1' AND '2007-12-31' GROUP BY JobTitle ORDER BY COUNT(JobTitle) DESC LIMIT 1;
SELECT TOP 1      v.BusinessEntityID,      v.Name,      SUM(pnl.StandardPrice - pnl.LastReceiptCost) AS ProfitOnNet FROM      ProductVendor pnl INNER JOIN      Vendor v ON pnl.BusinessEntityID = v.BusinessEntityID GROUP BY      v.BusinessEntityID,      v.Name ORDER BY      SUM(pnl.StandardPrice - pnl.LastReceiptCost) DESC;
SELECT COUNT(DISTINCT d.DepartmentID)  FROM EmployeeDepartmentHistory edh  JOIN Department d ON edh.DepartmentID = d.DepartmentID  WHERE edh.BusinessEntityID IN (SELECT BusinessEntityID FROM Employee WHERE LastName = 'Ward' AND FirstName = 'Sheela')  AND year(edh.StartDate) BETWEEN 2011 AND 2012  AND year(edh.EndDate) BETWEEN 2011 AND 2012;
SELECT AVG(DATEDIFF(2009, YEAR(Employee.HireDate))) AS AverageAge FROM Employee WHERE YEAR(Employee.HireDate) <= 2009;
SELECT d.Name, e.DepartmentID FROM Department d JOIN (     SELECT DepartmentID, COUNT(*) AS Count     FROM Employee     GROUP BY DepartmentID     ORDER BY Count ASC     LIMIT 1 ) e ON d.DepartmentID = e.DepartmentID
Error: 第 7256 个样本有 0 个SQL。
SELECT      v.Name AS VendorName,      SUM(soh.TotalDue) AS TotalAmountDue FROM      PurchaseOrderHeader poh JOIN      PurchaseOrderDetail pod ON poh.PurchaseOrderID = pod.PurchaseOrderID JOIN      Product p ON pod.ProductID = p.ProductID JOIN      ProductVendor pv ON p.ProductID = pv.ProductID JOIN      Vendor v ON pv.BusinessEntityID = v.BusinessEntityID JOIN      SalesOrderHeader soh ON soh.PurchaseOrderID = poh.PurchaseOrderID WHERE      v.UnitPrice = (SELECT MIN(UnitPrice) FROM Product) GROUP BY      v.Name
SELECT e.BusinessEntityID, DATEDIFF(YEAR, e.BirthDate, e.HireDate) AS AgeAtHire FROM Employee e JOIN PurchaseOrderHeader po ON e.BusinessEntityID = po.EmployeeID WHERE po.TotalDue - po.Freight = (SELECT MAX(po1.TotalDue - po1.Freight) FROM PurchaseOrderHeader po1);
SELECT      e.BusinessEntityID,      e.FirstName + ' ' + e.MiddleName + ' ' + e.LastName AS FullName,      e.Salary FROM      Employee e WHERE      e.Salary = (SELECT                      PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY e.Salary)                  FROM                      Employee e) ORDER BY      e.Salary DESC LIMIT 1;
SELECT p.Name FROM Product p JOIN ProductReview pr ON p.ProductID = pr.ProductID JOIN Employee e ON pr.ReviewerName = e.LastName + ', ' + e.FirstName WHERE pr.Rating = 5 AND e.LastName + ', ' + e.FirstName = 'Smith, John' ORDER BY p.Name;
Error: 第 7261 个样本有 0 个SQL。
Error: 第 7262 个样本有 0 个SQL。
SELECT      DATEDIFF(YEAR, MIN(HireDate), '2011-12-31') AS LengthOfStay FROM      Employee WHERE      Status = 1     AND HireDate <= '2011-12-31'
SELECT TOP 1      p.Name,      p.ProductNumber,      p.DaysToManufacture FROM      Product p WHERE      p.Class = 'M'      AND p.Rating = 2 ORDER BY      p.Rating DESC;
SELECT      jft.JobTitle AS 'Job Position',      p.FirstName + ' ' + p.MiddleName + ' ' + p.LastName AS 'Full Name' FROM      JobCandidate jc INNER JOIN      Employee e ON jc.BusinessEntityID = e.BusinessEntityID INNER JOIN      Person p ON e.BusinessEntityID = p.BusinessEntityID INNER JOIN      JobTitle jft ON e.JobTitle = jft.JobTitle ORDER BY      jft.JobTitle ASC LIMIT 1;
Error: 第 7266 个样本有 0 个SQL。
SELECT      (AVG(Rate) WHERE Gender = 'F') - (AVG(Rate) WHERE Gender = 'M') AS AverageSalaryDifference FROM      Employee WHERE      Gender IN ('F', 'M');
SELECT v.Name FROM Vendor v JOIN ProductVendor pv ON v.BusinessEntityID = pv.BusinessEntityID JOIN Product p ON pv.ProductID = p.ProductID WHERE p.MakeFlag = 0 AND p.Style = 'W' AND p.ProductSubcategoryID = 'Tights'
SELECT      COUNT(*)  FROM      EmployeePayHistory  WHERE      PayFrequency = 1 AND      BusinessEntityID IN (         SELECT              BusinessEntityID          FROM              Employee          WHERE              JobTitle LIKE '%Scheduling Assistant%'          AND              HireDate = (                 SELECT                      MIN(HireDate)                  FROM                      Employee                  WHERE                      JobTitle LIKE '%Scheduling Assistant%'             )     )
SELECT      p.Class,      p.ProductLine,      plh.ListPrice FROM      Product p JOIN      ProductListPriceHistory plh ON p.ProductID = plh.ProductID JOIN      ShoppingCartItem sci ON p.ProductID = sci.ProductID WHERE      sci.OnlineOrderFlag = 1 GROUP BY      p.Class,      p.ProductLine,      plh.ListPrice ORDER BY      MIN(sci.Quantity) LIMIT 1;
SELECT FirstName + ' ' + MiddleName + ' ' + LastName AS FullName FROM SalesPerson WHERE CommissionPct = (SELECT MAX(CommissionPct) FROM SalesPerson)
Error: 第 7272 个样本有 0 个SQL。
SELECT TOP 1      p.Name AS ProductName,      SUM((p.ListPrice - p.StandardCost) * od.Quantity) AS TotalProfit FROM      Product p JOIN      ProductInventory pi ON p.ProductID = pi.ProductID JOIN      SalesOrderDetail od ON pi.ProductID = od.ProductID WHERE      od.OnlineOrderFlag = 1 GROUP BY      p.Name ORDER BY      SUM((p.ListPrice - p.StandardCost) * od.Quantity) DESC;
SELECT      MAX(Difference) AS Highest_Difference,     VendorID FROM      (         SELECT              PurchaseOrderID,              VendorID,              OrderQty,              ReceivedQty,              (OrderQty - ReceivedQty) AS Difference         FROM              PurchaseOrderDetail     ) AS Subquery GROUP BY      VendorID ORDER BY      Highest_Difference DESC;
SELECT      AVG(averageleadtime) AS AverageLeadTime,     (standardprice - lastreceiptcost) AS ProfitOnNet,     address.AddressLine1 + ' ' + address.AddressLine2 + ', ' + city + ' ' + postalcode AS FullLocation FROM      ProductVendor INNER JOIN      Product ON ProductVendor.ProductID = Product.ProductID INNER JOIN      Address ON Product.VendorID = Address.AddressID WHERE      Product.ProductID = 843 GROUP BY      Product.ProductID
Error: 第 7276 个样本有 0 个SQL。
SELECT COUNT(*) FROM SalesTaxRate WHERE TaxType = 1 AND Name LIKE '%+%';
SELECT MAX(ActualCost) AS HighestProductCost FROM TransactionHistoryArchive WHERE TransactionType = 'P';
SELECT Status FROM SalesOrderHeader WHERE Freight = (SELECT MAX(Freight) FROM SalesOrderHeader);
SELECT COUNT(*)  FROM ProductInventory  WHERE Quantity = 0;
SELECT      p.ProductID,      p.Name,      (p.StandardPrice - pl.LastReceiptCost) AS ProfitOnNet FROM      Product p JOIN      ProductVendor pv ON p.ProductID = pv.ProductID JOIN      ProductListPriceHistory pl ON p.ProductID = pl.ProductID WHERE      pl.EndDate IS NULL ORDER BY      ProfitOnNet DESC LIMIT 1;
Error: 第 7282 个样本有 0 个SQL。
SELECT p.ProductID, COUNT(p.ProductID) as MaxReviews FROM ProductReview p GROUP BY p.ProductID ORDER BY MaxReviews DESC LIMIT 1;
SELECT COUNT(*) FROM ProductReview WHERE ProductID IN (   SELECT ProductID   FROM SalesOrderDetail   WHERE MakeFlag = 0 ) AND Rating < 5
Error: 第 7285 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Product p  JOIN ProductReview pr ON p.ProductID = pr.ProductID  WHERE p.MakeFlag = 1 AND p.FinishedGoodsFlag = 1 AND pr.Rating > 10;
Error: 第 7287 个样本有 0 个SQL。
Error: 第 7288 个样本有 0 个SQL。
Error: 第 7289 个样本有 0 个SQL。
SELECT EmailAddress FROM Person p JOIN ProductReview pr ON p.BusinessEntityID = pr.ReviewerID WHERE p.PersonType = 'P' AND pr.ProductID IN (     SELECT ProductID     FROM Product     WHERE Class = 'H' AND Style = 'M' )
Error: 第 7291 个样本有 0 个SQL。
Error: 第 7292 个样本有 0 个SQL。
Error: 第 7293 个样本有 0 个SQL。
SELECT v.StandardPrice FROM ProductVendor pv JOIN Product p ON p.ProductID = pv.ProductID JOIN Vendor v ON v.BusinessEntityID = pv.BusinessEntityID WHERE p.Name = 'Hex Nut 5';
SELECT COUNT(*) FROM Vendor WHERE BusinessEntityID IN (   SELECT BusinessEntityID   FROM ProductVendor   WHERE ProductID IN (     SELECT ProductID     FROM Product     WHERE Name = 'Hex Nut 5'   )   AND CreditRating BETWEEN 1 AND 3 )
SELECT v.PurchasingWebServiceURL FROM Vendor v JOIN ProductVendor pv ON v.BusinessEntityID = pv.BusinessEntityID JOIN Product p ON pv.ProductID = p.ProductID WHERE p.ProductID = 'Hex Nut 5';
SELECT v.Name FROM ProductVendor pv JOIN Vendor v ON pv.BusinessEntityID = v.BusinessEntityID WHERE pv.ProductID = (SELECT p.ProductID FROM Product p WHERE p.Name = 'Hex Nut 5') ORDER BY pv.StandardPrice LIMIT 1;
SELECT COUNT(*) FROM Product p JOIN ProductVendor pv ON p.ProductID = pv.ProductID JOIN Vendor v ON pv.BusinessEntityID = v.BusinessEntityID WHERE p.Class = 'H' AND v.PreferredVendorStatus = 1;
SELECT plh.ListPrice FROM ProductListPriceHistory plh JOIN Product p ON plh.ProductID = p.ProductID WHERE p.Name = 'LL Fork';
Error: 第 7300 个样本有 0 个SQL。
Error: 第 7301 个样本有 0 个SQL。
SELECT EmailAddress FROM ProductReview WHERE ProductID IN (     SELECT ProductID     FROM Product     WHERE Name = 'HL Mountain Pedal' ) AND Rating = 1;
SELECT COUNT(*)  FROM Product p  WHERE p.DaysToManufacture > 2 AND (p.OnOrderQty = 0 OR p.OnOrderQty IS NULL)
SELECT p.ProductID, p.Name FROM Product p WHERE p.MakeFlag = 1 AND (p.OnOrderQty = 0 OR p.OnOrderQty IS NULL) AND p.DaysToManufacture > 2
SELECT COUNT(*)  FROM Product p  JOIN ProductReview pr ON p.ProductID = pr.ProductID  WHERE p.FinishedGoodsFlag = 1 AND p.ProductLine = 'M'  GROUP BY p.ProductID  ORDER BY COUNT(*) DESC  LIMIT 1;
SELECT      AVG(Sum(StandardPrice) / COUNT(BusinessEntityID)) AS AverageSellingPrice FROM      ProductVendor     JOIN Product ON Product.ProductID = ProductVendor.ProductID WHERE      Product.ProductNumber = 'Hex Nut 5';
SELECT ProductID, AVG(Rating) AS AverageRating FROM ProductReview WHERE ProductID IN (     SELECT ProductID     FROM Product     WHERE ProductLine = 'M' ) GROUP BY ProductID ORDER BY AverageRating DESC LIMIT 1;
SELECT TOP 3 p.Name, AVG(pr.Rating) AS AverageRating FROM Product p JOIN ProductReview pr ON p.ProductID = pr.ProductID WHERE p.MakeFlag = 1 GROUP BY p.Name ORDER BY AverageRating DESC;
Error: 第 7309 个样本有 0 个SQL。
SELECT p.FirstName, p.LastName FROM Person p JOIN BusinessEntityContact bec ON p.BusinessEntityID = bec.BusinessEntityID JOIN BusinessEntity be ON bec.BusinessEntityID = be.BusinessEntityID WHERE p.PersonType = 'IN' AND p.LastName = 'Anderson'
SELECT e.FirstName, e.LastName, e.HireDate FROM Employee e WHERE e.EndDate IS NOT NULL
Error: 第 7312 个样本有 0 个SQL。
SELECT e.FirstName, e.LastName FROM Employee e WHERE e.MaritalStatus = 'M' AND e.VacationHours < 20;
SELECT      E.FirstName,      E.LastName,      DATEDIFF(2022, E.BirthDate) + 1 AS Age FROM      Employee E JOIN      Shift S ON E.ShiftID = S.ShiftID WHERE      S.ShiftID = 3 ORDER BY      E.BirthDate LIMIT 1;
SELECT e.* FROM Employee e JOIN EmployeeDepartmentHistory edh ON e.BusinessEntityID = edh.BusinessEntityID JOIN Department d ON edh.DepartmentID = d.DepartmentID WHERE d.Name = 'Shipping and Receiving' AND YEAR(e.HireDate) = 2009;
SELECT      e.JobTitle,      d.Name AS DepartmentName FROM      Employee e JOIN      EmployeeDepartmentHistory edh ON e.BusinessEntityID = edh.BusinessEntityID JOIN      Department d ON edh.DepartmentID = d.DepartmentID WHERE      e.BirthDate = (SELECT MIN(BirthDate) FROM Employee)
Error: 第 7317 个样本有 0 个SQL。
SELECT TOP 1 e.FirstName + ' ' + e.LastName AS EmployeeName, ep.Rate AS PayRate FROM EmployeePayHistory ep JOIN Employee e ON ep.BusinessEntityID = e.BusinessEntityID WHERE e.JobTitle <> 'Chief Executive Officer' ORDER BY ep.Rate DESC;
Error: 第 7319 个样本有 0 个SQL。
SELECT p.Name FROM Product p JOIN ProductVendor pv ON p.ProductID = pv.ProductID JOIN Vendor v ON pv.BusinessEntityID = v.BusinessEntityID WHERE v.Name = 'Australia Bike Retailer' ORDER BY p.ProductID;
SELECT v.BusinessEntityID, v.AccountNumber, p.ProductID,         MAX(pn.StandardPrice - p.LastReceiptCost) AS BestProfitOnNet FROM ProductVendor p JOIN Vendor v ON p.BusinessEntityID = v.BusinessEntityID WHERE p.ProductID = 342 GROUP BY v.BusinessEntityID, v.AccountNumber, p.ProductID;
SELECT      MAX(Rate) AS CurrentPayrate,     (MAX(Rate) - MIN(Rate)) / MIN(Rate) * 100 AS PercentageIncrement FROM      EmployeePayHistory WHERE      BusinessEntityID IN (SELECT BusinessEntityID FROM Employee WHERE FirstName = 'Rob' AND LastName = 'Walters');
Error: 第 7323 个样本有 0 个SQL。
SELECT AVG(DATEDIFF(YEAR, HireDate, GETDATE())) AS AverageAge FROM Employee
Error: 第 7325 个样本有 0 个SQL。
SELECT e.FirstName, e.LastName, p.PhoneNumber FROM Employee e JOIN JobCandidate jc ON e.BusinessEntityID = jc.BusinessEntityID JOIN ContactType ct ON jc.ContactTypeID = ct.ContactTypeID WHERE e.JobTitle = 'Marketing Manager' AND ct.Name = 'Phone';
Error: 第 7327 个样本有 0 个SQL。
SELECT s.SalesPersonID, s.Name, st.Name AS TerritoryName FROM SalesPerson s JOIN Store st ON s.BusinessEntityID = st.BusinessEntityID WHERE st.Name = 'Area Bike Accessories'
Error: 第 7329 个样本有 0 个SQL。
SELECT p.Name, pv.Name AS VendorName FROM Product p JOIN ProductVendor pv ON p.ProductID = pv.ProductID WHERE YEAR(p.SellStartDate) = 2013;
SELECT TOP 1      s.Name AS 'Sales Representative' FROM      SalesPerson s WHERE      s.SalesYTD = (SELECT MAX(SalesYTD) FROM SalesPerson)
SELECT p.* FROM Product p JOIN ProductVendor pv ON p.ProductID = pv.ProductID WHERE pv.MinOrderQty = 1000 AND p.StandardCost > 17
SELECT TOP 1 e.Title, e.FirstName, e.LastName FROM Employee e JOIN Person p ON e.BusinessEntityID = p.BusinessEntityID WHERE p.Gender = 'M' AND p.MaritalStatus = 'M' ORDER BY p.BirthDate ASC;
Error: 第 7334 个样本有 0 个SQL。
Error: 第 7335 个样本有 0 个SQL。
SELECT e.FirstName, e.LastName, e.SickLeaveHours FROM Employee e WHERE YEAR(e BirthDate) >= 1970 ORDER BY e.SickLeaveHours ASC LIMIT 1;
SELECT d.DepartmentID,         AVG(DATEDIFF(YEAR, @today, e.BirthDate)) AS AverageAge,        MIN(e.BirthDate) AS YoungestEmployee FROM Employee e JOIN EmployeeDepartmentHistory edh ON e.BusinessEntityID = edh.BusinessEntityID JOIN Department d ON edh.DepartmentID = d.DepartmentID GROUP BY d.DepartmentID ORDER BY AverageAge;
SELECT ProductSubcategoryID FROM ProductSubcategory ORDER BY ProductSubcategoryID OFFSET 0 ROWS FETCH NEXT 3 ROWS ONLY;
SELECT      (SELECT SalesQuota FROM SalesPerson WHERE BusinessEntityID = 288) -      (SELECT SalesYTD FROM SalesPerson WHERE BusinessEntityID = 288) AS Difference
SELECT TOP 3 BusinessEntityID, Name, SalesLastYear FROM BusinessEntity ORDER BY SalesLastYear ASC;
SELECT TOP 3      s.TerritoryID,      s.Name,      SUM(sh.SalesYTD) AS TotalRevenue FROM      SalesTerritory s INNER JOIN      SalesPerson sp ON s.TerritoryID = sp.TerritoryID INNER JOIN      SalesOrderHeader sh ON sp.BusinessEntityID = sh.SalesPersonID GROUP BY      s.TerritoryID,      s.Name ORDER BY      TotalRevenue DESC;
Error: 第 7342 个样本有 0 个SQL。
SELECT MAX(DiscountPct) FROM SpecialOffer WHERE Type = 'Excess Inventory';
SELECT PlannedCost - ActualCost AS Difference FROM ProductCostHistory WHERE ProductID = 818;
SELECT COUNT(*)  FROM BillOfMaterials  WHERE EndDate IS NULL AND BOMLevel = 2;
Error: 第 7346 个样本有 0 个SQL。
SELECT      st.Name,      st.TaxRate FROM      SalesTaxRate st WHERE      st.TaxType LIKE '%+%';
SELECT TOP 1 TransactionID, SUM(Quantity) AS HighestProductQuantity FROM TransactionHistoryArchive WHERE TransactionType = 'W' GROUP BY TransactionID ORDER BY HighestProductQuantity DESC;
SELECT v.BusinessEntityID, v.AccountNumber, v.Name FROM Vendor v WHERE v.PreferredVendorStatus = 0 LIMIT 3;
SELECT COUNT(*)  FROM Vendor  WHERE ActiveFlag = 1 AND PreferredVendorStatus = 0;
SELECT COUNT(*)  FROM Employee  WHERE HireDate >= '2009-01-01' AND ShiftID IN (SELECT ShiftID FROM Shift WHERE StartTime >= '22:00:00' OR StartTime <= '06:00:00')
Error: 第 7352 个样本有 0 个SQL。
SELECT COUNT(*) FROM ShipMethod WHERE Name = 'XRQ - TRUCK GROUND';
SELECT sr.Name FROM SalesOrderHeader soh JOIN SalesOrderHeaderSalesReason sor ON soh.SalesOrderID = sor.SalesOrderID JOIN SalesReason sr ON sor.SalesReasonID = sr.SalesReasonID WHERE soh.SalesOrderID = 43718
Error: 第 7355 个样本有 0 个SQL。
SELECT      st.Name,      MAX(sp.SalesQuota) AS MaxSalesQuota FROM      SalesTerritory st JOIN      SalesPerson sp ON st.TerritoryID = sp.TerritoryID GROUP BY      st.Name ORDER BY      MaxSalesQuota DESC;
SELECT p.Name AS ProductName FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID WHERE sod.SalesOrderID = 43660
SELECT TOP 5 p.ProductID, p.Name, SUM(soh.OrderQty) AS TotalOrders FROM SalesOrderDetail soh JOIN Product p ON soh.ProductID = p.ProductID GROUP BY p.ProductID, p.Name ORDER BY TotalOrders DESC;
SELECT s.Shelf FROM ProductInventory pi JOIN Product p ON pi.ProductID = p.ProductID WHERE p.ProductName = 'Down Tube';
Error: 第 7360 个样本有 0 个SQL。
SELECT b.BusinessEntityID, e.FirstName, e.LastName FROM Store b JOIN Employee e ON b.SalesPersonID = e.BusinessEntityID WHERE b.Name = 'Next-Door Bike Store';
Error: 第 7362 个样本有 0 个SQL。
Error: 第 7363 个样本有 0 个SQL。
Error: 第 7364 个样本有 0 个SQL。
SELECT s.Name FROM StateProvince s JOIN Address a ON s.StateProvinceID = a.StateProvinceID WHERE a.AddressLine1 = 'Racine';
SELECT      ( ( (COUNT(CultureID) WHERE name = 'Arabic') / COUNT(CultureID) ) * 100 ) -      ( ( (COUNT(CultureID) WHERE name = 'Thai') / COUNT(CultureID) ) * 100 ) AS Difference_In_Percentage FROM      ProductModelProductDescriptionCulture;
Error: 第 7367 个样本有 0 个SQL。
SELECT      (plh.StandardPrice - pv.LastReceiptCost) AS NetProfit FROM      ProductListPriceHistory plh INNER JOIN      ProductVendor pv ON plh.ProductID = pv.ProductID WHERE      plh.ProductID = 'Crankarm';
SELECT Name FROM ProductReview WHERE Rating = (SELECT MAX(Rating) FROM ProductReview) - 1;
SELECT MAX(Rate) AS SecondHighestSalary FROM EmployeePayHistory WHERE PayFrequency = 1 ORDER BY Rate DESC OFFSET 1 ROW FETCH NEXT 1 ROW ONLY;
SELECT COUNT(*) FROM CreditCard WHERE CardType = 'Vista' AND ExpYear <= 2006;
SELECT StartTime FROM Shift WHERE Name = 'Night';
SELECT      p.Name,      p.Weight,      COUNT(*) AS ProductCount FROM      Product p WHERE      p.WeightUnitMeasureCode = 'LB' GROUP BY      p.Name,      p.Weight ORDER BY      ProductCount DESC LIMIT 1;
SELECT      st.Name,      cr.Name AS CountryRegionName,      MAX(Subtract(SalesLastYear, SalesYTD)) AS SalesDifference FROM      SalesTerritory st     INNER JOIN CountryRegion cr ON st.CountryRegionCode = cr.CountryRegionCode ORDER BY      SalesDifference DESC LIMIT 1;
SELECT TOP 6 p.Name, p.Size, p.SizeUnitMeasureCode, p.ReorderPoint FROM Product p WHERE p.SizeUnitMeasureCode = 'CM' ORDER BY p.Size DESC;
SELECT TotalDue FROM PurchaseOrderHeader WHERE Freight = (SELECT MAX(Freight) FROM PurchaseOrderHeader WHERE Freight < (SELECT MAX(Freight) FROM PurchaseOrderHeader ORDER BY Freight DESC LIMIT 1));
SELECT      SUM(ListPrice - StandardCost) AS Profit FROM      Product WHERE      Weight = (SELECT MIN(Weight) FROM Product)
Error: 第 7378 个样本有 0 个SQL。
Error: 第 7379 个样本有 0 个SQL。
SELECT Shift.Name FROM Employee WHERE (YEAR(Employee.BirthDate) < '1969') ORDER BY Employee.ModifiedDate DESC OFFSET 5 ROWS FETCH NEXT 1 ROW ONLY;
SELECT p.ProductID, p.Name, p.ListPrice, p.StandardCost,         p.ListPrice - p.StandardCost AS Profit,         MIN(d.DaysToManufacture) AS FastestManufactureTime FROM Product p JOIN ProductCostHistory pc ON p.ProductID = pc.ProductID JOIN Product p2 ON p.ProductID = p2.ProductID WHERE p.ListPrice - p.StandardCost = (SELECT MAX(profit) FROM                                         (SELECT p3.ProductID, p3.ListPrice, p3.StandardCost,                                                p3.ListPrice - p3.StandardCost AS Profit                                                 FROM Product p3) AS subquery) AND p.DaysToManufacture = (SELECT MIN(d.DaysToManufacture) FROM Product p3) GROUP BY p.ProductID, p.Name, p.ListPrice, p.StandardCost ORDER BY p.ListPrice - p.StandardCost DESC;
Error: 第 7382 个样本有 0 个SQL。
Error: 第 7383 个样本有 0 个SQL。
SELECT SUM(TotalDue)  FROM PurchaseOrderHeader  WHERE VendorID IN (SELECT BusinessEntityID FROM Vendor WHERE CreditRating = 4 AND PreferredVendorStatus = 0)
SELECT d.Name FROM Department d JOIN Employee e ON d.DepartmentID = e.DepartmentID JOIN Shift s ON e.ShiftID = s.ShiftID WHERE s.Name = 'Night' GROUP BY d.Name ORDER BY COUNT(s.Name = 'Night') DESC LIMIT 1;
SELECT SUM(profit) AS TotalProfit FROM      (SELECT          (MULTIPLY(SUBTRACT(p.ListPrice, p.StandardCost), 1)) AS profit     FROM          Product p     JOIN          ProductSubcategory ps ON p.ProductSubcategoryID = ps.ProductSubcategoryID     JOIN          ProductModel pm ON p.ProductModelID = pm.ProductModelID     WHERE          ps.Name = 'Road Bikes'          AND p.Class = 'H'          AND p.Size = '58'         AND p.Color = 'Black'     ) AS ProfitCalculation
SELECT FirstName + ' ' + MiddleName + ' ' + LastName AS FullName FROM Employee WHERE MaritalStatus = 'M'   AND JobTitle = 'Production Technician'   AND BirthDate = (SELECT MAX(BirthDate) FROM Employee WHERE MaritalStatus = 'M' AND JobTitle = 'Production Technician') ORDER BY BirthDate DESC LIMIT 10;
SELECT      v.BusinessEntityID,      v.Name,      v.CreditRating,      SUM(profit_on_net) AS total_profit FROM      ProductVendor pv JOIN      Vendor v ON pv.BusinessEntityID = v.BusinessEntityID WHERE      pv.AverageLeadTime = 60 GROUP BY      v.BusinessEntityID,      v.Name,      v.CreditRating ORDER BY      total_profit DESC LIMIT 1;
SELECT      p.Name,      SUM(profit) AS TotalProfit FROM      ProductVendor pv  JOIN      Product p ON pv.ProductID = p.ProductID  WHERE      pv.MaxOrderQty = 200  GROUP BY      p.Name
Error: 第 7390 个样本有 0 个SQL。
SELECT v.Name FROM Vendor v WHERE v.MinOrderQty = (     SELECT MIN(MinOrderQty)     FROM Vendor     WHERE MinOrderQty > (         SELECT MIN(MinOrderQty)         FROM Vendor     ) );
Error: 第 7392 个样本有 0 个SQL。
SELECT      FirstName + ' ' + MiddleName + ' ' + LastName AS FullName,      DATEDIFF(YEAR, BirthDate, HireDate) AS AgeAtHire FROM      Employee WHERE      VacationHours <= 10 ORDER BY      AgeAtHire DESC LIMIT 1;
SELECT e.PersonType FROM Employee e WHERE e.Gender = 'F' AND e.MaritalStatus = 'S' AND e.HireDate BETWEEN '2008-01-01' AND '2008-12-31'
SELECT      (p.ListPrice - p.StandardCost) AS Profit FROM      ProductReview pr JOIN      Product p ON pr.ProductID = p.ProductID WHERE      pr.Rating = 4 AND pr.ReviewerName = 'David' ORDER BY      pr.Rating DESC OFFSET 1 ROW FETCH NEXT 1 ROW ONLY;
SELECT s.Name AS StateProvinceName, cr.Name AS CountryRegionName FROM StateProvince s JOIN CountryRegion cr ON s.CountryRegionCode = cr.CountryRegionCode WHERE s.TaxRate = (     SELECT MIN(tax.TaxRate)     FROM StateProvince tax     WHERE tax.TaxRate > (         SELECT MIN(tax.TaxRate)         FROM StateProvince tax     ) ) AND s.StateProvinceID IN (     SELECT sales.StateProvinceID     FROM SalesTaxRate sales     WHERE sales.TaxRate = (         SELECT MIN(tax.TaxRate)         FROM StateProvince tax         WHERE tax.TaxRate > (             SELECT MIN(tax.TaxRate)             FROM StateProvince tax         )     ) )
SELECT      AVG(SUBTRACT(ListPrice, StandardCost)) AS AverageProfit,     COUNT(DISTINCT Size) AS VarietyOfSizes,     COUNT(DISTINCT Color) AS AvailableColors FROM      Product WHERE      Class = 'L' AND Style = 'U' AND ProductSubcategoryID IN          (SELECT ProductSubcategoryID FROM ProductSubcategory WHERE Name = 'Road Frame')
SELECT DiscountPct FROM SpecialOffer WHERE Description = 'LL Road Frame Sale';
Error: 第 7399 个样本有 0 个SQL。
Error: 第 7400 个样本有 0 个SQL。
Error: 第 7401 个样本有 0 个SQL。
Error: 第 7402 个样本有 0 个SQL。
Error: 第 7403 个样本有 0 个SQL。
SELECT MIN(SafetyStockLevel) FROM Product WHERE Name = 'Chainring Bolts';
SELECT p.ProductID, p.Name, ph.StandardCost FROM Product p JOIN ProductCostHistory ph ON p.ProductID = ph.ProductID ORDER BY ph.StandardCost DESC LIMIT 1;
SELECT p.PersonType FROM Employee e JOIN Person p ON e.BusinessEntityID = p.BusinessEntityID WHERE p.FirstName = 'David' AND p.LastName = 'Bradley';
SELECT COUNT(*) FROM Employee WHERE PersonType = 'SC' AND Title = 'Mr.';
Error: 第 7408 个样本有 0 个SQL。
Error: 第 7409 个样本有 0 个SQL。
SELECT PhoneNumber FROM BusinessEntityContact JOIN Person ON BusinessEntityContact.PersonID = Person.BusinessEntityID WHERE PersonType = 'SC';
SELECT PasswordHash FROM Employee e JOIN Person p ON e.BusinessEntityID = p.BusinessEntityID WHERE p.FirstName = 'David' AND p.LastName = 'Bradley';
Error: 第 7412 个样本有 0 个SQL。
SELECT CreditCard.CardNumber FROM Person JOIN BusinessEntityContact ON Person.BusinessEntityID = BusinessEntityContact.BusinessEntityID JOIN EmailAddress ON BusinessEntityContact.BusinessEntityContactID = EmailAddress.BusinessEntityContactID JOIN PersonCreditCard ON Person.BusinessEntityID = PersonCreditCard.BusinessEntityID JOIN CreditCard ON PersonCreditCard.CreditCardID = CreditCard.CreditCardID WHERE Person.FirstName = 'David' AND Person.LastName = 'Bradley';
Error: 第 7414 个样本有 0 个SQL。
Error: 第 7415 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Employee e  JOIN Person p ON e.BusinessEntityID = p.BusinessEntityID  JOIN PersonCreditCard pc ON p.BusinessEntityID = pc.BusinessEntityID  JOIN CreditCard cc ON pc.CreditCardID = cc.CreditCardID  WHERE p.PersonType = 'SC' AND cc.CardType = 'Vista';
Error: 第 7417 个样本有 0 个SQL。
Error: 第 7418 个样本有 0 个SQL。
Error: 第 7419 个样本有 0 个SQL。
Error: 第 7420 个样本有 0 个SQL。
SELECT COUNT(*) FROM Employee e JOIN Person p ON e.BusinessEntityID = p.BusinessEntityID JOIN BusinessEntity b ON p.BusinessEntityID = b.BusinessEntityID WHERE e.DepartmentID IN (SELECT DepartmentID FROM Department WHERE Name = 'Manufacturing') AND p.PersonType = 'SC' AND (YEAR(p.EndDate) > 2007 AND YEAR(p.StartDate) < 2007)
Error: 第 7422 个样本有 0 个SQL。
SELECT COUNT(e.BusinessEntityID) FROM Employee e JOIN EmployeeDepartmentHistory edh ON e.BusinessEntityID = edh.BusinessEntityID JOIN Department d ON edh.DepartmentID = d.DepartmentID JOIN EmployeePayHistory ep ON e.BusinessEntityID = ep.BusinessEntityID JOIN CreditCard cc ON e.BusinessEntityID = cc.BusinessEntityID WHERE d.Name = 'Engineering' AND year(ep.RateChangeDate) = 2007 AND cc.ExpYear = 2007;
SELECT e.EmailAddress FROM Employee e JOIN EmployeeDepartmentHistory edh ON e.BusinessEntityID = edh.BusinessEntityID GROUP BY e.EmailAddress ORDER BY COUNT(DISTINCT edh.DepartmentID) DESC LIMIT 1;
Error: 第 7425 个样本有 0 个SQL。
SELECT COUNT(DISTINCT e.BusinessEntityID) FROM EmployeeDepartmentHistory edh JOIN Employee e ON edh.BusinessEntityID = e.BusinessEntityID JOIN Department d ON edh.DepartmentID = d.DepartmentID WHERE d.Group = 'Quality Assurance Group' AND edh.StartDate >= '2007-01-01' AND edh.StartDate < '2008-01-01';
SELECT p.Name FROM Product p JOIN SpecialOfferProduct sop ON p.ProductID = sop.ProductID JOIN SpecialOffer so ON sop.SpecialOfferID = so.SpecialOfferID WHERE so.Description = 'LL Road Frame Sale';
Error: 第 7428 个样本有 0 个SQL。
SELECT p.* FROM Product p WHERE EXISTS (   SELECT 1   FROM SalesOrderDetail sod   JOIN SalesOrderHeader soh ON sod.SalesOrderID = soh.SalesOrderID   WHERE p.ProductID = sod.ProductID   AND soh.SellStartDate IS NOT NULL )
Error: 第 7430 个样本有 0 个SQL。
Error: 第 7431 个样本有 0 个SQL。
Error: 第 7432 个样本有 0 个SQL。
Error: 第 7433 个样本有 0 个SQL。
SELECT      ((MAX(plh.ListPrice) - MIN(plh.ListPrice)) / MIN(plh.ListPrice)) * 100 AS Percentage_Difference FROM      ProductListPriceHistory plh WHERE      plh.ProductID IN (SELECT ProductID FROM Product WHERE ProductSubcategoryID IN (SELECT ProductSubcategoryID FROM ProductSubcategory WHERE ProductCategoryID IN (SELECT ProductCategoryID FROM ProductCategory WHERE Name = 'Clothing')))
SELECT AVG(DIVIDE(SUM(SUBTRACT(p.ListPrice, p.StandardCost)), COUNT(ps.ProductSubcategoryID))) FROM Product p JOIN ProductSubcategory ps ON p.ProductSubcategoryID = ps.ProductSubcategoryID WHERE p.ProductSubcategoryID IN (SELECT ProductSubcategoryID FROM ProductSubcategory WHERE Name LIKE '%Clothing%');
SELECT TOP 1 ProductID, StandardCost FROM ProductCostHistory WHERE StartDate <= '2013-01-01' AND EndDate >= '2013-12-31' ORDER BY StandardCost ASC;
SELECT * FROM Product WHERE Color = 'Yellow'
SELECT BusinessEntityID FROM Person WHERE FirstName = 'Hung-Fu' AND LastName = 'Ting'
SELECT PhoneNumber FROM Employee WHERE BusinessEntityID = 12597;
SELECT ListPrice FROM ProductListPriceHistory WHERE ProductID = 912;
SELECT * FROM WorkOrder WHERE ActualCost != PlannedCost;
SELECT ThumbnailPhotoFileName FROM ProductPhoto WHERE ProductPhotoID = (SELECT ProductPhotoID                         FROM ProductModelProductDescriptionCulture                         WHERE ProductModelID = (SELECT ProductModelID                                                FROM Product                                                WHERE ProductID = 979));
SELECT Name FROM Product WHERE ListPrice > 1000;
SELECT TOP 1 p.ProductID, p.Name, SUM(profit) AS TotalProfit FROM (     SELECT p.ProductID, p.Name, p.ListPrice, p.StandardCost     FROM Product p ) p WHERE profit > 0 GROUP BY p.ProductID, p.Name ORDER BY TotalProfit DESC;
SELECT p.Name FROM Product p JOIN ProductInventory pi ON p.ProductID = pi.ProductID JOIN Location l ON pi.LocationID = l.LocationID WHERE l.Name = '1' AND pi.Shelf = 'L' AND pi.Bin = '6';
SELECT l.LocationID, l.Name, l.CostRate, l.Availability FROM WorkOrder w JOIN WorkOrderRouting wr ON w.WorkOrderID = wr.WorkOrderID JOIN Location l ON wr.LocationID = l.LocationID WHERE w.WorkOrderID = 35493
Error: 第 7447 个样本有 0 个SQL。
SELECT * FROM ProductSubcategory JOIN ProductCategory ON ProductSubcategory.ProductCategoryID = ProductCategory.ProductCategoryID WHERE ProductSubcategory.Name = 'Socks';
SELECT COUNT(*) FROM Product WHERE ListPrice <= 100 / (SELECT AVG(ListPrice) FROM Product);
SELECT ScrapReason.Name FROM WorkOrder JOIN WorkOrderRouting ON WorkOrder.WorkOrderID = WorkOrderRouting.WorkOrderID JOIN ScrapReason ON WorkOrderRouting.ScrapReasonID = ScrapReason.ScrapReasonID WHERE WorkOrder.WorkOrderID = 57788;
SELECT SUM(StandardCost) AS TotalCost FROM Product WHERE ProductSubcategoryID IN (     SELECT ProductSubcategoryID     FROM ProductSubcategory     WHERE Name LIKE '%sports%' )
Error: 第 7452 个样本有 0 个SQL。
SELECT p.* FROM Product p WHERE p.StandardCost < (SELECT AVG(StandardCost) FROM Product)
SELECT      (DIVIDE(SUBTRACT(plh.ListPrice, p.StandardCost), p.StandardCost)) * 100 AS percentage FROM      ProductListPriceHistory plh INNER JOIN      Product p ON plh.ProductID = p.ProductID WHERE      p.ProductID = 858;
SELECT COUNT(*) FROM ProductPhoto WHERE ProductPhotoID > 1;
Error: 第 7456 个样本有 0 个SQL。
Error: 第 7457 个样本有 0 个SQL。
SELECT StandardCost FROM ProductCostHistory WHERE ProductID = 847;
Error: 第 7459 个样本有 0 个SQL。
SELECT COUNT(*)  FROM WorkOrder  WHERE EndDate > DueDate;
SELECT StandardCost, ProductNumber FROM Product WHERE ProductID = 888;
Error: 第 7462 个样本有 0 个SQL。
SELECT      pi.LocationID,      pi.Shelf AS Compartment,      pi.Bin AS Container FROM      ProductInventory pi WHERE      pi.ProductID IN (         SELECT              p.ProductID         FROM              Product p         WHERE              p.Name = 'Lock Ring'     )
SELECT pc.Name FROM ProductSubcategory ps JOIN ProductCategory pc ON ps.ProductCategoryID = pc.ProductCategoryID WHERE ps.Name = 'Road Frames'
SELECT wo.WorkOrderID, wo.ProductID, sr.Name FROM WorkOrder wo JOIN WorkOrderRouting wor ON wo.WorkOrderID = wor.WorkOrderID JOIN ScrapReason sr ON wor.ScrapReasonID = sr.ScrapReasonID WHERE sr.Name = 'handling damage';
SELECT profit FROM (     SELECT ListPrice - StandardCost AS profit     FROM ProductListPriceHistory     JOIN Product ON ProductListPriceHistory.ProductID = Product.ProductID     WHERE Product.ProductID = 792 ) AS ProfitCalculation
SELECT p.BusinessEntityID, p.FirstName, p.LastName FROM Person p JOIN BusinessEntityContact bec ON p.BusinessEntityID = bec.BusinessEntityID JOIN EmailAddress ea ON bec.BusinessEntityContactID = ea.BusinessEntityContactID WHERE ea.EmailAddress = 'regina7@adventure-works.com';
Error: 第 7468 个样本有 0 个SQL。
SELECT p.Name FROM WorkOrder w JOIN Product p ON w.ProductID = p.ProductID WHERE w.WorkOrderID = '2540';
SELECT      p.ListPrice * 3 AS Price FROM      Product p WHERE      p.Name = 'Lock Washer 6'
Error: 第 7471 个样本有 0 个SQL。
SELECT AVG(DIVIDE(SUBTRACT(pl.ListPrice, p.StandardCost), p.StandardCost)) AS AverageProfitPercentage FROM ProductListPriceHistory pl JOIN Product p ON pl.ProductID = p.ProductID;
SELECT      DIVIDE(SUM(CASE WHEN w.Name = 'Subassembly' THEN 1 ELSE 0 END), COUNT(w.WorkOrderID)) AS proportion FROM      WorkOrder w
SELECT COUNT(*)  FROM IMG_OBJ  WHERE IMG_ID = 1;
SELECT COUNT(DISTINCT IMG_ID)  FROM IMG_OBJ  WHERE OBJ_SAMPLE_ID > 20;
SELECT IMG_ID FROM IMG_OBJ GROUP BY IMG_ID ORDER BY COUNT(OBJ_SAMPLE_ID) DESC LIMIT 1;
SELECT IMG_OBJ.OBJ_SAMPLE_ID FROM IMG_OBJ WHERE IMG_ID = 1 AND OBJ_CLASS_ID = 297;
SELECT COUNT(*)  FROM IMG_REL  WHERE IMG_ID = 5 AND OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID;
SELECT X, Y, W, H  FROM IMG_OBJ  WHERE IMG_ID = 5 AND OBJ_SAMPLE_ID IN    (SELECT OBJ_SAMPLE_ID     FROM IMG_REL     WHERE IMG_ID = 5 AND OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID);
SELECT COUNT(*)  FROM IMG_OBJ  WHERE IMG_ID = 1 AND OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'man');
SELECT COUNT(DISTINCT IMG_ID)  FROM IMG_OBJ  WHERE OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'man');
SELECT OBJ_CLASS FROM IMG_OBJ WHERE IMG_ID = 1 JOIN OBJ_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = OBJ_CLASSES.OBJ_CLASS_ID;
SELECT PRED_CLASS FROM IMG_REL WHERE IMG_ID = 1 AND OBJ1_SAMPLE_ID = 8 AND OBJ2_SAMPLE_ID = 4;
SELECT COUNT(*)  FROM IMG_REL  WHERE IMG_ID = 1 AND PRED_CLASS_ID IN (SELECT PRED_CLASS_ID FROM PRED_CLASSES WHERE PRED_CLASS = 'parked on');
Error: 第 7485 个样本有 0 个SQL。
SELECT COUNT(DISTINCT IMG_ID) FROM IMG_REL WHERE PRED_CLASS_ID IN (   SELECT PRED_CLASS_ID   FROM PRED_CLASSES   WHERE PRED_CLASS = 'parked on' ) AND OBJ1_SAMPLE_ID <> OBJ2_SAMPLE_ID;
Error: 第 7487 个样本有 0 个SQL。
SELECT PRED_CLASS FROM IMG_REL WHERE IMG_ID = 5 AND OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID
SELECT i.X, i.Y, i.W, i.H  FROM IMG_OBJ i  JOIN IMG_OBJ_ATT ia ON i.IMG_ID = ia.IMG_ID AND i.OBJ_SAMPLE_ID = ia.OBJ_SAMPLE_ID  JOIN IMG_REL ir ON i.IMG_ID = ir.IMG_ID  WHERE i.IMG_ID = 1 AND ir.PRED_CLASS_ID IN (SELECT PRED_CLASS_ID FROM PRED_CLASSES WHERE PRED_CLASS = 'by');
SELECT AVG(Y)  FROM IMG_OBJ  WHERE IMG_ID = 1 AND OBJ_SAMPLE_ID IN    (SELECT OBJ1_SAMPLE_ID FROM IMG_REL WHERE IMG_ID = 1 AND PRED_CLASS_ID =      (SELECT PRED_CLASS_ID FROM PRED_CLASSES WHERE PRED_CLASS = 'parked on'))    AND OBJ_SAMPLE_ID IN    (SELECT OBJ2_SAMPLE_ID FROM IMG_REL WHERE IMG_ID = 1 AND PRED_CLASS_ID =      (SELECT PRED_CLASS_ID FROM PRED_CLASSES WHERE PRED_CLASS = 'parked on'));
SELECT      (COUNT(DISTINCT IMG_OBJ.OBJ_SAMPLE_ID)      WHERE IMG_OBJ.IMG_ID = 1 AND IMG_OBJ.OBJ_CLASS_ID = (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'man'))      / COUNT(DISTINCT IMG_OBJ.OBJ_SAMPLE_ID)      * 100 AS percentage
Error: 第 7492 个样本有 0 个SQL。
SELECT COUNT(*) FROM OBJ_CLASSES;
SELECT COUNT(*) AS predicted_classes FROM PRED_CLASSES;
Error: 第 7495 个样本有 0 个SQL。
Error: 第 7496 个样本有 0 个SQL。
SELECT COUNT(DISTINCT IMG_OBJ.OBJ_SAMPLE_ID) FROM IMG_OBJ JOIN IMG_OBJ_ATT ON IMG_OBJ.IMG_ID = IMG_OBJ_ATT.IMG_ID JOIN ATT_CLASSES ON IMG_OBJ_ATT.ATT_CLASS_ID = ATT_CLASSES.ATT_CLASS_ID WHERE IMG_OBJ.IMG_ID = 2377985 AND ATT_CLASSES.ATT_CLASS = 'electrical';
SELECT PRED_CLASSES.PRED_CLASS FROM IMG_REL JOIN IMG_OBJ_ATT ON IMG_REL.IMG_ID = IMG_OBJ_ATT.IMG_ID JOIN IMG_OBJ ON IMG_OBJ_ATT.OBJ_SAMPLE_ID = IMG_OBJ.OBJ_SAMPLE_ID WHERE IMG_REL.IMG_ID = 2345511 AND IMG_REL.OBJ1_SAMPLE_ID = 12 AND IMG_REL.OBJ2_SAMPLE_ID = 8;
SELECT OBJ1_SAMPLE_ID FROM IMG_REL WHERE IMG_ID = 2345524 AND OBJ2_SAMPLE_ID = 1;
Error: 第 7500 个样本有 0 个SQL。
SELECT COUNT(DISTINCT IMG_ID)  FROM IMG_OBJ  WHERE OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'suit');
Error: 第 7502 个样本有 0 个SQL。
Error: 第 7503 个样本有 0 个SQL。
SELECT o.OBJ_CLASS FROM IMG_OBJ io JOIN OBJ_CLASSES o ON io.OBJ_CLASS_ID = o.OBJ_CLASS_ID JOIN IMG_OBJ_ATT ioa ON io.IMG_ID = ioa.IMG_ID AND io.OBJ_SAMPLE_ID = ioa.OBJ_SAMPLE_ID JOIN ATT_CLASSES a ON ioa.ATT_CLASS_ID = a.ATT_CLASS_ID WHERE io.IMG_ID = 22377993 AND a.ATT_CLASS = 'blurry';
SELECT COUNT(*)  FROM IMG_OBJ  WHERE IMG_ID = 2353079 AND OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID    FROM OBJ_CLASSES    WHERE OBJ_CLASS = 'wall' )
SELECT OBJ_CLASS FROM IMG_OBJ WHERE IMG_ID = 2320341 AND OBJ_SAMPLE_ID = 10;
SELECT    (SELECT COUNT(DISTINCT OBJ_SAMPLE_ID) FROM IMG_OBJ WHERE OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'broccoli')) /   (SELECT COUNT(DISTINCT OBJ_SAMPLE_ID) FROM IMG_OBJ WHERE OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'tomato'))
SELECT COUNT(DISTINCT IMG_ID)  FROM IMG_OBJ_ATT  GROUP BY IMG_ID  HAVING COUNT(DISTINCT ATT_CLASS_ID) >= 25;
SELECT IMG_ID FROM IMG_REL WHERE OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID;
SELECT COUNT(IMG_OBJ.IMG_ID) FROM IMG_OBJ WHERE IMG_OBJ.OBJ_SAMPLE_ID IN (   SELECT IMG_OBJ_ATT.OBJ_SAMPLE_ID   FROM IMG_OBJ_ATT   GROUP BY IMG_OBJ_ATT.OBJ_SAMPLE_ID   ORDER BY COUNT(IMG_OBJ_ATT.ATT_CLASS_ID) DESC   LIMIT 1 )
SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS IN ('bus', 'train', 'aeroplane', 'car');
SELECT ATT_CLASS  FROM ATT_CLASSES  WHERE ATT_CLASS_ID IN (   SELECT ATT_CLASS_ID    FROM IMG_OBJ_ATT    WHERE OBJ_SAMPLE_ID IN (     SELECT OBJ_SAMPLE_ID      FROM IMG_OBJ      WHERE X > 100 AND Y > 100 AND W > 100 AND H > 100   ) );
SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'onion';
SELECT a.ATT_CLASS  FROM IMG_OBJ_ATT ia  JOIN ATT_CLASSES a ON ia.ATT_CLASS_ID = a.ATT_CLASS_ID  WHERE ia.IMG_ID = 8;
SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 4 AND OBJ_SAMPLE_ID IN (   SELECT OBJ_SAMPLE_ID   FROM IMG_OBJ_ATT   JOIN IMG_REL ON IMG_OBJ_ATT.IMG_ID = IMG_REL.IMG_ID   WHERE PRED_CLASS_ID = 144 );
Error: 第 7516 个样本有 0 个SQL。
SELECT PRED_CLASS_ID FROM IMG_REL JOIN IMG_OBJ ON IMG_REL.IMG_ID = IMG_OBJ.IMG_ID WHERE H = (SELECT MAX(H) FROM IMG_OBJ);
SELECT IMG_ID FROM ATT_CLASSES JOIN IMG_OBJ_ATT ON ATT_CLASSES.ATT_CLASS_ID = IMG_OBJ_ATT.ATT_CLASS_ID WHERE ATT_CLASSES.ATT_CLASS = 'white' GROUP BY IMG_ID ORDER BY COUNT(ATT_CLASS_ID) DESC LIMIT 1;
SELECT X, Y FROM IMG_OBJ WHERE IMG_ID IN (   SELECT IMG_ID   FROM IMG_REL   WHERE PRED_CLASS_ID = 98 )
SELECT COUNT(*) FROM PRED_CLASSES WHERE PRED_CLASS = 'has' AND IMG_ID = 3050;
SELECT o.OBJ_CLASS  FROM IMG_OBJ io  JOIN OBJ_CLASSES o ON io.OBJ_CLASS_ID = o.OBJ_CLASS_ID  WHERE io.X = 0 AND io.Y = 0;
SELECT PRED_CLASS FROM PRED_CLASSES WHERE PRED_CLASS_ID IN (   SELECT PRED_CLASS_ID   FROM IMG_REL   WHERE OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID )
SELECT X, Y, W, H  FROM IMG_OBJ  WHERE IMG_ID = 2222 AND OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'feathers');
SELECT COUNT(DISTINCT IMG_ID) FROM IMG_REL WHERE OBJ1_SAMPLE_ID != OBJ2_SAMPLE_ID AND PRED_CLASS_ID IN (SELECT PRED_CLASS_ID FROM PRED_CLASSES WHERE PRED_CLASS = 'on');
SELECT OBJ_CLASS FROM IMG_OBJ WHERE X = 0 AND Y = 0 AND W = 135 AND H = 212;
SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 3 AND OBJ_CLASS_ID = (   SELECT OBJ_CLASS_ID   FROM IMG_OBJ   JOIN OBJ_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = OBJ_CLASSES.OBJ_CLASS_ID   WHERE OBJ_CLASS = 'keyboard' );
SELECT MIN(X), MAX(X) AS X_MAX, MIN(Y), MAX(Y) AS Y_MAX FROM IMG_OBJ WHERE IMG_ID = 6 AND OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID   FROM IMG_OBJ   JOIN OBJ_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = OBJ_CLASSES.OBJ_CLASS_ID   WHERE OBJ_CLASSES.OBJ_CLASS = 'folk' );
SELECT X, Y, W, H  FROM IMG_OBJ  WHERE IMG_ID = 285930 AND OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID    FROM IMG_OBJ    JOIN OBJ_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = OBJ_CLASSES.OBJ_CLASS_ID    WHERE OBJ_CLASSES.OBJ_CLASS = 'onion' );
SELECT COUNT(DISTINCT OBJ_CLASS_ID)  FROM IMG_OBJ  WHERE IMG_ID = 72;  SELECT OBJ_CLASS  FROM IMG_OBJ  WHERE IMG_ID = 72 AND (X <= 341 AND Y <= 27 AND X + W >= 341 AND Y + H >= 27);
SELECT ATT_CLASS FROM ATT_CLASSES WHERE ATT_CLASS_ID IN (   SELECT ATT_CLASS_ID   FROM IMG_OBJ_ATT   WHERE IMG_ID = 5   GROUP BY ATT_CLASS_ID   HAVING COUNT(ATT_CLASS_ID) >= 2 )
Error: 第 7531 个样本有 0 个SQL。
SELECT OBJ_CLASS  FROM IMG_OBJ  WHERE IMG_ID = 10 AND OBJ_SAMPLE_ID IN (   SELECT OBJ_SAMPLE_ID    FROM IMG_OBJ_ATT    WHERE IMG_ID = 10 AND ATT_CLASS_ID IN (     SELECT ATT_CLASS_ID      FROM ATT_CLASSES      WHERE ATT_CLASS = 'scattered'   ) )
SELECT COUNT(DISTINCT IMG_ID) FROM IMG_OBJ WHERE OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID   FROM OBJ_CLASSES   WHERE OBJ_CLASS = 'bridge' )
SELECT AVG(count) AS avg_obj_per_img FROM (   SELECT COUNT(OBJ_CLASS_ID) AS count   FROM IMG_OBJ   GROUP BY IMG_ID ) AS subquery;
Error: 第 7535 个样本有 0 个SQL。
SELECT    o.OBJ_CLASS,    a.ATT_CLASS,    il.OBJ_SAMPLE_ID,    i.X, i.Y, i.W, i.H FROM    IMG_OBJ i   JOIN OBJ_CLASSES o ON i.OBJ_CLASS_ID = o.OBJ_CLASS_ID   JOIN IMG_OBJ_ATT ia ON i.IMG_ID = ia.IMG_ID AND i.OBJ_SAMPLE_ID = ia.OBJ_SAMPLE_ID   JOIN ATT_CLASSES a ON ia.ATT_CLASS_ID = a.ATT_CLASS_ID WHERE    i.IMG_ID = 1 AND i.X = 388 AND i.Y = 369 AND i.W = 48 AND i.H = 128
SELECT PRED_CLASS FROM IMG_REL WHERE IMG_ID = 1 AND OBJ1_SAMPLE_ID = 25 AND OBJ2_SAMPLE_ID = 2;
SELECT COUNT(*) FROM IMG_OBJ_ATT WHERE IMG_ID = 4 AND OBJ_SAMPLE_ID = 7;
Error: 第 7539 个样本有 0 个SQL。
SELECT ATT_CLASS_ID, COUNT(*) AS COUNT_OF_OBJECTS FROM IMG_OBJ_ATT WHERE IMG_ID = 20 GROUP BY ATT_CLASS_ID ORDER BY COUNT_OF_OBJECTS DESC LIMIT 1;
SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 42 AND OBJ_SAMPLE_ID = 7;
SELECT      (COUNT(IMG_OBJ.OBJ_SAMPLE_ID)       WHERE EXISTS (SELECT 1 FROM IMG_OBJ_ATT                      WHERE IMG_OBJ_ATT.IMG_ID = IMG_OBJ.IMG_ID                      AND IMG_OBJ_ATT.ATT_CLASS_ID IN (SELECT ATT_CLASS_ID FROM ATT_CLASSES WHERE ATT_CLASSES.ATT_CLASS = 'white')))      /      (SELECT COUNT(IMG_OBJ.OBJ_SAMPLE_ID) FROM IMG_OBJ)      * 100 AS percentage FROM      IMG_OBJ WHERE      IMG_ID = 99;
SELECT COUNT(*)  FROM ATT_CLASSES  WHERE ATT_CLASS_ID IN (   SELECT ATT_CLASS_ID    FROM IMG_OBJ_ATT    WHERE IMG_ID = 5 )
SELECT OBJ_CLASS FROM OBJ_CLASSES WHERE OBJ_CLASS_ID = 10;
SELECT OBJ_CLASS.OBJ_CLASS FROM IMG_OBJ JOIN OBJ_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = OBJ_CLASSES.OBJ_CLASS_ID WHERE X = 422 AND Y = 63 AND W = 77 AND H = 363;
SELECT PRED_CLASS FROM PRED_CLASSES WHERE PRED_CLASS_ID = 12;
SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 8;
Error: 第 7548 个样本有 0 个SQL。
Error: 第 7549 个样本有 0 个SQL。
Error: 第 7550 个样本有 0 个SQL。
SELECT COUNT(*)  FROM IMG_OBJ  WHERE IMG_ID = 2315533 AND OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID    FROM OBJ_CLASSES    WHERE OBJ_CLASS = 'cloud' );
Error: 第 7552 个样本有 0 个SQL。
SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 1344 AND OBJ_CLASS_ID = (   SELECT OBJ_CLASS_ID   FROM OBJ_CLASSES   WHERE OBJ_CLASS = 'spoon' );
SELECT DIVIDE(SUM(OBJ_CLASS_ID), COUNT(OBJ_CLASS_ID)) as percentage  FROM IMG_OBJ  WHERE IMG_ID = 2654 AND OBJ_CLASS = 'surface';
SELECT COUNT(DISTINCT IMG_ID) FROM IMG_OBJ WHERE OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID   FROM OBJ_CLASSES   WHERE OBJ_CLASS = 'wood' );
SELECT OBJ_CLASS FROM IMG_OBJ WHERE H = (SELECT MAX(H) FROM IMG_OBJ);
SELECT    DIVIDE(SUM(OBJ_SAMPLE_ID), COUNT(OBJ_CLASS_ID)) as percentage FROM    IMG_OBJ WHERE    OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'airplane');
SELECT COUNT(*)  FROM IMG_OBJ  WHERE IMG_ID = 660 AND OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'animal');
SELECT COUNT(*)  FROM IMG_OBJ  WHERE IMG_ID = 1098 AND OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'bed');
SELECT OBJ_CLASS FROM IMG_OBJ WHERE H = (SELECT MIN(H) FROM IMG_OBJ)
SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 250 AND OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID   FROM OBJ_CLASSES   WHERE OBJ_CLASS = 'kitchen' );
SELECT IMG_ID  FROM IMG_OBJ  GROUP BY IMG_ID  HAVING COUNT(OBJ_SAMPLE_ID) > 20;
SELECT IMG_OBJ.OBJ_SAMPLE_ID FROM IMG_OBJ WHERE IMG_ID = 8 ORDER BY W DESC LIMIT 1;
SELECT * FROM IMG_OBJ WHERE IMG_ID = 5 AND X = 634 AND Y = 468;
SELECT OBJ_SAMPLE_ID FROM IMG_OBJ_ATT GROUP BY OBJ_SAMPLE_ID ORDER BY COUNT(OBJ_SAMPLE_ID) DESC LIMIT 1;
SELECT DIVIDE(SUM(OBJ_SAMPLE_ID) FROM IMG_OBJ WHERE IMG_ID = 1),         SUM(OBJ_SAMPLE_ID) FROM IMG_OBJ WHERE IMG_ID = 6) AS Ratio;
SELECT AVG(COUNT(OBJ_SAMPLE_ID)) / COUNT(IMG_ID) AS avg_obj_samples_per_img FROM IMG_OBJ;
SELECT IMG_ID FROM IMG_OBJ JOIN IMG_OBJ_ATT ON IMG_OBJ.IMG_ID = IMG_OBJ_ATT.IMG_ID JOIN ATT_CLASSES ON IMG_OBJ_ATT.ATT_CLASS_ID = ATT_CLASSES.ATT_CLASS_ID WHERE ATT_CLASSES.ATT_CLASS = 'wired';
SELECT OBJ_CLASS FROM IMG_OBJ WHERE IMG_ID = 10
SELECT att_class FROM IMG_OBJ_ATT JOIN IMG_OBJ ON IMG_OBJ_ATT.IMG_ID = IMG_OBJ.IMG_ID AND IMG_OBJ_ATT.OBJ_SAMPLE_ID = IMG_OBJ.OBJ_SAMPLE_ID JOIN OBJ_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = OBJ_CLASSES.OBJ_CLASS_ID WHERE OBJ_CLASSES.OBJ_CLASS = 'tip' AND IMG_OBJ.IMG_ID = 1314;
SELECT PRED_CLASS FROM IMG_REL WHERE IMG_ID = 2360078 AND OBJ1_SAMPLE_ID IN (   SELECT OBJ_SAMPLE_ID   FROM IMG_OBJ   WHERE OBJ_CLASS_ID IN (     SELECT OBJ_CLASS_ID     FROM OBJ_CLASSES     WHERE OBJ_CLASS = 'chain'   ) ) AND OBJ2_SAMPLE_ID IN (   SELECT OBJ_SAMPLE_ID   FROM IMG_OBJ   WHERE OBJ_CLASS_ID IN (     SELECT OBJ_CLASS_ID     FROM OBJ_CLASSES     WHERE OBJ_CLASS = 'label'   ) );
Error: 第 7572 个样本有 0 个SQL。
SELECT ATT_CLASS FROM IMG_OBJ JOIN IMG_OBJ_ATT ON IMG_OBJ.OBJ_SAMPLE_ID = IMG_OBJ_ATT.OBJ_SAMPLE_ID JOIN ATT_CLASSES ON IMG_OBJ_ATT.ATT_CLASS_ID = ATT_CLASSES.ATT_CLASS_ID WHERE IMG_ID = 400 ORDER BY W DESC LIMIT 1;
SELECT OBJ_CLASS FROM OBJ_CLASSES WHERE OBJ_CLASS_ID = (   SELECT OBJ_CLASS_ID   FROM IMG_OBJ   GROUP BY OBJ_CLASS_ID   ORDER BY COUNT(OBJ_CLASS_ID) DESC   LIMIT 1 );
SELECT W, H FROM IMG_OBJ WHERE IMG_ID = 1 AND OBJ_CLASS_ID = (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'van');
SELECT X, Y FROM IMG_OBJ WHERE IMG_ID = 1 AND OBJ_SAMPLE_ID IN (   SELECT OBJ_SAMPLE_ID   FROM IMG_OBJ_ATT   WHERE IMG_ID = 1   AND ATT_CLASS_ID IN (     SELECT ATT_CLASS_ID     FROM ATT_CLASSES     WHERE ATT_CLASS = 'sparse'   ) );
SELECT    DIVIDE(COUNT(OBJ_SAMPLE_ID), COUNT(OBJ_SAMPLE_ID)) as percentage FROM    IMG_OBJ WHERE    OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'street lights');
SELECT    DIVIDE(COUNT(OBJ_SAMPLE_ID), COUNT(OBJ_SAMPLE_ID)) as percentage FROM    IMG_OBJ WHERE    IMG_ID = 5 AND OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'windows')
SELECT COUNT(*)  FROM IMG_OBJ  WHERE X = 5 AND Y = 5;
SELECT COUNT(DISTINCT IMG_ID) FROM IMG_OBJ WHERE OBJ_SAMPLE_ID < 15;
SELECT COUNT(DISTINCT IMG_ID)  FROM IMG_OBJ  GROUP BY IMG_ID  HAVING COUNT(OBJ_CLASS_ID) = 10;
SELECT IMG_ID FROM IMG_REL GROUP BY IMG_ID HAVING COUNT(DISTINCT PRED_CLASS_ID) > 1;
SELECT COUNT(DISTINCT IMG_ID)  FROM IMG_OBJ  WHERE OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'vegetables')  AND OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'fruits');
SELECT IMG_ID FROM IMG_REL WHERE PRED_CLASS_ID IN (   SELECT PRED_CLASS_ID   FROM PRED_CLASSES   WHERE PRED_CLASS = 'parked on' );
SELECT OBJ_CLASS FROM IMG_OBJ WHERE X = 5 AND Y = 5;
SELECT COUNT(DISTINCT IMG_ID) FROM IMG_OBJ WHERE OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID   FROM OBJ_CLASSES   WHERE OBJ_CLASS = 'keyboard' );
SELECT W, H FROM IMG_OBJ WHERE OBJ_CLASS_ID = (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'keyboard') AND X = 5 AND Y = 647;
SELECT IMG_ID FROM IMG_OBJ_ATT WHERE ATT_CLASS_ID IN (   SELECT ATT_CLASS_ID   FROM ATT_CLASSES   WHERE ATT_CLASS = 'horse' )
SELECT X, Y FROM IMG_OBJ JOIN OBJ_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = OBJ_CLASSES.OBJ_CLASS_ID JOIN ATT_CLASSES ON IMG_OBJ_ATT.ATT_CLASS_ID = ATT_CLASSES.ATT_CLASS_ID WHERE ATT_CLASSES.ATT_CLASS = 'horse' AND OBJ_CLASSES.OBJ_CLASS = 'fur';
SELECT ATT_CLASS FROM ATT_CLASSES WHERE ATT_CLASS_ID IN (   SELECT ATT_CLASS_ID   FROM IMG_OBJ_ATT   WHERE IMG_ID = 15 )
SELECT COUNT(DISTINCT IMG_ID) FROM IMG_REL WHERE PRED_CLASS_ID IN (   SELECT PRED_CLASS_ID   FROM PRED_CLASSES   WHERE PRED_CLASS = 'reading' ) GROUP BY PRED_CLASS_ID HAVING COUNT(DISTINCT OBJ1_SAMPLE_ID) > 1;
Error: 第 7592 个样本有 0 个SQL。
Error: 第 7593 个样本有 0 个SQL。
SELECT ATT_CLASSES.ATT_CLASS FROM IMG_OBJ JOIN ATT_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = ATT_CLASSES.ATT_CLASS_ID WHERE IMG_OBJ.X = 5 AND IMG_OBJ.Y = 5;
Error: 第 7595 个样本有 0 个SQL。
SELECT    DIVIDE(     COUNT(IMG_ID),      (SELECT COUNT(IMG_ID) FROM IMG_OBJ WHERE OBJ_CLASS_ID IN (SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS IN ('man', 'person')))   ) AS ratio
SELECT OBJ_SAMPLE_ID FROM IMG_OBJ WHERE IMG_ID = 17 AND X = 0 AND Y = 0;
SELECT W, H  FROM IMG_OBJ  WHERE OBJ_SAMPLE_ID = 2;
SELECT COUNT(*)  FROM IMG_OBJ  WHERE IMG_ID = 12 AND Y = 0;
SELECT ATT_CLASS FROM ATT_CLASSES WHERE ATT_CLASS_ID IN (   SELECT ATT_CLASS_ID   FROM IMG_OBJ_ATT   WHERE IMG_ID = 22 )
SELECT OBJ_CLASS FROM IMG_OBJ WHERE IMG_ID = 36 AND X = 0 AND Y = 0;
SELECT X, Y, W, H  FROM IMG_OBJ  WHERE OBJ_CLASS_ID IN (   SELECT OBJ_CLASS_ID    FROM OBJ_CLASSES    WHERE OBJ_CLASS = 'pizza' );
SELECT OBJ_CLASS FROM IMG_OBJ WHERE X = 126 AND Y = 363;
SELECT OBJ_CLASS FROM IMG_OBJ WHERE IMG_ID = 56 GROUP BY OBJ_CLASS ORDER BY COUNT(OBJ_CLASS_ID) DESC LIMIT 1;
Error: 第 7605 个样本有 0 个SQL。
SELECT PRED_CLASS FROM IMG_REL, PRED_CLASSES WHERE IMG_ID = 68 AND IMG_REL.PRED_CLASS_ID = PRED_CLASSES.PRED_CLASS_ID;
SELECT COUNT(*)  FROM IMG_REL  WHERE IMG_ID = 107 AND PRED_CLASS_ID IN (SELECT PRED_CLASS_ID FROM PRED_CLASSES WHERE PRED_CLASS = 'has');
SELECT MAX(PRED_CLASS) FROM IMG_REL WHERE IMG_ID = 4434;
Error: 第 7609 个样本有 0 个SQL。
SELECT X, Y FROM IMG_OBJ WHERE IMG_ID = 23 AND OBJ_SAMPLE_ID IN (   SELECT OBJ_SAMPLE_ID   FROM IMG_OBJ_ATT   WHERE IMG_ID = 23   AND ATT_CLASS_ID IN (     SELECT ATT_CLASS_ID     FROM ATT_CLASSES     WHERE ATT_CLASS = 'cast'   ) )
SELECT COUNT(*)  FROM ATT_CLASSES  WHERE ATT_CLASS = 'blue' AND IMG_ID = 2355735;
SELECT AVG(IMG_OBJ.W) AS avg_width, AVG(IMG_OBJ.H) AS avg_height, OBJ_CLASSES.OBJ_CLASS FROM IMG_OBJ JOIN OBJ_CLASSES ON IMG_OBJ.OBJ_CLASS_ID = OBJ_CLASSES.OBJ_CLASS_ID WHERE IMG_OBJ.IMG_ID = 47 GROUP BY OBJ_CLASSES.OBJ_CLASS;
SELECT firstName, lastName FROM Master WHERE birthCountry != 'USA' AND birthYear = 1990;
Error: 第 7614 个样本有 0 个SQL。
Error: 第 7615 个样本有 0 个SQL。
SELECT firstName, birthDate FROM Master WHERE deathYear IS NULL ORDER BY birthYear, birthMon, birthDay DESC LIMIT 1;
SELECT    name  FROM    Master  WHERE    deathYear IS NOT NULL    AND shootCatch IS NULL    AND deathYear - birthYear AS ageWhenDied;
Error: 第 7618 个样本有 0 个SQL。
SELECT AVG(weight)  FROM Master  WHERE height > 72;
SELECT    m.firstName,    m.birthCountry  FROM    Goalies g    JOIN Master m ON g.playerID = m.playerID  WHERE    SUM(g.Min) > 5000;
SELECT DISTINCT g.playerID, g.name FROM Goalies g JOIN Master m ON g.playerID = m.playerID WHERE m.pos = 'G' AND EXISTS (   SELECT 1   FROM Goalies g2   WHERE g2.playerID = m.playerID   AND g2.lgID = 'PCHA' ) AND EXISTS (   SELECT 1   FROM Goalies g3   WHERE g3.playerID = m.playerID   AND g3.lgID = 'NHL' );
Error: 第 7622 个样本有 0 个SQL。
SELECT m.firstName, m.height, m.weight, YEAR(NOW())-m.birthYear AS age FROM Master m JOIN Goalies g ON m.playerID = g.playerID WHERE g.tmID = 'COL' AND g.year BETWEEN 2000 AND 2010
SELECT g.firstName, g.lastName, g.year FROM Goalies g JOIN Master m ON g.playerID = m.playerID WHERE g.ENG >= 10;
SELECT g.playerID, g.year FROM Goalies g JOIN GoaliesSC sc ON g.playerID = sc.playerID WHERE g.playerID IN (   SELECT playerID   FROM GoaliesSC   ORDER BY (g.GA / g.SA) * 100   LIMIT 1 )
Error: 第 7626 个样本有 0 个SQL。
SELECT nameNick, nameGiven FROM Master WHERE playerID = 'aubinje01'; SELECT tmID, year FROM Teams WHERE playerID = 'aubinje01';
SELECT T1.playerID, T1.name, COUNT(T1.playerID) AS most_seasons, SUM(T2.Min) / COUNT(T2.playerID) AS avg_time_per_season FROM Goalies T1 JOIN Goalies T2 ON T1.playerID = T2.playerID GROUP BY T1.playerID, T1.name ORDER BY most_seasons DESC;
SELECT g.name, g.year FROM Goalies g JOIN GoaliesSC sc ON g.playerID = sc.playerID WHERE (g.SHO / g.GA) * 100 = 5.00;
SELECT name FROM Master WHERE deathYear IS NOT NULL AND birthCountry != deathCountry ORDER BY birthYear;
Error: 第 7631 个样本有 0 个SQL。
SELECT    m.firstName,    a.pos FROM    Master m   JOIN AwardsPlayers a ON m.playerID = a.playerID WHERE    m.deathYear IS NULL   AND a.pos IS NOT NULL   AND a.pos != '' GROUP BY    m.firstName,    a.pos HAVING    COUNT(DISTINCT a.pos) = 2;
SELECT nameNick FROM Master WHERE height = (SELECT MAX(height) FROM Master) AND lastNHL IS NOT NULL;
Error: 第 7634 个样本有 0 个SQL。
SELECT g.name, t.name FROM Goalies g JOIN Master m ON g.playerID = m.playerID JOIN AwardsPlayers ap ON g.playerID = ap.playerID JOIN Coaches c ON m.coachID = c.coachID JOIN AwardsCoaches ac ON c.coachID = ac.coachID WHERE g.pos = 'G' AND m.shootCatch = 'L' AND ac.year > (SELECT MAX(lastNHL) FROM Master WHERE pos = 'G' AND shootCatch = 'L');
SELECT m.name, g.tmID, t.name AS team FROM Master m JOIN Goalies g ON m.playerID = g.playerID JOIN Teams t ON g.tmID = t.tmID WHERE m.pos = 'G' AND m.deathYear IS NOT NULL AND m.birthCountry = 'Canada'
SELECT g.playerID, g.year FROM Goalies g JOIN Teams t ON g.tmID = t.tmID WHERE t.lgID = 'AL' OR t.lgID = 'NL' AND t.year = g.year AND t.tmID = 'BOS' AND g.pos = 'G' ORDER BY t.year, t.rank LIMIT 1;
SELECT t.name FROM Goalies g JOIN Master m ON g.playerID = m.playerID JOIN Teams t ON g.tmID = t.tmID WHERE g.firstNHL < 1950 AND m.deathYear IS NOT NULL
SELECT    m.firstName,    t.name,    t.year FROM    Master m   JOIN Coaches c ON m.coachID = c.coachID   JOIN Teams t ON c.tmID = t.tmID WHERE    m.playerID = c.coachID AND m.lastNHL < c.year;
SELECT c.firstName, t.name FROM Coaches c JOIN Teams t ON c.tmID = t.tmID WHERE c.coachID NOT IN (SELECT coachID FROM Master) ORDER BY (c.w / c.g) * 100 DESC LIMIT 1;
SELECT c.name, c.year FROM Coaches c JOIN Teams t ON c.tmID = t.tmID WHERE t.tmID = 'DET' AND c.w / c.g * 100 = (SELECT MAX(w / g * 100) FROM Coaches c2 JOIN Teams t2 ON c2.tmID = t2.tmID WHERE t2.tmID = 'DET');
SELECT c.firstName, m.birthDay, m.birthMon, m.birthYear FROM Coaches c JOIN Master m ON c.coachID = m.coachID WHERE tmID IN (   SELECT tmID   FROM Coaches   WHERE tmID IN (     SELECT tmID     FROM Teams     WHERE lgID = 'MLB'   )   GROUP BY tmID   ORDER BY COUNT(DISTINCT year) DESC   LIMIT 1 ) ORDER BY c.firstName;
SELECT    m.name,    t.name  FROM    Goalies g    JOIN Master m ON g.playerID = m.playerID    JOIN Teams t ON g.tmID = t.tmID  WHERE    g.L > g.W    AND g.year IN (     SELECT        year      FROM        Goalies      GROUP BY        year      HAVING        COUNT(*) >= 2   ) ORDER BY    g.year,    m.name;
Error: 第 7644 个样本有 0 个SQL。
SELECT nameGiven FROM Master WHERE playerID = 'aebisda01'  SELECT AVG(SUM(Min)/SUM(GP)) AS avg_time FROM Goalies WHERE playerID = 'aebisda01' AND pos = 'G'
SELECT lastName, firstName FROM Goalies G JOIN Master M ON G.playerID = M.playerID WHERE M.deathYear IS NULL AND (G.W / G.GP) * 100 > 50;
SELECT COUNT(*)  FROM AwardsMisc  WHERE note = 'posthumous' UNION SELECT COUNT(*)  FROM AwardsCoaches  WHERE note = 'posthumous';
SELECT COUNT(*) FROM AwardsPlayers WHERE year = 1983 AND pos = 'G';
Error: 第 7649 个样本有 0 个SQL。
Error: 第 7650 个样本有 0 个SQL。
Error: 第 7651 个样本有 0 个SQL。
Error: 第 7652 个样本有 0 个SQL。
SELECT COUNT(DISTINCT tmID)  FROM TeamsPost  WHERE PostW = PostL;
SELECT hof.name FROM HOF WHERE hof.year = 1978;
SELECT COUNT(hofID) FROM HOF WHERE category = 'Builder';
SELECT COUNT(*)  FROM HOF  WHERE year > 1980 AND category = 'Player';
SELECT nameNick FROM Master WHERE hofID IN (SELECT hofID FROM HOF WHERE year = 2007)
SELECT hof.year FROM Master JOIN HOF ON Master.hofID = HOF.hofID WHERE Master.height = (SELECT MAX(height) FROM Master);
Error: 第 7659 个样本有 0 个SQL。
Error: 第 7660 个样本有 0 个SQL。
Error: 第 7661 个样本有 0 个SQL。
Error: 第 7662 个样本有 0 个SQL。
Error: 第 7663 个样本有 0 个SQL。
Error: 第 7664 个样本有 0 个SQL。
Error: 第 7665 个样本有 0 个SQL。
SELECT COUNT(*) FROM Coaches JOIN HOF ON Coaches.coachID = HOF.hofID WHERE Coaches.weight > 195;
SELECT m.firstName FROM Master m JOIN HOF h ON m.hofID = h.hofID WHERE m.shootCatch IS NULL;
SELECT COUNT(*) FROM Master WHERE playerID IS NOT NULL AND coachID IS NOT NULL   AND hofID IS NOT NULL;
SELECT birthCity FROM Master WHERE playerID IN (   SELECT playerID   FROM AwardsPlayers   WHERE year = 1970 )
SELECT COUNT(*) FROM Master JOIN AwardsPlayers ON Master.playerID = AwardsPlayers.playerID WHERE Master.birthCity = 'Toronto' AND AwardsPlayers.award = 'All-Rookie';
Error: 第 7671 个样本有 0 个SQL。
SELECT COUNT(*) FROM Master JOIN AwardsPlayers ON Master.playerID = AwardsPlayers.playerID WHERE deathState = 'Massachusetts';
Error: 第 7673 个样本有 0 个SQL。
Error: 第 7674 个样本有 0 个SQL。
SELECT COUNT(hofID)  FROM Master  WHERE birthMon IN ('7', '8')    AND hofID IS NOT NULL;
SELECT birthMon FROM Master WHERE playerID IN (   SELECT playerID   FROM AwardsPlayers   GROUP BY playerID   ORDER BY COUNT(award) DESC   LIMIT 1 )
SELECT birthYear, COUNT(award) AS totalAwards FROM Master JOIN AwardsMisc ON Master.playerID = AwardsMisc.ID GROUP BY birthYear ORDER BY totalAwards DESC LIMIT 1;
SELECT birthCountry FROM Master WHERE EXISTS (   SELECT 1   FROM AwardsPlayers   WHERE AwardsPlayers.playerID = Master.playerID ) GROUP BY birthCountry ORDER BY COUNT(award) DESC LIMIT 1;
Error: 第 7679 个样本有 0 个SQL。
Error: 第 7680 个样本有 0 个SQL。
SELECT AVG(AVG(divide(weight, multiply(height, height)))) AS avg_bmi FROM Master WHERE hofID IS NOT NULL GROUP BY coachID
Error: 第 7682 个样本有 0 个SQL。
SELECT MAX(year) - MIN(year) AS years_of_playing FROM Master WHERE playerID = 'healygl01';
Error: 第 7684 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Scoring  WHERE playerID = 'rutlewa01' AND year = 1967;
Error: 第 7686 个样本有 0 个SQL。
Error: 第 7687 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Scoring  WHERE playerID = 'vernomi01'  AND year = 1998  AND T/OL > 0;
Error: 第 7689 个样本有 0 个SQL。
SELECT * FROM HOF JOIN Master ON HOF.hofID = Master.hofID WHERE Master.legendsID = 'P194502' AND HOF.category = 'posthumous';
SELECT pos FROM Master WHERE name = 'Mike Antonovich';
Error: 第 7692 个样本有 0 个SQL。
Error: 第 7693 个样本有 0 个SQL。
SELECT m.nameGiven || ' ' || m.lastName AS fullName FROM Master m JOIN Scoring s ON m.playerID = s.playerID WHERE s.ENG = 10 ORDER BY m.height DESC LIMIT 1;
SELECT m.shootCatch FROM Goalies g JOIN Master m ON g.playerID = m.playerID WHERE g.year = 2010 AND g.SHOW = (   SELECT MAX(SHO)   FROM Goalies   WHERE year = 2010 )
Error: 第 7696 个样本有 0 个SQL。
SELECT    m.nameGiven || ' ' || m.nameNick AS fullName FROM    Goalies g   JOIN Master m ON g.playerID = m.playerID WHERE    g.tmID = (SELECT tmID FROM Teams WHERE franchID = 'NJD') ORDER BY    g.SA - g.GA DESC LIMIT 1;
SELECT t.name FROM TeamsPost tp JOIN Teams t ON tp.tmID = t.tmID WHERE year = 2010 ORDER BY PostENG DESC LIMIT 1;
Error: 第 7699 个样本有 0 个SQL。
SELECT c.name, c.notes, c.nameNick FROM Coaches c JOIN AwardsCoaches ac ON c.coachID = ac.coachID WHERE c.year = 2009 ORDER BY (c.w / (c.w + c.l)) DESC LIMIT 1;
SELECT c.name FROM Teams t JOIN Coaches c ON t.tmID = c.tmID AND t.year = c.year WHERE t.year = 2011 AND t.PPC > 0 ORDER BY t.PPG / t.PPC DESC LIMIT 1;
Error: 第 7702 个样本有 0 个SQL。
Error: 第 7703 个样本有 0 个SQL。
SELECT G FROM Scoring WHERE playerID = 'dyeba01' AND year = 1921 AND stint = (SELECT stint              FROM Scoring              WHERE playerID = 'dyeba01'              AND year = 1921              AND stint = (SELECT stint                           FROM SeriesPost                           WHERE year = 1921                           AND round = 'F'                           AND series = 'SCF'                           AND tmIDWinner = (SELECT tmID                                              FROM Teams                                              WHERE year = 1921                                              AND lgID = 'NL'                                              AND tmID = (SELECT tmID                                                          FROM SeriesPost                                                          WHERE year = 1921                                                          AND round = 'F'                                                          AND series = 'SCF'                                                          AND tmIDWinner = (SELECT tmID                                                                             FROM SeriesPost                                                                             WHERE year = 1921                                                                             AND round = 'F'                                                                             AND series = 'SCF'                                                                             ORDER BY year, round, series                                                                             LIMIT 1))));
SELECT * FROM Scoring WHERE year IN (SELECT year FROM SeriesPost WHERE round = 'F' AND series = 'S') AND pos = 'D' OR pos = 'F' OR pos = 'C' ORDER BY A DESC LIMIT 1;
Error: 第 7706 个样本有 0 个SQL。
Error: 第 7707 个样本有 0 个SQL。
SELECT TeamsPost.G FROM TeamsPost JOIN Goalies ON TeamsPost.tmID = Goalies.tmID JOIN CombinedShutouts ON Goalies.playerID = CombinedShutouts.IDgoalie1 WHERE TeamsPost.year = 2011 AND CombinedShutouts.month = 'Post' GROUP BY TeamsPost.tmID HAVING COUNT(DISTINCT Goalies.playerID) = 3
Error: 第 7709 个样本有 0 个SQL。
SELECT COUNT(DISTINCT year)  FROM Master  WHERE lastNHL = (SELECT MAX(lastNHL) FROM Master WHERE coachID IN                    (SELECT coachID FROM Coaches WHERE stint LIKE '%NHL%'))
Error: 第 7711 个样本有 0 个SQL。
SELECT CONCAT(Master.birthYear, '/', Master.birthMon, '/', Master.birthDay) AS birthday FROM Goalies JOIN Master ON Goalies.playerID = Master.playerID WHERE Goalies.year = '1965' ORDER BY Goalies.GA DESC LIMIT 1;
Error: 第 7713 个样本有 0 个SQL。
Error: 第 7714 个样本有 0 个SQL。
SELECT Master.shootCatch FROM Master JOIN Scoring ON Master.playerID = Scoring.playerID WHERE Scoring.year = 1989 AND Scoring.pos = 'F' AND Scoring.SHG = 7;
SELECT    m.firstName, m.lastName, m.nameGiven, m.nameNick FROM    Master m JOIN    Scoring s ON m.playerID = s.playerID WHERE    s.year = 1986 ORDER BY    s.GWG DESC LIMIT 1;
SELECT SOG FROM Scoring WHERE playerID = 'neelyca01' AND year = 1990;
SELECT firstName + ' ' + lastName AS Coach FROM Coaches JOIN Teams ON Coaches.tmID = Teams.tmID WHERE Coaches.year = 2003 ORDER BY Teams.PIM DESC LIMIT 1;
SELECT g.playerID, g.name, g.weight FROM Goalies g WHERE g.weight > 190 AND EXISTS (   SELECT 1   FROM Scoring s   WHERE s.playerID = g.playerID   AND s.year = 1978   ORDER BY s.GA DESC   LIMIT 1 )
SELECT      ROUND(         (SUM(w) - (SELECT SUM(w) FROM Coaches WHERE year = '2005' AND tmID = 'VAN')) /          ((SELECT SUM(w) FROM Coaches WHERE year = '2006' AND tmID = 'VAN') - (SELECT SUM(w) FROM Coaches WHERE year = '2005' AND tmID = 'VAN')) * 100,          2     ) AS 'winning rate improvement percentage' FROM      Coaches WHERE      year = '2006' AND tmID = 'VAN';
SELECT m.legendsID FROM Goalies g JOIN GoaliesPost gp ON g.playerID = gp.playerID WHERE gp.year = '2011' ORDER BY (1 - (gp.PostGA / gp.PostSA)) * 100 DESC LIMIT 1;
SELECT COUNT(*)  FROM Master m  JOIN Coaches c ON m.coachID = c.coachID  WHERE m.hofID IS NOT NULL;
SELECT t.name FROM Teams t JOIN (SELECT tmID, COUNT(*) as Ties FROM Teams GROUP BY tmID ORDER BY Ties DESC) as TiesTable ON t.tmID = TiesTable.tmID JOIN (SELECT tmID, SUM(PIM) as PIM FROM Teams WHERE BenchMinor > 0 GROUP BY tmID) as PIMTable ON t.tmID = PIMTable.tmID WHERE TiesTable.Ties = (SELECT COUNT(*) FROM Teams WHERE Ties > 0 ORDER BY Ties DESC LIMIT 1)
SELECT a.award, COUNT(*) as count FROM AwardsCoaches a JOIN Coaches c ON a.coachID = c.coachID WHERE c.w > (SELECT MAX(w) FROM Coaches) GROUP BY a.award ORDER BY count DESC;
SELECT      PPG,      (PPG / (PPG + PPC)) AS PowerPlayPercentage FROM      Teams WHERE      L = (SELECT MAX(L) FROM Teams)
SELECT DIVIDE(COUNT(hofID), 30) AS average_players_in_hof FROM HOF WHERE year BETWEEN 1950 AND 1980;
SELECT birthCountry, COUNT(*) as TotalPlayers, MAX(birthYear) as YearMostPlayersBorn FROM Master GROUP BY birthCountry ORDER BY TotalPlayers DESC LIMIT 1;
SELECT COUNT(W) FROM Goalies G JOIN Teams T ON G.tmID = T.tmID WHERE G.SHO = (SELECT MAX(SHO) FROM Goalies) AND G.W = T.W;
SELECT tmID FROM TeamSplits WHERE year = 2005 ORDER BY rW DESC LIMIT 1;
SELECT pos FROM Master WHERE birthDay + birthMon + birthYear = (     SELECT birthDay + birthMon + birthYear     FROM Master     ORDER BY birthDay + birthMon + birthYear     LIMIT 1 OFFSET 8 );
SELECT SUM(PostGA)  FROM Goalies  WHERE year = 1924 AND lgID = 'WCHL' AND playerID IN (   SELECT playerID    FROM Goalies    WHERE year = 1924 AND lgID = 'WCHL'    ORDER BY PostGA DESC    LIMIT 1 );
SELECT tmID FROM TeamsHalf WHERE year = 2006 ORDER BY OctL DESC LIMIT 1;
SELECT COUNT(*) FROM Master WHERE shootCatch IS NULL AND firstNHL = 2011;
SELECT year, age FROM (   SELECT year, playerID, G, birthYear,           DATEDIFF(year, birthYear, year) AS age   FROM Scoring   WHERE G = (SELECT MAX(G) FROM Scoring) ) AS temp ORDER BY age DESC LIMIT 1;
SELECT AVG(height) AS average_height FROM Master WHERE pos = 'G' AND birthYear BETWEEN '1970' AND '1979' AND shootCatch = 'L';  SELECT tmID, year FROM Goalies WHERE playerID IN (   SELECT playerID   FROM Master   WHERE pos = 'G' AND birthYear BETWEEN '1970' AND '1979' AND shootCatch = 'L'   ORDER BY height DESC   LIMIT 1 ) ORDER BY year DESC;
SELECT SUM(A) AS total_assists, nameGiven + ' ' + lastName AS full_name FROM Scoring WHERE lgID = 'NHL' AND playerID IN (   SELECT playerID   FROM Scoring   WHERE lgID = 'NHL'   GROUP BY playerID   ORDER BY SUM(A) DESC   LIMIT 1 )
Error: 第 7737 个样本有 0 个SQL。
SELECT c.coachID, ac.award FROM Coaches c JOIN AwardsCoaches ac ON c.coachID = ac.coachID WHERE c.coachID IN (   SELECT c.coachID   FROM Coaches c   JOIN Teams t ON c.tmID = t.tmID   GROUP BY c.coachID   ORDER BY MAX(c.w) DESC   LIMIT 1 );
Error: 第 7739 个样本有 0 个SQL。
SELECT      m.nameGiven + ' ' + m.lastName AS FullName,     DATEDIFF(m.birthYear, m.firstNHL) AS YearsPlaying FROM      Master m WHERE      m.lgID = 'NHL'     AND m.playerID IN (         SELECT              playerID         FROM              Scoring         WHERE              pos = 'D'  -- Assuming defenseman, adjust as needed         ORDER BY              min ASC         LIMIT 1     )
SELECT firstName FROM Master WHERE year BETWEEN 2003 AND 2005 AND GP = (SELECT MAX(GP) FROM Master WHERE year BETWEEN 2003 AND 2005) AND PIM BETWEEN 200 AND 250;
SELECT      (lastNHL(playerID) - birthYear(playerID)) AS age FROM      Goalies WHERE      pos = 'G' ORDER BY      min(GA) ASC LIMIT 1;
SELECT    a.pos,    a.nameGiven + ' ' + a.lastName AS playerName,    am.name AS awardName FROM    AwardsPlayers a   JOIN Master m ON a.playerID = m.playerID   JOIN AwardsMisc am ON a.award = am.name WHERE    a.pos = (     SELECT        pos      FROM        AwardsPlayers      GROUP BY        pos      ORDER BY        COUNT(award) DESC      LIMIT 1   )   AND a.playerID = (     SELECT        playerID      FROM        AwardsPlayers      WHERE        pos = (         SELECT            pos          FROM            AwardsPlayers          GROUP BY            pos          ORDER BY            COUNT(award) DESC          LIMIT 1       )      ORDER BY        year DESC      LIMIT 1   );
Error: 第 7744 个样本有 0 个SQL。
SELECT      COUNT(DISTINCT t.tmID) AS num_teams_played_against,     t.name AS team_name FROM      Teams t JOIN      (SELECT          tmID,          MAX(W) AS max_wins     FROM          Teams     WHERE          year = 1915     GROUP BY          tmID) AS max_wins_team ON      t.tmID = max_wins_team.tmID WHERE      t.year = 1915     AND t.W = max_wins_team.max_wins JOIN      TeamVsTeam tvt ON      t.tmID = tvt.tmID GROUP BY      t.name
SELECT p.name, p.pos, SUM(GWG) AS GWG FROM Scoring AS s JOIN Master AS p ON s.playerID = p.playerID WHERE s.SHG BETWEEN 1 AND 5 GROUP BY p.name, p.pos ORDER BY GWG DESC LIMIT 1;
Error: 第 7747 个样本有 0 个SQL。
SELECT      y.year,      t.name FROM      Teams t JOIN (     SELECT          year,          MAX(G) AS max_G     FROM          Scoring     WHERE          SHA >= 7     GROUP BY          year ) y ON t.year = y.year WHERE      t.G = y.max_G ORDER BY      y.year DESC LIMIT 1;
SELECT c.coachID, c.name FROM Coaches c JOIN Teams t ON c.tmID = t.tmID WHERE t.year = 1969 AND t.rank = 4;
Error: 第 7750 个样本有 0 个SQL。
SELECT      nameGiven + ' ' + lastName AS name,      year,      tmID,      G  FROM      Master  WHERE      birthCountry = 'Canada'      AND (SUBTRACT(firstNHL, birthYear) BETWEEN 18 AND 24)      AND G < 5;
Error: 第 7752 个样本有 0 个SQL。
SELECT DIVIDE(PPG, PPC) AS PowerPlayChances FROM Teams WHERE name = 'New York Rangers' AND year = 2009;
Error: 第 7754 个样本有 0 个SQL。
SELECT COUNT(*) FROM Teams WHERE year = 2006 AND W > L AND Pts > 100;
SELECT name FROM Teams WHERE year = 2006 ORDER BY PIM DESC LIMIT 1;
SELECT name FROM Teams WHERE year = 2006 ORDER BY PIM DESC LIMIT 3;
SELECT tmID, name FROM TeamsPost WHERE year = 1995 AND tmID IN (SELECT tmID FROM Teams WHERE name IN ('Florida Panthers', 'Edmonton Oilers', 'Los Angeles Kings')) ORDER BY PKC DESC LIMIT 1;
SELECT name FROM Teams WHERE year = 1917 AND playoff = 'Stanley Cup Finals' AND W > L;
SELECT t.name FROM Teams t JOIN SeriesPost sp ON t.tmID = sp.tmIDWinner OR t.tmID = sp.tmIDLoser WHERE sp.year = 1922 AND sp.round = 'F'
SELECT COUNT(DISTINCT tmID) FROM Teams WHERE year = 1922 AND Pts > 20
Error: 第 7762 个样本有 0 个SQL。
Error: 第 7763 个样本有 0 个SQL。
Error: 第 7764 个样本有 0 个SQL。
SELECT name FROM Teams WHERE year = 1909 AND T > 0;
SELECT c.firstName FROM Coaches c JOIN Teams t ON c.tmID = t.tmID WHERE t.name = 'Montreal Canadiens';
Error: 第 7767 个样本有 0 个SQL。
Error: 第 7768 个样本有 0 个SQL。
Error: 第 7769 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Coaches c  JOIN Teams t ON c.tmID = t.tmID  WHERE t.name = 'Philadelphia Flyers'  AND c.birthMon = 3;
SELECT COUNT(*) FROM Coaches JOIN Teams ON Coaches.tmID = Teams.tmID WHERE Coaches.birthCountry = 'USA' AND Teams.name = 'Philadelphia Flyers';
Error: 第 7772 个样本有 0 个SQL。
Error: 第 7773 个样本有 0 个SQL。
Error: 第 7774 个样本有 0 个SQL。
Error: 第 7775 个样本有 0 个SQL。
SELECT t.name FROM Teams t JOIN TeamVsTeam tvt ON t.tmID = tvt.tmID JOIN Teams b ON tvt.oppID = b.tmID WHERE b.name = 'Buffalo Sabres';
SELECT SUM(PIM)  FROM Teams  WHERE year = 1918 AND name = 'Montreal Canadiens';
SELECT W FROM Teams WHERE year = (   SELECT year   FROM Teams   WHERE lgID = 'NL' AND name = 'Montreal Canadiens' AND PIM = 24 AND playoff = 'Y' )
SELECT year FROM TeamsPost WHERE tmID IN (SELECT tmID FROM Teams WHERE name = 'Montreal Canadiens') AND PIM = 49;
Error: 第 7780 个样本有 0 个SQL。
SELECT AVG(DIVIDE(W,G))  FROM Teams  WHERE year = 2000 AND name = 'Buffalo Sabres';
Error: 第 7782 个样本有 0 个SQL。
SELECT AVG(DIVIDE(SUM(DIVIDE(W,G)), COUNT(oppID))) AS avg_win_rate FROM (   SELECT *,           (W / G) AS win_rate   FROM Teams   JOIN TeamVsTeam ON Teams.tmID = TeamVsTeam.tmID   WHERE Teams.name = 'Montreal Canadiens' AND TeamVsTeam.year IN (     SELECT year     FROM SeriesPost     WHERE series = 'Stanley Cup Finals'   ) ) AS temp;
Error: 第 7784 个样本有 0 个SQL。
SELECT hof.name FROM HOF WHERE category NOT IN ('player', 'builder') ORDER BY year DESC LIMIT 1;
SELECT hof.hofID FROM HOF hof WHERE hof.year BETWEEN 1970 AND 1979 AND hof.category = 'Referee';
SELECT COUNT(*)  FROM HOF  WHERE year = 1958 AND category = 'player';
SELECT COUNT(*) FROM Master WHERE hofID IS NOT NULL   AND playerID IS NOT NULL   AND coachID IS NOT NULL;
Error: 第 7789 个样本有 0 个SQL。
SELECT Teams.BenchMinor FROM Coaches JOIN Teams ON Coaches.tmID = Teams.tmID WHERE Coaches.coachID IN (SELECT coachID FROM Coaches WHERE year = 1982 AND stint LIKE '%Scotty Bowman%') AND Teams.year = 1982;
SELECT m.nameGiven || ' ' || m.lastName AS fullName FROM Master m JOIN Scoring s ON m.playerID = s.playerID WHERE s.ENG = 10 ORDER BY m.height DESC LIMIT 1;
Error: 第 7792 个样本有 0 个SQL。
SELECT COUNT(DISTINCT tmID)  FROM Goalies G  JOIN Master M ON G.playerID = M.playerID  WHERE M.lastName = 'Young';
SELECT * FROM Master WHERE playerID IN (   SELECT playerID   FROM Goalies   WHERE tmID = 'BOS' AND year = 1972 ) AND coachID IS NOT NULL AND hofID IS NULL;
Error: 第 7795 个样本有 0 个SQL。
Error: 第 7796 个样本有 0 个SQL。
Error: 第 7797 个样本有 0 个SQL。
SELECT g.playerID, g.name FROM Goalies g JOIN Teams t ON g.tmID = t.tmID WHERE t.name = 'Minnesota North Stars' ORDER BY g.GA DESC LIMIT 1;
Error: 第 7799 个样本有 0 个SQL。
Error: 第 7800 个样本有 0 个SQL。
SELECT      (SUM(GP) - LAG(SUM(GP)) OVER (PARTITION BY playerID WHERE year = 2005)) / SUM(GP) AS decrease_rate FROM      Goalies WHERE      playerID IN (SELECT playerID FROM Master WHERE lastName = 'Aebischer' AND firstName = 'David') AND year IN (2005, 2006);
SELECT M.playerID, C.coachID FROM Master M JOIN Coaches C ON M.coachID = C.coachID WHERE M.playerID IS NOT NULL AND C.coachID IS NOT NULL;
SELECT playerID FROM Master WHERE AVG(height) = 75;
SELECT playerID FROM Master ORDER BY weight DESC LIMIT 5;
SELECT m.name FROM Master m WHERE m.birthCountry = 'Finland';
SELECT playerID FROM Master WHERE deathYear IS NOT NULL;
Error: 第 7807 个样本有 0 个SQL。
Error: 第 7808 个样本有 0 个SQL。
SELECT SUM(G) AS total_goals, DATE_SUB(CURDATE(), INTERVAL birthYear YEAR) AS age FROM Scoring WHERE playerID = 'aaltoan01';
SELECT coachID FROM Coaches WHERE coachID NOT IN (SELECT playerID FROM Master) AND EXISTS (SELECT 1 FROM AwardsCoaches WHERE coachID = Coaches.coachID);
SELECT playerID FROM Master WHERE pos = 'L' AND weight > 200;
Error: 第 7812 个样本有 0 个SQL。
Error: 第 7813 个样本有 0 个SQL。
Error: 第 7814 个样本有 0 个SQL。
SELECT COUNT(L) AS loses, SUM(A) AS assists FROM Scoring WHERE year = 2010 AND tmID = (SELECT tmID FROM Teams WHERE name = 'BOS');
SELECT SUM(weight)  FROM Master  WHERE tmID = (SELECT tmID FROM Teams WHERE name = 'ANA' AND year = 1997);
SELECT * FROM Master WHERE year BETWEEN 1925 AND 1936 ORDER BY height LIMIT 1;
SELECT t.tmID, t.name FROM Teams t WHERE t.year = 2000 ORDER BY (COUNT(t.W) / (COUNT(t.W) + COUNT(t.L))) DESC LIMIT 1;  SELECT m.birthCountry, m.playerID FROM Master m WHERE m.year = 2000 AND m.tmID IN (   SELECT t.tmID   FROM Teams t   WHERE t.year = 2000   ORDER BY (COUNT(t.W) / (COUNT(t.W) + COUNT(t.L))) DESC   LIMIT 1 );
SELECT      DIVIDE(W, G) AS wins_per_game,      playerID,      G AS max_goals FROM      Scoring WHERE      year = 1998 AND tmID = 'CAR' ORDER BY      G DESC LIMIT 1;
SELECT Name FROM Country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM Country);
SELECT c.Name FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' LIMIT 5;
SELECT AVG(Population)  FROM City  WHERE District = 'Karnataka';
SELECT Language FROM CountryLanguage WHERE CountryCode = 'USA';
SELECT COUNT(*)  FROM CountryLanguage  WHERE Language = 'Portuguese';
SELECT COUNT(*)  FROM City  WHERE CountryCode IN (SELECT Code                        FROM Country                        WHERE District = 'England');
SELECT COUNT(*) FROM City WHERE CountryCode IN (   SELECT Code   FROM Country   ORDER BY SurfaceArea DESC   LIMIT 1 )
SELECT Capital, Population FROM Country WHERE Name = 'San Marino';
Error: 第 7828 个样本有 0 个SQL。
SELECT c.Name, c.Capital, cl.Language FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE c.LifeExpectancy = (SELECT MAX(LifeExpectancy) FROM Country) AND cl.IsOfficial = 'T';
SELECT c.Name, cl.Language FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE c.Continent = 'Antarctica' AND cl.IsOfficial = 'T';
SELECT c.Name FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' LIMIT 5;
SELECT Language FROM CountryLanguage WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE Region = 'Baltic Countries' ) AND Percentage > 80;
SELECT Language FROM CountryLanguage WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE Region = 'Baltic Countries' ) AND Percentage > 80;
SELECT c.Name, c.CountryCode, c.Population, c.CountryCode, co.LifeExpectancy FROM City c JOIN Country co ON c.CountryCode = co.Code WHERE c.Population = (SELECT MAX(Population) FROM City);
SELECT c.Name AS Capital, cl.Language FROM Country c JOIN City ci ON c.Capital = ci.Name JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE c.LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM Country);
SELECT c.Name, c.Population, c.Capital, cl.Language FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE c.SurfaceArea = (SELECT MIN(SurfaceArea) FROM Country) AND cl.IsOfficial = 'T';
SELECT MULTIPLY(DIVIDE(COUNT(cl.Language), COUNT(cl.CountryCode)), 1.0) AS percentage FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE c.Continent = 'North America' AND cl.IsOfficial = 'Yes';
SELECT Name FROM City WHERE Population = (SELECT MIN(Population) FROM City)
SELECT Continent FROM Country WHERE Code IN (   SELECT Code   FROM Country   ORDER BY SurfaceArea ASC   LIMIT 1 )
SELECT HeadOfState FROM Country WHERE Code IN (   SELECT CountryCode   FROM City   ORDER BY Population DESC   LIMIT 1 )
SELECT c.Name FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' ORDER BY c.Capital DESC LIMIT 1;
SELECT Name  FROM City  WHERE CountryCode IN (   SELECT Code    FROM Country    WHERE LifeExpectancy = 66.4 );
SELECT c.HeadOfState FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' ORDER BY cl.Percentage LIMIT 1;
SELECT SurfaceArea FROM Country WHERE Code = (SELECT CountryCode FROM City WHERE Name = 'Sutton Coldfield');
SELECT cl.Language FROM CountryLanguage cl JOIN Country c ON cl.CountryCode = c.Code WHERE c.Population < 8000;
SELECT Language FROM CountryLanguage WHERE CountryCode IN (SELECT Code FROM Country WHERE Name = 'Belgium') AND IsOfficial = 'T';
SELECT c.Name, c.District FROM City c JOIN Country co ON c.CountryCode = co.Code WHERE co.LocalName = 'Hajastan';
SELECT COUNT(*)  FROM CountryLanguage  WHERE CountryCode IN (SELECT Code FROM Country WHERE Name = 'Cyprus');
SELECT Language FROM CountryLanguage WHERE CountryCode = (SELECT Code                      FROM Country                      WHERE Name = 'Belize');
SELECT District FROM City WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE HeadOfState = 'Adolf Ogi' )
SELECT HeadOfState FROM Country WHERE Code IN (   SELECT CountryCode   FROM City   WHERE District = 'Santa Catarina' );
SELECT MULTIPLY(DIVIDE(SUM(CountryCode WHERE GNP > 1500 AND Language = 'English'), COUNT(CountryCode WHERE GNP > 1500)), 1.0) AS Percentage FROM CountryLanguage WHERE Language = 'English' AND CountryCode IN (SELECT Code FROM Country WHERE GNP > 1500)
SELECT      SUBTRACT(         COUNT(CountryCode),          COUNT(CountryCode)      )  FROM      CountryLanguage,      Country  WHERE      Language = 'English'      AND GovernmentForm IN ('Republic', 'ConstitutionalMonarchy')      AND Country.Code = CountryLanguage.CountryCode;
SELECT Name FROM Country WHERE IndepYear = 1994;
SELECT Name FROM Country WHERE Continent = 'Asia';
SELECT c.Name FROM Country c WHERE c.Continent = 'Asia' ORDER BY c.GNP DESC LIMIT 1;
SELECT COUNT(*)  FROM City  WHERE CountryCode = 'PHL';
SELECT LocalName FROM Country WHERE Name = 'Ukraine';
SELECT COUNT(*)  FROM Country  WHERE GovernmentForm = 'Socialistic Republic';
SELECT Language FROM CountryLanguage WHERE CountryCode = (SELECT Code                      FROM Country                      WHERE Name = 'China') AND IsOfficial = 'T';
SELECT    (SUM(CountryLanguage.Percentage) / SUM(City.Population) * 100)  FROM    Country    JOIN City ON Country.Code = City.CountryCode    JOIN CountryLanguage ON Country.Code = CountryLanguage.CountryCode  WHERE    Country.Name = 'China'    AND CountryLanguage.Language = 'Chinese';
SELECT c.GovernmentForm FROM City c WHERE c.Name = 'Manila';
SELECT Capital FROM Country WHERE Name = 'Philippines';
SELECT Language FROM CountryLanguage WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE Continent = 'Europe' )
SELECT HeadOfState FROM Country WHERE Code IN (   SELECT CountryCode   FROM City   WHERE Name = 'Pyongyang' );
SELECT COUNT(*)  FROM CountryLanguage  WHERE IsOfficial = 'F' AND CountryCode IN (SELECT Code FROM Country WHERE Name = 'Italy');
SELECT Name FROM City WHERE CountryCode IN (SELECT Code FROM Country WHERE Name = 'Russia') ORDER BY Population ASC LIMIT 1;
SELECT c.Name  FROM City c, Country ci  WHERE c.CountryCode = ci.Code  AND ci.LifeExpectancy = (SELECT MAX(LifeExpectancy) FROM Country);
SELECT Language FROM CountryLanguage WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE IndepYear = 1830 ) AND (IsOfficial = 'T' OR IsOfficial = 'F');
SELECT Capital FROM Country WHERE Code IN (   SELECT CountryCode   FROM City   ORDER BY Population DESC   LIMIT 1 )
SELECT c.Name FROM Country c, CountryLanguage cl WHERE c.Code = cl.CountryCode AND c.Continent = 'Asia' AND cl.Language = 'English' AND cl.IsOfficial = 'F';
SELECT AVG(GNP)  FROM Country  WHERE Code IN (   SELECT CountryCode    FROM CountryLanguage    WHERE Language = 'Arabic'    AND IsOfficial = 'Yes' )
SELECT DIVIDE(MULTIPLY(SUM(SurfaceArea), (SELECT SUM(SurfaceArea) FROM Country)), 1.0) AS Percentage FROM CountryLanguage WHERE Language = 'Chinese';
SELECT Name FROM Country ORDER BY SurfaceArea LIMIT 1;
SELECT Name FROM Country WHERE Population = (SELECT MAX(Population) FROM Country);
SELECT Language FROM CountryLanguage WHERE CountryCode IN (   SELECT CountryCode   FROM City   GROUP BY CountryCode   ORDER BY MIN(Population)   LIMIT 1 )
SELECT c.Name FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' AND cl.IsOfficial = 'T';
SELECT cl.Language FROM CountryLanguage cl JOIN Country c ON cl.CountryCode = c.Code WHERE c.IndepYear > 1990 AND cl.IsOfficial = 'T';
SELECT Percentage FROM CountryLanguage WHERE Language = 'English' AND CountryCode IN (SELECT Code FROM Country WHERE Name = 'Australia');
SELECT Language FROM CountryLanguage WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE Name = 'Malaysia' )
SELECT c.Name FROM City c JOIN Country co ON c.CountryCode = co.Code ORDER BY c.Population DESC LIMIT 1;
SELECT LifeExpectancy FROM Country WHERE Code IN (   SELECT CountryCode   FROM City   ORDER BY Population DESC   LIMIT 1 )
SELECT c.GNP FROM City c WHERE c.Population = (SELECT MIN(Population) FROM City);
SELECT c.Name FROM (   SELECT c.Name, c.Population   FROM City c   ORDER BY c.Population DESC   LIMIT 5 ) AS top5_cities JOIN CountryLanguage cl ON top5_cities.Name = (SELECT c.Name FROM City c WHERE c.Population = cl.CountryCode) JOIN Country c ON top5_cities.Name = c.Capital GROUP BY c.Name ORDER BY COUNT(cl.Language) DESC LIMIT 1;
SELECT c.Name, c.SurfaceArea, c.Population FROM Country c JOIN City ci ON c.Code = ci.CountryCode WHERE c.SurfaceArea = (SELECT MIN(surfacearea) FROM Country) AND ci.Population = (SELECT MAX(Population) FROM City);
SELECT Name FROM City WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE Name = 'China' );
SELECT c.Name FROM City c JOIN Country ct ON c.CountryCode = ct.Code WHERE ct.LocalName = 'Uman';
SELECT AVG(LifeExpectancy)  FROM Country  WHERE Code IN (SELECT CountryCode FROM CountryLanguage WHERE Language = 'Arabic' AND IsOfficial = 'Yes');
SELECT    c.Name,    (c.GNP - c.GNPOld) / c.GNPOld AS GNP_growth_rate FROM    City c WHERE    c.Name = 'Shanghai';
SELECT District FROM City WHERE Name = 'Zaanstad';
SELECT Name FROM City WHERE Population = (SELECT MAX(Population) FROM City);
SELECT District FROM City WHERE Population = 201843;
SELECT Name FROM Country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM Country);
SELECT COUNT(*) FROM Country WHERE LifeExpectancy = 75.1;
SELECT IndepYear FROM Country WHERE Name = 'Brunei';
SELECT COUNT(*) FROM Country WHERE GNP = 0;
SELECT AVG(SurfaceArea)  FROM Country;
SELECT COUNT(*)  FROM CountryLanguage  WHERE CountryCode IN (   SELECT CountryCode    FROM City    WHERE District = 'Tocantins' )
SELECT District FROM City WHERE CountryCode IN (   SELECT Code   FROM Country   ORDER BY SurfaceArea DESC   LIMIT 1 )
SELECT COUNT(*) FROM City WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE HeadOfState = 'Kostis Stefanopoulos' );
SELECT Language FROM CountryLanguage WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE Name = 'Greece' ) AND IsOfficial = 'T';
SELECT c.Population FROM City c WHERE c.Name = 'Queimados' AND c.CountryCode = (SELECT c2.Code FROM Country c2 WHERE c2.Capital = c.Name);
SELECT CL.Language FROM CountryLanguage CL JOIN Country C ON CL.CountryCode = C.Code JOIN City CI ON C.Code = CI.CountryCode WHERE CI.Population = (SELECT MIN(Population) FROM City) AND CL.IsOfficial = 'T';
SELECT Country.SurfaceArea, Country.GNP FROM City JOIN Country ON City.CountryCode = Country.Code WHERE City.District = 'Namibe';
SELECT Name FROM Country WHERE Code IN (   SELECT CountryCode   FROM CountryLanguage   WHERE Language = 'English' AND IsOfficial = 'T' )
SELECT DISTINCT District FROM City WHERE CountryCode IN (   SELECT Code   FROM Country   ORDER BY SurfaceArea ASC   LIMIT 1 );
SELECT Name FROM Country WHERE GNP < 1000 AND EXISTS (   SELECT 1   FROM CountryLanguage   WHERE CountryCode = Country.Code   AND Language = 'Dutch' );
SELECT Country.SurfaceArea FROM City JOIN Country ON City.CountryCode = Country.Code WHERE City.District = 'Entre Rios';
SELECT LocalName FROM Country WHERE Code = (SELECT CountryCode FROM City WHERE Name = 'The Valley');
SELECT * FROM City WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE SurfaceArea > 7000000 );
SELECT Country.LifeExpectancy FROM Country JOIN CountryLanguage ON Country.Code = CountryLanguage.CountryCode WHERE CountryLanguage.Language = 'Japanese';
SELECT COUNT(*) FROM City WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE SurfaceArea = 652090 );
SELECT CountryLanguage.Language FROM CountryLanguage WHERE CountryCode IN (   SELECT Code   FROM Country   WHERE IndepYear BETWEEN 1980 AND 1995 )
SELECT c.LifeExpectancy FROM Country c JOIN City ci ON c.Code = ci.CountryCode WHERE ci.Name = 'Calama';
SELECT cl.Language FROM Country c JOIN CountryLanguage cl ON c.Code = cl.CountryCode WHERE c.HeadOfState = 'Pierre Buyoya';
SELECT    MULTIPLY(     DIVIDE(       SUM(CASE WHEN GovernmentForm = 'Constitutional Monarchy' AND District = 'England' THEN 1 ELSE 0 END),       COUNT(CASE WHEN GovernmentForm = 'Constitutional Monarchy' THEN 1 ELSE 0 END)     ),     100   ) AS Percentage
SELECT c.Name FROM City c JOIN Country co ON c.CountryCode = co.Code WHERE c.Population BETWEEN 140000 AND 150000 AND co.Code IN (   SELECT cl.CountryCode   FROM CountryLanguage cl   GROUP BY cl.CountryCode   HAVING AVG(cl.Percentage) > (     SELECT AVG(co.LifeExpectancy) * 0.8     FROM Country co   ) )
SELECT MULTIPLY(DIVIDE(SUM(CountryCode IN (SELECT CountryCode FROM CountryLanguage WHERE Language = 'Italian') AND GovernmentForm = 'Republic'), COUNT(CountryCode IN (SELECT CountryCode FROM CountryLanguage WHERE Language = 'Italian'))), 100) AS Percentage
SELECT COUNT(*)  FROM podcasts p  JOIN categories c ON p.podcast_id = c.podcast_id  GROUP BY c.category  ORDER BY COUNT(*) DESC  LIMIT 1;
SELECT (COUNT(podcast_id) FROM categories WHERE COUNT(category) > 4) / (SELECT COUNT(*) FROM podcasts) * 100 AS percentage;
SELECT itunes_id, itunes_url FROM podcasts WHERE title = 'Brown Suga Diaries';
SELECT p.itunes_url, p.title  FROM podcasts p  WHERE p.title LIKE '%Dream%';
SELECT c.category  FROM categories c  JOIN podcasts p ON c.podcast_id = p.podcast_id  WHERE p.title = 'I Heart My Life Show';
Error: 第 7924 个样本有 0 个SQL。
SELECT COUNT(*)  FROM reviews  WHERE rating = 5  AND podcast_id IN (   SELECT podcast_id    FROM categories    WHERE category = 'art'    AND podcast_id IN (     SELECT podcast_id      FROM podcasts      WHERE title LIKE '%spoilers%'   ) )
SELECT author_id FROM reviews WHERE podcast_id IN (   SELECT podcast_id   FROM podcasts   WHERE title = 'Pop Rocket' ) AND created_at LIKE '2016%' AND rating < 5;
SELECT p.title, c.category, AVG(r.rating) AS avg_rating FROM podcasts p JOIN reviews r ON p.podcast_id = r.podcast_id JOIN categories c ON p.podcast_id = c.podcast_id GROUP BY p.title, c.category HAVING AVG(r.rating) > 3.0;
SELECT p.title, r.content FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id JOIN categories c ON p.podcast_id = c.podcast_id WHERE c.category = 'fiction' AND r.rating = 5;
SELECT p.title, r.content, r.rating FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE r.title = 'Love it!';
SELECT r.author_id AS author, r.rating, r.created_at FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE p.title = 'In The Thick';
SELECT r.created_at, p.title, r.rating FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id ORDER BY r.created_at DESC LIMIT 1;
SELECT p.title, r.rating, r.content FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE r.author_id = '76A4C24B6038145';
SELECT p.title AS podcast_title, r.title, r.content FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE r.rating = 1;
SELECT r.title, r.rating, p.title AS podcast_title FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE r.created_at LIKE '2019-05%';
SELECT AVG(rating)  FROM reviews  WHERE podcast_id IN (   SELECT podcast_id    FROM reviews    GROUP BY podcast_id    ORDER BY COUNT(podcast_id) DESC    LIMIT 1 )
SELECT c.category  FROM podcasts p  JOIN categories c ON p.podcast_id = c.podcast_id  WHERE p.title = 'SciFi Tech Talk';
SELECT p.title, p.itunes_url FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE r.title = 'Long time listener, calling it quits?';
SELECT p.title FROM podcasts p JOIN categories c ON p.podcast_id = c.podcast_id WHERE c.category = 'true crime';
SELECT content FROM reviews WHERE podcast_id IN (SELECT podcast_id FROM podcasts WHERE title = 'StormCast: The Official Warhammer Age of Sigmar Podcast');
SELECT r.title, r.content FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE p.title = 'More Stupider: A 90-Day Fiance Podcast' AND r.rating = 1;
SELECT COUNT(*)  FROM reviews  WHERE podcast_id IN (SELECT podcast_id FROM podcasts WHERE title = 'LifeAfter/The Message') AND rating < 3;
SELECT c.category, AVG(r.rating) AS average_rating FROM podcasts p JOIN reviews r ON p.podcast_id = r.podcast_id JOIN categories c ON p.podcast_id = c.podcast_id WHERE p.title = 'More Stupider: A 90-Day Fiance Podcast' GROUP BY c.category;
SELECT      'arts-books' AS category,      COUNT(*) AS count,     'arts-design' AS category2,      COUNT(*) AS count2,      COUNT(*) - (SELECT COUNT(*) FROM categories WHERE category = 'arts-design') AS difference FROM      categories WHERE      category IN ('arts-books', 'arts-design') GROUP BY      category ORDER BY      count DESC LIMIT 1;
SELECT COUNT(*)  FROM reviews  WHERE created_at BETWEEN '2022-06-01 00:00:00' AND '2022-06-30 23:59:59'  AND reviews_added = 1;
SELECT COUNT(*)  FROM reviews  WHERE rating = 3 AND created_at BETWEEN '2015-01-01T00:00:00-07:00' AND '2015-03-31T23:59:59-07:00';
SELECT (COUNT(podcast_id) FROM categories WHERE category = 'fiction-science-fiction') * 100 / COUNT(podcast_id) AS percentage
SELECT AVG(rating)  FROM reviews  WHERE created_at BETWEEN '2019-01-01T00:00:00' AND '2019-12-31T23:59:59'  GROUP BY podcast_id;
SELECT      (SUM(CASE WHEN runs.run_at LIKE '2021%' THEN runs.reviews_added ELSE 0 END) /       SUM(runs.reviews_added)) * 100 AS '2021',     (SUM(CASE WHEN runs.run_at LIKE '2022%' THEN runs.reviews_added ELSE 0 END) /       SUM(runs.reviews_added)) * 100 AS '2022' FROM      runs;
SELECT p.title FROM podcasts p JOIN categories c ON p.podcast_id = c.podcast_id WHERE c.category = 'fiction';
SELECT r.rating, c.category  FROM reviews r  JOIN podcasts p ON r.podcast_id = p.podcast_id  JOIN categories c ON p.podcast_id = c.podcast_id  WHERE p.title = 'Sitcomadon';
SELECT author_id FROM reviews WHERE podcast_id IN (   SELECT podcast_id   FROM podcasts   WHERE itunes_id = 1516665400 )
SELECT title FROM podcasts WHERE podcast_id IN (   SELECT podcast_id   FROM reviews   WHERE created_at BETWEEN '2018-08-22T11:53:16-07:00' AND '2018-11-20T11:14:20-07:00' )
SELECT c.category  FROM reviews r  JOIN podcasts p ON r.podcast_id = p.podcast_id  JOIN categories c ON p.podcast_id = c.podcast_id  WHERE r.author_id = 'EFB34EAC8E9397C';
SELECT p.slug, p.itunes_url FROM podcasts p JOIN reviews r ON p.podcast_id = r.podcast_id WHERE r.content = 'Can\'t stop listening';
SELECT DISTINCT created_at  FROM reviews  WHERE title = 'Don''t Lie To Your Life Coach';
SELECT c.category FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id JOIN categories c ON p.podcast_id = c.podcast_id WHERE r.created_at BETWEEN '2016-07-01T00:00:00-07:00' AND '2016-12-31T23:59:59-07:00' GROUP BY c.category
SELECT AVG(rating)  FROM reviews  WHERE podcast_id IN (SELECT podcast_id FROM categories WHERE category = 'true-crime');
SELECT p.title  FROM podcasts p  JOIN categories c ON p.podcast_id = c.podcast_id  WHERE c.category = 'arts';
SELECT AVG(r.rating)  FROM reviews r  JOIN podcasts p ON r.podcast_id = p.podcast_id  JOIN categories c ON p.podcast_id = c.podcast_id  WHERE c.category = 'arts';
SELECT p.title  FROM podcasts p  JOIN categories c ON p.podcast_id = c.podcast_id  WHERE c.category = 'arts' AND reviews.created_at LIKE '2018%';
SELECT title FROM podcasts WHERE podcast_id IN (   SELECT podcast_id   FROM categories   WHERE category = 'music' ) AND podcast_id IN (   SELECT podcast_id   FROM reviews   WHERE rating > 3 );
SELECT p.title  FROM reviews r  JOIN podcasts p ON r.podcast_id = p.podcast_id  JOIN categories c ON p.podcast_id = c.podcast_id  WHERE r.content = 'love' AND c.category = 'arts' AND EXTRACT(YEAR FROM r.created_at) BETWEEN 2018 AND 2019;
SELECT c.category, p.itunes_url FROM podcasts p JOIN categories c ON p.podcast_id = c.podcast_id WHERE p.title = 'Scaling Global';
SELECT AVG(r.rating)  FROM reviews r  JOIN podcasts p ON r.podcast_id = p.podcast_id  JOIN categories c ON p.podcast_id = c.podcast_id  WHERE c.category = 'comedy';
SELECT category, COUNT(category) AS count FROM categories GROUP BY category ORDER BY count LIMIT 1;
SELECT MAX(content) AS longest_review FROM reviews;
SELECT p.title AS podcast_title FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id WHERE r.title = 'Hosts bring the show down';
SELECT title  FROM podcasts  WHERE podcast_id IN (SELECT podcast_id FROM categories WHERE category = 'music')  ORDER BY LENGTH(title) DESC LIMIT 1;
SELECT c.category  FROM categories c  JOIN podcasts p ON c.podcast_id = p.podcast_id  WHERE p.title LIKE '%jessica%';
SELECT c.category FROM podcasts p JOIN categories c ON p.podcast_id = c.podcast_id WHERE p.title = 'Moist Boys';
SELECT r.title, c.category  FROM reviews r  JOIN categories c ON r.podcast_id = c.podcast_id  WHERE r.rating = 2;
SELECT p.* FROM podcasts p JOIN reviews r ON p.podcast_id = r.podcast_id WHERE r.title = 'Inspired & On Fire!';
SELECT p.title, c.category FROM reviews r JOIN podcasts p ON r.podcast_id = p.podcast_id JOIN categories c ON p.podcast_id = c.podcast_id WHERE r.content LIKE '%Absolutely fantastic%';
SELECT c.category, COUNT(r.podcast_id) as total_reviews FROM reviews r JOIN categories c ON r.podcast_id = c.podcast_id GROUP BY c.category ORDER BY total_reviews DESC LIMIT 1;
SELECT p.itunes_url FROM podcasts p JOIN categories c ON p.podcast_id = c.podcast_id WHERE c.category = 'fiction-science-fiction';
SELECT content  FROM reviews  WHERE podcast_id = (SELECT podcast_id FROM podcasts WHERE title = 'Stuff You Should Know')  ORDER BY created_at LIMIT 1;
SELECT COUNT(*)  FROM reviews  WHERE title = 'Planet Money';
SELECT AVG(rating)  FROM reviews  WHERE podcast_id IN (SELECT podcast_id FROM podcasts WHERE title = 'crime-junkie');
SELECT    p.title,    p.itunes_id,    p.slug,    p.itunes_url,    p.title FROM    podcasts p   JOIN categories c ON p.podcast_id = c.podcast_id WHERE    c.category = 'technology'
SELECT content FROM reviews WHERE title = 'really interesting!' AND created_at = '2018-04-24T12:05:16-07:00';
SELECT category FROM categories WHERE podcast_id IN (   SELECT podcast_id FROM podcasts WHERE title = 'Scaling Global' );
SELECT title  FROM podcasts  WHERE podcast_id IN (   SELECT podcast_id    FROM categories    WHERE category = 'arts-performing-arts' );
SELECT COUNT(*)  FROM reviews  WHERE title = 'Scaling Global';
SELECT COUNT(*)  FROM reviews  WHERE podcast_id IN (SELECT podcast_id FROM podcasts WHERE title = 'Please Excuse My Dead Aunt Sally')  AND created_at LIKE '2019%';
SELECT p.title  FROM reviews r  JOIN podcasts p ON r.podcast_id = p.podcast_id  WHERE r.author_id = 'F7E5A318989779D';
SELECT COUNT(*)  FROM reviews  WHERE rating = 5 AND title = 'Please Excuse My Dead Aunt Sally';
SELECT AVG(rating)  FROM reviews  WHERE title = 'Please Excuse My Dead Aunt Sally';
SELECT COUNT(*)  FROM university_year  WHERE year = 2011 AND num_students > 8000;
SELECT ranking_criteria_id FROM ranking_criteria WHERE criteria_name = 'Award';
Error: 第 7990 个样本有 0 个SQL。
SELECT uyr.num_students, uyr.student_staff_ratio FROM university_year uyr WHERE uyr.student_staff_ratio = (     SELECT MAX(uyr.student_staff_ratio)     FROM university_year uyr );
SELECT COUNT(*)  FROM ranking_criteria  WHERE ranking_system_id = 3;
SELECT university_id FROM university_year WHERE year BETWEEN 2011 AND 2015 AND pct_international_students = 1;
SELECT country_name FROM country WHERE id = (   SELECT country_id   FROM university   GROUP BY country_id   ORDER BY COUNT(id) DESC   LIMIT 1 )
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.pct_international_students = (   SELECT MAX(pct_international_students)   FROM university_year ) AND (SELECT COUNT(*) FROM (   SELECT year - LAG(year) OVER (PARTITION BY university_id ORDER BY year) AS rm   FROM university_year ) t) >= 6;
SELECT university_name FROM university JOIN university_ranking_year ON university.id = university_ranking_year.university_id JOIN ranking_criteria ON university_ranking_year.ranking_criteria_id = ranking_criteria.id WHERE year = 2014 AND ranking_criteria.criteria_name = 'Publications Rank' ORDER BY score DESC LIMIT 1;
SELECT university_name FROM university_year WHERE num_students = (SELECT MIN(num_students) FROM university_year);
Error: 第 7998 个样本有 0 个SQL。
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id JOIN university_ranking_year ury ON u.id = ury.university_id JOIN ranking_criteria rc ON ury.ranking_criteria_id = rc.id WHERE uy.year = 2016 AND u.country_id IN (   SELECT id FROM country WHERE country_name = 'Australia' ) AND rc.criteria_name = 'Citations' ORDER BY ury.score DESC LIMIT 1;
SELECT COUNT(*)  FROM university_ranking_year  WHERE year BETWEEN 2005 AND 2015    AND score = 0    AND ranking_criteria_id IN (     SELECT id      FROM ranking_criteria      WHERE criteria_name = 'Award'   );
SELECT c.country_name FROM university u JOIN country c ON u.country_id = c.id WHERE u.university_name = 'University of Oxford';
SELECT COUNT(*)  FROM university_ranking_year  WHERE university_id IN (   SELECT id    FROM university    WHERE university_name = 'Yale University' )  AND ranking_criteria_id IN (   SELECT id    FROM ranking_criteria    WHERE criteria_name = 'Quality of Education Rank' )  AND score >= 10;
SELECT rc.criteria_name FROM ranking_criteria rc JOIN ranking_system rs ON rc.ranking_system_id = rs.id WHERE rs.system_name = 'Center for World University Rankings';
SELECT university_name FROM university_year WHERE university_id IN (   SELECT university_id   FROM university_year   WHERE year = 2012 AND num_students > 50000 ) AND year = 2012;
SELECT c.country_name FROM university u JOIN university_year uy ON u.id = uy.university_id JOIN country c ON u.country_id = c.id WHERE uy.year BETWEEN 2011 AND 2016 AND uy.pct_international_students > 50 GROUP BY c.country_name
SELECT COUNT(*) FROM university_year WHERE year = 2016 AND DIVIDE(MULTIPLY(pct_female_students, num_students), 100) > 20000 AND university_id IN (   SELECT university_id   FROM university   WHERE country_id IN (     SELECT id     FROM country     WHERE country_name = 'United States of America'   ) )
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id ORDER BY uy.num_students * uy.pct_international_students / 100 DESC LIMIT 5;
SELECT university_id FROM university_year ORDER BY student_staff_ratio DESC LIMIT 1;
SELECT year FROM university_year WHERE num_students = (SELECT MIN(num_students) FROM university_year);
SELECT AVG(pct_female_students) AS avg_pct_female_students FROM university_year;
SELECT    DIVIDE(MULTIPLY(pct_international_students, num_students), 100) AS num_international_students FROM    university_year WHERE    university_id = 20 AND year = 2013;
SELECT university_id FROM university WHERE university_name = 'Harvard University';
SELECT u.id FROM university u JOIN university_ranking_year ur ON u.id = ur.university_id WHERE ur.year = 2011 AND ur.score = 100;
SELECT rs.system_name FROM ranking_criteria rc JOIN ranking_system rs ON rc.ranking_system_id = rs.id WHERE rc.criteria_name = 'Quality of Education Rank';
SELECT student_staff_ratio FROM university_year WHERE university_id = (SELECT id FROM university WHERE university_name = 'Harvard University') AND year = 2012;
SELECT c.country_name FROM university u JOIN country c ON u.country_id = c.id WHERE u.id = 112;
Error: 第 8017 个样本有 0 个SQL。
SELECT rc.id FROM university_ranking_year ury JOIN university u ON ury.university_id = u.id JOIN university_year uy ON u.id = uy.university_id WHERE u.university_name = 'Brown University' AND uy.year = 2014
SELECT university_name FROM university WHERE country_id IN (   SELECT id   FROM country   WHERE country_name = 'Spain' )
SELECT rc.criteria_name FROM university_ranking_year ur JOIN ranking_criteria rc ON ur.ranking_criteria_id = rc.id WHERE ur.university_id = 32 AND ur.year = 2015;
SELECT AVG(score)  FROM university_ranking_year  WHERE university_id IN (   SELECT id    FROM university    WHERE country_id IN (     SELECT id      FROM country      WHERE country_name = 'Brazil'   ) )
SELECT c.country_name FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = 2014 AND uy.num_students = (   SELECT MAX(num_students)   FROM university_year   WHERE year = 2014 ) JOIN country c ON u.country_id = c.id;
SELECT uyr.score, (uyr.num_students * uyr.pct_international_students) / 100 FROM university_year uy JOIN university_ranking_year ury ON uy.university_id = ury.university_id AND uy.year = ury.year WHERE uy.university_id = 100 AND uy.year = 2015;
SELECT u_year.num_students FROM university_year u_year JOIN university u ON u_year.university_id = u.id JOIN university_ranking_year ur_year ON u_year.university_id = ur_year.university_id WHERE ur_year.year = 2013 AND ur_year.score = 98;
SELECT rc.criteria_name  FROM ranking_criteria rc  JOIN ranking_system rs ON rc.ranking_system_id = rs.id  WHERE rs.system_name = 'Center for World University Rankings';
SELECT u.country_id, c.country_name FROM university_year uy JOIN university u ON uy.university_id = u.id JOIN country c ON u.country_id = c.id WHERE uy.year = 2013 AND uy.num_students > (SELECT AVG(num_students) * 0.98 FROM university_year WHERE year = 2013)
SELECT      DIVIDE(SUM(DIVIDE(MULTIPLY(num_students, pct_international_students), 100)), SUM(num_students)) AS percentage_of_international_students FROM      university_year WHERE      university_id IN (         SELECT              university_id         FROM              university_ranking_year         WHERE              year = 2015 AND score < 80     );
Error: 第 8028 个样本有 0 个SQL。
SELECT SUM(DIVIDE(MULTIPLY(num_students, pct_female_students), 100))  FROM university_year  WHERE year = 2011;
SELECT u.year, u.num_students, u.student_staff_ratio FROM university_year u WHERE u.student_staff_ratio = (   SELECT MAX(student_staff_ratio)   FROM university_year );
SELECT university_id FROM university_year WHERE year = 2011 ORDER BY num_students DESC LIMIT 1;
SELECT COUNT(*) FROM university_year WHERE year = 2011 AND num_students > 50000 AND pct_international_students > 10;
SELECT u.id FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = 2012 ORDER BY uy.pct_female_students DESC LIMIT 1;
SELECT university_name FROM university JOIN university_ranking_year ON university.id = university_ranking_year.university_id WHERE year = 2012 ORDER BY score DESC LIMIT 1;
SELECT university_name FROM university_year WHERE year = 2011 ORDER BY num_students DESC LIMIT 1;
SELECT u.university_name FROM university u JOIN university_ranking_year ur ON u.id = ur.university_id JOIN ranking_criteria rc ON ur.ranking_criteria_id = rc.id WHERE rc.criteria_name = 'Teaching' ORDER BY ur.score DESC LIMIT 1;
SELECT      (uy.pct_international_students / 100) * 100 FROM      university_year uy WHERE      uy.university_id IN (         SELECT              u.id         FROM              university u         WHERE              u.university_name = 'Harvard University'     ) AND      uy.year = 2011;
SELECT    DIVIDE(MULTIPLY(pct_female_students, num_students), 100)  FROM    university_year  WHERE    university_id IN (SELECT id FROM university WHERE university_name = 'Stanford University')    AND year = 2011;
SELECT country_name FROM university JOIN country ON university.country_id = country.id WHERE university_name = 'Harvard University';
SELECT system_name FROM ranking_criteria JOIN ranking_system ON ranking_criteria.ranking_system_id = ranking_system.id WHERE criteria_name = 'Teaching';
SELECT u.university_name FROM university u JOIN university_ranking_year ur ON u.id = ur.university_id JOIN ranking_criteria rc ON ur.ranking_criteria_id = rc.id JOIN university_year uy ON u.id = uy.university_id JOIN country c ON u.country_id = c.id WHERE c.country_name = 'Argentina' ORDER BY SUM(ur.score) DESC LIMIT 1;
Error: 第 8042 个样本有 0 个SQL。
SELECT university_name FROM university_year WHERE year = 2011 AND num_students > 100000;
SELECT COUNT(*) FROM ranking_criteria WHERE ranking_system_id IN (   SELECT id   FROM ranking_system   WHERE system_name = 'Center for World University Rankings' );
SELECT COUNT(*)  FROM university_year  WHERE year = 2011 AND score = 90;
SELECT university_name, MAX(SUM(DIVIDE(MULTIPLE(pct_international_students, num_students), 100))) AS max_international_students FROM university_year JOIN university ON university_year.university_id = university.id GROUP BY university_name ORDER BY max_international_students DESC LIMIT 3;
SELECT    SUM(num_students) - SUM(pct_international_students * num_students / 100) AS difference FROM    university_year WHERE    university_id IN (     SELECT        id      FROM        university      WHERE        university_name = 'Harvard University'   )    AND year BETWEEN 2011 AND 2012;
SELECT COUNT(*)  FROM university_year  WHERE year = 2011 AND num_students > 30000;
SELECT country_id FROM university WHERE university_name = 'University of Tokyo';
SELECT ranking_system.id FROM ranking_system WHERE system_name = 'Center for World University Rankings';
SELECT id FROM ranking_criteria WHERE criteria_name = 'Publications Rank';
SELECT COUNT(*)  FROM university_year  WHERE university_id IN (SELECT university_id FROM university_year WHERE year = 2013)  AND pct_international_students > 30;
SELECT COUNT(*)  FROM university_ranking_year  WHERE university_id IN (   SELECT id    FROM university    WHERE id IN (     SELECT university_id      FROM university_year      WHERE year = 2011   ) ) AND ranking_criteria_id = 6 AND score < 50;
SELECT num_students FROM university_year WHERE university_id IN (   SELECT id   FROM university   WHERE university_name = 'Yale University' ) AND year = 2016;
SELECT university_name FROM university WHERE country_id IN (   SELECT id   FROM country   WHERE country_name = 'Denmark' );
SELECT    (num_students / student_staff_ratio) AS num_staff FROM    university_year WHERE    university_id IN (     SELECT        id      FROM        university      WHERE        university_name = 'University of Auckland'   )    AND year = 2015;
SELECT c.country_name FROM university u JOIN country c ON u.country_id = c.id WHERE u.university_name = 'University of São Paulo';
SELECT    DIVIDE(MULTIPLY(num_students, pct_international_students), 100)  FROM    university_year  WHERE    university_id IN (SELECT id FROM university WHERE university_name = 'Harvard University')    AND year = 2012;
SELECT    DIVIDE(MULTIPLY(pct_female_students, num_students), 100) AS num_female_students FROM    university_year WHERE    university_id IN (     SELECT        id     FROM        university     WHERE        university_name = 'Arizona State University'   )   AND year = 2014;
SELECT u.university_name FROM university u JOIN university_ranking_year ur ON u.id = ur.university_id WHERE ur.score = (   SELECT MAX(SUM(score))   FROM university_ranking_year );
SELECT rc.criteria_name FROM ranking_criteria rc JOIN ranking_system rs ON rc.ranking_system_id = rs.id WHERE rs.system_name = 'Shanghai Ranking';
SELECT u.university_name FROM university_ranking_year ur JOIN ranking_criteria rc ON ur.ranking_criteria_id = rc.id JOIN university_year uy ON ur.university_id = uy.university_id WHERE ur.year = 2011 AND rc.criteria_name = 'Teaching' ORDER BY ur.score ASC LIMIT 1;
SELECT rs.system_name  FROM ranking_criteria rc  JOIN ranking_system rs ON rc.ranking_system_id = rs.id  WHERE rc.criteria_name = 'Quality of Education Rank';
SELECT    ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM university_ranking_year WHERE year = 2016 AND score > 80 AND ranking_criteria_id IN (SELECT id FROM ranking_criteria WHERE criteria_name = 'International')), 2) AS percentage,   (SELECT university_name FROM university_ranking_year WHERE year = 2016 AND score > 80 AND ranking_criteria_id IN (SELECT id FROM ranking_criteria WHERE criteria_name = 'International') ORDER BY score DESC LIMIT 1) AS highest_score_university
SELECT rc.criteria_name, ur.score FROM ranking_criteria rc JOIN university_ranking_year ur ON rc.id = ur.ranking_criteria_id JOIN university u ON ur.university_id = u.id WHERE u.university_name = 'Harvard University' AND ur.year = 2005;
SELECT AVG(score)  FROM university_ranking_year  WHERE ranking_criteria_id IN (SELECT id FROM ranking_criteria WHERE criteria_name = 'Alumni')  AND year = 2008;
SELECT u.university_name, c.country_name FROM university_year uy JOIN university u ON uy.university_id = u.id JOIN country c ON u.country_id = c.id WHERE uy.year = 2015 AND uy.pct_international_students = (     SELECT MAX(DIVIDE(MULTIPLY(num_students, pct_international_students), 100))     FROM university_year     WHERE year = 2015 )
SELECT num_students FROM university_year WHERE university_id = 1 AND year = 2011;
SELECT university_id FROM university_year WHERE year = 2011 ORDER BY num_students DESC LIMIT 1;
Error: 第 8070 个样本有 0 个SQL。
SELECT COUNT(*) FROM university_year WHERE university_id IN (   SELECT university_id   FROM university_year   WHERE year = 2011 AND num_students > 20000 ) AND pct_international_students > 25;
SELECT university_id FROM university_year WHERE year = 2011 ORDER BY pct_female_students DESC LIMIT 3;
SELECT year FROM university_year WHERE university_id = 1 ORDER BY num_students DESC LIMIT 1;
SELECT num_students FROM university_year WHERE university_id = (SELECT id FROM university WHERE university_name = 'Harvard University') AND year = 2011;
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = 2011 ORDER BY (uy.num_students * uy.pct_international_students) / 100 DESC LIMIT 1;
SELECT university_name  FROM university  WHERE country_id IN (   SELECT id    FROM country    WHERE country_name = 'Australia' );
Error: 第 8077 个样本有 0 个SQL。
SELECT country_name FROM country JOIN university ON country.id = university.country_id WHERE university_name = 'Harvard University';
SELECT u.university_name FROM university_ranking_year ur JOIN ranking_criteria rc ON ur.ranking_criteria_id = rc.id JOIN university_year uy ON ur.university_id = uy.university_id WHERE rc.criteria_name = 'Teaching' AND uy.year = 2011 ORDER BY ur.score DESC LIMIT 1;
SELECT u.university_name FROM university u JOIN university_ranking_year ury ON u.id = ury.university_id JOIN ranking_criteria rc ON ury.ranking_criteria_id = rc.id WHERE rc.criteria_name = 'Teaching' AND ury.year = 2011 AND ury.score > 90;
SELECT COUNT(*)  FROM university_year  WHERE university_id IN (   SELECT university_id    FROM university_ranking_year    WHERE year = 2011 AND ranking_criteria_id IN (     SELECT id      FROM ranking_criteria      WHERE criteria_name = 'Teaching' AND ranking_system_id IN (       SELECT id        FROM ranking_system      )   ) AND score > 90  ) AND country_id IN (   SELECT id    FROM country    WHERE country_name = 'United States of America' );
SELECT rc.criteria_name FROM university_ranking_year ury JOIN university_year uy ON ury.university_id = uy.university_id JOIN university u ON uy.university_id = u.id WHERE u.university_name = 'Harvard University' AND uy.year = 2011 JOIN ranking_criteria rc ON ury.ranking_criteria_id = rc.id;
SELECT university_name FROM university JOIN university_ranking_year ON university.id = university_ranking_year.university_id JOIN ranking_criteria ON university_ranking_year.ranking_criteria_id = ranking_criteria.id WHERE ranking_criteria.criteria_name = 'Teaching' AND university_ranking_year.year = 2011 AND university_ranking_year.score = 98;
SELECT u.university_name FROM university u JOIN university_ranking_year ur ON u.id = ur.university_id JOIN ranking_criteria rc ON ur.ranking_criteria_id = rc.id WHERE rc.criteria_name = 'Teaching' AND ur.year = 2011 AND ur.score < 60 JOIN country c ON u.country_id = c.id WHERE c.country_name = 'United States of America';
Error: 第 8085 个样本有 0 个SQL。
SELECT      DIVIDE(MULTIPLY(pct_female_students, num_students), 100) AS female_students FROM      university_year WHERE      university_id IN (         SELECT              id          FROM              university          WHERE              university_name = 'Stanford University'     )      AND year = 2011;
SELECT      DIVIDE(COUNT(u.country_id), COUNT(ur.university_id)) AS percentage FROM      university_year uy     JOIN university u ON uy.university_id = u.id     JOIN university_ranking_year ur ON uy.university_id = ur.university_id     JOIN ranking_criteria rc ON ur.ranking_criteria_id = rc.id     JOIN ranking_system rs ON rc.ranking_system_id = rs.id WHERE      rc.criteria_name = 'Teaching' AND ur.year = 2011 AND ur.score > 90 AND u.country_id IN (SELECT id FROM country WHERE country_name = 'United States of America')
Error: 第 8088 个样本有 0 个SQL。
SELECT c.id FROM university u JOIN country c ON u.country_id = c.id WHERE u.university_name = 'University of Veterinary Medicine Vienna';
SELECT id FROM ranking_criteria WHERE criteria_name = 'Citations Rank';
SELECT id FROM university WHERE university_name = 'University of Orléans';
SELECT num_students FROM university_year WHERE university_id = 268 AND year = 2013;
Error: 第 8093 个样本有 0 个SQL。
SELECT country_name FROM country JOIN university ON country.id = university.country_id WHERE university_name = 'McMaster University';
SELECT COUNT(*) FROM university WHERE country_id IN (SELECT id FROM country WHERE country_name = 'Turkey');
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = 2011 ORDER BY uy.num_students DESC LIMIT 1;
SELECT num_students FROM university_year WHERE university_id IN (   SELECT id   FROM university   WHERE university_name = 'University of Michigan' ) AND year = 2011;
SELECT score FROM university_ranking_year WHERE university_id = (SELECT id FROM university WHERE university_name = 'Chosun University') AND year = 2015 AND ranking_criteria_id = (SELECT id FROM ranking_criteria WHERE criteria_name = 'Influence Rank');
SELECT (uy.pct_international_students * 100) AS percentage FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE u.university_name = 'University of Oslo' AND uy.year = 2015;
Error: 第 8100 个样本有 0 个SQL。
SELECT rs.system_name FROM ranking_criteria rc JOIN ranking_system rs ON rc.ranking_system_id = rs.id WHERE rc.criteria_name = 'Total Shanghai';
SELECT DIVIDE(MULTIPLY(pct_female_students, num_students), 100)  FROM university_year  WHERE university_id IN (   SELECT id    FROM university    WHERE university_name = 'Pierre and Marie Curie University')  AND year = 2015;
SELECT score FROM university_ranking_year WHERE university_id = (   SELECT id   FROM university   WHERE university_name = 'University of Florida' ) AND ranking_criteria_id = (   SELECT id   FROM ranking_criteria   WHERE criteria_name = 'N and S' ) AND year = 2014;
SELECT    DIVIDE(MULTIPLY(num_students, pct_international_students), 100)  FROM    university_year  WHERE    university_id IN (     SELECT        id      FROM        university      WHERE        university_name = 'University of Wisconsin-Madison'   )    AND year = 2013;
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = 2015 ORDER BY uy.num_students LIMIT 1;
SELECT      DIVIDE(SUM(num_students) FROM university_year WHERE university_id IN (SELECT id FROM university WHERE university_name = 'University of Ottawa') AND year = 2013),     SUM(num_students) FROM university_year WHERE university_id IN (SELECT id FROM university WHERE university_name = 'Joseph Fourier University') AND year = 2013)
SELECT DIVIDE(SUM(rc.id), 3) AS avg_criteria FROM ranking_criteria rc JOIN ranking_system rs ON rc.ranking_system_id = rs.id WHERE rs.system_name IN ('Times Higher Education World University Ranking', 'Shanghai Ranking', 'Center for World University Rankings');
SELECT AVG(num_students)  FROM university_year  WHERE year = 2012;
SELECT score FROM university_ranking_year WHERE university_id = 68 AND year = 2015;
Error: 第 8110 个样本有 0 个SQL。
SELECT university_id FROM university_year WHERE pct_international_students = (SELECT MAX(pct_international_students) FROM university_year);
SELECT criteria_name FROM ranking_criteria WHERE id = 13;
SELECT AVG(u.score)  FROM university_ranking_year u  WHERE u.year = 2012;
SELECT SUM(DIVIDE(MULTIPLY(pct_female_students, num_students), 100))  FROM university_year  WHERE university_id = 40 AND year BETWEEN 2011 AND 2013;
SELECT AVG(score)  FROM university_ranking_year  WHERE university_id = 79 AND year BETWEEN 2013 AND 2015;
SELECT student_staff_ratio FROM university_year WHERE university_id = 35;
SELECT ur.score FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = 2011 AND uy.num_students = (   SELECT MAX(num_students)   FROM university_year   WHERE year = 2011 )
SELECT rc.criteria_name FROM university_ranking_year ury JOIN university_year uy ON ury.university_id = uy.university_id JOIN university u ON ury.university_id = u.id JOIN ranking_criteria rc ON ury.ranking_criteria_id = rc.id WHERE u.university_name = 'Harvard University' AND ury.score = 100;
SELECT u.id, u.university_name FROM university u JOIN country c ON u.country_id = c.id WHERE c.country_name = 'Turkey';
SELECT COUNT(*)  FROM ranking_criteria  WHERE ranking_system_id IN (   SELECT id    FROM ranking_system    WHERE system_name = 'Shanghai Ranking' );
SELECT u.university_name, ur.score FROM university u JOIN university_ranking_year ur ON u.id = ur.university_id WHERE u.id = 124;
SELECT    MULTIPLY(num_students, pct_female_students) / 100 AS female_students FROM    university_year WHERE    university_id IN (     SELECT        id     FROM        university     WHERE        university_name = 'University of Pennsylvania'   ) AND year = 2011;
SELECT university_name FROM university JOIN university_ranking_year ON university.id = university_ranking_year.university_id WHERE score < 50;
Error: 第 8124 个样本有 0 个SQL。
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = (SELECT MAX(uy2.year) FROM university_year uy2) AND uy.pct_female_students = (SELECT MAX(SUBTRACT(uy3.num_students, DIVIDE(MULTIPLY(uy3.num_students, uy3.pct_female_students), 100))) FROM university_year uy3)
Error: 第 8126 个样本有 0 个SQL。
SELECT SUM(num_students - (num_students * pct_male_students / 100))  FROM university_year  WHERE university_id IN (SELECT id FROM university WHERE university_name = 'Emory University')  AND year = 2011;
SELECT country_name FROM country JOIN university ON country.id = university.country_id WHERE university_name = 'Johns Hopkins University';
SELECT university_name FROM university_year WHERE num_students BETWEEN 400 AND 1000;
SELECT yr.year FROM university_ranking_year yr JOIN university u ON yr.university_id = u.id WHERE u.university_name = 'Brown University' ORDER BY yr.score DESC LIMIT 1;
Error: 第 8131 个样本有 0 个SQL。
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = 2015 ORDER BY uy.num_students DESC LIMIT 1;
SELECT u.country_id, c.country_name,         (u.num_students * u.pct_female_students) / 100 AS num_female_students FROM university_year u JOIN university y ON u.university_id = y.id JOIN country c ON y.country_id = c.id WHERE u.year = 2011 AND u.university_id = 23;
SELECT COUNT(*) FROM university_ranking_year WHERE score = 40 AND EXISTS (   SELECT 1   FROM ranking_criteria   WHERE id = university_ranking_year.ranking_criteria_id   AND criteria_name = 'Teaching' );
SELECT      DIVIDE(SUM(DIVIDE(MULTIPLY(num_students, pct_female_students), 100)),             SUM(num_students)) AS percentage FROM      university_year WHERE      university_id IN (         SELECT              u.id          FROM              university u          JOIN              country c ON u.country_id = c.id          WHERE              c.country_name = 'United States of America')     AND year = 2016;
SELECT    SUM(SUBTRACT(SUM(num_students), SUM(DIVIDE(MULTIPLY(num_students, pct_international_students), 100)))) AS difference FROM    university_year WHERE    university_name = 'University of Tokyo' AND year BETWEEN 2011 AND 2014;
SELECT u.university_name FROM university_year uy JOIN university u ON uy.university_id = u.id WHERE uy.year = 2015 AND uy.score < (SELECT AVG(s.score) * 0.28 FROM university_ranking_year s WHERE s.year = 2015)
SELECT COUNT(units)  FROM sales_in_weather  WHERE date = '2012-01-01' AND store_nbr = 1 AND item_nbr = 9;
Error: 第 8139 个样本有 0 个SQL。
SELECT item_nbr FROM sales_in_weather WHERE date = '2012-01-01' AND store_nbr = 1 ORDER BY units DESC LIMIT 1;
SELECT tmax - tmin AS temperature_range FROM weather WHERE date = '2012-01-01' AND station_nbr = 1;
Error: 第 8142 个样本有 0 个SQL。
SELECT date FROM weather WHERE station_nbr = 1 AND date IN ('2012-01-01', '2012-01-02') ORDER BY MAX(avgspeed) DESC LIMIT 1;
SELECT SUM(units) FROM sales_in_weather WHERE store_nbr = 3 AND item_nbr = 5 AND SUBSTR(date, 1, 4) = '2012' AND EXIST (   SELECT 1   FROM weather, relation   WHERE weather.date = sales_in_weather.date   AND relation.store_nbr = 3   AND relation.station_nbr = weather.station_nbr   AND weather.depart < 0 );
SELECT COUNT(units) FROM sales_in_weather WHERE store_nbr = 3 AND item_nbr = 5 AND date LIKE '2012%' AND date IN (   SELECT date   FROM weather   WHERE station_nbr IN (     SELECT station_nbr     FROM relation     WHERE store_nbr = 3   )   ORDER BY tmax DESC   LIMIT 1 );
SELECT w.tmin FROM sales_in_weather siw JOIN weather w ON siw.date = w.date JOIN relation r ON siw.store_nbr = r.store_nbr AND siw.date = r.date WHERE siw.store_nbr = 3 AND siw.item_nbr = 5 AND SUBSTR(siw.date, 1, 4) = '2012' AND siw.units = (SELECT MAX(units) FROM sales_in_weather WHERE store_nbr = 3 AND item_nbr = 5 AND SUBSTR(date, 1, 4) = '2012');
SELECT COUNT(DISTINCT(date)) FROM sales_in_weather WHERE store_nbr = 3 AND item_nbr = 5 AND units > 100   AND EXISTS (     SELECT 1     FROM weather     WHERE tmax > 90 AND weather.date = sales_in_weather.date   )
SELECT COUNT(units) FROM sales_in_weather WHERE store_nbr = 3 AND item_nbr = 5 AND date IN (   SELECT date   FROM weather   WHERE station_nbr = (     SELECT station_nbr     FROM relation     WHERE store_nbr = 3   )   ORDER BY tmax - tmin DESC   LIMIT 1 )
SELECT w.date  FROM sales_in_weather siw  JOIN weather w ON siw.date = w.date  JOIN relation r ON siw.store_nbr = r.store_nbr AND w.station_nbr = r.station_nbr  WHERE siw.item_nbr = 5 AND siw.store_nbr = 3 AND siw.units > 100  ORDER BY (w.tmax - w.tmin) DESC  LIMIT 1;
SELECT SUM(units)  FROM sales_in_weather  WHERE item_nbr = 5 AND store_nbr = 3 AND date IN (   SELECT date    FROM weather    WHERE preciptotal > 0.05 )  AND date IN (   SELECT date    FROM relation    WHERE store_nbr = 3 );
SELECT DISTINCT sw.date FROM sales_in_weather sw JOIN relation r ON sw.store_nbr = r.store_nbr JOIN weather w ON r.station_nbr = w.station_nbr WHERE sw.store_nbr = 3 AND sw.item_nbr = 5 AND sw.units > 100 AND w.avgspeed > 10;
SELECT SUM(units) FROM sales_in_weather WHERE store_nbr = 3 AND DATE_FORMAT(date, '%Y') = '2012' AND date IN (   SELECT date   FROM weather   WHERE station_nbr IN (     SELECT station_nbr     FROM relation     WHERE store_nbr = 3   )   ORDER BY tmax DESC   LIMIT 1 );
SELECT    SUM(units) AS units_sold_store5 - SUM(units) AS units_sold_store10 FROM    sales_in_weather WHERE    SUBSTR(date, 1, 4) = '2012'    AND item_nbr = 16    AND store_nbr IN (5, 10)    AND date IN (     SELECT        date      FROM        weather      WHERE        station_nbr IN (         SELECT            station_nbr          FROM            relation          WHERE            store_nbr IN (5, 10)       )      ORDER BY        tmax DESC      LIMIT 1   );
SELECT item_nbr FROM sales_in_weather WHERE date LIKE '2012%' AND store_nbr = 3 AND units = (SELECT MAX(units) FROM sales_in_weather WHERE date LIKE '2012%' AND store_nbr = 3)
SELECT COUNT(*)  FROM sales_in_weather  WHERE SUBSTR(date, 1, 4) = '2012'    AND store_nbr = 3    AND units = 0    AND date IN (     SELECT date      FROM weather      WHERE SUBSTR(date, 1, 4) = '2012'      ORDER BY tmax DESC      LIMIT 1   );
SELECT AVG(SUM(units))  FROM sales_in_weather  WHERE store_nbr = 3 AND item_nbr = 5 AND date IN (   SELECT date    FROM weather    WHERE tmax > 90 ) GROUP BY date;
SELECT (SUM(siw.units) WHERE siw.item_nbr = 5) / (SELECT SUM(units) FROM sales_in_weather) * 100 FROM sales_in_weather siw JOIN weather w ON siw.date = w.date JOIN relation r ON siw.store_nbr = r.store_nbr WHERE siw.store_nbr = 3 AND SUBSTR(siw.date, 1, 4) = '2012' AND w.tmax = (SELECT MAX(tmax) FROM weather WHERE SUBSTR(date, 1, 4) = '2012');
SELECT item_nbr FROM sales_in_weather WHERE date = '2012-01-01' AND store_nbr = 1 ORDER BY units DESC LIMIT 1;
SELECT COUNT(*)  FROM sales_in_weather  WHERE date = '2012-12-07' AND store_nbr = 11 AND item_nbr = 9;
SELECT AVG(tavg)  FROM weather  WHERE station_nbr = 20 AND date = '2014-10-17';
SELECT resultspeed FROM weather WHERE station_nbr = 9 AND date = '2014/01/15';
SELECT station_nbr, COUNT(store_nbr) AS max_stores FROM relation GROUP BY station_nbr ORDER BY max_stores DESC LIMIT 1;
SELECT station_nbr FROM relation WHERE store_nbr = 20;
SELECT tmax - tmin AS temperature_range FROM weather WHERE date = '2014-04-28' AND station_nbr IN (   SELECT station_nbr   FROM relation   WHERE store_nbr = 7 )
SELECT COUNT(*) FROM relation WHERE station_nbr IN (   SELECT station_nbr   FROM weather   WHERE tmax > (SELECT AVG(depart) FROM weather)   ORDER BY tmax DESC   LIMIT 1 )
SELECT w.dewpoint FROM weather w JOIN relation r ON w.station_nbr = r.station_nbr WHERE r.store_nbr = 15 AND w.date = '2012-02-18';
SELECT w.wetbulb FROM weather w JOIN relation r ON w.station_nbr = r.station_nbr WHERE r.store_nbr = 6 AND w.date = '2012-02-15';
SELECT COUNT(s.store_nbr) FROM relation s JOIN weather w ON s.station_nbr = w.station_nbr WHERE w.avgspeed = (SELECT MAX(w2.avgspeed) FROM weather w2);
SELECT MAX(tmax)  FROM weather w  JOIN relation r ON w.station_nbr = r.station_nbr  WHERE r.store_nbr = 21 AND w.date = '2012-11-09';
SELECT sunrise FROM weather WHERE date = '2014-02-21' AND station_nbr IN (   SELECT station_nbr   FROM relation   WHERE store_nbr = 30 );
SELECT COUNT(DISTINCT s.store_nbr) FROM relation r JOIN sales_in_weather s ON r.store_nbr = s.store_nbr JOIN weather w ON r.station_nbr = w.station_nbr WHERE w.snowfall = (SELECT MAX(snowfall) FROM weather);
SELECT codesum FROM weather WHERE date = '2013-02-12' AND station_nbr IN (   SELECT station_nbr   FROM relation   WHERE store_nbr = 2 );
SELECT sealevel FROM weather WHERE date = '2013-02-24' AND station_nbr IN (   SELECT station_nbr   FROM relation   WHERE store_nbr = 19 );
SELECT preciptotal / 39.37 AS total_precipitation_inches FROM weather JOIN relation ON weather.station_nbr = relation.station_nbr WHERE relation.store_nbr = 2 AND weather.date = '2012-12-25';
SELECT stnpressure FROM weather, relation WHERE weather.date = '2012-05-15' AND relation.store_nbr = 12 AND relation.station_nbr = weather.station_nbr;
SELECT (SUM(siw.units) WHERE siw.store_nbr = 10) / (SELECT SUM(siw.units) FROM sales_in_weather) * 100
SELECT (tavg_3 - tavg_2) / tavg_2 * 100 FROM (   SELECT AVG(tavg) AS tavg_2   FROM weather, relation   WHERE weather.date = '2012-02-02' AND relation.store_nbr = 9 AND relation.station_nbr = weather.station_nbr ) AS temp_2, (   SELECT AVG(tavg) AS tavg_3   FROM weather, relation   WHERE weather.date = '2012-02-03' AND relation.store_nbr = 9 AND relation.station_nbr = weather.station_nbr ) AS temp_3;
SELECT item_nbr FROM sales_in_weather WHERE date = '2012-01-01' AND store_nbr = 1 ORDER BY units DESC LIMIT 1;
Error: 第 8179 个样本有 0 个SQL。
SELECT COUNT(*)  FROM sales_in_weather  WHERE date = '2012-01-01' AND store_nbr = 2 AND units = 0;
SELECT date FROM weather WHERE station_nbr = 1 AND SUBSTR(date, 1, 4) BETWEEN 2012 AND 2014 ORDER BY tmax DESC LIMIT 1;
SELECT r.station_nbr, COUNT(r.store_nbr) as total_stores FROM relation r GROUP BY r.station_nbr ORDER BY total_stores DESC LIMIT 1;
SELECT station_nbr, MAX(cnt) AS max_days FROM (   SELECT r.station_nbr, COUNT(s.date) AS cnt   FROM sales_in_weather s   JOIN relation r ON s.store_nbr = r.store_nbr   JOIN weather w ON r.station_nbr = w.station_nbr   WHERE substring(w.date, 1, 4) = '2014' AND substring(w.date, 6, 2) = '03' AND w.depart < 0   GROUP BY r.station_nbr ) AS temp GROUP BY station_nbr ORDER BY max_days DESC;
SELECT w.station_nbr FROM sales_in_weather siw JOIN relation r ON siw.store_nbr = r.store_nbr JOIN weather w ON r.station_nbr = w.station_nbr WHERE siw.item_nbr = 9 ORDER BY SUM(siw.units) DESC LIMIT 1;
SELECT s.store_nbr FROM relation r JOIN weather w ON r.station_nbr = w.station_nbr JOIN (   SELECT station_nbr, MAX(avgspeed) AS max_avgspeed   FROM weather   GROUP BY station_nbr ) AS max_wind_station ON w.station_nbr = max_wind_station.station_nbr GROUP BY s.store_nbr ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.store_nbr FROM sales_in_weather s JOIN relation r ON s.store_nbr = r.store_nbr WHERE r.station_nbr = 14 AND (s.date LIKE '2014-02%') AND s.item_nbr = 44 AND s.units >= 300
SELECT item_nbr, MAX(units)  FROM sales_in_weather  WHERE SUBSTR(date, 1, 7) = '2013-06' AND codesum = 'RA' AND store_nbr IN (   SELECT store_nbr    FROM relation    WHERE station_nbr = 9 )  GROUP BY item_nbr  ORDER BY MAX(units) DESC;
SELECT s.station_nbr FROM sales_in_weather s JOIN relation r ON s.store_nbr = r.store_nbr WHERE s.item_nbr = 5 ORDER BY SUM(s.units) DESC LIMIT 1;
SELECT MIN(sunrise) FROM weather WHERE SUBSTR(date, 1, 7) = '2012-02' AND station_nbr IN (SELECT station_nbr FROM relation WHERE store_nbr IN (SELECT store_nbr FROM sales_in_weather WHERE store_nbr IN (SELECT store_nbr FROM relation WHERE Count(store_nbr) = 1)));
SELECT s.store_nbr, SUM(s.units) AS total_units FROM sales_in_weather s JOIN relation r ON s.store_nbr = r.store_nbr JOIN weather w ON r.station_nbr = w.station_nbr WHERE w.station_nbr = 17 AND SUBSTR(s.date, 1, 7) = '2012-10' AND s.item_nbr = 45 GROUP BY s.store_nbr ORDER BY total_units DESC LIMIT 1;
SELECT siw.item_nbr FROM sales_in_weather siw JOIN relation r ON siw.store_nbr = r.store_nbr JOIN weather w ON r.station_nbr = w.station_nbr WHERE w.snowfall = (SELECT MAX(snowfall) FROM weather);
SELECT w.station_nbr, SUM(s.units) AS total_units FROM sales_in_weather s JOIN weather w ON s.date = w.date JOIN relation r ON s.store_nbr = r.store_nbr AND w.station_nbr = r.station_nbr GROUP BY w.station_nbr ORDER BY total_units DESC LIMIT 3;
SELECT COUNT(DISTINCT s.store_nbr) FROM relation r JOIN weather w ON r.station_nbr = w.station_nbr WHERE w.heat = (SELECT MAX(h.heat) FROM weather h)
SELECT MIN(tmin) FROM weather WHERE date = '2014-02-08' AND station_nbr IN (   SELECT station_nbr   FROM relation   WHERE store_nbr = 29 );
SELECT COUNT(*) FROM weather WHERE date = '2014-02-18' AND stnpressure < 30 INTERSECT SELECT station_nbr FROM relation GROUP BY station_nbr HAVING COUNT(store_nbr) = 3;
SELECT r.station_nbr, AVG(w.tmax) AS avg_max_temp FROM relation r JOIN weather w ON r.station_nbr = w.station_nbr WHERE SUBSTRING(w.date, 1, 7) = '2012-02' GROUP BY r.station_nbr ORDER BY COUNT(r.store_nbr) DESC LIMIT 1;
SELECT      (SUM(siw.units) WHERE siw.store_nbr = 10 AND siw.item_nbr = 5) /      (SELECT SUM(siw.units) FROM sales_in_weather siw) * 100 FROM      sales_in_weather siw WHERE      siw.date LIKE '2014%' AND      EXISTS (SELECT 1 FROM relation r WHERE r.store_nbr = siw.store_nbr AND r.station_nbr = 12);
SELECT MAX(avgspeed)  FROM weather;
SELECT COUNT(DISTINCT date)  FROM weather  WHERE snowfall > 5;
SELECT COUNT(DISTINCT w.date) FROM weather w WHERE w.sunrise < TIME '05:00:00';
SELECT MIN(dewpoint)  FROM weather;
SELECT MAX(tmax) AS max_temp, MIN(tmin) AS min_temp FROM weather WHERE station_nbr = 1 AND date = '2012-01-15';
SELECT COUNT(DISTINCT r.station_nbr) FROM sales_in_weather siw JOIN relation r ON siw.store_nbr = r.store_nbr JOIN weather w ON r.station_nbr = w.station_nbr WHERE siw.item_nbr = 5 AND SUBSTRING(siw.date, 1, 7) = '2014-01'
SELECT MIN(tmin) FROM weather WHERE Substring(date, 1, 7) = '2012-01' AND station_nbr IN (   SELECT station_nbr   FROM relation   WHERE store_nbr = 16 );
SELECT COUNT(units) FROM sales_in_weather WHERE item_nbr = 7 AND store_nbr = 7 AND EXISTS (   SELECT 1   FROM weather   JOIN relation ON weather.station_nbr = relation.station_nbr   WHERE relation.store_nbr = 7 AND weather.snowfall < 5   AND weather.date = sales_in_weather.date );
SELECT COUNT(siw.units) FROM sales_in_weather siw JOIN relation r ON siw.store_nbr = r.store_nbr JOIN weather w ON r.station_nbr = w.station_nbr WHERE siw.store_nbr = 9 AND w.snowfall IS NOT NULL AND w.snowfall > 0;
Error: 第 8207 个样本有 0 个SQL。
SELECT DISTINCT s.date FROM sales_in_weather s JOIN relation r ON s.store_nbr = r.store_nbr JOIN weather w ON r.station_nbr = w.station_nbr WHERE s.store_nbr = 35 AND w.codesum LIKE '%HZ%';
SELECT sealevel, avgspeed FROM weather w JOIN relation r ON w.station_nbr = r.station_nbr WHERE r.store_nbr IN (3, 4);
SELECT item_nbr, MAX(units) AS max_units FROM sales_in_weather WHERE store_nbr = 1 AND date IN (   SELECT date   FROM weather   WHERE codesum LIKE '%' || 'RA' || '%' ) GROUP BY item_nbr ORDER BY max_units DESC;
SELECT (MAX(w.tmax) / MIN(w.tmin)) AS ratio FROM weather w JOIN relation r ON w.station_nbr = r.station_nbr WHERE r.store_nbr = 11;
SELECT SUM(CASE WHEN s.station_nbr = 1 THEN units ELSE 0 END) -         SUM(CASE WHEN s.station_nbr = 2 THEN units ELSE 0 END) AS difference FROM sales_in_weather s WHERE DATE_FORMAT(s.date, '%Y') = '2012' AND EXISTS (SELECT 1 FROM relation r WHERE r.store_nbr = s.store_nbr AND r.station_nbr = s.station_nbr);
SELECT AVG(tavg_store18 - tavg_store19)  FROM (   SELECT tavg    FROM weather    WHERE date = '2022-09-16'    AND station_nbr IN (     SELECT station_nbr      FROM relation      WHERE store_nbr = 18   )    UNION ALL    SELECT tavg    FROM weather    WHERE date = '2022-09-16'    AND station_nbr IN (     SELECT station_nbr      FROM relation      WHERE store_nbr = 19   ) ) AS tavg_store18, tavg_store19;
SELECT SUM(su.units)  FROM sales_in_weather su  JOIN relation r ON su.store_nbr = r.store_nbr  JOIN weather w ON r.station_nbr = w.station_nbr  WHERE su.item_nbr = 1 AND w.tavg = 83;
SELECT    SUM(units) - SUM(units) OVER (PARTITION BY item_nbr ORDER BY sunset ASC ROWS 1 NULL)  FROM    sales_in_weather  WHERE    item_nbr = 1;
SELECT SUM(siw.units) FROM sales_in_weather siw JOIN weather w ON siw.date = w.date JOIN relation r ON siw.store_nbr = r.store_nbr AND w.station_nbr = r.station_nbr WHERE siw.item_nbr = 10 AND w.tavg < (SELECT AVG(tavg) FROM weather);
SELECT      AVG(tavg6 - tavg7) AS avg_temp_diff FROM      (SELECT           SUM(tavg) / COUNT(date) AS tavg6      FROM           weather      WHERE           SUBSTR(date, 1, 7) = '2012-05' AND store_nbr = 6) AS t6 CROSS JOIN      (SELECT           SUM(tavg) / COUNT(date) AS tavg7      FROM           weather      WHERE           SUBSTR(date, 1, 7) = '2012-05' AND store_nbr = 7) AS t7;
Error: 第 8218 个样本有 0 个SQL。
SELECT c.Name FROM country c JOIN ethnicGroup e ON c.Name = e.Country WHERE e.Name = 'African' AND e.Percentage > 90;
SELECT ethnicGroup.Name, ethnicGroup.Percentage FROM ethnicGroup JOIN country ON ethnicGroup.Country = country.Name WHERE country.Name = 'Singapore';
SELECT      (COUNT(DISTINCT p.Country) / (SELECT COUNT(*) FROM country)) * 100  FROM      politics p  WHERE      p.Independence > '1970-01-01'      AND p.Government = 'Republic';
SELECT e.GDP, p.Government FROM economy e JOIN country c ON e.Country = c.Name WHERE c.Name = 'Bosnia and Herzegovina';
SELECT country.Name, population.Population FROM country JOIN population ON country.Code = population.Country WHERE population.Population_Growth > 2 AND population.Infant_Mortality < 5;
Error: 第 8224 个样本有 0 个SQL。
SELECT c.Name, GROUP_CONCAT(eg.Name, ' - ', eg.Percentage, ' ',) AS Ethnic_Groups FROM country c JOIN ethnicGroup eg ON c.Name = eg.Country GROUP BY c.Name ORDER BY COUNT(eg.Name) DESC LIMIT 1;
SELECT c.Name FROM country c JOIN ethnicGroup e ON c.Name = e.Country WHERE e.Name = 'Africans' AND e.Percentage = 100;
SELECT population.Infant_Mortality FROM population WHERE country.Name IN (   SELECT country.Name   FROM country   LEFT JOIN ethnicGroup ON country.Name = ethnicGroup.Country   WHERE ethnicGroup.Name = 'Amerindian'   GROUP BY country.Name   HAVING COUNT(ethnicGroup.Name) = (     SELECT MIN(COUNT(ethnicGroup.Name))     FROM country     LEFT JOIN ethnicGroup ON country.Name = ethnicGroup.Country     WHERE ethnicGroup.Name = 'Amerindian'     GROUP BY country.Name   ) )
Error: 第 8228 个样本有 0 个SQL。
SELECT Country FROM population WHERE Government = 'Republic' ORDER BY Population_Growth DESC LIMIT 1;
SELECT politics.Independence FROM politics WHERE politics.Country = 'Bulgaria';
SELECT c.Name, c.Population, e.Percentage * c.Population AS Arab_Population FROM country c JOIN ethnicGroup e ON c.Name = e.Country WHERE e.Name = 'Arab';
SELECT country.population * ethnicGroup.percentage FROM country JOIN ethnicGroup ON country.name = ethnicGroup.country WHERE country.name = 'Turks and Caicos Islands' AND ethnicGroup.name = 'African';
SELECT population.population_growth * population.population AS Growth_Population FROM population WHERE population.Infant_Mortality = (   SELECT MIN(Infant_Mortality)   FROM population );
SELECT country.Capital, country.Population FROM country JOIN economy ON country.Code = economy.Country WHERE economy.GDP > 400000;
SELECT e.Service * e.GDP AS Service_GDP FROM economy e WHERE e.Country = 'Brazil';
SELECT country, population_growth FROM population WHERE infant_mortality = (SELECT MAX(infant_mortality) FROM population);
SELECT country, population, population_growth FROM population WHERE population_growth < 0;
SELECT country.Name, population.Infant_Mortality FROM country JOIN population ON country.Name = population.Country WHERE country.Area BETWEEN 500000 AND 1000000;
SELECT c.Name, e.GDP FROM country c JOIN population p ON c.Name = p.Country JOIN economy e ON c.Name = e.Country WHERE p.Population_Growth > 3;
SELECT population.Infant_Mortality FROM country JOIN population ON country.Name = population.Country WHERE country.Name = 'Ethiopia';
SELECT e.GDP * e.Industry AS Industry_Sector FROM economy e WHERE e.Country = 'Singapore';
SELECT economy.GDP FROM economy WHERE economy.Country IN (   SELECT country.Name   FROM country   ORDER BY country.Area ASC   LIMIT 1 ) AND economy.Agriculture IS NOT NULL;
SELECT Country FROM ethnicGroup WHERE Name = 'Albanian' ORDER BY Percentage DESC LIMIT 1;
SELECT COUNT(*) FROM country WHERE EXISTS (   SELECT 1   FROM ethnicGroup   WHERE ethnicGroup.Country = country.Name   AND ethnicGroup.Name = 'African' ) AND population > 10000000;
Error: 第 8245 个样本有 0 个SQL。
SELECT Country FROM economy ORDER BY GDP DESC LIMIT 1;
SELECT COUNT(*) FROM country c JOIN economy e ON c.Name = e.Country WHERE c.Population > 10000000 AND e.GDP > 500000;
Error: 第 8248 个样本有 0 个SQL。
SELECT Country FROM economy ORDER BY Inflation LIMIT 1;
Error: 第 8250 个样本有 0 个SQL。
SELECT COUNT(*)  FROM city  WHERE EXISTS (   SELECT 1    FROM located    WHERE located.City = city.Name    AND located.Lake = 'Salt Lake' );
SELECT Depth FROM lake WHERE Country IN (   SELECT Country   FROM city   WHERE Province = 'Albania' ) AND Province = 'Albania';
SELECT l.Name, c.Name FROM lake l JOIN locatedOn lo ON l.Name = lo.Lake JOIN city c ON lo.City = c.Name ORDER BY l.Altitude DESC LIMIT 1;
SELECT COUNT(*)  FROM lake  WHERE Country IN (SELECT Country FROM geo_island WHERE Island IN (SELECT Name FROM island WHERE Type = 'Island' AND Longitude BETWEEN -17.3 AND -13.4 AND Latitude BETWEEN 27.7 AND 30.5)) AND Area > 1000000;
SELECT Country FROM language GROUP BY Country ORDER BY COUNT(Name) DESC LIMIT 1;
SELECT c.Capital FROM country c JOIN language l ON c.Name = l.Country WHERE l.Name = 'Armenian' AND l.Percentage > 90;
SELECT COUNT(*) FROM country JOIN language ON country.Name = language.Country WHERE country.Population < 1000000 GROUP BY country.Name HAVING COUNT(DISTINCT language.Name) > 2;
SELECT COUNT(*)  FROM organization  WHERE Country IN (SELECT Country FROM country WHERE Population < 1000000);
Error: 第 8259 个样本有 0 个SQL。
Error: 第 8260 个样本有 0 个SQL。
SELECT COUNT(*)  FROM organization  WHERE Country = (   SELECT Country    FROM country    ORDER BY (SELECT COUNT(*) FROM ethnicGroup WHERE Country = country.Name) DESC    LIMIT 1 );
SELECT o.Name  FROM organization o  JOIN language l ON o.Country = l.Country  WHERE l.Name = 'Dutch';
SELECT COUNT(*) FROM organization WHERE Country IN (   SELECT Country   FROM language   WHERE Name = 'Bosnian' )
Error: 第 8264 个样本有 0 个SQL。
SELECT COUNT(*) FROM economy, population WHERE economy.Country = population.Country AND economy.GDP > 1000000 AND population.Population_Growth > 3;
SELECT c.Name, e.GDP / p.Population AS GDP_per_capita FROM country c JOIN economy e ON c.Code = e.Country JOIN population p ON c.Code = p.Country ORDER BY GDP_per_capita DESC LIMIT 1;
SELECT country.Name,         (SUM(lake.Area) / country.Area) * 100 AS Lake_Area_Coverage FROM lake JOIN country ON lake.Country = country.Name GROUP BY country.Name ORDER BY Lake_Area_Coverage DESC LIMIT 1;
Error: 第 8268 个样本有 0 个SQL。
SELECT Country FROM economy WHERE GDP > (SELECT AVG(GDP) FROM economy) * 1.3;
SELECT Country FROM city WHERE Name = 'Baghdad';
Error: 第 8271 个样本有 0 个SQL。
SELECT country.Name FROM country JOIN religion ON country.Code = religion.Country WHERE religion.Name = 'Christian' AND religion.Percentage = 41;
SELECT c1.Name AS Country1, c2.Name AS Country2 FROM river r JOIN city c ON r.SourceLatitude = c.Latitude AND r.SourceLongitude = c.Longitude JOIN located l ON c.Name = l.City AND l.River = r.Name JOIN country c1 ON l.Country = c1.Name JOIN country c2 ON l.Country != c1.Name WHERE r.Name = 'Detroit River';
SELECT c1.Name, c2.Name FROM borders JOIN country c1 ON borders.Country1 = c1.Code JOIN country c2 ON borders.Country2 = c2.Code ORDER BY Length DESC LIMIT 1;
SELECT c.Name FROM country c JOIN borders b ON c.Name = b.Country1 GROUP BY c.Name ORDER BY COUNT(b.Country2) DESC LIMIT 1;
SELECT c.Name FROM country c JOIN geo_mountain gm ON c.Code = gm.Country WHERE gm.Mountain = 'Cerro Chirripo';
Error: 第 8277 个样本有 0 个SQL。
SELECT COUNT(*)  FROM mountain  WHERE Country = (SELECT Name FROM country WHERE Code = 'JPN');
Error: 第 8279 个样本有 0 个SQL。
SELECT Country1, Country2 FROM mountain JOIN mountainOnIsland ON mountain.Name = mountainOnIsland.Mountain JOIN island ON mountainOnIsland.Island = island.Name WHERE mountain.Height = (     SELECT MAX(Height)     FROM mountain     WHERE Height < (         SELECT MAX(Height)         FROM mountain     ) )
SELECT      (continent.Area * (SELECT Area FROM country WHERE Name = 'Egypt')) / (SELECT Area FROM continent WHERE Name = 'Asia') AS Percentage FROM      continent WHERE      Name = 'Asia';
SELECT (continent.Area * country.Area / continent.Area) * 100 FROM country JOIN continent ON country.Continent = continent.Name WHERE country.Name = 'Egypt';
Error: 第 8283 个样本有 0 个SQL。
SELECT country.Name FROM city JOIN country ON city.Country = country.Name WHERE city.Name = 'Olsztyn';
SELECT Province FROM mountain WHERE Type = 'Volcano' ORDER BY Height DESC LIMIT 1;
Error: 第 8286 个样本有 0 个SQL。
Error: 第 8287 个样本有 0 个SQL。
SELECT country.Name FROM country WHERE country.Name = 'Bermuda';
Error: 第 8289 个样本有 0 个SQL。
SELECT e.Name FROM ethnicGroup e JOIN country c ON e.Country = c.Name WHERE c.Name IN (   SELECT Name   FROM country   ORDER BY Population DESC   OFFSET 2 ROWS   FETCH NEXT 1 ROW ONLY ) ORDER BY e.Percentage DESC LIMIT 1;
Error: 第 8291 个样本有 0 个SQL。
Error: 第 8292 个样本有 0 个SQL。
SELECT Country.Name, Country.Area FROM country JOIN politics ON country.Name = politics.Country WHERE politics.Independence = '1921-03-13';
SELECT country.Population / continent.Area AS Population_Density FROM country JOIN continent ON country.Continent = continent.Name WHERE country.Capital = 'Petropavl';
SELECT COUNT(*)  FROM language  WHERE Country = 'United Kingdom'  AND Name = 'English'  MINUS  SELECT COUNT(*)  FROM language  WHERE Country = 'United Kingdom'  AND Name = 'Scottish';
SELECT c.Name, c.Population FROM city c JOIN country co ON c.Country = co.Code WHERE co.Code = (   SELECT co2.Code   FROM country co2   ORDER BY co2.Population / co2.Area DESC   LIMIT 1 OFFSET 11 );
SELECT    (SELECT MAX(Length) FROM borders WHERE Country1 = 'United States' OR Country2 = 'United States') /   (SELECT MIN(Length) FROM borders WHERE Country1 = 'United States' OR Country2 = 'United States')
Error: 第 8298 个样本有 0 个SQL。
SELECT COUNT(*)  FROM mountain  WHERE Country IN (   SELECT Country    FROM country    ORDER BY Population DESC    LIMIT 1 );
SELECT COUNT(*) FROM economy, country WHERE economy.Country = country.Name AND economy.Agriculture > 0.4 * economy.GDP AND country.Name IN (   SELECT Country   FROM geo_mountain   GROUP BY Country   HAVING COUNT(*) < 2 )
SELECT m.Name FROM mountain m JOIN country c ON m.Country = c.Name JOIN economy e ON c.Code = e.Country WHERE e.Inflation = (SELECT MIN(Inflation) FROM economy);
SELECT COUNT(DISTINCT c.Country)  FROM country c  JOIN politics p ON c.Code = p.Country  WHERE p.Government = 'Republic' AND p.Independence = 'Yes';
SELECT d.Name FROM desert d JOIN country c ON d.Country = c.Name WHERE c.Population > 100000 AND d.Area < 500000;
SELECT COUNT(DISTINCT d.Name) FROM desert d JOIN country c ON d.Country = c.Name JOIN language l ON c.Name = l.Country WHERE l.Name = 'Armenian' AND l.Percentage > 90;
SELECT m.Name FROM mountain m JOIN country c ON m.Country = c.Code WHERE c.Independence = 'Yes' ORDER BY m.Height DESC LIMIT 1;
Error: 第 8306 个样本有 0 个SQL。
SELECT COUNT(*) FROM economy JOIN country ON economy.Country = country.Name WHERE economy.GDP > 1000000 JOIN geo_mountain ON country.Name = geo_mountain.Country WHERE geo_mountain.Height > 1000;
SELECT MAX(b.Length) FROM borders b WHERE b.Country1 IN (SELECT c.Name FROM country c WHERE c.Independence = 'Independent')   AND b.Country2 IN (SELECT c.Name FROM country c WHERE c.Independence = 'Independent');
SELECT COUNT(*) FROM country JOIN borders ON country.Name = Country1 WHERE government = 'republic' AND Length > 200;
Error: 第 8310 个样本有 0 个SQL。
SELECT e.GDP FROM economy e JOIN continent c ON e.Country = c.Name WHERE c.Name = 'Europe';
SELECT COUNT(*)  FROM mountain  WHERE EXISTS (SELECT 1 FROM continent WHERE continent.Name = 'Africa' AND mountain.continent = continent.Name);
Error: 第 8313 个样本有 0 个SQL。
Error: 第 8314 个样本有 0 个SQL。
Error: 第 8315 个样本有 0 个SQL。
SELECT COUNT(*) FROM country WHERE language IN (   SELECT Name   FROM language   WHERE Percentage > 0 ) AND population_Growth <= 0
Error: 第 8317 个样本有 0 个SQL。
Error: 第 8318 个样本有 0 个SQL。
SELECT AVG(Inflation)  FROM economy e  JOIN continent c ON e.Country = c.Name  WHERE c.Area = (SELECT MAX(Area) FROM continent);
SELECT i.Name, i.Area FROM island i JOIN locatedOn lo ON i.Name = lo.Island JOIN city c ON lo.City = c.Name WHERE c.Name = 'Balikpapan';
SELECT c.Name, c.Population FROM city c JOIN located l ON c.Name = l.City JOIN island i ON l.Island = i.Name WHERE i.Name = 'Sumatra';
SELECT i.Name, i.Longitude, i.Latitude FROM city c JOIN located l ON c.Name = l.City JOIN locatedOn lo ON l.Province = lo.Province AND l.Country = lo.Country JOIN island i ON lo.Island = i.Name WHERE c.Province = 'South Yorkshire' AND c.Country = 'United Kingdom';
SELECT i1.Name FROM island i1 JOIN locatedOn lo ON i1.Name = lo.Island JOIN city c ON lo.City = c.Name JOIN province p ON c.Province = p.Name WHERE p.Name = 'Warwickshire' ORDER BY i1.Area DESC;
Error: 第 8324 个样本有 0 个SQL。
SELECT p.Name, c.Name FROM city c JOIN located l ON c.Country = l.Country AND c.Province = l.Province JOIN province p ON l.Province = p.Name WHERE c.Name = 'Glenrothes';
Error: 第 8326 个样本有 0 个SQL。
SELECT i.Name, c.Name, c.Province FROM island i JOIN locatedOn lo ON i.Name = lo.Island JOIN city c ON lo.City = c.Name WHERE i.Type = 'Coral';
Error: 第 8328 个样本有 0 个SQL。
SELECT (p.Population / c.Population) * 100 AS Percentage FROM city c JOIN province p ON c.Country = p.Country AND c.Province = p.Name WHERE c.Name = 'Edmonton';
Error: 第 8330 个样本有 0 个SQL。
SELECT l.Name, c.Name FROM lake l JOIN locatedOn lo ON l.Name = lo.Lake JOIN city c ON lo.City = c.Name WHERE l.Province = 'Albania';
SELECT m.Name, m.Height FROM mountain m JOIN geo_mountain gm ON m.Name = gm.Mountain JOIN geo_lake gl ON gm.Country = gl.Country AND gm.Province = gl.Province WHERE gl.Lake = 'Himalaya' ORDER BY m.Height DESC LIMIT 1;
SELECT m.Name, m.Longitude, m.Latitude FROM mountain m WHERE m.Type = 'Volcanic';
SELECT m.Name FROM mountain m WHERE m.Height BETWEEN 2000 AND 4000;
SELECT r.Name FROM river r JOIN geo_river gr ON r.Name = gr.River JOIN sea s ON gr.Country = s.Country WHERE s.Name = 'Mediterranean Sea' ORDER BY r.Length DESC LIMIT 1;
Error: 第 8336 个样本有 0 个SQL。
SELECT c.Name, p.Name FROM city c JOIN located l ON c.Name = l.City JOIN river r ON l.River = r.Name JOIN sea s ON r.Sea = s.Name WHERE s.Name = 'Atlantic Ocean'
Error: 第 8338 个样本有 0 个SQL。
SELECT m.Height, m.Longitude, m.Latitude FROM mountain m JOIN locatedOn lo ON m.Mountain = lo.Mountain JOIN city c ON lo.City = c.Name JOIN river r ON c.River = r.Name WHERE r.Name = 'Lech';
SELECT r.Name FROM river r JOIN located l ON r.Name = l.River JOIN city c ON l.City = c.Name JOIN province p ON c.Province = p.Name WHERE p.Name = 'Lorraine';
SELECT m.Name, m.Height FROM mountain m JOIN geo_river gr ON m.Name = gr.Mountain JOIN river r ON gr.River = r.Name WHERE r.SourceLatitude = (SELECT Latitude FROM city WHERE Name = 'Ghdir');
SELECT r.Name FROM city c JOIN located l ON c.Name = l.City JOIN river r ON l.River = r.Name WHERE c.Name = 'Little Rock';
SELECT r.Name, p.Name AS Province FROM river r JOIN located l ON r.Name = l.River JOIN city c ON l.City = c.Name JOIN province p ON c.Province = p.Name WHERE r.Length > 1000;
SELECT province, country, Height FROM mountain WHERE Name = 'Moldoveanu';
SELECT r.Name, r.Length FROM river r JOIN country c ON r.Country = c.Name WHERE c.Name = 'USA';
SELECT AVG(Height)  FROM mountain  WHERE Country IN (SELECT Country FROM province WHERE Name = 'Nepal');
SELECT      MAX(population) AS max_population,     MIN(population) AS min_population,     MAX(population) - MIN(population) AS population_disparity FROM      city c WHERE      EXISTS (SELECT 1 FROM river r WHERE r.Name = 'Seine' AND c.LocatedOn = r.River);
SELECT r1.Name, r2.Length FROM river r1 JOIN city c ON r1.Name = (SELECT river FROM located WHERE city = 'Belgrade') JOIN city c2 ON r1.Name = (SELECT river FROM located WHERE city = 'Belgrade') WHERE r1.Length > r2.Length ORDER BY r1.Length - r2.Length DESC LIMIT 1;
SELECT c.Name  FROM country c  JOIN language l ON c.Code = l.Country  WHERE l.Name = 'Spanish' AND l.Percentage = 100;
Error: 第 8350 个样本有 0 个SQL。
SELECT r.Name FROM river r JOIN located l ON r.Name = l.River JOIN city c ON l.City = c.Name WHERE c.Country = 'Canada';
SELECT country.Name FROM country JOIN economy ON country.Name = economy.Country ORDER BY economy.Inflation LIMIT 1;
Error: 第 8353 个样本有 0 个SQL。
SELECT SUM(p.Population * r.Percentage)  FROM country c  JOIN population p ON c.Name = p.Country  JOIN language l ON c.Name = l.Country  JOIN religion r ON c.Name = r.Country  WHERE c.Name = 'Moldova' AND l.Name = 'Jewish' AND r.Name = 'Jewish';
Error: 第 8355 个样本有 0 个SQL。
SELECT c.Name FROM country c JOIN geo_desert gd ON c.Name = gd.Country JOIN desert d ON gd.Desert = d.Name WHERE d.Area = (SELECT MIN(a.Area) FROM desert a);
SELECT COUNT(*)  FROM city  WHERE Country = 'Montenegro' AND language.Name = 'Serbian';
SELECT COUNT(*)  FROM mountain  WHERE Country IN (   SELECT Country    FROM country    ORDER BY Area DESC    LIMIT 1 )
SELECT s.Name, c.Name AS Country FROM sea s JOIN geo_sea gs ON s.Name = gs.Sea JOIN country c ON gs.Country = c.Name ORDER BY s.Depth LIMIT 1;
Error: 第 8360 个样本有 0 个SQL。
SELECT politics.Government FROM economy, country, politics WHERE economy.Inflation = (SELECT MAX(Inflation) FROM economy) AND economy.Country = country.Code;
Error: 第 8362 个样本有 0 个SQL。
Error: 第 8363 个样本有 0 个SQL。
SELECT c.Name FROM country c JOIN language l ON c.Name = l.Country WHERE l.Name = 'Arabic' AND l.Percentage = 100 ORDER BY c.Population ASC LIMIT 1;
Error: 第 8365 个样本有 0 个SQL。
SELECT COUNT(*)  FROM lake  WHERE Country IN (   SELECT Country    FROM country    WHERE Continent = 'Africa'    ORDER BY Population DESC    LIMIT 1 OFFSET 3 )  AND Country IN (   SELECT Country    FROM politics    WHERE Government = 'republican' );
SELECT r.Name FROM religion r JOIN country c ON r.Country = c.Name WHERE c.continent = 'Asia' ORDER BY r.Percentage DESC LIMIT 1;
SELECT country1.Population - country2.Population AS population_difference FROM country JOIN mountain ON country.Code = mountain.Country JOIN mountainOnIsland ON mountainOnIsland.Mountain = mountain.Name JOIN island ON mountainOnIsland.Island = island.Name WHERE mountain.Height IN (   SELECT MAX(Height)   FROM mountain   JOIN mountainOnIsland ON mountain.Name = mountainOnIsland.Mountain   JOIN island ON mountainOnIsland.Island = island.Name ) GROUP BY country1.Population, country2.Population LIMIT 1;
Error: 第 8369 个样本有 0 个SQL。
SELECT c.Name FROM river r JOIN located l ON r.Name = l.River JOIN city c ON l.City = c.Name WHERE r.EstuaryLongitude IS NOT NULL AND r.EstuaryLatitude IS NOT NULL AND EXISTS (   SELECT 1   FROM sea s   WHERE s.Name = 'Atlantic Ocean'   AND s.Name = (SELECT geo_sea.Sea                 FROM geo_sea                 WHERE geo_sea.Country = c.Country                 AND geo_sea.Province = c.Province) ) ORDER BY r.Length DESC LIMIT 3;
SELECT COUNT(Population) FROM city WHERE Country IN (   SELECT Country   FROM country   WHERE Capital IN (     SELECT Name     FROM city   ) AND Independence = '1947-08-15' )
SELECT      SUM(e.Percentage * c.Population) AS TotalAfroAsianPeople FROM      language l JOIN      country c ON l.Country = c.Code JOIN      religion r ON c.Code = r.Country WHERE      l.Name = 'Afro-Asian' AND r.Name = 'Islam' AND c.Population > (SELECT MAX(Population) FROM country WHERE continent = 'Asia' AND politics.Government = 'Monarchy');
SELECT c.Name FROM city c JOIN located l ON c.Name = l.City JOIN river r ON l.River = r.Name WHERE r.Name = 'Euphrat River'; SELECT c2.Name FROM country c2 JOIN river r ON c2.Name = r.Country WHERE r.Name = 'Euphrat River';
SELECT      SUM(percentage) AS english_speaking_proportion FROM      country      JOIN language ON country.name = language.country  WHERE      language.name = 'English'      AND country.name IN (         SELECT              country          FROM              isMember          WHERE              organization = 'United States'     )
SELECT c.Name, COUNT(p.Name) AS NumProvinces, e.Service / e.GDP AS ServicePercentage, p.Population / c.Area AS PopulationDensity FROM country c JOIN province p ON c.Name = p.Country JOIN economy e ON c.Name = e.Country WHERE c.Government = 'Federal Republic' AND c.Continent = 'Europe' GROUP BY c.Name ORDER BY NumProvinces DESC LIMIT 1;
Error: 第 8376 个样本有 0 个SQL。
Error: 第 8377 个样本有 0 个SQL。
SELECT Name FROM language WHERE Country = (SELECT Name FROM country WHERE Name = 'MNE') AND Percentage = (SELECT MAX(Percentage) FROM language WHERE Country = (SELECT Name FROM country WHERE Name = 'MNE'));
SELECT      100 * SUM(p.percentage) AS english_percentage FROM      language p WHERE      p.country = (SELECT country FROM country WHERE name = 'Cayman Islands')      AND p.name = 'English';
SELECT c.Name FROM country c JOIN river r ON c.Code = r.Country WHERE r.Name = 'Pjandsh River';
SELECT country.Name FROM country JOIN economy ON country.Code = economy.Country WHERE country.Population >= 1000000000 ORDER BY economy.GDP ASC LIMIT 1;
SELECT Capital FROM country WHERE Name IN (   SELECT Country   FROM mountain   WHERE Name = 'Licancabur' )
Error: 第 8383 个样本有 0 个SQL。
SELECT c.Name FROM country c JOIN river r ON c.Code = r.Country JOIN geo_river gr ON r.Name = gr.River WHERE gr.Country = 'Brazil';
SELECT c.Name FROM country c JOIN politics p ON c.Name = p.Country WHERE p.Independence = '1492-01-01';
SELECT COUNT(*) FROM city WHERE Country = 'France' AND Population > 100000;
SELECT River FROM river WHERE Sea = (SELECT Name FROM sea WHERE Depth = 540) ORDER BY Length DESC LIMIT 1;
SELECT c.Code FROM country c JOIN mountain m ON c.Name = m.Country WHERE m.Height = (SELECT MAX(h.Height) FROM mountain h WHERE h.Type = 'volcanic' ORDER BY h.Height DESC LIMIT 1 OFFSET 1);
Error: 第 8389 个样本有 0 个SQL。
Error: 第 8390 个样本有 0 个SQL。
SELECT COUNT(*)  FROM city  WHERE Country = (SELECT Name FROM country WHERE Code = 'JPN');
Error: 第 8392 个样本有 0 个SQL。
SELECT c.Name, c.Population FROM city c WHERE c.Country IN (SELECT p.Country FROM province p WHERE p.Capital = 'N') ORDER BY c.Population DESC LIMIT 1;
Error: 第 8394 个样本有 0 个SQL。
SELECT r.Name FROM religion r JOIN country c ON r.Country = c.Name WHERE c.Name = 'Japan' AND r.Percentage = (SELECT MAX(r2.Percentage) FROM religion r2 WHERE r2.Country = 'Japan');
Error: 第 8396 个样本有 0 个SQL。
SELECT    ROUND((SUM(c.Area) / (SELECT Area FROM continent WHERE Name = 'Europe')) * 100, 2) AS percentage FROM    country c   JOIN continent con ON c.Continent = con.Name WHERE    c.Name = 'Russia';
Error: 第 8398 个样本有 0 个SQL。
Error: 第 8399 个样本有 0 个SQL。
SELECT Infant_Mortality * Population * Population_Growth AS Infant_Mortality_Switzerland FROM population, country WHERE Country = 'Switzerland';
SELECT COUNT(*)  FROM mountain  WHERE Country = 'United States';
Error: 第 8402 个样本有 0 个SQL。
SELECT e.GDP / c.Population AS GDP_per_capita FROM economy e JOIN country c ON e.Country = c.Name WHERE c.Code = 'CHE';
SELECT economy.GDP FROM economy JOIN country ON economy.Country = country.Code JOIN city ON country.Name = city.Country WHERE city.Name = 'Fuenlabrada';
Error: 第 8405 个样本有 0 个SQL。
SELECT country.population / continent.area AS population_density FROM country JOIN city ON country.name = city.country WHERE city.name = 'Hanoi';
SELECT e.Country, e.Name FROM ethnicGroup e WHERE e.Percentage = (   SELECT MAX(e2.Percentage)   FROM ethnicGroup e2   WHERE e2.Country = e.Country )
Error: 第 8408 个样本有 0 个SQL。
SELECT    r.Name,    g.Province  FROM    river r    JOIN geo_river gr ON r.Name = gr.River    JOIN country c ON gr.Country = c.Name    JOIN geo_river gr2 ON r.Name = gr2.River    JOIN country c2 ON gr2.Country = c2.Name  WHERE    c.Name != c2.Name  GROUP BY    r.Name,    g.Province  HAVING    COUNT(DISTINCT c.Name) > 1;
SELECT      b.Country2,      (b.Length / (SELECT SUM(Length) FROM borders WHERE Country1 = 'Angola') * 100) AS Percentage FROM      borders b WHERE      b.Country1 = 'Angola';
SELECT ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM island WHERE Type = 'non volcanic' AND Name IN (SELECT Name FROM geo_island WHERE Country IN (SELECT Name FROM country WHERE continent = 'Lesser Antilles')) AND Area <= 300) , 2) AS Percent FROM island WHERE Type = 'non volcanic' AND Name IN (SELECT Name FROM geo_island WHERE Country IN (SELECT Name FROM country WHERE continent = 'Lesser Antilles')) AND Area <= 300;
SELECT ROUND(COUNT(DISTINCT c1.Name) / COUNT(DISTINCT c2.Name) * 100, 2) FROM country c1 JOIN language c2 ON c1.Name = c2.Country WHERE c2.Name = 'English' AND c2.Percentage = 100;
SELECT c.Capital FROM country c WHERE c.Population < (   SELECT MAX(c2.Population)   FROM country c2 ) * 0.995;
Error: 第 8414 个样本有 0 个SQL。
SELECT (COUNT(CASE WHEN religion.Name NOT LIKE '%Christian%' THEN 1 END) /          (COUNT(CASE WHEN religion.Name LIKE '%Christian%' THEN 1 END) +           COUNT(CASE WHEN religion.Name NOT LIKE '%Christian%' THEN 1 END))) * 100 FROM religion, target WHERE religion.Country = target.Country;
Error: 第 8416 个样本有 0 个SQL。
SELECT r.* FROM river r JOIN locatedOn lo ON r.Name = lo.River JOIN city c ON lo.City = c.Name WHERE r.Name IN (   SELECT r1.Name   FROM river r1   JOIN river r2 ON r1.Name = r2.Estuary   WHERE r2.Name = 'Donau River' ) AND r.Length > 500 AND c.Country = 'Slovenia';
SELECT Name FROM city WHERE Name IN (   SELECT Country   FROM sea   WHERE Depth < (     SELECT Depth     FROM sea     WHERE Name = 'Bay of Bengal'   ) - 4232 )
Error: 第 8419 个样本有 0 个SQL。
SELECT Name FROM continent WHERE Name IN (   SELECT continent   FROM economy   WHERE Country IN (     SELECT Country     FROM economy     ORDER BY Inflation DESC     LIMIT 1   ) )
Error: 第 8421 个样本有 0 个SQL。
SELECT Name, Depth FROM lake WHERE Country = (SELECT Name FROM country WHERE Code = 'BO') ORDER BY Depth DESC LIMIT 1;
Error: 第 8423 个样本有 0 个SQL。
SELECT p.Name FROM geo_island i JOIN geo_mountain m ON i.Province = m.Province JOIN mountain mt ON m.Name = mt.Name WHERE mt.Name = 'Rinjani';
Error: 第 8425 个样本有 0 个SQL。
SELECT c.Name FROM country c WHERE c.Name IN (   SELECT c1.Name   FROM country c1   JOIN borders b ON c1.Name = b.Country1   JOIN continent cont ON b.Country2 = cont.Name   GROUP BY c1.Name   HAVING COUNT(DISTINCT cont.Name) > 1 ) AND c.Population / c.Area <= 10;
SELECT c.Name, c.Population / c.Area AS Ratio FROM country c JOIN religion r ON c.Name = r.Country WHERE r.Name = 'Hindu' ORDER BY Ratio ASC LIMIT 1;
SELECT e.economy_date FROM economy e WHERE e.Country = (SELECT c.Name                    FROM country c                    WHERE c.Name = 'Saint Kitts and Nevis')   AND e.GDP = (SELECT c.population * 4                FROM country c                WHERE c.Name = 'Saint Kitts and Nevis');
SELECT AVG(Population / Area)  FROM country  WHERE Code IN (   SELECT Country    FROM isMember    WHERE Organization IN (     SELECT Abbreviation      FROM organization      WHERE Established = '1947'   ) );
Error: 第 8430 个样本有 0 个SQL。
Error: 第 8431 个样本有 0 个SQL。
SELECT    SUM(continent.Area) AS asia_area,   SUM(continent.Area) AS europe_area FROM    continent WHERE    continent.Name = 'Asia' UNION ALL SELECT    SUM(continent.Area) AS asia_area,   SUM(continent.Area) AS europe_area FROM    continent WHERE    continent.Name = 'Europe';
SELECT Longitude, Latitude FROM city WHERE Name = 'Aarhus';
SELECT (SELECT Population FROM country WHERE Name = 'United Kingdom') - (SELECT Population FROM country WHERE Name = 'Italy');
Error: 第 8435 个样本有 0 个SQL。
SELECT l.Name, l.Area * l.Depth as Metric FROM lake l ORDER BY l.Area * l.Depth DESC LIMIT 1;
SELECT Country1, Country2 FROM borders WHERE Length = (SELECT MAX(Length) FROM borders) ORDER BY Country1;
Error: 第 8438 个样本有 0 个SQL。
SELECT c.Name FROM country c ORDER BY (SELECT SUM(l.Percentage) FROM language l WHERE l.Country = c.Code AND l.Name LIKE 'African%') ASC LIMIT 1;
Error: 第 8440 个样本有 0 个SQL。
SELECT Country, Inflation FROM economy ORDER BY Inflation DESC LIMIT 3;
SELECT country.Name FROM country JOIN language ON country.Name = language.Country WHERE language.Name = 'English' AND language.Percentage = 100;
SELECT COUNT(*) FROM organization WHERE Established > 1960 AND NOT EXISTS (   SELECT 1   FROM politics   WHERE politics.Country = organization.Country AND politics.Independence IS NOT NULL );
SELECT province FROM located WHERE city IN (   SELECT Name   FROM city   WHERE Name = 'Klaeaelv' ) UNION SELECT province FROM locatedOn WHERE city IN (   SELECT Name   FROM city   WHERE Name = 'Klaeaelv' )
SELECT COUNT(*) FROM province WHERE Country IN (   SELECT Country1   FROM borders   WHERE Country2 IN (     SELECT Country     FROM country     WHERE Name LIKE 'Italy'   )   UNION   SELECT Country2   FROM borders   WHERE Country1 IN (     SELECT Country     FROM country     WHERE Name LIKE 'Italy'   ) ) AND Country IN (   SELECT Country   FROM geo_sea   WHERE Sea LIKE 'Mediterranean Sea' )  SELECT Depth FROM sea WHERE Name LIKE 'Mediterranean Sea'
Error: 第 8446 个样本有 0 个SQL。
SELECT e1.Country, e1.GDP, e1.Agriculture FROM economy e1 WHERE e1.GDP IN (   SELECT GDP   FROM economy   ORDER BY GDP DESC   LIMIT 3 ) ORDER BY e1.Agriculture LIMIT 1;
SELECT SUM(Area) AS TotalArea, COUNT(DISTINCT Country) AS NumberOfNations FROM country WHERE Name = 'Africa';
SELECT p.Name FROM province p JOIN organization o ON p.Name = o.Province WHERE p.Country = 'United States' GROUP BY p.Name ORDER BY COUNT(DISTINCT o.Abbreviation) DESC LIMIT 1;
SELECT *  FROM country  WHERE politics.Independence IN (   SELECT MAX(Independence)    FROM country    WHERE politics.Dependent = 'N' )  ORDER BY politics.Independence DESC  LIMIT 3;
SELECT country.Name FROM country WHERE country.Code IN (   SELECT organization.Country   FROM organization   WHERE organization.Established > '1991-01-01'   GROUP BY organization.Country   HAVING COUNT(DISTINCT organization.Type) = 1   AND organization.Type = 'Republic' ) ORDER BY country.Name LIMIT 3;
SELECT o.Name  FROM organization o  JOIN isMember im ON o.Abbreviation = im.Country  WHERE im.Type = 'associated member';
SELECT Country1, Country2 FROM borders WHERE Country1 IN (   SELECT Country   FROM geo_desert   WHERE Desert = 'Kalahari Desert' ) OR Country2 IN (   SELECT Country   FROM geo_desert   WHERE Desert = 'Kalahari Desert' );
Error: 第 8454 个样本有 0 个SQL。
SELECT m.Sea1, s.Depth FROM mergesWith m JOIN sea s ON m.Sea1 = s.Name WHERE m.Sea2 = 'Baltic Sea';
SELECT c.Name FROM country c JOIN organization o ON c.Code = o.Country WHERE c."Government" = 'Constitutional Monarchy' AND o.Established > 1907 ORDER BY o.Established DESC;
SELECT m.Type FROM mountain m JOIN mountainOnIsland moi ON m.Name = moi.Mountain JOIN island i ON moi.Island = i.Name JOIN province p ON i.Province = p.Name JOIN country c ON p.Country = c.Name WHERE m.Name = 'Ampato';
SELECT m.Name, m.Height, m.Type FROM mountain m JOIN geo_mountain gm ON m.Name = gm.Mountain JOIN country c ON gm.Country = c.Name WHERE c.Province = 'Ecuador';
SELECT      COUNT(*) AS Percentage_of_nations_with_parliamentary_democracy FROM      country WHERE      independence > '1993-01-01' AND      government LIKE '%parliamentary democracy%';
SELECT    (COUNT(r.Length > 3000) / (SELECT COUNT(*) FROM river)) * 100 AS Proportion,   Name FROM    river WHERE    Length > 3000   AND Country = 'Russia'
SELECT o.Name, o.Established FROM organization o WHERE o.Abbreviation = 'ABEDA';
SELECT Name FROM organization WHERE Established BETWEEN '1970-01-01' AND '1980-12-31';
Error: 第 8463 个样本有 0 个SQL。
Error: 第 8464 个样本有 0 个SQL。
SELECT o.Abbreviation, o.Name, o.Established FROM organization o JOIN city c ON o.City = c.Name WHERE c.Name = 'Paris' ORDER BY o.Established LIMIT 1;
SELECT o.Name, o.City FROM organization o WHERE o.Name LIKE '%United Nation%';
SELECT c1.Name AS Country1, c2.Name AS Country2 FROM borders JOIN country AS c1 ON borders.Country1 = c1.Code JOIN country AS c2 ON borders.Country2 = c2.Code ORDER BY Length DESC LIMIT 1;
SELECT Country1 FROM borders WHERE Country1 = 'Bulgaria' OR Country2 = 'Bulgaria';
SELECT c.Name FROM country c JOIN borders b ON c.Name = b.Country1 WHERE b.Length > 4000 UNION SELECT c.Name FROM country c JOIN borders b ON c.Name = b.Country2 WHERE b.Length > 4000;
Error: 第 8470 个样本有 0 个SQL。
Error: 第 8471 个样本有 0 个SQL。
Error: 第 8472 个样本有 0 个SQL。
Error: 第 8473 个样本有 0 个SQL。
SELECT c.Name FROM country c WHERE c.Name = (   SELECT i.Country   FROM isMember i   GROUP BY i.Country   ORDER BY COUNT(i.Organization) ASC   LIMIT 1 );
SELECT c.Name, c.Capital FROM country c JOIN isMember im ON c.Code = im.Country JOIN organization o ON im.Organization = o.Abbreviation WHERE o.Name = 'IFAD' AND im.Type = 'Category III';
SELECT o.Name, COUNT(*) as Members FROM isMember JOIN organization o ON isMember.Organization = o.Abbreviation GROUP BY o.Name ORDER BY Members DESC LIMIT 1;
SELECT c.Capital FROM country c WHERE c.Name = 'Australia'  SELECT o.Name FROM organization o JOIN located l ON o.City = l.City WHERE l.Province = (SELECT p.Capital                     FROM province p                     WHERE p.Country = 'Australia' AND p.Name = c.Capital)
SELECT (COUNT(City = 'Washington') / COUNT(all cities)) * 100 FROM organization WHERE City = 'Washington';
Error: 第 8479 个样本有 0 个SQL。
Error: 第 8480 个样本有 0 个SQL。
SELECT population FROM city WHERE Name IN (   SELECT city   FROM organization   WHERE Name = 'World Tourism Organization' ) AND Country IN (   SELECT country   FROM organization   WHERE Name = 'World Tourism Organization' );
Error: 第 8482 个样本有 0 个SQL。
SELECT m.Name, m.Height FROM mountain m JOIN geo_mountain gm ON m.Name = gm.Mountain JOIN province p ON gm.Country = p.Country AND gm.Province = p.Name WHERE p.Name = 'Alaska';
SELECT population.Population FROM country JOIN population ON country.Name = population.Country ORDER BY population.Infant_Mortality DESC LIMIT 1;
SELECT economy.Inflation FROM economy WHERE Country = 'Greece';
SELECT p.Government  FROM country c  JOIN economy e ON c.Name = e.Country  JOIN politics p ON c.Name = p.Country  ORDER BY e.Agriculture DESC  LIMIT 1;
SELECT c.Name, p.Capital FROM country c JOIN politics p ON c.Code = p.Country WHERE p.Government = 'Parliamentary democracy';
SELECT c.Name, p.Population FROM country c JOIN population p ON c.Name = p.Country WHERE p.Population > (c.Population * 0.7);
SELECT c.Name, (c.Population / cp.Population) * 100 AS Population_Percentage FROM city c JOIN country cp ON c.Country = cp.Code ORDER BY c.Population DESC LIMIT 1;
Error: 第 8490 个样本有 0 个SQL。
SELECT m.Name, m.Height FROM mountain m WHERE m.Type = 'Volcanic' AND m.Height = (SELECT MAX(h.Height) FROM mountain h WHERE h.Type = 'Volcanic');
SELECT Name FROM organization WHERE Country = (SELECT Name FROM country WHERE Code = 'SA') ORDER BY Established DESC LIMIT 1;
SELECT Country FROM population ORDER BY Infant_Mortality DESC LIMIT 1 OFFSET 4;
Error: 第 8494 个样本有 0 个SQL。
Error: 第 8495 个样本有 0 个SQL。
SELECT country.Name, politics.Independence FROM country, politics WHERE country.Capital = 'Nouakchott' AND country.Name = politics.Country;
SELECT c.Name, e.GDP FROM country c JOIN economy e ON c.Name = e.Country ORDER BY c.Population ASC LIMIT 1;
Error: 第 8498 个样本有 0 个SQL。
SELECT MAX(m.Height) AS MaxElevation, m.Type FROM mountain m JOIN mountainOnIsland moi ON m.Name = moi.Mountain JOIN island i ON moi.Island = i.Name WHERE i.Name = 'Madagaskar' ORDER BY m.Height LIMIT 1;
SELECT c.Name FROM country c JOIN economy e ON c.Code = e.Country WHERE c.Population BETWEEN 60000000 AND 99000000 ORDER BY e.GDP DESC LIMIT 1;
SELECT country.name FROM country, economy WHERE country.code = economy.country AND continent.name = 'Asia' AND economy.agriculture = (SELECT MAX(economy2.agriculture) FROM economy as economy2 WHERE economy2.country = economy.country);
SELECT p.Government FROM country c JOIN economy e ON c.Code = e.Country WHERE c.Population = (SELECT MIN(p.Population) FROM country c2 JOIN economy e2 ON c2.Code = e2.Country)
SELECT EXTRACT(YEAR FROM politics.Established) AS Year, COUNT(*) AS Count FROM organization JOIN country ON organization.Country = country.Code WHERE continent.Name = 'Europe' GROUP BY EXTRACT(YEAR FROM politics.Established) ORDER BY Count DESC LIMIT 1;
SELECT Country2, Length FROM borders WHERE Country1 = (   SELECT Country   FROM country   ORDER BY Population DESC   LIMIT 1 );
SELECT country.Name, country.Population / continent.Area AS Population_Density, economy.Industry FROM country JOIN city ON country.Name = city.Country JOIN province ON city.Province = province.Name WHERE province.Name = 'Distrito Federal' JOIN economy ON country.Name = economy.Country WHERE country.Name = 'your_country_name';
SELECT DISTINCT p.Country, p.Government FROM politics p WHERE p.Independence BETWEEN '1950-01-01' AND '1999-12-31' AND p.Government = 'Parliamentary Democracy';
Error: 第 8507 个样本有 0 个SQL。
SELECT * FROM desert WHERE Latitude < 30 OR Latitude > 40;
Error: 第 8509 个样本有 0 个SQL。
SELECT p.Capital FROM province p JOIN country c ON p.Country = c.Code WHERE p.Population < 80000 ORDER BY p.Population / p.Area DESC LIMIT 1;
SELECT COUNT(*)  FROM Customers  WHERE MARITAL_STATUS = 'Never-married';
SELECT COUNT(*) FROM Customers WHERE age BETWEEN 13 AND 19;
SELECT OCCUPATION  FROM Customers  WHERE EDUCATIONNUM = 11;
SELECT COUNT(*) FROM Customers c JOIN mailings3 m ON c.GEOID = m.GEOID WHERE c.ID <= 60000 AND m.RESPONSE = 'true';
SELECT COUNT(*) FROM Customers WHERE age > 30 AND OCCUPATION = 'Machine-op-inspct';
SELECT COUNT(*) FROM Customers WHERE SEX = 'Female' AND EDUCATIONNUM > 11;
SELECT COUNT(*) FROM Customers WHERE ID IN (   SELECT GEOID   FROM mailings3   WHERE RESPONSE = 'true' ) AND SEX = 'Female' ORDER BY ID LIMIT 60000;
SELECT OCCUPATION FROM Customers WHERE age > 40 AND ID IN (   SELECT REFID   FROM mailings3   WHERE RESPONSE = 'true' );
Error: 第 8519 个样本有 0 个SQL。
SELECT COUNT(*) FROM Customers WHERE GEOID IN (   SELECT GEOID   FROM Demog   ORDER BY INCOME_K DESC   LIMIT 1 )
SELECT COUNT(*) FROM Customers WHERE GEOID IN (SELECT GEOID FROM Demog WHERE INHABITANTS_K BETWEEN 20 AND 30) AND OCCUPATION = 'Machine-op-inspct';
SELECT c.ID FROM Customers c WHERE c.GEOID IN (   SELECT d.GEOID   FROM Demog d   WHERE d.INHABITANTS_K = (     SELECT MAX(INHABITANTS_K)     FROM Demog     WHERE GEOID IN (0, 1)   ) )
SELECT COUNT(DISTINCT c.GEOID) FROM Customers c JOIN Demog d ON c.GEOID = d.GEOID JOIN mailings3 m ON c.ID = m.REFID WHERE m.RESPONSE = 'true' AND d.INHABITANTS_K > 30 LIMIT 60000;
SELECT COUNT(*) FROM Customers WHERE ID IN (   SELECT GEOID   FROM Demog   JOIN mailings3 ON Demog.GEOID = mailings3.GEOID   WHERE RESPONSE = 'true' ) AND SEX = 'Male' AND MARITAL_STATUS = 'Divorced' LIMIT 60000;
SELECT COUNT(*) FROM Customers c JOIN Demog d ON c.GEOID = d.GEOID WHERE d.INCOME_K = (SELECT MAX(INCOME_K) FROM Demog) AND c.ID <= 60000 AND EXISTS (   SELECT 1   FROM mailings3 m   WHERE m.REFID = c.ID   AND m.RESPONSE = 'true' )
SELECT INHABITANTS_K FROM Demog WHERE GEOID IN (   SELECT GEOID   FROM Customers   GROUP BY GEOID   ORDER BY COUNT(ID) DESC   LIMIT 1 )
SELECT COUNT(*) FROM Customers WHERE GEOID IN (   SELECT GEOID   FROM Demog   WHERE INHABITANTS_K = 25746 ) AND SEX = 'Male';
SELECT COUNT(*) FROM Customers WHERE ID IN (   SELECT ID   FROM Customers   JOIN mailings3 ON Customers.GEOID = mailings3.GEOID   WHERE RESPONSE = 'true' ) AND age BETWEEN 13 AND 19;
SELECT AVG(EDUCATIONNUM) FROM Customers WHERE GEOID IN (   SELECT GEOID   FROM Demog   ORDER BY INCOME_K DESC   LIMIT 1 )
SELECT AVG(C.age) FROM Customers C JOIN mailings3 M ON C.GEOID = M.GEOID WHERE M.RESPONSE = 'true' ORDER BY C.ID LIMIT 60000;
SELECT COUNT(*)  FROM Customers  WHERE SEX = 'Male';
SELECT GEOID FROM Customers WHERE OCCUPATION = 'Handlers-cleaners';
SELECT COUNT(*) FROM Customers WHERE age < 30;
SELECT GEOID FROM Demog WHERE INCOME_K BETWEEN 2100 AND 2500;
Error: 第 8535 个样本有 0 个SQL。
SELECT INHABITANTS_K, INCOME_K FROM Demog WHERE GEOID = 239;
SELECT    EDUCATIONNUM,    OCCUPATION  FROM    Customers  WHERE    age BETWEEN 20 AND 35    AND INCOME_K < 2000;
SELECT INHABITANTS_K FROM Demog JOIN Customers ON Demog.GEOID = Customers.GEOID WHERE Customers.MARITAL_STATUS = 'Divorced' AND Customers.age > 50;
SELECT Customers.GEOID, Demog.INCOME_K FROM Customers JOIN Demog ON Customers.GEOID = Demog.GEOID WHERE Customers.age = (SELECT MAX(age) FROM Customers);
SELECT d.INCOME_K FROM Customers c JOIN Demog d ON c.GEOID = d.GEOID WHERE c.SEX = 'Male' AND c.EDUCATIONNUM < 4;
SELECT Customers.OCCUPATION, Demog.INCOME_K FROM Customers JOIN Demog ON Customers.GEOID = Demog.GEOID WHERE Customers.SEX = 'Male' AND Customers.EDUCATIONNUM BETWEEN 4 AND 6;
SELECT COUNT(*)  FROM Customers  WHERE SEX = 'Male' AND age BETWEEN 40 AND 60 AND MARITAL_STATUS = 'Widowed'  AND EXISTS (   SELECT 1    FROM Demog    WHERE Customers.GEOID = Demog.GEOID    AND INCOME_K >= 3000 );
SELECT C.OCCUPATION  FROM Customers C  JOIN Demog D ON C.GEOID = D.GEOID  WHERE D.INHABITANTS_K BETWEEN 30 AND 40;
SELECT d.INCOME_K FROM Demog d JOIN Customers c ON d.GEOID = c.GEOID WHERE c.SEX = 'Female' AND c.MARITAL_STATUS = 'Widowed' AND c.EDUCATIONNUM <= 5;
SELECT MARITAL_STATUS FROM Customers WHERE age BETWEEN 40 AND 60 AND GEOID IN (SELECT GEOID FROM Demog ORDER BY INCOME_K DESC LIMIT 1)
SELECT COUNT(DISTINCT c.GEOID) FROM Customers c WHERE c.SEX = 'Male' AND c.age BETWEEN 20 AND 30 AND c.OCCUPATION IN ('Farming', 'Fishing');
Error: 第 8547 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Customers  WHERE SEX = 'Female' AND age BETWEEN 50 AND 60  AND Customers.GEOID IN (SELECT GEOID FROM Demog WHERE INHABITANTS_K BETWEEN 19 AND 24);
SELECT d.INCOME_K, d.INHABITANTS_K FROM Demog d JOIN Customers c ON d.GEOID = c.GEOID WHERE c.age > (SELECT AVG(age) * 0.8 FROM Customers);
SELECT      DIVIDE(COUNT(Demog.INCOME_K), COUNT(Demog.INCOME_K))      * 100 AS percentage FROM      Demog INNER JOIN      Customers  ON      Demog.GEOID = Customers.GEOID WHERE      Customers.MARITAL_STATUS = 'Never-married'      AND Demog.INCOME_K >= 2500;
SELECT c.ID, c.GEOID FROM Customers c WHERE c.age > 65 AND c.EDUCATIONNUM < 3;
SELECT GEOID FROM Demog WHERE INCOME_K > (SELECT SUM(INCOME_K) / COUNT(GEOID) FROM Demog);
SELECT COUNT(*) FROM Customers WHERE GEOID IN (   SELECT GEOID   FROM mailings3   WHERE REF_DATE BETWEEN '2007-02-01 12:00:00.0' AND '2007-02-28 12:00:00.0'   AND RESPONSE = 'false' )
SELECT COUNT(*) FROM Customers WHERE EDUCATIONNUM = 'TEENAGER' AND OCCUPATION = 'Machine-op-inspct';
SELECT COUNT(*) FROM Customers WHERE OCCUPATION = 'Other-service' AND GEOID IN (SELECT GEOID FROM Demog WHERE INHABITANTS_K > 20);
SELECT COUNT(*) FROM Customers WHERE SEX = 'Male' AND age BETWEEN 20 AND 29 AND GEOID IN (   SELECT GEOID   FROM Demog   WHERE INCOME_K > 3000 )
SELECT      DIVIDE(         COUNT(Customers.ID)          WHERE Customers.age > 65 AND Customers.MARITAL_STATUS = 'never married' AND Customers.GEOID = 24,         COUNT(Customers.ID)          WHERE Customers.GEOID = 24     ) AS percentage
SELECT      DIVIDE(COUNT(Customers.age BETWEEN 80 AND 89), COUNT(INCOME_K > 3000)) as percentage FROM      Demog     JOIN Customers ON Demog.GEOID = Customers.GEOID WHERE      Demog.INCOME_K > 3000;
SELECT COUNT(DISTINCT C.ID) FROM Customers C JOIN mailings3 M ON C.GEOID = M.REFID WHERE M.RESPONSE = 'TRUE';
SELECT C.GEOID, M.REFID FROM Customers C JOIN mailings3 M ON C.GEOID = M.GEOID WHERE M.RESPONSE = 'true';
SELECT COUNT(*) FROM Customers WHERE MARITAL_STATUS = 'Widowed' AND age < 50;
Error: 第 8562 个样本有 0 个SQL。
Error: 第 8563 个样本有 0 个SQL。
SELECT MARITAL_STATUS FROM Customers WHERE age = 62 AND EDUCATIONNUM = 7;
SELECT INHABITANTS_K  FROM Demog  JOIN Customers ON Demog.GEOID = Customers.GEOID  JOIN mailings3 ON Customers.GEOID = mailings3.GEOID  WHERE Customers.MARITAL_STATUS = 'Widowed' AND mailings3.RESPONSE = 'false';
SELECT m3.RESPONSE, d.INHABITANTS_K FROM Customers c JOIN Demog d ON c.GEOID = d.GEOID WHERE c.SEX = 'Female' AND c.age = (SELECT MAX(age) FROM Customers WHERE SEX = 'Female');
SELECT d.INCOME_K FROM Demog d JOIN Customers c ON d.GEOID = c.GEOID WHERE c.SEX = 'Female' AND c.EDUCATIONNUM <= 3;
SELECT c.EDUCATIONNUM, d.INCOME_K FROM Customers c JOIN Demog d ON c.GEOID = d.GEOID WHERE c.age BETWEEN 30 AND 55 AND c.SEX = 'true'
SELECT COUNT(*)  FROM Customers  WHERE SEX = 'Male' AND age BETWEEN 30 AND 50 AND INHABITANTS_K BETWEEN 2000 AND 3000;
SELECT C.EDUCATIONNUM, M3.RESPONSE FROM Customers C JOIN Demog D ON C.GEOID = D.GEOID JOIN mailings3 M3 ON C.ID = M3.REFID WHERE C.age BETWEEN 20 AND 30 AND D.INHABITANTS_K = (SELECT MAX(INHABITANTS_K) FROM Demog)
SELECT d.INCOME_K FROM Demog d JOIN Customers c ON d.GEOID = c.GEOID WHERE c.SEX = 'Female' AND c.age BETWEEN 30 AND 55 AND c.EDUCATIONNUM = 'machine-op-inspct';
SELECT c.MARITAL_STATUS, m3.RESPONSE FROM Customers c JOIN Demog d ON c.GEOID = d.GEOID JOIN mailings3 m3 ON c.ID = m3.REFID WHERE c.SEX = 'Female' AND c.EDUCATIONNUM >= 8;
SELECT Customers.age FROM Customers WHERE Customers.SEX = 'Female' AND EXISTS (   SELECT 1   FROM Demog   WHERE Demog.GEOID = Customers.GEOID AND Demog.INHABITANTS_K < 30 )
SELECT d.INCOME_K, m3.RESPONSE FROM Demog d JOIN Customers c ON d.GEOID = c.GEOID WHERE c.SEX = 'Male' AND c.MARITAL_STATUS = 'Divorced' AND c.EDUCATIONNUM >= 6 JOIN mailings3 m3 ON d.GEOID = m3.GEOID;
SELECT C.OCCUPATION, M3.RESPONSE FROM Customers C JOIN Demog D ON C.GEOID = D.GEOID JOIN mailings3 M3 ON C.ID = M3.REFID WHERE C.SEX = 'Female' AND D.INHABITANTS_K BETWEEN 20 AND 25;
SELECT      DIVIDE(         COUNT(Customers.OCCUPATION = 'Handlers-cleaners' AND Customers.SEX = 'Male' AND RESPONSE = 'true'),          COUNT(Customers.OCCUPATION = 'Handlers-cleaners' AND Customers.SEX = 'Male')     ) AS percentage FROM      Customers WHERE      Customers.SEX = 'Male' AND Customers.OCCUPATION IN ('Handlers', 'cleaners');
SELECT D.INCOME_K, D.INHABITANTS_K FROM Demog D JOIN Customers C ON D.GEOID = C.GEOID WHERE C.REFID > (SELECT DIVIDE(MULTIPLY(0.5, COUNT(MR.RESPONSE = 'false')), COUNT(MR.RESPONSE)) FROM mailings3 MR)
SELECT DIVIDE(COUNT(CASE WHEN SEX = 'Male' AND age BETWEEN 13 AND 19 AND EDUCATIONNUM > 10 THEN 1 ELSE NULL END),              COUNT(CASE WHEN SEX = 'Female' AND age BETWEEN 13 AND 19 AND EDUCATIONNUM > 10 THEN 1 ELSE NULL END)) AS ratio FROM Customers;
SELECT GEOID, 12 * INHABITANTS_K * INCOME_K AS Total_Income_Per_Year FROM Demog WHERE INCOME_K > 3300;
SELECT      CASE          WHEN COUNT(m.REFID) WHERE m.RESPONSE = 'true' > COUNT(m.REFID) WHERE m.RESPONSE = 'false'          THEN 'Responding'         ELSE 'Not Responding'     END AS "Greater Response" FROM      mailings3 m;
SELECT GEOID, MULTIPLY(INHABITANTS_K, INCOME_K, 12) AS yearly_income FROM Demog JOIN Customers ON Demog.GEOID = Customers.GEOID WHERE Customers.SEX = 'Female' AND Customers.OCCUPATION = 'Sales';
SELECT c.EDUCATIONNUM, c.OCCUPATION, c.age FROM Customers c WHERE c.GEOID IN (SELECT d.GEOID FROM Demog d WHERE d.INHABITANTS_K = 33658) AND c.SEX = 'Female' AND c.MARITAL_STATUS = 'Widowed';
Error: 第 8583 个样本有 0 个SQL。
SELECT    AVG(D.INCOME_K) AS avg_income_per_month,   (D.INHABITANTS_K * D.INCOME_K * 12) AS yearly_income FROM    Demog D WHERE    D.GEOID IN (     SELECT        C.GEOID     FROM        Customers C     WHERE        C.ID IN ('209556', '290135')   )
SELECT EDUCATIONNUM FROM Customers WHERE GEOID IN (SELECT GEOID FROM Demog WHERE REFID < 10 AND RESPONSE = 'true');
SELECT COUNT(DISTINCT community_area_no)  FROM Community_Area  WHERE side = 'Central';
SELECT d.district_name FROM District d JOIN Community_Area ca ON d.side = ca.side WHERE ca.community_area_name = 'Lincoln Square';
Error: 第 8588 个样本有 0 个SQL。
SELECT community_area_name FROM Community_Area ORDER BY population LIMIT 1;
Error: 第 8590 个样本有 0 个SQL。
SELECT email FROM District WHERE district_name = 'Central';
SELECT community_area_name FROM Neighborhood WHERE neighborhood_name = 'Albany Park';
Error: 第 8593 个样本有 0 个SQL。
SELECT n.neighborhood_name FROM Neighborhood n JOIN Community_Area ca ON n.community_area_no = ca.community_area_no WHERE ca.population = (SELECT MAX(population) FROM Community_Area);
Error: 第 8595 个样本有 0 个SQL。
Error: 第 8596 个样本有 0 个SQL。
Error: 第 8597 个样本有 0 个SQL。
Error: 第 8598 个样本有 0 个SQL。
SELECT c.case_number FROM Crime c WHERE c.arrest = 'FALSE' AND c.district_no IN (   SELECT d.district_no   FROM District d   WHERE d.district_name = 'Central' );
SELECT COUNT(*)  FROM Crime  WHERE community_area_no IN (   SELECT community_area_no    FROM Community_Area    ORDER BY population DESC    LIMIT 1 );
Error: 第 8601 个样本有 0 个SQL。
SELECT community_area_name, COUNT(report_no) as num_crimes FROM Crime WHERE date LIKE '%1/2018%' AND community_area_name IN ('Woodlawn', 'Lincoln Square') GROUP BY community_area_name ORDER BY num_crimes DESC;
Error: 第 8603 个样本有 0 个SQL。
SELECT AVG(count(report_no) / count(community_area_no))  FROM Crime  JOIN Neighborhood ON Crime.community_area_no = Neighborhood.community_area_no  WHERE Crime.community_area_no IN (   SELECT community_area_no    FROM Community_Area    WHERE side = 'Central' )
SELECT (COUNT(CASE_NUMBER)          FROM Crime          WHERE district_no IN (SELECT district_no FROM District WHERE district_name = 'Central')        ) * 100.0 /         (SELECT COUNT(CASE_NUMBER) FROM Crime) AS Percentage
Error: 第 8606 个样本有 0 个SQL。
Error: 第 8607 个样本有 0 个SQL。
Error: 第 8608 个样本有 0 个SQL。
SELECT d.district_name FROM Crime c JOIN District d ON c.district_no = d.district_no WHERE c.latitude = '41.66236555' AND c.longitude = '-87.63470194';
SELECT d.commander FROM District d WHERE d.case_number = 'JB524952';
SELECT COUNT(*)  FROM Crime  WHERE iucr_no IN (SELECT iucr_no FROM IUCR WHERE primary_description = 'ASSAULT' AND secondary_description = 'SIMPLE')  AND date LIKE '%9/8/2018%';
SELECT district_no FROM Crime WHERE iucr_no IN (   SELECT iucr_no   FROM IUCR   WHERE primary_description = 'MURDER' AND secondary_description = 'FIRST DEGREE MURDER' ) GROUP BY district_no ORDER BY COUNT(case_number) DESC LIMIT 1;
SELECT iucr_no FROM Crime WHERE case_number = 'JB296775';
SELECT community_area_name FROM Community_Area JOIN Crime ON Community_Area.community_area_no = Crime.community_area_no JOIN IUCR ON Crime.iucr_no = IUCR.iucr_no WHERE primary_description = 'THEFT' AND secondary_description = 'POCKET-PICKING' GROUP BY community_area_name ORDER BY COUNT(CASE_NUMBER) DESC LIMIT 1;
SELECT alderman_first_name, alderman_last_name, alderman_name_suffix FROM Ward WHERE ward_no = (   SELECT ward_no   FROM Crime   WHERE case_number = 'JB103470' )
SELECT neighborhood_name FROM Neighborhood WHERE community_area_no IN (   SELECT community_area_no   FROM Community_Area   WHERE community_area_name = 'West Englewood' )
Error: 第 8617 个样本有 0 个SQL。
Error: 第 8618 个样本有 0 个SQL。
SELECT COUNT(case_number)  FROM Crime  WHERE arrest = 'TRUE'  AND community_area_no IN (SELECT community_area_no FROM Neighborhood WHERE neighborhood_name = 'North Lawndale');
SELECT      (COUNT(CASE WHEN secondary_description = '$500 AND UNDER' THEN 1 END) /       COUNT(CASE WHEN primary_description = 'THEFT' THEN 1 END)) * 100 FROM      Crime WHERE      primary_description = 'THEFT' AND      community_area_name = 'West Englewood';
Error: 第 8621 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Crime  WHERE date LIKE '5/%/2018%' AND location_description LIKE '%018XX S KOMENSKY AVE%';
SELECT community_area_name FROM Community_Area ORDER BY population DESC LIMIT 1;
SELECT COUNT(*)  FROM Crime  WHERE domestic = 'TRUE' AND location_description = 'ABANDONED BUILDING' AND date LIKE '%2018%';
SELECT d.district_name, SUM(c.population) AS population FROM Ward w JOIN Community_Area c ON w.community_area_no = c.community_area_no JOIN District d ON w.ward_no = d.district_no GROUP BY d.district_name ORDER BY population ASC LIMIT 1;
SELECT COUNT(*)  FROM Crime  WHERE arrest = 'TRUE' AND date LIKE '%2018%' AND location_description = 'ANIMAL HOSPITAL' AND fbi_code_no = '08B';
SELECT    c.report_no, c.case_number, c.date, c.block, c.location_description, c.arrest, c.domestic, c.beat, d.district_name, w.ward_no, ca.community_area_name, f.title FROM    Crime c   JOIN FBI_Code f ON c.fbi_code_no = f.fbi_code_no   JOIN District d ON c.district_no = d.district_no   JOIN Ward w ON c.ward_no = w.ward_no   JOIN Community_Area ca ON c.community_area_no = ca.community_area_no WHERE    f.crime_against = 'Society';
SELECT d.commander FROM District d JOIN (SELECT district_no, COUNT(*) as count       FROM Crime       WHERE fbi_code_no IN (SELECT fbi_code_no                              FROM FBI_Code                              WHERE title = 'Disorderly Conduct')       GROUP BY district_no       ORDER BY count DESC       LIMIT 1) c ON d.district_no = c.district_no
SELECT title FROM FBI_Code WHERE fbi_code_no = (SELECT MAX(fbi_code_no) FROM Crime);
SELECT COUNT(*)  FROM Crime  WHERE district_no IN (SELECT district_no FROM District WHERE district_name = 'Albany Park')  AND location_description = 'APARTMENT'  AND fbi_code_no IN (SELECT fbi_code_no FROM FBI_Code WHERE title = 'Criminal Sexual Abuse');
Error: 第 8631 个样本有 0 个SQL。
SELECT COUNT(*) FROM Crime WHERE secondary_description = 'SOLICIT ON PUBLIC WAY' AND primary_description = 'PROSTITUTION' AND arrest = 'TRUE' AND community_area_name = 'West Garfield Park';
SELECT COUNT(*) FROM Crime WHERE domestic = 'TRUE' AND location_description = 'BAR OR TAVERN' AND ward_no = (SELECT ward_no FROM Ward ORDER BY population DESC LIMIT 1);
Error: 第 8634 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Crime  WHERE domestic = 'TRUE' AND arrest = 'TRUE' AND ward_no IN (SELECT ward_no FROM Ward WHERE alderman_last_name = 'Burnett' AND alderman_name_suffix = 'Jr.');
SELECT IUCR.primary_description FROM Crime JOIN FBI_Code ON Crime.fbi_code_no = FBI_Code.fbi_code_no JOIN Community_Area ON Crime.community_area_no = Community_Area.community_area_no WHERE FBI_Code.fbi_code_no = (   SELECT MAX(FBI_Code.fbi_code_no)   FROM Crime   JOIN FBI_Code ON Crime.fbi_code_no = FBI_Code.fbi_code_no   JOIN Community_Area ON Crime.community_area_no = Community_Area.community_area_no   GROUP BY Community_Area.community_area_no   ORDER BY Community_Area.population ASC   LIMIT 1 )
SELECT d.address FROM Crime c JOIN Ward w ON c.ward_no = w.ward_no JOIN District d ON w.ward_office_address = d.address WHERE c.block = '010XX W LAKE ST';
SELECT community_area_name FROM Crime JOIN IUCR ON Crime.iucr_no = IUCR.iucr_no WHERE primary_description = 'PROSTITUTION' GROUP BY community_area_name ORDER BY MAX(case_number) DESC LIMIT 1;
SELECT COUNT(*)  FROM Crime  WHERE iucr_no IN (SELECT iucr_no FROM IUCR WHERE primary_description = 'Vandalism')  AND arrest = 'TRUE'  AND ward_no IN (SELECT ward_no FROM Ward WHERE alderman_name_suffix = 'Burke');
SELECT COUNT(*) FROM Crime WHERE domestic = 'TRUE' AND date LIKE '5/%/2018%';
SELECT iucr_no, primary_description FROM IUCR WHERE primary_description = 'HOMICIDE'
Error: 第 8642 个样本有 0 个SQL。
SELECT alderman_first_name, alderman_last_name, alderman_name_suffix FROM Ward WHERE population = (SELECT MAX(population) FROM Ward);
SELECT community_area_name FROM Community_Area WHERE side = 'Northwest';
Error: 第 8645 个样本有 0 个SQL。
SELECT IUCR.secondary_description AS specific_description, Crime.latitude AS location, Crime.longitude AS location FROM IUCR JOIN Crime ON IUCR.iucr_no = Crime.iucr_no WHERE IUCR.iucr_no = 142;
SELECT COUNT(*)  FROM Crime  WHERE date LIKE '10/7/2018%'  AND ward_no IN (SELECT ward_no FROM Ward WHERE alderman_last_name = 'Reilly' AND alderman_first_name = 'Brendan');
SELECT COUNT(*)  FROM Crime  WHERE arrest = 'TRUE'  AND location_description = 'RESTAURANT'  AND district_no IN (SELECT district_no FROM District WHERE district_name = 'Englewood');
SELECT C.case_number, W.alderman_first_name || ' ' || W.alderman_last_name || ' ' || W.alderman_name_suffix AS alderman_full_name, D.district_name FROM Crime C JOIN Ward W ON C.ward_no = W.ward_no JOIN District D ON C.district_no = D.district_no WHERE C.block = '0000X N FRANCISCO AVE';
SELECT COUNT(*)  FROM Crime c  JOIN FBI_Code f ON c.fbi_code_no = f.fbi_code_no  WHERE f.title = 'Misc Non-Index Offense';
SELECT neighborhood_name FROM Neighborhood WHERE community_area_no IN (   SELECT community_area_no   FROM Community_Area   WHERE community_area_name = 'Douglas' );
SELECT AVG(COUNT(report_no)) / 12 AS average_crime_rate_per_month FROM Crime WHERE community_area_no IN (   SELECT community_area_no   FROM Community_Area   ORDER BY population DESC   LIMIT 1 )
SELECT (COUNT(c.report_no) WHERE c.fbi_code_no IN (SELECT f.fbi_code_no WHERE f.title = 'Larceny')) * 100 /         COUNT(c.report_no)  FROM Crime c, FBI_Code f, Community_Area ca  WHERE c.side = 'Central' AND c.community_area_no = ca.community_area_no AND f.fbi_code_no = c.fbi_code_no;
SELECT c.location_description, CONCAT(w.alderman_first_name, ' ', w.alderman_name_suffix, ' ', w.alderman_last_name) AS alderman_name FROM Crime c JOIN Ward w ON c.ward_no = w.ward_no JOIN IUCR i ON c.iucr_no = i.iucr_no WHERE i.primary_description = 'ARSON' AND i.secondary_description = 'BY EXPLOSIVE';
SELECT c.date, c.location_description FROM Crime c JOIN IUCR i ON c.iucr_no = i.iucr_no WHERE i.primary_description = 'DECEPTIVE PRACTICE' AND i.secondary_description = 'UNLAWFUL USE OF RECORDED SOUND';
Error: 第 8656 个样本有 0 个SQL。
SELECT (COUNT(CASE WHEN arrest = 'TRUE' AND domestic = 'TRUE' THEN 1 END) / COUNT(CASE WHEN domestic = 'TRUE' THEN 1 END)) * 100 FROM Crime WHERE community_area_name = 'West Pullman' AND domestic = 'TRUE';
SELECT      (COUNT(CASE WHEN domestic = 'TRUE' THEN report_no END) / COUNT(report_no)) * 100 AS percentage,     report_no FROM      Crime WHERE      domestic = 'TRUE' AND location_description = 'BANK' AND alderman_last_name = 'Taliaferro' GROUP BY      report_no
SELECT COUNT(*)  FROM Ward  WHERE alderman_first_name = 'James';
SELECT COUNT(*)  FROM Crime  WHERE date LIKE '1/1/2018%';
SELECT AVG(population)  FROM Community_Area  WHERE side = 'West';
SELECT c.report_no FROM Crime c JOIN Ward w ON c.ward_no = w.ward_no JOIN Neighborhood n ON c.community_area_no = n.community_area_no JOIN Community_Area ca ON n.community_area_no = ca.community_area_no WHERE w.alderman_last_name = 'Burke' AND ca.population = (SELECT MAX(population) FROM Community_Area) ORDER BY c.beat DESC LIMIT 1;
SELECT COUNT(*) FROM Crime WHERE location_description = 'STREET' AND fbi_code_no IN (   SELECT fbi_code_no   FROM FBI_Code   WHERE title = 'Homicide 1st & 2nd Degree' );
SELECT alderman_first_name, alderman_last_name, alderman_name_suffix FROM Ward WHERE ward_no = (SELECT ward_no FROM Crime WHERE report_no = 23769);
SELECT c.case_number FROM Crime c WHERE c.domestic = 'TRUE' AND c.community_area_no IN (   SELECT na.community_area_no   FROM Neighborhood na   WHERE na.neighborhood_name = 'Lincoln Square' )
Error: 第 8666 个样本有 0 个SQL。
SELECT COUNT(beat)  FROM Crime  WHERE community_area_no IN (SELECT community_area_no FROM Community_Area WHERE community_area_name = 'Bridgeport')  AND beat < 1000;
Error: 第 8668 个样本有 0 个SQL。
Error: 第 8669 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Crime  WHERE domestic = 'TRUE'  AND ward_no IN (SELECT ward_no FROM Ward WHERE ward_email = 'ward13@cityofchicago.org');
SELECT d.address FROM Crime c JOIN District d ON c.district_no = d.district_no WHERE c.case_number = 'JB107731';
SELECT SUM(beat)  FROM Crime  WHERE community_area_no IN (   SELECT community_area_no    FROM Community_Area    WHERE side = 'Central' AND population > '50000' )
SELECT c.case_number FROM Crime c JOIN FBI_Code f ON c.fbi_code_no = f.fbi_code_no WHERE f.crime_against = 'Society' AND c.date LIKE '6/%/2018%';
SELECT      ROUND(COUNT(CASE WHEN domestic = 'TRUE' THEN 1 END) / COUNT(*) * 100, 2) AS percentage FROM      Crime WHERE      community_area_no IN (         SELECT              community_area_no         FROM              Community_Area         ORDER BY              population DESC         LIMIT 1     );
SELECT c.case_number FROM Crime c JOIN Ward w ON c.ward_no = w.ward_no WHERE w.population < 52000 AND c.beat > (SELECT AVG(beat) * 0.9 FROM Crime);
SELECT community_area_name FROM Community_Area WHERE side = 'Far North' AND population BETWEEN '50000' AND '70000';
SELECT latitude, longitude FROM Crime WHERE location_description = 'ALLEY' AND arrest = 'TRUE';
SELECT d.commander, d.email, d.phone FROM District d WHERE d.district_name = 'Ogden';
SELECT fbi_code_no, description FROM FBI_Code WHERE title = 'Gambling';
SELECT (COUNT(iucr_no WHERE index_code = 'I') / COUNT(iucr_no)) * 100 AS percentage
SELECT location_description, COUNT(case_number) AS max_crimes FROM Crime WHERE district_name = 'Austin' GROUP BY location_description ORDER BY max_crimes DESC LIMIT 1;
Error: 第 8682 个样本有 0 个SQL。
SELECT community_area_no, COUNT(location_description) AS count_crimes FROM Crime WHERE location_description = 'STREET' GROUP BY community_area_no ORDER BY count_crimes DESC LIMIT 1;
Error: 第 8684 个样本有 0 个SQL。
SELECT ward_office_address, ward_office_phone FROM Ward WHERE ward_no = (     SELECT ward_no     FROM Crime     WHERE arrest = 'FALSE'     GROUP BY ward_no     ORDER BY COUNT(arrest = 'FALSE') DESC     LIMIT 1 );
SELECT c.case_number, c.latitude, c.longitude FROM Crime c JOIN IUCR i ON c.iucr_no = i.iucr_no WHERE i.secondary_description = 'CHILD ABDUCTION';
SELECT iucr_no, COUNT(secondary_description) AS count FROM Crime JOIN IUCR ON Crime.iucr_no = IUCR.iucr_no WHERE side = 'Northwest' GROUP BY iucr_no ORDER BY count DESC LIMIT 1;
SELECT community_area_no FROM Crime WHERE domestic = 'TRUE' GROUP BY community_area_no ORDER BY COUNT(*) ASC LIMIT 1;
SELECT      (COUNT(CASE WHEN secondary_description LIKE '%CANNABIS%' THEN 1 END) /       COUNT(secondary_description)) * 100 AS percentage FROM      Crime JOIN      IUCR ON Crime.iucr_no = IUCR.iucr_no WHERE      IUCR.title = 'Drug Abuse';
SELECT AVG(COUNT(case_number)) / 28 FROM Crime WHERE date LIKE '2/%/2018' AND iucr_no IN (SELECT iucr_no FROM IUCR WHERE index_code = 'N');
SELECT ca.community_area_name, ca.population FROM Community_Area ca WHERE ca.community_area_no IN (   SELECT ca2.community_area_no   FROM Community_Area ca2   GROUP BY ca2.community_area_no   HAVING COUNT(iucr.iucr_no) > (     SELECT COUNT(iucr2.secondary_description)     FROM IUCR iuc2     WHERE iuc2.secondary_description = 'SOLICIT FOR PROSTITUTE'   ) / (     SELECT COUNT(iucr3.iucr_no)     FROM IUCR iuc3   ) )
SELECT (COUNT(fbi_code_no) WHERE title = 'Disorderly Conduct') / COUNT(report_no) * 100 FROM Crime JOIN District ON Crime.district_no = District.district_no WHERE District.district_name = 'Harrison';
SELECT      (SUM(CASE WHEN secondary_description = 'VEHICULAR HIJACKING' THEN 1 ELSE 0 END) / COUNT(district_name)) -      (SUM(CASE WHEN secondary_description = 'AGGRAVATED VEHICULAR HIJACKING' THEN 1 ELSE 0 END) / COUNT(district_name)) AS difference FROM      Crime, District WHERE      Crime.district_no = District.district_no;
Error: 第 8694 个样本有 0 个SQL。
SELECT * FROM Crime WHERE iucr_no IN (   SELECT iucr_no   FROM IUCR   WHERE primary_description = 'NARCOTICS' ) AND secondary_description = 'crime';
SELECT alderman_first_name FROM Ward WHERE Population > 50000;
SELECT c.report_no FROM Crime c JOIN FBI_Code f ON c.fbi_code_no = f.fbi_code_no WHERE f.title = 'Drug Abuse';
SELECT COUNT(*) FROM Crime WHERE iucr_no IN (   SELECT iucr_no   FROM IUCR   WHERE primary_description = 'WEAPON VIOLATION' ) AND district_no IN (   SELECT district_no   FROM District   WHERE district_name = 'Calumet' );
SELECT latitude, longitude FROM Crime WHERE community_area_no IN (   SELECT community_area_no   FROM Community_Area   WHERE community_area_name = 'Belmont Cragin' )
SELECT COUNT(DISTINCT iucr_no)  FROM Crime c  JOIN Neighborhood n ON c.community_area_no = n.community_area_no  WHERE n.neighborhood_name = 'Hermosa';
SELECT COUNT(*)  FROM Crime  WHERE domestic = 'TRUE'  AND district_no IN (   SELECT district_no    FROM District    WHERE commander = 'Ronald A. Pontecore Jr.' );
Error: 第 8702 个样本有 0 个SQL。
Error: 第 8703 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Crime  WHERE fbi_code_no IN (SELECT fbi_code_no FROM FBI_Code WHERE description = 'The theft of a motor vehicle')  AND community_area_no IN (SELECT community_area_no FROM Community_Area WHERE community_area_name = 'Lake View');
SELECT d.district_name FROM district d JOIN (   SELECT FBI_Code_no, COUNT(*) as count   FROM Crime c   JOIN IUCR i ON c.iucr_no = i.iucr_no   WHERE primary_description = 'INTIMIDATION'   GROUP BY FBI_Code_no   ORDER BY count DESC ) c ON d.district_no = c.FBI_Code_no LIMIT 1;
SELECT iucr.primary_description FROM Crime JOIN IUCR ON Crime.iucr_no = IUCR.iucr_no WHERE Crime.community_area_no = (SELECT community_area_no FROM Community_Area WHERE community_area_name = 'North Lawndale') AND Crime.domestic = 'TRUE' GROUP BY iucr.primary_description ORDER BY COUNT(Crime.domestic) DESC LIMIT 1;
SELECT W.ward_no FROM Ward W JOIN Crime C ON W.ward_no = C.ward_no JOIN IUCR I ON C.iucr_no = I.iucr_no WHERE I.primary_description = 'INTIMIDATION' AND I.secondary_description = 'EXTORTION' GROUP BY W.ward_no HAVING COUNT(C.report_no) > (SELECT COUNT(*) FROM Ward WHERE Population > 55000);
Error: 第 8708 个样本有 0 个SQL。
SELECT      (COUNT(CASE WHEN domestic = 'FALSE' THEN 1 END) / COUNT(CASE WHEN domestic = 'TRUE' THEN 1 END)) * 100 AS percentage FROM      Crime WHERE      district_no IN (SELECT district_no FROM District WHERE district_name = 'Jefferson Park') AND domestic = 'FALSE';
SELECT AVG(Population)  FROM Ward  WHERE ward_no IN (SELECT ward_no                    FROM Crime                    WHERE location_description = 'APARTMENT' AND arrest = 'FALSE');
SELECT a.alderman_first_name, a.alderman_last_name, a.alderman_name_suffix, w.population FROM Ward w JOIN (SELECT ward_no, MAX(population) as max_population FROM Ward GROUP BY ward_no) m ON w.ward_no = m.ward_no JOIN (SELECT ward_no, alderman_first_name, alderman_last_name, alderman_name_suffix       FROM Ward) a ON w.ward_no = a.ward_no ORDER BY w.population DESC LIMIT 5;
Error: 第 8712 个样本有 0 个SQL。
Error: 第 8713 个样本有 0 个SQL。
SELECT * FROM FBI_Code WHERE title = 'Criminal Sexual Abuse';
Error: 第 8715 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Crime  WHERE latitude = 41.64820151 AND longitude = -87.54430496 AND iucr_no IN (SELECT iucr_no FROM IUCR WHERE index_code = 'I');
SELECT d.commander FROM Crime c JOIN District d ON c.district_no = d.district_no WHERE c.arrest = 'FALSE' GROUP BY d.district_no, d.commander ORDER BY COUNT(c.report_no) DESC LIMIT 1;
SELECT      primary_description AS general_description,     secondary_description AS specific_description,     COUNT(iucr_no) AS most_common_crime_incidents FROM      Crime WHERE      location_description = 'AIRCRAFT' GROUP BY      primary_description, secondary_description ORDER BY      COUNT(iucr_no) DESC LIMIT 1;
SELECT d.district_name, COUNT(c.district_no) AS total_crimes FROM Crime c JOIN District d ON c.district_no = d.district_no WHERE c.location_description = 'LIBRARY' AND d.district_name BETWEEN 'Deering' AND 'Near West' GROUP BY d.district_name ORDER BY total_crimes DESC LIMIT 1;
SELECT COUNT(*) FROM Crime WHERE iucr_no IN (SELECT iucr_no FROM IUCR WHERE primary_description = 'BURGLARY' AND secondary_description = 'FORCIBLE ENTRY') AND location_description = 'DAY CARE CENTER' AND arrest = 'TRUE';
SELECT d.district_name FROM Crime c JOIN District d ON c.district_no = d.district_no WHERE c.domestic = 'TRUE' GROUP BY d.district_name ORDER BY COUNT(c.district_no) DESC LIMIT 1;
SELECT    location_description  FROM    Crime  WHERE    community_area_no = (SELECT community_area_no FROM Community_Area ORDER BY population LIMIT 1)  GROUP BY    location_description  ORDER BY    COUNT(location_description) DESC  LIMIT 1;
Error: 第 8723 个样本有 0 个SQL。
SELECT latitude, longitude FROM Crime WHERE iucr_no IN (   SELECT iucr_no   FROM IUCR   WHERE primary_description = 'Simple Assault' ) AND community_area_name = 'Chatham' GROUP BY latitude, longitude ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 8725 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Crime  JOIN FBI_Code ON Crime.fbi_code_no = FBI_Code.fbi_code_no  JOIN Community_Area ON Crime.community_area_no = Community_Area.community_area_no  WHERE Community_Area.community_area_name = 'Englewood' AND FBI_Code.crime_against = 'Society';
SELECT      AVG(weekly_fraud) AS weekly_average_fraud,     location_description AS description_of_location FROM (     SELECT          location_description,         COUNT(report_no) AS weekly_fraud     FROM          Crime     WHERE          Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018' AND fbi_code_no IN (SELECT fbi_code_no FROM FBI_Code WHERE title = 'Fraud')     GROUP BY          location_description ) AS fraud_incidents ORDER BY      weekly_fraud DESC LIMIT 1;
SELECT community_area_name FROM Community_Area WHERE population > 50000 LIMIT 3;
SELECT community_area_name FROM Community_Area WHERE side = 'Central';
SELECT      Subtract(         Count(community_area_no)          FROM Community_Area          WHERE side = 'South' AND population > 30000     ,          Count(community_area_no)          FROM Community_Area          WHERE side = 'North' AND population > 30000     ) AS difference
SELECT district.phone, district.fax, district.tty, district.twitter FROM District WHERE district_name = 'Near West';
Error: 第 8732 个样本有 0 个SQL。
SELECT primary_description AS general_description, secondary_description AS specific_description FROM IUCR WHERE iucr_no = 275;
SELECT (COUNT(iucr_no WHERE primary_description = 'CRIME SEXUAL ASSAULT') / COUNT(iucr_no)) * 100 AS percentage
Error: 第 8735 个样本有 0 个SQL。
Error: 第 8736 个样本有 0 个SQL。
Error: 第 8737 个样本有 0 个SQL。
SELECT COUNT(Crime.report_no) FROM Crime JOIN FBI_Code ON Crime.fbi_code_no = FBI_Code.fbi_code_no WHERE FBI_Code.title = 'Weapons Violation';
SELECT c.case_number FROM Crime c JOIN FBI_Code f ON c.fbi_code_no = f.fbi_code_no WHERE f.title = 'Criminal Sexual Assault' AND f.crime_against = 'Persons' AND c.arrest = 'TRUE';
Error: 第 8740 个样本有 0 个SQL。
SELECT iucr.primary_description FROM Crime JOIN IUCR ON Crime.iucr_no = IUCR.iucr_no WHERE Crime.case_number = 'JB106010';
SELECT community_area_name FROM Crime JOIN FBI_Code ON Crime.fbi_code_no = FBI_Code.fbi_code_no WHERE title = 'Fraud Incident' GROUP BY community_area_name ORDER BY COUNT(*) DESC LIMIT 3;
Error: 第 8743 个样本有 0 个SQL。
Error: 第 8744 个样本有 0 个SQL。
SELECT (COUNT(fbi_code_no WHERE location_description = 'STREET' AND title = 'Drug Abuse') / COUNT(fbi_code_no)) * 100 AS percentage
SELECT ward_no FROM Ward ORDER BY Population DESC LIMIT 1;
SELECT c.beat, c.location_description FROM Crime c WHERE c.case_number = 'JB112212';
SELECT fbi_code_no FROM FBI_Code WHERE description = 'The killing of one human being by another';
SELECT w.ward_office_address FROM Ward w JOIN Crime c ON w.ward_no = c.ward_no JOIN Community_Area ca ON c.community_area_no = ca.community_area_no WHERE ca.community_area_name = 'Montclare' LIMIT 5;
SELECT d.commander FROM Crime c JOIN District d ON c.district_no = d.district_no WHERE c.location_description = 'YARD' AND c.beat = 532;
SELECT neighborhood_name FROM Neighborhood JOIN Community_Area ON Neighborhood.community_area_no = Community_Area.community_area_no WHERE Community_Area.community_area_name = 'Lake View';
Error: 第 8752 个样本有 0 个SQL。
SELECT description FROM Crime JOIN FBI_Code ON Crime.fbi_code_no = FBI_Code.fbi_code_no WHERE report_no = 23778;
SELECT c.report_no FROM Crime c JOIN District d ON c.district_no = d.district_no WHERE d.commander = 'Jill M. Stevens';
Error: 第 8755 个样本有 0 个SQL。
SELECT alderman_first_name, alderman_last_name, alderman_name_suffix FROM Ward WHERE ward_no = 21;
SELECT ward_no FROM Ward ORDER BY population DESC LIMIT 1;
SELECT COUNT(*)  FROM Crime  WHERE iucr_no IN (SELECT iucr_no FROM IUCR WHERE primary_description = 'ASSAULT');
Error: 第 8759 个样本有 0 个SQL。
Error: 第 8760 个样本有 0 个SQL。
SELECT alderman_first_name, alderman_last_name, alderman_name_suffix FROM Ward WHERE ward_no = (   SELECT ward_no   FROM Crime   WHERE Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'   GROUP BY ward_no   ORDER BY COUNT(*) DESC   LIMIT 1 );
SELECT COUNT(*)  FROM Crime  WHERE ward_no IN (   SELECT ward_no    FROM Ward    ORDER BY Population DESC    LIMIT 1  )  AND domestic = 'TRUE';
Error: 第 8763 个样本有 0 个SQL。
SELECT      a.alderman_name,      COUNT(c.report_no) AS total_incidents FROM      Crime c JOIN      Ward w ON c.ward_no = w.ward_no JOIN      (SELECT ward_no, alderman_name       FROM Ward       WHERE alderman_first_name = 'Pat' AND alderman_last_name = 'Dowell') a ON w.ward_no = a.ward_no WHERE      Substr(c.date, 1, 1) = '1' AND Substr(c.date, 5, 4) = '2018' GROUP BY      a.alderman_name UNION ALL SELECT      a.alderman_name,      COUNT(c.report_no) AS total_incidents FROM      Crime c JOIN      Ward w ON c.ward_no = w.ward_no JOIN      (SELECT ward_no, alderman_name       FROM Ward       WHERE alderman_first_name = 'Sophia' AND alderman_last_name = 'King') a ON w.ward_no = a.ward_no WHERE      Substr(c.date, 1, 1) = '1' AND Substr(c.date, 5, 4) = '2018' GROUP BY      a.alderman_name ORDER BY      total_incidents DESC LIMIT 1;
SELECT c.case_number FROM Crime c JOIN IUCR i ON c.iucr_no = i.iucr_no WHERE i.primary_description = 'BATTERY';
SELECT COUNT(*) FROM Crime WHERE iucr_no IN (   SELECT iucr_no   FROM IUCR   WHERE primary_description = 'BATTERY' ) AND arrest = 'FALSE';
Error: 第 8767 个样本有 0 个SQL。
Error: 第 8768 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Crime  WHERE Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'  AND district_no IN (   SELECT district_no    FROM District    WHERE commander = 'Robert A. Rubio' );
Error: 第 8770 个样本有 0 个SQL。
Error: 第 8771 个样本有 0 个SQL。
SELECT AVG(COUNT(ward_no)) / 12 AS avg_incidents_per_month FROM Crime WHERE date LIKE '%2018%' AND ward_no IN (   SELECT ward_no   FROM Ward   ORDER BY population DESC   LIMIT 1 );
SELECT (COUNT(CASE WHEN primary_description = 'BATTERY' THEN iucr_no END) / COUNT(iucr_no)) * 100 FROM Crime WHERE arrest = 'FALSE';
SELECT COUNT(*) FROM businesses WHERE owner_state = 'CA';
SELECT COUNT(*)  FROM businesses  WHERE business_id IN (SELECT business_id FROM inspections WHERE score = 100);
SELECT COUNT(*)  FROM inspections  WHERE YEAR(date) = 2016 AND type = 'Routine - Unscheduled';
Error: 第 8777 个样本有 0 个SQL。
SELECT COUNT(*) FROM inspections WHERE YEAR(date) = 2016 AND city IN ('San Francisco', 'SF', 'S.F.', 'SAN FRANCISCO')
SELECT type FROM inspections WHERE business_id IN (   SELECT business_id   FROM businesses   WHERE name = 'Tiramisu Kitchen' ) AND date = '2014-01-14';
SELECT COUNT(*) FROM violations WHERE business_id IN (   SELECT business_id   FROM inspections   WHERE date = '2014-01-14'   AND business_id IN (     SELECT business_id     FROM businesses     WHERE name = 'Tiramisu Kitchen'   )   AND risk_category = 'Low Risk';
Error: 第 8781 个样本有 0 个SQL。
SELECT v.description FROM violations v JOIN inspections i ON v.business_id = i.business_id JOIN businesses b ON i.business_id = b.business_id WHERE b.name = 'Tiramisu Kitchen' AND i.date = '2014-01-14' AND v.risk_category = 'Low Risk';
Error: 第 8783 个样本有 0 个SQL。
SELECT COUNT(*)  FROM inspections  WHERE business_id IN (SELECT business_id FROM businesses WHERE name = 'Tiramisu Kitchen')  AND type = 'Routine - Unscheduled';
SELECT COUNT(*)  FROM inspections  WHERE business_id IN (SELECT business_id FROM businesses WHERE name = 'Tiramisu Kitchen')  AND type = 'Routine - Unscheduled'  AND score > 70;
SELECT name FROM businesses WHERE business_id IN (   SELECT business_id   FROM inspections   WHERE business_id IN (     SELECT business_id     FROM violations     WHERE risk_category = 'Low Risk'   )   GROUP BY business_id   ORDER BY COUNT(*) DESC   LIMIT 1 ) AND name IN ('Tiramisu Kitchen', 'OMNI S.F. Hotel - 2nd Floor Pantry');
Error: 第 8787 个样本有 0 个SQL。
SELECT b.name FROM businesses b JOIN (   SELECT business_id, COUNT(*) as total_high_risk_violations   FROM violations   WHERE risk_category = 'High Risk'   GROUP BY business_id   ORDER BY total_high_risk_violations DESC   LIMIT 1 ) v ON b.business_id = v.business_id;
Error: 第 8789 个样本有 0 个SQL。
SELECT business_id FROM inspections GROUP BY business_id ORDER BY COUNT(business_id) DESC LIMIT 1;
SELECT b.business_id FROM businesses b JOIN (   SELECT business_id, COUNT(*) as num_violations   FROM violations   GROUP BY business_id   ORDER BY num_violations DESC ) v ON b.business_id = v.business_id LIMIT 1;
SELECT name  FROM businesses  WHERE business_id IN (   SELECT business_id    FROM inspections    WHERE date = '2016-09-28'    AND type = 'Routine - Unscheduled'    AND score = 100 )
SELECT b.name FROM businesses b JOIN (   SELECT business_id, COUNT(*) as count   FROM violations   WHERE risk_category = 'High'   GROUP BY business_id   ORDER BY count DESC   LIMIT 1 ) v ON b.business_id = v.business_id;
SELECT COUNT(DISTINCT violation_type_id)  FROM violations  WHERE business_id IN (SELECT business_id FROM businesses WHERE name = 'Stacks Restaurant')  AND date = '2016-10-04';
SELECT v.description FROM violations v JOIN inspections i ON v.business_id = i.business_id JOIN businesses b ON i.business_id = b.business_id WHERE b.name = 'Chez Fayala, Inc.' AND i.date = '2016-07-01' AND v.risk_category = 'Moderate Risk';
SELECT b.name FROM businesses b JOIN inspections i ON b.business_id = i.business_id WHERE i.date = '2016-09-26' AND i.type = 'Routine - Unscheduled' ORDER BY i.score LIMIT 1;
SELECT b.name FROM businesses b JOIN inspections i ON b.business_id = i.business_id WHERE i.type = 'Complaint' GROUP BY b.name ORDER BY COUNT(i.business_id) DESC LIMIT 1;
SELECT COUNT(*)  FROM inspections  WHERE business_id IN (SELECT business_id FROM businesses WHERE name = 'Soma Restaurant And Bar')  AND type = 'Routine - Unscheduled';
SELECT b.address FROM businesses b JOIN (   SELECT business_id, COUNT(*) as count   FROM violations   WHERE risk_category = 'Low Risk'   GROUP BY business_id   ORDER BY count DESC   LIMIT 1 ) v ON b.business_id = v.business_id;
SELECT name FROM businesses WHERE business_id IN (   SELECT business_id   FROM violations   WHERE risk_category = 'Low Risk' AND description = 'Permit license or inspection report not posted'   ORDER BY date ASC   LIMIT 1 )
SELECT COUNT(i.business_id)  FROM inspections i  WHERE i.business_id IN (   SELECT v.business_id    FROM violations v    GROUP BY v.business_id    ORDER BY COUNT(*) DESC    LIMIT 1 );
Error: 第 8802 个样本有 0 个SQL。
SELECT DIVIDE(SUM(i.score), COUNT(i.type))  FROM inspections i  JOIN businesses b ON i.business_id = b.business_id  WHERE i.type = 'Routine - Unscheduled' AND b.name = 'Chairman Bao';
SELECT    DIVIDE(COUNT(v.risk_category = 'Moderate Risk'), COUNT(b.business_id)) as percentage FROM    businesses b   JOIN inspections i ON b.business_id = i.business_id   JOIN violations v ON b.business_id = v.business_id WHERE    b.name = 'Melody Lounge';
Error: 第 8805 个样本有 0 个SQL。
SELECT COUNT(*)  FROM businesses  WHERE business_id IN (SELECT business_id FROM inspections WHERE score < 50);
SELECT COUNT(*)  FROM businesses  WHERE application_date BETWEEN '2012-01-01' AND '2012-12-31';
SELECT COUNT(*)  FROM inspections  WHERE business_id IN (SELECT business_id FROM inspections                        WHERE date BETWEEN '2014-01-01' AND '2014-12-31'                        AND type = 'Foodborne Illness Investigation');
SELECT COUNT(DISTINCT owner_name)  FROM businesses  GROUP BY owner_name  HAVING COUNT(business_id) >= 5;
SELECT b.name  FROM businesses b  JOIN inspections i ON b.business_id = i.business_id  WHERE i.score = 100 AND YEAR(i.date) = 2013;
SELECT i.city FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE year(v.date) = 2016 AND v.risk_category = 'High Risk' GROUP BY i.city ORDER BY COUNT(*) DESC LIMIT 1;
SELECT b.name FROM businesses b JOIN inspections i ON b.business_id = i.business_id ORDER BY i.score ASC LIMIT 1;
SELECT COUNT(*)  FROM violations  WHERE business_id IN (   SELECT business_id    FROM businesses    WHERE name = 'Tiramisu Kitchen' )  AND risk_category = 'High Risk';
SELECT COUNT(*)  FROM inspections  WHERE business_id IN (   SELECT business_id    FROM businesses    WHERE tax_code = 'H24' )  AND type = 'Complaint'  AND score >= 5;
SELECT b.name FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE i.date LIKE '2013%' AND v.description = 'Contaminated or adulterated food';
SELECT COUNT(*) FROM inspections WHERE business_id IN (   SELECT business_id   FROM businesses   WHERE postal_code = '94102' ) AND score >= 90 AND YEAR(date) = 2015;
SELECT name FROM businesses WHERE business_id IN (   SELECT business_id   FROM inspections   WHERE score >= 90   GROUP BY business_id   HAVING COUNT(DATE(date)) = 4   AND MIN(DATE(date)) BETWEEN '2015-01-01' AND '2019-12-31' );
Error: 第 8818 个样本有 0 个SQL。
SELECT AVG(i.score)  FROM inspections i  JOIN businesses b ON i.business_id = b.business_id  WHERE b.owner_name IN (   SELECT owner_name    FROM businesses    GROUP BY owner_name    ORDER BY COUNT(business_id) DESC    LIMIT 1 );
SELECT b.name FROM businesses b JOIN (   SELECT business_id, COUNT(*) as count   FROM violations   WHERE year(date) = 2014 AND risk_category = 'Low Risk'   GROUP BY business_id   ORDER BY count DESC   LIMIT 1 ) v ON b.business_id = v.business_id;
SELECT o.owner_name FROM (   SELECT owner_name, COUNT(*) as num_establishments   FROM businesses   GROUP BY owner_name   ORDER BY num_establishments DESC   LIMIT 5 ) o JOIN (   SELECT business_id, COUNT(*) as num_high_risk_violations   FROM violations   WHERE risk_category = 'High Risk'   GROUP BY business_id ) v ON o.owner_name IN (   SELECT owner_name   FROM businesses   WHERE business_id = v.business_id ) ORDER BY v.num_high_risk_violations DESC LIMIT 1;
SELECT b.name, COUNT(i.business_id) AS num_inspections, AVG(i.score) AS avg_score FROM inspections i JOIN businesses b ON i.business_id = b.business_id GROUP BY b.business_id, b.name ORDER BY num_inspections DESC LIMIT 1;
SELECT business_id FROM inspections WHERE score = 100 AND EXTRACT(YEAR FROM date) = 2013;
SELECT business_id FROM inspections WHERE type = 'Structural Inspection' AND year(date) = 2016 AND month(date) = 2;
SELECT COUNT(*) FROM businesses JOIN inspections ON businesses.business_id = inspections.business_id JOIN violations ON businesses.business_id = violations.business_id WHERE risk_category = 'Low Risk' AND description LIKE '%unpermitted food facility%';
SELECT b.business_id, v.risk_category, v.description FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE v.violation_type_id = '103101';
SELECT i.date  FROM inspections i  JOIN businesses b ON i.business_id = b.business_id  WHERE b.city = 'San Bruno' AND i.score = 100;
SELECT      i.type,      v.description FROM      inspections i JOIN      violations v ON i.business_id = v.business_id JOIN      businesses b ON i.business_id = b.business_id WHERE      b.name = 'ART''s CAFÉ' AND      v.risk_category = 'Moderate Risk';
SELECT v.violation_type_id, v.description FROM violations v JOIN inspections i ON v.business_id = i.business_id JOIN businesses b ON i.business_id = b.business_id WHERE b.name = 'STARBUCKS' AND v.risk_category = 'High Risk';
SELECT i.date, i.score, i.type FROM inspections i JOIN businesses b ON i.business_id = b.business_id WHERE b.tax_code = 'AA';
Error: 第 8831 个样本有 0 个SQL。
SELECT v.date, v.risk_category, v.description, b.name FROM violations v JOIN businesses b ON v.business_id = b.business_id WHERE b.owner_name = 'Jade Chocolates LLC';
SELECT b.name, v.risk_category, v.description FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE v.violation_type_id = 103111;
SELECT b.name, b.city, b.tax_code FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE v.date = '2014-06-03' AND v.risk_category = 'High Risk' LIMIT 5;
SELECT i.type FROM inspections i JOIN businesses b ON i.business_id = b.business_id WHERE b.name = 'El Aji Peruvian Restaurant' AND i.score = (SELECT MAX(score) FROM inspections);
SELECT b.owner_name FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE v.risk_category = 'High Risk' AND v.description = 'Improper cooking time or temperatures';
Error: 第 8837 个样本有 0 个SQL。
SELECT b.name, b.business_certificate FROM businesses b JOIN inspections i ON b.business_id = i.business_id WHERE i.score < 50;
Error: 第 8839 个样本有 0 个SQL。
SELECT owner_name FROM businesses WHERE owner_zip = '94104';
SELECT COUNT(*)  FROM businesses  WHERE tax_code = 'H25';
SELECT COUNT(*) FROM violations WHERE YEAR(date) = 2014 AND risk_category = 'Low Risk';
SELECT b.business_id, v.risk_category FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE b.owner_name = 'San Francisco Madeleine, Inc.';
SELECT b.owner_name FROM businesses b JOIN inspections i ON b.business_id = i.business_id WHERE i.score = 100;
SELECT COUNT(*) FROM businesses JOIN inspections ON businesses.business_id = inspections.business_id JOIN violations ON businesses.business_id = violations.business_id WHERE businesses.postal_code = '94117' AND violations.risk_category = 'High Risk';
SELECT v.violation_type_id, v.risk_category FROM violations v JOIN inspections i ON v.business_id = i.business_id JOIN businesses b ON i.business_id = b.business_id WHERE i.score BETWEEN 70 AND 80;
SELECT b.tax_code, i.type FROM businesses b JOIN inspections i ON b.business_id = i.business_id WHERE b.name = 'Rue Lepic';
SELECT b.name FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE v.violation_type_id = 103157 AND v.date = '2016-05-27' AND i.type = 'Routine - Unscheduled';
SELECT owner_name FROM businesses WHERE business_id IN (   SELECT business_id   FROM violations   WHERE risk_category = 'High Risk' AND violation_type_id = 103109 AND description = 'Unclean or unsanitary food contact surfaces' )
SELECT b.name FROM businesses b JOIN inspections i ON b.business_id = i.business_id WHERE b.city = 'Cameron Park' AND i.score = 100;
SELECT v.violation_type_id FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE b.business_id BETWEEN 30 AND 50 AND b.address = '747 IRVING St' AND b.city = 'San Francisco';
SELECT owner_name FROM businesses WHERE business_id IN (   SELECT business_id   FROM violations   WHERE violation_type_id = 103156 AND date = '2014-06-12' )
SELECT i.type FROM inspections i JOIN businesses b ON i.business_id = b.business_id WHERE b.owner_address LIKE '%500 California St, 2nd Floor of SAN FRANCISCO%' ORDER BY i.score DESC LIMIT 1;
SELECT COUNT(*)  FROM violations  WHERE business_id IN (SELECT business_id FROM inspections WHERE type = 'Routine - Unschedule' AND YEAR(date) = 2016);
SELECT b.name, v.risk_category FROM businesses b JOIN inspections i ON b.business_id = i.business_id JOIN violations v ON b.business_id = v.business_id WHERE i.score > (SELECT 0.8 * AVG(score) FROM inspections);
SELECT      DIVIDE(         COUNT(v.business_id)          WHERE v.risk_category = 'Low Risk'          AND i.score < 95          AND b.postal_code = 94110,         COUNT(i.business_id)          WHERE i.score < 95          AND b.postal_code = 94110     ) AS percentage FROM      businesses b  JOIN      inspections i ON b.business_id = i.business_id  JOIN      violations v ON b.business_id = v.business_id WHERE      i.score < 95      AND b.postal_code = 94110;
SELECT DISTINCT b.state FROM breweries b JOIN beers br ON b.id = br.brewery_id WHERE br.ibu = (SELECT MIN(ibu) FROM beers);
SELECT b.name, c.city FROM breweries b JOIN beers on b.id = beers.brewery_id JOIN breweries c ON beers.brewery_id = c.id WHERE c.state = 'New York' ORDER BY beers.ibu DESC LIMIT 1;
SELECT AVG(abv)  FROM beers  WHERE brewery_id IN (SELECT id FROM breweries WHERE name = 'Boston Beer Company')  AND ounces = 12;
SELECT ROUND((COUNT(CASE WHEN style = 'American Adjunct Lager' THEN 1 END) / COUNT(style)) * 100, 2) AS percentage FROM beers WHERE brewery_id = (SELECT id FROM breweries WHERE name = 'Stevens Point Brewery');
SELECT    b1.city, b1.state, b1.name AS most_bitter_beer, b1.ibu AS most_bitter_ibu,   b2.city, b2.state, b2.name AS least_bitter_beer, b2.ibu AS least_bitter_ibu,   b1.ibu - b2.ibu AS bitterness_difference FROM    beers b1   INNER JOIN breweries b1_brewery ON b1.brewery_id = b1_brewery.id   INNER JOIN beers b2   INNER JOIN breweries b2_brewery ON b2.brewery_id = b2_brewery.id WHERE    b1.ibu = (SELECT MAX(ibu) FROM beers)   AND b2.ibu = (SELECT MIN(ibu) FROM beers);
SELECT    (COUNT(b.beer_id) / (SELECT COUNT(*) FROM breweries WHERE state = 'Wisconsin')) * 100 AS percentage FROM    beers b WHERE    b.style = 'American Blonde Ale' AND b.brewery_id IN (     SELECT        id      FROM        breweries      WHERE        state = 'Wisconsin'   );
SELECT r.title FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id ORDER BY n.total_fat DESC LIMIT 1;
SELECT (total_fat - sat_fat) AS unsaturated_fat FROM Nutrition WHERE recipe_id IN (   SELECT recipe_id   FROM Recipe   WHERE title = 'Raspberry Chiffon Pie' );
SELECT title FROM Recipe WHERE recipe_id NOT IN (   SELECT recipe_id   FROM Nutrition   WHERE sodium >= 5 )
SELECT r.title FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id WHERE n.iron > 20;
SELECT title  FROM Recipe  WHERE title IN ('Raspberry Chiffon Pie', 'Fresh Apricot Bavarian')  ORDER BY MAX(vitamin_c) DESC;
SELECT title FROM Recipe WHERE prep_min > 10 ORDER BY (SELECT MAX(calories) FROM Nutrition) DESC LIMIT 1;
SELECT calories FROM Nutrition WHERE recipe_id IN (   SELECT recipe_id   FROM Recipe   WHERE title = 'Raspberry Chiffon Pie' )
SELECT o.optional FROM Quantity q JOIN Ingredient i ON q.ingredient_id = i.ingredient_id JOIN Recipe r ON q.recipe_id = r.recipe_id WHERE i.name = 'Graham Cracker Crumbs' AND r.title = 'Raspberry Chiffon Pie';
SELECT COUNT(*)  FROM Quantity  WHERE recipe_id IN (SELECT recipe_id FROM Recipe WHERE title = 'Raspberry Chiffon Pie')  AND max_qty = min_qty;
SELECT i.name FROM Ingredient i JOIN Quantity q ON i.ingredient_id = q.ingredient_id JOIN Recipe r ON q.recipe_id = r.recipe_id WHERE r.title = 'Raspberry Chiffon Pie' AND q.preparation IS NULL;
SELECT COUNT(DISTINCT r.recipe_id)  FROM Recipe r  JOIN Quantity q ON r.recipe_id = q.recipe_id  JOIN Ingredient i ON q.ingredient_id = i.ingredient_id  WHERE i.name = 'graham cracker crumbs';
SELECT SUM(q.min_qty / i.plural)  FROM Quantity q  JOIN Ingredient i ON q.ingredient_id = i.ingredient_id  JOIN Recipe r ON q.recipe_id = r.recipe_id  WHERE r.title = 'Raspberry Chiffon Pie'  AND i.name = 'graham cracker crumbs';
SELECT Nutrition.calories * Nutrition.pcnt_cal_fat FROM Recipe, Nutrition WHERE Recipe.title = 'Raspberry Chiffon Pie' AND Recipe.recipe_id = Nutrition.recipe_id;
SELECT AVG(calories)  FROM Nutrition  WHERE recipe_id IN (SELECT recipe_id FROM Recipe WHERE source = 'Produce for Better Health Foundation and 5 a Day');
Error: 第 8877 个样本有 0 个SQL。
SELECT unit * (max_qty - min_qty) AS total_cups FROM Quantity JOIN Ingredient ON Quantity.ingredient_id = Ingredient.ingredient_id WHERE recipe_id = 1436 AND name = '1% lowfat milk';
SELECT r.title FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id ORDER BY n.total_fat DESC LIMIT 1;
SELECT COUNT(*)  FROM Recipe  JOIN Quantity ON Recipe.recipe_id = Quantity.recipe_id  JOIN Ingredient ON Quantity.ingredient_id = Ingredient.ingredient_id  WHERE Ingredient.name = 'seedless red grapes';
SELECT name FROM Ingredient JOIN Quantity ON Ingredient.ingredient_id = Quantity.ingredient_id WHERE recipe_id = 1397 AND optional = 'TRUE';
SELECT r.title FROM Recipe r JOIN Quantity q ON r.recipe_id = q.recipe_id JOIN Ingredient i ON q.ingredient_id = i.ingredient_id WHERE i.name = 'frozen raspberries in light syrup' AND q.max_qty = q.min_qty ORDER BY q.max_qty DESC LIMIT 1;
SELECT name FROM Ingredient WHERE ingredient_id = (SELECT MAX(COUNT(ingredient_id)) FROM Quantity);
SELECT q.preparation FROM Quantity q JOIN Recipe r ON q.recipe_id = r.recipe_id JOIN Ingredient i ON q.ingredient_id = i.ingredient_id WHERE i.name = 'apple juice' AND r.title = 'raspberry-pear couscous cake';
SELECT Q.max_qty FROM Quantity Q, Recipe R, Ingredient I WHERE Q.recipe_id = R.recipe_id AND R.title = 'chicken pocket sandwich' AND Q.unit = 'cups' AND I.name = 'almonds' AND Q.ingredient_id = I.ingredient_id;
SELECT r.title FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id ORDER BY n.vitamin_c DESC LIMIT 1;
SELECT n.vitamin_a FROM Nutrition n JOIN Recipe r ON n.recipe_id = r.recipe_id WHERE r.title = 'Sherried Beef';
SELECT r.title FROM Recipe r JOIN (   SELECT recipe_id, COUNT(*) as max_ingredients   FROM Quantity   GROUP BY recipe_id   ORDER BY max_ingredients DESC   LIMIT 1 ) q ON r.recipe_id = q.recipe_id
SELECT    DIVIDE(     SUM(N.sodium)      FROM Nutrition N      JOIN Recipe R ON N.recipe_id = R.recipe_id      WHERE R.title = 'Lasagne-Spinach Spirals'   ),    SUM(N.sodium)    FROM Nutrition N    JOIN Recipe R ON N.recipe_id = R.recipe_id    WHERE R.title = 'Beef and Spinach Pita Pockets'
SELECT AVG(calories)  FROM Nutrition  WHERE recipe_id IN (   SELECT recipe_id    FROM Quantity    WHERE ingredient_id IN (     SELECT ingredient_id      FROM Ingredient      WHERE name = 'coarsely ground black pepper'   ) );
SELECT r.title FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id WHERE n.iron > 20;
SELECT COUNT(*)  FROM Ingredient  WHERE name IN (   SELECT i.name    FROM Recipe r    JOIN Quantity q ON r.recipe_id = q.recipe_id    JOIN Ingredient i ON q.ingredient_id = i.ingredient_id    WHERE r.title = 'Apricot Yogurt Parfaits' );
SELECT i.name FROM Ingredient i JOIN Quantity q ON i.ingredient_id = q.ingredient_id WHERE q.preparation = 'cook in beef broth';
SELECT COUNT(DISTINCT i.ingredient_id) FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id JOIN Quantity q ON r.recipe_id = q.recipe_id JOIN Ingredient i ON q.ingredient_id = i.ingredient_id WHERE n.vitamin_a = (SELECT MAX(vitamin_a) FROM Nutrition);
SELECT r.title FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id ORDER BY n.vitamin_c DESC LIMIT 5;
SELECT ingredient_id FROM Quantity GROUP BY ingredient_id ORDER BY COUNT(*) ASC LIMIT 1;
Error: 第 8897 个样本有 0 个SQL。
Error: 第 8898 个样本有 0 个SQL。
SELECT Q.name  FROM Quantity Q, Recipe R, Ingredient I  WHERE Q.recipe_id = R.recipe_id  AND R.title = 'Warm Chinese Chicken Salad'  AND Q.optional = 'TRUE';
SELECT R.title FROM Recipe R JOIN Nutrition N ON R.recipe_id = N.recipe_id WHERE N.alcohol > 10 ORDER BY R.prep_min DESC LIMIT 1;
SELECT R.servings FROM Recipe R JOIN Nutrition N ON R.recipe_id = N.recipe_id WHERE N.total_fat - N.sat_fat = (   SELECT MAX(N2.total_fat - N2.sat_fat)   FROM Nutrition N2 );
SELECT r.title FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id WHERE r.source = 'National Potato Board' ORDER BY n.calories DESC LIMIT 1;
SELECT r.recipe_id, r.title, r.prep_min + r.cook_min + r.stnd_min AS total_time FROM Recipe r JOIN (   SELECT recipe_id, COUNT(*) AS num_ingredients   FROM Quantity   GROUP BY recipe_id   ORDER BY num_ingredients DESC   LIMIT 1 ) AS q ON r.recipe_id = q.recipe_id ORDER BY total_time DESC;
SELECT      i.name,      COUNT(q.recipe_id) AS total_count,      ROUND((COUNT(q.recipe_id) / (SELECT COUNT(*) FROM Quantity) * 100), 2) AS percentage FROM      Quantity q JOIN      Ingredient i ON q.ingredient_id = i.ingredient_id GROUP BY      i.name ORDER BY      total_count DESC LIMIT 1;
SELECT r.title, TOTAL(r.prep_min, r.cook_min, r.stnd_min) AS total_time FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id ORDER BY n.total_fat DESC LIMIT 1;
SELECT r.recipe_id, r.title FROM Recipe r JOIN Quantity q ON r.recipe_id = q.recipe_id JOIN Ingredient i ON q.ingredient_id = i.ingredient_id WHERE i.name = 'almond extract';
SELECT I.name FROM Recipe R JOIN Quantity Q ON R.recipe_id = Q.recipe_id JOIN Ingredient I ON Q.ingredient_id = I.ingredient_id WHERE R.title = 'Tomato-Cucumber Relish';
SELECT COUNT(DISTINCT i.name) FROM Recipe r JOIN Quantity q ON r.recipe_id = q.recipe_id JOIN Ingredient i ON q.ingredient_id = i.ingredient_id WHERE r.title = 'Idaho Potato Supreme';
SELECT i.name FROM Quantity q JOIN Recipe r ON q.recipe_id = r.recipe_id JOIN Nutrition n ON r.recipe_id = n.recipe_id JOIN Ingredient i ON q.ingredient_id = i.ingredient_id WHERE q.min_qty > 0 AND q.max_qty < 100 ORDER BY n.carbo DESC LIMIT 1;
SELECT r.title FROM Recipe r JOIN Nutrition n ON r.recipe_id = n.recipe_id WHERE n.iron > 20;
SELECT i.* FROM Ingredient i JOIN Quantity q ON i.ingredient_id = q.ingredient_id JOIN Recipe r ON q.recipe_id = r.recipe_id JOIN Nutrition n ON r.recipe_id = n.recipe_id WHERE n.vitamin_a = (SELECT MAX(vitamin_a) FROM Nutrition)
SELECT i.name, q.max_qty, q.unit FROM Recipe r JOIN Quantity q ON r.recipe_id = q.recipe_id JOIN Ingredient i ON q.ingredient_id = i.ingredient_id WHERE r.servings = 7;
SELECT    MULTIPLY(DIVIDE(COUNT(sodium BETWEEN 0 AND 5 THEN recipe_id), COUNT(recipe_id)), 100) AS sodium_free_percentage FROM    Recipe, Nutrition WHERE    Recipe.source = 'The California Tree Fruit Agreement' AND    Recipe.recipe_id = Nutrition.recipe_id;
SELECT i.name  FROM Ingredient i, Quantity q  WHERE i.ingredient_id = q.ingredient_id  AND q.unit = 'slice(s)';
Error: 第 8915 个样本有 0 个SQL。
SELECT R.title, TOTAL(R.prep_min, R.cook_min, R.stnd_min) AS total_time FROM Recipe R JOIN Quantity Q ON R.recipe_id = Q.recipe_id JOIN Ingredient I ON Q.ingredient_id = I.ingredient_id WHERE I.name = 'lima beans';
SELECT      ROUND(         (COUNT(DISTINCT R.recipe_id) /           (SELECT COUNT(DISTINCT R.recipe_id)            FROM Recipe R JOIN Quantity Q ON R.recipe_id = Q.recipe_id            JOIN Ingredient I ON Q.ingredient_id = I.ingredient_id            WHERE I.name = 'sea bass')          ) * 100, 2) AS percentage FROM Recipe R JOIN Quantity Q ON R.recipe_id = Q.recipe_id  JOIN Ingredient I ON Q.ingredient_id = I.ingredient_id  WHERE I.name = 'sea bass' AND R.servings >= 10;
SELECT Nutrition.total_fat FROM Recipe, Nutrition WHERE Recipe.title = 'Raspberry Chiffon Pie' AND Recipe.recipe_id = Nutrition.recipe_id;
SELECT    (pcnt_cal_prot * 100) / pcnt_cal_carb  FROM    Nutrition  WHERE    recipe_id IN (SELECT recipe_id FROM Recipe WHERE title = 'Raspberry Chiffon Pie');
SELECT COUNT(DISTINCT i.name) FROM Recipe r JOIN Quantity q ON r.recipe_id = q.recipe_id JOIN Ingredient i ON q.ingredient_id = i.ingredient_id WHERE r.title = 'Raspberry Chiffon Pie';
Error: 第 8921 个样本有 0 个SQL。
Error: 第 8922 个样本有 0 个SQL。
Error: 第 8923 个样本有 0 个SQL。
SELECT R.title FROM Recipe R JOIN Nutrition N ON R.recipe_id = N.recipe_id WHERE N.iron > 20;
SELECT R.title FROM Recipe R JOIN Nutrition N ON R.recipe_id = N.recipe_id ORDER BY N.calories DESC LIMIT 1;
SELECT COUNT(*)  FROM Recipe  WHERE recipe_id NOT IN (SELECT recipe_id FROM Nutrition) OR NOT EXISTS (   SELECT 1    FROM Ingredient    WHERE ingredient_id IN (     SELECT ingredient_id      FROM Quantity      WHERE recipe_id = Recipe.recipe_id    ) AND category NOT LIKE '%dairy' );
SELECT I.name FROM Recipe R JOIN Quantity Q ON R.recipe_id = Q.recipe_id JOIN Ingredient I ON Q.ingredient_id = I.ingredient_id WHERE R.title = 'Apricot Yogurt Parfaits';
SELECT R.title  FROM Recipe R  JOIN Quantity Q ON R.recipe_id = Q.recipe_id  WHERE Q.max_qty <> Q.min_qty;
Error: 第 8929 个样本有 0 个SQL。
SELECT      MULTIPLY(DIVIDE(COUNT(N.cholestrl = 0 THEN R.recipe_id), COUNT(R.recipe_id)), 100) AS percentage FROM      Recipe R     LEFT JOIN Nutrition N ON R.recipe_id = N.recipe_id WHERE      R.cook_min < 20     AND N.cholestrl = 0;
SELECT      MULTIPLY(DIVIDE(COUNT(Nutrition.calories > 200), COUNT(Recipe.recipe_id)), 100) AS percentage FROM      Recipe     JOIN Ingredient ON Recipe.recipe_id = Quantity.recipe_id     JOIN Quantity ON Recipe.recipe_id = Quantity.recipe_id     JOIN Ingredient ON Quantity.ingredient_id = Ingredient.ingredient_id WHERE      Ingredient.category = 'cheese';
SELECT e.firstname, e.lastname FROM employee e WHERE e.salary = (SELECT MAX(salary) FROM employee);
SELECT COUNT(*)  FROM employee  WHERE performance = 'Good';
SELECT ssn FROM employee WHERE gender = 'M' AND salary > 70000;
SELECT educationrequired FROM position WHERE positiontitle = 'Regional Manager';
SELECT positiontitle FROM position WHERE minsalary = (SELECT MIN(minsalary) FROM position WHERE positiontitle IN ('Account Representative', 'Trainee'));
SELECT locationcity FROM employee WHERE firstname = 'Sandy' AND lastname = 'Adams';
SELECT COUNT(*) FROM employee WHERE locationID IN (   SELECT locationID   FROM location   WHERE state = 'NY' ) AND performance = 'Good';
SELECT officephone FROM location WHERE locationID IN (   SELECT locationID   FROM employee   WHERE firstname = 'Sandy' AND lastname = 'Adams' )
SELECT COUNT(*) FROM employee WHERE gender = 'M' AND location.address = '450 Peachtree Rd';
SELECT COUNT(*)  FROM employee  WHERE positionID IN (SELECT positionID                       FROM position                       WHERE positiontitle = 'Account Representative');
SELECT salary - (SELECT minsalary FROM position WHERE positiontitle = (SELECT positiontitle FROM employee WHERE firstname = 'James' AND lastname = 'Johnson')) AS difference FROM employee WHERE firstname = 'James' AND lastname = 'Johnson';
SELECT COUNT(*)  FROM employee  WHERE positionID IN (SELECT positionID FROM position WHERE positiontitle = 'Trainee')  AND locationID IN (SELECT locationID FROM location WHERE state = 'NY');
SELECT firstname, lastname FROM employee WHERE positionID IN (SELECT positionID FROM position WHERE positiontitle = 'Trainee');
SELECT * FROM employee WHERE (firstname, lastname) IN (('Jose', 'Rodriguez'), ('Sandy', 'Adams')) AND positionID IN (   SELECT positionID   FROM position   WHERE educationrequired = (     SELECT MAX(educationrequired)     FROM position   ) );
SELECT DISTINCT location.zipcode FROM employee JOIN location ON employee.locationID = location.locationID WHERE employee.gender = 'M' AND employee.performance = 'Good';
SELECT ssn FROM employee WHERE locationID IN (   SELECT locationID   FROM location   WHERE state = 'CA' )
SELECT COUNT(*) FROM employee WHERE positionID IN (SELECT positionID FROM position WHERE positiontitle = 'Trainee') AND salary > 20000;
SELECT AVG(salary)  FROM employee  WHERE positionID IN (SELECT positionID FROM position WHERE positiontitle = 'Trainee');
SELECT (AVG(e.salary) - p.minsalary) / p.minsalary * 100 FROM employee e JOIN position p ON e.positionID = p.positionID WHERE p.positiontitle = 'Trainee';
SELECT COUNT(*)  FROM employee  WHERE gender = 'F';
SELECT locationcity FROM employee WHERE firstname = 'Jose' AND lastname = 'Rodriguez';
SELECT state FROM employee WHERE firstname = 'Emily' AND lastname = 'Wood';
SELECT p.educationrequired FROM employee e JOIN position p ON e.positionID = p.positionID WHERE e.firstname = 'David' AND e.lastname = 'Whitehead';
SELECT COUNT(*)  FROM employee  WHERE locationID IN (SELECT locationID                       FROM location                       WHERE locationcity = 'Miami');
SELECT e.firstname, e.lastname FROM employee e WHERE e.locationID IN (SELECT l.locationID FROM location l WHERE l.locationcity = 'Boston') ORDER BY e.salary DESC LIMIT 1;
SELECT e.ssn FROM employee e JOIN location l ON e.locationID = l.locationID WHERE l.locationcity = 'New York City' AND e.performance = 'Good';
SELECT COUNT(*) FROM employee WHERE positionID IN (SELECT positionID FROM position WHERE positiontitle = 'account representatives') AND locationID IN (SELECT locationID FROM location WHERE locationcity = 'Chicago') AND performance = 'Good';
SELECT p.positiontitle FROM employee e JOIN position p ON e.positionID = p.positionID WHERE e.firstname = 'Kenneth' AND e.lastname = 'Charles';
SELECT address FROM location WHERE locationID IN (   SELECT locationID   FROM employee   WHERE positionID IN (     SELECT positionID     FROM position     WHERE positiontitle = 'Manager'   ) AND salary = (     SELECT MAX(salary)     FROM employee     WHERE positionID IN (       SELECT positionID       FROM position       WHERE positiontitle = 'Manager'     )   ) )
SELECT MAX(salary)  FROM employee  WHERE (firstname, lastname) = ('Tracy', 'Coulter') AND positionID = (SELECT positionID FROM employee WHERE (firstname, lastname) = ('Tracy', 'Coulter'));
SELECT DIVIDE(SUBTRACT(p.maxsalary, e.salary), e.salary) * 100 AS "Salary Raise Percentage" FROM employee e JOIN position p ON e.positionID = p.positionID WHERE e.firstname = 'Jose' AND e.lastname = 'Rodriguez';
SELECT COUNT(*) FROM employee WHERE performance = 'Poor' AND salary > 50000;
SELECT firstname, lastname FROM employee WHERE salary = (SELECT MAX(salary) FROM employee);
SELECT COUNT(*) FROM position WHERE maxsalary < '100000';
SELECT salary FROM employee WHERE hiredate = (SELECT MIN(hiredate) FROM employee);
SELECT MIN(m.minsalary)  FROM position p  JOIN employee e ON p.positionID = e.positionID  WHERE p.educationrequired = (SELECT MAX(p2.educationrequired) FROM position p2);
SELECT address, locationcity, state, zipcode FROM location WHERE locationID = (SELECT MAX(locationID) FROM employee);
SELECT AVG(salary)  FROM employee  WHERE positionID IN (SELECT positionID FROM position WHERE educationrequired = '2 year degree');
SELECT COUNT(*) FROM employee WHERE gender = 'M' AND positionID IN (   SELECT positionID   FROM position   WHERE positiontitle = 'Regional Manager' )
SELECT p.positiontitle FROM position p WHERE p.positionID = (SELECT e.positionID                        FROM employee e                        WHERE e.performance = 'Poor'                        GROUP BY e.positionID                        ORDER BY COUNT(e.performance) DESC                        LIMIT 1)
SELECT p.positiontitle FROM position p JOIN employee e ON p.positionID = e.positionID WHERE e.gender = 'F' AND p.educationrequired = '2 year degree' GROUP BY p.positiontitle ORDER BY COUNT(e.ssn) DESC LIMIT 1;
SELECT COUNT(*) FROM employee WHERE positionID IN (SELECT positionID FROM position WHERE positiontitle = 'Account Representatives') AND locationID IN (SELECT locationID FROM location WHERE state = 'Illinois') AND performance = 'good';
SELECT AVG(salary)  FROM employee  WHERE gender = 'Male' AND positiontitle = 'Manager' AND performance = 'Poor';
SELECT state FROM employee e JOIN position p ON e.positionID = p.positionID WHERE p.positiontitle = 'Account Representatives' AND e.performance = 'Good' GROUP BY state ORDER BY COUNT(e.positionID) DESC LIMIT 1;
SELECT e.firstname, e.lastname, e.performance FROM employee e WHERE e.salary = (SELECT MIN(salary) FROM employee) ORDER BY e.hiredate;
SELECT locationcity FROM location WHERE state IN ('CO', 'UT', 'CA');
SELECT locationcity, address FROM location WHERE zipcode > 90000;
SELECT positiontitle FROM position WHERE educationrequired = '4 year degree';
SELECT MAX(maxsalary) FROM position WHERE positiontitle = 'Trainer';
SELECT e.firstname, e.lastname, e.ssn FROM employee e JOIN position p ON e.positionID = p.positionID WHERE p.positiontitle = 'Account Representative' AND e.performance = 'Average'
SELECT hiredate, p.positiontitle, salary FROM employee e JOIN position p ON e.positionID = p.positionID WHERE e.firstname = 'Emily' AND e.lastname = 'Wood';
SELECT p.positiontitle, e.min_salary AS min_salary, e.max_salary AS max_salary FROM employee e JOIN position p ON e.positionID = p.positionID WHERE e.firstname = 'Bill' AND e.lastname = 'Marlin'
SELECT e.firstname, e.lastname, e.gender, p.positiontitle FROM employee e JOIN position p ON e.positionID = p.positionID JOIN location l ON e.locationID = l.locationID WHERE l.locationcity = 'New York City';
SELECT e.firstname, e.lastname, e.hiredate, e.performance FROM employee e JOIN location l ON e.locationID = l.locationID WHERE l.state = 'UT';
SELECT e.firstname, e.lastname, l.locationcity, l.address, l.zipcode FROM employee e JOIN position p ON e.positionID = p.positionID JOIN location l ON e.locationID = l.locationID WHERE e.performance = 'Poor';
SELECT p.educationrequired, e.firstname, e.lastname, e.salary FROM position p JOIN employee e ON p.positionID = e.positionID WHERE p.positiontitle = 'Account Representative' AND e.performance = 'Poor';
SELECT e.firstname, e.lastname, e.performance, l.locationcity FROM employee e JOIN location l ON e.locationID = l.locationID WHERE e.ssn = '767-74-7373';
SELECT e.firstname, e.lastname, p.positiontitle, l.locationcity, l.officephone FROM employee e JOIN position p ON e.positionID = p.positionID JOIN location l ON e.locationID = l.locationID WHERE l.state = 'CO';
SELECT      e.firstname, e.lastname,      p.positiontitle,      l.locationcity,      AVG(e.salary) AS monthly_avg_salary FROM      employee e JOIN      position p ON e.positionID = p.positionID JOIN      location l ON e.locationID = l.locationID WHERE      e.salary = (SELECT MAX(salary) FROM employee) GROUP BY      e.firstname, e.lastname, p.positiontitle, l.locationcity;
SELECT      t.start_station_name AS start_station,      t.end_station_name AS end_station,      t.duration  FROM      trip t  ORDER BY      t.duration DESC  LIMIT 1;
SELECT      DIVIDE(COUNT(t.id), COUNT(t.id)) as percentage FROM      trip t WHERE      t.subscription_type = 'Subscriber';
SELECT s.name, s.city FROM station s JOIN trip t ON s.name = t.end_station_name WHERE t.end_date = (SELECT MAX(end_date) FROM trip) AND t.bike_id = 13;
SELECT t.start_station_name, t.end_station_name, s.city FROM trip t JOIN station s ON t.end_station_id = s.id WHERE t.start_date != t.end_date;
SELECT s.name, s.lat, s.long FROM station s WHERE NOT EXISTS (   SELECT 1   FROM status st   WHERE st.station_id = s.id   AND st.time = '2013-11-03 02:01:01'   AND st.bikes_available > 0 )
SELECT s.name, s.city FROM station s JOIN (   SELECT start_station_name, COUNT(*) as total_bikes   FROM trip   GROUP BY start_station_name   ORDER BY total_bikes DESC   LIMIT 1 ) t ON s.name = t.start_station_name
SELECT max_temperature_f FROM weather WHERE date = (SELECT start_date FROM trip WHERE id = 4080);
SELECT s.name, s.installation_date, ss.time FROM station s JOIN status ss ON s.id = ss.station_id WHERE s.name = 'San Jose Diridon Caltrain Station' ORDER BY ss.bikes_available DESC LIMIT 1;
SELECT t.start_station_name, t.duration FROM trip t JOIN weather w ON t.start_date = w.date WHERE w.events = 'Rain';
SELECT trip.start_date FROM trip WHERE trip.end_station_id IN (   SELECT station.id   FROM station   WHERE station.lat = 37.331415 AND station.long = -121.8932 );
SELECT COUNT(*)  FROM trip  WHERE start_date LIKE '8%2013%' AND        start_station_name IN (SELECT name FROM station WHERE city = 'Redwood City')        AND bike_id IS NOT NULL;
SELECT    start_station_name AS borrowed_station,    end_station_name AS returned_station,    (SELECT AVG(min_temperature_f) FROM weather) AS mean_temperature FROM    trip WHERE    duration < 300
SELECT    MAX(start_date) AS most_bikes_borrowed_day,   AVG(min_temperature_f) AS avg_coldest_temp FROM    trip WHERE    start_date IN (     SELECT        start_date     FROM        trip     GROUP BY        start_date     ORDER BY        COUNT(*) DESC     LIMIT 1   );
SELECT    bike_id,    AVG(SUM(duration) / COUNT(bike_id)) AS avg_usage,   AVG(SUM(wind_dir_degrees)) / COUNT(date) AS avg_wind_direction FROM    trip   JOIN station ON trip.start_station_id = station.id   JOIN weather ON weather.date BETWEEN '2013-07-01' AND '2013-09-30' WHERE    EXTRACT(MONTH FROM weather.date) IN (7, 8, 9) GROUP BY    bike_id
SELECT s.name FROM station s WHERE s.city = 'San Jose' AND s.installation_date BETWEEN '2014-01-01' AND '2014-12-31';
SELECT MAX(duration)  FROM trip  WHERE start_date = '8/29/2013' AND end_date = '8/29/2013';
SELECT DIVIDE(t.duration, 60) AS duration_in_minutes FROM trip t WHERE t.start_date = '8/29/2013' AND t.end_date = '8/29/2013' AND t.start_station_name = 'Market at 4th' AND t.end_station_name = '2nd at South Park' AND t.bike_id = 426;
SELECT bike_id FROM trip WHERE start_date = '8/29/2013' AND start_station_name = 'University and Emerson' AND end_date = '8/29/2013' AND end_station_name = 'California Ave Caltrain Station' ORDER BY duration DESC LIMIT 1;
SELECT COUNT(*) FROM station WHERE city = 'San Francisco' AND dock_count >= 20;
SELECT date  FROM weather  WHERE max_temperature_f = (SELECT MAX(max_temperature_f) FROM weather);
SELECT max_dew_point_f FROM weather WHERE date = '7/15/2014' AND zip_code = 94301;
SELECT YEAR(date) AS year, COUNT(*) AS rain_count FROM weather WHERE events = 'Rain' GROUP BY YEAR(date) ORDER BY rain_count DESC LIMIT 1;
SELECT t.bike_id, MIN(t.duration) FROM trip t JOIN station s ON t.start_station_name = s.name WHERE s.lat = '37.789625' AND s.long = '-122.400811' AND t.start_date = '10/20/2014' ORDER BY t.duration LIMIT 1;
SELECT    s.dock_count,    t.end_station_name  FROM    trip t    JOIN station s ON t.start_station_id = s.id  WHERE    t.start_date = '12/1/2013'    AND t.start_station_name = 'South Van Ness at Market'    AND t.subscription_type = 'subscriber'    AND t.duration = (SELECT MIN(duration) FROM trip)  ORDER BY    t.end_station_name;
SELECT MAX(mean_humidity) FROM weather WHERE date = '8/29/2013' AND zip_code IN (   SELECT zip_code   FROM trip   WHERE start_station_name = 'Powell Street' AND bike_id = '496' )
SELECT      w.date  FROM      weather w  WHERE      w.date BETWEEN '11/1/2014' AND '11/30/2014'      AND w.events = 'Fog'      AND w.zip_code = 94301  UNION  SELECT      t.start_date  FROM      trip t  WHERE      t.start_date BETWEEN '11/1/2014' AND '11/30/2014'      AND t.subscription_type = 'Subscriber'      AND t.zip_code = 94301  GROUP BY      t.start_date
SELECT s.name, s.installation_date FROM station s WHERE s.id = (   SELECT t.start_station_id   FROM trip t   WHERE t.subscription_type = 'Customer'   GROUP BY t.start_station_id   ORDER BY COUNT(*) ASC   LIMIT 1 )
SELECT s.name  FROM status s  WHERE s.time = '11/3/2013' AND s.station_id IN (   SELECT st.id    FROM station st    WHERE NOT EXISTS (     SELECT 1      FROM status st2      WHERE st2.station_id = st.id AND st2.time = '11/3/2013' AND st2.bikes_available > 0   ) )
SELECT DIVIDE(SUM(t.duration), COUNT(t.start_station_id)) FROM trip t JOIN station s ON t.start_station_id = s.id WHERE s.city = 'Palo Alto';
SELECT s1.city, t.start_station_name, t.end_station_name, t.duration FROM trip t JOIN station s1 ON t.start_station_id = s1.id JOIN station s2 ON t.end_station_id = s2.id ORDER BY t.duration DESC LIMIT 1;
SELECT s.name, s.installation_date, s.city FROM station s WHERE s.installation_date BETWEEN '2013-08-05' AND '2013-12-31';
SELECT AVG(duration)  FROM trip  WHERE start_station_name = 'Adobe on Almaden'  AND end_station_name = 'Ryland Park';
SELECT s.name, s.lat, s.long  FROM station s  JOIN status st ON s.id = st.station_id  WHERE st.bikes_available = 0;
SELECT t.id, s.lat, s.long FROM trip t JOIN station s ON t.start_station_name = s.name AND t.end_station_name = s.name WHERE t.start_station_name = t.end_station_name;
SELECT SUM(dock_count) - (SELECT bikes_available FROM status WHERE station_id = (SELECT id FROM station WHERE name = 'San Jose Diridon Caltrain Station') AND time = '2013/08/29 18:14:01') AS bikes_borrowed;
SELECT trip.id FROM trip JOIN station ON trip.start_station_id = station.id JOIN weather ON trip.start_date = weather.date WHERE trip.bike_id = '10' AND trip.subscription_type = 'Subscriber' AND weather.mean_temperature_f > 62;
SELECT      max_wind_speed_mph, cloud_cover FROM      weather WHERE      date IN (         SELECT              start_date         FROM              trip         WHERE              bike_id = 10              AND subscription_type = 'Customer'             AND duration = 364             AND start_station_name = 'MLK Library'             AND end_station_name = 'San Salvador at 1st'     );
SELECT COUNT(*) FROM trip WHERE subscription_type = 'Subscriber' AND start_station_name = '2nd at Folsom' AND end_station_name = 'Civic Center BART (7th at Market)' AND duration < 490 AND start_station_id IN (SELECT id FROM station WHERE name = '2nd at Folsom') AND end_station_id IN (SELECT id FROM station WHERE name = 'Civic Center BART (7th at Market)') AND end_station_id IN (SELECT id FROM station WHERE name = 'Civic Center BART (7th at Market)') AND (SELECT mean_visibility_miles FROM weather WHERE date = (SELECT start_date FROM trip WHERE id = trip.id)) >= 4;
SELECT s.docks_available FROM status s JOIN trip t ON s.station_id = t.start_station_id WHERE t.id = 912900;
SELECT trip.id FROM trip JOIN weather ON trip.end_date = weather.date WHERE weather.min_temperature_f < 45;
SELECT      MIN(t.duration) AS shortest_duration,     AVG(t.duration) AS average_duration,     MIN(w.min_temperature_f) AS min_temperature,     MAX(w.max_gust_speed_mph) AS max_gust_speed,     w.events AS weather_event FROM      trip t JOIN      station s ON t.start_station_id = s.id JOIN      station e ON t.end_station_id = e.id JOIN      status s1 ON t.start_date BETWEEN s1.time AND DATE_ADD(s1.time, INTERVAL 1 MINUTE) AND s1.station_id = t.start_station_id JOIN      status s2 ON t.end_date BETWEEN s2.time AND DATE_ADD(s2.time, INTERVAL 1 MINUTE) AND s2.station_id = t.end_station_id JOIN      weather w ON DATE(t.start_date) = w.date WHERE      t.subscription_type = 'Subscriber'     AND t.start_station_name = '2nd at Folsom'     AND t.end_station_name = '5th at Howard'     AND t.start_date BETWEEN '1/1/2014 0:00' AND '12/31/2014 11:59'     AND s.name = '2nd at Folsom'     AND e.name = '5th at Howard';
SELECT AVG(duration)  FROM trip  WHERE start_station_name = 'Steuart at Market'    AND end_station_name = 'Embarcadero at Sansome'    AND start_date >= '7/1/2014 0:00'    AND end_date <= '7/31/2014 12:59';
SELECT    DIVIDE(SUM(weather.max_temperature_f), COUNT(weather.date)) AS avg_max_temp,   DIVIDE(SUM(weather.min_temperature_f), COUNT(weather.date)) AS avg_min_temp FROM    weather WHERE    weather.date BETWEEN '5/1/2015' AND '5/31/2015'   AND weather.mean_humidity BETWEEN 65 AND 75;
SELECT SUM(subscription_type = 'Subscriber') - SUM(subscription_type = 'Customer') FROM trip WHERE start_date BETWEEN '6/1/2013 0:00' AND '6/30/2013 23:59';
SELECT trip.bike_id FROM trip JOIN weather ON trip.start_date BETWEEN weather.date AND DATE_ADD(weather.date, INTERVAL 1 DAY) WHERE year(trip.start_date) = 2013 AND weather.events = 'Fog-Rain';
SELECT    t.duration,    w.mean_visibility_miles,    w.mean_wind_speed_mph,    w.events,    s1.lat, s1.long, s1.name AS start_station_name,    s2.lat, s2.long, s2.name AS end_station_name FROM    trip t   JOIN station s1 ON t.start_station_id = s1.id   JOIN station s2 ON t.end_station_id = s2.id   JOIN weather w ON t.zip_code = w.zip_code AND w.events = 'fog' WHERE    t.duration = (SELECT MAX(duration) FROM trip WHERE events = 'fog');
SELECT date FROM weather WHERE date BETWEEN '8/1/2013 0:00' AND '8/31/2013 12:59' AND zip_code IN (   SELECT zip_code   FROM trip   WHERE start_station_name = 'Market at 10th'   AND end_station_name = 'South Van Ness at Market'   AND start_date BETWEEN '8/1/2013 0:00' AND '8/31/2013 12:59' ) ORDER BY min_temperature_f LIMIT 1;
SELECT    start_station_name AS "Start Station",    end_station_name AS "End Station",    duration AS "Duration" FROM    trip WHERE    events = 'rain' ORDER BY    duration DESC LIMIT 1;
SELECT AVG(duration)  FROM trip t  JOIN weather w ON t.zip_code = w.zip_code  WHERE w.events = 'rain' AND w.precipitation_inches > 0.8;
SELECT s.name, s.city FROM station s JOIN trip t ON s.name = t.start_station_name WHERE t.duration > (SELECT AVG(d) FROM (SELECT SUM(duration) AS d FROM trip) AS main_trip);
SELECT COUNT(*)  FROM station  WHERE city = 'San Francisco' AND installation_date LIKE '%2014';
SELECT COUNT(*) FROM trip WHERE start_date LIKE '%2006%' AND end_station_name IN (SELECT name FROM station WHERE city = 'Mountain View');
SELECT trip_id FROM trip WHERE start_station_name = 'Redwood City' ORDER BY duration DESC LIMIT 1;
SELECT bike_id FROM trip WHERE start_station_name IN (   SELECT name   FROM station   WHERE installation_date LIKE '%2013%' )
SELECT COUNT(*) FROM trip WHERE subscription_type = 'Subscriber' AND end_station_name LIKE '%San Jose%';
SELECT t.id, t.duration, t.start_date, t.start_station_name, t.start_station_id FROM trip t JOIN station s ON t.start_station_id = s.id WHERE s.dock_count = 15 ORDER BY t.duration ASC LIMIT 1;
SELECT    EXTRACT(YEAR FROM start_date) AS year,    COUNT(*) AS num_trips FROM    trip WHERE    start_station_name IN (     SELECT        name      FROM        station      WHERE        city = 'San Francisco'   ) GROUP BY    EXTRACT(YEAR FROM start_date) ORDER BY    num_trips DESC LIMIT 1;
SELECT    DIVIDE(COUNT(t.duration), COUNT(t.duration)) * 100 AS percentage FROM    trip t WHERE    t.start_station_name = 'San Jose' AND t.duration > 800;
SELECT COUNT(*)  FROM trip  WHERE start_date LIKE '%2013%' AND duration > 1000;
SELECT AVG(duration)  FROM trip  WHERE start_station_name = 'South Van Ness at Market'  AND EXTRACT(YEAR FROM start_date) = 2015;
SELECT COUNT(*) FROM trip WHERE start_station_id = end_station_id;
SELECT trip.id FROM trip JOIN weather ON trip.start_date = weather.date WHERE weather.max_temperature_f = (SELECT MAX(max_temperature_f) FROM weather);
SELECT * FROM trip WHERE start_station_name = 'Mountain View City Hall' AND end_date IN (   SELECT date   FROM weather   WHERE events = 'rain' );
SELECT AVG(duration)  FROM trip  WHERE end_date IN (SELECT date FROM weather WHERE events = 'fog')    AND end_date = end_date;
SELECT MAX(t.duration) FROM trip t JOIN weather w ON t.start_date = w.date WHERE w.max_wind_speed_mph = 30;
SELECT AVG(mean_temperature_f)  FROM weather w  JOIN trip t ON w.zip_code = t.zip_code  WHERE start_station_name = 'Market at 4th' AND start_date LIKE '%2013%';
SELECT mean_humidity FROM trip WHERE id = 4275;
SELECT    DIVIDE(COUNT(CASE WHEN subscription_type = 'Customer' AND end_date LIKE '%2015%' AND weather.events = 'Rain' THEN 1 END),           COUNT(CASE WHEN end_date LIKE '%2015%' AND weather.events = 'Rain' THEN 1 END)) * 100 AS percentage FROM    trip    JOIN weather ON trip.end_date = weather.date WHERE    end_date LIKE '%2015%' AND weather.events = 'Rain' AND subscription_type = 'Customer';
SELECT COUNT(*) FROM station WHERE city = 'San Jose' AND EXTRACT(YEAR FROM installation_date) > 2013;
SELECT mean_temperature_f FROM weather WHERE date = '8/29/2013' AND zip_code = 94107;
SELECT SUBTRACT(w.max_temperature_f, w.min_temperature_f) AS temperature_difference FROM weather w WHERE w.date = '8/29/2013' AND w.zip_code = '94107';
Error: 第 9062 个样本有 0 个SQL。
SELECT s.city FROM trip t JOIN station s ON t.start_station_id = s.id WHERE t.id = 4069;
SELECT COUNT(*) FROM trip JOIN weather ON trip.start_date LIKE '9%' AND trip.start_date LIKE '%2013' AND weather.date = trip.start_date AND weather.zip_code = '94107' WHERE weather.max_temperature_f > 70;
SELECT start_station_name FROM trip WHERE start_station_id IN (   SELECT station_id   FROM station   WHERE city LIKE '%%' AND installation_date <= '2013-12-31' ) AND start_date IN (   SELECT date   FROM weather   WHERE zip_code = '94107' AND max_humidity > 80 AND date LIKE '%2013%' )
SELECT COUNT(*)  FROM trip  WHERE start_date LIKE '8%' AND start_date LIKE '%2013%'    AND subscription_type = 'Subscriber'    AND start_station_id IN (SELECT id FROM station WHERE dock_count > 20);
SELECT s.lat, s.long FROM station s JOIN trip t ON s.id = t.start_station_id WHERE t.id = (SELECT MAX(id) FROM trip);
SELECT docks_available FROM status WHERE station_id = (SELECT end_station_id FROM trip WHERE id = 4069);
SELECT COUNT(*) FROM trip WHERE start_date LIKE '%2013' AND events = 'fog' AND start_station_name = '2nd at Townsend';
SELECT MAX(t.duration) FROM trip t JOIN weather w ON t.start_date = w.date WHERE w.events = 'fog' AND w.date LIKE '%2013';
SELECT installation_date FROM station WHERE id = (SELECT start_station_id FROM trip WHERE id = 4069);
SELECT COUNT(*)  FROM trip  WHERE start_station_id IN (SELECT id FROM station WHERE city = 'San Francisco')  AND subscription_type = 'Subscriber';
SELECT COUNT(*)  FROM trip  WHERE start_station_name = '2nd at Folsom'  AND start_date LIKE '%2014%'  AND EXISTS (   SELECT 1    FROM weather    WHERE date = (SELECT MAX(date)                 FROM weather                 WHERE date LIKE '%2014%'                 AND max_temperature_f = (SELECT MAX(max_temperature_f)                                          FROM weather                                          WHERE date LIKE '%2014%')) );
SELECT AVG(duration) FROM trip WHERE start_date LIKE '%2014' AND bike_id IN (   SELECT station_id   FROM status   WHERE time = (     SELECT MAX(time)     FROM status     WHERE station_id IN (       SELECT id       FROM station       WHERE city IN (         SELECT city         FROM station         WHERE weather.date IN (           SELECT date           FROM weather           WHERE max_temperature_f = (             SELECT MAX(max_temperature_f)             FROM weather           )         )       )     )   ) )
SELECT DISTINCT end_station_name FROM trip WHERE start_station_name = '2nd at South Park';
SELECT COUNT(*)  FROM weather  WHERE zip_code = '94041' AND events = 'rain';
SELECT MAX(dock_count)  FROM station  WHERE city = 'Redwood City' AND EXTRACT(YEAR FROM installation_date) < 2014;
SELECT MAX(duration) / 86400 AS longest_trip_duration_in_days FROM trip;
SELECT    DIVIDE(SUBTRACT(w.max_temperature_f, 32), 1.8) AS Celsius1,    DIVIDE(SUBTRACT(w.mean_temperature_f, 32), 1.8) AS Celsius2,    DIVIDE(SUBTRACT(w.min_temperature_f, 32), 1.8) AS Celsius3 FROM    weather w WHERE    w.city = 'San Francisco'    AND w.date LIKE '8/%/2013';
SELECT    COUNT(CASE WHEN subscription_type = 'Subscriber' THEN 1 ELSE NULL END) AS subscriber,   COUNT(CASE WHEN subscription_type = 'Customer' THEN 1 ELSE NULL END) AS customer FROM    trip WHERE    start_station_name = '2nd at South Park' AND    end_station_name = '2nd at South Park';
SELECT *  FROM station  WHERE city = 'San Francisco' AND zip_code = 94107;
SELECT s.name FROM station s JOIN weather w ON s.city = w.zip_code WHERE w.date LIKE '%2014%' AND (w.mean_temperature_f - 32) / 1.8 = 20;
Error: 第 9083 个样本有 0 个SQL。
SELECT    s1.name AS start_city,    s2.name AS end_city FROM    trip   INNER JOIN station s1 ON trip.start_station_name = s1.name AND trip.start_station_id = s1.id   INNER JOIN station s2 ON trip.end_station_name = s2.name AND trip.end_station_id = s2.id WHERE    start_date LIKE '%2014%' AND start_station_name != end_station_name;
SELECT      DIVIDE(SUM(duration), 3600) AS hour FROM      trip WHERE      start_station_name != end_station_name AND      bike_id = 16;
SELECT    MULTIPLY(DIVIDE(COUNT(subscription_type = 'Customer'), COUNT(subscription_type = 'Subscriber')), 1.0) AS ratio FROM    trip WHERE    end_station_name LIKE '%Mountain View%' OR start_station_name LIKE '%Mountain View%';
SELECT SUM(DIVIDE(SUM(duration), 3600)) AS total_trip_duration_in_hour FROM trip WHERE start_station_name LIKE '%Palo Alto%';
SELECT    t.bike_id,    SUM(DIVIDE(t.duration, 3600)) AS hour FROM    trip t   JOIN station s ON t.start_station_name = s.name   JOIN station e ON t.end_station_name = e.name WHERE    s.city = e.city GROUP BY    t.bike_id ORDER BY    COUNT(t.id) ASC LIMIT 1;
SELECT COUNT(*) FROM trip WHERE start_station_name = 'Market at 4th' AND subscription_type = 'subscriber';
Error: 第 9090 个样本有 0 个SQL。
SELECT city, SUM(dock_count)  FROM station  WHERE name = 'Townsend at 7th Station';
SELECT SUM(dock_count), COUNT(*) FROM station WHERE name = 'Evelyn Park and Ride' JOIN trip ON station.name = trip.start_station_name WHERE subscription_type = 'subscriber';
SELECT COUNT(subscription_type) AS num_subscribers, MAX(max_temperature_f) AS hottest_temp FROM trip JOIN weather ON trip.zip_code = weather.zip_code WHERE zip_code = 94301 AND subscription_type = 'Subscriber';
SELECT      (SUM(subscription_type = 'Customer') / SUM(subscription_type = 'Subscriber')) * 100 AS percentage FROM      trip WHERE      start_station_id IN (SELECT id FROM station WHERE city = 'San Francisco')     AND subscription_type IN ('Customer', 'Subscriber');
SELECT AVG(duration) AS average_duration, lat, long FROM trip JOIN station ON trip.start_station_name = station.name WHERE start_station_name = 'Santa Clara at Almaden';
SELECT      MIN(t.duration) AS shortest_trip_duration,     w.max_wind_Speed_mph AS max_wind_speed FROM      trip t JOIN      station s ON t.start_station_name = s.name JOIN      weather w ON t.start_date = w.date AND s.city = w.zip_code WHERE      t.start_station_name = 'Franklin at Maple' GROUP BY      w.date
SELECT SUM(s.bikes_available) AS total_bikes_borrowed, s.lat, s.long FROM status s JOIN station st ON s.station_id = st.id WHERE st.name = 'San Jose Diridon Caltrain Station' AND s.time = '2013-10-20 08:11:01';
SELECT s.city FROM station s JOIN trip t ON s.id = t.start_station_id WHERE t.id = 585842 AND s.installation_date = (     SELECT MIN(installation_date)     FROM station );
SELECT COUNT(DISTINCT s.name)  FROM station s  JOIN status st ON s.id = st.station_id  JOIN trip t ON s.id = t.start_station_id  WHERE s.installation_date = '8/16/2013' AND t.subscription_type = 'customers';
SELECT s2.lat, s2.long FROM trip t JOIN station s1 ON t.start_station_name = s1.name AND t.start_date = '2013-08-29' AND t.start_time = '12:45:00' JOIN station s2 ON t.end_station_name = s2.name WHERE s1.name = 'Market at 4th';
SELECT COUNT(*) FROM trip WHERE end_station_name = 'MLK Library'   AND subscription_type = 'subscriber'; SELECT dock_count FROM station WHERE name = 'MLK Library';
SELECT    AVG(w.min_temperature_f) AS avg_coldest_temp,   s.name, s.lat, s.long FROM    weather w   JOIN station s ON w.zip_code = s.city WHERE    w.zip_code = '94301' GROUP BY    s.name, s.lat, s.long;
SELECT    AVG(DIVIDE(SUM(t.duration), COUNT(t.id))) AS average_duration FROM    trip t   JOIN station s ON t.start_station_id = s.id   JOIN station s2 ON t.end_station_id = s2.id WHERE    s.name = 'Mountain View City Hall' AND s2.name = 'Mountain View City Hall'   AND t.subscription_type = 'subscriptions'   AND s.city = 'Mountain View'   AND s.installation_date = (SELECT MIN(installation_date) FROM station);
SELECT description FROM film_text WHERE title = 'ACADEMY DINOSAUR';
Error: 第 9105 个样本有 0 个SQL。
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM film   WHERE release_year = 2006 ) AND rental_rate = 2.99;
Error: 第 9107 个样本有 0 个SQL。
Error: 第 9108 个样本有 0 个SQL。
Error: 第 9109 个样本有 0 个SQL。
SELECT COUNT(*) FROM film WHERE rental_rate = 2.99 AND special_features LIKE '%Deleted Scenes%';
Error: 第 9111 个样本有 0 个SQL。
SELECT email FROM staff WHERE first_name = 'Jon' AND last_name = 'Stephens';
SELECT first_name, last_name  FROM staff  WHERE active = 1;
Error: 第 9114 个样本有 0 个SQL。
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM film   ORDER BY replacement_cost DESC   LIMIT 3 )
Error: 第 9116 个样本有 0 个SQL。
Error: 第 9117 个样本有 0 个SQL。
SELECT ft.title FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'PENELOPE' AND a.last_name = 'GUINESS';
Error: 第 9119 个样本有 0 个SQL。
SELECT a.first_name, a.last_name FROM film_actor fa JOIN actor a ON fa.actor_id = a.actor_id WHERE fa.film_id IN (   SELECT f.film_id   FROM film f   WHERE f.title = 'ACADEMY DINOSAUR' );
Error: 第 9121 个样本有 0 个SQL。
SELECT ft.title FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'PENELOPE' AND a.last_name = 'GUINESS' ORDER BY f.replacement_cost DESC LIMIT 1;
SELECT a.first_name, a.last_name FROM film_actor fa JOIN actor a ON fa.actor_id = a.actor_id WHERE fa.film_id IN (   SELECT f.film_id   FROM film f   WHERE f.replacement_cost = (     SELECT MAX(replacement_cost)     FROM film   ) )
SELECT COUNT(*)  FROM film_text  JOIN film_actor ON film_text.film_id = film_actor.film_id  JOIN actor ON film_actor.actor_id = actor.actor_id  JOIN film ON film_text.film_id = film.film_id  JOIN language ON film.language_id = language.language_id  WHERE actor.first_name = 'PENELOPE' AND actor.last_name = 'GUINESS' AND language.name = 'English';
Error: 第 9125 个样本有 0 个SQL。
Error: 第 9126 个样本有 0 个SQL。
SELECT COUNT(*)  FROM film  JOIN film_category ON film.film_id = film_category.film_id  JOIN category ON film_category.category_id = category.category_id  WHERE category.name = 'Horror';
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM film_category   WHERE category_id IN (     SELECT category_id     FROM category     WHERE name = 'Horror'   ) ) AND rental_rate = 2.99;
SELECT COUNT(rental_id) FROM rental WHERE customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'RUTH' AND last_name = 'MARTINEZ' );
Error: 第 9130 个样本有 0 个SQL。
SELECT COUNT(*) FROM rental JOIN inventory ON rental.inventory_id = inventory.inventory_id JOIN film ON inventory.film_id = film.film_id WHERE rental.customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'RUTH' AND last_name = 'MARTINEZ' ) AND film.release_year = 2006;
SELECT title FROM film WHERE film_id IN (   SELECT film_id   FROM rental   WHERE customer_id IN (     SELECT customer_id     FROM customer     WHERE first_name = 'RUTH' AND last_name = 'MARTINEZ'   ) ) ORDER BY replacement_cost DESC LIMIT 1;
SELECT c.first_name, c.last_name FROM customer c WHERE c.customer_id IN (   SELECT r.customer_id   FROM rental r   JOIN inventory i ON r.inventory_id = i.inventory_id   JOIN film f ON i.film_id = f.film_id   WHERE f.replacement_cost = (     SELECT MAX(replacement_cost)     FROM film   ) );
SELECT COUNT(*)  FROM rental  WHERE customer_id IN (SELECT customer_id FROM customer WHERE first_name = 'RUTH' AND last_name = 'MARTINEZ')  AND EXTRACT(YEAR FROM return_date) = 2005  AND EXTRACT(MONTH FROM return_date) = 8;
SELECT c.first_name, c.last_name FROM customer c WHERE (c.customer_id, COUNT(r.rental_id)) IN (   SELECT customer_id, COUNT(rental_id)   FROM rental r   GROUP BY r.customer_id   ORDER BY COUNT(rental_id) DESC   LIMIT 1 )
SELECT COUNT(*) FROM customer WHERE customer_id IN (   SELECT customer_id   FROM rental   WHERE inventory_id IN (     SELECT inventory_id     FROM inventory     WHERE film_id IN (       SELECT film_id       FROM film       WHERE title = 'ACADEMY DINOSAUR'     )   ) ) AND active = 1;
SELECT f.title FROM film f WHERE f.film_id = (   SELECT fi.film_id   FROM film fi   JOIN rental r ON fi.film_id = r.inventory_id   GROUP BY fi.film_id   ORDER BY COUNT(r.rental_id) DESC   LIMIT 1 );
SELECT first_name, last_name FROM customer WHERE (first_name, last_name) IN (('RUTH', 'MARTINEZ'), ('LINDA', 'WILLIAMS')) ORDER BY (SELECT COUNT(*) FROM rental WHERE customer_id = customer.customer_id) DESC LIMIT 1;
SELECT ft.title FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'PENELOPE' AND a.last_name = 'GUINESS' ORDER BY f.rental_rate / f.rental_duration DESC LIMIT 1;
SELECT AVG(replacement_cost)  FROM film  WHERE film_id IN (SELECT film_id FROM film_category WHERE category_id IN (SELECT category_id FROM category WHERE name = 'Horror'));
SELECT      (COUNT(film_id) FROM film_category WHERE category_id IN (SELECT category_id FROM film_category WHERE film_id IN (SELECT film_id FROM rental WHERE customer_id IN (SELECT customer_id FROM customer WHERE first_name = 'RUTH' AND last_name = 'MARTINEZ')) AND category.name = 'Music')) * 100 /      COUNT(film_id) FROM film_category WHERE film_id IN (SELECT film_id FROM rental WHERE customer_id IN (SELECT customer_id FROM customer WHERE first_name = 'RUTH' AND last_name = 'MARTINEZ'))
Error: 第 9142 个样本有 0 个SQL。
SELECT email FROM customer WHERE first_name = 'Diane' AND last_name = 'Collins';
SELECT COUNT(*) FROM customer WHERE active = 0;
SELECT c.first_name, c.last_name FROM customer c WHERE c.email = 'JEREMY.HURTADO@sakilacustomer.org';
SELECT postal_code FROM address WHERE address_id = 65;
Error: 第 9147 个样本有 0 个SQL。
SELECT phone FROM address WHERE address_id = 72;
Error: 第 9149 个样本有 0 个SQL。
Error: 第 9150 个样本有 0 个SQL。
SELECT description FROM film_text WHERE title = 'ARTIST COLDBLOODED';
Error: 第 9152 个样本有 0 个SQL。
Error: 第 9153 个样本有 0 个SQL。
Error: 第 9154 个样本有 0 个SQL。
SELECT film.rating FROM film JOIN film_actor ON film.film_id = film_actor.film_id JOIN actor ON film_actor.actor_id = actor.actor_id WHERE actor.first_name = 'Dan' AND actor.last_name = 'Harris' AND film.length = 77;
Error: 第 9156 个样本有 0 个SQL。
SELECT return_date FROM rental WHERE customer_id = (SELECT customer_id                      FROM customer                      WHERE first_name = 'Sherri' AND last_name = 'Rhodes') AND rental_date = '2005-07-28 12:27:27';
SELECT s.first_name, s.last_name FROM staff s, store st WHERE s.store_id = st.store_id AND st.store_id = 1;
Error: 第 9159 个样本有 0 个SQL。
Error: 第 9160 个样本有 0 个SQL。
Error: 第 9161 个样本有 0 个SQL。
SELECT COUNT(*)  FROM film  WHERE language_id IN (SELECT language_id FROM language WHERE name = 'English');
SELECT address, address2, district, city, postal_code FROM address WHERE address_id IN (   SELECT address_id   FROM customer   WHERE first_name = 'Heather' AND last_name = 'Morris' );
SELECT email FROM customer WHERE address_id IN (   SELECT address_id   FROM address   WHERE address = '1411 Lillydale Drive' );
Error: 第 9165 个样本有 0 个SQL。
SELECT c.name FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE f.title = 'Working Microcosmos';
Error: 第 9167 个样本有 0 个SQL。
SELECT c.name FROM film_category fc JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY COUNT(fc.film_id) DESC LIMIT 1;
SELECT title FROM film_text WHERE film_id = (SELECT film_id FROM inventory WHERE inventory_id = 3479);
SELECT (SUM(amount) FROM payment WHERE staff_id IN (SELECT staff_id FROM staff WHERE store_id = 2) - SUM(amount) FROM payment WHERE staff_id IN (SELECT staff_id FROM staff WHERE store_id = 1)) / (SELECT SUM(amount) FROM payment WHERE staff_id IN (SELECT staff_id FROM staff WHERE store_id = 1)) * 100 AS percentage_more;
SELECT (COUNT(c.city) FROM city c WHERE c.country = 'India') / (COUNT(c.city) FROM city c WHERE c.country = 'Italy') AS times;
SELECT    (COUNT(film_id)     FROM film_actor     WHERE first_name = 'Gina' AND last_name = 'DeGeneres') /    (COUNT(film_id)     FROM film_actor     WHERE first_name = 'Penelope' AND last_name = 'Guinness') AS result
Error: 第 9173 个样本有 0 个SQL。
Error: 第 9174 个样本有 0 个SQL。
SELECT special_features FROM film WHERE title = 'SMOOCHY CONTROL';
SELECT COUNT(*) FROM payment WHERE amount > 10 AND payment_date LIKE '2005-08%';
Error: 第 9177 个样本有 0 个SQL。
Error: 第 9178 个样本有 0 个SQL。
SELECT first_name, last_name FROM staff WHERE active = 1;
SELECT first_name, last_name FROM staff WHERE store_id = 2 AND manager_staff_id IS NOT NULL;
Error: 第 9181 个样本有 0 个SQL。
Error: 第 9182 个样本有 0 个SQL。
Error: 第 9183 个样本有 0 个SQL。
SELECT c.first_name, c.last_name FROM customer c JOIN rental r ON c.customer_id = r.customer_id WHERE DATEDIFF(r.return_date, r.rental_date) = 7;
SELECT COUNT(*) FROM film_category JOIN category ON film_category.category_id = category.category_id WHERE category.name = 'Horror';
SELECT ft.title FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN rental r ON f.film_id = r.inventory_id GROUP BY ft.title ORDER BY COUNT(r.rental_id) DESC LIMIT 1;
SELECT MAX(frequency) AS most_common_special_features FROM (   SELECT special_features, COUNT(*) AS frequency   FROM film   WHERE category_id IN (     SELECT category_id     FROM film_category     JOIN category ON film_category.category_id = category.category_id     WHERE name = 'Science fiction'   )   GROUP BY special_features ) AS subquery;
SELECT a.first_name, a.last_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id GROUP BY a.actor_id, a.first_name, a.last_name ORDER BY COUNT(fa.film_id) DESC LIMIT 1;
SELECT COUNT(*) FROM film_text JOIN film_category ON film_text.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE film_text.film_id IN (   SELECT film_id   FROM film   WHERE rental_duration = 7 ) AND category.name = 'Comedy';
SELECT s.staff_id, s.first_name, s.last_name FROM staff s JOIN store st ON s.store_id = st.store_id WHERE s.store_id = (   SELECT si.store_id   FROM store si   JOIN customer c ON si.store_id = c.store_id   WHERE c.active = 0   GROUP BY si.store_id   ORDER BY COUNT(c.active = 0) DESC   LIMIT 1 );
SELECT MAX(rental_rate / rental_duration)  FROM film  WHERE name = 'Children' AND rating = 'G';
SELECT address, address2, district FROM address WHERE address_id IN (   SELECT address_id   FROM store   WHERE store_id = 1 );
Error: 第 9193 个样本有 0 个SQL。
SELECT COUNT(*) FROM city WHERE country_id IN (   SELECT country_id   FROM country   WHERE country = 'United States' )
Error: 第 9195 个样本有 0 个SQL。
Error: 第 9196 个样本有 0 个SQL。
SELECT c.first_name, c.last_name FROM customer c WHERE (c.customer_id, c.first_name, c.last_name) IN (   SELECT customer_id, first_name, last_name   FROM customer   WHERE customer_id IN (     SELECT customer_id     FROM rental     GROUP BY customer_id     ORDER BY COUNT(rental_id) DESC     LIMIT 1   ) )
SELECT COUNT(rental_id) FROM rental WHERE inventory_id IN (   SELECT inventory_id   FROM inventory   WHERE film_id IN (     SELECT film_id     FROM film     WHERE title = 'BLANKET BEVERLY'   ) );
SELECT a.first_name, a.last_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id JOIN film f ON fa.film_id = f.film_id WHERE f.rating = 'R' GROUP BY a.actor_id ORDER BY COUNT(f.film_id) DESC LIMIT 1;
SELECT    CONCAT(a.first_name, ' ', a.last_name) AS full_name,    COUNT(f.film_id) AS total_films,    ROUND(AVG(COUNT(f.film_id)) OVER (), 2) AS avg_films FROM    film_actor fa   JOIN actor a ON fa.actor_id = a.actor_id   JOIN film f ON fa.film_id = f.film_id GROUP BY    a.actor_id, a.first_name, a.last_name ORDER BY    total_films DESC LIMIT 5;
SELECT actor_id FROM actor WHERE last_name = 'KILMER';
SELECT title FROM film WHERE rating = 'G' ORDER BY replacement_cost ASC LIMIT 1;
Error: 第 9203 个样本有 0 个SQL。
SELECT COUNT(r.rental_id) FROM rental r WHERE r.rental_date = '2005-05-26' AND r.return_date = '2005-05-30';
SELECT AVG(amount)  FROM payment;
Error: 第 9206 个样本有 0 个SQL。
SELECT (COUNT(customer_id) * 100.0 / (SELECT COUNT(*) FROM customer)) AS percentage FROM customer WHERE active = 0;
SELECT title, description FROM film_text WHERE film_id = 996;
Error: 第 9209 个样本有 0 个SQL。
Error: 第 9210 个样本有 0 个SQL。
Error: 第 9211 个样本有 0 个SQL。
SELECT COUNT(*)  FROM film  WHERE rating = 'PG-13'  AND film_id IN (SELECT film_id FROM film_category WHERE category_id IN (SELECT category_id FROM category WHERE name = 'Horror'));
SELECT f.title, c.name  FROM film f JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Judy' AND a.last_name = 'Dean' JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id ORDER BY c.name;
SELECT ft.title FROM film_text ft JOIN film_category fc ON ft.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'Documentary';
SELECT language.name, film.rental_rate / film.rental_duration AS rental_cost_per_day FROM film_text JOIN film ON film_text.film_id = film.film_id JOIN language ON film.language_id = language.language_id WHERE film_text.title = 'UNTOUCHABLES SUNRISE';
SELECT title  FROM film_text  WHERE film_id IN (SELECT film_id                    FROM rental                    WHERE rental_date LIKE '2005-05-24%');
SELECT ft.title FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN rental r ON f.film_id = r.inventory_id JOIN payment p ON r.rental_id = p.rental_id JOIN customer c ON r.customer_id = c.customer_id WHERE c.first_name = 'Brian' AND c.last_name = 'Wyman' AND EXTRACT(YEAR FROM r.rental_date) = 2005 AND EXTRACT(MONTH FROM r.rental_date) = 7;
SELECT i.inventory_id, a.first_name, a.last_name FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE ft.title = 'STREETCAR INTENTIONS';
Error: 第 9219 个样本有 0 个SQL。
SELECT rental_id FROM rental WHERE customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'Eleanor' AND last_name = 'Hunt' );
SELECT c.first_name, c.last_name, a.city FROM customer c JOIN address a ON c.address_id = a.address_id JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE f.title = 'DREAM PICKUP';
SELECT DIVIDE(SUM(c.country_id = (SELECT country_id FROM country WHERE country = 'India')), COUNT(c.customer_id)) * 100 AS percent_of_customers_in_india FROM customer c JOIN address a ON c.address_id = a.address_id JOIN city ci ON a.city_id = ci.city_id JOIN country co ON ci.country_id = co.country_id;
SELECT DIVIDE(SUBTRACT(   (SELECT SUM(length) FROM film WHERE title IN      (SELECT title FROM film_text WHERE title LIKE '%Mary Keitel%')),   (SELECT SUM(length) FROM film WHERE title IN      (SELECT title FROM film_text WHERE title LIKE '%Angela Witherspoon%'))),    (SELECT SUM(length) FROM film WHERE title IN      (SELECT title FROM film_text WHERE title LIKE '%Angela Witherspoon%')))*100 AS percentage;
SELECT c.email, a.address, c.city, c.country FROM customer c JOIN address a ON c.address_id = a.address_id JOIN city cty ON a.city_id = cty.city_id JOIN country cntry ON cty.country_id = cntry.country_id WHERE c.first_name = 'Lillie' AND c.last_name = 'Kim';
SELECT c.first_name, c.last_name FROM customer c JOIN payment p ON c.customer_id = p.customer_id JOIN staff s ON p.staff_id = s.staff_id WHERE s.first_name = 'Mike Hillyer' LIMIT 5;
SELECT SUM(amount)  FROM payment  WHERE customer_id IN (SELECT customer_id                        FROM customer                        WHERE (first_name = 'Diane' AND last_name = 'Collins'));
SELECT c.first_name, c.last_name, c.email FROM customer c WHERE c.customer_id IN (   SELECT p.customer_id   FROM payment p   WHERE p.amount > (SELECT AVG(amount) * 0.7 FROM payment) );
Error: 第 9228 个样本有 0 个SQL。
SELECT COUNT(*)  FROM customer  WHERE customer_id < 100 AND last_name = 'Thomas';
SELECT a.last_name FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE ft.title = 'A Thoughtful Drama of a Composer And a Feminist who must Meet a Secret Agent in The Canadian Rockies';
SELECT ft.title FROM film ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Liza' AND a.last_name = 'Bergman' ORDER BY ft.replacement_cost DESC LIMIT 1;
SELECT title FROM film WHERE film_id IN (   SELECT film_id   FROM inventory   WHERE store_id = 2 ) AND rental_rate = (   SELECT MAX(rental_rate)   FROM film   WHERE film_id IN (     SELECT film_id     FROM inventory     WHERE store_id = 2   ) );
Error: 第 9233 个样本有 0 个SQL。
SELECT inventory_id FROM film_text JOIN film ON film_text.film_id = film.film_id WHERE title = 'African Egg';
SELECT COUNT(*) FROM film_actor JOIN film ON film_actor.film_id = film.film_id JOIN actor ON film_actor.actor_id = actor.actor_id WHERE film.length = 113 AND (actor.first_name = 'Kirk' AND actor.last_name = 'Jovovich');
Error: 第 9236 个样本有 0 个SQL。
SELECT COUNT(DISTINCT fa.film_id) FROM film_actor fa JOIN film f ON fa.film_id = f.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE f.rental_rate = 4.99 AND a.first_name = 'Bob' AND a.last_name = 'Fawcett';
SELECT i.inventory_id FROM film_actor fa JOIN film f ON fa.film_id = f.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Russell' AND a.last_name = 'Close' AND f.length BETWEEN 110 AND 150;
SELECT s.store_id, i.inventory_id FROM inventory i JOIN film f ON i.film_id = f.film_id WHERE f.length = (SELECT MAX(length) FROM film);
SELECT ft.title  FROM film_text ft  JOIN film_actor fa ON ft.film_id = fa.film_id  JOIN actor a ON fa.actor_id = a.actor_id  WHERE a.first_name = 'Elvis' AND a.last_name = 'Marx';
SELECT inventory_id FROM film JOIN film_actor ON film.film_id = film_actor.film_id JOIN actor ON film_actor.actor_id = actor.actor_id WHERE film.rental_rate = 4.99 AND (actor.first_name = 'Lucille' AND actor.last_name = 'Dee');
SELECT film_id FROM film WHERE rental_rate > (SELECT AVG(rental_rate) FROM film) * 0.6;
SELECT      DIVIDE(SUM(CASE WHEN f.rating = 'G' THEN 1 ELSE 0 END),             SUM(1)) * 100 AS percentage FROM      film f JOIN      film_actor fa ON f.film_id = fa.film_id JOIN      actor a ON fa.actor_id = a.actor_id WHERE      a.first_name = 'Nick' AND a.last_name = 'Wahlberg';
SELECT address FROM address WHERE district = 'Texas' ORDER BY city_id ASC;
SELECT c.first_name, c.last_name, c.email FROM customer c WHERE c.active = 0 AND c.create_date = '2006';
SELECT DIVIDE(SUM(CASE WHEN rating = 'PG-13' THEN 1 ELSE 0 END), SUM(1)) * 100 AS percentage FROM film;
SELECT f.title, MAX(f.rental_rate) AS max_price_per_day FROM film f GROUP BY f.title ORDER BY max_price_per_day DESC LIMIT 10;
SELECT AVG(amount)  FROM payment  WHERE customer_id = 15;
SELECT COUNT(*) FROM rental WHERE DATEDIFF(return_date, rental_date) > (SELECT AVG(DATEDIFF(return_date, rental_date)) FROM rental);
SELECT DIVIDE(COUNT(film_text.title), COUNT(category.name)) * 100 AS horror_percentage FROM film_text JOIN film_category ON film_text.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE category.name = 'Horror';
SELECT CONCAT(a.first_name, ' ', a.last_name) AS full_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id GROUP BY a.actor_id, a.first_name, a.last_name ORDER BY COUNT(fa.film_id) DESC LIMIT 1;
SELECT a.first_name, a.last_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id JOIN film f ON fa.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'Drama' GROUP BY a.first_name, a.last_name ORDER BY COUNT(f.film_id) DESC LIMIT 1;
SELECT AVG(Aus) - AVG(Can) AS difference FROM (   SELECT AVG(CASE WHEN c.country = 'Australia' THEN 1 ELSE 0 END) AS Aus,          AVG(CASE WHEN c.country = 'Canada' THEN 1 ELSE 0 END) AS Can   FROM rental r   JOIN city c ON r.customer_id IN (     SELECT c.customer_id     FROM customer c     JOIN address a ON c.address_id = a.address_id     JOIN city ci ON a.city_id = ci.city_id     JOIN country co ON ci.country_id = co.country_id     WHERE co.country IN ('Australia', 'Canada')   ) ) AS subquery;
SELECT      DIVIDE(COUNT(film_category.category_id),             (SELECT COUNT(category_id) FROM film_category WHERE name = 'action')) * 100 AS percentage FROM      film_actor     JOIN film ON film_actor.film_id = film.film_id     JOIN film_category ON film.film_id = film_category.film_id WHERE      first_name = 'Reese' AND last_name = 'Kilmer';
Error: 第 9255 个样本有 0 个SQL。
SELECT c.first_name, c.last_name FROM customer c WHERE c.customer_id IN (   SELECT r.customer_id   FROM rental r   GROUP BY r.customer_id   HAVING COUNT(f.film_id) > 5 )
SELECT AVG(COUNT(actor_id))  FROM film_actor  JOIN film ON film_actor.film_id = film.film_id  JOIN film_category ON film.film_id = film_category.film_id  JOIN category ON film_category.category_id = category.category_id  WHERE category.name = 'comedy';
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM film_category   WHERE category_id IN (     SELECT category_id     FROM category     WHERE name = 'children'   ) ) ORDER BY (   SELECT COUNT(title)   FROM film_text   WHERE film_id IN (     SELECT film_id     FROM film_category     WHERE category_id IN (       SELECT category_id       FROM category       WHERE name = 'children'     )   )   ) DESC LIMIT 1;
SELECT (COUNT(DISTINCT p.customer_id) / (SELECT COUNT(*) FROM customer WHERE store_id = 1)) * 100 FROM payment p WHERE p.amount > (SELECT AVG(amount) FROM payment WHERE staff_id IN (SELECT staff_id FROM customer WHERE store_id = 1));
SELECT c.first_name, c.last_name FROM customer c WHERE c.customer_id IN (   SELECT r.customer_id   FROM rental r   JOIN film_category fc ON r.inventory_id = fc.inventory_id   JOIN category c2 ON fc.category_id = c2.category_id   GROUP BY r.customer_id   HAVING COUNT(CASE WHEN c2.name = 'Family' THEN 1 END) > COUNT(CASE WHEN c2.name = 'Sci-Fi' THEN 1 END) )
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM film   WHERE rating = 'NC-17' );
SELECT COUNT(*) FROM actor WHERE last_name = 'Kilmer';
Error: 第 9263 个样本有 0 个SQL。
Error: 第 9264 个样本有 0 个SQL。
SELECT country.country FROM country JOIN city ON country.country_id = city.country_id JOIN address ON city.city_id = address.city_id WHERE address.address = '1386 Nakhon Sawan Boulevard';
Error: 第 9266 个样本有 0 个SQL。
SELECT ft.title FROM film_text ft JOIN film_category fc ON ft.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'classics';
Error: 第 9268 个样本有 0 个SQL。
SELECT COUNT(DISTINCT c.customer_id) FROM customer c JOIN staff s ON c.store_id = s.store_id JOIN rental r ON c.customer_id = r.customer_id WHERE s.first_name = 'Jon' AND s.last_name = 'Stephens';
SELECT SUM(amount)  FROM payment  WHERE rental_id IN (   SELECT rental_id    FROM rental    WHERE rental_date LIKE '2005-07-29%' )
SELECT first_name FROM customer WHERE address_id IN (   SELECT address_id   FROM address   WHERE postal_code LIKE '76%' );
SELECT return_date FROM rental WHERE inventory_id IN (   SELECT inventory_id   FROM inventory   WHERE film_id IN (     SELECT film_id     FROM film     WHERE title = 'BLOOD ARGONAUTS'   ) );
SELECT ft.title FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Cuba' AND a.last_name = 'Allen';
SELECT COUNT(DISTINCT fa.actor_id) FROM film_actor fa JOIN film f ON fa.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'Music';
SELECT a.first_name, a.last_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id JOIN film f ON fa.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'comedy' GROUP BY a.first_name, a.last_name ORDER BY COUNT(fa.actor_id) DESC LIMIT 1;
SELECT COUNT(*) FROM customer WHERE customer_id NOT IN (   SELECT customer_id   FROM rental   WHERE staff_id IN (     SELECT staff_id     FROM staff     WHERE first_name = 'Mike'   ) )
SELECT a.first_name, a.last_name FROM film_actor fa JOIN actor a ON fa.actor_id = a.actor_id JOIN film f ON fa.film_id = f.film_id WHERE f.rating = 'PG-13' ORDER BY f.replacement_cost DESC LIMIT 1;
SELECT c.first_name, c.last_name FROM customer c WHERE c.customer_id IN (   SELECT r.customer_id   FROM rental r   WHERE r.return_date IS NULL   GROUP BY r.customer_id   ORDER BY COUNT(r.rental_id) DESC   LIMIT 1 )
Error: 第 9279 个样本有 0 个SQL。
SELECT COUNT(*) FROM customer WHERE active = 0 AND customer_id NOT IN (   SELECT customer_id   FROM rental   WHERE return_date IS NOT NULL )
Error: 第 9281 个样本有 0 个SQL。
SELECT c.country FROM store s JOIN address a ON s.address_id = a.address_id JOIN city ci ON a.city_id = ci.city_id JOIN country c ON ci.country_id = c.country_id JOIN customer cu ON s.store_id = cu.store_id WHERE cu.first_name = 'Hector' AND cu.last_name = 'Poinexter';
SELECT AVG(p.amount)  FROM payment p  JOIN rental r ON p.rental_id = r.rental_id  JOIN inventory i ON r.inventory_id = i.inventory_id  JOIN film f ON i.film_id = f.film_id  JOIN film_category fc ON f.film_id = fc.film_id  JOIN category c ON fc.category_id = c.category_id  WHERE c.name = 'Horror';
SELECT AVG(amount)  FROM payment  WHERE customer_id IN (SELECT customer_id                        FROM customer                        WHERE first_name = 'Christy' AND last_name = 'Vargas');
SELECT DIVIDE(SUM(CASE WHEN length < 100 AND category.name = 'Drama' THEN 1 ELSE 0 END),                COUNT(film_id)) * 100 AS percentage FROM film  JOIN film_category ON film.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id;
SELECT a.first_name, a.last_name FROM actor a WHERE a.first_name IN (SELECT first_name FROM actor WHERE first_name = 'Johnny');
Error: 第 9287 个样本有 0 个SQL。
SELECT c.name AS "types of film", c.category_id AS "IDs", c.last_update AS "latest update" FROM category c ORDER BY c.last_update DESC LIMIT 3;
SELECT CONCAT(c.first_name, ' ', c.last_name) AS full_name FROM customer c WHERE c.active = 0 LIMIT 3;
SELECT rental_rate / rental_duration AS rental_price_per_day FROM film WHERE title = 'Airplane Sierra';
Error: 第 9291 个样本有 0 个SQL。
SELECT city FROM address WHERE address = '1623 Kingstown Drive';
SELECT city.city FROM city JOIN country ON city.country_id = country.country_id WHERE country.country = 'Algeria' LIMIT 3;
Error: 第 9294 个样本有 0 个SQL。
Error: 第 9295 个样本有 0 个SQL。
SELECT AVG(CASE WHEN c.name = 'children' THEN 1 ELSE 0 END) - AVG(CASE WHEN c.name = 'action' THEN 1 ELSE 0 END) AS difference FROM film_category fc JOIN category c ON fc.category_id = c.category_id GROUP BY fc.film_id
SELECT a.district FROM customer c, address a WHERE c.first_name = 'Maria' AND c.last_name = 'Miller' AND c.address_id = a.address_id;
SELECT first_name, last_name FROM customer WHERE active = 1 AND address_id IN (   SELECT address_id   FROM address   WHERE address = '1795 Santiago de Compostela Way' AND district = 'Texas' );
SELECT COUNT(*) FROM film WHERE language_id IN (SELECT language_id FROM language WHERE name = 'English') AND length > 50 AND replacement_cost < 10.99;
SELECT a.first_name, a.last_name FROM film_actor fa JOIN actor a ON fa.actor_id = a.actor_id WHERE fa.film_id IN (   SELECT f.film_id   FROM film f   WHERE f.title = 'ACADEMY DINOSAUR' );
Error: 第 9301 个样本有 0 个SQL。
SELECT DIVIDE(SUM(CASE WHEN c.name = 'Documentary' THEN 1 ELSE 0 END), COUNT(f.film_id)) * 100 FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id;
SELECT COUNT(*) FROM film WHERE language_id IN (SELECT language_id FROM language WHERE name = 'English') AND rating = 'NC-17';
SELECT title, MAX(length) AS longest_duration FROM film GROUP BY title;
SELECT COUNT(*) FROM actor WHERE first_name = 'Dan';
SELECT first_name FROM customer GROUP BY first_name ORDER BY COUNT(first_name) DESC LIMIT 1;
SELECT film.rating FROM film WHERE film.special_features = 'Behind the Scenes';
SELECT MAX(rental_id) AS max_rental_id FROM rental GROUP BY customer_id ORDER BY COUNT(rental_id) DESC LIMIT 1;
SELECT title  FROM film_text  WHERE description LIKE '%Lacklusture%';
Error: 第 9310 个样本有 0 个SQL。
SELECT s.first_name, s.last_name FROM staff s JOIN store st ON s.store_id = st.store_id JOIN inventory i ON st.store_id = i.store_id GROUP BY s.first_name, s.last_name ORDER BY COUNT(i.film_id) DESC LIMIT 1;
Error: 第 9312 个样本有 0 个SQL。
SELECT c.name, COUNT(f.film_id) as count FROM film_category f JOIN category c ON f.category_id = c.category_id GROUP BY f.category_id, c.name ORDER BY count DESC LIMIT 1;
SELECT a.first_name, a.last_name FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE ft.title = 'Jason trap';
SELECT c.first_name, c.last_name FROM customer c JOIN payment p ON c.customer_id = p.customer_id WHERE p.rental_id IN (SELECT r.rental_id FROM rental r) GROUP BY c.customer_id ORDER BY SUM(p.amount) DESC LIMIT 1;
SELECT f.title, COUNT(i.inventory_id) AS total_rented FROM film f JOIN inventory i ON f.film_id = i.film_id GROUP BY f.title ORDER BY total_rented DESC LIMIT 5;
SELECT country.country FROM country JOIN city ON country.country_id = city.country_id WHERE city.city = 'Sasebo';
SELECT a.address, a.address2, c.city, c.country FROM store s JOIN address a ON s.address_id = a.address_id JOIN city c ON a.city_id = c.city_id JOIN country cc ON c.country_id = cc.country_id;
Error: 第 9319 个样本有 0 个SQL。
Error: 第 9320 个样本有 0 个SQL。
Error: 第 9321 个样本有 0 个SQL。
SELECT DIVIDE(SUM(fc.category_id = (SELECT category_id FROM category WHERE name = 'Horror')), COUNT(f.film_id)) * 100 AS horror_percentage FROM film f JOIN film_category fc ON f.film_id = fc.film_id;
SELECT CONCAT(actors.first_name, ' ', actors.last_name)  FROM actor  WHERE actor_id = 5;
Error: 第 9324 个样本有 0 个SQL。
SELECT c.name FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE f.title = 'BABY HALL';
SELECT CONCAT(a.first_name, ' ', a.last_name) AS full_name FROM actor a JOIN film_actor fa ON a.actor_id = fa.actor_id JOIN film f ON fa.film_id = f.film_id WHERE f.rental_rate = (SELECT MAX(rental_rate) FROM film);
SELECT ft.description FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'JENNIFER' AND a.last_name = 'DAVIS';
SELECT c.first_name, c.last_name FROM customer c JOIN payment p ON c.customer_id = p.customer_id WHERE p.amount > 10;
SELECT a.address, a.postal_code FROM customer c JOIN address a ON c.address_id = a.address_id WHERE c.first_name = 'SUSAN' AND a.postal_code = '77948';
SELECT c.first_name, c.last_name FROM customer c JOIN address a ON c.address_id = a.address_id JOIN city ci ON a.city_id = ci.city_id WHERE ci.city = 'Abu Dhabi';
SELECT c.first_name, c.last_name FROM customer c JOIN address a ON c.address_id = a.address_id WHERE a.address = '692 Joliet Street';
SELECT ft.title FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE f.length > 120 AND c.name = 'action';
SELECT a.actor_id, a.first_name, a.last_name FROM film f JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE f.title = 'ANONYMOUS HUMAN';
Error: 第 9334 个样本有 0 个SQL。
SELECT ft.description  FROM film_text ft  JOIN film f ON ft.film_id = f.film_id  JOIN film_category fc ON f.film_id = fc.film_id  JOIN category c ON fc.category_id = c.category_id  WHERE c.name = 'Travel';
Error: 第 9336 个样本有 0 个SQL。
SELECT (SUM(p.amount) FROM payment p WHERE p.customer_id IN (SELECT c.customer_id FROM customer c WHERE c.first_name = 'MARGARET' AND c.last_name = 'MOORE')) / (SELECT SUM(amount) FROM payment) * 100
SELECT ROUND((COUNT(ft.title) / (SELECT COUNT(*) FROM film_text)) * 100, 2) FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE f.length > 120 AND c.name = 'Horror';
Error: 第 9339 个样本有 0 个SQL。
Error: 第 9340 个样本有 0 个SQL。
SELECT film_id FROM film WHERE rental_duration = (SELECT MAX(rental_duration) FROM film);
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM film   ORDER BY rental_rate DESC   LIMIT 1 );
Error: 第 9343 个样本有 0 个SQL。
SELECT language.name FROM film_text JOIN film ON film_text.film_id = film.film_id JOIN language ON film.language_id = language.language_id WHERE film_text.title = 'CHILL LUCK';
Error: 第 9345 个样本有 0 个SQL。
SELECT COUNT(*) FROM film_text WHERE film_id IN (   SELECT film_id   FROM film   WHERE language_id IN (     SELECT language_id     FROM language     WHERE name = 'Italian'   )   AND special_features LIKE '%deleted scenes%' );
SELECT COUNT(title) FROM film_text WHERE film_id IN (   SELECT film_id   FROM film   WHERE category_id IN (     SELECT category_id     FROM film_category     WHERE category_id IN (       SELECT category_id       FROM category       WHERE name = 'animation'     )   )   AND rating = 'NC-17';
SELECT film.title, film.rating FROM film JOIN film_category ON film.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE category.name = 'action';
SELECT film_id FROM film JOIN film_category ON film.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE category.name = 'comedy';
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM film   WHERE special_features LIKE '%Behind the scenes%'   AND name = 'documentary' ) ORDER BY length DESC LIMIT 1;
SELECT c.name FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE f.title = 'BLADE POLISH';
SELECT rental_id FROM payment WHERE customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'Mary' AND last_name = 'Smith' )
Error: 第 9353 个样本有 0 个SQL。
SELECT email FROM customer WHERE customer_id IN (   SELECT customer_id   FROM payment   WHERE staff_id = 2 );
Error: 第 9355 个样本有 0 个SQL。
Error: 第 9356 个样本有 0 个SQL。
SELECT ft.title FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Jane' AND a.last_name = 'Jackman';
Error: 第 9358 个样本有 0 个SQL。
SELECT SUM(f.rental_rate)  FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'Animation';
Error: 第 9360 个样本有 0 个SQL。
SELECT (COUNT(f.film_id) * 100 / COUNT(f2.film_id)) AS percentage FROM film f JOIN language l ON f.language_id = l.language_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'Horror' AND l.name = 'English';
Error: 第 9362 个样本有 0 个SQL。
Error: 第 9363 个样本有 0 个SQL。
SELECT email FROM customer WHERE active = 1 AND EXISTS (   SELECT 1   FROM rental   WHERE customer_id = customer.customer_id   AND rental_date BETWEEN '2005-05-25 19:37:47' AND '2005-05-26 10:06:49' );
SELECT SUM(amount)  FROM payment  WHERE customer_id IN (   SELECT customer_id    FROM customer    WHERE first_name = 'Sarah' AND last_name = 'Lewis' );
SELECT COUNT(*) FROM payment WHERE payment_date BETWEEN '2005-05-30 03:43:54' AND '2005-07-31 22:08:29' AND customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'Susan' AND last_name = 'Wilson' )
SELECT CONCAT(a.first_name, ' ', a.last_name) AS full_name FROM film f JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE f.title = 'ALABAMA DEVIL';
SELECT ft.title FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Sandra' AND a.last_name = 'Kilmer';
SELECT COUNT(*) FROM film WHERE special_features LIKE '%Behind the scenes%' AND rating = 'PG-13';
Error: 第 9370 个样本有 0 个SQL。
SELECT a.first_name, a.last_name FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE ft.title = 'AFRICAN EGG';
Error: 第 9372 个样本有 0 个SQL。
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM rental   WHERE customer_id IN (     SELECT customer_id     FROM customer     WHERE first_name = 'Dorothy' AND last_name = 'Taylor'   )   ORDER BY rental_date DESC   LIMIT 1 )
SELECT COUNT(*) FROM film WHERE film_id IN (   SELECT film_id   FROM film_category   WHERE category_id IN (     SELECT category_id     FROM category     WHERE name = 'Action'   ) ) AND rental_rate > 0;
Error: 第 9375 个样本有 0 个SQL。
SELECT DATEDIFF(return_date, rental_date)  FROM rental  WHERE customer_id IN (   SELECT customer_id    FROM customer    WHERE first_name = 'Austin' AND last_name = 'Cintron' ) AND inventory_id IN (   SELECT inventory_id    FROM inventory    WHERE film_id IN (     SELECT film_id      FROM film      WHERE title = 'DESTINY SATURDAY'   ) );
SELECT COUNT(*)  FROM film_actor fa  JOIN actor a ON fa.actor_id = a.actor_id  WHERE a.first_name = 'Nick' AND a.last_name = 'Stallone';
SELECT ft.title FROM film_text ft JOIN film f ON ft.film_id = f.film_id WHERE f.length = (   SELECT MIN(length)   FROM film ) ORDER BY f.rental_duration * f.rental_rate DESC LIMIT 1;
SELECT SUM(amount) FROM payment WHERE customer_id IN (SELECT customer_id FROM customer WHERE first_name = 'Stephanie' AND last_name = 'Mitchell') AND payment_date LIKE '2005-06%';
SELECT AVG(replacement_cost) FROM film WHERE rental_rate = 4.99;
Error: 第 9381 个样本有 0 个SQL。
SELECT (COUNT(c.customer_id) WHERE c.active = 0) / COUNT(c.customer_id) * 100 AS percentage FROM customer c WHERE c.store_id = 1 AND c.active = 0;
SELECT rental_duration FROM film WHERE title = 'DIRTY ACE';
SELECT first_name, last_name FROM customer WHERE email = 'SHEILA.WELLS@sakilacustomer.org';
SELECT title FROM film_text WHERE film_id IN (   SELECT film_id   FROM film   ORDER BY length DESC   LIMIT 1 ) ORDER BY title ASC;
SELECT COUNT(*)  FROM film_category;
SELECT    COUNT(DISTINCT f.title) AS total_titles_rented,   ROUND((COUNT(DISTINCT f.title) WHERE MONTH(r.rental_date) = 6 AND YEAR(r.rental_date) = 2005) / COUNT(DISTINCT f.title) * 100, 2) AS percentage_rented_in_june FROM    film f   JOIN rental r ON f.film_id = r.inventory_id   JOIN customer c ON r.customer_id = c.customer_id WHERE    c.first_name = 'Mary' AND c.last_name = 'Smith' AND r.rental_date BETWEEN '2005-01-01' AND '2005-12-31';
SELECT COUNT(*)  FROM customer  WHERE active = 1;
Error: 第 9389 个样本有 0 个SQL。
SELECT film.title FROM film WHERE rental_duration > 5;
Error: 第 9391 个样本有 0 个SQL。
SELECT c.first_name, c.last_name FROM customer c JOIN payment p ON c.customer_id = p.customer_id WHERE p.amount > 10;
SELECT ft.title  FROM film_text ft  JOIN film_actor fa ON ft.film_id = fa.film_id  JOIN actor a ON fa.actor_id = a.actor_id  WHERE a.first_name = 'Burt' AND a.last_name = 'Dukakis';
SELECT CONCAT(a.first_name, ' ', a.last_name) AS full_name FROM film f JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE f.title = 'ENDING CROWDS';
SELECT a.first_name, a.last_name FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE ft.title = 'BOUND CHEAPER';
SELECT ft.title  FROM film_text ft JOIN film f ON ft.film_id = f.film_id JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.last_name = 'Berr' AND a.first_name = 'Karl' AND f.rating = 'PG';
Error: 第 9397 个样本有 0 个SQL。
SELECT f.title FROM film f WHERE f.film_id NOT IN (   SELECT i.film_id   FROM inventory i   JOIN rental r ON i.inventory_id = r.inventory_id   GROUP BY i.film_id   ORDER BY COUNT(DISTINCT r.customer_id) ASC   LIMIT 1 )
SELECT ft.description FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Lucille' AND a.last_name = 'Tracy';
SELECT c.name FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE f.title = 'BEACH HEARTBREAKERS';
SELECT title FROM film WHERE film_id IN (   SELECT film_id   FROM film_category   WHERE category_id IN (     SELECT category_id     FROM category     WHERE name = 'Horror'   ) );
Error: 第 9402 个样本有 0 个SQL。
SELECT AVG(rental_rate)  FROM film  WHERE film_id IN (   SELECT film_id    FROM film_actor    WHERE actor_id IN (     SELECT actor_id      FROM actor      WHERE first_name = 'Lucille' AND last_name = 'Tracy'   ) );
SELECT COUNT(*) FROM film WHERE length BETWEEN 100 AND 110;
Error: 第 9405 个样本有 0 个SQL。
SELECT COUNT(*) FROM customer WHERE active = 1 AND first_name = 'Nina';
SELECT COUNT(*) FROM film WHERE rating = 'R' AND film_id IN (   SELECT film_id   FROM inventory   WHERE store_id = 2 );
Error: 第 9408 个样本有 0 个SQL。
SELECT f.length FROM film f JOIN film_actor fa ON f.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Nick' AND a.last_name = 'Wahlberg' ORDER BY f.rental_rate DESC LIMIT 1;
SELECT ft.title FROM film_text ft JOIN film_actor fa ON ft.film_id = fa.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.last_name = 'Close' AND a.first_name = 'Russell';
Error: 第 9411 个样本有 0 个SQL。
SELECT COUNT(*) FROM film JOIN film_actor ON film.film_id = film_actor.film_id JOIN actor ON film_actor.actor_id = actor.actor_id WHERE film.rental_rate = 2.99 AND actor.last_name = 'Soto' AND actor.first_name = 'Nina';
SELECT COUNT(film_id) - COUNT(film_id)  FROM film_actor fa JOIN film f ON fa.film_id = f.film_id JOIN actor a ON fa.actor_id = a.actor_id WHERE a.first_name = 'Reese' AND a.last_name = 'West' AND f.film_id IN (SELECT film_id FROM inventory WHERE store_id = 1) AND f.film_id IN (SELECT film_id FROM inventory WHERE store_id = 2)
SELECT phone FROM address WHERE address = '692 Joliet Street';
SELECT COUNT(*)  FROM customer  WHERE active = 1;
SELECT COUNT(*)  FROM customer  WHERE store_id = 1 AND active = 1;
SELECT a.address, a.address2, c.city, c.country FROM customer c JOIN address a ON c.address_id = a.address_id WHERE c.first_name = 'Mary' AND c.last_name = 'Smith';
SELECT COUNT(*)  FROM customer  WHERE active = 1 AND address_id IN (   SELECT address_id    FROM address    WHERE city_id IN (     SELECT city_id      FROM city      WHERE city = 'Arlington'   ) );
SELECT c.first_name, c.last_name FROM customer c JOIN address a ON c.address_id = a.address_id JOIN city ci ON a.city_id = ci.city_id JOIN country co ON ci.country_id = co.country_id WHERE co.country = 'Italy';
Error: 第 9420 个样本有 0 个SQL。
SELECT MAX(amount) FROM payment WHERE customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'Mary' AND last_name = 'Smith' );
Error: 第 9422 个样本有 0 个SQL。
SELECT SUM(amount) FROM payment WHERE customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'Mary' AND last_name = 'Smith' );
Error: 第 9424 个样本有 0 个SQL。
SELECT c.first_name, c.last_name FROM customer c JOIN payment p ON c.customer_id = p.customer_id WHERE p.amount = (SELECT MAX(amount) FROM payment)
SELECT SUM(amount) AS total FROM payment WHERE customer_id IN (   SELECT customer_id   FROM customer   WHERE address_id IN (     SELECT address_id     FROM address     WHERE city_id IN (       SELECT city_id       FROM city       WHERE country_id IN (         SELECT country_id         FROM country         WHERE country = 'Italy'       )     )   ) )
SELECT COUNT(*) FROM payment WHERE customer_id IN (   SELECT customer_id   FROM customer   WHERE first_name = 'Mary' AND last_name = 'Smith' ) AND amount > 4.99;
SELECT AVG(p.amount)  FROM payment p  JOIN customer c ON p.customer_id = c.customer_id  JOIN address a ON c.address_id = a.address_id  JOIN city ci ON a.city_id = ci.city_id  JOIN country co ON ci.country_id = co.country_id  WHERE co.country = 'Italy';
Error: 第 9429 个样本有 0 个SQL。
SELECT * FROM (   SELECT CDSCode, Percent (%) Eligible Free (Ages 5-17) AS Eligible_Free_Rate   FROM frpm   WHERE School Type = 'Continuation'   AND NSLP Provision Status = 'Yes' ) AS frpm ORDER BY Eligible_Free_Rate LIMIT 3;
SELECT DISTINCT Zip FROM schools WHERE County = 'Fresno County Office of Education' AND Charter = 1;
Error: 第 9432 个样本有 0 个SQL。
SELECT Phone FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE Charter School (Y/N) = 1 AND Charter Funding Type = 'Charter' AND OpenDate > '2000-01-01';
SELECT COUNT(*)  FROM schools  WHERE Virtual = 'F'  AND EXISTS (   SELECT 1    FROM satscores    WHERE satscores.cds = schools.CDSCode    AND satscores.AvgScrMath < 400 );
SELECT s.* FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.NumTstTakr > 500 AND (s.Magnet = 1 OR s.GSoffered = 1);
SELECT s.Phone FROM satscores JOIN schools s ON satscores.cds = s.CDSCode WHERE satscores.NumTstTakr > 0 AND satscores.AvgScrRead > 1500 ORDER BY satscores.NumTstTakr DESC LIMIT 1;
Error: 第 9437 个样本有 0 个SQL。
Error: 第 9438 个样本有 0 个SQL。
SELECT frpm.FRPM_Count_Ages_5_17 FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.AvgScrRead = (   SELECT MAX(AvgScrRead)   FROM satscores )
SELECT DISTINCT CDSCode FROM frpm WHERE Enrollment (K-12) + Enrollment (Ages 5-17) > 500;
SELECT MAX(Percent_Eligible_Free_Ages_5_17)  FROM (   SELECT Percent_Eligible_Free_Ages_5_17    FROM satscores    JOIN frpm ON satscores.cds = frpm.CDSCode    WHERE (AvgScrRead + AvgScrMath + AvgScrWrite) / (3 * NumTstTakr) > 0.3  ) AS excellent_schools;
SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds ORDER BY sc.NumGE1500 / sc.NumTstTakr DESC LIMIT 3;
SELECT s.NCESSchool FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode ORDER BY f.Enrollment (Ages 5-17) DESC LIMIT 5;
SELECT dname FROM satscores WHERE rtype = 'D' AND AvgScrRead IS NOT NULL ORDER BY AvgScrRead DESC LIMIT 1;
SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Alameda' AND NumTstTakr < 100;
Error: 第 9446 个样本有 0 个SQL。
SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.County Code = '015' AND schools.Charter = 'Y' AND schools.FundingType = 'Directly Funded' AND frpm.NumTstTakr <= 250;
SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds ORDER BY sc.AvgScrMath DESC LIMIT 1;
SELECT COUNT(*) FROM frpm WHERE County Name = 'Amador' AND Low Grade = 9 AND High Grade = 12;
SELECT COUNT(*) FROM frpm WHERE County Name = 'Los Angeles' AND Enrollment (K-12) > 500 AND Enrollment (K-12) < 700 AND FRPM Count (K-12) > 0;
Error: 第 9451 个样本有 0 个SQL。
SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE ABS(f.Enrollment (K-12) - f.Enrollment (Ages 5-17)) > 30;
SELECT s.School FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores ss ON s.CDSCode = ss.cds WHERE f.Percent (%) Eligible Free (K-12) > 0.1 AND ss.NumTstTakr > 0 AND ss.AvgScrRead >= 1500 OR ss.AvgScrMath >= 1500 OR ss.AvgScrWrite >= 1500;
SELECT    s.School  FROM    schools s  JOIN    satscores ss ON s.CDSCode = ss.cds  WHERE    s.County = 'Riverside'    AND ss.AvgScrMath > 400  GROUP BY    s.School  HAVING    AVG(ss.AvgScrMath) > 400;
SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN frpm f ON s.CDSCode = f.School Code WHERE f.County = 'Monterey' AND f.Percent (%) Eligible FRPM (Ages 15-17) > 0.8 AND f.Enrollment (Ages 15-17) > 0 AND f.Low Grade = '9' AND f.High Grade = '12' AND f.School Type = 'High School';
SELECT    sname,    AvgScrWrite,    Phone AS Communication_Number FROM    satscores   JOIN schools ON satscores.cds = schools.CDSCode WHERE    (schools.ClosedDate < '2000-01-01' OR schools.OpenDate > '1991-01-01') ORDER BY    sname;
SELECT s.School, s.DOCType FROM schools s JOIN frpm f ON s.CDSCode = f.School Code WHERE f.CharterSchool = 'N'  -- locally funded AND (f.Enrollment (K-12) - f.Enrollment (Ages 5-17)) >      (SELECT AVG(f.Enrollment (K-12) - f.Enrollment (Ages 5-17))       FROM frpm f      WHERE f.CharterSchool = 'N')
SELECT OpenDate FROM schools WHERE High Grade = '12' ORDER BY Enrollment (K-12) DESC LIMIT 1;
SELECT c.City FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Enrollment (K-12) IN (   SELECT MIN(Enrollment (K-12))   FROM frpm   GROUP BY County   ORDER BY MIN(Enrollment (K-12)) LIMIT 5 ) ORDER BY Enrollment (K-12);
SELECT    * FROM    (SELECT       CDSCode,       Enrollment(K-12),       Free Meal Count(K-12),       Percent (%) Eligible Free(K-12)   FROM      frpm   WHERE      GradeLevel IN ('10', '11')   ORDER BY      Enrollment(K-12) DESC   LIMIT 10) AS top_schools ORDER BY    Percent (%) Eligible Free(K-12) DESC;
SELECT s.School, sname, FRPM_Count_K_12, Enrollment_K_12,         FRPM_Count_K_12 / Enrollment_K_12 AS Eligible_Free_Reduced_Price_Meal_Rate FROM (   SELECT s.CDSCode, s.School, sname,           SUM(FRPM_Count_K_12) AS FRPM_Count_K_12,           SUM(Enrollment_K_12) AS Enrollment_K_12   FROM frpm f   JOIN schools s ON f.CDSCode = s.CDSCode   WHERE District_Type = '66' AND Low_Grade = 1 AND High_Grade = 12   GROUP BY s.CDSCode, s.School, sname   ORDER BY FRPM_Count_K_12 DESC   LIMIT 5 ) AS top_schools JOIN satscores sc ON top_schools.CDSCode = sc.cds ORDER BY top_schools.School;
Error: 第 9462 个样本有 0 个SQL。
Error: 第 9463 个样本有 0 个SQL。
SELECT AdmEmail1 FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE Charter School (Y/N) = 1 ORDER BY Enrollment (K-12) LIMIT 1;
SELECT      CONCAT_WS(' ', AdmFName1, AdmLName1) AS Full_Name FROM      schools WHERE      CDSCode IN (         SELECT              s.CDSCode         FROM              satscores s         WHERE              NumGE1500 > 0         ORDER BY              NumGE1500 DESC         LIMIT 1     );
SELECT s.Street, s.City, s.State, s.Zip FROM satscores s JOIN frpm f ON s.cds = f.CDSCode JOIN schools sc ON f.CDSCode = sc.CDSCode ORDER BY s.AvgScrWrite / s.NumTstTakr ASC LIMIT 1;
Error: 第 9467 个样本有 0 个SQL。
Error: 第 9468 个样本有 0 个SQL。
SELECT Phone FROM schools WHERE District = 'Fresno Unified' ORDER BY AvgScrRead ASC LIMIT 1;
SELECT s.sname, AVG(ss.AvgScrRead) AS Avg_Read_Score FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE s.Virtual = 'F' AND ss.NumTstTakr > 0 GROUP BY s.sname ORDER BY Avg_Read_Score DESC LIMIT 5;
SELECT s.GSoffered  FROM satscores AS s JOIN schools AS sch ON s.cds = sch.CDSCode ORDER BY s.AvgScrMath DESC LIMIT 1;
SELECT AVG(AvgScrMath + AvgScrRead + AvgScrWrite) AS Average_Math_Score,         cname AS County FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode WHERE (AvgScrMath + AvgScrRead + AvgScrWrite) = (   SELECT MIN(AvgScrMath + AvgScrRead + AvgScrWrite)   FROM satscores ) GROUP BY cname;
SELECT s.City FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr = (     SELECT MAX(satscores.NumTstTakr)     FROM satscores     WHERE satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite >= 1500 ) AND satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite >= 1500 GROUP BY s.City
SELECT s.School, AVG(ss.AvgScrWrite) AS Avg_Writing_Score FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores ss ON f.CDSCode = ss.cds WHERE f.District Code IN (   SELECT s.CDSCode   FROM schools s   WHERE s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich' ) GROUP BY s.School;
Error: 第 9475 个样本有 0 个SQL。
SELECT AVG(COUNT(*))  FROM schools  WHERE County = 'Alameda' AND District = 'Elementary School District' AND YEAR(OpenDate) = 1980 AND DOC = 52;
Error: 第 9477 个样本有 0 个SQL。
SELECT s.County, s.School, s.ClosedDate FROM schools s WHERE s.StatusType = 'Closed' GROUP BY s.County, s.School, s.ClosedDate ORDER BY COUNT(*) DESC;
SELECT s.Street, s.School FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode ORDER BY s.AvgScrMath DESC LIMIT 1 OFFSET 5;
Error: 第 9480 个样本有 0 个SQL。
SELECT COUNT(*) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead + sc.AvgScrMath + sc.AvgScrWrite >= 1500 AND s.MailCity = 'Lakeport';
SELECT COUNT(satscores.NumTstTakr) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity LIKE '%Fresno%';
SELECT s.CDSCode, s.Zip AS MailingZip FROM schools s JOIN (SELECT CDSCode, AdmFName1, AdmLName1       FROM schools       WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian') AS admin ON s.CDSCode = admin.CDSCode;
SELECT      COUNT(CASE WHEN County = 'Colusa' THEN 1 ELSE NULL END) /      COUNT(CASE WHEN County = 'Humboldt' THEN 1 ELSE NULL END) AS Ratio FROM      schools WHERE      MailState = 'California';
SELECT COUNT(*) FROM schools WHERE State = 'CA' AND StatusType = 'Active' AND District = 'San Joaquin';
Error: 第 9486 个样本有 0 个SQL。
SELECT s.Phone, s.Ext, s.School FROM schools s WHERE s.Zip = '95203-3704';
SELECT Website FROM schools WHERE AdmFName1 = 'Mike' AND AdmLName1 = 'Larson'    OR AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez'    OR AdmFName2 = 'Mike' AND AdmLName2 = 'Larson'    OR AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez'    OR AdmFName3 = 'Mike' AND AdmLName3 = 'Larson'    OR AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez';
Error: 第 9489 个样本有 0 个SQL。
SELECT COUNT(*)  FROM schools  WHERE Charter = 1 AND City = 'Hickman' AND DOC = 52;
Error: 第 9491 个样本有 0 个SQL。
SELECT s.School, s.City, s.AdmFName1, s.AdmLName1, s.AdmEmail1,         s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3 FROM schools s WHERE s.Charter = 1 AND s.CharterNum = '00D2'
SELECT COUNT(*)  FROM schools  WHERE MailCity = 'Hickman' AND Charter = '00D4';
Error: 第 9494 个样本有 0 个SQL。
Error: 第 9495 个样本有 0 个SQL。
SELECT SUM(CASE WHEN StatusType = 'Closure' AND OpenDate > '1989-01-01' AND OpenDate < '1990-01-01' AND City = 'San Francisco' THEN 1 ELSE 0 END) AS TotalClosure FROM schools WHERE StatusType = 'Closure' AND OpenDate > '1989-01-01' AND OpenDate < '1990-01-01' AND City = 'San Francisco';
SELECT County FROM schools WHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOC = 11 GROUP BY County ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.NCESDist FROM schools s WHERE s.SOC = 31;
SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND Charter = 'Y' AND StatusType IN ('Active', 'Closed') AND SchoolType = 'Community Day School';
SELECT d.DistrictCode FROM schools s JOIN schools s2 ON s.CDSCode = s2.CDSCode WHERE s.Magnet = 0 AND s.City = 'Fresno' AND s.District = s2.District;
SELECT COUNT(*)  FROM frpm  WHERE Academic Year = '2014-2015'  AND School Type = 'State Special School'  AND School Name = 'Fremont'  AND Enrollment (Ages 5-17) > 0;
SELECT FRPM_Count_Ages_517 FROM frpm WHERE School_Type = 'Youth Authority School' AND Mail_Street = 'PO Box 1040';
Error: 第 9503 个样本有 0 个SQL。
Error: 第 9504 个样本有 0 个SQL。
SELECT City FROM schools WHERE EILCode = 'HS' AND LowGrade = 9 AND HighGrade = 12 AND County = 'Merced' AND NSLP Provision Status = '2';
SELECT s.* FROM schools s JOIN frpm f ON s.CDSCode = f.School Code WHERE s.County = 'Los Angeles' AND f.Low Grade = 'K' AND f.High Grade = '9' AND f.Percent (%) Eligible FRPM (Ages 5-17) = (f.Free Meal Count (Ages 5-17) / f.Enrollment (Ages 5-17)) * 100;
SELECT GSoffered, COUNT(*) as Count FROM schools WHERE City = 'Adelanto' GROUP BY GSoffered ORDER BY Count DESC LIMIT 1;
Error: 第 9508 个样本有 0 个SQL。
SELECT s.School, s.Latitude FROM schools s ORDER BY s.Latitude DESC LIMIT 1;
SELECT s.City, s.School, frpm.Low_Grade FROM schools s JOIN frpm ON s.CDSCode = frpm.CDSCode WHERE s.State = 'CA' ORDER BY s.Latitude LIMIT 1;
SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(Longitude) FROM schools);
SELECT      s.City,      COUNT(*) AS NumSchools,      COUNT(DISTINCT s.CDSCode) AS NumCDS FROM      schools s WHERE      s.Magnet = 1 AND      s.GSoffered LIKE '%K-8%' GROUP BY      s.City ORDER BY      NumSchools DESC;
SELECT      AdmFName1,      COUNT(*) as Count,      District  FROM      schools  WHERE      AdmFName1 IS NOT NULL  GROUP BY      AdmFName1,      District  ORDER BY      Count DESC  LIMIT 2;
SELECT s.District Code, frpm.Percent (%) Eligible Free (K-12) FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode WHERE s.AdmFName1 = 'Alusine';
SELECT    s.AdmLName3  FROM    schools s  WHERE    s.CharterNum = 40;
SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND SOC = 62 AND DOC = 54;
SELECT s1.AdmEmail1 FROM satscores s1 JOIN schools s2 ON s1.cds = s2.CDSCode WHERE s1.NumTstTakr = (SELECT MAX(s3.NumTstTakr) FROM satscores s3 WHERE s3.AvgScrRead >= 1500 AND s3.AvgScrMath >= 1500 AND s3.AvgScrWrite >= 1500)
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id JOIN trans t ON a.account_id = t.account_id WHERE d.A3 = 'East Bohemia' AND t.type = 'POPLATEK PO OBRATU';
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON c.district_id = d.district_id WHERE d.A3 LIKE '%Prague%' AND a.account_id IN (   SELECT l.account_id   FROM loan l   WHERE l.status = 'eligible' );
SELECT    (A12 + A13) / 2 AS avg_unemployment,   CASE      WHEN A12 > A13 THEN '1995'     ELSE '1996'   END AS year_with_higher_unemployment
SELECT COUNT(DISTINCT district_id) FROM client JOIN district ON client.district_id = district.district_id WHERE gender = 'F' AND A11 BETWEEN 6000 AND 10000;
SELECT COUNT(*) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.A3 = 'North Bohemia' AND (SELECT AVG(A11) FROM district WHERE district_id = c.district_id) > 8000;
SELECT      a.account_id,      AVG(d.A11) AS lowest_avg_salary FROM      client c     JOIN account a ON c.district_id = a.district_id     JOIN disp d ON a.account_id = d.account_id WHERE      c.gender = 'F' GROUP BY      a.account_id ORDER BY      lowest_avg_salary ASC LIMIT 1;  SELECT      AVG(d.A11) AS highest_avg_salary FROM      client c     JOIN account a ON c.district_id = a.district_id     JOIN disp d ON a.account_id = d.account_id;  SELECT      highest_avg_salary - (SELECT                              lowest_avg_salary                         FROM                              (SELECT                                  AVG(d.A11) AS lowest_avg_salary                             FROM                                  client c                                 JOIN account a ON c.district_id = a.district_id                                 JOIN disp d ON a.account_id = d.account_id                             WHERE                                  c.gender = 'F'                             GROUP BY                                  a.account_id                             ORDER BY                                  lowest_avg_salary ASC                             LIMIT 1) AS t);
SELECT account.account_id FROM client JOIN account ON client.district_id = account.district_id JOIN (   SELECT district_id, MIN(birth_date) AS min_birth_date   FROM client   GROUP BY district_id ) AS youngest_client ON client.district_id = youngest_client.district_id AND client.birth_date = youngest_client.min_birth_date JOIN (   SELECT district_id, A11 AS avg_salary   FROM district ) AS district_avg_salary ON client.district_id = district_avg_salary.district_id WHERE client.birth_date = (SELECT MIN(birth_date) FROM client) AND client.district_id = district_avg_salary.district_id
SELECT COUNT(*) FROM client WHERE client_id IN (   SELECT client_id   FROM disp   WHERE type = 'POPLATEK TYDNE' ) AND gender = 'Owner';
SELECT client.client_id, client.gender, client.birth_date, client.district_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'POPLATEK PO OBRATU';
SELECT a.account_id, a.date, a.frequency, a.A2 AS A2, a.A3 AS A3, a.A4 AS A4, a.A5 AS A5, a.A6 AS A6, a.A7 AS A7, a.A8 AS A8, a.A9 AS A9, a.A10 AS A10, a.A11 AS A11, a.A12 AS A12, a.A13 AS A13, a.A14 AS A14, a.A15 AS A15, a.A16 AS A16 FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.date BETWEEN '1997-01-01' AND '1997-12-31' AND l.status = 'approved' ORDER BY l.amount LIMIT 1;
SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date LIKE '1993%' ORDER BY l.amount DESC LIMIT 1;
SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.A2 = 'Slokolov';
Error: 第 9530 个样本有 0 个SQL。
SELECT account.account_id FROM account WHERE account.date < '1997-01-01' AND account.date IS NOT NULL AND EXISTS (   SELECT 1   FROM trans   WHERE trans.account_id = account.account_id   AND trans.amount > 3000 );
SELECT client_id FROM client JOIN card ON client.client_id = card.client_id WHERE card.issued = '1994-03-03';
SELECT a.date FROM trans t JOIN account a ON t.account_id = a.account_id WHERE t.amount = 840 AND t.date = '1998-10-14';
SELECT d.district_id FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.date = '1994-08-25' AND l.status = 'approved';
SELECT MAX(t.amount)  FROM trans t  JOIN account a ON t.account_id = a.account_id  JOIN disp d ON a.account_id = d.account_id  JOIN client c ON d.client_id = c.client_id  JOIN card cd ON c.client_id = cd.client_id  WHERE cd.issued = '1996-10-21';
SELECT c.gender FROM client c JOIN account a ON c.district_id = a.district_id JOIN district d ON a.district_id = d.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client) AND d.A11 = (SELECT AVG(A11) FROM district);
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN client c ON a.district_id = (SELECT district_id FROM client WHERE client_id = c.client_id) JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'paid' AND c.client_id = (SELECT client_id FROM loan ORDER BY amount DESC LIMIT 1) ORDER BY t.date LIMIT 1;
SELECT COUNT(*)  FROM client c  JOIN account a ON c.client_id = a.client_id  JOIN district d ON c.district_id = d.district_id  WHERE d.A2 = 'Jesenik' AND c.gender = 'F';
SELECT d.disp_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN trans t ON d.account_id = t.account_id WHERE t.date = '1998-09-02' AND t.amount = 5100 AND t.type = 'USD';
Error: 第 9540 个样本有 0 个SQL。
SELECT district.A2 FROM client JOIN account ON client.district_id = account.district_id WHERE client.gender = 'F' AND client.birth_date = '1976-01-29';
SELECT birth_date FROM client WHERE client_id IN (   SELECT client_id   FROM disp   WHERE account_id IN (     SELECT account_id     FROM loan     WHERE amount = 98832 AND date = '1996-01-03'   ) );
SELECT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON c.district_id = d.district_id WHERE c.client_id = (SELECT c2.client_id FROM client c2 WHERE d.A3 = 'Prague' ORDER BY c2.client_id LIMIT 1);
SELECT      (COUNT(CASE WHEN gender = 'M' THEN 1 END) / COUNT(*)) * 100 AS percentage_of_male_clients FROM      client WHERE      district_id IN (SELECT district_id FROM district WHERE A3 LIKE '%South Bohemia%')      AND district_id = (SELECT district_id FROM district WHERE A4 = (SELECT MAX(A4) FROM district WHERE A3 LIKE '%South Bohemia%'));
SELECT    ((SELECT balance FROM trans WHERE account_id IN (SELECT account_id FROM loan WHERE date = '1993-07-05') AND date = '1998-12-27') -     (SELECT balance FROM trans WHERE account_id IN (SELECT account_id FROM loan WHERE date = '1993-07-05') AND date = '1993-03-22')) /    (SELECT balance FROM trans WHERE account_id IN (SELECT account_id FROM loan WHERE date = '1993-07-05') AND date = '1993-03-22') * 100 AS increase_rate
SELECT      (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) /       SUM(l.amount)) * 100 AS percentage FROM      loan l
SELECT      (COUNT(DISTINCT l.account_id)      WHERE l.status = 'C' AND l.amount < 100000)      / (SELECT COUNT(DISTINCT l.account_id)         FROM loan l) * 100 AS percentage FROM      loan l;
SELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account a JOIN district d ON a.district_id = d.district_id WHERE a.date LIKE '1993%' AND a.date > (SELECT MAX(t.date) FROM trans t WHERE t.account_id = a.account_id AND t.type = 'POPLATEK PO OBRATU');
SELECT a.account_id, c.frequency FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON c.district_id = d.district_id WHERE d.A2 = 'East Bohemia' AND EXTRACT(YEAR FROM a.date) BETWEEN 1995 AND 2000;
SELECT a.account_id, a.date FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Prachatice';
SELECT district.A2, district.A3 FROM district WHERE district.district_id IN (   SELECT loan.account_id   FROM loan   WHERE loan_id = 4990 ) AND district.district_id IN (   SELECT account.district_id   FROM account   WHERE account_id IN (     SELECT disp.account_id     FROM disp     WHERE disp_id IN (       SELECT card.disp_id       FROM card       WHERE card_id IN (         SELECT loan.account_id         FROM loan         WHERE loan_id = 4990       )     )   ) )
SELECT a.account_id, d.A2, d.A3 FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount > 300000;
SELECT l.loan_id, d.A3, AVG(AVERAGE_SALARY) AS average_salary FROM loan l JOIN district d ON l.account_id IN (   SELECT a.account_id   FROM account a   JOIN client c ON a.district_id = c.district_id   WHERE c.birth_date LIKE '%1980%' AND c.gender = 'M' ) WHERE l.duration = 60 GROUP BY l.loan_id, d.A3;
SELECT      d.A2 AS district,      (((d.A13 - d.A12) / d.A12) * 100) AS unemployment_increment_rate FROM      district d WHERE      d.district_id IN (         SELECT              district_id         FROM              account         JOIN              disp ON account.account_id = disp.account_id         JOIN              client ON disp.client_id = client.client_id         JOIN              loan ON account.account_id = loan.account_id         WHERE              loan.status = 'D'     )
SELECT      COUNT(*) / (SELECT COUNT(*) FROM account) * 100 AS percentage FROM      account WHERE      district_id IN (SELECT district_id FROM district WHERE A2 = 'Decin')      AND date LIKE '1993-%';
SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';
SELECT    A2,    COUNT(client_id) AS num_female_account_holders FROM    client,    district WHERE    client.district_id = district.district_id   AND gender = 'F' GROUP BY    A2 ORDER BY    num_female_account_holders DESC LIMIT 10;
SELECT      A2 AS district_name,      SUM(amount) AS total_withdrawal FROM      trans JOIN      account ON trans.account_id = account.account_id JOIN      district ON account.district_id = district.district_id WHERE      trans.type = 'VYDAJ'      AND trans.date LIKE '1996-01%' GROUP BY      A2 ORDER BY      total_withdrawal DESC LIMIT 10;
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'South Bohemia' AND a.account_id NOT IN (SELECT card_id FROM card);
SELECT district_id, A3 FROM district WHERE district_id IN (   SELECT district_id   FROM loan   WHERE status = 'C' OR status = 'D'   GROUP BY district_id   ORDER BY COUNT(*) DESC   LIMIT 1 )
SELECT AVG(amount)  FROM loan l  JOIN client c ON l.account_id = c.client_id  WHERE c.gender = 'M';
SELECT A2 AS district_name, A3 AS branch_location FROM district WHERE A13 = (SELECT MAX(A13) FROM district WHERE A2 LIKE '1996%');
SELECT COUNT(district_id) FROM account WHERE district_id IN (   SELECT district_id   FROM district   WHERE A16 = (     SELECT MAX(A16)     FROM district   ) )
SELECT COUNT(DISTINCT a.account_id) FROM trans t JOIN account a ON t.account_id = a.account_id JOIN card c ON a.account_id = c.card_id WHERE t.operation = 'VYBER KARTOU' AND t.balance < 0 AND a.frequency = 'POPLATEK MESICNE';
SELECT COUNT(*) FROM loan WHERE date BETWEEN '1995-01-01' AND '1997-12-31' AND amount >= 250000 AND status = 'approved' AND account_id IN (   SELECT account_id   FROM account   WHERE frequency = 'POPLATEK MESICNE' )
SELECT COUNT(*) FROM loan WHERE account_id IN (   SELECT account_id   FROM account   WHERE district_id IN (     SELECT district_id     FROM district     WHERE A1 = 1   )   AND status IN ('C', 'D');
SELECT COUNT(*) FROM client WHERE district_id = (   SELECT district_id   FROM district   WHERE A15 = (     SELECT MAX(A15)     FROM district     WHERE A15 < (       SELECT MAX(A15)       FROM district     )   ) ) AND gender = 'M';
SELECT COUNT(*) FROM card WHERE type = 'gold';
SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Pisek';
SELECT district_id FROM district WHERE district_id IN (   SELECT district_id   FROM account   JOIN trans ON account.account_id = trans.account_id   WHERE trans.date LIKE '1997-%' AND trans.amount > 10000 )
SELECT * FROM account WHERE account_id IN (   SELECT account_id   FROM order   WHERE k_symbol = 'SIPO' );
SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN card c ON d.disp_id = c.disp_id WHERE c.type IN ('gold', 'junior') GROUP BY a.account_id HAVING COUNT(DISTINCT c.type) = 2;
SELECT AVG(amount)  FROM trans t  JOIN account a ON t.account_id = a.account_id  JOIN disp d ON a.account_id = d.account_id  JOIN card c ON d.disp_id = c.disp_id  WHERE t.operation = 'VYBER KARTOU'  AND EXTRACT(YEAR FROM t.date) = 2021  AND EXTRACT(MONTH FROM t.date) = 1;  -- Assuming you want January 2021
SELECT account.account_id FROM account WHERE account.date LIKE '1998%' AND account.account_id IN (   SELECT trans.account_id   FROM trans   WHERE trans.type = 'VYBER KARTOU'   GROUP BY trans.account_id   HAVING SUM(trans.amount) < (     SELECT AVG(SUM(amount))     FROM (       SELECT account_id, SUM(amount) AS amount       FROM trans       WHERE type = 'VYBER KARTOU'       GROUP BY account_id     ) AS subquery     WHERE date LIKE '1998%'   ) )
SELECT client.client_id FROM client, disp, card, loan WHERE client.client_id = disp.client_id AND disp.account_id = account.account_id AND card.disp_id = disp.disp_id AND loan.account_id = account.account_id AND client.gender = 'F' AND card.type = 'credit' AND loan.status = 'active';
SELECT COUNT(*) FROM client JOIN account ON client.client_id = account.client_id JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND district.A3 LIKE '%South Bohemia%';
SELECT account.account_id FROM account JOIN client ON account.district_id = client.district_id JOIN disp ON account.account_id = disp.account_id WHERE client.district_id = (SELECT district_id FROM district WHERE A2 = 'Tabor') AND disp.type = 'OWNER';
SELECT    a.frequency  FROM    account a  WHERE    a.frequency NOT IN (SELECT d.A11 FROM district d)    AND a.frequency NOT IN (SELECT type FROM card WHERE type = 'OWNER');
SELECT COUNT(*) FROM trans WHERE account_id IN (   SELECT account_id   FROM account   WHERE district_id IN (     SELECT district_id     FROM district     WHERE A3 LIKE '%North Bohemia%'   )   AND account_id IN (     SELECT account_id     FROM trans     WHERE bank = 'AB'   ) )
SELECT A2 FROM district WHERE district_id IN (   SELECT district_id   FROM account   WHERE account_id IN (     SELECT account_id     FROM trans     WHERE type = 'VYDAJ'   ) )
SELECT AVG(A15)  FROM district  WHERE A2 > 4000 AND EXISTS (   SELECT 1    FROM account    WHERE account.date >= '1997-01-01' AND district_id = district.district_id );
SELECT COUNT(*) FROM account JOIN disp ON account.account_id = disp.account_id JOIN card ON disp.disp_id = card.disp_id WHERE account.frequency = 'CLASSIC' AND account.type = 'OWNER';
SELECT COUNT(*)  FROM client  WHERE gender = 'M'  AND district_id IN (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha');
SELECT ROUND(COUNT(*)/(SELECT COUNT(*) FROM card WHERE type = 'Gold')*100,2) AS percent FROM card WHERE type = 'Gold' AND issued < '1998-01-01';
SELECT c.client_id, c.client_id, c.gender, c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan);
SELECT A15 FROM district WHERE district_id IN (   SELECT district_id   FROM account   WHERE account_id = 532 );
SELECT d.district_id FROM account a JOIN order o ON a.account_id = o.account_id WHERE o.order_id = 33333;
SELECT * FROM trans WHERE account_id IN (   SELECT account_id   FROM disp   WHERE client_id IN (     SELECT client_id     FROM client     WHERE client_id = 3356   ) ) AND type = 'cash' AND operation = 'VYBER';
SELECT COUNT(*) FROM account JOIN disp ON account.account_id = disp.account_id JOIN loan ON account.account_id = loan.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000;
Error: 第 9590 个样本有 0 个SQL。
SELECT A3 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id = 3541);
SELECT d.district_id, d.A2 FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id, d.A2 ORDER BY COUNT(a.account_id) DESC LIMIT 1;
SELECT c.client_id, c.client_id, c.gender, c.birth_date FROM client c JOIN account a ON c.client_id = a.account_id JOIN order o ON a.account_id = o.account_id WHERE o.order_id = 32423;
SELECT * FROM trans WHERE account_id IN (   SELECT account_id   FROM account   WHERE district_id = 5 );
Error: 第 9595 个样本有 0 个SQL。
SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'junior' AND card.issued >= '1997-01-01';
SELECT      (COUNT(*)/(SELECT COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000 AND gender = 'F'))) * 100 FROM      client WHERE      district_id IN (SELECT district_id FROM district WHERE A11 > 10000) AND gender = 'F';
SELECT      ROUND(((SUM(amount) FROM loan WHERE loan.date BETWEEN '1997-01-01' AND '1997-12-31') -              (SUM(amount) FROM loan WHERE loan.date BETWEEN '1996-01-01' AND '1996-12-31')) /             (SUM(amount) FROM loan WHERE loan.date BETWEEN '1996-01-01' AND '1996-12-31')) * 100, 2) AS growth_rate FROM      loan JOIN      client ON loan.account_id = client.client_id JOIN      account ON loan.account_id = account.account_id WHERE      client.gender = 'M' AND      account.date BETWEEN '1996-01-01' AND '1997-12-31';
SELECT COUNT(*) FROM trans WHERE type = 'card' AND operation = 'VYBER KARTOU' AND date > '1995-12-31';
SELECT (SELECT A16 FROM district WHERE A3 = 'North Bohemia') - (SELECT A16 FROM district WHERE A3 = 'East Bohemia');
SELECT COUNT(DISTINCT d.disp_id)  FROM disp d  WHERE d.account_id BETWEEN 1 AND 10;
SELECT      COUNT(frequency) AS frequency,     SUM(amount) AS total_debit FROM      account, trans WHERE      account.account_id = 3 AND      trans.account_id = 3 AND      trans.type = 'statement'
SELECT EXTRACT(YEAR FROM birth_date)  FROM client  WHERE client_id IN (SELECT account_id FROM account WHERE account_id = 130);
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE a.frequency = 'POPLATEK PO OBRATU';
Error: 第 9605 个样本有 0 个SQL。
SELECT SUM(amount) AS total_amount,         (SELECT gender FROM client WHERE client_id = (SELECT client_id FROM disp WHERE account_id = (SELECT account_id FROM trans WHERE trans_id = 851))) AS gender FROM trans WHERE trans_id = 851;
SELECT type  FROM card  WHERE client_id IN (SELECT client_id FROM client WHERE client_id = 9);
SELECT SUM(amount)  FROM trans  WHERE account_id IN (SELECT account_id                       FROM account                       WHERE district_id IN (SELECT district_id                                            FROM client                                            WHERE client_id = 617)                       AND date BETWEEN '1998-01-01' AND '1998-12-31')  AND date BETWEEN '1998-01-01' AND '1998-12-31';
SELECT c.client_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND d.A2 = 'East Bohemia';
SELECT c.client_id FROM client c JOIN loan l ON c.client_id = l.account_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3;
SELECT COUNT(*) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND l.amount > 4000 AND l.status = 'SIPO';
Error: 第 9612 个样本有 0 个SQL。
SELECT COUNT(*) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card cd ON d.disp_id = cd.disp_id WHERE c.gender = 'F' AND cd.type = 'junior';
SELECT (COUNT(CASE WHEN c.gender = 'F' AND d.A3 LIKE '%Prague%' THEN 1 END) /          COUNT(CASE WHEN d.A3 LIKE '%Prague%' THEN 1 END)) * 100 FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 LIKE '%Prague%';
SELECT      (COUNT(CASE WHEN c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE' THEN 1 END) /       COUNT(CASE WHEN a.frequency = 'POPLATEK TYDNE' THEN 1 END)) * 100 AS percentage FROM      client c  JOIN      account a ON c.client_id = a.client_id WHERE      c.gender = 'M';
SELECT COUNT(*) FROM client WHERE gender = 'User' AND EXISTS (   SELECT 1   FROM account   WHERE account.client_id = client.client_id   AND account.frequency = 'POPLATEK TYDNE' )
SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 24 AND a.date < '1997-01-01' ORDER BY l.amount LIMIT 1;
SELECT a.account_id FROM client c JOIN account a ON c.district_id = a.district_id WHERE c.gender = 'F' ORDER BY A11 LIMIT 1;
SELECT COUNT(*) FROM client WHERE EXTRACT(YEAR FROM birth_date) = 1920 AND district_id IN (   SELECT district_id   FROM district   WHERE A3 = 'East Bohemia' )
SELECT COUNT(*) FROM loan WHERE duration = 24 AND account_id IN (   SELECT account_id   FROM account   WHERE frequency = 'POPLATEK TYDNE' )
SELECT AVG(amount)  FROM loan  WHERE status = 'C' AND EXISTS (   SELECT 1    FROM trans    WHERE trans.account_id = loan.account_id    AND trans.date = (     SELECT MAX(t2.date)      FROM trans t2      WHERE t2.account_id = trans.account_id      AND t2.operation = 'POPLATEK PO OBRATU'   ) )
SELECT client.client_id, district.district_id FROM client JOIN account ON client.client_id = account.client_id JOIN disp ON account.account_id = disp.account_id JOIN district ON account.district_id = district.district_id WHERE account.account_id NOT IN (SELECT loan.account_id FROM loan) AND account.account_id NOT IN (SELECT order.account_id FROM order WHERE order.k_symbol = 'permanent');
SELECT c.client_id, DATE_PART('year', CURRENT_DATE - c.birth_date) AS age FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.account_id = ca.card_id WHERE ca.type = 'gold' AND EXISTS (   SELECT 1   FROM loan l   WHERE l.account_id = d.account_id   AND l.status = 'eligible' );
SELECT bond_type, COUNT(*) as count FROM bond GROUP BY bond_type ORDER BY count DESC LIMIT 1;
SELECT COUNT(*) FROM atom WHERE element = 'Cl'   AND molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = '-'   );
SELECT AVG(CASE WHEN element = 'O' THEN 1 ELSE 0 END)  FROM atom  WHERE molecule_id IN (   SELECT molecule_id    FROM bond    WHERE bond_type = '-' )  AND element = 'O';
SELECT AVG(COUNT(bond_id))  FROM (SELECT bond_id        FROM bond        WHERE bond_type = '-') AS single_bonded  WHERE molecule_id IN (SELECT molecule_id                         FROM molecule                         WHERE label = '+');
SELECT COUNT(*) FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'na' AND m.label = '-';
SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+';
SELECT (SUM(element = 'c') / COUNT(atom_id)) * 100 FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN connected AS connected2 ON atom.atom_id = connected2.atom_id2 WHERE bond.bond_type = '==' AND element = 'c';
SELECT COUNT(*)  FROM bond  WHERE bond_type = '#';
SELECT COUNT(*)  FROM atom  WHERE element != 'br';
SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR099';
SELECT molecule_id FROM atom WHERE element = 'si';
SELECT element  FROM atom  WHERE molecule_id IN (   SELECT molecule_id    FROM bond    WHERE bond_id = 'TR004_8_9' )
SELECT DISTINCT a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = ' = ' AND a.element != a2.element;
SELECT m.label, COUNT(*) as count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'H' GROUP BY m.label ORDER BY count DESC LIMIT 1;
SELECT bond_type FROM bond WHERE molecule_id IN (   SELECT molecule_id   FROM atom   WHERE element = 'te' )
SELECT DISTINCT a1.element  FROM connected c  JOIN atom a1 ON c.atom_id = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = '-';
SELECT a1.element FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON c.molecule_id = m.molecule_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '-' AND b.bond_type = 'non-carcinogenic';
SELECT element FROM atom WHERE molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' ) GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;
SELECT bond_type FROM connected, bond WHERE connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20' AND connected.bond_id = bond.bond_id;
SELECT DISTINCT m.label FROM molecule m WHERE m.molecule_id NOT IN (   SELECT c.molecule_id   FROM connected c   JOIN atom a ON c.atom_id = a.atom_id   JOIN atom a2 ON c.atom_id2 = a2.atom_id   JOIN molecule m2 ON a.molecule_id = m2.molecule_id   WHERE a.element != 'sn' ) AND m.label NOT IN ('+', '-');
SELECT COUNT(*)  FROM atom  WHERE element IN ('i', 's')  AND molecule_id IN (   SELECT molecule_id    FROM bond    WHERE bond_type = '-' )
SELECT DISTINCT a1.element FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#';
SELECT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN connected c2 ON c.atom_id2 = c2.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR181';
SELECT      DIVIDE(SUM(element = 'F'), COUNT(molecule_id)) AS percent FROM      atom WHERE      element = 'F' AND molecule_id IN (         SELECT              molecule_id         FROM              molecule         WHERE              label = '+'     )
SELECT    DIVIDE(SUM(bond_type = '#'), COUNT(bond_id)) as percent FROM    bond WHERE    bond_type = '#' AND molecule_id IN (     SELECT        molecule_id     FROM        molecule     WHERE        label = '+'   )
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element LIMIT 3;
SELECT a.element  FROM connected c  JOIN bond b ON c.bond_id = b.bond_id  JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id  WHERE b.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001')  AND b.bond_id = 'TR001_2_6';
SELECT SUBTRACT(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM molecule;
SELECT atom_id FROM bond WHERE bond_id = 'TR_000_2_5';
SELECT bond_id FROM connected WHERE atom_id2 = (SELECT atom_id FROM atom WHERE atom_id = 'TR000_2');
SELECT m.label  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  WHERE b.bond_type = ' = '  ORDER BY m.label  LIMIT 5;
SELECT DIVIDE(SUM(bond_type = ' = '), COUNT(bond_id)) as percent FROM bond WHERE molecule_id = 'TR008' AND bond_type = ' = ';
SELECT DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), COUNT(molecule_id)) as percent FROM molecule;
SELECT DIVIDE(SUM(element = 'h'), COUNT(atom_id)) as percent FROM atom WHERE molecule_id = 'TR206' AND element = 'h';
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000');
SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR060';
SELECT    bond_type,    COUNT(*) as total_bonds,    MAX(COUNT(bond_type)) as max_bonds FROM    bond    JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE    molecule.molecule_id = 'TR018' GROUP BY    bond_type ORDER BY    total_bonds DESC LIMIT 1;  SELECT    label FROM    molecule WHERE    molecule_id = 'TR018';
SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = '-' AND c.atom_id != c.atom_id2 ORDER BY m.label ASC LIMIT 3;
SELECT bond_type FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_type LIMIT 2;
SELECT COUNT(*) FROM connected WHERE (atom_id LIKE 'TR009_12' OR atom_id2 LIKE 'TR009_12') AND molecule_id = 'TR009';
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'Br';
SELECT b.bond_type, c.atom_id, c.atom_id2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE b.molecule_id IN (   SELECT m.molecule_id   FROM molecule m   WHERE m.label = 'TR001_6_9' );
SELECT m.label, m.label LIKE '+' AS is_carcinogenic FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10';
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#';
SELECT COUNT(*)  FROM connected  WHERE atom_id LIKE 'TR%_19';
SELECT element  FROM atom  WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004');
SELECT COUNT(*) FROM molecule WHERE label = '-';
SELECT DISTINCT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE SUBSTRING(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';
SELECT b.* FROM bond b JOIN atom a1 ON b.molecule_id = a1.molecule_id AND a1.element = 'p' JOIN atom a2 ON b.molecule_id = a2.molecule_id AND a2.element = 'n';
SELECT label FROM molecule WHERE molecule_id IN (   SELECT molecule_id   FROM bond   WHERE bond_type = 'double'   GROUP BY molecule_id   ORDER BY COUNT(*) DESC   LIMIT 1 ) AND label = '+';
SELECT AVG(COUNT(bond_id))  FROM atom, bond  WHERE atom.element = 'i' AND atom.atom_id = bond.molecule_id;
SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE c.atom_id = SUBSTR((SELECT a.atom_id FROM atom a WHERE a.atom_id = 45), 7, 2) + 0;
SELECT DISTINCT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected);
SELECT a.element  FROM connected c  JOIN bond b ON c.bond_id = b.bond_id  JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id  WHERE b.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR447')  AND b.bond_type = '#';
SELECT element  FROM atom  WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR144_8_19');
SELECT m.label, COUNT(b.bond_id) as double_bonds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type = ' = ' GROUP BY m.label ORDER BY double_bonds DESC LIMIT 1;
SELECT element FROM atom WHERE molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '+' ) GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;
SELECT a.atom_id FROM atom a WHERE a.element = 'pb';
SELECT DISTINCT a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#' AND a.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');
SELECT    ROUND(     DIVIDE(       COUNT(bond_id),        COUNT(DISTINCT atom_id)      ) * 100,      2   ) AS percentage FROM    connected GROUP BY    MAX(COUNT(atom_id)) ORDER BY    percentage DESC LIMIT 1;
SELECT    DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), COUNT(bond_id)) AS proportion FROM    bond WHERE    bond_type = '-';
SELECT COUNT(*) FROM atom WHERE element IN ('C', 'H');
Error: 第 9686 个样本有 0 个SQL。
SELECT b.bond_type  FROM bond b  JOIN atom a ON b.molecule_id = a.molecule_id  WHERE a.element = 'sn';
SELECT COUNT(DISTINCT element) FROM atom WHERE molecule_id IN (   SELECT molecule_id   FROM bond   WHERE bond_type = '-' )
SELECT COUNT(*) FROM atom WHERE element IN ('p', 'br') AND molecule_id IN (   SELECT molecule_id   FROM bond   WHERE bond_type = '#'   GROUP BY molecule_id   HAVING COUNT(*) > 2 )
SELECT bond_id  FROM bond  WHERE molecule_id IN (   SELECT molecule_id    FROM molecule    WHERE label = '+' )
SELECT m.molecule_id FROM molecule m WHERE m.label = '-' AND NOT EXISTS (   SELECT 1   FROM bond b   WHERE b.molecule_id = m.molecule_id AND b.bond_type != '-' );
SELECT    DIVIDE(SUM(CASE WHEN element = 'cl' THEN 1 ELSE 0 END), COUNT(atom_id)) as percent FROM    atom WHERE    molecule_id IN (     SELECT        molecule_id     FROM        bond     WHERE        bond_type = '-'   )
SELECT label  FROM molecule  WHERE molecule_id IN ('TR000', 'TR001', 'TR002');
SELECT molecule_id FROM molecule WHERE label = '-';
SELECT COUNT(m.molecule_id)  FROM molecule m  WHERE m.label = '+' AND m.molecule_id BETWEEN 'TR000' AND 'TR030';
SELECT b.bond_type  FROM bond b  WHERE b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.molecule_id BETWEEN 'TR000' AND 'TR050');
SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN connected c2 ON c.atom_id2 = c2.atom_id  JOIN atom a2 ON c2.atom_id = a2.atom_id  WHERE c.bond_id = 'TR001_10_11'  AND a.molecule_id = a2.molecule_id;
SELECT COUNT(bond_id)  FROM bond  JOIN atom ON bond.molecule_id = atom.molecule_id  WHERE atom.element = 'i';
SELECT    CASE      WHEN MAX(label) = '+' THEN 'carcinogenic'     ELSE 'non carcinogenic'   END AS result FROM    molecule   JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE    atom.element = 'ca';
SELECT * FROM atom WHERE atom_id IN (   SELECT atom_id   FROM connected   WHERE bond_id = 'TR001_1_8' ) AND element IN ('cl', 'c');
SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'c' AND a2.element = 'c' AND b.bond_type = '#' AND m.label = '-';
SELECT    DIVIDE(SUM(CASE WHEN element = 'Cl' THEN 1 ELSE 0 END),           COUNT(molecule_id)) * 100 AS percentage FROM    atom, molecule WHERE    atom.molecule_id = molecule.molecule_id   AND molecule.label = '+';
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001');
SELECT molecule_id FROM bond WHERE bond_type = ' = ';
SELECT connected.atom_id, connected.atom_id2 FROM connected JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#';
SELECT element  FROM atom  WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_id = 'TR005_16_26');
SELECT COUNT(*)  FROM molecule  WHERE label = '-'  AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-');
SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_id = 'TR001_10_11';
SELECT b.bond_id,         CASE WHEN m.label = '+' THEN 'Carcinogenic' ELSE 'Non-Carcinogenic' END AS carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#';
SELECT element FROM atom WHERE atom_id = (SELECT substr(atom_id, 7, 1) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+'))
SELECT      (SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(*)) AS hydrogen_ratio,     label FROM      atom WHERE      molecule_id = 'TR006'
SELECT label FROM molecule WHERE molecule_id IN (   SELECT molecule_id   FROM atom   WHERE element = 'ca' ) AND label IN ('+', '-');
SELECT bond_type FROM bond WHERE molecule_id IN (   SELECT molecule_id   FROM atom   WHERE element = 'te' )
SELECT DISTINCT a1.element FROM atom a1, atom a2, bond b, connected c WHERE b.bond_id = c.bond_id AND c.atom_id = a1.atom_id AND c.atom_id2 = a2.atom_id AND b.molecule_id = (SELECT molecule_id FROM molecule WHERE label = SUBSTR(b.bond_id, 1, 5)) AND a1.atom_id = (SELECT atom_id FROM atom WHERE element = SUBSTR(b.bond_id, 7, 2)) AND a2.atom_id = (SELECT atom_id FROM atom WHERE element = SUBSTR(b.bond_id, 10, 2)) AND b.bond_id = 'TR001_10_11';
SELECT      COUNT(*) * 100.0 / (SELECT COUNT(*) FROM bond) AS percentage FROM      bond WHERE      bond_type = '#';
SELECT      DIVIDE(SUM(bond_type = ' = '), COUNT(all bond_id)) as percent FROM      bond WHERE      molecule_id = 'TR047'
SELECT label  FROM molecule  WHERE molecule_id IN (   SELECT molecule_id    FROM atom    WHERE atom_id = 'TR001_1' ) AND label = '+';
SELECT * FROM molecule WHERE molecule_id = 'TR151' AND label = '+';
SELECT element  FROM atom  WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR151');
SELECT COUNT(*)  FROM molecule  WHERE label = '+';
SELECT * FROM atom WHERE molecule_id LIKE 'TR0%1%0' AND element = 'c';
SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+';
SELECT bond_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND bond.bond_type = ' = ';
SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '+' );
SELECT molecule_id FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id JOIN atom AS a1 ON connected.atom_id = a1.atom_id JOIN atom AS a2 ON connected.atom_id2 = a2.atom_id WHERE a1.element = 'TR00_1' AND bond.bond_type = 'TR00_1_2';
SELECT a1.element, a1.atom_id FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN connected c2 ON c.atom_id2 = c2.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE a1.element = 'c' AND m.label != '-';
SELECT (COUNT(m.molecule_id) / (SELECT COUNT(*) FROM molecule)) * 100.0 FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'h' AND m.label = '+';
SELECT 'Yes' AS result FROM molecule WHERE molecule_id = 'TR124' AND label = '+';
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR186');
SELECT bond_type FROM bond WHERE molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = 'TR007_4_19' ) AND bond_type IN ('=', '-', '#');
SELECT element FROM atom WHERE molecule_id IN (   SELECT molecule_id   FROM bond   WHERE bond_id = 'TR001_2_4' ) ORDER BY element;
SELECT COUNT(*) as double_bonds, label FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.molecule_id = 'TR006' AND bond.bond_type = ' = ';
SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+';
SELECT b.bond_id, a1.element AS atom1, a2.element AS atom2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '-';
SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('c', 'n', 'o', 's', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND a.molecule_id IN (   SELECT c.molecule_id   FROM connected c   JOIN bond b ON c.bond_id = b.bond_id   WHERE b.bond_type = '#' )
SELECT a.element FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000_2_3');
Error: 第 9737 个样本有 0 个SQL。
SELECT a.atom_id, COUNT(b.bond_type)  FROM atom a  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE m.label = 'TR346'  GROUP BY a.atom_id;
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond' AND EXISTS (   SELECT 1   FROM connected c   WHERE c.atom_id IN (c1.atom_id, c1.atom_id2)   AND c.bond_id = b.bond_id   AND m.label = '+' )
SELECT COUNT(*)  FROM molecule  WHERE molecule_id NOT IN (   SELECT molecule_id    FROM atom    WHERE element = 's' )  AND molecule_id NOT IN (   SELECT molecule_id    FROM bond    WHERE bond_type = ' = ' )
SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_id = 'TR001_2_4' AND m.label = '+';
Error: 第 9742 个样本有 0 个SQL。
SELECT COUNT(*)  FROM bond  WHERE bond_type = '-';
SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'cl' AND m.label = '+';
SELECT m.label FROM molecule m WHERE m.molecule_id IN (   SELECT a.molecule_id   FROM atom a   WHERE a.element = 'c' ) AND m.label <> '-';
SELECT      DIVIDE(SUM(m.label = '+' AND a.element = 'Cl'), COUNT(m.molecule_id)) AS percentage FROM      molecule m JOIN      atom a ON m.molecule_id = a.molecule_id WHERE      m.label = '+' AND a.element = 'Cl';
SELECT m.molecule_id FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_1_7';
SELECT COUNT(DISTINCT a.element)  FROM connected c  JOIN atom a ON c.atom_id = a.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR001_3_4';
SELECT b.bond_type FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE c.atom_id = 'TR000_1' AND c.atom_id2 = 'TR000_2';
SELECT m.label  FROM molecule m, atom a  WHERE a.molecule_id = m.molecule_id  AND (a.atom_id = 'TR000_2' OR a.atom_id = 'TR000_4');
SELECT element  FROM atom  WHERE atom_id = 'TR000_1';
SELECT * FROM molecule WHERE molecule_id = 'TR000' AND label = '+';
SELECT      DIVIDE(SUM(bond_type = '-'), COUNT(bond_id)) as percentage FROM      bond WHERE      bond_type = '-';
SELECT COUNT(*)  FROM molecule m  JOIN atom a ON m.molecule_id = a.molecule_id  WHERE a.element = 'n' AND m.label = '+';
SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN connected c2 ON c.atom_id2 = c2.atom_id WHERE a.element = 's' AND b.bond_type = ' = ';
SELECT m.label FROM molecule m WHERE m.label = '-' AND COUNT(a.molecule_id) > 5
SELECT element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond AS bond2 ON connected.atom_id2 = bond2.atom_id JOIN bond ON bond.molecule_id = bond2.molecule_id WHERE bond.bond_type = '=' AND atom.molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = 'TR024' )
SELECT m.molecule_id, m.label, COUNT(a.molecule_id) as num_atoms FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' GROUP BY m.molecule_id, m.label ORDER BY num_atoms DESC LIMIT 1;
SELECT      DIVIDE(SUM(m.label), COUNT(m.molecule_id)) * 100.0 AS percentage FROM      molecule m     JOIN atom a ON m.molecule_id = a.molecule_id     JOIN bond b ON a.molecule_id = b.molecule_id WHERE      a.element = 'h' AND b.bond_type = '#'     AND m.label = '+';
SELECT COUNT(*)  FROM molecule  WHERE label = '+';
Error: 第 9761 个样本有 0 个SQL。
SELECT COUNT(*)  FROM atom  WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR008')  AND element = 'C';
SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'o' AND b.bond_type = '==';
SELECT COUNT(*) FROM molecule WHERE molecule_id IN (   SELECT molecule_id   FROM bond   WHERE bond_type = '#' ) AND label = '-';
SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR016';
SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN connected c2 ON c.atom_id2 = c2.atom_id WHERE m.molecule_id = 'TR012' AND a.element = 'c' AND b.bond_type = '==';
SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'o';
Error: 第 9769 个样本有 0 个SQL。
SELECT c.* FROM cards c WHERE c.borderColor = 'borderless' AND c.cardKingdomFoilId IS NULL OR (c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL);
SELECT cards.name FROM cards WHERE faceConvertedManaCost = (SELECT MAX(faceConvertedManaCost) FROM cards);
SELECT c.asciiName FROM cards c WHERE c.frameVersion = '2015' AND c.edhrecRank < 100;
SELECT c.* FROM cards c JOIN legalities l ON c.multiverseId = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'Banned' AND l.format = 'gladiator';
SELECT l.status  FROM cards c  JOIN legalities l ON c.uuid = l.uuid  WHERE c.type = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';
Error: 第 9775 个样本有 0 个SQL。
SELECT c.asciiName, c.text,         CASE WHEN c.hasContentWarning = 1 THEN 'Yes' ELSE 'No' END AS has_missing_or_degraded_properties_and_values FROM cards c JOIN foreign_data fd ON c.multiverseId = fd.multiverseid JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Stephen Daniele';
SELECT r.text FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.name = 'Sublime Epiphany' AND c.number = '74s';
SELECT      c.name,      c.artist,      c.isPromo,     COUNT(r.uuid) AS max_rulings FROM      cards c     LEFT JOIN rulings r ON c.uuid = r.uuid GROUP BY      c.name,      c.artist,      c.isPromo ORDER BY      max_rulings DESC LIMIT 1;
SELECT foreign_data.name  FROM cards  JOIN foreign_data ON cards.multiverseId = foreign_data.multiverseid  WHERE cards.name = 'annul' AND cards.number = '29' AND cards.hasAlternativeDeckLimit = 1;
SELECT c.asciiName FROM cards c JOIN foreign_data fd ON c.multiverseId = fd.multiverseid WHERE fd.language = 'Japanese' AND fd.type = 'flavorText';
SELECT ROUND((SUM(c.id) WHERE c.language = 'Chinese Simplified') / COUNT(c.id) * 100, 2) AS percentage FROM cards c;
Error: 第 9782 个样本有 0 个SQL。
SELECT COUNT(DISTINCT cards.type)  FROM cards  WHERE cards.artist = 'Aaron Boyd';
Error: 第 9784 个样本有 0 个SQL。
Error: 第 9785 个样本有 0 个SQL。
SELECT promoTypes FROM cards WHERE name = 'Duress';
SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';
Error: 第 9788 个样本有 0 个SQL。
SELECT distinct language FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Mercy' AND EXISTS (   SELECT 1   FROM cards   JOIN sets ON cards.setCode = sets.code   WHERE cards.name = 'Angel of Mercy' );
SELECT COUNT(*) FROM cards WHERE isTextless = 0 AND EXISTS (   SELECT 1   FROM legalities   WHERE status = 'restricted' AND cards.uuid = legalities.uuid );
SELECT text  FROM rulings  WHERE uuid IN (   SELECT uuid    FROM cards    WHERE name = 'Condemn' ) OR uuid IN (   SELECT uuid    FROM foreign_data    WHERE name = 'Condemn' ) OR uuid IN (   SELECT uuid    FROM cards    WHERE asciiName = 'Condemn' );
SELECT COUNT(*) FROM cards WHERE isStarter = 1 AND EXISTS (   SELECT 1   FROM legalities   WHERE status = 'restricted'   AND cards.uuid = legalities.uuid );
SELECT l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.name = 'Cloudchaser Eagle';
SELECT type FROM cards WHERE name = 'Benalish Knight';
Error: 第 9795 个样本有 0 个SQL。
SELECT artist FROM cards WHERE asciiName IN (   SELECT translation   FROM set_translations   WHERE language = 'Phyrexian' ) AND artist IS NOT NULL;
SELECT (COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) / COUNT(id)) * 100 AS percentage
SELECT COUNT(*) FROM cards WHERE isReprint = 1 AND asciiName IN (   SELECT name   FROM foreign_data   WHERE language = 'German' );
Error: 第 9799 个样本有 0 个SQL。
SELECT ROUND(   (COUNT(CASE WHEN language = 'French' AND isStorySpotlight = 1 THEN 1 ELSE NULL END) /     COUNT(CASE WHEN isStorySpotlight = 1 THEN 1 ELSE NULL END)) * 100, 2 ) AS percentage
SELECT COUNT(*)  FROM cards  WHERE toughness = 99;
Error: 第 9802 个样本有 0 个SQL。
Error: 第 9803 个样本有 0 个SQL。
SELECT cards.id FROM cards WHERE convertedManaCost = 0;
SELECT layout  FROM cards  WHERE EXISTS (   SELECT 1    FROM cards c    WHERE c.keywords LIKE '%flying%' )
Error: 第 9806 个样本有 0 个SQL。
SELECT c.id FROM cards c WHERE c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL;
Error: 第 9808 个样本有 0 个SQL。
Error: 第 9809 个样本有 0 个SQL。
SELECT artist  FROM cards  WHERE asciiName IN (   SELECT set_translations.translation    FROM set_translations    WHERE language = 'Chinese Simplified'    AND set_translations.setCode = cards.setCode );
Error: 第 9811 个样本有 0 个SQL。
SELECT COUNT(*)  FROM cards  WHERE borderColor = 'white' AND exists (   SELECT 1    FROM legalities    WHERE status = 'Banned' AND legalities.uuid = cards.uuid )
Error: 第 9813 个样本有 0 个SQL。
SELECT text FROM rulings WHERE uuid IN (   SELECT uuid   FROM cards   WHERE name = 'Beacon of Immortality' ) ORDER BY date DESC;
SELECT COUNT(*), l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = 'future';
Error: 第 9816 个样本有 0 个SQL。
Error: 第 9817 个样本有 0 个SQL。
SELECT c.name, r.date FROM cards c JOIN foreign_data fd ON c.multiverseId = fd.multiverseid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf';
SELECT c.colors, l.status AS format FROM cards c JOIN legalities l ON c.multiverseId = l.uuid WHERE c.id BETWEEN 1 AND 20;
Error: 第 9820 个样本有 0 个SQL。
SELECT r.text AS ruling, c.name FROM cards c JOIN foreign_data fd ON c.multiverseId = fd.multiverseid JOIN legalities l ON c.multiverseId = l.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC;
Error: 第 9822 个样本有 0 个SQL。
SELECT COUNT(*)  FROM cards  WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;
Error: 第 9824 个样本有 0 个SQL。
Error: 第 9825 个样本有 0 个SQL。
SELECT convertedManaCost FROM cards WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND availability IN ('paper', 'mtgo');
SELECT SUM(manaCost)  FROM cards  WHERE artist = 'Rob Alexander';
SELECT DISTINCT type, subtypes FROM cards WHERE availability = 'arena';
Error: 第 9829 个样本有 0 个SQL。
SELECT    DIVIDE(COUNT(CASE WHEN hand = '+3' THEN 1 ELSE NULL END), COUNT(id)) * 100 AS percentage FROM    cards WHERE    frameEffects = 'legendary';
SELECT      c.id,      COUNT(*) AS count FROM      cards c WHERE      c.isStorySpotlight = 1 AND c.isTextless = 0 GROUP BY      c.id ORDER BY      c.id;
SELECT    c.name,    (SUM(fd.id) / COUNT(c.id)) * 100 AS percentage FROM    cards c   JOIN foreign_data fd ON c.multiverseId = fd.multiverseid WHERE    fd.language = 'Spanish' GROUP BY    c.name
Error: 第 9833 个样本有 0 个SQL。
SELECT COUNT(*)  FROM sets  WHERE setCode IN (   SELECT setCode    FROM set_translations    WHERE language = 'Portuguese (Brasil)' )  AND block = 'Commander';
SELECT c.id FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.type = 'Creature' AND l.status = 'legal';
SELECT DISTINCT type FROM cards WHERE language = 'German' AND (subtypes IS NOT NULL AND supertypes IS NOT NULL)
SELECT COUNT(*)  FROM cards  WHERE power IS NULL AND EXISTS (   SELECT 1    FROM foreign_data    WHERE foreign_data.multiverseid = cards.multiverseId AND foreign_data.type = 'ability' );
SELECT COUNT(*) FROM cards WHERE legalities.status = 'legal' AND rulings.text = 'This is a triggered mana ability' AND faceName IS NULL;
Error: 第 9839 个样本有 0 个SQL。
Error: 第 9840 个样本有 0 个SQL。
SELECT f.name FROM cards c JOIN foreign_data f ON c.multiverseId = f.multiverseid WHERE c.type = 'Creature' AND c.layout = 'normal' AND c.borderColor = 'black' AND c.artist = 'Matthew D. Wilson' AND f.language = 'French';
SELECT COUNT(*)  FROM cards  WHERE rarity = 'rare' AND        exists (SELECT 1                FROM rulings                WHERE rulings.date = '2009-01-10'                  AND rulings.text IS NOT NULL                  AND cards.uuid = rulings.uuid);
SELECT language  FROM set_translations  WHERE setCode IN (   SELECT code    FROM sets    WHERE block = 'Ravnica' AND baseSetSize = 180 )
SELECT (COUNT(c.hasContentWarning = 0) / COUNT(c.id)) * 100 FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'commander' AND l.status = 'legal'
SELECT (COUNT(flavor.name = 'French' and cards.power IS NULL or cards.power = '*') * 100.0 / COUNT(cards.power IS NULL or cards.power = '*')) AS percentage
SELECT (COUNT(set_translations.language = 'Japanese' AND sets.type = 'expansion') / COUNT(set_translations.language = 'Japanese')) * 100 AS percentage FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Japanese';
SELECT availability FROM cards WHERE artist = 'Daren Bader';
SELECT COUNT(*)  FROM cards  WHERE borderColor = 'borderless' AND edhrecRank > 12000;
SELECT COUNT(*)  FROM cards  WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;
SELECT name  FROM cards  WHERE power IS NULL OR power = '*'  AND isPromo = 1  AND promoTypes = 'arenaleague'  ORDER BY name ASC  LIMIT 3;
SELECT language  FROM foreign_data  WHERE multiverseid = 149934;
SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3;
SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) / COUNT(*)) * 100 AS proportion
Error: 第 9854 个样本有 0 个SQL。
SELECT s.name FROM sets s WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY s.name ASC LIMIT 3;
Error: 第 9856 个样本有 0 个SQL。
SELECT      s.name,      st.translation FROM      sets s  JOIN      set_translations st ON s.setCode = st.setCode  WHERE      s.id = 5;
SELECT st.language, s.type FROM sets s JOIN set_translations st ON s.setCode = st.setCode WHERE s.id = 206;
Error: 第 9859 个样本有 0 个SQL。
SELECT s.id FROM sets s WHERE s.isForeignOnly = 0 AND s.isFoilOnly = 1 AND NOT EXISTS (   SELECT 1   FROM set_translations st   WHERE st.setCode = s.code AND st.language = 'Japanese' );
SELECT s.code FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Russian' ORDER BY s.baseSetSize DESC LIMIT 1;
SELECT (COUNT(c.isOnlineOnly = 1) / COUNT(c.isOnlineOnly)) * 100 FROM cards c JOIN foreign_data f ON c.multiverseId = f.multiverseid WHERE f.language = 'Chinese Simplified';
Error: 第 9863 个样本有 0 个SQL。
SELECT c.id  FROM cards c  WHERE c.borderColor = 'black';
Error: 第 9865 个样本有 0 个SQL。
Error: 第 9866 个样本有 0 个SQL。
Error: 第 9867 个样本有 0 个SQL。
SELECT s.name FROM sets s WHERE s.setCode = 'ALL';
Error: 第 9869 个样本有 0 个SQL。
Error: 第 9870 个样本有 0 个SQL。
Error: 第 9871 个样本有 0 个SQL。
Error: 第 9872 个样本有 0 个SQL。
Error: 第 9873 个样本有 0 个SQL。
SELECT      f.language,      f.flavorText,      c.type FROM      cards c  JOIN      foreign_data f ON c.multiverseId = f.multiverseid  WHERE      c.watermark = 'colorpie';
SELECT (COUNT(c.convertedManaCost = 16) / COUNT(c.convertedManaCost)) * 100 FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Abyssal Horror' AND c.convertedManaCost = 10;
SELECT sets.setCode FROM sets WHERE sets.type = 'Expansion Commander';
SELECT f.name, c.type FROM cards c JOIN foreign_data f ON c.multiverseId = f.multiverseid WHERE c.watermark = 'Abzan';
Error: 第 9878 个样本有 0 个SQL。
SELECT COUNT(*)  FROM cards  WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;
Error: 第 9880 个样本有 0 个SQL。
SELECT asciiName FROM cards WHERE isTextless = 0;
Error: 第 9882 个样本有 0 个SQL。
Error: 第 9883 个样本有 0 个SQL。
Error: 第 9884 个样本有 0 个SQL。
Error: 第 9885 个样本有 0 个SQL。
SELECT DISTINCT purchaseUrls FROM cards WHERE promoTypes = 'bundle';
Error: 第 9887 个样本有 0 个SQL。
SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC;
SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';
Error: 第 9890 个样本有 0 个SQL。
SELECT set_translations.translation FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Italian';
Error: 第 9892 个样本有 0 个SQL。
Error: 第 9893 个样本有 0 个SQL。
Error: 第 9894 个样本有 0 个SQL。
SELECT COUNT(*)  FROM cards  WHERE setCode IN (SELECT setCode FROM set_translations WHERE translation = 'Hauptset Zehnte Edition')  AND artist = 'Adam Rex';
Error: 第 9896 个样本有 0 个SQL。
SELECT translation FROM set_translations WHERE language = 'zh-Hans' AND setCode IN (   SELECT code   FROM sets   WHERE name = 'Eighth Edition' );
SELECT * FROM sets WHERE mtgoCode IS NOT NULL AND EXISTS (   SELECT 1   FROM cards   WHERE cards.name = 'Angel of Mercy'   AND cards.setCode = sets.code );
Error: 第 9899 个样本有 0 个SQL。
SELECT s.type FROM sets s JOIN set_translations st ON s.setCode = st.setCode WHERE st.translation = 'Hauptset Zehnte Edition';
SELECT COUNT(*)  FROM set_translations  WHERE language = 'Italian'    AND setCode IN (SELECT code FROM sets WHERE block = 'Ice Age');
Error: 第 9902 个样本有 0 个SQL。
SELECT COUNT(*) FROM sets JOIN set_translations ON sets.setCode = set_translations.setCode WHERE set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL AND sets.baseSetSize < 10;
SELECT COUNT(*)  FROM cards  WHERE borderColor = 'black' AND setCode IN (SELECT setCode FROM sets WHERE name = 'Coldsnap');
Error: 第 9905 个样本有 0 个SQL。
SELECT artist FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND asciiName IN (SELECT set_translations.translation                   FROM set_translations                   WHERE setCode = 'Coldsnap');
Error: 第 9907 个样本有 0 个SQL。
SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR power IS NULL);
SELECT fd.flavorText FROM foreign_data fd WHERE fd.name = 'Ancestor''s Chosen' AND fd.language = 'Italian';
Error: 第 9910 个样本有 0 个SQL。
SELECT text  FROM foreign_data  WHERE name = 'Ancestor''s Chosen' AND language = 'German';
SELECT r.text  FROM cards c  JOIN sets s ON c.setCode = s.code  JOIN set_translations st ON s.setCode = st.setCode AND st.language = 'Italian'  JOIN rulings r ON c.uuid = r.uuid  WHERE s.name = 'Coldsnap';
SELECT scryfallOracleId, name FROM cards WHERE setCode = 'Coldsnap' AND language = 'Italian' ORDER BY convertedManaCost DESC LIMIT 1;
SELECT date FROM rulings WHERE text LIKE '%name = ''Reminisce''%';
SELECT DIVIDE(SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END), SUM(convertedManaCost))*100 AS percentage FROM cards WHERE name = 'Coldsnap';
SELECT ROUND(DIVIDE(SUM(cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL),                      (SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap')) * 100, 2) AS percentage
SELECT sets.code FROM sets WHERE sets.releaseDate = '2017-07-14';
SELECT keyruneCode FROM sets WHERE code = 'PKHC';
SELECT mcmId FROM sets WHERE code = 'SS2';
Error: 第 9920 个样本有 0 个SQL。
SELECT s.type FROM sets s WHERE s.name LIKE '%From the Vault: Lore';
SELECT s.parentCode FROM sets s WHERE s.name = 'Commander 2014 Oversized';
SELECT    c.asciiName,    c.text,    r.text AS ruling_text,    CASE      WHEN c.hasContentWarning = 1 THEN 'Yes'      ELSE 'No'    END AS has_missing_degraded_properties FROM    cards c    LEFT JOIN rulings r ON c.uuid = r.uuid  WHERE    c.artist = 'Jim Pavelec';
Error: 第 9924 个样本有 0 个SQL。
SELECT sets.baseSetSize FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Rinascita di Alara';
SELECT s.type FROM sets s JOIN set_translations st ON s.setCode = st.setCode WHERE st.translation = 'Huitième édition';
SELECT setTranslations.translation FROM cards JOIN foreign_data ON cards.multiverseId = foreign_data.multiverseid JOIN set_translations ON foreign_data.uuid = set_translations.id WHERE cards.name = 'Tendo Ice Bridge' AND set_translations.language = 'French';
SELECT COUNT(*)  FROM set_translations  WHERE setCode IN (SELECT code FROM sets WHERE name = 'Salvat 2011') AND translation IS NOT NULL;
SELECT s.name FROM sets s JOIN set_translations st ON s.setCode = st.setCode WHERE st.language = 'Japanese' AND s.name IN (   SELECT c.setCode   FROM cards c   WHERE c.name = 'Fellwar Stone' );
Error: 第 9930 个样本有 0 个SQL。
Error: 第 9931 个样本有 0 个SQL。
SELECT s.type FROM sets s JOIN set_translations st ON s.setCode = st.setCode WHERE st.translation = 'Samite Pilgrim'
Error: 第 9933 个样本有 0 个SQL。
Error: 第 9934 个样本有 0 个SQL。
SELECT      ROUND(DIVIDE(SUM(c.isNonFoilOnly = 1), SUM(st.language = 'Japanese')) * 100, 2) AS percentage FROM      cards c JOIN      set_translations st ON c.setCode = st.setCode WHERE      st.language = 'Japanese'
SELECT      (SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) /       SUM(CASE WHEN language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END)) * 100 AS percentage FROM      cards WHERE      language = 'Portuguese (Brazil)'
SELECT DISTINCT availability  FROM cards  WHERE artist != 'Aleksi Briclot' AND isTextless = 1;
SELECT s.id FROM sets s WHERE s.baseSetSize = (SELECT MAX(baseSetSize) FROM sets);
Error: 第 9939 个样本有 0 个SQL。
Error: 第 9940 个样本有 0 个SQL。
Error: 第 9941 个样本有 0 个SQL。
SELECT s.id FROM sets s WHERE s.type = 'commander' ORDER BY s.totalSetSize DESC LIMIT 1;
Error: 第 9943 个样本有 0 个SQL。
SELECT    c.originalReleaseDate,    l.format  FROM    cards c  JOIN    legalities l ON c.multiverseId = l.uuid  WHERE    c.rarity = 'mythic' AND l.status = 'legal'  ORDER BY    c.originalReleaseDate ASC  LIMIT 1;
SELECT COUNT(*)  FROM cards  WHERE artist = 'Volkan Baga'  AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.uuid = cards.multiverseId AND language = 'French');
Error: 第 9946 个样本有 0 个SQL。
SELECT l.format, c.name FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'banned' ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 9948 个样本有 0 个SQL。
SELECT      artist,      MIN(cardKingdomId) AS least_cards_illustrated,      LAG(format) OVER (ORDER BY MIN(cardKingdomId)) AS format FROM      cards GROUP BY      artist ORDER BY      least_cards_illustrated;
SELECT l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = '1997' AND c.artist = 'D. Alexander Gregory' AND l.format = 'legacy' AND c.hasContentWarning = 1;
SELECT c.name, l.format FROM cards c JOIN legalities l ON c.multiverseId = l.uuid WHERE c.edhrecRank = 1 AND l.status = 'banned';
SELECT AVG(s.id) AS avg_set_release,         (SELECT MAX(COUNT(f.language)) FROM foreign_data f) AS common_language FROM sets s WHERE s.releaseDate BETWEEN '2012-01-01' AND '2015-12-31';
SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';
Error: 第 9954 个样本有 0 个SQL。
Error: 第 9955 个样本有 0 个SQL。
SELECT r.text FROM rulings r JOIN cards c ON r.uuid = c.uuid WHERE c.artist = 'Kev Walker' ORDER BY MAX(r.date) DESC;
SELECT c.name, l.format FROM cards c JOIN sets s ON c.setCode = s.code JOIN legalities l ON c.multiverseId = l.uuid WHERE s.name = 'Hour of Devastation' AND l.status = 'legal';
SELECT s.name FROM sets s WHERE NOT EXISTS (   SELECT 1   FROM set_translations st   WHERE st.setCode = s.code AND st.language LIKE '%Japanese%' ) AND EXISTS (   SELECT 1   FROM set_translations st   WHERE st.setCode = s.code AND st.language = 'Korean' );
SELECT    DISTINCT frameVersion AS "Frame Style",    name AS "Card Name" FROM    cards WHERE    artist = 'Allen Williams' UNION SELECT    'Banned Cards',   name FROM    legalities WHERE    status = 'banned';
SELECT UserId, DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;
Error: 第 9961 个样本有 0 个SQL。
SELECT COUNT(*)  FROM users  WHERE LastAccessDate > '2014-09-01 00:00:00';
SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users);
SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;
SELECT COUNT(*)  FROM users  WHERE Views > 10 AND YEAR(CreationDate) > 2013;
Error: 第 9966 个样本有 0 个SQL。
Error: 第 9967 个样本有 0 个SQL。
SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Eliciting priors from experts';
SELECT Title FROM posts WHERE OwnerDisplayName = 'csgillespie' ORDER BY ViewCount DESC LIMIT 1;
SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id ORDER BY p.FavoriteCount DESC LIMIT 1;
Error: 第 9971 个样本有 0 个SQL。
Error: 第 9972 个样本有 0 个SQL。
SELECT u.DisplayName FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Title = 'Examples for teaching: Correlation does not mean causation';
SELECT COUNT(*)  FROM posts  WHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'csgillespie')  AND ParentId IS NULL;
SELECT DISTINCT users.DisplayName FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.ClosedDate IS NOT NULL;
SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (   SELECT Id   FROM users   WHERE Age > 65 ) AND Score >= 20;
SELECT Location FROM users WHERE Id IN (   SELECT OwnerUserId   FROM posts   WHERE Title = 'Eliciting priors from experts' )
SELECT posts.Body FROM tags JOIN posts ON tags.ExcerptPostId = posts.Id WHERE tags.TagName = 'bayesian';
SELECT p.Body FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.Count = (SELECT MAX(Count) FROM tags);
SELECT COUNT(*)  FROM badges  WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'csgillespie');
Error: 第 9981 个样本有 0 个SQL。
SELECT COUNT(*)  FROM badges  WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'csgillespie')  AND YEAR(Date) = 2011;
SELECT users.DisplayName FROM users WHERE users.Id = (   SELECT UserId   FROM badges   GROUP BY UserId   ORDER BY COUNT(Id) DESC   LIMIT 1 )
SELECT AVG(p.Score)  FROM posts p  WHERE p.OwnerUserId IN (SELECT u.Id FROM users u WHERE u.DisplayName = 'csgillespie')
SELECT AVG(COUNT(b.Id)) / COUNT(u.DisplayName) FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Views > 200;
SELECT      ROUND(         (COUNT(p.Id) / COUNT(u.Id)) * 100, 2     ) AS Percentage FROM      posts p INNER JOIN      users u ON p.OwnerUserId = u.Id WHERE      p.Score > 20 AND u.Age > 65;
SELECT COUNT(*)  FROM votes  WHERE UserId = 58 AND CreationDate = '2010-07-19';
SELECT MAX(CreationDate) AS MaxVoteCreationDate FROM votes
Error: 第 9989 个样本有 0 个SQL。
SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score = (SELECT MAX(s.Score) FROM comments s)
SELECT COUNT(*)  FROM comments  WHERE PostId IN (SELECT Id FROM posts WHERE ViewCount = 1910);
Error: 第 9992 个样本有 0 个SQL。
SELECT c.Text FROM comments c WHERE c.PostId IN (   SELECT p.Id   FROM posts p   WHERE p.ParentId = 107829 ) AND c.CommentCount = 1
SELECT p.Title, p.ClosedDate FROM posts p JOIN comments c ON p.Id = c.PostId JOIN users u ON c.UserId = u.Id WHERE u.Id = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0' AND (p.ClosedDate IS NULL OR p.ClosedDate IS NOT NULL);
SELECT Reputation FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Id = 65041);
SELECT COUNT(*)  FROM posts  WHERE OwnerDisplayName = 'Tiago Pasqualini';
SELECT UserDisplayName FROM votes WHERE Id = 6347;
SELECT COUNT(*)  FROM votes  WHERE PostId IN (   SELECT Id    FROM posts    WHERE Title LIKE '%data visualization%' )
SELECT Name  FROM badges  WHERE UserId IN (   SELECT Id    FROM users    WHERE DisplayName = 'DatEpicCoderGuyWhoPrograms' );
SELECT COUNT(posts.Id) / COUNT(votes.Id)  FROM posts  JOIN users ON posts.OwnerUserId = users.Id  WHERE users.Id = 24;
Error: 第 10001 个样本有 0 个SQL。
SELECT Text  FROM comments  WHERE Score = 17;
Error: 第 10003 个样本有 0 个SQL。
SELECT Name  FROM badges  WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'SilentGhost');
SELECT u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'thank you user93!';
SELECT Text  FROM comments  WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'A Lion');
SELECT u.DisplayName, u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Understanding what Dassault iSight is doing?';
SELECT Text  FROM comments  WHERE PostId IN (     SELECT Id      FROM posts      WHERE Title = 'How does gentle boosting differ from AdaBoost?' )
SELECT u.DisplayName FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Necromancer' ORDER BY u.DisplayName LIMIT 10;
Error: 第 10010 个样本有 0 个SQL。
SELECT p.Title FROM posts p WHERE p.LastEditorUserId IN (   SELECT u.Id   FROM users u   WHERE u.DisplayName = 'Vebjorn Ljosa' )
SELECT SUM(p.Score) AS TotalScore, u.WebsiteUrl FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE u.DisplayName = 'Yevgeny';
SELECT c.* FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND p.OwnerUserId IN (SELECT u.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.LastEditorUserId = u.Id);
SELECT SUM(BountyAmount)  FROM votes  WHERE PostId IN (   SELECT Id    FROM posts    WHERE Title LIKE '%data%' )
SELECT u.DisplayName FROM votes v JOIN posts p ON v.PostId = p.Id WHERE v.BountyAmount = 50 AND p.Body LIKE '%variance%';
SELECT      p.Title,      p.ViewCount,      c.Text,      c.Score FROM      posts p JOIN      tags t ON p.Tags LIKE '%humor%' JOIN      comments c ON p.Id = c.PostId WHERE      c.Text IS NOT NULL GROUP BY      p.Title,      p.ViewCount,      c.Text,      c.Score ORDER BY      p.ViewCount DESC;
Error: 第 10017 个样本有 0 个SQL。
SELECT UserId FROM users ORDER BY Reputation DESC LIMIT 1;
SELECT UserId FROM users ORDER BY Views LIMIT 1;
SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Supporter' AND YEAR(b.Date) = 2011;
Error: 第 10021 个样本有 0 个SQL。
SELECT COUNT(DISTINCT u.Id) FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location = 'New York' AND b.Name IN ('Teacher', 'Supporter');
SELECT u.Reputation FROM users u WHERE u.Id = (   SELECT p.OwnerUserId   FROM posts p   WHERE p.Id = 1 )
Error: 第 10024 个样本有 0 个SQL。
SELECT u.DisplayName, b.Name AS Badge FROM users u JOIN (   SELECT UserId, COUNT(*) AS CommentCount   FROM comments   GROUP BY UserId   ORDER BY CommentCount DESC   LIMIT 1 ) c ON u.Id = c.UserId JOIN badges b ON u.Id = b.UserId WHERE u.Id = c.UserId;
SELECT COUNT(DISTINCT u.Id)  FROM users u  JOIN badges b ON u.Id = b.UserId  WHERE u.Location = 'India' AND b.Name = 'Teacher';
SELECT (COUNT(Name) - COUNT(CASE WHEN Year(Date) = 2011 THEN Name END)) / COUNT(Name) * 100 FROM badges WHERE Name = 'Students' AND Year(Date) IN (2010, 2011);
SELECT ph.PostHistoryTypeId, COUNT(DISTINCT ph.UserId) AS UniqueCommenters FROM postHistory ph WHERE ph.PostId = 3720 GROUP BY ph.PostHistoryTypeId;
SELECT p.ViewCount FROM posts p WHERE p.Id IN (   SELECT pl.PostId   FROM postLinks pl   WHERE pl.RelatedPostId = 61217   UNION   SELECT p.Id   FROM posts p   WHERE p.Id = 61217 )
Error: 第 10030 个样本有 0 个SQL。
SELECT p.Id, p.Score, u.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 60;
SELECT SUM(FavoriteCount)  FROM posts  WHERE OwnerUserId = 686 AND YEAR(CreationDate) = 2011;
SELECT AVG(SUM(UpVotes) / COUNT(UserId)) AS avg_up_votes, AVG(SUM(Age) / COUNT(UserId)) AS avg_age FROM users WHERE COUNT(CASE WHEN EXISTS (SELECT 1 FROM posts WHERE posts.OwnerUserId = users.Id) THEN 1 END) > 10;
SELECT COUNT(*)  FROM badges  WHERE Name = 'Announcer';
SELECT b.Name  FROM badges b  WHERE b.Date = '2010-07-19 19:39:08'  AND b.UserId IN (SELECT u.Id FROM users u);
SELECT COUNT(*)  FROM comments  WHERE Score > 60;
SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';
SELECT COUNT(*)  FROM posts  WHERE Score = 10;
SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);
SELECT u.Reputation  FROM users u  JOIN badges b ON u.Id = b.UserId  WHERE b.Date = '2010-07-19 19:39:08.0';
SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Pierre';
SELECT DISTINCT Date FROM badges WHERE UserId IN (   SELECT Id   FROM users   WHERE Location = 'Rochester, NY' )
SELECT (COUNT(b.UserId) / (SELECT COUNT(UserId) FROM users)) * 100 FROM badges b WHERE b.Name = 'Teacher';
SELECT (COUNT(u.Id) WHERE u.Age BETWEEN 13 AND 18) / COUNT(b.UserId) * 100 FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Organizer';
Error: 第 10045 个样本有 0 个SQL。
Error: 第 10046 个样本有 0 个SQL。
SELECT u.Age FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location = 'Vienna, Austria';
SELECT COUNT(*)  FROM badges  JOIN users ON badges.UserId = users.Id  WHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65;
SELECT COUNT(DISTINCT users.Views)  FROM users  JOIN badges ON users.Id = badges.UserId  WHERE badges.Date = '2010-07-19 19:39:08.0';
SELECT b.Name  FROM badges b  JOIN users u ON b.UserId = u.Id  WHERE u.Reputation = (SELECT MIN(Reputation) FROM users);
SELECT Name FROM badges WHERE UserId IN (     SELECT Id     FROM users     WHERE DisplayName = 'Sharpie' )
SELECT COUNT(*)  FROM badges  WHERE Name = 'Supporter' AND UserId IN (   SELECT Id    FROM users    WHERE Age > 65 )
SELECT DisplayName FROM users WHERE Id = 30;
SELECT COUNT(DISTINCT u.Id)  FROM users u  WHERE u.Location = 'New York';
SELECT COUNT(*)  FROM votes  WHERE YEAR(CreationDate) = 2010;
SELECT COUNT(*)  FROM users  WHERE Age BETWEEN 19 AND 65;
SELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users);
SELECT DIVIDE(COUNT(Id) WHERE YEAR(CreationDate) = 2010, COUNT(Id) WHERE YEAR(CreationDate) = 2011) FROM votes;
SELECT t.TagName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN tags t ON p.Tags LIKE '%<' + CONVERT(varchar, t.Id) + '%>' WHERE u.DisplayName = 'John Stauffer';
Error: 第 10060 个样本有 0 个SQL。
SELECT COUNT(*)  FROM votes  WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'Harlan');
SELECT p.Id FROM posts p WHERE p.OwnerDisplayName = 'slashnick' ORDER BY p.AnswerCount DESC LIMIT 1;
SELECT      Title,      ViewCount FROM      posts WHERE      OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY      ViewCount DESC LIMIT 1;
SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Matt Parker' AND PostId > 4;
SELECT COUNT(*)  FROM comments  WHERE Score < 60 AND UserId IN (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan');
SELECT DISTINCT t.TagName  FROM posts p  JOIN tags t ON p.Id = t.ExcerptPostId  JOIN comments c ON p.Id = c.PostId  WHERE p.OwnerDisplayName = 'Mark Meckes'  AND c.Id IS NULL;
SELECT u.DisplayName  FROM badges b  JOIN users u ON b.UserId = u.Id  WHERE b.Name = 'Organizer';
SELECT      DIVIDE(COUNT(p.Id), (SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Community')) as percentage FROM      posts p JOIN      tags t ON p.Tags LIKE '%,' + t.TagName + ',%' WHERE      t.TagName = 'r';
SELECT SUM(ViewCount) - SUM(ViewCount)  FROM posts  WHERE OwnerDisplayName = 'Mornington' OR OwnerDisplayName = 'Amos';
Error: 第 10070 个样本有 0 个SQL。
SELECT COUNT(*)  FROM posts  WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';
SELECT u.DisplayName, u.Age FROM users u WHERE u.Views = (SELECT MAX(views) FROM users)
SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';
SELECT COUNT(*)  FROM comments  WHERE Score < 60 AND UserId = 13;
SELECT p.Title, c.UserDisplayName FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score > 60;
SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location LIKE '%North Pole%' AND YEAR(b.Date) = 2011;
SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.FavoriteCount > 150;
SELECT      ph.Id,      ph.Text,      COUNT(ph.Id) AS PostHistoryCount,      MAX(ph.LastEditDate) AS LastEditDate FROM      postHistory ph WHERE      ph.PostId IN (         SELECT              p.Id         FROM              posts p         WHERE              p.Title = 'What is the best introductory Bayesian statistics textbook?'     ) GROUP BY      ph.Id,      ph.Text
SELECT u.LastAccessDate, u.Location FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Outliers';
SELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId WHERE pl.LinkTypeId = 1 AND p.Id = (     SELECT pl.RelatedPostId     FROM postLinks pl     JOIN posts p ON pl.RelatedPostId = p.Id     WHERE pl.LinkTypeId = 1 AND p.Title LIKE '%How to tell if something happened in a data set which monitors a value over time%' );
SELECT p.Id, b.Name FROM posts p JOIN comments c ON p.Id = c.PostId JOIN users u ON c.UserId = u.Id JOIN badges b ON u.Id = b.UserId WHERE u.UserDisplayName = 'Samuel' AND YEAR(p.CreationDate) = 2013 OR YEAR(b.Date) = 2013
SELECT OwnerDisplayName FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts);
SELECT u.DisplayName, u.Location FROM users u JOIN tags t ON u.Id = t.ExcerptPostId WHERE t.TagName = 'hypothesis-testing';
SELECT pl.Title, plh.LinkTypeId FROM posts p JOIN postLinks pl ON p.Id = pl.PostId JOIN postLinks plh ON plh.PostId = p.Id AND plh.LinkTypeId = 2 WHERE p.Title = 'What are principal component scores?';
SELECT p.Title, p.OwnerDisplayName, ph.ParentId FROM posts p JOIN postHistory ph ON p.Id = ph.PostId WHERE p.ParentId IS NOT NULL ORDER BY p.Score DESC LIMIT 1;
SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 GROUP BY u.DisplayName, u.WebsiteUrl ORDER BY MAX(v.BountyAmount) DESC LIMIT 1;
SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;
Error: 第 10088 个样本有 0 个SQL。
SELECT posts.OwnerUserId FROM posts ORDER BY posts.FavoriteCount DESC LIMIT 1;
SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);
SELECT COUNT(*)  FROM posts  JOIN votes ON posts.Id = votes.PostId  WHERE YEAR(posts.CreationDate) = 2011 AND votes.BountyAmount = 50;
SELECT Id FROM users ORDER BY Age LIMIT 1;
SELECT p.Score FROM posts p JOIN tags t ON p.Tags LIKE '%<' || t.TagName || '>%' WHERE t.Count = (SELECT MAX(Count) FROM tags)
SELECT    DIVIDE(COUNT(pl.Id), 12)  FROM    postLinks pl    JOIN posts p ON pl.PostId = p.Id  WHERE    YEAR(pl.CreationDate) = 2010    AND p.AnswerCount <= 2;
SELECT p.Id FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.UserId = 1465 ORDER BY p.FavoriteCount DESC LIMIT 1;
SELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId ORDER BY pl.CreationDate ASC LIMIT 1;
SELECT UserDisplayName FROM users WHERE Id IN (   SELECT UserId   FROM badges   GROUP BY UserId   ORDER BY COUNT(Name) DESC   LIMIT 1 )
SELECT MIN(CreationDate)  FROM votes  WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'chl');
SELECT MIN(CreationDate)  FROM users  WHERE Age = (SELECT MIN(Age) FROM users);
SELECT UserDisplayName FROM badges WHERE Name = 'Autobiographer' ORDER BY Date LIMIT 1;
Error: 第 10101 个样本有 0 个SQL。
SELECT AVG(v.PostId)  FROM votes v  JOIN users u ON v.UserId = u.Id  WHERE u.Age = (SELECT MAX(Age) FROM users);
SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);
SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;
SELECT UserDisplayName  FROM users  WHERE Age BETWEEN 19 AND 65;
SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens' AND YEAR(CreationDate) = 2010);
SELECT p.Id, p.Title FROM posts p WHERE p.OwnerDisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;
SELECT p.Id, p.Title FROM posts p WHERE p.Score = (SELECT MAX(Score) FROM posts);
SELECT AVG(Score)  FROM posts  WHERE OwnerDisplayName = 'Stephen Turner';
Error: 第 10110 个样本有 0 个SQL。
SELECT p.Id, p.OwnerDisplayName FROM posts p WHERE p.CreationDate >= '2010-01-01' AND p.CreationDate < '2011-01-01' ORDER BY p.FavoriteCount DESC LIMIT 1;
SELECT DIVIDE(COUNT(posts.Id),                (SELECT COUNT(*) FROM posts WHERE CreationDate = 2011 AND Reputation > 1000)) * 100 as percentage FROM posts WHERE CreationDate = 2011;
SELECT    DIVIDE(COUNT(u.Id) WHERE u.Age BETWEEN 13 AND 18), COUNT(u.Id)) AS percentage FROM    users u
SELECT SUM(ViewCount) AS TotalViews, u.DisplayName AS LastPoster FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Computer Game Datasets';
SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);
SELECT COUNT(*)  FROM comments  WHERE PostId IN (   SELECT PostId    FROM posts    ORDER BY Score DESC    LIMIT 1 );
SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;
SELECT u.DisplayName, u.Location FROM posts p JOIN users u ON p.LastEditorUserId = u.Id WHERE p.Id = 183 ORDER BY p.LastEditDate DESC LIMIT 1;
SELECT Name FROM badges WHERE UserId IN (   SELECT Id   FROM users   WHERE DisplayName = 'Emmett' ) ORDER BY Date DESC LIMIT 1;
SELECT COUNT(*)  FROM users  WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;
SELECT    DATEDIFF(CreationDate, (SELECT CreationDate FROM users WHERE DisplayName = 'Zolomon')) AS TimeTaken FROM    badges WHERE    DisplayName = 'Zolomon';
SELECT COUNT(p.Id) AS posts, COUNT(c.Id) AS comments FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.CreationDate = (SELECT MAX(CreationDate) FROM users)
SELECT c.Text, u.DisplayName FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 1;
SELECT COUNT(DISTINCT u.Id)  FROM users u  JOIN badges b ON u.Id = b.UserId  WHERE b.Name = 'Citizen Patrol';
SELECT COUNT(*) FROM posts JOIN tags ON posts.Tags LIKE '%[' + tags.TagName + ']%'; WHERE tags.TagName = 'careers';
SELECT Reputation, ViewCount FROM users WHERE DisplayName = 'Jarrod Dixon';
SELECT COUNT(*)  FROM comments  WHERE PostId IN (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')  AND UserId IN (SELECT Id FROM users)  UNION ALL  SELECT COUNT(*)  FROM posts  WHERE PostTypeId = 2  AND Id IN (SELECT PostId FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE Title = 'Clustering 1D data') AND UserId IN (SELECT Id FROM users));
SELECT CreationDate  FROM users  WHERE DisplayName = 'IrishStat';
SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE votes.BountyAmount >= 30;
SELECT      ROUND(COUNT(p.Id) / (SELECT COUNT(*) FROM posts WHERE OwnerUserId = u.Id) * 100, 2) AS percentage FROM      posts p     JOIN users u ON p.OwnerUserId = u.Id WHERE      p.Score >= 50 ORDER BY      u.Reputation DESC LIMIT 1;
SELECT COUNT(*) FROM posts WHERE Score < 20;
SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;
SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';
SELECT u.Reputation, u.UpVotes FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'fine, you win :)';
SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'How can I adapt ANOVA for binary data?';
SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ViewCount BETWEEN 100 AND 150 ORDER BY c.Score DESC LIMIT 1;
SELECT c.CreationDate, u.Age FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text LIKE '%http://%'
SELECT COUNT(*) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;
SELECT COUNT(*)  FROM comments  WHERE CommentCount = 1 AND Score = 0;
SELECT COUNT(DISTINCT c.UserId)  FROM comments c  JOIN users u ON c.UserId = u.Id  WHERE c.Score = 0 AND u.Age = 40;
Error: 第 10141 个样本有 0 个SQL。
SELECT u.UpVotes FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'R is also lazy evaluated.';
SELECT * FROM comments WHERE UserId IN (   SELECT Id   FROM users   WHERE DisplayName = 'Harvey Motulsky' )
SELECT u.UserDisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0;
SELECT    DIVIDE(COUNT(c.UserId), (SELECT COUNT(*) FROM comments c WHERE c.Score BETWEEN 5 AND 10)) AS percentage FROM    comments c WHERE    c.Score BETWEEN 5 AND 10   AND c.UpVotes = 0
Error: 第 10146 个样本有 0 个SQL。
SELECT COUNT(*) FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';
SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;
SELECT s.full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.full_name HAVING COUNT(hp.hero_id) > 15;
SELECT COUNT(*) FROM superhero WHERE eye_colour_id IN (   SELECT id   FROM colour   WHERE colour = 'Blue' )
SELECT c.colour FROM superhero s JOIN colour c ON s.skin_colour_id = c.id WHERE s.superhero_name = 'Apocalypse';
SELECT COUNT(*) FROM superhero JOIN eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour ON eye_colour.id = colour.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility';
SELECT s.superhero_name FROM superhero s JOIN colour e ON s.eye_colour_id = e.id JOIN colour h ON s.hair_colour_id = h.id WHERE e.colour = 'Blue' AND h.colour = 'Blond';
Error: 第 10154 个样本有 0 个SQL。
SELECT full_name FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND height_cm = (SELECT MAX(height_cm) FROM superhero);
SELECT publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero_name = 'Sauron';
SELECT COUNT(*)  FROM superhero  WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')  AND eye_colour_id IN (SELECT id FROM colour WHERE colour = 'Blue');
SELECT AVG(height_cm)  FROM superhero  WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');
SELECT MULTIPLY(DIVIDE(SUM(CASE WHEN h.power_id = sp.id THEN 1 ELSE 0 END), COUNT(sh.id)), 100) AS percentage FROM superhero sh JOIN publisher p ON sh.publisher_id = p.id JOIN hero_power h ON sh.id = h.hero_id JOIN superpower sp ON h.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';
SELECT COUNT(*)  FROM superhero  WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC Comics');
SELECT p.publisher_name FROM publisher p JOIN superhero s ON p.id = s.publisher_id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value LIMIT 1;
SELECT COUNT(*) FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'Gold') AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');
SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name = 'Blue Beetle II';
SELECT COUNT(*)  FROM superhero  WHERE hair_colour_id IN (SELECT id FROM colour WHERE colour = 'Blond');
SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Intelligence' ORDER BY ha.attribute_value ASC LIMIT 1;
SELECT s.race_id FROM superhero s WHERE s.superhero_name = 'Copycat';
SELECT COUNT(*)  FROM superhero  JOIN hero_attribute ON superhero.id = hero_attribute.hero_id  JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute_name = 'Durability' AND attribute_value < 50;
SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';
SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.gender_id IN (SELECT id FROM gender WHERE gender = 'Female') AND attribute.attribute_name = 'Strength' AND attribute.attribute_value = 100;
SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY COUNT(hp.power_id) DESC LIMIT 1;
SELECT COUNT(*)  FROM superhero  WHERE race_id = (SELECT id FROM race WHERE race = 'Vampire');
SELECT      MULTIPLY(DIVIDE(SUM(CASE WHEN alignment = 'Bad' THEN 1 ELSE 0 END), COUNT(id)), 100) AS percentage_of_self_interest_superheroes     , COUNT(*) AS total_superheroes_published_by_marvel_comics FROM      superhero WHERE      publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND alignment = 'Bad';
SELECT    SUBTRACT(SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END),             SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference FROM    superhero WHERE    publisher_name IN ('Marvel Comics', 'DC Comics');
Error: 第 10174 个样本有 0 个SQL。
SELECT AVG(ha.attribute_value)  FROM hero_attribute ha;
SELECT COUNT(*)  FROM superhero  WHERE full_name IS NULL;
SELECT c.colour  FROM superhero s  JOIN colour c ON s.eye_colour_id = c.id  WHERE s.id = 75;
SELECT power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Deathlok';
SELECT AVG(weight_kg)  FROM superhero  WHERE gender_id = 2;
SELECT s.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower p ON hp.power_id = p.id WHERE s.gender_id IN (SELECT id FROM gender WHERE gender = 'Male') LIMIT 5;
SELECT superhero_name FROM superhero WHERE race_id IN (SELECT id FROM race WHERE race = 'Alien');
SELECT s.superhero_name FROM superhero s WHERE s.height_cm BETWEEN 170 AND 190 AND s.eye_colour_id = 1;
SELECT power_name FROM hero_power WHERE hero_id = 56;
SELECT s.full_name FROM superhero s WHERE s.race_id = (SELECT id FROM race WHERE race = 'Demi-God') LIMIT 5;
SELECT COUNT(*)  FROM superhero  WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');
SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.weight_kg = 169;
SELECT c.colour FROM superhero s JOIN colour c ON s.hair_colour_id = c.id WHERE s.height_cm = 185 AND s.race_id = (SELECT id FROM race WHERE race = 'human');
SELECT c.colour  FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg = (SELECT MAX(weight_kg) FROM superhero);
SELECT    MULTIPLY(DIVIDE(SUM(p.publisher_id = 13), COUNT(p.publisher_id)), 100) AS percentage FROM    superhero s WHERE    s.height_cm BETWEEN 150 AND 180   AND s.publisher_id = 13;
SELECT s.full_name FROM superhero s WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'male') AND s.weight_kg > (SELECT AVG(s2.weight_kg) * 0.79 FROM superhero s2);
SELECT sp.power_name, COUNT(hp.hero_id) AS max_count FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id GROUP BY sp.power_name ORDER BY max_count DESC LIMIT 1;
SELECT ha.attribute_value  FROM hero_attribute ha  JOIN superhero s ON ha.hero_id = s.id  WHERE s.superhero_name = 'Abomination';
SELECT sp.power_name FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id WHERE hp.hero_id = 1;
SELECT COUNT(*)  FROM hero_power  WHERE hero_id IN (SELECT id FROM superhero)  AND power_id IN (SELECT id FROM superpower WHERE power_name = 'stealth');
SELECT s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'strength' ORDER BY ha.attribute_value DESC LIMIT 1;
SELECT DIVIDE(COUNT(s.superhero_id), SUM(sc.id = 1))  FROM superhero s LEFT JOIN colour sc ON s.skin_colour_id = sc.id  WHERE sc.id IS NULL;
Error: 第 10197 个样本有 0 个SQL。
SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'durability' AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics') ORDER BY ha.attribute_value DESC LIMIT 1;
SELECT colour.colour  FROM superhero  JOIN colour ON superhero.eye_colour_id = colour.id  WHERE superhero.full_name = 'Abraham Sapien';
SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight';
SELECT s.eye_colour_id AS eyes, s.hair_colour_id AS hair, s.skin_colour_id AS skin_colour FROM superhero s WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');
SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN colour ec ON s.eye_colour_id = ec.id JOIN colour hc ON s.hair_colour_id = hc.id JOIN colour sc ON s.skin_colour_id = sc.id JOIN publisher p ON s.publisher_id = p.id WHERE ec.id = hc.id AND hc.id = sc.id;
SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero_name = 'A-Bomb';
SELECT      MULTIPLY(         DIVIDE(             (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')),             (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))         ),         100     ) AS percentage
SELECT s.superhero_name FROM superhero s WHERE s.full_name = 'Charles Chandler' AND s.race_id = (SELECT id FROM race WHERE race = ?);
SELECT s.gender_id, g.gender  FROM superhero s  JOIN gender g ON s.gender_id = g.id  WHERE s.superhero_name = 'Agent 13';
SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation';
Error: 第 10208 个样本有 0 个SQL。
SELECT power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.full_name = 'Hunter Zolomon';
SELECT superhero.height_cm FROM superhero WHERE superhero.eye_colour_id IN (   SELECT colour.id   FROM colour   WHERE colour.colour = 'Amber' );
SELECT s.superhero_name FROM superhero s WHERE s.eye_colour_id = (SELECT c.id FROM colour c WHERE c.colour = 'Black')    AND s.hair_colour_id = (SELECT c.id FROM colour c WHERE c.colour = 'Black');
SELECT colour.colour  FROM superhero  JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour = 'Gold';
SELECT s.full_name FROM superhero s WHERE s.race_id IN (SELECT id FROM race WHERE race = 'Vampire');
SELECT s.superhero_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';
SELECT COUNT(*)  FROM superhero  JOIN hero_attribute ON superhero.id = hero_attribute.hero_id  JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Strength'  AND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'));
Error: 第 10216 个样本有 0 个SQL。
SELECT    MULTIPLY(     DIVIDE(       COUNT(s.superhero_name)        WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')        AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'),       COUNT(s.publisher_name)        WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')     ),    100 ) AS percentage
SELECT AVG(s.weight_kg)  FROM superhero s  WHERE s.race_id IN (SELECT id FROM race WHERE race = 'Alien');
SELECT SUBTRACT(SUM(s.weight_kg) FROM superhero s WHERE s.full_name = 'Emil Blonsky'),         SUM(s.weight_kg) FROM superhero s WHERE s.full_name = 'Charles Chandler')
SELECT    superhero.superhero_name,    AVG(height_cm) AS average_height FROM    superhero GROUP BY    superhero.superhero_name;
SELECT power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero_name = 'Abomination';
SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1;
SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' ORDER BY ha.attribute_value DESC LIMIT 1;
SELECT COUNT(*)  FROM superhero  WHERE alignment_id = 3;
SELECT ha.attribute_name, ha.attribute_value  FROM superhero s  JOIN hero_attribute ha ON s.id = ha.hero_id  WHERE s.superhero_name = '3-D Man';
SELECT s.superhero_name FROM superhero s WHERE s.eye_colour_id = 7 AND s.hair_colour_id = 9;
SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');
SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL OR publisher_id = 1;
SELECT MULTIPLY(DIVIDE(SUM(CASE WHEN superhero.eye_colour_id = 7 THEN 1 ELSE 0 END), COUNT(*)), 100.0) AS percentage FROM superhero;
SELECT DIVIDE(SUM(gender_id = 1), SUM(gender_id = 2)) AS ratio FROM superhero;
SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);
SELECT id FROM superpower WHERE power_name = 'cryokinesis';
SELECT superhero_name FROM superhero WHERE id = 294;
SELECT s.full_name FROM superhero s WHERE s.weight_kg = 0 OR s.weight_kg IS NULL;
SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan';
SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.full_name = 'Helen Parr';
SELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.weight_kg = 108 AND s.height_cm = 188;
SELECT publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38;
SELECT r.race FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute) JOIN race r ON s.race_id = r.id;
SELECT s.alignment_id, sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = 'Atom IV';
SELECT s.full_name FROM superhero s WHERE s.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue');
SELECT AVG(ha.attribute_value)  FROM hero_attribute ha  JOIN superhero s ON ha.hero_id = s.id  WHERE s.alignment_id = 3;
SELECT colour.colour FROM superhero JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value = 100;
SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND alignment_id = 1;
SELECT superhero_name  FROM superhero  WHERE id IN (   SELECT hero_id    FROM hero_attribute    WHERE attribute_value BETWEEN 75 AND 80 );
SELECT r.race  FROM superhero s  JOIN gender g ON s.gender_id = g.id  JOIN colour hc ON s.hair_colour_id = hc.id  JOIN colour ec ON s.eye_colour_id = ec.id  JOIN colour sc ON s.skin_colour_id = sc.id  JOIN race r ON s.race_id = r.id  WHERE hc.colour = 'blue' AND g.gender = 'male';
SELECT      MULTIPLY(         DIVIDE(             SUM(gender.id = 2 WHERE alignment.id = 2),              COUNT(alignment.id = 2)         ),          100.0     ) AS percentage FROM      superhero,      gender,      alignment WHERE      superhero.alignment_id = alignment.id      AND superhero.gender_id = gender.id      AND alignment.id = 2     AND gender.id = 2;
SELECT    SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END)  FROM    superhero  WHERE    weight_kg = 0 OR weight_kg IS NULL;
SELECT attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero_name = 'Hulk' AND attribute_name = 'Strength';
SELECT power_name  FROM hero_power  JOIN superhero ON hero_power.hero_id = superhero.id  WHERE superhero_name = 'Ajax';
SELECT COUNT(*) FROM superhero WHERE skin_colour_id = (SELECT id FROM colour WHERE colour = 'Green') AND alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');
SELECT COUNT(*) FROM superhero WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');
SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name ASC;
SELECT s.gender_id, g.gender  FROM superhero s  JOIN hero_power hp ON s.id = hp.hero_id  JOIN superpower sp ON hp.power_id = sp.id  WHERE sp.power_name = 'Phoenix Force';
SELECT superhero_name FROM superhero WHERE publisher_name = 'DC Comics' ORDER BY weight_kg DESC LIMIT 1;
SELECT AVG(height_cm)  FROM superhero  WHERE race_id NOT IN (SELECT id FROM race WHERE race = 'Human')  AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');
SELECT COUNT(*)  FROM superhero  JOIN hero_attribute ON superhero.id = hero_attribute.hero_id  JOIN attribute ON hero_attribute.attribute_id = attribute.id  WHERE attribute.attribute_name = 'Speed' AND attribute.attribute_value = 100;
SELECT    SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS dc_count,   SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_count,   (SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS difference FROM    superhero WHERE    publisher_name IN ('DC Comics', 'Marvel Comics');
SELECT a.attribute_name FROM hero_attribute ha JOIN attribute a ON ha.attribute_id = a.id WHERE ha.hero_id = (SELECT s.id FROM superhero s WHERE s.superhero_name = 'Black Panther') ORDER BY ha.attribute_value LIMIT 1;
SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero_name = 'Abomination';
SELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero);
SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';
SELECT    MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'George Lucas'), COUNT(publisher_name = 'George Lucas')), 100.0) AS percentage FROM    superhero WHERE    publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') AND gender_id IN (SELECT id FROM gender WHERE gender = 'Female');
SELECT    MULTIPLY(     DIVIDE(       SUM(CASE WHEN alignment = 'Good' AND publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END),        COUNT(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)     ),      100.0   ) AS percentage
SELECT COUNT(*)  FROM superhero  WHERE full_name LIKE 'John%';
SELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute);
Error: 第 10267 个样本有 0 个SQL。
SELECT s.full_name FROM superhero s JOIN eye_colour ec ON s.eye_colour_id = ec.id WHERE s.weight_kg < 100 AND ec.colour_id IN (   SELECT c.id   FROM colour c   WHERE c.colour = 'brown' )
Error: 第 10269 个样本有 0 个SQL。
SELECT s.weight_kg, r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.id = 40;
Error: 第 10271 个样本有 0 个SQL。
SELECT s.id FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Intelligence';
SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Blackwulf';
SELECT sp.power_name FROM hero_power hp JOIN superhero s ON hp.hero_id = s.id WHERE s.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);
SELECT d.driverRef FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.q1 = (SELECT MAX(q1) FROM qualifying WHERE raceId = 18) LIMIT 5;
SELECT surname FROM drivers WHERE driverId IN (   SELECT driverId   FROM lapTimes   WHERE raceId IN (     SELECT raceId     FROM races     WHERE round = 19   )   ORDER BY q2 ASC   LIMIT 1 )
Error: 第 10277 个样本有 0 个SQL。
SELECT url FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya';
Error: 第 10279 个样本有 0 个SQL。
Error: 第 10280 个样本有 0 个SQL。
Error: 第 10281 个样本有 0 个SQL。
SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Spain';
SELECT c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name LIKE '%Australian Grand Prix%';
SELECT r.url FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Sepang International Circuit';
Error: 第 10285 个样本有 0 个SQL。
SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';
Error: 第 10287 个样本有 0 个SQL。
SELECT q1 FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE raceId = 354) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna');
SELECT d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.raceId = (SELECT raceId FROM races WHERE raceId = 355) AND q.q2 = '00:01:40';
Error: 第 10290 个样本有 0 个SQL。
SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.year = 2007 AND ra.name = 'Bahrain Grand Prix' AND r.time IS NOT NULL EXCEPT SELECT DISTINCT driverId FROM results WHERE raceId IN (   SELECT raceId   FROM results   WHERE raceId IN (     SELECT raceId     FROM results     WHERE year = 2007 AND name = 'Bahrain Grand Prix'   ) AND time IS NOT NULL )
Error: 第 10292 个样本有 0 个SQL。
SELECT COUNT(DISTINCT d.driverId) FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId IN (   SELECT raceId   FROM races   WHERE date = '2015-11-29' ) AND r.positionOrder IS NOT NULL;
SELECT forename, surname FROM drivers WHERE driverId IN (   SELECT driverId   FROM results   WHERE raceId = 592 AND time IS NOT NULL ) ORDER BY dob LIMIT 1;
SELECT d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE lt.time = '0:01:27' AND lt.raceId = 161;
SELECT d.forename, d.surname, d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes lt ON r.resultId = lt.resultId WHERE r.raceId = 933 AND lt.fastestLapSpeed = (     SELECT MAX(fastestLapSpeed)     FROM lapTimes     WHERE raceId = 933 );
Error: 第 10297 个样本有 0 个SQL。
Error: 第 10298 个样本有 0 个SQL。
SELECT q2 FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE raceId = 345) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi');
SELECT d.forename, d.surname, c.country FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE q.raceId = 347 AND q.q2 = '00:01:15';
SELECT d.code FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = (   SELECT r.raceId   FROM races r   WHERE r.round = 45 ) AND q.q3 = '0:01:33';
Error: 第 10302 个样本有 0 个SQL。
SELECT d.forename, d.surname FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId IN (   SELECT r2.raceId   FROM races r2   WHERE r2.year = 2006 AND r2.name = 'San Marino Grand Prix' ) AND r.position = 2;
Error: 第 10304 个样本有 0 个SQL。
Error: 第 10305 个样本有 0 个SQL。
SELECT d.surname, d.forename, d.dob FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 872 AND r.time IS NOT NULL ORDER BY d.dob DESC LIMIT 1;
SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 348 ORDER BY lt.time ASC LIMIT 1;
Error: 第 10308 个样本有 0 个SQL。
SELECT      DIVIDE(         SUBTRACT(             (SELECT fastestLapSpeed FROM lapTimes WHERE raceId = 853),             (SELECT fastestLapSpeed FROM lapTimes WHERE raceId = 854)         ),         (SELECT fastestLapSpeed FROM lapTimes WHERE raceId = 853)     ) * 100 AS percentage
SELECT    DIVIDE(     COUNT(DISTINCT d.driverId)      WHERE r.date = '1983-07-16'      AND r.time IS NOT NULL,      COUNT(DISTINCT d.driverId)      WHERE r.date = '1983-07-16'   ) AS percentage FROM    drivers d   JOIN results r ON d.driverId = r.driverId   JOIN races rac ON r.raceId = rac.raceId WHERE    rac.date = '1983-07-16';
Error: 第 10311 个样本有 0 个SQL。
SELECT r.name FROM races r WHERE r.year = 2005 ORDER BY r.name DESC;
SELECT    r.name,    r.date,    r.year,    r.month FROM    races r WHERE    (r.year, r.month) = (     SELECT        year(min(r.date)),        month(min(r.date))     FROM        races r   ) UNION ALL SELECT    r.name,    r.date,    r.year,    r.month FROM    races r WHERE    EXTRACT(YEAR FROM r.date) = (     SELECT        year(min(r.date))     FROM        races r   )    AND EXTRACT(MONTH FROM r.date) = (     SELECT        month(min(r.date))     FROM        races r   );
SELECT r.name, r.date FROM races r WHERE r.year = 1999 ORDER BY r.round DESC LIMIT 1;
SELECT year, COUNT(round) as max_round FROM races GROUP BY year ORDER BY max_round DESC LIMIT 1;
SELECT r.name FROM races r WHERE r.year = 2017 AND r.circuitId NOT IN (   SELECT c.circuitId   FROM circuits c   WHERE c.year = 2000 );
SELECT c.name, c.location FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year = (SELECT MIN(year) FROM seasons) AND r.round = 1;
Error: 第 10318 个样本有 0 个SQL。
SELECT COUNT(DISTINCT s.year) FROM seasons s JOIN races r ON s.year = r.year JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name LIKE '%Silverstone%' AND r.name LIKE '%British%';
Error: 第 10320 个样本有 0 个SQL。
SELECT d.forename, d.surname, dr.points FROM drivers d JOIN results dr ON d.driverId = dr.driverId JOIN constructorResults cr ON dr.raceId = cr.raceId JOIN drivers dr2 ON cr.driverId = dr2.driverId WHERE cr.points = (SELECT MAX(points) FROM constructorResults)
SELECT d.forename, d.surname, r.points FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races race ON r.raceId = race.raceId WHERE race.year = 2017 AND race.name = 'Chinese Grand Prix' ORDER BY r.points DESC LIMIT 3;
SELECT d.forename, d.surname, r.name, lt.time FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId JOIN races r ON lt.raceId = r.raceId WHERE lt.time = (SELECT MIN(time) FROM lapTimes);
SELECT AVG(time)  FROM lapTimes  WHERE raceId IN (SELECT raceId FROM races WHERE year = 2009 AND name = 'Chinese Grand Prix')  AND driverId IN (SELECT driverId FROM drivers WHERE surname = 'Vettel');
SELECT      DIVIDE(COUNT(raceId) WHERE surname = 'Hamilton' AND year >= 2010 AND position > 1),      (COUNT(raceId) WHERE surname = 'Hamilton' AND year >= 2010) AS percentage FROM      results     JOIN drivers ON results.driverId = drivers.driverId     JOIN races ON results.raceId = races.raceId WHERE      drivers.surname = 'Hamilton' AND races.year >= 2010
SELECT d.forename, d.surname, d.nationality, AVG(r.points) AS avg_points FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.position = 1 GROUP BY d.driverId ORDER BY COUNT(r.wins) DESC LIMIT 1;
SELECT forename, surname, 2022 - YEAR(dob) + 1 AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;
Error: 第 10328 个样本有 0 个SQL。
Error: 第 10329 个样本有 0 个SQL。
Error: 第 10330 个样本有 0 个SQL。
SELECT r.name FROM results AS r JOIN drivers AS d ON r.driverId = d.driverId WHERE d.surname = 'Yoong' AND r.position < 10;
Error: 第 10332 个样本有 0 个SQL。
SELECT r.name, s.year FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.surname = 'Schumacher' AND r.fastestLap = MIN(r.milliseconds)
SELECT AVG(points)  FROM constructorResults  WHERE year = 2000 AND constructorId IN (SELECT constructorId FROM drivers WHERE surname = 'Irvine' AND forename = 'Eddie');
SELECT r.year, r.name, cr.points FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.surname = 'Hamilton' AND r.year = (   SELECT MIN(year) FROM races );
Error: 第 10336 个样本有 0 个SQL。
SELECT r.name, s.year, c.name AS circuit_location FROM races r JOIN seasons s ON r.year = s.year JOIN circuits c ON r.circuitId = c.circuitId WHERE r.laps = (   SELECT MAX(l.laps)   FROM races l );
SELECT (COUNT(races.*)         / COUNT(CASE WHEN races.country = 'Germany' THEN 1 ELSE NULL END)        ) * 100 AS percentage FROM races WHERE races.name = 'European Grand Prix' AND races.country IN (SELECT country FROM circuits WHERE location LIKE '%Europe%')
SELECT lat, lng FROM circuits WHERE name = 'Silverstone';
SELECT c1.name FROM circuits c1 WHERE c1.lat = (   SELECT MAX(c2.lat)   FROM circuits c2   WHERE c2.name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') )
Error: 第 10341 个样本有 0 个SQL。
SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits);
SELECT COUNT(*)  FROM drivers  WHERE code IS NULL;
SELECT country FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)
Error: 第 10345 个样本有 0 个SQL。
Error: 第 10346 个样本有 0 个SQL。
SELECT driverRef FROM drivers WHERE surname = 'Hamilton';
SELECT c.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year = 2009 AND r.name LIKE '%Spanish Grand Prix';
SELECT DISTINCT s.year FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Silverstone';
SELECT r.url FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Silverstone';
Error: 第 10351 个样本有 0 个SQL。
SELECT COUNT(*)  FROM races r  JOIN circuits c ON r.circuitId = c.circuitId  WHERE c.country = 'Italy';
SELECT date FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Barcelona-Catalunya') ORDER BY date;
Error: 第 10354 个样本有 0 个SQL。
SELECT MIN(time)  FROM lapTimes  WHERE driverId IN (SELECT driverId FROM drivers WHERE surname = 'Hamilton')
SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes lt ON r.raceId = lt.raceId AND d.driverId = lt.driverId WHERE lt.milliseconds = (SELECT MIN(ml.milliseconds) FROM lapTimes ml)
SELECT d.driverRef FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId IN (   SELECT r2.raceId   FROM races r2   WHERE r2.year = 2008 AND r2.circuitId IN (     SELECT c.circuitId     FROM circuits c     WHERE c.name = 'Australian Grand Prix'   ) ) AND r.position = 1;
Error: 第 10358 个样本有 0 个SQL。
SELECT r.name FROM results AS r JOIN drivers AS d ON r.driverId = d.driverId WHERE d.surname = 'Hamilton' ORDER BY r.rank ASC LIMIT 1;
Error: 第 10360 个样本有 0 个SQL。
Error: 第 10361 个样本有 0 个SQL。
SELECT positionOrder FROM results WHERE raceId IN (   SELECT raceId   FROM races   WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND driverId IN (   SELECT driverId   FROM drivers   WHERE driverRef = 'hamilton' ) ORDER BY raceId DESC LIMIT 1;
Error: 第 10363 个样本有 0 个SQL。
SELECT COUNT(DISTINCT d.driverId) FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId IN (   SELECT raceId   FROM races   WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND r.time IS NOT NULL;
SELECT time, milliseconds FROM lapTimes WHERE raceId IN (   SELECT raceId   FROM races   WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND driverId IN (   SELECT driverId   FROM drivers   WHERE forename = 'Lewis' AND surname = 'Hamilton' ) ORDER BY milliseconds ASC LIMIT 1;
SELECT time FROM results WHERE raceId IN (   SELECT raceId   FROM races   WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND position = 2;
Error: 第 10367 个样本有 0 个SQL。
SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId WHERE d.nationality = 'American' AND ra.year = 2008 AND ra.raceId = 17;
SELECT COUNT(DISTINCT d.driverId) FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races race ON r.raceId = race.raceId WHERE race.year = 2008 AND race.circuitId IN (   SELECT circuitId   FROM circuits   WHERE name = 'Australian Grand Prix' ) AND r.time IS NOT NULL;
Error: 第 10370 个样本有 0 个SQL。
SELECT AVG(TIME_TO_SEC(SUBSTRING_INDEX(fastestLapTime, ':', 1) * 3600 +                          SUBSTRING_INDEX(SUBSTRING_INDEX(fastestLapTime, ':', 2), '.', 1) * 60 +                          SUBSTRING_INDEX(SUBSTRING_INDEX(fastestLapTime, '.', -1), '.', 1))) AS average_fastest_lap_time FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE d.surname = 'Hamilton';
SELECT COUNT(raceId) / (SELECT COUNT(*) FROM lapTimes WHERE raceId = 16 AND time IS NOT NULL) AS rate FROM lapTimes WHERE raceId = 16 AND time IS NOT NULL;
SELECT      ( (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM races WHERE name = 'Australian Grand Prix')) AND position = 1) -        (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM races WHERE name = 'Australian Grand Prix')) AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM races WHERE name = 'Australian Grand Prix'))))      ) /      (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM races WHERE name = 'Australian Grand Prix')) AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM races WHERE name = 'Australian Grand Prix')))) * 100;
Error: 第 10374 个样本有 0 个SQL。
SELECT lat, lng FROM circuits WHERE country = 'USA';
SELECT COUNT(*) FROM drivers WHERE nationality = 'GB' AND dob > '1980-01-01';
SELECT AVG(points)  FROM constructorResults  JOIN constructors ON constructorResults.constructorId = constructors.constructorId  WHERE constructors.nationality = 'British';
Error: 第 10378 个样本有 0 个SQL。
Error: 第 10379 个样本有 0 个SQL。
SELECT COUNT(*) FROM constructors JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE nationality = 'Japanese' AND points = 0 GROUP BY constructors.constructorId HAVING COUNT(raceId) = 2;
SELECT c.name  FROM constructorStandings cs  JOIN constructors c ON cs.constructorId = c.constructorId  WHERE cs.position = 1;
SELECT COUNT(*) FROM drivers d JOIN constructors c ON d.constructorId = c.constructorId JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN lapTimes lt ON cr.raceId = lt.raceId AND d.driverId = lt.driverId WHERE d.nationality = 'French' AND lt.lap > 50;
SELECT      (COUNT(D.driverId) WHERE D.time IS NOT NULL AND R.year BETWEEN 2007 AND 2009) /      (COUNT(D.driverId) WHERE R.year BETWEEN 2007 AND 2009) * 100 FROM      drivers D     JOIN drivers D ON D.nationality = 'Japanese'     JOIN races R ON D.driverId = R.driverId WHERE      R.year BETWEEN 2007 AND 2009
SELECT    s.year,    AVG(TIME_TO_SEC(r.time)) AS avg_time FROM    results r   JOIN constructorResults cr ON r.raceId = cr.raceId   JOIN constructorStandings cs ON cr.raceId = cs.raceId   JOIN drivers d ON r.driverId = d.driverId   JOIN seasons s ON r.raceId = s.raceId WHERE    r.time IS NOT NULL   AND cs.position = 1 GROUP BY    s.year;
Error: 第 10385 个样本有 0 个SQL。
Error: 第 10386 个样本有 0 个SQL。
SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN results r ON lt.raceId = r.raceId AND lt.driverId = r.driverId WHERE lt.lap = (SELECT MIN(lt2.lap) FROM lapTimes lt2 WHERE lt2.raceId = lt.raceId AND lt2.position = 1)
SELECT fastestLap FROM results JOIN driverStandings ON results.raceId = driverStandings.raceId AND results.driverId = driverStandings.driverId WHERE driverStandings.year = 2009 AND driverStandings.position = 1 ORDER BY results.time LIMIT 1;
SELECT AVG(fastestLapSpeed)  FROM results  WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix')  AND year = (SELECT year FROM seasons WHERE year = 2009);
SELECT r.year, r.name FROM races r JOIN results res ON r.raceId = res.raceId WHERE res.time IS NOT NULL ORDER BY res.milliseconds ASC LIMIT 1;
SELECT (COUNT(DISTINCT d.driverId) WHERE year(d.dob) < 1985 AND l.laps > 50) /         (COUNT(DISTINCT d.driverId) WHERE year(r.year) BETWEEN 2000 AND 2005) * 100 AS percentage FROM drivers d JOIN races r ON d.driverId = l.driverId JOIN lapTimes l ON r.raceId = l.raceId WHERE year(d.dob) < 1985 AND year(r.year) BETWEEN 2000 AND 2005 AND l.laps > 50;
SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'French' AND lt.time < '02:00:00';
Error: 第 10393 个样本有 0 个SQL。
Error: 第 10394 个样本有 0 个SQL。
Error: 第 10395 个样本有 0 个SQL。
SELECT      s.code FROM      drivers d JOIN      countries c ON d.nationality = c.name WHERE      d.dob = (SELECT MIN(dob) FROM drivers) ORDER BY      d.dob LIMIT 3;
SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';
Error: 第 10398 个样本有 0 个SQL。
SELECT d.forename, d.surname, lt.time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'German' AND YEAR(d.dob) BETWEEN 1980 AND 1990 ORDER BY lt.time ASC LIMIT 3;
SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY MIN(year(dob)) LIMIT 1;
SELECT d.driverId, d.code FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE YEAR(d.dob) = 1971 AND r.fastestLapTime IS NOT NULL ORDER BY r.fastestLapTime DESC;
SELECT d.forename, d.surname, lt.time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'Spanish' AND YEAR(d.dob) < 1982 ORDER BY lt.time DESC LIMIT 10;
SELECT year FROM seasons WHERE year = (SELECT year               FROM races r               JOIN lapTimes lt ON r.raceId = lt.raceId               ORDER BY lt.milliseconds LIMIT 1);
SELECT year FROM seasons WHERE year = (SELECT MIN(year) FROM seasons)
SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 5;
SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND time IS NOT NULL AND statusId = 2;
SELECT c.name, c.location, c.lat, c.lng FROM circuits c WHERE c.country = 'Austria' GROUP BY c.name, c.location, c.lat, c.lng
SELECT number FROM results WHERE time IS NOT NULL GROUP BY number ORDER BY COUNT(*) DESC LIMIT 1;
SELECT d.driverRef, d.forename, d.surname, d.nationality, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.raceId = 23 AND q.q2 IS NOT NULL;
SELECT r.year, r.name, r.date, r.time FROM races r JOIN qualifying q ON r.raceId = q.raceId JOIN drivers d ON q.driverId = d.driverId WHERE d.surname = 'Verstappen' AND d.dob = (   SELECT MIN(dob) FROM drivers )
Error: 第 10411 个样本有 0 个SQL。
Error: 第 10412 个样本有 0 个SQL。
Error: 第 10413 个样本有 0 个SQL。
SELECT d.forename, d.surname, lt.time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.circuitId IN (SELECT c.circuitId FROM circuits c WHERE c.name = 'French Grand Prix') AND lt.lap = 3 ORDER BY lt.time ASC LIMIT 1;
SELECT r.name, lt.time FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId WHERE lt.lap = 1 AND lt.time = (SELECT MIN(time) FROM lapTimes);
Error: 第 10416 个样本有 0 个SQL。
SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN pitStops ps ON r.driverId = ps.driverId WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' AND ps.raceId IN (   SELECT raceId   FROM pitStops   GROUP BY raceId   HAVING AVG(duration) = (     SELECT MIN(AVG(duration))     FROM pitStops     GROUP BY raceId   ) ) ORDER BY d.dob LIMIT 5;
SELECT    d.surname,    d.forename,    l.time FROM    results r    JOIN drivers d ON r.driverId = d.driverId    JOIN constructors c ON r.constructorId = c.constructorId    JOIN constructorResults cr ON r.raceId = cr.raceId AND r.constructorId = cr.constructorId    JOIN constructorStandings cs ON cr.raceId = cs.raceId AND cr.constructorId = cs.constructorId    JOIN races ra ON r.raceId = ra.raceId  WHERE    ra.name LIKE '%Canadian Grand Prix%'    AND ra.year = 2008    AND cs.position = 1    AND r.position = cs.position;
SELECT c.constructorRef, c.url FROM results r JOIN constructorResults cr ON r.raceId = cr.raceId AND r.driverId = cr.constructorId JOIN constructorStandings cs ON r.raceId = cs.raceId AND cr.constructorId = cs.constructorId WHERE r.raceId IN (SELECT raceId FROM races WHERE year = 2009 AND name = 'Singapore Grand Prix') AND cs.position = 1 ORDER BY r.time DESC LIMIT 1;
SELECT drivers.forename, drivers.surname, drivers.dob FROM drivers WHERE drivers.nationality = 'Austrian' AND YEAR(drivers.dob) BETWEEN '1981' AND '1991';
SELECT forename + ' ' + surname AS full_name, url, dob FROM drivers WHERE nationality = 'German' AND YEAR(dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;
SELECT c.location, c.country, c.lat, c.lng FROM circuits c WHERE c.name = 'Hungaroring';
SELECT    cr.points,    c.name,    c.nationality FROM    constructorResults cr   JOIN constructors c ON cr.constructorId = c.constructorId   JOIN races r ON cr.raceId = r.raceId WHERE    r.year BETWEEN 1980 AND 2010   AND r.circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Monaco') ORDER BY    cr.points DESC LIMIT 1;
Error: 第 10424 个样本有 0 个SQL。
SELECT      AVG(COUNT(*))  FROM      races  WHERE      date BETWEEN '2000-01-01' AND '2010-12-31';
SELECT nationality AS "Citizenship of majority of drivers" FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;
Error: 第 10427 个样本有 0 个SQL。
SELECT r.name FROM results AS r WHERE r.fastestLapTime = (SELECT MIN(fastestLapTime) FROM results);
SELECT c.name, c.location, c.country FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.date = (SELECT MAX(date) FROM races)
SELECT forename, surname FROM drivers WHERE (forename, surname) IN (   SELECT driverRef   FROM qualifying   WHERE raceId IN (     SELECT raceId     FROM races     WHERE year = 2008 AND circuitId IN (       SELECT circuitId       FROM circuits       WHERE name = 'Marina Bay Street Circuit'     )   ) AND position = 1;
SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, d.nationality, r.name AS race_name FROM drivers d JOIN races r ON d.driverId = (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1) ORDER BY d.driverId;
Error: 第 10432 个样本有 0 个SQL。
SELECT forename, surname, COUNT(*) as wins FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers) GROUP BY forename, surname;
SELECT MAX(duration)  FROM pitStops;
SELECT MIN(time) AS fastest_lap_time FROM lapTimes
SELECT MAX(p.duration) AS longest_time FROM pitStops p JOIN drivers d ON p.driverId = d.driverId WHERE d.surname = 'Hamilton';
Error: 第 10437 个样本有 0 个SQL。
Error: 第 10438 个样本有 0 个SQL。
Error: 第 10439 个样本有 0 个SQL。
Error: 第 10440 个样本有 0 个SQL。
SELECT c.name, r.name FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId JOIN drivers d ON lt.driverId = d.driverId WHERE d.surname = 'Hamilton' AND lt.time = (SELECT MIN(time) FROM lapTimes) ORDER BY lt.lap;
SELECT MIN(time) AS lap_record FROM lapTimes WHERE raceId IN (   SELECT raceId   FROM races   WHERE name = 'Austrian Grand Prix'   AND circuitId IN (     SELECT circuitId     FROM circuits     WHERE name = 'Austrian Grand Prix Circuit'   ) )
Error: 第 10443 个样本有 0 个SQL。
SELECT r.year, r.date, r.time, lt.time AS lap_record_time FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Austrian Grand Prix' AND lt.position = 1;
SELECT pt.duration, pt.milliseconds FROM pitStops pt JOIN races r ON pt.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId JOIN lapTimes lt ON pt.raceId = lt.raceId WHERE c.name = 'Austrian Grand Prix' AND lt.time = (SELECT MIN(lt2.time) FROM lapTimes lt2 WHERE lt2.raceId = lt.raceId);
SELECT c.lat, c.lng FROM circuits c JOIN lapTimes lt ON c.circuitId = lt.raceId WHERE lt.lap = 1 AND lt.time = '1:29.488';
SELECT AVG(duration)  FROM pitStops  WHERE driverId IN (SELECT driverId FROM drivers WHERE surname = 'Hamilton');
Error: 第 10448 个样本有 0 个SQL。
Error: 第 10449 个样本有 0 个SQL。
SELECT p.player_name, p.height FROM Player p WHERE p.height = (SELECT MAX(height) FROM Player);
Error: 第 10451 个样本有 0 个SQL。
SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low';
SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5;
SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1;
Error: 第 10455 个样本有 0 个SQL。
Error: 第 10456 个样本有 0 个SQL。
SELECT away_team_api_id FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Scotland Premier League') AND season = '2009/2010' AND away_team_goal > home_team_goal GROUP BY away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1;
SELECT      ta.team_long_name,      MAX(ta.buildUpPlaySpeed) AS buildUpPlaySpeed FROM      Team_Attributes ta JOIN      Team t ON ta.team_api_id = t.team_api_id WHERE      t.team_api_id IN (         SELECT              team_api_id         FROM              Team_Attributes         GROUP BY              team_api_id         ORDER BY              MAX(buildUpPlaySpeed) DESC         LIMIT 4     ) GROUP BY      ta.team_long_name;
Error: 第 10459 个样本有 0 个SQL。
SELECT      P.player_name,      (DATETIME() - P.birthday) AS age FROM      Player P JOIN      Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE      PA.date BETWEEN '2013-01-01 00:00:00' AND '2015-12-31 00:00:00'     AND PA.sprint_speed >= 97;
SELECT L.name, COUNT(M.match_api_id) as total_matches FROM League L JOIN Match M ON L.id = M.league_id GROUP BY L.name ORDER BY total_matches DESC LIMIT 1;
SELECT AVG(height)  FROM Player  WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';
Error: 第 10463 个样本有 0 个SQL。
Error: 第 10464 个样本有 0 个SQL。
SELECT team_long_name FROM Team_Attributes WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012');
SELECT      DIVIDE(MULTIPLY((SUM(preferred_foot = 'left')), 1.0), COUNT(player_fifa_api_id)) * 100 AS percentage FROM      Player WHERE      birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'
SELECT l.name, SUM(home_team_goal + away_team_goal) as total_goals FROM Match m JOIN League l ON m.league_id = l.id GROUP BY l.name ORDER BY total_goals ASC LIMIT 5;
SELECT AVG(long_shots)  FROM Player_Attributes  WHERE player_name = 'Ahmed Samir Farag';
SELECT      player_name,      AVG(heading_accuracy) AS average_heading_accuracy FROM      Player p JOIN      Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE      p.height > 180 GROUP BY      player_name ORDER BY      average_heading_accuracy DESC LIMIT 10;
SELECT team_long_name FROM Team_Attributes JOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 00:00:00' AND chanceCreationPassing / COUNT(id) > (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 00:00:00') ORDER BY chanceCreationPassing DESC;
SELECT L.name FROM League L WHERE L.id IN (   SELECT M.league_id   FROM Match M   WHERE M.season = '2009/2010'   GROUP BY M.league_id   HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal) )
SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';
SELECT p.player_name FROM Player p WHERE substr(p.birthday,1,4) = '1970' AND substr(p.birthday,6,2) = '10';
SELECT overall_rating, preferred_foot, attacking_work_rate FROM Player_Attributes WHERE player_name = 'Franco Zennaro';
SELECT Team_Attributes.buildUpPlayPositioningClass FROM Team_Attributes JOIN Team ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id WHERE Team.team_long_name = 'ADO Den Haag';
Error: 第 10476 个样本有 0 个SQL。
Error: 第 10477 个样本有 0 个SQL。
Error: 第 10478 个样本有 0 个SQL。
Error: 第 10479 个样本有 0 个SQL。
SELECT * FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes);
Error: 第 10481 个样本有 0 个SQL。
SELECT team_short_name FROM Team JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id WHERE chanceCreationPassingClass = 'Risky';
SELECT overall_rating, defensive_work_rate FROM Player_Attributes WHERE player_name = 'David Wilson';
SELECT Player.birthday FROM Player WHERE id = (   SELECT Player.id   FROM Player   JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id   ORDER BY Player_Attributes.overall_rating DESC   LIMIT 1 );
SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Netherlands';
SELECT AVG(home_team_goal)  FROM Match  WHERE country_id IN (SELECT id FROM Country WHERE name = 'Poland')  AND season = '2010/2011';
SELECT player_name, AVG(finishing) AS avg_finishing_rate FROM Player, Player_Attributes WHERE Player.id = Player_Attributes.player_api_id AND height = (SELECT MAX(height) FROM Player) OR height = (SELECT MIN(height) FROM Player) GROUP BY player_name ORDER BY avg_finishing_rate DESC LIMIT 1;
Error: 第 10488 个样本有 0 个SQL。
SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';
SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;
Error: 第 10491 个样本有 0 个SQL。
SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran') AND date = (SELECT MAX(date) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran'));
Error: 第 10493 个样本有 0 个SQL。
Error: 第 10494 个样本有 0 个SQL。
SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id IN (   SELECT team_api_id   FROM Team   WHERE team_short_name = 'CLB' )
SELECT team_short_name FROM Team_Attributes WHERE buildUpPlayPassing > 70;
Error: 第 10497 个样本有 0 个SQL。
SELECT player_name FROM Player WHERE height = (SELECT MIN(height) FROM Player);
SELECT c.name FROM League l JOIN Country c ON l.country_id = c.id WHERE l.name = 'Italy Serie A';
SELECT team_short_name FROM Team_Attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;
Error: 第 10501 个样本有 0 个SQL。
Error: 第 10502 个样本有 0 个SQL。
Error: 第 10503 个样本有 0 个SQL。
SELECT * FROM Player_Attributes WHERE potential = 61 AND balance = (SELECT MAX(balance) FROM Player_Attributes)
SELECT      SUBTRACT(AVG(ball_control) WHERE player_name = 'Abdou Diallo'),      AVG(ball_control) WHERE player_name = 'Aaron Appindangoye')
SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';
SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday LIMIT 1;
Error: 第 10508 个样本有 0 个SQL。
SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';
SELECT c.name FROM League l JOIN Country c ON l.country_id = c.id WHERE l.name = 'Belgium Jupiler League';
Error: 第 10511 个样本有 0 个SQL。
SELECT player_name, overall_rating FROM Player WHERE overall_rating = (   SELECT MAX(overall_rating)   FROM Player_Attributes );
Error: 第 10513 个样本有 0 个SQL。
SELECT player_name FROM Player WHERE id IN (   SELECT player_api_id   FROM Player_Attributes   WHERE id = (     SELECT MAX(id)     FROM Player_Attributes     WHERE preferred_foot = 'RIGHT' AND overall_rating > 60   ) ) AND player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY MAX(crossing) DESC LIMIT 1;
SELECT overall_rating FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk') AND heading_accuracy IS NOT NULL;
SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volleys > 70;
SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.volleys > 70 AND Player_Attributes.dribbling > 70;
Error: 第 10518 个样本有 0 个SQL。
SELECT overall_rating FROM Player_Attributes  WHERE id = (SELECT id FROM Player ORDER BY birthday ASC LIMIT 1);
SELECT COUNT(*)  FROM Match  WHERE League.name = 'Belgium Jupiler League'    AND strftime('%Y', date) = '2009'    AND strftime('%m', date) = '04';
SELECT league_id FROM Match WHERE season = '2008/2009' GROUP BY league_id ORDER BY COUNT(*) DESC LIMIT 1;
SELECT AVG(overall_rating)  FROM Player_Attributes  WHERE strftime('%Y', birthday) < '1986';
SELECT    MULTIPLY(     DIVIDE(       SUBTRACT(         (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk'),         (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')       ),       (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')     ),     100   ) AS percentage_difference
Error: 第 10524 个样本有 0 个SQL。
Error: 第 10525 个样本有 0 个SQL。
Error: 第 10526 个样本有 0 个SQL。
Error: 第 10527 个样本有 0 个SQL。
SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Abdou Diallo';
SELECT MAX(overall_rating)  FROM Player_Attributes  WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Dorlan Pabon');
Error: 第 10530 个样本有 0 个SQL。
SELECT player_name FROM Player WHERE id IN (   SELECT player_api_id   FROM Player_Attributes   WHERE date = '2016-06-23' AND overall_rating = 77 ) ORDER BY birthday LIMIT 1;
Error: 第 10532 个样本有 0 个SQL。
SELECT overall_rating FROM Player_Attributes  WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';
SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Francesco Migliore' AND date = '2015-05-01 00:00:00';
Error: 第 10535 个样本有 0 个SQL。
SELECT date FROM Player_Attributes WHERE player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1;
SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_long_name = 'Willem II' AND date = '2012-02-22 00:00:00';
SELECT buildUpPlayDribblingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_short_name = 'LEI') AND date = '2015-09-10 00:00:00';
SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'FC Lorient') AND date = '2010-02-22';
SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_fifa_api_id = (   SELECT team_fifa_api_id   FROM Team   WHERE team_long_name = 'PEC Zwolle' ) AND date = '2013-09-20 00:00:00';
Error: 第 10541 个样本有 0 个SQL。
SELECT Team_Attributes.defenceAggressionClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id JOIN Team AS T ON T.team_long_name = 'Hannover 96' WHERE Team_Attributes.date = '2015-09-10 00:00:00' AND T.team_long_name = 'Hannover 96';
Error: 第 10543 个样本有 0 个SQL。
SELECT (player_Attributes.overall_rating - (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery')) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan') * 100 FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12';
SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player) LIMIT 5;
Error: 第 10546 个样本有 0 个SQL。
SELECT player_name FROM Player WHERE datetime(CURRENT_TIMESTAMP,'localtime') - datetime(birthday) > 34;
Error: 第 10548 个样本有 0 个SQL。
Error: 第 10549 个样本有 0 个SQL。
SELECT SUM(home_team_goal)  FROM Match  WHERE home_player_X1 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X2 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X3 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X4 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X5 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X6 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X7 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X8 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X9 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X10 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31)     OR home_player_X11 IN (SELECT id FROM Player                            WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP - birthday) < 31);
SELECT player_name FROM Player WHERE id IN (   SELECT player_api_id   FROM Player_Attributes   ORDER BY overall_rating DESC   LIMIT 10 );
SELECT player_name FROM Player WHERE id IN (   SELECT player_api_id   FROM Player_Attributes   ORDER BY potential DESC   LIMIT 1 );
SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'high';
Error: 第 10554 个样本有 0 个SQL。
Error: 第 10555 个样本有 0 个SQL。
SELECT c.name as country_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.vision > 89 JOIN Country c ON p.country_id = c.id;
SELECT c.name, AVG(p.weight) AS avg_weight FROM Player p JOIN Country c ON p.birthday LIKE CONCAT('%', c.name, '%') GROUP BY c.name ORDER BY avg_weight DESC LIMIT 1;
Error: 第 10558 个样本有 0 个SQL。
Error: 第 10559 个样本有 0 个SQL。
SELECT AVG(height)  FROM Player  WHERE country_name = 'Italy';
Error: 第 10561 个样本有 0 个SQL。
Error: 第 10562 个样本有 0 个SQL。
Error: 第 10563 个样本有 0 个SQL。
SELECT Player_Attributes.id FROM Player_Attributes WHERE preferred_foot = 'right' AND potential = (SELECT MIN(potential) FROM Player_Attributes) ORDER BY potential LIMIT 3;
SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes WHERE preferred_foot = 'left');
SELECT      COUNT(*) / (SELECT COUNT(*) FROM Player_Attributes) * 100 AS percentage FROM      Player_Attributes WHERE      stamina > 80 AND strength > 80;
SELECT c.name FROM League l JOIN Country c ON l.country_id = c.id WHERE l.name = 'Ekstraklasa' AND c.name = 'Poland';
Error: 第 10568 个样本有 0 个SQL。
Error: 第 10569 个样本有 0 个SQL。
SELECT Team_Attributes.buildUpPlaySpeedClass FROM Team_Attributes JOIN Team ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'KSV Cercle Brugge';
Error: 第 10571 个样本有 0 个SQL。
SELECT MAX(home_team_goal) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Eredivisie') AND country_id IN (SELECT id FROM Country WHERE name = 'Netherlands');
SELECT overall_rating, curve FROM Player_Attributes WHERE weight = (SELECT MAX(weight) FROM Player);
SELECT t.team_long_name, COUNT(m.id) as total_games FROM Match m JOIN Team t ON m.home_team_api_id = t.team_api_id OR m.away_team_api_id = t.team_api_id WHERE m.season = '2015/2016' GROUP BY t.team_long_name ORDER BY total_games DESC LIMIT 1;
SELECT team_long_name FROM Team WHERE team_api_id = away_team_api_id ORDER BY away_team_goal DESC LIMIT 1;
SELECT player_name FROM Player WHERE id IN (   SELECT player_api_id   FROM Player_Attributes   ORDER BY overall_rating DESC   LIMIT 1 );
SELECT (COUNT(height < 180 AND overall_rating > 70) / COUNT(id)) * 100 AS percentage FROM Player WHERE height < 180 AND overall_rating > 70;
SELECT    CASE      WHEN (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') > (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') THEN 'In-patient'     ELSE 'Out-patient'   END AS Group,   ROUND((SUBTRACT((SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+'), (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-')) / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M') * 100), 2) AS Deviation
SELECT    DIVIDE(COUNT(P.ID), COUNT(P.ID)) * 100 FROM    Patient P WHERE    YEAR(P.Birthday) > '1930' AND P.SEX = 'F';
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31') AS Percentage FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31' AND Admission = '+';
SELECT DIVIDE(COUNT(P.ID)                WHERE P.Diagnosis = 'SLE' AND P.Admission = '+',                COUNT(P.ID)                WHERE P.Diagnosis = 'SLE' AND P.Admission = '-')  FROM Patient P;
SELECT Diagnosis FROM Patient WHERE ID = '30609';  SELECT Date FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE ID = '30609');
SELECT    P.SEX,    P.Birthday,    E.Examination_Date,    E.Symptoms FROM    Patient P    INNER JOIN Examination E      ON P.ID = E.ID WHERE    P.ID = '163109';
SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.LDH > 500;
SELECT p.ID, year(current_timestamp) - year(p.Birthday) AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RVVT = '+';
SELECT P.ID, P.SEX, E.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Thrombosis = 2;
Error: 第 10587 个样本有 0 个SQL。
SELECT P.ID, P.SEX, P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.ALB < 3.5;
SELECT DIVIDE(COUNT(P.ID), (SELECT COUNT(*) FROM Patient)) * 100 FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND (L.TP < '6.0' OR L.TP > '8.5');
SELECT AVG(aCL IgG)  FROM Examination  JOIN Patient ON Examination.ID = Patient.ID  WHERE Admission = '+' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(Birthday)) >= '50';
SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND YEAR(First Date) = '1997' AND Admission = '-';
SELECT MIN(age)  FROM (   SELECT SUBTRACT(YEAR(Birthday), YEAR(First Date)) AS age    FROM Patient ) AS temp;
SELECT COUNT(*)  FROM Patient p  JOIN Examination e ON p.ID = e.ID  WHERE e.Thrombosis = '1' AND p.SEX = 'F' AND EXTRACT(YEAR FROM e.Examination Date) = 1997;
SELECT    SUBTRACT(MAX(year(Birthday)) - MIN(year(Birthday))) AS Age_Gap FROM    Patient, Laboratory WHERE    Patient.ID = Laboratory.ID   AND Patient.ID IN (     SELECT        Patient.ID     FROM        Patient, Laboratory     WHERE        Patient.ID = Laboratory.ID       AND Laboratory.TG >= 200   )
SELECT e.Symptoms, p.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.ID IN (   SELECT ID   FROM Patient   ORDER BY Birthday ASC   LIMIT 1 );
SELECT    DIVIDE(COUNT(P.ID), 12) AS avg_males_tested FROM    Patient P WHERE    P.SEX = 'M' AND P.Birthday BETWEEN '1968-01-01' AND '1968-12-31'
SELECT      MAX(Laboratory.Date) AS Lab_Date,     (YEAR(Laboratory.Date) - YEAR(Patient.Birthday)) AS Age_At_Admission FROM      Patient JOIN      Patient AS P1 ON Patient.ID = P1.ID JOIN      Examination ON Patient.ID = Examination.ID JOIN      Laboratory ON Examination.ID = Laboratory.ID WHERE      Patient.Diagnosis = 'SJS' GROUP BY      Patient.ID
SELECT DIVIDE(SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END),                SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END)) AS ratio FROM Patient WHERE UA <= 8.0 AND SEX IN ('M', 'F');
SELECT COUNT(*) FROM Patient WHERE ID NOT IN (SELECT Patient_ID FROM Examination) OR (EXISTS (SELECT 1 FROM Examination WHERE Patient_ID = Patient.ID AND SUBTRACT(year(Examination_Date), year(First_Date)) >= 1) = 0);
SELECT COUNT(*)  FROM Patient p  JOIN Examination e ON p.ID = e.ID  WHERE EXTRACT(YEAR FROM p.Birthday) < 18  AND EXTRACT(YEAR FROM e.Examination Date) BETWEEN 1990 AND 1993;
SELECT COUNT(*)  FROM Patient, Laboratory  WHERE Patient.ID = Laboratory.ID  AND Patient.SEX = 'M'  AND Laboratory.T-BIL > '2.0';
SELECT Diagnosis, COUNT(Diagnosis) AS Count FROM Examination WHERE Examination Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY Count DESC LIMIT 1;
SELECT AVG(YEAR(Birthday) - 1991) AS Average_Age FROM Patient WHERE Birthday BETWEEN '1991-09-01' AND '1991-09-30';
SELECT    SUBSTRING_INDEX(DATE_FORMAT(SUBTRACT(YEAR(Examination.Examination Date), YEAR(Patient.Birthday)), '%Y-%m-%d'), '-', 1) AS Age,   Examination.Diagnosis FROM    Examination   INNER JOIN Patient ON Examination.ID = Patient.ID WHERE    HGB = (SELECT MAX(HGB) FROM Examination)
SELECT aCL IgM FROM Examination WHERE ID IN (   SELECT ID   FROM Patient   WHERE ID = 3605340 ) AND Examination Date = '1996-12-02';
SELECT T_T-CHO FROM Laboratory WHERE ID IN (   SELECT ID   FROM Patient   WHERE ID = 2927464 ) AND Date = '1995-9-4' AND T_T-CHO < 250;
Error: 第 10607 个样本有 0 个SQL。
Error: 第 10608 个样本有 0 个SQL。
SELECT * FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE SEX IN ('M', 'F') AND GPT = '9' AND Date = '1992-06-12';
SELECT      SUBTRACT(year(Date) - year(Birthday), 1) AS Age FROM      Patient JOIN      Laboratory ON Patient.ID = Laboratory.ID WHERE      UA = '8.4' AND Date = '1991-10-21';
SELECT COUNT(Laboratory.ID) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.First Date = '1991-06-13' AND Patient.Diagnosis = 'SJS' AND Laboratory.Date BETWEEN '1995-01-01' AND '1995-12-31';
SELECT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'SLE' AND e.Examination Date = '1997-01-27' AND p.First Date = e.Thrombosis;
SELECT Symptoms FROM Examination WHERE ID IN (   SELECT Examination.ID   FROM Examination   JOIN Patient ON Examination.ID = Patient.ID   WHERE Patient.Birthday = '1959-03-01' ) AND ExaminationDate = '1993-09-27';
Error: 第 10614 个样本有 0 个SQL。
SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.Diagnosis = 'Behcet' AND YEAR(E.Examination Date) >= '1997-01-01' AND YEAR(E.Examination Date) < '1998-01-01';
SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E."Examination Date" BETWEEN '1987-07-06' AND '1996-01-31' AND L.GPT > 30 AND L.ALB < 4;
SELECT P.ID FROM Patient P WHERE P.SEX = 'F' AND YEAR(P.Birthday) = 1964 AND P.Admission = '+';
SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 2 AND e.ANA = 'S' AND e.`aCL IgM` = (AVG(e.`aCL IgM`) + AVG(e.`aCL IgM`) * 0.2);
SELECT      (COUNT(CASE WHEN U-PRO > 0 AND U-PRO < 30 AND UA <= 6.5 THEN 1 END) /       COUNT(CASE WHEN U-PRO > 0 AND U-PRO < 30 THEN 1 END)) * 100 AS Percentage FROM      Patient p     JOIN Laboratory l ON p.ID = l.ID WHERE      U-PRO > 0 AND U-PRO < 30;
SELECT    DIVIDE(SUM(DIAGNOSIS = 'BEHCET'),           MULTIPLY(COUNT(YEAR(Patient.First Date) = '1981' AND Patient.SEX = 'M'), 100))  FROM    Patient    JOIN Examination ON Patient.ID = Examination.ID  WHERE    YEAR(Patient.First Date) = '1981'    AND Patient.SEX = 'M';
SELECT p.* FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Admission = '-' AND l.Date LIKE '1991-10%' AND l.T_BIL < 2.0;
SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31' AND NOT EXISTS (   SELECT 1   FROM Examination   WHERE Patient.ID = Examination.ID   AND ANA_Pattern = 'p' );
SELECT P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.Diagnosis = 'PSS' AND L.CRP > 2 AND L.CRE = 1 AND L.LDH = 123;
SELECT AVG(ALB)  FROM Laboratory  WHERE SEX = 'F' AND PLT > 400 AND Diagnosis = 'SLE';
SELECT MAX(Symptoms) AS Most_Common_Sign FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Diagnosis = 'SLE';
SELECT Examination.Date, Patient.Diagnosis FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.ID = 48473 AND Examination.Date = (SELECT MIN(Date) FROM Examination WHERE ID = 48473);
Error: 第 10627 个样本有 0 个SQL。
SELECT COUNT(*)  FROM Patient p  JOIN Laboratory l ON p.ID = l.ID  WHERE YEAR(l.Date) = '1997' AND (l.TP < 6 OR l.TP > 8.5);
SELECT DIVIDE(SUM(CASE WHEN Thrombosis LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END),                SUM(CASE WHEN Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END)) * 100 AS Proportion FROM Patient;
SELECT DIVIDE(COUNT(P.SEX), COUNT(P.SEX)) * 100 FROM Patient P WHERE YEAR(P.Birthday) = '1980' AND P.Diagnosis = 'RA' AND P.SEX = 'F'
SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND EXISTS (   SELECT 1   FROM Examination   WHERE Examination.Date BETWEEN '1995' AND '1997'   AND Patient.ID = Examination.ID ) AND Diagnosis = 'BEHCET' AND Admission = '-';
SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.WBC < 3.5;
SELECT DATEDIFF(Examination.Date, Patient.First Date) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298 AND Patient.First Date IS NOT NULL;
SELECT * FROM Laboratory WHERE ID IN (   SELECT Laboratory.ID   FROM Patient   WHERE ID = 57266 ) AND (   (UA > 8.0 AND SEX = 'M') OR (UA > 6.5 AND SEX = 'F') );
SELECT DATE FROM Laboratory WHERE ID IN (   SELECT Laboratory.ID   FROM Laboratory   JOIN Patient ON Laboratory.ID = Patient.ID   WHERE Patient.ID = 48473 ) AND GOT >= 60;
SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.Date LIKE '1994-%' AND L.GOT < 60;
SELECT P.ID FROM Patient P, Laboratory L WHERE P.ID = L.ID AND P.SEX = 'M' AND L.GPT >= 60;
SELECT P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GPT > 60 ORDER BY MAX(P.Birthday);
SELECT AVG(LDH)  FROM Laboratory  WHERE LDH < 500;
SELECT p.ID, age FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.LDH BETWEEN 600 AND 800;
SELECT    CASE      WHEN Admission = '+' THEN 'Inpatient'      ELSE 'Outpatient'    END AS Treatment_Type FROM    Patient  WHERE    ID IN (     SELECT        Patient_ID      FROM        Laboratory      WHERE        ALP < 300   );
SELECT P.ID FROM Patient P WHERE P.Birthday = '1982-04-01' AND (SELECT L.ALP FROM Laboratory L WHERE L.ID = P.ID) < 300;
SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TP < 6.0;
SELECT      SUBTRACT(TP, 8.5) AS Deviation  FROM      Patient p  JOIN      Laboratory l ON p.ID = l.ID  WHERE      p.SEX = 'F' AND l.TP > 8.5;
SELECT p.ID, p.Birthday FROM Patient p WHERE p.SEX = 'M' AND p.ID NOT IN (   SELECT l.ID   FROM Laboratory l   WHERE l.ID IN (     SELECT e.ID     FROM Examination e   ) AND l.ALB BETWEEN 3.5 AND 5.5 ) ORDER BY p.Birthday DESC;
SELECT P.ID, P.SEX, L.ALB FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE YEAR(P.Birthday) = '1982' AND L.ALB BETWEEN 3.5 AND 5.5;
SELECT      COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE Sex = 'F') AS Percentage FROM      Patient     JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE      Sex = 'F' AND (UA > 6.5);
SELECT AVG(UA)  FROM Laboratory  WHERE ID IN (   SELECT P.ID    FROM Patient P    JOIN Examination E ON P.ID = E.ID    WHERE UA < (CASE WHEN P.SEX = 'M' THEN 8.0 ELSE 6.5 END)    ORDER BY E.ID DESC    LIMIT 1 )
SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.UN = 29;
SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Patient P1 ON P.ID = P1.ID JOIN Laboratory L ON P.ID = L.ID WHERE P.Diagnosis = 'RA' AND L.UN < 30;
SELECT COUNT(*)  FROM Patient  WHERE SEX = 'M' AND CRE > 1.5;
SELECT      CASE          WHEN (SELECT COUNT(*) FROM Patient WHERE Sex = 'M' AND CRE >= 1.5) > (SELECT COUNT(*) FROM Patient WHERE Sex = 'F' AND CRE >= 1.5) THEN 'TRUE'         ELSE 'FALSE'     END AS Answer
SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.T-BIL = (SELECT MAX(T-BIL) FROM Laboratory)
SELECT P.SEX, COUNT(*) as Count FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.T_BIL > 2.0 GROUP BY P.SEX;
SELECT P.ID, L.ID AS T_CHO_INDEX FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Birthday = (SELECT MIN(Birthday) FROM Patient) AND L.T_CHO = (SELECT MAX(T_CHO) FROM Laboratory);
SELECT AVG(DIVIDE(SUM(SUBTRACT(YEAR(CURRENT_DATE), YEAR(birthday))), COUNT(ID))) FROM Patient WHERE SEX = 'M' AND T-CHO >= 250;
SELECT p.ID, p.Diagnosis, l.TG FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.TG > 300;
SELECT COUNT(*) FROM Patient WHERE EXTRACT(YEAR FROM AGE(CURRENT_DATE, Birthday)) > 50 AND TG >= 200;
Error: 第 10659 个样本有 0 个SQL。
SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Patient.Birthday BETWEEN '1936' AND '1956' AND Examination.CPK >= 250;
SELECT P.ID, P.SEX, age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GLU >= 180 AND L.T_CHO < 250;
SELECT p.ID, l.GLU FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE year(p.Description) >= 1991 AND l.GLU < 180;
SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.WBC < 3.5 OR L.WBC >= 9.0 GROUP BY P.SEX, YEAR(P.Birthday) ORDER BY P.SEX, YEAR(P.Birthday);
SELECT P.ID, SUBTRACT(year(current_timestamp), year(P.Birthday)) AS Age, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.RBC < 3.5;
SELECT P.ID, P.SEX, P.Birthday, L.RBC, P.Admission FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND (SUBTRACT(year(current_timestamp), year(P.Birthday)) >= 50) AND (L.RBC <= 3.5 OR L.RBC >= 6.0)
SELECT P.ID, P.SEX FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Admission = '-' AND L.HGB < 10;
SELECT P.ID, P.SEX FROM Patient P JOIN Patient P1 ON P.Birthday = (SELECT MIN(Birthday) FROM Patient) JOIN Laboratory L ON P.ID = L.ID WHERE P.Diagnosis = 'SLE' AND 10 < L.HGB < 17;
SELECT P.ID, age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE age = (SELECT SUBTRACT(year(current_timestamp), year(Birthday)) AS age) AND COUNT(L.ID) > 2 AND HCT >= 52;
SELECT AVG(HCT)  FROM Laboratory  WHERE Date LIKE '1991%'  AND HCT < 29;
SELECT    COUNT(*) AS patients_with_lower_than_normal_range FROM    Patient p   JOIN Examination e ON p.ID = e.ID WHERE    e.PLT < 100 UNION ALL SELECT    COUNT(*) AS patients_with_higher_than_normal_range FROM    Patient p   JOIN Examination e ON p.ID = e.ID WHERE    e.PLT > 400
SELECT * FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date LIKE '1984%' AND        SUBTRACT(year(current_timestamp), year(Birthday)) < 50 AND        (PLT BETWEEN 100 AND 400);
SELECT      MULTIPLY(         DIVIDE(             SUM(CASE WHEN PT >= 14 AND SEX = 'F' THEN 1 ELSE 0 END),              SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END)         ),          1.0     ) * 100 AS Percentage FROM      Patient, Examination WHERE      SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(Birthday)) > 55      AND Patient.ID = Examination.ID;
SELECT * FROM Patient WHERE YEAR(First Date) > 1992 AND EXISTS (   SELECT 1   FROM Examination   WHERE Examination.Patient_ID = Patient.ID   AND PT < 14 );
SELECT COUNT(*)  FROM Examination  WHERE Examination Date > '1997-01-01' AND APTT < 45;
SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.APTT > 45 AND e.Diagnosis = 3 AND e.ID NOT IN (     SELECT ID     FROM Examination     GROUP BY ID     HAVING COUNT(*) > 1 );
SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Sex = 'M' AND WBC BETWEEN 3.5 AND 9.0 AND (FG <= 150 OR FG >= 450);
SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1980-01-01' AND FG < 150 OR FG > 450;
SELECT Diagnosis  FROM Patient, Examination  WHERE Patient.ID = Examination.ID  AND U-PRO >= 30;
SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Diagnosis = 'SLE' AND 0 < L.U-PRO < 30;
SELECT COUNT(*)  FROM Patient p  JOIN Laboratory l ON p.ID = l.ID  WHERE l.IDG < 900 AND p.Symptoms = 'abortion';
SELECT COUNT(*)  FROM Patient p  JOIN Laboratory l ON p.ID = l.ID  WHERE l.IDG BETWEEN 900 AND 2000 AND Symptoms IS NOT NULL;
SELECT P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.ID = (   SELECT ID   FROM Laboratory   WHERE IGA BETWEEN 80 AND 500   ORDER BY IGA DESC   LIMIT 1 );
Error: 第 10683 个样本有 0 个SQL。
SELECT Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.IGM NOT BETWEEN 40 AND 400 GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1;
SELECT COUNT(*) FROM Patient WHERE Description IS NULL AND (CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0);
SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CRP NOT IN('+-', '-') AND l.CRP >= 1.0 AND YEAR(CURDATE()) - YEAR(p.Birthday) < 18;
SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE RA IN ('-', '+-') AND KCT = '+';
SELECT P.Diagnosis FROM Patient P WHERE YEAR(P.Birthday) >= 1995 AND RA IN ('-', '+-')
SELECT P.ID FROM Patient P, Laboratory L WHERE P.ID = L.ID AND L.RF < 20 AND YEAR(CURDATE()) - YEAR(P.Birthday) > 60;
SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RF < 20 AND e.Thrombosis = '0';
SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE C3 > 35 AND ANA Pattern = 'P';
SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Hematocrit NOT BETWEEN 29 AND 52 ORDER BY E.aCL IgA DESC LIMIT 1;
SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 'Blood Clots in veins' AND e.C4 > 10;
SELECT COUNT(DISTINCT p.ID) FROM Patient p WHERE p.RNP IN ('-', '+-') AND p.Admission = '+';
SELECT Birthday FROM Patient WHERE RNP NOT IN('-', '+-') ORDER BY Birthday LIMIT 1;
SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.SM IN ('-', '+-') AND e.Thrombosis = '1';
SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SM NOT IN ('-', '+-') ORDER BY Patient.Birthday LIMIT 3;
Error: 第 10698 个样本有 0 个SQL。
SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.SC170 IN('-', '+-') AND p.SEX = 'M' AND e.Symptoms = 'vertigo';
SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.SSA IN ('-', '+-') AND YEAR(p.First Date) < 1990;
SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.SSA NOT IN('-', '+-') AND P.First Date = (SELECT MIN(First Date) FROM Patient);
SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SSB IN ('negative', '0') AND Examination.Diagnosis = 'SLE';
SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.SSA IN ('-', '+-') AND e.Symptoms IS NOT NULL;
SELECT COUNT(*) FROM Patient WHERE SEX = 'M'   AND NOT EXISTS (     SELECT 1     FROM Laboratory     WHERE Patient.ID = Laboratory.ID       AND (CENTROMEA NOT IN ('-', '+-') OR SSB NOT IN ('-', '+-'))   );
SELECT Diagnosis FROM Patient WHERE ID IN (   SELECT Patient_ID   FROM Laboratory   WHERE DNA >= 8 );
SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Description IS NULL AND IGG < 8;
SELECT COUNT(*)  FROM Patient  WHERE ID IN (   SELECT Patient_ID    FROM Laboratory    WHERE DNA-II >= 8 AND Admission = '+' )
SELECT      MULTIPLY(         DIVIDE(             COUNT(Laboratory.ID)              WHERE Laboratory.GOT >= 60 AND Patient.Diagnosis = 'SLE'         ),         DIVIDE(             COUNT(Laboratory.ID)              WHERE Laboratory.GOT >= 60         ),         1.0     ) AS percentage FROM      Patient JOIN      Laboratory ON Patient.ID = Laboratory.ID WHERE      Patient.Diagnosis = 'SLE'
SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Sex = 'M' AND GOT < 60;
SELECT MAX(Birthday)  FROM Patient  WHERE ID IN (   SELECT Patient_ID    FROM Examination    JOIN Laboratory ON Examination.ID = Laboratory.ID    WHERE GOT >= 60 );
SELECT Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE GPT < 60 ORDER BY GPT DESC LIMIT 3;
SELECT COUNT(*)  FROM Patient  WHERE SEX = 'M' AND ID IN (   SELECT Patient_ID    FROM Laboratory    WHERE GOT < 60 )
SELECT MIN(First_Date) FROM Patient WHERE ID IN (   SELECT Patient_ID   FROM Laboratory   WHERE LDH < 500   ORDER BY LDH DESC   LIMIT 1 )
SELECT MAX(P.First Date) AS LatestDate FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.LDH >= 500;
SELECT COUNT(*)  FROM Patient  WHERE ID IN (SELECT Patient_ID               FROM Laboratory               WHERE ALP >= 300)  AND Admission = '+';
SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE Admission = '-' AND ALP < 300;
SELECT p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.TP < 6.0;
SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Diagnosis = 'SJS' AND e.TP BETWEEN 6.0 AND 8.5;
SELECT E.Date FROM Examination E JOIN Laboratory L ON E.ID = L.ID WHERE L.ALB > 3.5 AND L.ALB < 5.5 ORDER BY L.ALB DESC LIMIT 1;
SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.ALB > 3.5 AND l.ALB < 5.5 AND l.TP BETWEEN 6.0 AND 8.5;
SELECT aCL_IgG, aCL_IgM, aCL_IgA FROM Examination WHERE Sex = 'F' AND UA > 6.50 ORDER BY UA DESC LIMIT 1;
SELECT MAX(ANA) AS highest_anti_nucleus_antibody_concentration_level FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE CRE < 1.5;
SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.CRE < 1.5 AND L.aCL IgA = (SELECT MAX(L1.aCL IgA) FROM Laboratory L1);
SELECT COUNT(*)  FROM Patient p  JOIN Laboratory l ON p.ID = l.ID  WHERE l.T_BIL >= 2.0 AND ANA Pattern LIKE '%P%';
SELECT ANA FROM Laboratory WHERE T-BIL = (SELECT MAX(T-BIL) FROM Laboratory WHERE T-BIL < 2.0);
SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.ID IN (   SELECT ID   FROM Patient   WHERE T-CHO >= 250 ) AND e.KCT = '-';
SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.T-CHO < 250 AND l.ANA Pattern = 'P';
SELECT COUNT(*)  FROM Patient p  JOIN Examination e ON p.ID = e.ID  WHERE p.ID IN (   SELECT ID    FROM Laboratory    WHERE T-G < 200  ) AND e.Symptoms IS NOT NULL;
SELECT Diagnosis FROM Patient WHERE ID IN (   SELECT Patient_ID   FROM Laboratory   WHERE TG < 200   ORDER BY TG DESC   LIMIT 1 )
SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Thrombosis = 0 AND E.CPK < 250;
SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');
SELECT MIN(P.Birthday) FROM Patient P WHERE P.ID IN (   SELECT L.Patient_ID   FROM Laboratory L   WHERE L.GLU > 180 )
SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.ID IN (   SELECT ID   FROM Patient   JOIN Examination e ON Patient.ID = e.ID   WHERE GLU < 180 AND Thrombosis = 0 )
SELECT COUNT(*)  FROM Patient  WHERE Admission = '+' AND WBC BETWEEN 3.5 AND 9.0;
SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND WBC BETWEEN 3.5 AND 9.0;
SELECT P.ID FROM Patient P, Laboratory L WHERE P.ID = L.ID AND (L.RBC <= 3.5 OR L.RBC >= 6.0) AND P.Admission = '-';
SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE PLT > 100 AND PLT < 400 AND Diagnosis IS NOT NULL;
SELECT P.ID, P.Description, L.PLT FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.PLT BETWEEN 100 AND 400 AND P.Diagnosis = 'MCTD';
SELECT AVG(PT) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.PT < 14;
SELECT COUNT(*) FROM Patient WHERE EXISTS (   SELECT 1   FROM Examination   WHERE Examination.Patient_ID = Patient.ID   AND Thrombosis IN (1, 2)   AND PT < 14 )
Error: 第 10741 个样本有 0 个SQL。
SELECT COUNT(*)  FROM member  WHERE link_to_major IN (   SELECT major_id    FROM major    WHERE department = 'Engineering'   AND college = 'College of Engineering' )
Error: 第 10743 个样本有 0 个SQL。
Error: 第 10744 个样本有 0 个SQL。
Error: 第 10745 个样本有 0 个SQL。
SELECT COUNT(*)  FROM member  WHERE link_to_major IN (   SELECT major_id    FROM major    WHERE major_name IN (     SELECT event_name      FROM event      WHERE event_name = 'Women''s Soccer'   ) )  AND t_shirt_size = 'Medium';
SELECT e.* FROM event e JOIN (SELECT link_to_event, COUNT(*) as attendance_count       FROM attendance       GROUP BY link_to_event       ORDER BY attendance_count DESC       LIMIT 1) a ON e.event_id = a.link_to_event
SELECT m.college  FROM member m  WHERE m.position = 'Vice President';
SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';
Error: 第 10750 个样本有 0 个SQL。
Error: 第 10751 个样本有 0 个SQL。
SELECT event_name FROM event WHERE event_id IN (   SELECT link_to_event   FROM attendance   GROUP BY link_to_event   HAVING COUNT(event_id) > 20 );
SELECT AVG(DIVIDE(COUNT(event_id), COUNT(DISTINCT event_name))) AS avg_attendance FROM event WHERE YEAR(event_date) = 2020 AND type = 'Meeting';
SELECT MAX(cost) as max_expense, expense_description FROM expense WHERE link_to_event IN (   SELECT event_id   FROM event   WHERE type = 'club' )
SELECT COUNT(*)  FROM member  WHERE link_to_major IN (   SELECT major_id    FROM major    WHERE major_name = 'Environmental Engineering' )
SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud';
SELECT last_name FROM member WHERE link_to_major IN (   SELECT major_id   FROM major   WHERE major_name = 'Law and Constitutional Studies' );
SELECT z.county FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.last_name = 'Ramsey' AND m.first_name = 'Sherri';
Error: 第 10759 个样本有 0 个SQL。
SELECT SUM(amount)  FROM income  WHERE link_to_member IN (SELECT member_id                            FROM member                            WHERE position = 'Vice President');
SELECT SUM(b.spent)  FROM budget b  JOIN event e ON b.link_to_event = e.event_id  WHERE e.event_name = 'September Meeting' AND b.category = 'Food';
SELECT z.city, z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.position = 'President';
SELECT CONCAT(m.first_name, ' ', m.last_name) AS full_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'IL';
SELECT SUM(b.spent)  FROM budget b  JOIN event e ON b.link_to_event = e.event_id  WHERE e.event_name = 'September Meeting' AND b.category = 'Advertisement';
Error: 第 10765 个样本有 0 个SQL。
SELECT SUM(amount)  FROM budget  WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Speaker');
SELECT e.expense_description FROM expense e WHERE e.link_to_event IN (   SELECT e2.event_id   FROM event e2   WHERE e2.event_name = 'October Meeting' AND e2.event_date = '2019-10-08' ) AND e.approved = TRUE;
Error: 第 10768 个样本有 0 个SQL。
SELECT SUM(spent) - SUM(spent) AS total_difference FROM (   SELECT SUM(cost) AS spent   FROM expense   WHERE YEAR(event_date) = 2019 ) AS spent_2019, (   SELECT SUM(cost) AS spent   FROM expense   WHERE YEAR(event_date) = 2020 ) AS spent_2020;
SELECT location FROM event WHERE event_name = 'Spring Budget Review';
SELECT cost FROM expense WHERE expense_description = 'Poster' AND expense_date = '2019-09-04';
SELECT remaining FROM budget WHERE category = 'Food' AND link_to_event = (SELECT link_to_event                      FROM budget                      WHERE category = 'Food'                      ORDER BY amount DESC                      LIMIT 1)
Error: 第 10773 个样本有 0 个SQL。
SELECT COUNT(*)  FROM major  WHERE department IN (SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences');
SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';
SELECT z.county FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Adela' AND m.last_name = 'O''Gallagher';
Error: 第 10777 个样本有 0 个SQL。
SELECT SUM(amount)  FROM budget  WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker');
SELECT e.status FROM event e JOIN expense e_exp ON e.event_id = e_exp.link_to_event WHERE e_exp.expense_date = '2019-08-20' AND e_exp.expense_description = 'Post Cards, Posters';
SELECT major_name FROM member WHERE first_name = 'Brent' AND last_name = 'Thomason';
SELECT COUNT(*)  FROM member  WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Human Development and Family Studies')  AND t_shirt_size = 'Large';
Error: 第 10782 个样本有 0 个SQL。
SELECT m.major_name FROM member m WHERE m.position = 'Vice President';
SELECT z.short_state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';
Error: 第 10785 个样本有 0 个SQL。
SELECT received_date FROM income WHERE source = 'Dues' AND last_name = 'Hilton' AND first_name = 'Connor';
SELECT m.first_name, m.last_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.source = 'Dues' ORDER BY i.date_received ASC LIMIT 1;
SELECT DIVIDE(SUM(b.amount) FROM budget b WHERE b.category = 'Advertisement' AND b.event_status = 'Yearly Kickoff'),         SUM(b.amount) FROM budget b WHERE b.category = 'Advertisement' AND b.event_status = 'October Meeting') FROM budget b;
SELECT (SUM(amount) WHERE category = 'Parking' AND event_name = 'November Speaker') /         (COUNT(*) WHERE event_name = 'November Speaker') * 100 FROM budget;
SELECT SUM(cost)  FROM expense  WHERE expense_description = 'Pizza';
SELECT COUNT(DISTINCT city)  FROM zip_code  WHERE county = 'Orange' AND state = 'Virginia';
SELECT major.department  FROM major  WHERE major.college = 'College of Humanities and Social Sciences';
SELECT city, county, state FROM zip_code WHERE link_to_member IN (   SELECT link_to_member   FROM member   WHERE first_name = 'Amy' AND last_name = 'Firth' ) AND type = 'residential';
SELECT e.expense_description FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE b.remaining = (SELECT MIN(remaining) FROM budget);
Error: 第 10795 个样本有 0 个SQL。
SELECT major.college, COUNT(major.college) AS max_count FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY max_count DESC LIMIT 1;
SELECT m.major_name FROM member m WHERE m.phone = '809-555-3360';
SELECT event_name FROM event WHERE event_id IN (   SELECT link_to_event   FROM budget   ORDER BY amount DESC   LIMIT 1 )
SELECT * FROM expense WHERE link_to_member IN (   SELECT member_id   FROM member   WHERE position = 'Vice President' );
SELECT COUNT(*)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women''s Soccer';
SELECT date_received FROM income WHERE link_to_member IN (SELECT link_to_member FROM member WHERE first_name = 'Casey' AND last_name = 'Mason');
SELECT COUNT(*)  FROM member  WHERE link_to_zip IN (SELECT link_to_zip FROM zip_code WHERE state = 'MD');
SELECT COUNT(*)  FROM attendance  WHERE link_to_member IN (   SELECT member_id    FROM member    WHERE phone = '954-555-6240' )  AND link_to_event IN (   SELECT event_id    FROM event    WHERE status = 'active' );
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM member WHERE link_to_major IN (   SELECT major_id   FROM major   WHERE department = 'School of Applied Sciences, Technology and Education' );
SELECT e.event_name, b.spent / b.amount AS spend_to_budget_ratio FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.status = 'Closed' ORDER BY b.spent / b.amount DESC LIMIT 1;
SELECT COUNT(*)  FROM member  WHERE position = 'President';
SELECT MAX(spent)  FROM budget;
Error: 第 10808 个样本有 0 个SQL。
SELECT SUM(spent)  FROM budget  WHERE category = 'Food';
Error: 第 10810 个样本有 0 个SQL。
Error: 第 10811 个样本有 0 个SQL。
SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina';
SELECT COUNT(income.amount)  FROM income, member  WHERE income.link_to_member = member.member_id  AND member.first_name = 'Grant'  AND member.last_name = 'Gilmour';
SELECT m.first_name, m.last_name FROM member m JOIN income i ON m.link_to_member = i.link_to_member WHERE i.amount > 40;
Error: 第 10815 个样本有 0 个SQL。
SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Yearly Kickoff' AND e.status = 'active' AND m.position = 'Treasurer';
SELECT    m.first_name, m.last_name, i.amount, i.source FROM    member m   JOIN attendance a ON m.member_id = a.link_to_member   JOIN income i ON a.link_to_event = i.link_to_member WHERE    i.amount = (SELECT MAX(amount) FROM income) ORDER BY    i.amount DESC;
Error: 第 10818 个样本有 0 个SQL。
SELECT (SUM(COST) WHERE event_name = 'Yearly Kickoff') / SUM(COST) * 100 AS percentage FROM expense;
SELECT DIVIDE(SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END),                SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END)) AS ratio FROM member JOIN major ON member.link_to_major = major.major_id WHERE major_name IN ('Finance', 'Physics');
Error: 第 10821 个样本有 0 个SQL。
SELECT first_name, last_name, email FROM member WHERE position = 'Secretary';
Error: 第 10823 个样本有 0 个SQL。
SELECT COUNT(DISTINCT member_id) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community Theater'   AND YEAR(event.event_date) = 2019;
SELECT COUNT(*) as num_events_attended, m.major_name FROM attendance a JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Luisa' AND m.last_name = 'Guidi';
SELECT AVG(SUM(spent)) AS average_spent FROM budget WHERE category = 'Food' AND event_status = 'Closed';
SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement' ORDER BY b.spent DESC LIMIT 1;
Error: 第 10828 个样本有 0 个SQL。
Error: 第 10829 个样本有 0 个SQL。
SELECT cost  FROM expense  WHERE expense_description = 'Posters'  AND EXISTS (SELECT 1 FROM event WHERE event_name = 'September Speaker' AND event_id = link_to_event);
SELECT MAX(COUNT(t_shirt_size)) AS most_popular_size FROM member;
SELECT event_name FROM event WHERE status = 'Closed' AND link_to_event IN (   SELECT link_to_event   FROM budget   WHERE spent > remaining   ORDER BY remaining DESC   LIMIT 1 )
SELECT e.event_name, et.type, SUM(e.cost) AS total_value FROM expense e JOIN event et ON e.link_to_event = et.event_id WHERE et.event_name = 'October Meeting' AND e.approved = 1 GROUP BY e.event_name, et.type;
SELECT category, amount FROM budget WHERE link_to_event IN (   SELECT event_id   FROM event   WHERE event_name = 'April Speaker' ) ORDER BY amount ASC;
SELECT MAX(amount)  FROM budget  WHERE category = 'Food';
SELECT link_to_event, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3;
SELECT SUM(cost)  FROM expense  WHERE expense_description = 'Parking';
SELECT SUM(cost)  FROM expense  WHERE expense_date = '2019-08-20';
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY m.first_name, m.last_name;
SELECT expense_description FROM expense WHERE link_to_member IN (   SELECT member_id   FROM member   WHERE first_name = 'Sacha' AND last_name = 'Harrison' );
Error: 第 10841 个样本有 0 个SQL。
SELECT zip FROM member JOIN expense ON member.link_to_member = expense.link_to_member WHERE cost < 50;
SELECT major_name FROM member WHERE first_name = 'Phillip' AND last_name = 'Cullen';
SELECT position FROM member WHERE link_to_major IN (   SELECT major_id   FROM major   WHERE major_name = 'Business' )
SELECT COUNT(*) FROM member WHERE link_to_major IN (   SELECT major_id   FROM major   WHERE major_name = 'Business' ) AND t_shirt_size = 'Medium';
SELECT DISTINCT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30;
SELECT DISTINCT b.category FROM budget a JOIN event e ON a.link_to_event = e.event_id WHERE e.location = 'MU 215';
SELECT category  FROM budget  WHERE link_to_event IN (   SELECT event_id    FROM event    WHERE event_date = '2020-03-24T12:00:00' );
SELECT major_name FROM member WHERE position = 'Vice President';
SELECT DIVIDE(SUM(CASE WHEN position = 'Member' AND link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Mathematics') THEN 1 ELSE 0 END), COUNT(member_id)) * 100 AS percentage FROM member;
Error: 第 10851 个样本有 0 个SQL。
SELECT COUNT(*)  FROM income  WHERE amount = 50;
SELECT COUNT(*)  FROM member  WHERE position = 'Member' AND t_shirt_size = 'X-Large';
Error: 第 10854 个样本有 0 个SQL。
SELECT m.last_name, m.link_to_major, ma.department, ma.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering';
SELECT category FROM budget WHERE link_to_event IN (   SELECT event_id   FROM event   WHERE location = 'MU 215' AND type = 'Guest Speaker' ) AND spent = 0;
SELECT z.city, z.state FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'Electrical and Computer Engineering Department' AND m.position = 'Member' JOIN zip_code z ON m.zip = z.zip_code;
SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE e.type = 'Social' AND m.position = 'Vice President' AND m.zip = (SELECT zip_code FROM zip_code WHERE city = (SELECT city FROM zip_code WHERE location = '900 E. Washington St.'));
SELECT m.last_name, m.position FROM member m JOIN expense e ON m.link_to_member = e.link_to_member WHERE e.expense_date = '2019-09-10' AND e.expense_description = 'Pizza';
SELECT m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer' AND m.position = 'Member';
SELECT (COUNT(i.amount) WHERE i.amount = 50) / (SELECT COUNT(*) FROM member WHERE t_shirt_size = 'Medium') * 100
SELECT state FROM zip_code WHERE type = 'PO Box';
SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico' AND county = 'San Juan Municipio';
SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';
SELECT attendance.link_to_event FROM attendance JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE expense.cost > 50;
SELECT m.member_id, m.first_name, m.last_name, a.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON a.link_to_event = e.link_to_event WHERE e.approved = 'true' AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19';
SELECT m.college FROM member m WHERE m.first_name = 'Katy' AND m.link_to_major = 'rec1N0upiVLy5esTO';
Error: 第 10868 个样本有 0 个SQL。
SELECT email  FROM member  WHERE link_to_member IN (   SELECT link_to_member    FROM expense    WHERE expense_date BETWEEN '2019-09-10' and '2019-11-19'    AND cost > 20 )
SELECT COUNT(*) FROM member WHERE link_to_major IN (   SELECT major_id   FROM major   WHERE major_name = 'education' ) AND position = 'Member';
SELECT (SUM(b.remaining < 0) / COUNT(e.event_id)) * 100 AS percentage_over_budget FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.event_status = 'active';
SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';
SELECT *  FROM expense  WHERE cost > (SELECT AVG(cost) FROM expense);
SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';
SELECT DIVIDE(SUM(type = 'PO Box'), COUNT(*)) * 100 AS percentage_of_po_boxes FROM zip_code;
SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.spent < b.amount AND b.remaining > 0;
SELECT e.event_name, e.event_date FROM event e JOIN expense e_exp ON e.event_id = e_exp.link_to_event WHERE e_exp.expense_description = 'Pizza' AND e_exp.cost > 50 AND e_exp.cost < 100;
SELECT m.first_name, m.last_name, m.major_name FROM member m JOIN expense e ON m.link_to_member = e.link_to_member JOIN budget b ON e.link_to_budget = b.link_to_event WHERE e.cost > 100;
SELECT e.location, z.city, z.county FROM event e JOIN zip_code z ON e.location = z.zip_code WHERE e.event_id IN (   SELECT link_to_event   FROM income   GROUP BY link_to_event   HAVING COUNT(*) > 40 );
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.link_to_event IN (   SELECT link_to_event   FROM attendance   GROUP BY link_to_event   HAVING COUNT(link_to_event) > 1 ) GROUP BY m.first_name, m.last_name ORDER BY total_cost DESC LIMIT 1;
SELECT AVG(cost)  FROM expense  WHERE approved = 1 AND link_to_member IN (SELECT member_id FROM member WHERE position != 'Member');
SELECT event_name FROM event WHERE event_name IN (   SELECT e.event_name   FROM event e   JOIN expense e1 ON e.event_id = e1.link_to_event   WHERE e1.category = 'Parking'   AND e1.cost < (SELECT AVG(cost) FROM expense WHERE category = 'Parking') )
SELECT DIVIDE(SUM(e.cost), COUNT(e.event_id)) * 100 FROM event e WHERE e.type = 'Game';
SELECT link_to_event, MAX(cost) AS max_cost FROM expense WHERE expense_description = 'Water, chips, cookies';
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spend FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id, m.first_name, m.last_name ORDER BY total_spend DESC LIMIT 5;
SELECT m.first_name, m.last_name, m.phone FROM member m JOIN expense e ON m.link_to_member = e.link_to_member WHERE e.cost > (SELECT AVG(cost) FROM expense);
SELECT    SUBTRACT(     DIVIDE(       SUM(CASE WHEN zip.state = 'Maine' THEN 1 ELSE 0 END),        COUNT(CASE WHEN member.position = 'Member' THEN 1 ELSE 0 END)     ),     DIVIDE(       SUM(CASE WHEN zip.state = 'Vermont' THEN 1 ELSE 0 END),        COUNT(CASE WHEN member.position = 'Member' THEN 1 ELSE 0 END)     )   ) AS difference_in_percentage FROM    member    JOIN zip ON member.zip = zip.zip_code;
SELECT major_name, department FROM major, member WHERE major.major_id = member.link_to_major AND first_name = 'Garrett' AND last_name = 'Gerke';
SELECT m.first_name, m.last_name, e.expense_description, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies';
SELECT m.last_name, m.phone FROM member m JOIN major mjr ON m.link_to_major = mjr.major_id WHERE mjr.major_name = 'Elementary Education';
Error: 第 10891 个样本有 0 个SQL。
SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Food';
SELECT m.first_name, m.last_name, i.amount  FROM member m  JOIN income i ON m.member_id = i.link_to_member  WHERE i.date_received = '2019-09-09';
SELECT category  FROM budget  JOIN expense ON budget.link_to_event = expense.link_to_budget  WHERE expense.expense_description = 'Posters';
SELECT m.first_name, m.last_name, m.link_to_major, major.department, major.college FROM member m JOIN major ON m.link_to_major = major.major_id WHERE m.position = 'Secretary';
SELECT e.event_name, SUM(b.spent) AS total_spent FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE b.category = 'Speaker Gifts' GROUP BY e.event_name;
SELECT z.city  FROM member m  JOIN zip_code z ON m.zip = z.zip_code  WHERE m.last_name = 'Girke' AND m.first_name = 'Garrett';
SELECT m.first_name, m.last_name, z.city || ', ' || z.state AS hometown FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina';
Error: 第 10899 个样本有 0 个SQL。
SELECT COUNT(Currency = 'EUR') / COUNT(Currency = 'CZK')  FROM customers;
SELECT c.CustomerID, c.Segment, y.Date FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date BETWEEN '201201' AND '201212' AND c.Segment = 'LAM' ORDER BY y.Consumption LIMIT 1;
SELECT AVG(c.Consumption) / 12 AS Average_Monthly_Consumption FROM yearmonth c WHERE c.CustomerID IN (   SELECT CustomerID   FROM customers   WHERE Segment = 'SME' ) AND c.Date BETWEEN '201301' AND '201312';
SELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'CZK' AND y.Date BETWEEN '201101' AND '201112' GROUP BY c.CustomerID ORDER BY TotalConsumption DESC;
SELECT COUNT(DISTINCT c.CustomerID) FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'KAM' AND y.Date BETWEEN '201201' AND '201212' AND y.Consumption < 30000;
SELECT    (SELECT SUM(Consumption)     FROM yearmonth     WHERE CustomerID IN (SELECT CustomerID                           FROM customers                           WHERE Currency = 'CZK')       AND Date BETWEEN '201201' AND '201212')    -    (SELECT SUM(Consumption)     FROM yearmonth     WHERE CustomerID IN (SELECT CustomerID                           FROM customers                           WHERE Currency = 'EUR')       AND Date BETWEEN '201201' AND '201212') AS Difference_in_Consumption
SELECT ym.Year, SUM(t.Amount) AS TotalGasUse FROM transactions_1k t JOIN yearmonth ym ON t.Date = ym.Date AND t.CustomerID = ym.CustomerID WHERE t.Currency = 'EUR' GROUP BY ym.Year ORDER BY TotalGasUse DESC LIMIT 1;
SELECT      Segment FROM      yearmonth GROUP BY      Segment ORDER BY      COUNT(*) ASC LIMIT 1;
SELECT year, SUM(Consumption) as TotalConsumption FROM yearmonth WHERE Currency = 'CZK' GROUP BY year ORDER BY TotalConsumption DESC LIMIT 1;
SELECT      ym.Date,      SUM(ym.Consumption) as TotalConsumption FROM      yearmonth ym JOIN      customers c ON ym.CustomerID = c.CustomerID WHERE      c.Segment = 'SME' AND      LEFT(ym.Date, 4) = '2013' GROUP BY      ym.Date ORDER BY      TotalConsumption DESC LIMIT 1;
SELECT      (AVG(CASE WHEN Segment = 'SME' THEN Consumption ELSE 0 END) - AVG(CASE WHEN Segment = 'LAM' THEN Consumption ELSE 0 END)) AS SME_LAM,     (AVG(CASE WHEN Segment = 'LAM' THEN Consumption ELSE 0 END) - AVG(CASE WHEN Segment = 'KAM' THEN Consumption ELSE 0 END)) AS LAM_KAM,     (AVG(CASE WHEN Segment = 'KAM' THEN Consumption ELSE 0 END) - AVG(CASE WHEN Segment = 'SME' THEN Consumption ELSE 0 END)) AS KAM_SME FROM      (SELECT          c.CustomerID,          y.Date,          SUM(y.Consumption) AS Consumption     FROM          customers c      JOIN          yearmonth y ON c.CustomerID = y.CustomerID      WHERE          y.Date BETWEEN '201301' AND '201312'     GROUP BY          c.CustomerID,          y.Date     ORDER BY          Consumption     LIMIT 1) AS lowest_consumption_per_segment WHERE      Segment IN ('SME', 'LAM', 'KAM');
SELECT      Segment,      ROUND((SUM(CASE WHEN Date BETWEEN '201201' AND '201212' THEN Consumption ELSE 0 END) -              SUM(CASE WHEN Date BETWEEN '201301' AND '201312' THEN Consumption ELSE 0 END)) /             SUM(CASE WHEN Date BETWEEN '201301' AND '201312' THEN Consumption ELSE 0 END) * 100, 2) AS Percentage_Increase FROM      yearmonth WHERE      Currency = 'EUR' GROUP BY      Segment ORDER BY      Percentage_Increase DESC;
SELECT SUM(Consumption)  FROM yearmonth  WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';
SELECT    (SELECT COUNT(*) FROM gasstations WHERE Country = 'Czech Republic' AND Segment = 'discount') -    (SELECT COUNT(*) FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'discount') AS More_Discount_Gas_Stations
SELECT      SUM(y Consumption) - SUM(y Consumption) AS Difference FROM      yearmonth y WHERE      y.CustomerID = 7 AND y.Date LIKE '201304%' UNION ALL SELECT      SUM(y Consumption) AS Consumption FROM      yearmonth y WHERE      y.CustomerID = 5 AND y.Date LIKE '201304%';
SELECT COUNT(*)  FROM (   SELECT COUNT(*)    FROM transactions_1k    WHERE CustomerID IN (     SELECT CustomerID      FROM customers      WHERE Segment = 'SME'      AND Currency = 'CZK'   )    UNION ALL    SELECT COUNT(*)    FROM transactions_1k    WHERE CustomerID IN (     SELECT CustomerID      FROM customers      WHERE Segment = 'SME'      AND Currency = 'EUR'   ) ) AS subquery  WHERE subquery.COUNT(*) > (   SELECT COUNT(*)    FROM transactions_1k    WHERE CustomerID IN (     SELECT CustomerID      FROM customers      WHERE Segment = 'SME'      AND Currency = 'EUR'   ) ) - (   SELECT COUNT(*)    FROM transactions_1k    WHERE CustomerID IN (     SELECT CustomerID      FROM customers      WHERE Segment = 'SME'      AND Currency = 'CZK'   ) );
SELECT c.CustomerID FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'Euro' AND DATE_FORMAT(y.Date, '%Y%m') = '201310' ORDER BY y.Consumption DESC LIMIT 1;
SELECT c.CustomerID, SUM(y.Consumption) as Total_Consumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' GROUP BY c.CustomerID ORDER BY Total_Consumption DESC LIMIT 1;
SELECT SUM(Consumption)  FROM yearmonth  WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM')  AND Date LIKE '201305%';
SELECT ROUND((COUNT(*)/(SELECT COUNT(*) FROM yearmonth y INNER JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'LAM') * 100),2) AS Percentage FROM yearmonth y INNER JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'LAM' AND Consumption > 46.73;
SELECT      g.Country,      COUNT(*) AS Total_VFM_Gas_Stations FROM      gasstations g JOIN      transactions_1k t ON g.GasStationID = t.GasStationID JOIN      yearmonth y ON g.GasStationID = y.CustomerID WHERE      y.Consumption > (SELECT AVG(Consumption) FROM yearmonth) GROUP BY      g.Country ORDER BY      Total_VFM_Gas_Stations DESC;
SELECT ROUND((SUM(CASE WHEN customers.Segment = 'KAM' AND transactions_1k.Currency = 'EUR' THEN 1 ELSE 0 END) /                 (SELECT COUNT(*) FROM customers WHERE Segment = 'KAM')) * 100, 2) AS Percentage_of_KAM_uses_Euro
SELECT    (COUNT(*)/(SELECT COUNT(*) FROM yearmonth WHERE DATE LIKE '201202%'))*100 AS Percentage FROM    yearmonth  WHERE    DATE LIKE '201202%' AND Consumption > 528.3;
SELECT ROUND(COUNT(g.GasStationID) * 100.0 /               (SELECT COUNT(*) FROM gasstations g WHERE g.Country = 'Slovakia'), 2)  FROM gasstations g  WHERE g.ChainID IN (SELECT ChainID FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'Premium');
SELECT CustomerID, SUM(Amount) AS TotalConsumption FROM transactions_1k WHERE Date LIKE '201309%' GROUP BY CustomerID ORDER BY TotalConsumption DESC LIMIT 1;
SELECT c.Segment, SUM(y.Consumption) as Consumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date = '201309' GROUP BY c.Segment ORDER BY Consumption LIMIT 1;
SELECT c.CustomerID, c.Currency FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'SME' AND y.Date = '201206' ORDER BY y.Consumption ASC LIMIT 1;
SELECT MAX(Consumption) FROM yearmonth WHERE LEFT(Date, 4) = '2012';
SELECT      SUM(consumption) / 12 AS BiggestMonthlyConsumption FROM      yearmonth WHERE      CustomerID IN (         SELECT              CustomerID          FROM              customers          WHERE              Currency = 'Euro'     ) ORDER BY      BiggestMonthlyConsumption DESC LIMIT 1;
SELECT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID WHERE t.Date LIKE '201309%';
SELECT g.Country  FROM transactions_1k t  JOIN gasstations g ON t.GasStationID = g.GasStationID  WHERE t.Date LIKE '201306%' AND t.Time LIKE '____:____:____';
Error: 第 10931 个样本有 0 个SQL。
SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID WHERE t.Currency = 'EUR';
SELECT AVG(Amount)  FROM transactions_1k  WHERE Date LIKE '2012-01-%';
SELECT COUNT(*) FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'Euro' AND y.Consumption > 1000;
SELECT p.Description FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' JOIN products p ON t.ProductID = p.ProductID;
Error: 第 10936 个样本有 0 个SQL。
SELECT COUNT(*)  FROM transactions_1k  WHERE GasStationID IN (   SELECT GasStationID    FROM gasstations    WHERE Country = 'CZE' ) AND Price > 1000;
SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (   SELECT GasStationID   FROM gasstations   WHERE Country = 'CZE' ) AND Date > '2012-01-01';
SELECT AVG(Amount)  FROM transactions_1k  WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE');
SELECT AVG(Amount)  FROM transactions_1k  WHERE Currency = 'EUR'  GROUP BY CustomerID;
SELECT c.CustomerID, SUM(t.Amount) as Total_Paid FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-25' GROUP BY c.CustomerID ORDER BY Total_Paid DESC LIMIT 1;
SELECT g.Country FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Date = '2012-08-25' AND t.CustomerID IN (   SELECT c.CustomerID   FROM customers c   WHERE c.CustomerID IN (     SELECT y.CustomerID     FROM yearmonth y     WHERE y.Date = '2012-08-25'   ) )
SELECT Currency FROM customers WHERE CustomerID IN (   SELECT CustomerID   FROM transactions_1k   WHERE Date = '2012-08-24' AND Time = '16:25:00' )
SELECT c.Segment FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-23' AND t.Time = '21:20:00';
SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time < '13:00:00' AND Currency = 'EUR';
Error: 第 10946 个样本有 0 个SQL。
SELECT G.Country FROM transactions_1k T1 JOIN gasstations G ON T1.GasStationID = G.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00';
SELECT ProductID FROM transactions_1k T1 WHERE Date = '2012-08-23' AND Time = '21:20:00';
SELECT    ym.Date,    SUM(t.Amount) AS Total_Spend FROM    transactions_1k t   JOIN yearmonth ym ON t.CustomerID = ym.CustomerID AND ym.Date LIKE '2012-01-%' WHERE    t.Amount = 124.05 AND t.Date = '2012-08-24' GROUP BY    ym.Date
SELECT COUNT(*)  FROM transactions_1k  WHERE Date = '2012-08-26' AND Time BETWEEN '08:00:00' AND '09:00:00'  AND GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE');
SELECT c.Currency FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date LIKE '201306';
Error: 第 10952 个样本有 0 个SQL。
SELECT g.Country FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-24' AND t.Amount = 548.4;
SELECT      ROUND(COUNT(DISTINCT c.CustomerID) / (SELECT COUNT(*) FROM customers) * 100, 2)  FROM      customers c  WHERE      c.Currency = 'EUR'      AND EXISTS (SELECT 1 FROM yearmonth ym WHERE ym.CustomerID = c.CustomerID AND ym.Date = '2012-08-25');
SELECT (c2012 - c2013) / c2012 AS ConsumptionDecreaseRate FROM (   SELECT      CustomerID,      SUM(Consumption) AS c2012   FROM yearmonth   WHERE Date <= '2012-08-24'   GROUP BY CustomerID ) AS ym2012 JOIN (   SELECT      CustomerID,      SUM(Consumption) AS c2013   FROM yearmonth   WHERE Date > '2012-08-24'   GROUP BY CustomerID ) AS ym2013 ON ym2012.CustomerID = ym2013.CustomerID WHERE ym2012.CustomerID IN (   SELECT CustomerID   FROM transactions_1k   WHERE Amount = 634.8 )
SELECT gs.GasStationID, SUM(t.Amount) as TotalRevenue FROM transactions_1k t JOIN gasstations gs ON t.GasStationID = gs.GasStationID GROUP BY gs.GasStationID ORDER BY TotalRevenue DESC LIMIT 1;
SELECT      (COUNT(c.Segment = 'Premium') / COUNT(DISTINCT c.Segment)) * 100 AS Premium_Percentage FROM      customers c WHERE      c.Segment = 'Premium' AND c.Country = 'SVK'
SELECT SUM(Amount) AS Total_Spent_at_Gas_Stations FROM transactions_1k WHERE CustomerID = 38508;  SELECT SUM(Amount) AS Total_Spent_in_Jan_2012 FROM transactions_1k WHERE Date LIKE '201201%';
SELECT p.Description AS FullProductName, SUM(t.Amount) AS TotalSales FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID GROUP BY p.Description ORDER BY TotalSales DESC LIMIT 5;
SELECT      c.CustomerID,      c.Currency,      AVG(t.Price / t.Amount) AS avg_price_per_item FROM      transactions_1k t JOIN      customers c ON t.CustomerID = c.CustomerID GROUP BY      c.CustomerID,      c.Currency ORDER BY      SUM(t.Amount) DESC LIMIT 1;
SELECT g.Country FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.ProductID = 2 GROUP BY g.Country ORDER BY SUM(t.Price) DESC LIMIT 1;
SELECT c.CustomerID, y.Date, y.Consumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE y.Date LIKE '201208%' AND EXISTS (   SELECT 1   FROM transactions_1k t   WHERE t.CustomerID = c.CustomerID   AND t.ProductID = 5   AND t.Price / t.Amount > 29.00 )
