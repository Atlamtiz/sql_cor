-------------------------0 sample_num
```sql
SELECT COUNT(*) 
FROM head 
WHERE age > 56;
```
-------------------------1 sample_num
```sql
SELECT T2.name, T2.born_state, T2.age
FROM management AS T1 
JOIN head AS T2 ON T1.head_id = T2.head_id
ORDER BY T2.age;
```
-------------------------2 sample_num
```sql
SELECT Creation, Name, Budget_in_Billions 
FROM department;
```
-------------------------3 sample_num
```sql
SELECT MAX(Budget_in_Billions) AS MaxBudget, MIN(Budget_in_Billions) AS MinBudget FROM department;
```
-------------------------4 sample_num
```sql
SELECT AVG(Num_Employees) 
FROM department 
WHERE Ranking BETWEEN 10 AND 15;
```
-------------------------5 sample_num
```sql
SELECT name FROM head WHERE born_state != 'California';
```
-------------------------6 sample_num
```sql
SELECT DISTINCT T1.Creation FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID JOIN head AS T3 ON T2.head_ID = T3.head_ID WHERE T3.born_state = 'Alabama';
```
-------------------------7 sample_num
```sql
SELECT born_state 
FROM head 
GROUP BY born_state 
HAVING COUNT(head_ID) >= 3;
```
-------------------------8 sample_num
```sql
SELECT Creation, COUNT(*) AS Num_Departments
FROM department
GROUP BY Creation
ORDER BY Num_Departments DESC
LIMIT 1;
```
-------------------------9 sample_num
```sql
SELECT department.Name, department.Num_Employees 
FROM department 
JOIN management ON department.Department_ID = management.department_ID 
WHERE management.temporary_acting = 'Yes';
```
-------------------------10 sample_num
```sql
SELECT COUNT(DISTINCT temporary_acting) FROM management;
```
-------------------------11 sample_num
```sql
SELECT COUNT(*) 
FROM department 
WHERE department_ID NOT IN (SELECT department_ID FROM management)
```
-------------------------12 sample_num
```sql
SELECT DISTINCT T2.age FROM management AS T1 JOIN head AS T2 ON T1.head_id = T2.head_id WHERE T1.temporary_acting = 'Yes'
```
-------------------------13 sample_num
```sql
SELECT born_state 
FROM head 
WHERE head_ID IN (
    SELECT h.head_ID 
    FROM head h
    JOIN management m ON h.head_ID = m.head_ID
    JOIN department d ON m.department_ID = d.Department_ID
    WHERE d.Name IN ('Treasury', 'Homeland Security')
)
GROUP BY born_state 
HAVING COUNT(*) > 1;
```
-------------------------14 sample_num
```sql
SELECT d.Department_ID, d.Name, COUNT(m.head_ID) AS Num_of_Heads
FROM department d
JOIN management m ON d.Department_ID = m.department_ID
GROUP BY d.Department_ID, d.Name
HAVING COUNT(m.head_ID) > 1;
```
-------------------------15 sample_num
```sql
SELECT head_ID, name FROM head WHERE name LIKE '%Ha%';
```
-------------------------16 sample_num
```sql
SELECT COUNT(*) FROM farm;
```
-------------------------17 sample_num
```sql
SELECT COUNT(*) FROM farm;
```
-------------------------18 sample_num
```sql
SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC;
```
-------------------------19 sample_num
```sql
SELECT farm.Farm_ID, farm.Total_Horses 
FROM farm 
ORDER BY farm.Total_Horses ASC;
```
-------------------------20 sample_num
```sql
SELECT T3.Hosts FROM farm_competition AS T1 JOIN competition_record AS T2 ON T1.Competition_ID = T2.Competition_ID JOIN city AS T3 ON T1.Host_city_ID = T3.City_ID WHERE T1.Theme != 'Aliens'
```
-------------------------21 sample_num
```sql
SELECT Hosts 
FROM farm_competition 
WHERE Theme != 'Aliens';
```
-------------------------22 sample_num
```sql
SELECT Theme 
FROM farm_competition 
ORDER BY Year ASC;
```
-------------------------23 sample_num
```sql
SELECT Theme 
FROM farm_competition 
ORDER BY Year ASC;
```
-------------------------24 sample_num
```sql
SELECT AVG(Working_Horses) 
FROM farm 
WHERE Total_Horses > 5000;
```
-------------------------25 sample_num
```sql
SELECT AVG(Working_Horses) 
FROM farm 
WHERE Total_Horses > 5000;
```
-------------------------26 sample_num
```sql
SELECT MAX(T2.Cows) AS MaxCows ,  MIN(T2.Cows) AS MinCows FROM farm AS T2;
```
-------------------------27 sample_num
```sql
SELECT MAX(Total_Cattle) AS Max_Cows, MIN(Total_Cattle) AS Min_Cows FROM farm;
```
-------------------------28 sample_num
```sql
SELECT COUNT(DISTINCT Status) FROM city;
```
-------------------------29 sample_num
```sql
SELECT COUNT(DISTINCT Status) FROM city;
```
-------------------------30 sample_num
```sql
SELECT Official_Name 
FROM city 
ORDER BY Population DESC;
```
-------------------------31 sample_num
```sql
SELECT Official_Name 
FROM city 
ORDER BY Population DESC;
```
-------------------------32 sample_num
```sql
SELECT Official_Name, Status FROM city WHERE Population = (SELECT MAX(Population) FROM city);
```
-------------------------33 sample_num
```sql
SELECT Official_Name, Status FROM city ORDER BY Population DESC LIMIT 1;
```
-------------------------34 sample_num
```sql
SELECT fc.Year, c.Official_Name 
FROM farm_competition AS fc 
JOIN city AS c ON fc.Host_city_ID = c.City_ID;
```
-------------------------35 sample_num
```sql
SELECT fc.Year, c.Official_Name 
FROM farm_competition AS fc 
JOIN city AS c ON fc.Host_city_ID = c.City_ID;
```
-------------------------36 sample_num
```sql
SELECT T1.Official_Name 
FROM city AS T1 
JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID 
GROUP BY T1.City_ID 
HAVING COUNT(T2.Competition_ID) > 1
```
-------------------------37 sample_num
```sql
SELECT T1.Official_Name 
FROM city AS T1 
JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID 
GROUP BY T1.City_ID 
HAVING COUNT(T2.Competition_ID) > 1
```
-------------------------38 sample_num
```sql
SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(T2.Competition_ID) DESC LIMIT 1;
```
-------------------------39 sample_num
```sql
SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(T2.Competition_ID) DESC LIMIT 1
```
-------------------------40 sample_num
```sql
SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000;
```
-------------------------41 sample_num
```sql
SELECT fc.Theme
FROM farm_competition fc
JOIN city c ON fc.Host_city_ID = c.City_ID
WHERE c.Population > 1000;
```
-------------------------42 sample_num
```sql
SELECT Status, AVG(Population) 
FROM city 
GROUP BY Status;
```
-------------------------43 sample_num
```sql
SELECT Status, AVG(Population) 
FROM city 
GROUP BY Status;
```
-------------------------44 sample_num
```sql
SELECT Status, COUNT(*) AS NumberOfCities
FROM city
GROUP BY Status
ORDER BY NumberOfCities DESC;
```
-------------------------45 sample_num
```sql
SELECT Status, COUNT(*) AS Frequency 
FROM city 
GROUP BY Status 
ORDER BY Frequency ASC;
```
-------------------------46 sample_num
```sql
SELECT Status, COUNT(*) AS Count 
FROM city 
GROUP BY Status 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------47 sample_num
```sql
SELECT Status, COUNT(*) AS count 
FROM city 
GROUP BY Status 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------48 sample_num
```sql
SELECT Official_Name 
FROM city 
WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition);
```
-------------------------49 sample_num
```sql
SELECT Official_Name 
FROM city 
WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition);
```
-------------------------50 sample_num
```sql
SELECT Status FROM city WHERE Population > 1500 AND Population < 500;
```

Please note that this query is incorrect if the requirement is to find the status shared by cities with populations strictly greater than 1500 and strictly less than 500, since no population can satisfy both conditions simultaneously. If the intent was to find statuses of cities with populations greater than 500 but less than 1500, the correct query would be:
```sql
SELECT Status FROM city WHERE Population > 500 AND Population < 1500;
```
-------------------------51 sample_num
```sql
SELECT Status 
FROM city 
WHERE Population > 1500 
INTERSECT 
SELECT Status 
FROM city 
WHERE Population < 500;
```
-------------------------52 sample_num
```sql
SELECT Official_Name 
FROM city 
WHERE Population < 500 OR Population > 1500;
```
-------------------------53 sample_num
```sql
SELECT Official_Name 
FROM city 
WHERE Population > 1500 OR Population < 500;
```
-------------------------54 sample_num
```sql
SELECT Official_Name, Census_Ranking 
FROM city 
WHERE Status != 'Village';
```
-------------------------55 sample_num
```sql
SELECT Census_Ranking FROM city WHERE Status != 'Village';
```
-------------------------56 sample_num
```sql
SELECT c.course_name, COUNT(scr.student_id) AS num_students
FROM Courses c
JOIN Student_Course_Registrations scr ON c.course_id = scr.course_id
GROUP BY c.course_name
ORDER BY num_students DESC
LIMIT 1;
```
-------------------------57 sample_num
```sql
SELECT c.course_name 
FROM Courses c
JOIN Student_Course_Registrations scr ON c.course_id = scr.course_id
GROUP BY c.course_id, c.course_name
ORDER BY COUNT(scr.student_id) DESC
LIMIT 1;
```
-------------------------58 sample_num
```sql
SELECT student_id 
FROM (
  SELECT student_id, COUNT(course_id) as course_count
  FROM Student_Course_Registrations
  GROUP BY student_id
) as subquery
WHERE course_count = (
  SELECT MIN(course_count)
  FROM (
    SELECT COUNT(course_id) as course_count
    FROM Student_Course_Registrations
    GROUP BY student_id
  ) as subquery2
)
```
-------------------------59 sample_num
```sql
SELECT student_id 
FROM (
  SELECT student_id, COUNT(course_id) as num_courses
  FROM Student_Course_Registrations
  GROUP BY student_id
) as subquery
WHERE num_courses = (
  SELECT MIN(num_courses)
  FROM (
    SELECT COUNT(course_id) as num_courses
    FROM Student_Course_Registrations
    GROUP BY student_id
  ) as subquery2
);
```
-------------------------60 sample_num
```sql
SELECT first_name, last_name 
FROM People 
WHERE person_id IN (SELECT candidate_id FROM Candidates);
```
-------------------------61 sample_num
```sql
SELECT first_name, last_name 
FROM People 
WHERE person_id IN (SELECT candidate_id FROM Candidates);
```
-------------------------62 sample_num
```sql
SELECT student_id 
FROM Students 
WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Attendance)
```
-------------------------63 sample_num
```sql
SELECT s.student_id 
FROM Students s 
LEFT JOIN Student_Course_Attendance sca 
ON s.student_id = sca.student_id 
WHERE sca.student_id IS NULL;
```
-------------------------64 sample_num
```sql
SELECT DISTINCT student_id 
FROM Student_Course_Attendance;
```
-------------------------65 sample_num
```sql
SELECT DISTINCT student_id 
FROM Student_Course_Attendance;
```
-------------------------66 sample_num
```sql
SELECT sc.student_id, c.course_name 
FROM Student_Course_Registrations sc 
JOIN Courses c ON sc.course_id = c.course_id;
```
-------------------------67 sample_num
```sql
SELECT s.student_details 
FROM Students s
JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id 
WHERE scr.registration_date = (SELECT MAX(registration_date) FROM Student_Course_Registrations)
```
Note: This query assumes that there is not more than one student registering at the same exact time. If two students could potentially register at the exact same time, you would have to add additional criteria, or return all students registering at the latest date.
-------------------------68 sample_num
```sql
SELECT s.student_id, s.student_details, MAX(registration_date) 
FROM Students s
JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id 
GROUP BY s.student_id, s.student_details 
ORDER BY MAX(scr.registration_date) DESC;
```
```
-------------------------69 sample_num
```sql
SELECT COUNT(*) 
FROM Student_Course_Attendance 
JOIN Courses ON Student_Course_Attendance.course_id = Courses.course_id 
WHERE Courses.course_name = 'English';
```
-------------------------70 sample_num
```sql
SELECT COUNT(*) 
FROM Student_Course_Attendance sca
JOIN Courses c ON sca.course_id = c.course_id
WHERE c.course_name = 'English';
```
-------------------------71 sample_num
```sql
SELECT COUNT(*) 
FROM Student_Course_Attendance 
WHERE student_id = 171;
```
-------------------------72 sample_num
```sql
SELECT COUNT(*) 
FROM Student_Course_Attendance 
WHERE student_id = 171;
```
-------------------------73 sample_num
```sql
SELECT candidate_id FROM Candidates WHERE candidate_details = (SELECT People.person_id FROM People WHERE email_address = 'stanley.monahan@example.org');
```
-------------------------74 sample_num
```sql
SELECT T1.candidate_id FROM Candidates AS T1 JOIN People AS T2 ON T1.candidate_id = T2.person_id WHERE T2.email_address = 'stanley.monahan@example.org'
```
-------------------------75 sample_num
```sql
SELECT c.candidate_id 
FROM Candidates c
JOIN Candidate_Assessments ca ON c.candidate_id = ca.candidate_id
WHERE ca.assessment_date = (SELECT MAX(assessment_date) FROM Candidate_Assessments)
```
Note: This assumes that the `assessment_date` column represents the date when the candidate accessed the course, but based on the description provided, it actually represents the assessment date. You may need to adjust the join and selection logic according to the actual data model and access date representation in your database.
-------------------------76 sample_num
```sql
SELECT c.candidate_id 
FROM Candidates c
JOIN Candidate_Assessments ca ON c.candidate_id = ca.candidate_id
WHERE ca.assessment_date = (SELECT MAX(assessment_date) FROM Candidate_Assessments)
```
Note: This query assumes that the `assessment_date` in the `Candidate_Assessments` table indicates when the candidate accessed the course. However, based on the schema provided, it might be more accurate to use the `date_of_attendance` from the `Student_Course_Attendance` table or `registration_date` from the `Student_Course_Registrations` table if you want to track when students accessed courses. Since this information was not requested, I've used the `assessment_date` from the `Candidate_Assessments` table instead. If you want to use `date_of_attendance` or `registration_date`, additional join conditions would need to be added.
-------------------------77 sample_num
```sql
SELECT s.student_details
FROM Students s
JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id
GROUP BY s.student_id, s.student_details
ORDER BY COUNT(scr.course_id) DESC
LIMIT 1;
```
-------------------------78 sample_num
```sql
SELECT s.student_details
FROM Students s
JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id
GROUP BY s.student_id, s.student_details
ORDER BY COUNT(scr.course_id) DESC
LIMIT 1;
```
-------------------------79 sample_num
```sql
SELECT student_id, COUNT(course_id) 
FROM Student_Course_Registrations 
GROUP BY student_id
HAVING COUNT(course_id) > 0;
```
-------------------------80 sample_num
```sql
SELECT student_id, COUNT(course_id) AS num_courses_registered 
FROM Student_Course_Registrations 
GROUP BY student_id;
```
-------------------------81 sample_num
```sql
SELECT Courses.course_name, COUNT(Student_Course_Registrations.student_id) AS Number_of_Students 
FROM Courses 
JOIN Student_Course_Registrations ON Courses.course_id = Student_Course_Registrations.course_id 
GROUP BY Courses.course_name;
```
-------------------------82 sample_num
```sql
SELECT Courses.course_id, Courses.course_name, COUNT(Students.student_id) AS number_of_students
FROM Courses
JOIN Student_Course_Registrations ON Courses.course_id = Student_Course_Registrations.course_id
JOIN Students ON Students.student_id = Student_Course_Registrations.student_id
GROUP BY Courses.course_id, Courses.course_name;
```
-------------------------83 sample_num
```sql
SELECT candidate_id 
FROM Candidate_Assessments 
WHERE asessment_outcome_code = 'Pass';
```
-------------------------84 sample_num
```sql
SELECT candidate_id 
FROM Candidate_Assessments 
WHERE asessment_outcome_code = 'Pass';
```
-------------------------85 sample_num
```sql
SELECT P.cell_mobile_number 
FROM People P
JOIN Candidates C ON P.person_id = C.candidate_id
JOIN Candidate_Assessments CA ON C.candidate_id = CA.candidate_id
WHERE CA.asessment_outcome_code = 'Fail';
```
-------------------------86 sample_num
```sql
SELECT p.cell_mobile_number 
FROM People p
JOIN Candidates c ON p.person_id = c.candidate_id
JOIN Candidate_Assessments ca ON c.candidate_id = ca.candidate_id
WHERE ca.asessment_outcome_code = 'Fail';
```
-------------------------87 sample_num
```sql
SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301;
```
-------------------------88 sample_num
```sql
SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301;
```
-------------------------89 sample_num
```sql
SELECT student_id 
FROM Student_Course_Registrations 
WHERE course_id = 301 
ORDER BY registration_date DESC 
LIMIT 1;
```
-------------------------90 sample_num
```sql
SELECT student_id 
FROM Student_Course_Registrations 
WHERE course_id = 301 
ORDER BY registration_date DESC 
LIMIT 1;
```
-------------------------91 sample_num
```sql
SELECT DISTINCT city FROM Addresses;
```
-------------------------92 sample_num
```sql
SELECT DISTINCT city FROM Addresses WHERE city IS NOT NULL;
```
-------------------------93 sample_num
```sql
SELECT DISTINCT A.city 
FROM Addresses A 
JOIN People_Addresses PA ON A.address_id = PA.address_id 
JOIN People P ON PA.person_id = P.person_id 
JOIN Students S ON P.person_id = S.student_id;
```
-------------------------94 sample_num
```sql
SELECT DISTINCT city FROM Addresses WHERE address_id IN (SELECT address_id FROM People_Addresses WHERE person_id IN (SELECT student_id FROM Students));
```
-------------------------95 sample_num
```sql
SELECT course_name 
FROM Courses 
ORDER BY course_name ASC;
```
-------------------------96 sample_num
```sql
SELECT course_name 
FROM Courses 
ORDER BY course_name ASC;
```
-------------------------97 sample_num
```sql
SELECT first_name 
FROM People 
ORDER BY first_name ASC;
```
-------------------------98 sample_num
```sql
SELECT first_name 
FROM People 
ORDER BY first_name ASC;
```
-------------------------99 sample_num
```sql
SELECT DISTINCT student_id FROM Student_Course_Registrations 
UNION 
SELECT DISTINCT student_id FROM Student_Course_Attendance;
```
-------------------------100 sample_num
```sql
SELECT DISTINCT student_id 
FROM (SELECT student_id FROM Student_Course_Registrations 
      UNION 
      SELECT student_id FROM Student_Course_Attendance) as temp
```
-------------------------101 sample_num
```sql
SELECT DISTINCT c.course_id 
FROM Courses c
JOIN Student_Course_Registrations scr ON c.course_id = scr.course_id
JOIN Student_Course_Attendance sca ON c.course_id = sca.course_id
WHERE scr.student_id = 121 OR sca.student_id = 121;
```
-------------------------102 sample_num
```sql
SELECT DISTINCT cr.course_id 
FROM Student_Course_Registrations cr
JOIN Student_Course_Attendance ca ON cr.student_id = ca.student_id AND cr.course_id = ca.course_id
WHERE cr.student_id = 121 OR ca.student_id = 121;
```
Note: This query assumes that a student can attend a course only if they have registered for it. If this is not the case, you might need to adjust the logic accordingly. Also, the join condition might not be necessary if the two tables do not share common columns other than student_id and course_id.
-------------------------103 sample_num
```sql
SELECT s.*
FROM Students s
JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id
LEFT JOIN Student_Course_Attendance sca ON s.student_id = sca.student_id AND scr.course_id = sca.course_id
WHERE sca.student_id IS NULL;
```
-------------------------104 sample_num
```sql
SELECT s.student_id, s.student_details
FROM Students s
WHERE EXISTS (
  SELECT 1 
  FROM Student_Course_Registrations scr 
  WHERE s.student_id = scr.student_id
) AND NOT EXISTS (
  SELECT 1 
  FROM Student_Course_Attendance sca 
  WHERE s.student_id = sca.student_id
)
```
-------------------------105 sample_num
```sql
SELECT sc.student_id 
FROM Student_Course_Registrations sc
JOIN Courses c ON sc.course_id = c.course_id
WHERE c.course_name = 'statistics'
ORDER BY sc.registration_date;
```
-------------------------106 sample_num
```sql
SELECT sc.student_id 
FROM Student_Course_Registrations sc
JOIN Courses c ON sc.course_id = c.course_id
WHERE c.course_name = 'statistics'
ORDER BY sc.registration_date;
```
-------------------------107 sample_num
```sql
SELECT sc.student_id 
FROM Student_Course_Attendance sc
JOIN Courses c ON sc.course_id = c.course_id
WHERE c.course_name = 'statistics'
ORDER BY sc.date_of_attendance;
```
-------------------------108 sample_num
```sql
SELECT sc.student_id 
FROM Student_Course_Attendance sc
JOIN Courses c ON sc.course_id = c.course_id
WHERE c.course_name = 'statistics'
ORDER BY sc.date_of_attendance;
```
-------------------------109 sample_num
```sql
SELECT date 
FROM weather 
WHERE max_temperature_f > 85;
```
-------------------------110 sample_num
```sql
SELECT date 
FROM weather 
WHERE max_temperature_f > 85;
```
-------------------------111 sample_num
```sql
SELECT name FROM station WHERE lat < 37.5;
```
-------------------------112 sample_num
```sql
SELECT name FROM station WHERE lat < 37.5;
```
-------------------------113 sample_num
```sql
SELECT city, MAX(lat) 
FROM station 
GROUP BY city;
```
-------------------------114 sample_num
```sql
SELECT city, MAX(lat) 
FROM station 
GROUP BY city;
```
-------------------------115 sample_num
```sql
SELECT start_station_name, end_station_name 
FROM trip 
ORDER BY id 
LIMIT 3;
```
-------------------------116 sample_num
```sql
SELECT start_station_name, end_station_name 
FROM trip 
WHERE id IN (SELECT MIN(id) FROM trip LIMIT 3)
```
```
-------------------------117 sample_num
```sql
SELECT AVG(lat) AS avg_lat, AVG(long) AS avg_long 
FROM station 
WHERE city = 'San Jose';
```
-------------------------118 sample_num
```sql
SELECT AVG(lat) AS avg_latitude, AVG(long) AS avg_longitude 
FROM station 
WHERE city = 'San Jose';
```
-------------------------119 sample_num
```sql
SELECT id FROM trip ORDER BY duration LIMIT 1;
```
-------------------------120 sample_num
```sql
SELECT id 
FROM trip 
ORDER BY duration 
LIMIT 1;
```
-------------------------121 sample_num
```sql
SELECT SUM(duration) AS total_duration, MAX(duration) AS max_duration 
FROM trip 
WHERE bike_id = 636;
```
-------------------------122 sample_num
```sql
SELECT SUM(duration) AS total_duration, MAX(duration) AS max_duration 
FROM trip 
WHERE bike_id = 636;
```
-------------------------123 sample_num
```sql
SELECT zip_code, AVG(mean_temperature_f) as avg_mean_temperature
FROM weather
WHERE MONTH(date) = 8
GROUP BY zip_code;
```
-------------------------124 sample_num
```sql
SELECT zip_code, AVG(mean_temperature_f) AS avg_mean_temp
FROM weather
WHERE date LIKE '8%'
GROUP BY zip_code;
```
-------------------------125 sample_num
```sql
SELECT COUNT(DISTINCT bike_id) FROM trip;
```
-------------------------126 sample_num
```sql
SELECT COUNT(DISTINCT bike_id) FROM trip;
```
-------------------------127 sample_num
```sql
SELECT COUNT(DISTINCT city) FROM station;
```
-------------------------128 sample_num
```sql
SELECT COUNT(DISTINCT city) FROM station;
```
-------------------------129 sample_num
```sql
SELECT COUNT(*) FROM station WHERE city = 'Mountain View';
```
-------------------------130 sample_num
```sql
SELECT COUNT(*) FROM station WHERE city = 'Mountain View';
```
-------------------------131 sample_num
```sql
SELECT DISTINCT s.name 
FROM station s
JOIN status st ON s.id = st.station_id
WHERE st.bikes_available = 7;
```
-------------------------132 sample_num
```sql
SELECT DISTINCT s.name 
FROM station s
JOIN status st ON s.id = st.station_id
WHERE st.bikes_available = 7;
```
-------------------------133 sample_num
```sql
SELECT start_station_name, start_station_id 
FROM trip 
WHERE start_date >= '2022-08-01' AND start_date < '2022-09-01' 
GROUP BY start_station_id 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------134 sample_num
```sql
SELECT start_station_name, start_station_id 
FROM trip 
WHERE start_date BETWEEN '2022-08-01' AND '2022-08-31' 
GROUP BY start_station_id 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
Note: Replace '2022-08-01' and '2022-08-31' with the actual dates of August in the year you are querying.
-------------------------135 sample_num
```sql
SELECT bike_id, COUNT(*) as trip_count 
FROM trip 
WHERE zip_code = 94002 
GROUP BY bike_id 
ORDER BY trip_count DESC 
LIMIT 1;
```
-------------------------136 sample_num
```sql
SELECT bike_id, COUNT(*) as trip_count 
FROM trip 
WHERE zip_code = 94002 
GROUP BY bike_id 
ORDER BY trip_count DESC 
LIMIT 1;
```
-------------------------137 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT date 
  FROM weather 
  WHERE mean_humidity > 50 AND mean_visibility_miles > 8
) AS result;
```
-------------------------138 sample_num
```sql
SELECT COUNT(DISTINCT date) 
FROM weather 
WHERE mean_humidity > 50 AND mean_visibility_miles > 8;
```
-------------------------139 sample_num
```sql
SELECT s.lat, s.long, s.city 
FROM station s
JOIN trip t ON s.id = t.start_station_id 
WHERE t.duration = (SELECT MIN(duration) FROM trip)
```
-------------------------140 sample_num
```sql
SELECT T1.lat, T1.long, T1.city 
FROM station AS T1 
JOIN trip AS T2 
ON T1.id = T2.start_station_id 
ORDER BY T2.duration 
LIMIT 1;
```
-------------------------141 sample_num
```sql
SELECT s.id 
FROM station s 
JOIN status st ON s.id = st.station_id 
WHERE s.city = 'San Francisco' 
GROUP BY s.id 
HAVING AVG(st.bikes_available) > 10;
```
-------------------------142 sample_num
```sql
SELECT s.id 
FROM station s 
JOIN status st ON s.id = st.station_id 
WHERE s.city = 'San Francisco' 
GROUP BY s.id 
HAVING AVG(st.bikes_available) > 10;
```
-------------------------143 sample_num
```sql
SELECT s.name, s.id 
FROM station s
WHERE s.id IN (
    SELECT st.station_id
    FROM status st
    GROUP BY st.station_id
    HAVING AVG(st.bikes_available) > 14
)
OR MONTH(s.installation_date) = 12;
```
-------------------------144 sample_num
```sql
SELECT s.name, s.id 
FROM station s
JOIN status st ON s.id = st.station_id
WHERE (s.installation_date LIKE '12/%' OR 
       s.id IN (
         SELECT station_id 
         FROM status
         GROUP BY station_id
         HAVING AVG(bikes_available) > 14
       ))
```
```
-------------------------145 sample_num
```sql
SELECT cloud_cover, COUNT(*) as frequency 
FROM weather 
WHERE zip_code = 94107 
GROUP BY cloud_cover 
ORDER BY frequency DESC 
LIMIT 3;
```
-------------------------146 sample_num
```sql
SELECT cloud_cover, COUNT(*) as frequency 
FROM weather 
WHERE zip_code = 94107 
GROUP BY cloud_cover 
ORDER BY frequency DESC 
LIMIT 3;
```
-------------------------147 sample_num
```sql
SELECT zip_code 
FROM weather 
GROUP BY zip_code 
ORDER BY AVG(mean_sea_level_pressure_inches) ASC 
LIMIT 1;
```
-------------------------148 sample_num
```sql
SELECT zip_code 
FROM weather 
GROUP BY zip_code 
ORDER BY AVG(mean_sea_level_pressure_inches) 
LIMIT 1;
```
-------------------------149 sample_num
```sql
SELECT AVG(status.bikes_available) 
FROM status 
JOIN station ON status.station_id = station.id 
WHERE station.city <> 'Palo Alto';
```
-------------------------150 sample_num
```sql
SELECT AVG(bikes_available) 
FROM status 
WHERE station_id NOT IN (SELECT id FROM station WHERE city = 'Palo Alto');
```
-------------------------151 sample_num
```sql
SELECT AVG(T1.long) 
FROM station AS T1 
WHERE T1.id NOT IN (SELECT T2.station_id FROM status AS T2 WHERE T2.bikes_available > 10)
```
-------------------------152 sample_num
```sql
SELECT AVG(long) 
FROM station 
WHERE id NOT IN (
    SELECT station_id 
    FROM status 
    WHERE bikes_available > 10
)
```
-------------------------153 sample_num
```sql
SELECT date, zip_code 
FROM weather 
WHERE max_temperature_f >= 80;
```
-------------------------154 sample_num
```sql
SELECT w.zip_code, w.date 
FROM weather w
JOIN status s ON DATE(w.date) = DATE(s.time)
WHERE w.max_temperature_f >= 80 AND w.zip_code IN (
    SELECT DISTINCT t.zip_code 
    FROM trip t
    WHERE t.start_station_id IN (
        SELECT st.id 
        FROM station st
        WHERE st.city = (
            SELECT w2.city 
            FROM weather w2 
            WHERE w2.zip_code = w.zip_code 
            LIMIT 1
        )
    )
);
```
-------------------------155 sample_num
```sql
SELECT T1.id 
FROM trip AS T1 
JOIN weather AS T2 
ON DATE(T1.start_date) = T2.date 
AND T1.zip_code = T2.zip_code 
WHERE T2.mean_temperature_f > 60;
```
-------------------------156 sample_num
```sql
SELECT T1.zip_code, T1.id 
FROM (
    SELECT zip_code, AVG(mean_temperature_f) as avg_mean_temp
    FROM trip 
    JOIN weather ON trip.start_date = weather.date AND trip.zip_code = weather.zip_code 
    GROUP BY zip_code
    HAVING avg_mean_temp > 60
) AS T2 
JOIN trip AS T1 ON T1.zip_code = T2.zip_code 
ORDER BY T1.zip_code;
```
Note: This query assumes that the `start_date` in the `trip` table and the `date` in the `weather` table have the same granularity (i.e., they are both dates without time components). If the `start_date` includes time, you may need to extract the date part using a function like `DATE()` or `TRUNC()`.
Also, this query does not filter the trips based on the average mean temperature for each trip; instead, it returns all the trips from zip codes where the average mean temperature is above 60. If you want to filter trips based on their individual mean temperature, the query would be more complex and require a subquery or window functions.
-------------------------157 sample_num
```sql
SELECT zip_code, COUNT(*) as num_times_max_wind_25 
FROM weather 
WHERE max_wind_speed_mph >= 25 
GROUP BY zip_code;
```
-------------------------158 sample_num
```sql
SELECT zip_code, COUNT(*) as count_max_wind_speed_25mph 
FROM weather 
WHERE max_wind_Speed_mph >= 25 
GROUP BY zip_code;
```
-------------------------159 sample_num
```sql
SELECT date, zip_code 
FROM weather 
WHERE min_dew_point_f < (SELECT MIN(min_dew_point_f) FROM weather WHERE zip_code = 94107)
```
-------------------------160 sample_num
```sql
SELECT date, zip_code 
FROM weather 
WHERE min_dew_point_f < (
    SELECT MIN(min_dew_point_f) 
    FROM weather 
    WHERE zip_code = 94107
) 
GROUP BY date, zip_code;
```
-------------------------161 sample_num
```sql
SELECT t.id, s.installation_date 
FROM trip t
JOIN station s ON t.end_station_id = s.id;
```
-------------------------162 sample_num
```sql
SELECT T3.installation_date, T2.end_station_name
FROM trip AS T2
JOIN station AS T3
ON T2.end_station_id = T3.id;
```
-------------------------163 sample_num
```sql
SELECT trip.id 
FROM trip 
JOIN station ON trip.start_station_id = station.id 
WHERE station.dock_count = (SELECT MAX(dock_count) FROM station)
LIMIT 1;
```
-------------------------164 sample_num
```sql
SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T2.id = T1.start_station_id WHERE T2.dock_count = (SELECT MAX(dock_count) FROM station)
```
-------------------------165 sample_num
```sql
SELECT COUNT(*) 
FROM trip 
WHERE end_station_name NOT IN (
    SELECT name 
    FROM station 
    WHERE city = 'San Francisco'
);
```
-------------------------166 sample_num
```sql
SELECT COUNT(*) 
FROM trip 
WHERE end_station_name NOT IN (
    SELECT name 
    FROM station 
    WHERE city = 'San Francisco'
);
```
-------------------------167 sample_num
```sql
SELECT date 
FROM weather 
WHERE zip_code = 94107 AND events NOT LIKE '%Fog%' AND events NOT LIKE '%Rain%'
```
```
-------------------------168 sample_num
```sql
SELECT date 
FROM weather 
WHERE zip_code = 94107 AND events NOT LIKE '%Fog%' AND events NOT LIKE '%Rain%'
```
```
-------------------------169 sample_num
```sql
SELECT s.id 
FROM station s
WHERE s.lat > 37.4 
AND s.id NOT IN (
    SELECT st.station_id 
    FROM status st 
    WHERE st.bikes_available < 7
)
```
-------------------------170 sample_num
```sql
SELECT s.id 
FROM station s
WHERE s.lat > 37.4 
AND s.id NOT IN (
    SELECT st.station_id 
    FROM status st 
    WHERE st.bikes_available < 7
)
```
-------------------------171 sample_num
```sql
SELECT s.name 
FROM station s
JOIN status st ON s.id = st.station_id
WHERE s.city <> 'San Jose'
GROUP BY s.name
HAVING AVG(st.bikes_available) > 10;
```
-------------------------172 sample_num
```sql
SELECT s.name 
FROM station s
JOIN status st ON s.id = st.station_id
WHERE st.bikes_available > 10 AND s.city != 'San Jose'
```
-------------------------173 sample_num
```sql
SELECT name, lat, city 
FROM station 
ORDER BY lat ASC 
LIMIT 1;
```
-------------------------174 sample_num
```sql
SELECT name, lat, city FROM station WHERE lat = (SELECT MIN(lat) FROM station);
```
-------------------------175 sample_num
```sql
SELECT date, mean_temperature_f, mean_humidity 
FROM weather 
ORDER BY max_gust_speed_mph DESC 
LIMIT 3;
```
-------------------------176 sample_num
```sql
SELECT date, mean_temperature_f, mean_humidity 
FROM weather 
ORDER BY max_gust_speed_mph DESC 
LIMIT 3;
```
-------------------------177 sample_num
```sql
SELECT city, COUNT(name) as num_stations 
FROM station 
GROUP BY city 
HAVING COUNT(name) >= 15;
```
-------------------------178 sample_num
```sql
SELECT city, COUNT(*) AS station_count 
FROM station 
GROUP BY city 
HAVING COUNT(*) >= 15;
```
-------------------------179 sample_num
```sql
SELECT start_station_id, start_station_name 
FROM trip 
GROUP BY start_station_id, start_station_name 
HAVING COUNT(*) >= 200;
```
-------------------------180 sample_num
```sql
SELECT start_station_id, start_station_name 
FROM trip 
GROUP BY start_station_id, start_station_name 
HAVING COUNT(*) >= 200;
```
-------------------------181 sample_num
```sql
SELECT zip_code 
FROM weather 
GROUP BY zip_code 
HAVING AVG(mean_visibility_miles) < 10;
```
-------------------------182 sample_num
```sql
SELECT zip_code
FROM (
  SELECT zip_code, AVG(mean_visibility_miles) as avg_visibility
  FROM weather
  GROUP BY zip_code
) subquery
WHERE avg_visibility < 10;
```
-------------------------183 sample_num
```sql
SELECT city, MAX(lat) as max_lat
FROM station
GROUP BY city
ORDER BY max_lat DESC;
```
-------------------------184 sample_num
```sql
SELECT city, MAX(lat) as max_lat
FROM station
GROUP BY city
ORDER BY max_lat DESC;
```
-------------------------185 sample_num
```sql
SELECT date, cloud_cover
FROM weather
ORDER BY cloud_cover DESC
LIMIT 5;
```
-------------------------186 sample_num
```sql
SELECT date, cloud_cover
FROM weather
ORDER BY cloud_cover DESC
LIMIT 5;
```
-------------------------187 sample_num
```sql
SELECT id, duration 
FROM trip 
ORDER BY duration DESC 
LIMIT 3;
```
-------------------------188 sample_num
```sql
SELECT id, duration 
FROM trip 
WHERE duration = (SELECT MAX(duration) FROM trip)
```
```
-------------------------189 sample_num
```sql
SELECT s.long, AVG(t.duration) 
FROM station s 
JOIN trip t ON s.id = t.start_station_id 
GROUP BY s.long;
```
-------------------------190 sample_num
```sql
SELECT 
    s.start_station_id,
    s.name,
    s.long,
    AVG(t.duration) as average_duration
FROM 
    trip t
JOIN 
    station s ON t.start_station_id = s.id
GROUP BY 
    s.start_station_id, s.name, s.long;
```
-------------------------191 sample_num
```sql
SELECT s.name, s.lat, MIN(t.duration) 
FROM station s 
JOIN trip t ON s.id = t.end_station_id 
GROUP BY s.name, s.lat;
```
-------------------------192 sample_num
```sql
SELECT T1.end_station_id, T2.name, T2.lat, MIN(T1.duration)
FROM trip AS T1
JOIN station AS T2 ON T1.end_station_id = T2.id
GROUP BY T1.end_station_id, T2.name, T2.lat
```
-------------------------193 sample_num
```sql
SELECT DISTINCT start_station_name 
FROM trip 
WHERE duration < 100;
```
-------------------------194 sample_num
```sql
SELECT DISTINCT start_station_name 
FROM trip 
WHERE duration < 100;
```
-------------------------195 sample_num
```sql
SELECT DISTINCT(zip_code) 
FROM weather 
WHERE zip_code NOT IN (
    SELECT zip_code 
    FROM weather 
    WHERE max_dew_point_f >= 70
)
```
-------------------------196 sample_num
```sql
SELECT DISTINCT(zip_code) 
FROM weather 
WHERE max_dew_point_f < 70
``` 
However, to ensure that the maximum dew point was always below 70 for the entire date range, you would need to check all records for each zip code. This might be better represented as:
```sql
SELECT zip_code 
FROM weather 
GROUP BY zip_code 
HAVING MAX(max_dew_point_f) < 70
```
-------------------------197 sample_num
```sql
SELECT id 
FROM trip 
WHERE duration >= (
    SELECT AVG(duration) 
    FROM trip 
    WHERE zip_code = 94103
);
```
-------------------------198 sample_num
```sql
SELECT trip.id 
FROM trip 
WHERE trip.duration >= (
    SELECT AVG(trip.duration) 
    FROM trip 
    WHERE trip.zip_code = 94103
) AND trip.zip_code = 94103;
```
-------------------------199 sample_num
```sql
SELECT date 
FROM weather 
WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31;
```
-------------------------200 sample_num
```sql
SELECT date 
FROM weather 
WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31;
```
-------------------------201 sample_num
```sql
SELECT date, ABS(max_temperature_f - min_temperature_f) AS temp_difference 
FROM weather 
GROUP BY date 
ORDER BY temp_difference ASC 
LIMIT 1;
```
-------------------------202 sample_num
```sql
SELECT date, (max_temperature_f - min_temperature_f) AS temp_range
FROM weather
GROUP BY date
ORDER BY temp_range ASC
LIMIT 1;
```
-------------------------203 sample_num
```sql
SELECT DISTINCT s.id, s.name 
FROM station s
JOIN status st ON s.id = st.station_id
WHERE st.bikes_available > 12;
```
-------------------------204 sample_num
```sql
SELECT DISTINCT s.id, s.name 
FROM station s
JOIN status st ON s.id = st.station_id
WHERE st.bikes_available > 12;
```
-------------------------205 sample_num
```sql
SELECT w.zip_code 
FROM weather w 
JOIN trip t ON w.zip_code = t.zip_code 
GROUP BY w.zip_code 
HAVING AVG(w.mean_humidity) < 70 AND COUNT(t.id) >= 100;
```
-------------------------206 sample_num
```sql
SELECT T3.zip_code 
FROM (
    SELECT T2.zip_code, AVG(T1.mean_humidity) AS avg_mean_humidity 
    FROM weather AS T1 
    JOIN trip AS T2 ON T1.zip_code = T2.zip_code 
    GROUP BY T1.zip_code
) AS T3 
JOIN (
    SELECT zip_code, COUNT(*) AS trip_count 
    FROM trip 
    GROUP BY zip_code 
    HAVING COUNT(*) >= 100
) AS T4 ON T3.zip_code = T4.zip_code 
WHERE T3.avg_mean_humidity < 70;
```
-------------------------207 sample_num
```sql
SELECT s.name 
FROM station s
WHERE s.city = 'Palo Alto' 
AND s.id NOT IN (
    SELECT t.end_station_id 
    FROM trip t 
    GROUP BY t.end_station_id 
    HAVING COUNT(t.id) > 100
)
```
-------------------------208 sample_num
```sql
SELECT s.name 
FROM station s 
WHERE s.city = 'Palo Alto' 
AND s.id NOT IN (
    SELECT t.end_station_id 
    FROM trip t
)
```
-------------------------209 sample_num
```sql
SELECT COUNT(*) 
FROM trip 
WHERE start_station_name IN (
    SELECT name 
    FROM station 
    WHERE city = 'Mountain View'
) AND end_station_name IN (
    SELECT name 
    FROM station 
    WHERE city = 'Palo Alto'
);
```
-------------------------210 sample_num
```sql
SELECT COUNT(*) 
FROM trip 
WHERE start_station_name IN (
    SELECT name 
    FROM station 
    WHERE city = 'Mountain View'
) 
AND end_station_name IN (
    SELECT name 
    FROM station 
    WHERE city = 'Palo Alto'
);
```
-------------------------211 sample_num
```sql
SELECT AVG(lat) AS avg_lat, AVG(long) AS avg_long 
FROM station 
WHERE id IN (
    SELECT start_station_id 
    FROM trip
)
```
-------------------------212 sample_num
```sql
SELECT AVG(lat) AS avg_latitude, AVG(long) AS avg_longitude 
FROM station 
WHERE id IN (SELECT start_station_id FROM trip);
```
-------------------------213 sample_num
```sql
SELECT COUNT(*) FROM book;
```
-------------------------214 sample_num
```sql
SELECT Writer FROM book ORDER BY Writer ASC;
```
-------------------------215 sample_num
```sql
SELECT book.Title 
FROM book 
JOIN publication ON book.Book_ID = publication.Book_ID 
ORDER BY book.Issues ASC;
```
-------------------------216 sample_num
```sql
SELECT Title 
FROM book 
WHERE Writer != 'Elaine Lee';
```
-------------------------217 sample_num
```sql
SELECT Title, Issues FROM book;
```
-------------------------218 sample_num
```sql
SELECT Publication_Date 
FROM publication 
ORDER BY Price DESC;
```
-------------------------219 sample_num
```sql
SELECT DISTINCT Publisher 
FROM publication 
WHERE Price > 5000000;
```
-------------------------220 sample_num
```sql
SELECT Publisher FROM publication WHERE Price = (SELECT MAX(Price) FROM publication);
```
-------------------------221 sample_num
```sql
SELECT P.Publication_Date 
FROM publication P
ORDER BY P.Price 
LIMIT 3;
```
-------------------------222 sample_num
```sql
SELECT b.Title, p.Publication_Date 
FROM book AS b 
JOIN publication AS p ON b.Book_ID = p.Book_ID;
```
-------------------------223 sample_num
```sql
SELECT b.Writer
FROM book b
JOIN publication p ON b.Book_ID = p.Book_ID
WHERE p.Price > 4000000;
```
-------------------------224 sample_num
```sql
SELECT b.Title 
FROM book_2.publication p 
JOIN book_2.book b ON p.Book_ID = b.Book_ID 
ORDER BY p.Price DESC;
```
-------------------------225 sample_num
```sql
SELECT Publisher 
FROM publication 
GROUP BY Publisher 
HAVING COUNT(Publication_ID) > 1;
```
-------------------------226 sample_num
```sql
SELECT Publisher, COUNT(Publication_ID) 
FROM publication 
GROUP BY Publisher;
```
-------------------------227 sample_num
```sql
SELECT Publication_Date, COUNT(*) as count 
FROM publication 
GROUP BY Publication_Date 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------228 sample_num
```sql
SELECT Writer 
FROM book 
GROUP BY Writer 
HAVING COUNT(Book_ID) > 1;
```
-------------------------229 sample_num
```sql
SELECT Title 
FROM book 
WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)
```
-------------------------230 sample_num
```sql
SELECT DISTINCT p.Publisher 
FROM publication p 
WHERE p.Price > 10000000 
INTERSECT 
SELECT DISTINCT p.Publisher 
FROM publication p 
WHERE p.Price < 5000000;
```
-------------------------231 sample_num
```sql
SELECT COUNT(DISTINCT Publication_Date) FROM publication;
```
-------------------------232 sample_num
```sql
SELECT COUNT(DISTINCT Publication_Date) FROM publication;
```
-------------------------233 sample_num
```sql
SELECT Price 
FROM publication 
WHERE Publisher IN ('Person', 'Wiley');
```
-------------------------234 sample_num
```sql
SELECT COUNT(*) FROM actor;
```
-------------------------235 sample_num
```sql
SELECT COUNT(*) FROM actor;
```
-------------------------236 sample_num
```sql
SELECT Name 
FROM actor 
ORDER BY Name ASC;
```
-------------------------237 sample_num
```sql
SELECT Name 
FROM actor 
ORDER BY Name ASC;
```
-------------------------238 sample_num
```sql
SELECT Character, Duration FROM actor;
```
-------------------------239 sample_num
```sql
SELECT Actor_ID, Name, Character, Duration 
FROM actor;
```
-------------------------240 sample_num
```sql
SELECT Name 
FROM actor 
WHERE age <> 20;
```
-------------------------241 sample_num
```sql
SELECT Name FROM actor WHERE age <> 20;
```
-------------------------242 sample_num
```sql
SELECT T2.Character FROM actor AS T2 JOIN musical AS T1 ON T2.Musical_ID = T1.Musical_ID ORDER BY T2.age DESC
```
-------------------------243 sample_num
```sql
SELECT Character FROM actor ORDER BY age DESC;
```
-------------------------244 sample_num
```sql
SELECT MAX(Duration) 
FROM actor 
WHERE age = (SELECT MAX(age) FROM actor);
```
-------------------------245 sample_num
```sql
SELECT Duration 
FROM actor 
WHERE age = (SELECT MAX(age) FROM actor);
```
-------------------------246 sample_num
```sql
SELECT T1.Name FROM musical AS T1 WHERE T1.Nominee = "Bob Fosse"
```
-------------------------247 sample_num
```sql
SELECT T1.Name 
FROM musical AS T1 
JOIN actor AS T2 
ON T1.Musical_ID = T2.Musical_ID 
WHERE T1.Nominee = 'Bob Fosse';
```
-------------------------248 sample_num
```sql
SELECT DISTINCT T1.Nominee 
FROM musical AS T1 
WHERE T1.Award != "Tony Award"
```
-------------------------249 sample_num
```sql
SELECT DISTINCT Nominee 
FROM musical 
WHERE Award != 'Tony Award'
```
-------------------------250 sample_num
```sql
SELECT actor.Name, musical.Name 
FROM actor 
JOIN musical 
ON actor.Musical_ID = musical.Musical_ID;
```
-------------------------251 sample_num
```sql
SELECT actor.Name, musical.Name 
FROM actor 
JOIN musical 
ON actor.Musical_ID = musical.Musical_ID;
```
-------------------------252 sample_num
```sql
SELECT actor.Name 
FROM actor 
JOIN musical ON actor.Musical_ID = musical.Musical_ID 
WHERE musical.Name = 'The Phantom of the Opera';
```
-------------------------253 sample_num
```sql
SELECT actor.Name 
FROM actor 
JOIN musical ON actor.Musical_ID = musical.Musical_ID 
WHERE musical.Name = 'The Phantom of the Opera';
```
-------------------------254 sample_num
```sql
SELECT actor.Name 
FROM actor 
JOIN musical 
ON actor.Musical_ID = musical.Musical_ID 
WHERE musical.Result = 'Awarded'
ORDER BY musical.Year DESC;
```
-------------------------255 sample_num
```sql
SELECT actor.Name 
FROM actor 
JOIN musical 
ON actor.Musical_ID = musical.Musical_ID 
WHERE musical.Result = 'Awarded' 
ORDER BY musical.Year DESC;
```
-------------------------256 sample_num
```sql
SELECT T1.Name, COUNT(T2.Actor_ID) 
FROM musical AS T1 
JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID 
GROUP BY T1.Name;
```
-------------------------257 sample_num
```sql
SELECT musical.Musical_ID, Name, COUNT(actor.Actor_ID) as Num_of_Actors
FROM musical
LEFT JOIN actor ON musical.Musical_ID = actor.Musical_ID
GROUP BY musical.Musical_ID, Name;
```
-------------------------258 sample_num
```sql
SELECT T1.Name 
FROM musical AS T1 
JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID 
GROUP BY T1.Musical_ID 
HAVING COUNT(T2.Actor_ID) >= 3
```
-------------------------259 sample_num
```sql
SELECT m.Name
FROM musical m
JOIN actor a ON m.Musical_ID = a.Musical_ID
GROUP BY m.Name
HAVING COUNT(a.Actor_ID) >= 3;
```
-------------------------260 sample_num
```sql
SELECT Nominee, COUNT(Musical_ID) 
FROM musical 
GROUP BY Nominee;
```
-------------------------261 sample_num
```sql
SELECT Nominee, COUNT(Musical_ID) 
FROM musical 
GROUP BY Nominee;
```
-------------------------262 sample_num
```sql
SELECT Nominee, COUNT(*) AS Nomination_Count 
FROM musical 
GROUP BY Nominee 
ORDER BY Nomination_Count DESC 
LIMIT 1;
```
-------------------------263 sample_num
```sql
SELECT Nominee, COUNT(Musical_ID) AS Num_Nominations 
FROM musical 
GROUP BY Nominee 
ORDER BY Num_Nominations DESC 
LIMIT 1;
```
-------------------------264 sample_num
```sql
SELECT Result, COUNT(*) AS frequency 
FROM musical 
GROUP BY Result 
ORDER BY frequency DESC 
LIMIT 1;
```
-------------------------265 sample_num
```sql
SELECT Result 
FROM musical 
GROUP BY Result 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------266 sample_num
```sql
SELECT T1.Nominee 
FROM musical AS T1 
GROUP BY T1.Nominee 
HAVING COUNT(T1.Musical_ID) > 2
```
-------------------------267 sample_num
```sql
SELECT Nominee 
FROM musical 
GROUP BY Nominee 
HAVING COUNT(Nominee) > 2;
```
-------------------------268 sample_num
```sql
SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)
```
-------------------------269 sample_num
```sql
SELECT Name 
FROM musical 
WHERE Musical_ID NOT IN (SELECT DISTINCT Musical_ID FROM actor)
```
-------------------------270 sample_num
```sql
SELECT Nominee 
FROM musical 
WHERE Award = 'Tony Award' 
INTERSECT 
SELECT Nominee 
FROM musical 
WHERE Award = 'Drama Desk Award'
```
-------------------------271 sample_num
```sql
SELECT Nominee 
FROM musical 
WHERE Award = 'Tony Award' 
INTERSECT 
SELECT Nominee 
FROM musical 
WHERE Award = 'Drama Desk Award'
```
-------------------------272 sample_num
```sql
SELECT Nominee 
FROM musical 
WHERE Award = 'Bob Fosse' OR Award = 'Cleavant Derricks';
```
-------------------------273 sample_num
```sql
SELECT Nominee 
FROM musical 
WHERE Award = 'Bob Fosse' OR Award = 'Cleavant Derricks';
``` 

However, if there are no exact award names as 'Bob Fosse' and 'Cleavant Derricks' but they could be part of the 'Award' field, then use this query:

```sql
SELECT Nominee 
FROM musical 
WHERE Award LIKE '%Bob Fosse%' OR Award LIKE '%Cleavant Derricks%';
``` 
```
-------------------------274 sample_num
```sql
SELECT email FROM user_profiles WHERE name = 'Mary';
```
-------------------------275 sample_num
```sql
SELECT partitionid 
FROM user_profiles 
WHERE name = 'Iron Man';
```
-------------------------276 sample_num
```sql
SELECT COUNT(*) FROM user_profiles;
```
-------------------------277 sample_num
```sql
SELECT up.uid, up.name, COUNT(f.f1) as followers_count
FROM user_profiles up
LEFT JOIN follows f ON up.uid = f.f2
GROUP BY up.uid, up.name;
```
-------------------------278 sample_num
```sql
SELECT up.uid, up.name, COUNT(f.f1) as followers_count
FROM user_profiles up
LEFT JOIN follows f ON up.uid = f.f2
GROUP BY up.uid, up.name;
```
-------------------------279 sample_num
```sql
SELECT COUNT(*) FROM tweets;
```
-------------------------280 sample_num
```sql
SELECT COUNT(DISTINCT uid) 
FROM tweets;
```
-------------------------281 sample_num
```sql
SELECT name, email 
FROM user_profiles 
WHERE name LIKE '%Swift%';
```
-------------------------282 sample_num
```sql
SELECT name 
FROM user_profiles 
WHERE email LIKE '%superstar%' OR email LIKE '%edu%';
```
-------------------------283 sample_num
```sql
SELECT text 
FROM tweets 
WHERE text LIKE '%intern%';
```
-------------------------284 sample_num
```sql
SELECT name, email 
FROM user_profiles 
WHERE followers > 1000;
```
-------------------------285 sample_num
```sql
SELECT name 
FROM user_profiles 
WHERE followers > (SELECT followers FROM user_profiles WHERE name = 'Tyler Swift')
```
-------------------------286 sample_num
```sql
SELECT name, email 
FROM user_profiles 
WHERE uid IN (
    SELECT f1 
    FROM follows 
    GROUP BY f1 
    HAVING COUNT(f2) > 1
);
```
-------------------------287 sample_num
```sql
SELECT U.name
FROM user_profiles U
JOIN tweets T ON U.uid = T.uid
GROUP BY T.uid
HAVING COUNT(T.id) > 1;
```
-------------------------288 sample_num
```sql
SELECT f1 
FROM follows 
WHERE f1 IN (SELECT uid FROM user_profiles WHERE name = 'Mary') 
AND f1 IN (SELECT uid FROM user_profiles WHERE name = 'Susan')
GROUP BY f1;
```

Actually, this query won't work as expected since it will return the users who are followed by both Mary and Susan, not separately. The correct query would be:

```sql
SELECT DISTINCT up.uid AS id
FROM user_profiles up
WHERE up.uid IN (
    SELECT f.f1
    FROM follows f
    INNER JOIN user_profiles up ON up.uid = f.f2
    WHERE up.name IN ('Mary', 'Susan')
)
GROUP BY up.uid
HAVING COUNT(DISTINCT up.name) = 2;
```
-------------------------289 sample_num
```sql
SELECT up.uid 
FROM user_profiles up 
JOIN follows f ON up.uid = f.f1 
WHERE up.name = 'Mary' OR up.name = 'Susan'
```

Actually, to find the id of users who are followed by Mary or Susan, you would need to reverse the join condition. Here's the correct query:

```sql
SELECT f.f2 
FROM follows f 
JOIN user_profiles up ON f.f1 = up.uid 
WHERE up.name = 'Mary' OR up.name = 'Susan'
```
-------------------------290 sample_num
```sql
SELECT name 
FROM user_profiles 
WHERE followers = (SELECT MAX(followers) FROM user_profiles);
```
However, this query assumes that the 'followers' column is pre-populated with the number of followers for each user, which would typically be incorrect. In a real-world scenario, you'd need to join the 'follows' table and perform a group by operation to get the correct count.

Here's a more accurate query:

```sql
SELECT up.name, COUNT(f.f1) as follower_count
FROM user_profiles up
LEFT JOIN follows f ON up.uid = f.f2
GROUP BY up.uid
ORDER BY follower_count DESC
LIMIT 1;
```
-------------------------291 sample_num
```sql
SELECT name, email 
FROM user_profiles 
WHERE uid = (
    SELECT uid 
    FROM (
        SELECT followers, uid 
        FROM user_profiles 
        ORDER BY followers 
        LIMIT 1
    ) as least_followed
)
```
-------------------------292 sample_num
```sql
SELECT up.name, COUNT(f.f1) AS followers_count
FROM user_profiles up
LEFT JOIN follows f ON up.uid = f.f2
GROUP BY up.uid, up.name
ORDER BY followers_count DESC;
```
-------------------------293 sample_num
```sql
SELECT name 
FROM user_profiles 
WHERE uid IN (
    SELECT f1 
    FROM follows 
    GROUP BY f1 
    ORDER BY COUNT(f2) DESC 
    LIMIT 5
);
```
-------------------------294 sample_num
```sql
SELECT text 
FROM tweets 
ORDER BY createdate;
```
-------------------------295 sample_num
```sql
SELECT UP.name, COUNT(T.id) as tweet_count
FROM user_profiles UP
LEFT JOIN tweets T ON UP.uid = T.uid
GROUP BY UP.uid, UP.name;
```
-------------------------296 sample_num
```sql
SELECT UP.name, UP.partitionid 
FROM user_profiles UP 
JOIN tweets T ON UP.uid = T.uid 
GROUP BY T.uid 
HAVING COUNT(T.id) < 2;
```
-------------------------297 sample_num
```sql
SELECT UP.name, COUNT(T.id) as tweet_count 
FROM tweets T 
JOIN user_profiles UP ON T.uid = UP.uid 
GROUP BY T.uid 
HAVING COUNT(T.id) > 1;
```
-------------------------298 sample_num
```sql
SELECT AVG(followers) 
FROM user_profiles 
WHERE uid NOT IN (SELECT DISTINCT(uid) FROM tweets)
```
-------------------------299 sample_num
```sql
SELECT AVG(t2.followers)
FROM tweets t1
JOIN user_profiles t2 ON t1.uid = t2.uid
WHERE t1.uid IN (SELECT uid FROM tweets)
```
```
-------------------------300 sample_num
```sql
SELECT MAX(followers), SUM(followers) FROM user_profiles;
```
-------------------------301 sample_num
```sql
SELECT catalog_entry_name FROM Catalog_Contents;
```
-------------------------302 sample_num
```sql
SELECT catalog_entry_name FROM Catalog_Contents;
```
-------------------------303 sample_num
```sql
SELECT attribute_data_type 
FROM Attribute_Definitions 
GROUP BY attribute_data_type 
HAVING COUNT(attribute_id) > 3;
```
-------------------------304 sample_num
```sql
SELECT attribute_data_type 
FROM Attribute_Definitions 
GROUP BY attribute_data_type 
HAVING COUNT(attribute_id) > 3;
```
-------------------------305 sample_num
```sql
SELECT attribute_data_type 
FROM Attribute_Definitions 
WHERE attribute_name = 'Green';
```
-------------------------306 sample_num
```sql
SELECT attribute_data_type 
FROM Attribute_Definitions 
WHERE attribute_name = 'Green';
```
-------------------------307 sample_num
```sql
SELECT catalog_level_name, catalog_level_number 
FROM Catalog_Structure 
WHERE catalog_level_number BETWEEN 5 AND 10;
```
-------------------------308 sample_num
```sql
SELECT catalog_level_name, catalog_level_number 
FROM Catalog_Structure 
WHERE catalog_level_number BETWEEN 5 AND 10;
```
-------------------------309 sample_num
```sql
SELECT DISTINCT catalog_publisher 
FROM Catalogs 
WHERE catalog_publisher LIKE '%Murray%';
```
-------------------------310 sample_num
```sql
SELECT DISTINCT catalog_publisher 
FROM Catalogs 
WHERE catalog_publisher LIKE '%Murray%';
```
-------------------------311 sample_num
```sql
SELECT catalog_publisher, COUNT(catalog_id) as num_of_catalogs
FROM Catalogs
GROUP BY catalog_publisher
ORDER BY num_of_catalogs DESC
LIMIT 1;
```
-------------------------312 sample_num
```sql
SELECT catalog_publisher, COUNT(catalog_id) AS num_catalogs
FROM Catalogs
GROUP BY catalog_publisher
ORDER BY num_catalogs DESC
LIMIT 1;
```
-------------------------313 sample_num
```sql
SELECT T1.catalog_name, T1.date_of_publication 
FROM Catalogs AS T1 
JOIN Catalog_Structure AS T2 
ON T1.catalog_id = T2.catalog_id 
WHERE T2.catalog_level_number > 5;
```
-------------------------314 sample_num
```sql
SELECT c.catalog_name, c.date_of_latest_revision 
FROM Catalogs c
JOIN Catalog_Structure cs ON c.catalog_id = cs.catalog_id
WHERE cs.catalog_level_number > 5;
```
-------------------------315 sample_num
```sql
SELECT cc.catalog_entry_name
FROM Catalog_Contents cc
JOIN Catalog_Contents_Additional_Attributes ccaa
ON cc.catalog_entry_id = ccaa.catalog_entry_id
WHERE ccaa.attribute_id = (
    SELECT attribute_id
    FROM (
        SELECT attribute_id, COUNT(*) AS count
        FROM Catalog_Contents_Additional_Attributes
        GROUP BY attribute_id
        ORDER BY count DESC
        LIMIT 1
    ) as most_common_attribute
)
GROUP BY cc.catalog_entry_name;
```
Note: The subquery will find the attribute_id that appears most frequently in the Catalog_Contents_Additional_Attributes table. The outer query will then join this attribute_id with the Catalog_Contents table to return the catalog_entry_names of entries that possess this attribute. However, it may return multiple results if there are multiple attributes tied for the most common, or if an attribute is tied for most common but not present on every entry. If you want to only return one result, you may need to add additional logic.
-------------------------316 sample_num
```sql
SELECT CC.catalog_entry_name
FROM Catalog_Contents CC
JOIN Catalog_Contents_Additional_Attributes CCAA
ON CC.catalog_entry_id = CCAA.catalog_entry_id
WHERE CCAA.attribute_id IN (
    SELECT attribute_id
    FROM (
        SELECT attribute_id, COUNT(*) AS cnt
        FROM Catalog_Contents_Additional_Attributes
        GROUP BY attribute_id
    ) t
    WHERE cnt = (
        SELECT MAX(cnt)
        FROM (
            SELECT COUNT(*) AS cnt
            FROM Catalog_Contents_Additional_Attributes
            GROUP BY attribute_id
        ) t2
    )
);
```
-------------------------317 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE price_in_dollars = (SELECT MAX(price_in_dollars) FROM Catalog_Contents);
```
-------------------------318 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE price_in_dollars = (SELECT MAX(price_in_dollars) FROM Catalog_Contents);
```
-------------------------319 sample_num
```sql
SELECT cs.catalog_level_name
FROM Catalog_Structure cs
JOIN Catalog_Contents cc ON cs.catalog_level_number = cc.catalog_level_number
ORDER BY cc.price_in_dollars
LIMIT 1;
```
-------------------------320 sample_num
```sql
SELECT cs.catalog_level_name
FROM Catalog_Structure cs
JOIN Catalog_Contents cc ON cs.catalog_level_number = cc.catalog_level_number
WHERE cc.price_in_dollars = (
    SELECT MIN(price_in_dollars)
    FROM Catalog_Contents
)
LIMIT 1;
```
-------------------------321 sample_num
```sql
SELECT AVG(price_in_euros) AS average_price_in_euros, MIN(price_in_euros) AS minimum_price_in_euros 
FROM Catalog_Contents;
```
-------------------------322 sample_num
```sql
SELECT AVG(price_in_euros) AS average_price_in_euros, MIN(price_in_euros) AS minimum_price_in_euros 
FROM Catalog_Contents;
```
-------------------------323 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE height = (SELECT MAX(height) FROM Catalog_Contents);
```
-------------------------324 sample_num
```sql
SELECT CC.catalog_entry_name 
FROM Catalog_Contents CC 
WHERE CC.height = (SELECT MAX(height) FROM Catalog_Contents);
```
-------------------------325 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE capacity = (SELECT MIN(capacity) FROM Catalog_Contents);
```
-------------------------326 sample_num
```sql
SELECT CC.catalog_entry_name
FROM Catalog_Contents CC
WHERE CC.capacity = (
    SELECT MIN(CC2.capacity)
    FROM Catalog_Contents CC2
)
```
```
-------------------------327 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE product_stock_number LIKE '2%';
```
-------------------------328 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE product_stock_number LIKE '2%';
```
-------------------------329 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE catalog_level_number = 8;
```
-------------------------330 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE catalog_level_number = 8;
```
-------------------------331 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE length < 3 OR height > 5;
```
-------------------------332 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE length < 3 OR length > 5;
```
-------------------------333 sample_num
```sql
SELECT Attribute_Definitions.attribute_name, Attribute_Definitions.attribute_id 
FROM Attribute_Definitions 
JOIN Catalog_Contents_Additional_Attributes 
ON Attribute_Definitions.attribute_id = Catalog_Contents_Additional_Attributes.attribute_id 
WHERE Catalog_Contents_Additional_Attributes.attribute_value = 0;
```
-------------------------334 sample_num
```sql
SELECT Attribute_Definitions.attribute_name, Attribute_Definitions.attribute_id 
FROM Attribute_Definitions 
JOIN Catalog_Contents_Additional_Attributes 
ON Attribute_Definitions.attribute_id = Catalog_Contents_Additional_Attributes.attribute_id 
WHERE Catalog_Contents_Additional_Attributes.attribute_value = 0;
```
-------------------------335 sample_num
```sql
SELECT catalog_entry_name, capacity 
FROM Catalog_Contents 
WHERE price_in_dollars > 700;
```
-------------------------336 sample_num
```sql
SELECT catalog_entry_name, capacity 
FROM Catalog_Contents 
WHERE price_in_dollars > 700;
```
-------------------------337 sample_num
```sql
SELECT date_of_latest_revision, COUNT(*) 
FROM Catalogs 
GROUP BY date_of_latest_revision 
HAVING COUNT(*) > 1;
```
-------------------------338 sample_num
```sql
SELECT date_of_latest_revision, COUNT(*) 
FROM Catalogs 
GROUP BY date_of_latest_revision 
HAVING COUNT(*) > 1;
```
-------------------------339 sample_num
```sql
SELECT COUNT(*) FROM Catalog_Contents;
```
-------------------------340 sample_num
```sql
SELECT COUNT(*) FROM Catalog_Contents;
```
-------------------------341 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE next_entry_id > 8;
```
-------------------------342 sample_num
```sql
SELECT catalog_entry_name 
FROM Catalog_Contents 
WHERE next_entry_id > 8;
```
-------------------------343 sample_num
```sql
SELECT COUNT(*) FROM aircraft;
```
-------------------------344 sample_num
```sql
SELECT COUNT(*) FROM aircraft;
```
-------------------------345 sample_num
```sql
SELECT name, distance FROM aircraft;
```
-------------------------346 sample_num
```sql
SELECT name, distance FROM aircraft;
```
-------------------------347 sample_num
```sql
SELECT aid FROM aircraft WHERE distance > 1000;
```
-------------------------348 sample_num
```sql
SELECT aid FROM aircraft WHERE distance > 1000;
```
-------------------------349 sample_num
```sql
SELECT COUNT(*) FROM aircraft WHERE distance BETWEEN 1000 AND 5000;
```
-------------------------350 sample_num
```sql
SELECT COUNT(*) 
FROM aircraft 
WHERE distance BETWEEN 1000 AND 5000;
```
-------------------------351 sample_num
```sql
SELECT name, distance FROM aircraft WHERE aid = 12;
```
-------------------------352 sample_num
```sql
SELECT name, distance FROM aircraft WHERE aid = 12;
```
-------------------------353 sample_num
```sql
SELECT MIN(distance) AS Min_Distance, AVG(distance) AS Average_Distance, MAX(distance) AS Max_Distance 
FROM aircraft;
```
-------------------------354 sample_num
```sql
SELECT MIN(distance) AS Min_Distance, AVG(distance) AS Average_Distance, MAX(distance) AS Max_Distance 
FROM aircraft;
```
-------------------------355 sample_num
```sql
SELECT aid, name FROM aircraft WHERE distance = (SELECT MAX(distance) FROM aircraft);
```
-------------------------356 sample_num
```sql
SELECT aid, name FROM aircraft WHERE distance = (SELECT MAX(distance) FROM aircraft);
```
-------------------------357 sample_num
```sql
SELECT name FROM aircraft ORDER BY distance ASC LIMIT 3;
```
-------------------------358 sample_num
```sql
SELECT name 
FROM aircraft 
ORDER BY distance 
LIMIT 3;
```
-------------------------359 sample_num
```sql
SELECT name FROM aircraft WHERE distance > (SELECT AVG(distance) FROM aircraft);
```
-------------------------360 sample_num
```sql
SELECT name 
FROM aircraft 
WHERE distance > (SELECT AVG(distance) FROM aircraft);
```
-------------------------361 sample_num
```sql
SELECT COUNT(*) FROM employee;
```
-------------------------362 sample_num
```sql
SELECT COUNT(*) FROM employee;
```
-------------------------363 sample_num
```sql
SELECT name, salary 
FROM employee 
ORDER BY salary;
```
-------------------------364 sample_num
```sql
SELECT name, salary 
FROM employee 
ORDER BY salary;
```
-------------------------365 sample_num
```sql
SELECT eid FROM employee WHERE salary >= 100000;
```
-------------------------366 sample_num
```sql
SELECT eid FROM employee WHERE salary >= 100000;
```
-------------------------367 sample_num
```sql
SELECT COUNT(*) FROM employee WHERE salary BETWEEN 100000 AND 200000;
```
-------------------------368 sample_num
```sql
SELECT COUNT(*) FROM employee WHERE salary BETWEEN 100000 AND 200000;
```
-------------------------369 sample_num
```sql
SELECT name, salary FROM employee WHERE eid = 242518965;
```
-------------------------370 sample_num
```sql
SELECT name, salary FROM employee WHERE eid = 242518965;
```
-------------------------371 sample_num
```sql
SELECT AVG(salary) AS average_salary, MAX(salary) AS max_salary FROM employee;
```
-------------------------372 sample_num
```sql
SELECT AVG(salary) AS average_salary, MAX(salary) AS max_salary FROM employee;
```
-------------------------373 sample_num
```sql
SELECT eid, name FROM employee WHERE salary = (SELECT MAX(salary) FROM employee);
```
-------------------------374 sample_num
```sql
SELECT eid, name FROM employee WHERE salary = (SELECT MAX(salary) FROM employee);
```
-------------------------375 sample_num
```sql
SELECT name FROM employee ORDER BY salary ASC LIMIT 3;
```
-------------------------376 sample_num
```sql
SELECT name 
FROM employee 
ORDER BY salary 
LIMIT 3;
```
-------------------------377 sample_num
```sql
SELECT name FROM employee WHERE salary > (SELECT AVG(salary) FROM employee);
```
-------------------------378 sample_num
```sql
SELECT name FROM employee WHERE salary > (SELECT AVG(salary) FROM employee)
```
-------------------------379 sample_num
```sql
SELECT eid, salary FROM employee WHERE name = 'Mark Young';
```
-------------------------380 sample_num
```sql
SELECT eid, salary FROM employee WHERE name = 'Mark Young';
```
-------------------------381 sample_num
```sql
SELECT COUNT(*) FROM flight_1.flight;
```
-------------------------382 sample_num
```sql
SELECT COUNT(*) FROM flight
```
-------------------------383 sample_num
```sql
SELECT flno, origin, destination 
FROM flight 
ORDER BY origin ASC;
```
-------------------------384 sample_num
```sql
SELECT flno, origin, destination 
FROM flight 
ORDER BY origin ASC;
```
-------------------------385 sample_num
```sql
SELECT flno FROM flight WHERE origin = 'Los Angeles';
```
-------------------------386 sample_num
```sql
SELECT COUNT(*) FROM flight WHERE origin = 'Los Angeles'
```
-------------------------387 sample_num
```sql
SELECT origin FROM flight WHERE destination = 'Honolulu';
```
-------------------------388 sample_num
```sql
SELECT origin FROM flight WHERE destination = 'Honolulu';
```
-------------------------389 sample_num
```sql
SELECT departure_date, arrival_date 
FROM flight 
WHERE origin = 'Los Angeles' AND destination = 'Honolulu';
```
-------------------------390 sample_num
```sql
SELECT departure_date, arrival_date 
FROM flight 
WHERE origin = 'LA' AND destination = 'Honolulu';
```
-------------------------391 sample_num
```sql
SELECT flno FROM flight WHERE distance > 2000;
```
-------------------------392 sample_num
```sql
SELECT COUNT(*) FROM flight WHERE distance > 2000;
```
-------------------------393 sample_num
```sql
SELECT AVG(price) 
FROM flight 
WHERE origin = 'Los Angeles' AND destination = 'Honolulu';
```
-------------------------394 sample_num
```sql
SELECT AVG(price) 
FROM flight 
WHERE origin = 'LA' AND destination = 'Honolulu';
```
-------------------------395 sample_num
```sql
SELECT origin, destination 
FROM flight 
WHERE price > 300;
```
-------------------------396 sample_num
```sql
SELECT origin, destination FROM flight WHERE price > 300;
```
-------------------------397 sample_num
```sql
SELECT flno, distance FROM flight WHERE price = (SELECT MAX(price) FROM flight);
```
-------------------------398 sample_num
```sql
SELECT flno, distance FROM flight WHERE price = (SELECT MAX(price) FROM flight);
```
-------------------------399 sample_num
```sql
SELECT flno 
FROM flight 
ORDER BY distance 
LIMIT 3;
```
-------------------------400 sample_num
```sql
SELECT flno, MIN(distance) 
FROM flight 
GROUP BY flno
ORDER BY distance ASC 
LIMIT 1;
```
However, this query will not give you the "numbers of the shortest flights" if there are multiple flights with the same shortest distance, it will only give you one. If you want all flights that have the shortest distance, you can use a subquery:

```sql
SELECT flno, distance 
FROM flight 
WHERE distance = (SELECT MIN(distance) FROM flight);
```
-------------------------401 sample_num
```sql
SELECT AVG(distance) AS avg_distance, AVG(price) AS avg_price 
FROM flight 
WHERE origin = 'Los Angeles';
```
-------------------------402 sample_num
```sql
SELECT AVG(distance), AVG(price) 
FROM flight 
WHERE origin = 'LA';
```
-------------------------403 sample_num
```sql
SELECT origin, COUNT(*) AS num_flights 
FROM flight 
GROUP BY origin;
```
-------------------------404 sample_num
```sql
SELECT origin, COUNT(*) AS num_flights 
FROM flight 
GROUP BY origin;
```
-------------------------405 sample_num
```sql
SELECT destination, COUNT(*) 
FROM flight 
GROUP BY destination;
```
-------------------------406 sample_num
```sql
SELECT destination, COUNT(*) AS num_flights 
FROM flight 
GROUP BY destination;
```
-------------------------407 sample_num
```sql
SELECT origin, COUNT(*) AS num_flights 
FROM flight 
GROUP BY origin 
ORDER BY num_flights DESC 
LIMIT 1;
```
-------------------------408 sample_num
```sql
SELECT origin, COUNT(*) as num_flights 
FROM flight 
GROUP BY origin 
ORDER BY num_flights DESC 
LIMIT 1;
```
-------------------------409 sample_num
```sql
SELECT destination 
FROM flight 
GROUP BY destination 
ORDER BY COUNT(*) 
LIMIT 1;
```
-------------------------410 sample_num
```sql
SELECT destination 
FROM flight 
GROUP BY destination 
ORDER BY COUNT(*) 
LIMIT 1;
```
-------------------------411 sample_num
```sql
SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99;
```
-------------------------412 sample_num
```sql
SELECT T2.name FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99;
```
-------------------------413 sample_num
```sql
SELECT flno FROM flight WHERE aid IN (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300');
```
-------------------------414 sample_num
```sql
SELECT flno 
FROM flight 
WHERE aid IN (SELECT aid FROM aircraft WHERE name = 'Airbus A340-300');
```
-------------------------415 sample_num
```sql
SELECT aircraft.name, COUNT(flight.flno) AS NumOfFlights
FROM aircraft
JOIN flight ON aircraft.aid = flight.aid
GROUP BY aircraft.name;
```
-------------------------416 sample_num
```sql
SELECT a.name, COUNT(f.flno) AS Num_of_Flights
FROM aircraft a LEFT JOIN flight f ON a.aid = f.aid
GROUP BY a.name;
```
-------------------------417 sample_num
```sql
SELECT T2.name 
FROM flight AS T1 
JOIN aircraft AS T2 
ON T1.aid = T2.aid 
GROUP BY T1.aid 
HAVING COUNT(*) >= 2;
```
-------------------------418 sample_num
```sql
SELECT T2.name 
FROM flight AS T1 
JOIN aircraft AS T2 ON T1.aid = T2.aid 
GROUP BY T1.aid 
HAVING COUNT(*) >= 2;
```
-------------------------419 sample_num
```sql
SELECT COUNT(*) FROM certificate
```
-------------------------420 sample_num
```sql
SELECT COUNT(DISTINCT eid) FROM certificate;
```
-------------------------421 sample_num
```sql
SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)
```
-------------------------422 sample_num
```sql
SELECT eid FROM employee WHERE eid NOT IN (SELECT eid FROM certificate)
```
-------------------------423 sample_num
```sql
SELECT T2.name FROM certificate AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid JOIN employee AS T3 ON T1.eid = T3.eid WHERE T3.name = 'John Williams'
```
-------------------------424 sample_num
```sql
SELECT T2.name FROM certificate AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid JOIN employee AS T3 ON T1.eid = T3.eid WHERE T3.name = 'John Williams'
```
-------------------------425 sample_num
```sql
SELECT E.name 
FROM employee E, certificate C, aircraft A 
WHERE C.eid = E.eid AND C.aid = A.aid AND A.name = 'Boeing 737-800';
```
-------------------------426 sample_num
```sql
SELECT E.name
FROM employee E, certificate C, aircraft A
WHERE C.eid = E.eid AND C.aid = A.aid AND A.name = 'Boeing 737-800'
```
-------------------------427 sample_num
```sql
SELECT T1.name 
FROM employee AS T1 
JOIN certificate AS T2 ON T1.eid = T2.eid 
JOIN aircraft AS T3 ON T3.aid = T2.aid 
WHERE T3.name IN ('Boeing 737-800', 'Airbus A340-300') 
GROUP BY T1.eid 
HAVING COUNT(DISTINCT T3.name) = 2;
```
-------------------------428 sample_num
```sql
SELECT T1.name 
FROM employee AS T1 
JOIN certificate AS T2 ON T1.eid = T2.eid 
JOIN aircraft AS T3 ON T3.aid = T2.aid 
WHERE T3.name IN ('Boeing 737-800', 'Airbus A340-300') 
GROUP BY T1.eid 
HAVING COUNT(DISTINCT T3.name) = 2;
```
-------------------------429 sample_num
```sql
SELECT e.name
FROM employee e
WHERE NOT EXISTS (
    SELECT *
    FROM certificate c
    JOIN aircraft a ON c.aid = a.aid
    WHERE c.eid = e.eid AND a.name = 'Boeing 737-800'
);
```
-------------------------430 sample_num
```sql
SELECT e.name 
FROM employee e
LEFT JOIN certificate c ON e.eid = c.eid
LEFT JOIN aircraft a ON c.aid = a.aid AND a.name = 'Boeing 737-800'
WHERE a.name IS NULL;
```
-------------------------431 sample_num
```sql
SELECT T2.name FROM certificate AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY COUNT(T1.eid) ASC LIMIT 1
```
-------------------------432 sample_num
```sql
SELECT T2.name FROM certificate AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY COUNT(*) LIMIT 1
```
-------------------------433 sample_num
```sql
SELECT T2.name, T2.distance 
FROM certificate AS T1 
JOIN aircraft AS T2 
ON T1.aid = T2.aid 
WHERE T2.distance > 5000 
GROUP BY T1.aid 
HAVING COUNT(T1.eid) >= 5;
```
-------------------------434 sample_num
```sql
SELECT a.name, a.distance 
FROM aircraft a 
JOIN certificate c ON a.aid = c.aid 
GROUP BY a.aid 
HAVING COUNT(c.eid) >= 5 AND a.distance > 5000;
```
-------------------------435 sample_num
```sql
SELECT E.name, E.salary 
FROM employee E
JOIN certificate C ON E.eid = C.eid
GROUP BY E.eid, E.name, E.salary
ORDER BY COUNT(C.aid) DESC
LIMIT 1;
```
-------------------------436 sample_num
```sql
SELECT E.name, E.salary
FROM employee E
JOIN (
    SELECT eid, COUNT(*) AS cnt
    FROM certificate
    GROUP BY eid
    ORDER BY cnt DESC
    LIMIT 1
) C ON E.eid = C.eid;
```
-------------------------437 sample_num
```sql
SELECT e.name, e.salary 
FROM employee e 
JOIN certificate c ON e.eid = c.eid 
JOIN aircraft a ON c.aid = a.aid 
WHERE a.distance > 5000 
GROUP BY e.eid 
ORDER BY COUNT(certificate.*) DESC 
LIMIT 1;
``` 
However, there's a mistake in the above SQL statement since we cannot aggregate on a join table without a GROUP BY clause on that table. The correct SQL query would be:
```sql
SELECT e.name, e.salary 
FROM employee e 
JOIN certificate c ON e.eid = c.eid 
JOIN aircraft a ON c.aid = a.aid 
WHERE a.distance > 5000 
GROUP BY e.eid, e.name, e.salary 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
This will return the name and salary of the employee who has the most certificates on aircrafts with a distance greater than 5000.
-------------------------438 sample_num
```sql
SELECT e.name, e.salary 
FROM employee e
JOIN certificate c ON e.eid = c.eid
JOIN aircraft a ON c.aid = a.aid
WHERE a.distance > 5000
GROUP BY e.eid
ORDER BY COUNT(certificate.*) DESC
LIMIT 1;
```
-------------------------439 sample_num
```sql
SELECT COUNT(DISTINCT Allergy) FROM Allergy_Type;
```
-------------------------440 sample_num
```sql
SELECT COUNT(*) FROM Has_Allergy;
```
-------------------------441 sample_num
```sql
SELECT COUNT(DISTINCT AllergyType) FROM allergy_1.Allergy_Type;
```
-------------------------442 sample_num
```sql
SELECT COUNT(DISTINCT Allergy) FROM Allergy_Type;
```
-------------------------443 sample_num
```sql
SELECT DISTINCT AllergyType FROM Allergy_Type;
```
-------------------------444 sample_num
```sql
SELECT DISTINCT AllergyType FROM Allergy_Type;
```
-------------------------445 sample_num
```sql
SELECT Allergy, AllergyType FROM Allergy_Type;
```
-------------------------446 sample_num
```sql
SELECT Allergy, AllergyType FROM Allergy_Type;
```
-------------------------447 sample_num
```sql
SELECT AT.Allergy 
FROM Allergy_Type AT 
WHERE AT.AllergyType = 'food';
```
-------------------------448 sample_num
```sql
SELECT DISTINCT Allergy 
FROM Allergy_Type 
WHERE AllergyType = 'food';
```
-------------------------449 sample_num
```sql
SELECT AT.AllergyType 
FROM Allergy_Type AT 
JOIN Has_Allergy HA ON AT.Allergy = HA.Allergy 
WHERE HA.Allergy = 'Cat';
```
-------------------------450 sample_num
```sql
SELECT AT.AllergyType 
FROM Allergy_Type AT 
WHERE AT.Allergy = 'cat';
```
-------------------------451 sample_num
```sql
SELECT COUNT(*) 
FROM Allergy_Type 
WHERE AllergyType = 'animal';
```
-------------------------452 sample_num
```sql
SELECT COUNT(*) 
FROM Allergy_Type 
WHERE AllergyType = 'Animal';
```
-------------------------453 sample_num
```sql
SELECT AllergyType, COUNT(*) AS NumberOfAllergies
FROM Allergy_Type
JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy
GROUP BY AllergyType;
```
-------------------------454 sample_num
```sql
SELECT AllergyType, COUNT(*) AS NumberOfAllergies
FROM Allergy_Type
JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy
GROUP BY AllergyType;
```
-------------------------455 sample_num
```sql
SELECT AllergyType, COUNT(*) AS Count 
FROM Allergy_Type 
GROUP BY AllergyType 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------456 sample_num
```sql
SELECT AllergyType, COUNT(*) AS Count 
FROM Allergy_Type 
JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy 
GROUP BY AllergyType 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------457 sample_num
```sql
SELECT AT.AllergyType, COUNT(HA.Allergy) AS AllergyCount
FROM Allergy_Type AT
LEFT JOIN Has_Allergy HA ON AT.Allergy = HA.Allergy
GROUP BY AT.AllergyType
ORDER BY AllergyCount ASC
LIMIT 1;
```
-------------------------458 sample_num
```sql
SELECT AT.AllergyType
FROM Allergy_Type AT
GROUP BY AT.AllergyType
ORDER BY COUNT(AT.Allergy) ASC
LIMIT 1;
```
-------------------------459 sample_num
```sql
SELECT COUNT(*) FROM Student;
```
-------------------------460 sample_num
```sql
SELECT COUNT(*) FROM Student;
```
-------------------------461 sample_num
```sql
SELECT Fname, Lname 
FROM Student;
```
-------------------------462 sample_num
```sql
SELECT Fname, LName FROM Student;
```
-------------------------463 sample_num
```sql
SELECT COUNT(DISTINCT Advisor) FROM Student;
```
-------------------------464 sample_num
```sql
SELECT COUNT(DISTINCT Advisor) FROM Student;
```
-------------------------465 sample_num
```sql
SELECT DISTINCT Major FROM Student;
```
-------------------------466 sample_num
```sql
SELECT DISTINCT Major FROM Student;
```
-------------------------467 sample_num
```sql
SELECT DISTINCT city_code FROM Student;
```
-------------------------468 sample_num
```sql
SELECT DISTINCT city_code FROM Student;
```
-------------------------469 sample_num
```sql
SELECT Fname, Lname, Age 
FROM Student 
WHERE Sex = 'F';
```
-------------------------470 sample_num
```sql
SELECT Fname, LName, Age 
FROM Student 
WHERE Sex = 'F';
```
-------------------------471 sample_num
```sql
SELECT StuID FROM Student WHERE Sex = 'M';
```
-------------------------472 sample_num
```sql
SELECT StuID FROM Student WHERE Sex = 'M';
```
-------------------------473 sample_num
```sql
SELECT COUNT(*) FROM Student WHERE Age = 18;
```
-------------------------474 sample_num
```sql
SELECT COUNT(*) FROM Student WHERE Age = 18;
```
-------------------------475 sample_num
```sql
SELECT StuID FROM Student WHERE Age > 20;
```
-------------------------476 sample_num
```sql
SELECT StuID FROM Student WHERE Age > 20;
```
-------------------------477 sample_num
```sql
SELECT city_code FROM Student WHERE LName = 'Kim'
```
-------------------------478 sample_num
```sql
SELECT city_code FROM Student WHERE LName = 'Kim';
```
-------------------------479 sample_num
```sql
SELECT Advisor FROM Student WHERE StuID = 1004;
```
-------------------------480 sample_num
```sql
SELECT Advisor FROM Student WHERE StuID = 1004;
```
-------------------------481 sample_num
```sql
SELECT COUNT(*) 
FROM Student 
WHERE city_code IN ('HKG', 'CHI');
```
-------------------------482 sample_num
```sql
SELECT COUNT(*) 
FROM Student 
WHERE city_code IN ('HKG', 'CHI');
```
-------------------------483 sample_num
```sql
SELECT MIN(Age) AS MinAge, AVG(Age) AS AvgAge, MAX(Age) AS MaxAge 
FROM Student;
```
-------------------------484 sample_num
```sql
SELECT MIN(Age) as Min_Age, AVG(Age) as Mean_Age, MAX(Age) as Max_Age 
FROM Student;
```
-------------------------485 sample_num
```sql
SELECT LName 
FROM Student 
WHERE Age = (SELECT MIN(Age) FROM Student);
```
-------------------------486 sample_num
```sql
SELECT LName 
FROM Student 
WHERE Age = (SELECT MIN(Age) FROM Student);
```
-------------------------487 sample_num
```sql
SELECT StuID FROM Student WHERE Age=(SELECT MAX(Age) FROM Student);
```
-------------------------488 sample_num
```sql
SELECT StuID FROM Student WHERE Age = (SELECT MAX(Age) FROM Student);
```
-------------------------489 sample_num
```sql
SELECT Major, COUNT(*) AS Num_Students 
FROM Student 
GROUP BY Major;
```
-------------------------490 sample_num
```sql
SELECT Major, COUNT(*) 
FROM Student 
GROUP BY Major;
```
-------------------------491 sample_num
```sql
SELECT Major, COUNT(*) AS NumStudents
FROM Student
GROUP BY Major
ORDER BY NumStudents DESC
LIMIT 1;
```
-------------------------492 sample_num
```sql
SELECT Major 
FROM Student 
GROUP BY Major 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------493 sample_num
```sql
SELECT Age, COUNT(*) 
FROM Student 
GROUP BY Age;
```
-------------------------494 sample_num
```sql
SELECT Age, COUNT(*) AS Num_Students 
FROM Student 
GROUP BY Age;
```
-------------------------495 sample_num
```sql
SELECT Sex, AVG(Age) 
FROM Student 
GROUP BY Sex;
```
-------------------------496 sample_num
```sql
SELECT Sex, AVG(Age) 
FROM Student 
GROUP BY Sex;
```
-------------------------497 sample_num
```sql
SELECT city_code, COUNT(*) 
FROM Student 
GROUP BY city_code;
```
-------------------------498 sample_num
```sql
SELECT city_code, COUNT(*) 
FROM Student 
GROUP BY city_code;
```
-------------------------499 sample_num
```sql
SELECT Advisor, COUNT(*) AS NumberOfStudents
FROM Student
GROUP BY Advisor;
```
-------------------------500 sample_num
```sql
SELECT Advisor, COUNT(StuID) AS Num_Students
FROM Student
GROUP BY Advisor;
```
-------------------------501 sample_num
```sql
SELECT Advisor, COUNT(*) AS NumStudents 
FROM Student 
GROUP BY Advisor 
ORDER BY NumStudents DESC 
LIMIT 1;
```
-------------------------502 sample_num
```sql
SELECT Advisor, COUNT(StuID) AS NumStudents 
FROM Student 
GROUP BY Advisor 
ORDER BY NumStudents DESC 
LIMIT 1;
```
-------------------------503 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Allergy 
JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy 
WHERE Allergy_Type.Allergy = 'cat';
```
-------------------------504 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Allergy 
JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy 
WHERE Allergy_Type.Allergy = 'cat';
```
-------------------------505 sample_num
```sql
SELECT StuID 
FROM Has_Allergy 
GROUP BY StuID 
HAVING COUNT(Allergy) >= 2;
```
-------------------------506 sample_num
```sql
SELECT StuID 
FROM Has_Allergy 
GROUP BY StuID 
HAVING COUNT(Allergy) > 1;
```
-------------------------507 sample_num
```sql
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)
```
-------------------------508 sample_num
```sql
SELECT StuID, LName, Fname FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Allergy)
```
-------------------------509 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Allergy ha 
JOIN Student s ON ha.StuID = s.StuID 
WHERE s.Sex = 'F' AND ha.Allergy IN ('milk', 'egg');
```
-------------------------510 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Allergy ha 
JOIN Student s ON ha.StuID = s.StuID 
JOIN Allergy_Type at ON ha.Allergy = at.Allergy 
WHERE s.Sex = 'F' AND (at.Allergy = 'milk' OR at.Allergy = 'eggs');
```
-------------------------511 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Allergy ha
JOIN Allergy_Type at ON ha.Allergy = at.Allergy
WHERE at.AllergyType = 'Food'
```
```
-------------------------512 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Allergy ha
JOIN Allergy_Type at ON ha.Allergy = at.Allergy
WHERE at.AllergyType = 'Food'
```
```
-------------------------513 sample_num
```sql
SELECT A.Allergy 
FROM Allergy_Type A 
JOIN Has_Allergy H ON A.Allergy = H.Allergy 
GROUP BY A.Allergy 
ORDER BY COUNT(H.StuID) DESC 
LIMIT 1;
```
-------------------------514 sample_num
```sql
SELECT Allergy, COUNT(*) AS Count 
FROM Has_Allergy 
GROUP BY Allergy 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------515 sample_num
```sql
SELECT A.Allergy, COUNT(H.StuID) AS NumOfStudents
FROM Allergy_Type A
JOIN Has_Allergy H ON A.Allergy = H.Allergy
GROUP BY A.Allergy;
```
-------------------------516 sample_num
```sql
SELECT Allergy, COUNT(*) 
FROM Has_Allergy 
GROUP BY Allergy;
```
-------------------------517 sample_num
```sql
SELECT AT.AllergyType, COUNT(HA.StuID) AS NumOfStudents
FROM Allergy_Type AT
JOIN Has_Allergy HA ON AT.Allergy = HA.Allergy
GROUP BY AT.AllergyType;
```
-------------------------518 sample_num
```sql
SELECT AT.AllergyType, COUNT(HA.StuID) AS NumOfStudents
FROM Allergy_Type AT
JOIN Has_Allergy HA ON AT.Allergy = HA.Allergy
GROUP BY AT.AllergyType;
```
-------------------------519 sample_num
```sql
SELECT S.LName, S.Age 
FROM Student S 
JOIN Has_Allergy H1 ON S.StuID = H1.StuID 
JOIN Has_Allergy H2 ON S.StuID = H2.StuID 
WHERE H1.Allergy = 'milk' AND H2.Allergy = 'cat';
```
-------------------------520 sample_num
```sql
SELECT S.LName, S.Age 
FROM Student S 
JOIN Has_Allergy H ON S.StuID = H.StuID 
JOIN Allergy_Type A ON H.Allergy = A.Allergy 
WHERE A.AllergyType IN ('Milk', 'Cat') 
GROUP BY S.StuID 
HAVING COUNT(DISTINCT A.AllergyType) = 2;
```
-------------------------521 sample_num
```sql
SELECT AT.Allergy, AT.AllergyType 
FROM Allergy_Type AS AT 
JOIN Has_Allergy AS HA ON AT.Allergy = HA.Allergy 
JOIN Student AS S ON HA.StuID = S.StuID 
WHERE S.Fname = 'Lisa' 
ORDER BY AT.Allergy;
```
-------------------------522 sample_num
```sql
SELECT A.Allergy, AT.AllergyType 
FROM Has_Allergy AS A 
JOIN Allergy_Type AS AT ON A.Allergy = AT.Allergy 
JOIN Student AS S ON A.StuID = S.StuID 
WHERE S.Fname = 'Lisa' AND S.Sex = 'F' 
ORDER BY A.Allergy;
```
-------------------------523 sample_num
```sql
SELECT S.Fname, S.Sex 
FROM Student S 
JOIN Has_Allergy HA ON S.StuID = HA.StuID 
JOIN Allergy_Type AT ON HA.Allergy = AT.Allergy 
WHERE AT.Allergy = 'Milk' 
AND NOT EXISTS (SELECT 1 FROM Has_Allergy HAC WHERE HAC.StuID = S.StuID AND HAC.Allergy = 'Cat');
```
-------------------------524 sample_num
```sql
SELECT S.Fname, S.Sex 
FROM Student S 
JOIN Has_Allergy HA ON S.StuID = HA.StuID 
JOIN Allergy_Type AT ON HA.Allergy = AT.Allergy 
WHERE AT.Allergy = 'Milk' AND NOT EXISTS (
    SELECT 1 FROM Has_Allergy HAC 
    JOIN Allergy_Type ATC ON HAC.Allergy = ATC.Allergy 
    WHERE HAC.StuID = S.StuID AND ATC.Allergy = 'Cat'
);
```
-------------------------525 sample_num
```sql
SELECT AVG(Student.Age)
FROM Student
JOIN Has_Allergy ON Student.StuID = Has_Allergy.StuID
JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy
WHERE Allergy_Type.AllergyType IN ('food', 'animal');
```
-------------------------526 sample_num
```sql
SELECT AVG(Age) 
FROM Student 
WHERE StuID IN (
    SELECT Has_Allergy.StuID 
    FROM Has_Allergy 
    JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy 
    WHERE AllergyType IN ('food', 'animal')
);
```
-------------------------527 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S 
WHERE NOT EXISTS (
    SELECT 1 
    FROM Has_Allergy HA 
    JOIN Allergy_Type AT ON HA.Allergy = AT.Allergy 
    WHERE S.StuID = HA.StuID AND AT.AllergyType = 'food'
);
```
-------------------------528 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S
WHERE S.StuID NOT IN (
    SELECT HA.StuID
    FROM Has_Allergy HA
    JOIN Allergy_Type AT ON HA.Allergy = AT.Allergy
    WHERE AT.AllergyType = 'Food'
);
```
-------------------------529 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Allergy ha 
JOIN Allergy_Type at ON ha.Allergy = at.Allergy 
JOIN Student s ON ha.StuID = s.StuID 
WHERE at.AllergyType = 'food' AND s.Sex = 'M';
```
-------------------------530 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Allergy ha 
JOIN Student s ON ha.StuID = s.StuID 
JOIN Allergy_Type at ON ha.Allergy = at.Allergy 
WHERE s.Sex = 'M' AND at.AllergyType = 'Food';
```
-------------------------531 sample_num
```sql
SELECT DISTINCT S.Fname, S.city_code 
FROM Student S 
JOIN Has_Allergy H ON S.StuID = H.StuID 
JOIN Allergy_Type A ON H.Allergy = A.Allergy 
WHERE A.Allergy IN ('Milk', 'Cat');
```
-------------------------532 sample_num
```sql
SELECT DISTINCT S.Fname, S.city_code 
FROM Student S 
JOIN Has_Allergy H ON S.StuID = H.StuID 
JOIN Allergy_Type A ON H.Allergy = A.Allergy 
WHERE A.Allergy IN ('milk', 'cat');
```
-------------------------533 sample_num
```sql
SELECT COUNT(*) 
FROM Student 
WHERE Age > 18 AND StuID NOT IN (
    SELECT Has_Allergy.StuID 
    FROM Has_Allergy 
    JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy 
    WHERE AllergyType IN ('Food', 'Animal')
);
```
-------------------------534 sample_num
```sql
SELECT COUNT(*) 
FROM Student 
WHERE Age > 18 AND StuID NOT IN (
    SELECT Has_Allergy.StuID 
    FROM Has_Allergy
    JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy
    WHERE AllergyType IN ('food', 'animal')
);
```
-------------------------535 sample_num
```sql
SELECT S.Fname, S.Major 
FROM Student S 
WHERE NOT EXISTS (
    SELECT HA.StuID 
    FROM Has_Allergy HA 
    JOIN Allergy_Type AT ON HA.Allergy = AT.Allergy 
    WHERE S.StuID = HA.StuID AND AT.Allergy = 'soy'
);
```
-------------------------536 sample_num
```sql
SELECT S.Fname, S.Major 
FROM Student S 
WHERE NOT EXISTS (
    SELECT HA.StuID 
    FROM Has_Allergy HA 
    JOIN Allergy_Type AT ON HA.Allergy = AT.Allergy 
    WHERE S.StuID = HA.StuID AND AT.AllergyType = 'soy'
);
```
-------------------------537 sample_num
```sql
SELECT billing_country, COUNT(*) as num_invoices
FROM invoices
GROUP BY billing_country
ORDER BY num_invoices DESC
LIMIT 5;
```
-------------------------538 sample_num
```sql
SELECT billing_country, COUNT(*) as invoice_count 
FROM invoices 
GROUP BY billing_country 
ORDER BY invoice_count DESC 
LIMIT 5;
```
-------------------------539 sample_num
```sql
SELECT 
    billing_country,
    SUM(total) as Gross_Invoice_Size
FROM 
    invoices 
GROUP BY 
    billing_country
ORDER BY 
    Gross_Invoice_Size DESC
LIMIT 8;
```
-------------------------540 sample_num
```sql
SELECT 
    billing_country,
    SUM(total) as total_invoice_size
FROM 
    invoices
GROUP BY 
    billing_country
ORDER BY 
    total_invoice_size DESC
LIMIT 8;
```
-------------------------541 sample_num
```sql
SELECT T1.country, AVG(T2.total) AS AvgInvoiceSize 
FROM customers AS T1 
JOIN invoices AS T2 ON T1.id = T2.customer_id 
GROUP BY T1.country 
ORDER BY AvgInvoiceSize DESC 
LIMIT 10;
```
-------------------------542 sample_num
```sql
SELECT billing_country, AVG(total) as avg_invoice_size 
FROM invoices 
GROUP BY billing_country 
ORDER BY avg_invoice_size DESC 
LIMIT 10;
```
-------------------------543 sample_num
```sql
SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id ORDER BY T2.invoice_date DESC LIMIT 5;
```
-------------------------544 sample_num
```sql
SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id ORDER BY T2.invoice_date DESC LIMIT 5;
```
-------------------------545 sample_num
```sql
SELECT c.first_name, c.last_name, COUNT(i.id) as total_orders
FROM customers c 
JOIN invoices i ON c.id = i.customer_id
GROUP BY c.id
ORDER BY total_orders DESC
LIMIT 10;
```
-------------------------546 sample_num
```sql
SELECT c.first_name, c.last_name, COUNT(i.id) as order_count 
FROM customers c 
JOIN invoices i ON c.id = i.customer_id 
GROUP BY c.id 
ORDER BY order_count DESC 
LIMIT 10;
```
-------------------------547 sample_num
```sql
SELECT T1.first_name, T1.last_name, SUM(T2.total) as total_gross_sales
FROM customers AS T1
JOIN invoices AS T2 ON T1.id = T2.customer_id
GROUP BY T1.id
ORDER BY total_gross_sales DESC
LIMIT 10;
```
-------------------------548 sample_num
```sql
SELECT c.first_name, c.last_name, SUM(il.quantity * il.unit_price) as gross_sales
FROM customers c
JOIN invoices i ON c.id = i.customer_id
JOIN invoice_lines il ON i.id = il.invoice_id
GROUP BY c.id
ORDER BY gross_sales DESC
LIMIT 10;
```
-------------------------549 sample_num
```sql
SELECT g.name, COUNT(t.id) as total_tracks
FROM genres g
JOIN tracks t ON g.id = t.genre_id
GROUP BY g.name
ORDER BY total_tracks DESC
LIMIT 5;
```
-------------------------550 sample_num
```sql
SELECT g.name, COUNT(t.id) as track_count
FROM genres g
JOIN tracks t ON g.id = t.genre_id
GROUP BY g.id
ORDER BY track_count DESC
LIMIT 5;
```
-------------------------551 sample_num
```sql
SELECT title FROM albums;
```
-------------------------552 sample_num
```sql
SELECT title FROM albums;
```
-------------------------553 sample_num
```sql
SELECT title FROM albums ORDER BY title ASC;
```
-------------------------554 sample_num
```sql
SELECT title FROM albums ORDER BY title ASC;
```
-------------------------555 sample_num
```sql
SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title ASC;
```
-------------------------556 sample_num
```sql
SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;
```
-------------------------557 sample_num
```sql
SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id ORDER BY T2.total ASC LIMIT 10;
```
-------------------------558 sample_num
```sql
SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id ORDER BY T2.total LIMIT 10;
```
-------------------------559 sample_num
```sql
SELECT SUM(total) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL';
```
-------------------------560 sample_num
```sql
SELECT SUM(total) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL';
```
-------------------------561 sample_num
```sql
SELECT COUNT(*) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL';
```
-------------------------562 sample_num
```sql
SELECT COUNT(*) FROM invoices WHERE billing_city = 'Chicago' AND billing_state = 'IL';
```
-------------------------563 sample_num
```sql
SELECT billing_state, COUNT(*) 
FROM invoices 
WHERE billing_country = 'USA' 
GROUP BY billing_state;
```
-------------------------564 sample_num
```sql
SELECT billing_state, COUNT(*) 
FROM invoices 
WHERE billing_state IS NOT NULL 
GROUP BY billing_state;
```
-------------------------565 sample_num
```sql
SELECT billing_state, COUNT(*) as invoice_count 
FROM invoices 
WHERE billing_country = 'USA' 
GROUP BY billing_state 
ORDER BY invoice_count DESC 
LIMIT 1;
```
-------------------------566 sample_num
```sql
SELECT billing_state, COUNT(*) as total_invoices 
FROM invoices 
WHERE billing_state IS NOT NULL 
GROUP BY billing_state 
ORDER BY total_invoices DESC 
LIMIT 1;
```
-------------------------567 sample_num
```sql
SELECT COUNT(invoice_id), SUM(total) 
FROM invoices 
WHERE billing_state = 'CA';
```
-------------------------568 sample_num
```sql
SELECT COUNT(*), SUM(total) FROM invoices WHERE billing_state = 'CA';
```
-------------------------569 sample_num
```sql
SELECT albums.title 
FROM albums 
JOIN artists ON albums.artist_id = artists.id 
WHERE artists.name = 'Aerosmith';
```
-------------------------570 sample_num
```sql
SELECT albums.title 
FROM albums 
JOIN artists ON albums.artist_id = artists.id 
WHERE artists.name = 'Aerosmith';
```
-------------------------571 sample_num
```sql
SELECT COUNT(*) FROM albums WHERE artist_id = (SELECT id FROM artists WHERE name = 'Billy Cobham');
```
-------------------------572 sample_num
```sql
SELECT COUNT(*) FROM albums WHERE artist_id = (SELECT id FROM artists WHERE name = 'Billy Cobam');
```
-------------------------573 sample_num
```sql
SELECT company FROM customers WHERE first_name = 'Eduardo' AND last_name = 'Martins';
```
-------------------------574 sample_num
```sql
SELECT company FROM customers WHERE first_name = 'Eduardo' AND last_name = 'Martins';
```
-------------------------575 sample_num
```sql
SELECT email, phone FROM customers WHERE first_name = 'Astrid' AND last_name = 'Gruber';
```
-------------------------576 sample_num
```sql
SELECT email, phone FROM customers WHERE first_name = 'Astrid' AND last_name = 'Gruber';
```
-------------------------577 sample_num
```sql
SELECT COUNT(*) FROM customers WHERE city = 'Prague';
```
-------------------------578 sample_num
```sql
SELECT COUNT(*) FROM customers WHERE city = 'Prague';
```
-------------------------579 sample_num
```sql
SELECT COUNT(*) FROM customers WHERE state = 'CA';
```
-------------------------580 sample_num
```sql
SELECT COUNT(*) FROM customers WHERE state = 'California';
```
-------------------------581 sample_num
```sql
SELECT country FROM customers WHERE first_name = 'Roberto' AND last_name = 'Almeida';
```
-------------------------582 sample_num
```sql
SELECT country FROM customers WHERE first_name = 'Roberto' AND last_name = 'Almeida';
```
-------------------------583 sample_num
```sql
SELECT albums.title 
FROM albums 
JOIN artists ON albums.artist_id = artists.id 
WHERE artists.name LIKE '%Led%';
```
-------------------------584 sample_num
```sql
SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name LIKE '%Led%';
```
-------------------------585 sample_num
```sql
SELECT COUNT(*) 
FROM customers 
WHERE support_rep_id = (SELECT id FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson');
```
-------------------------586 sample_num
```sql
SELECT COUNT(*) FROM customers WHERE support_rep_id = (SELECT id FROM employees WHERE first_name = 'Steve' AND last_name = 'Johnson');
```
-------------------------587 sample_num
```sql
SELECT title, phone, hire_date FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards';
```
-------------------------588 sample_num
```sql
SELECT title, phone, hire_date FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards';
```
-------------------------589 sample_num
```sql
SELECT first_name, last_name 
FROM employees 
WHERE reports_to = (
    SELECT id 
    FROM employees 
    WHERE first_name = 'Nancy' AND last_name = 'Edwards'
);
```
-------------------------590 sample_num
```sql
SELECT T1.first_name, T1.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id WHERE T2.first_name = 'Nancy' AND T2.last_name = 'Edwards';
```
-------------------------591 sample_num
```sql
SELECT address FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards';
```
-------------------------592 sample_num
```sql
SELECT address, city, state, country, postal_code 
FROM employees 
WHERE first_name = 'Nancy' AND last_name = 'Edwards';
```
-------------------------593 sample_num
```sql
SELECT E.first_name, E.last_name 
FROM employees E
JOIN customers C ON E.id = C.support_rep_id
GROUP BY E.id
ORDER BY COUNT(C.id) DESC
LIMIT 1;
```
-------------------------594 sample_num
```sql
SELECT E.first_name, E.last_name
FROM employees E
JOIN customers C ON E.id = C.support_rep_id
GROUP BY E.id
ORDER BY COUNT(C.id) DESC
LIMIT 1;
```
-------------------------595 sample_num
```sql
SELECT COUNT(*) FROM employees WHERE country = 'Canada';
```
-------------------------596 sample_num
```sql
SELECT COUNT(*) FROM employees WHERE country = 'Canada';
```
-------------------------597 sample_num
```sql
SELECT phone FROM employees WHERE first_name = 'Nancy' AND last_name = 'Edwards';
```
-------------------------598 sample_num
```sql
SELECT phone FROM customers WHERE first_name = 'Nancy' AND last_name = 'Edwards';
```
-------------------------599 sample_num
```sql
SELECT first_name, last_name FROM employees WHERE hire_date = (SELECT MAX(hire_date) FROM employees);
```
-------------------------600 sample_num
```sql
SELECT first_name, last_name FROM employees WHERE hire_date = (SELECT MAX(hire_date) FROM employees);
```
-------------------------601 sample_num
```sql
SELECT first_name, last_name 
FROM employees 
ORDER BY hire_date 
LIMIT 10;
```
-------------------------602 sample_num
```sql
SELECT first_name, last_name FROM employees ORDER BY hire_date ASC LIMIT 10;
```
-------------------------603 sample_num
```sql
SELECT city, COUNT(*) 
FROM employees 
WHERE title = 'IT Staff' 
GROUP BY city;
```
-------------------------604 sample_num
```sql
SELECT city, COUNT(*) 
FROM employees 
WHERE title = 'IT Staff' 
GROUP BY city;
```
-------------------------605 sample_num
```sql
SELECT E1.first_name, E1.last_name, COUNT(E2.id) AS NumberOfReports 
FROM employees E1 
LEFT JOIN employees E2 ON E1.id = E2.reports_to 
GROUP BY E1.id 
ORDER BY NumberOfReports DESC 
LIMIT 1;
```
-------------------------606 sample_num
```sql
SELECT E1.first_name, E1.last_name, COUNT(E2.id) as NumberOfReports
FROM employees E1
LEFT JOIN employees E2 ON E1.id = E2.reports_to
GROUP BY E1.id;
```
-------------------------607 sample_num
```sql
SELECT COUNT(*) FROM invoices WHERE customer_id = (SELECT id FROM customers WHERE first_name = 'Lucas' AND last_name = 'Mancini');
```
-------------------------608 sample_num
```sql
SELECT COUNT(*) FROM invoices WHERE customer_id = (SELECT id FROM customers WHERE first_name = 'Luca' AND last_name = 'Mancini');
```
-------------------------609 sample_num
```sql
SELECT SUM(i.total) 
FROM invoices i 
JOIN customers c ON i.customer_id = c.id 
WHERE c.first_name = 'Lucas' AND c.last_name = 'Mancini';
```
-------------------------610 sample_num
```sql
SELECT SUM(i.total) 
FROM invoices i
JOIN customers c ON i.customer_id = c.id
WHERE c.first_name = 'Lucas' AND c.last_name = 'Mancini';
```
-------------------------611 sample_num
```sql
SELECT * FROM media_types;
```
-------------------------612 sample_num
```sql
SELECT name FROM media_types;
```
-------------------------613 sample_num
```sql
SELECT DISTINCT name FROM genres;
```
-------------------------614 sample_num
```sql
SELECT DISTINCT name FROM genres;
```
-------------------------615 sample_num
```sql
SELECT name FROM playlists;
```
-------------------------616 sample_num
```sql
SELECT name FROM playlists;
```
-------------------------617 sample_num
```sql
SELECT composer FROM tracks WHERE name = 'Fast As a Shark';
```
-------------------------618 sample_num
```sql
SELECT T1.composer FROM tracks AS T1 JOIN albums AS T2 ON T1.album_id = T2.id WHERE T1.name = 'Fast As a Shark';
```
-------------------------619 sample_num
```sql
SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark';
```
-------------------------620 sample_num
```sql
SELECT milliseconds FROM tracks WHERE name = 'Fast As a Shark';
```
-------------------------621 sample_num
```sql
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id WHERE genres.name = 'Rock';
```
-------------------------622 sample_num
```sql
SELECT T1.name FROM tracks AS T1 JOIN genres AS T2 ON T1.genre_id = T2.id WHERE T2.name = 'Rock';
```
-------------------------623 sample_num
```sql
SELECT albums.title 
FROM albums 
JOIN tracks ON albums.id = tracks.album_id 
WHERE tracks.name = 'Balls to the Wall';
```
-------------------------624 sample_num
```sql
SELECT albums.title 
FROM albums 
JOIN tracks ON albums.id = tracks.album_id 
WHERE tracks.name = 'Ball to the Wall';
```
-------------------------625 sample_num
```sql
SELECT T1.name FROM tracks AS T1 JOIN albums AS T2 ON T1.album_id = T2.id WHERE T2.title = 'Balls to the Wall';
```
-------------------------626 sample_num
```sql
SELECT T1.name FROM tracks AS T1 JOIN albums AS T2 ON T1.album_id = T2.id WHERE T2.title = 'Balls to the Wall';
```
-------------------------627 sample_num
```sql
SELECT A.title 
FROM albums A
WHERE A.id IN (
    SELECT T.album_id 
    FROM tracks T 
    GROUP BY T.album_id 
    HAVING COUNT(T.id) > 10
);
```
-------------------------628 sample_num
```sql
SELECT a.title
FROM albums a
WHERE a.id IN (
    SELECT alb_id
    FROM (
        SELECT album_id as alb_id, COUNT(*) as cnt
        FROM tracks
        GROUP BY album_id
    ) AS t
    WHERE cnt > 10
);
```
-------------------------629 sample_num
```sql
SELECT tracks.name FROM tracks 
JOIN genres ON tracks.genre_id = genres.id 
JOIN media_types ON tracks.media_type_id = media_types.id 
WHERE genres.name = 'Rock' AND media_types.name = 'MPEG audio file';
```
-------------------------630 sample_num
```sql
SELECT T1.name FROM tracks AS T1 JOIN genres AS T2 ON T1.genre_id = T2.id JOIN media_types AS T3 ON T1.media_type_id = T3.id WHERE T2.name = 'Rock' AND T3.name = 'MPEG audio file';
```
-------------------------631 sample_num
```sql
SELECT T1.name FROM tracks AS T1 JOIN genres AS T2 ON T1.genre_id = T2.id JOIN media_types AS T3 ON T1.media_type_id = T3.id WHERE T2.name = 'Rock' OR T3.name = 'MPEG audio file';
```
-------------------------632 sample_num
```sql
SELECT tracks.name FROM tracks 
JOIN genres ON tracks.genre_id = genres.id 
JOIN media_types ON tracks.media_type_id = media_types.id 
WHERE genres.name = 'Rock' AND media_types.name = 'MPEG audio file'
```
-------------------------633 sample_num
```sql
SELECT T1.name FROM tracks AS T1 JOIN genres AS T2 ON T1.genre_id = T2.id WHERE T2.name = 'Rock' OR T2.name = 'Jazz';
```
-------------------------634 sample_num
```sql
SELECT T1.name FROM tracks AS T1 JOIN genres AS T2 ON T1.genre_id = T2.id WHERE T2.name = 'Rock' OR T2.name = 'Jazz';
```
-------------------------635 sample_num
```sql
SELECT T3.name FROM playlists AS T1 
JOIN playlist_tracks AS T2 ON T1.id = T2.playlist_id 
JOIN tracks AS T3 ON T2.track_id = T3.id 
WHERE T1.name = 'Movies';
```
-------------------------636 sample_num
```sql
SELECT T3.name FROM playlists AS T1 
JOIN playlist_tracks AS T2 ON T1.id = T2.playlist_id 
JOIN tracks AS T3 ON T2.track_id = T3.id 
WHERE T1.name = 'Movies';
```
-------------------------637 sample_num
```sql
SELECT P.name
FROM playlists P
JOIN playlist_tracks PT ON P.id = PT.playlist_id
GROUP BY P.id
HAVING COUNT(PT.track_id) > 100;
```
-------------------------638 sample_num
```sql
SELECT T1.name FROM playlists AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.playlist_id GROUP BY T1.id HAVING COUNT(T2.track_id) > 100;
```
-------------------------639 sample_num
```sql
SELECT T.name 
FROM tracks T
JOIN invoice_lines IL ON T.id = IL.track_id
JOIN invoices I ON IL.invoice_id = I.id
JOIN customers C ON I.customer_id = C.id
WHERE C.first_name = 'Daan' AND C.last_name = 'Peeters';
```
-------------------------640 sample_num
```sql
SELECT T1.name FROM tracks AS T1 
JOIN invoice_lines AS T2 ON T1.id = T2.track_id 
JOIN invoices AS T3 ON T3.id = T2.invoice_id 
JOIN customers AS T4 ON T4.id = T3.customer_id 
WHERE T4.first_name = 'Dean' AND T4.last_name = 'Peeters';
```
-------------------------641 sample_num
```sql
SELECT tracks.unit_price 
FROM tracks 
WHERE tracks.name = 'Fast As a Shark';
```
-------------------------642 sample_num
```sql
SELECT unit_price FROM tracks WHERE name = 'Fast As a Shark';
```
-------------------------643 sample_num
```sql
SELECT T1.name 
FROM tracks AS T1 
JOIN playlist_tracks AS T2 ON T1.id = T2.track_id 
JOIN playlists AS T3 ON T2.playlist_id = T3.id 
WHERE T3.name = 'Movies' 
EXCEPT 
SELECT T1.name 
FROM tracks AS T1 
JOIN playlist_tracks AS T2 ON T1.id = T2.track_id 
JOIN playlists AS T3 ON T2.playlist_id = T3.id 
WHERE T3.name = 'Music'
```
-------------------------644 sample_num
```sql
SELECT T1.name 
FROM tracks AS T1 
JOIN playlist_tracks AS T2 ON T1.id = T2.track_id 
JOIN playlists AS T3 ON T2.playlist_id = T3.id 
WHERE T3.name = 'Movies' 
EXCEPT 
SELECT T1.name 
FROM tracks AS T1 
JOIN playlist_tracks AS T2 ON T1.id = T2.track_id 
JOIN playlists AS T3 ON T2.playlist_id = T3.id 
WHERE T3.name = 'Music'
```
-------------------------645 sample_num
```sql
SELECT T1.name 
FROM tracks AS T1 
JOIN playlist_tracks AS T2 ON T1.id = T2.track_id 
JOIN playlists AS T3 ON T2.playlist_id = T3.id 
WHERE T3.name IN ('Movies', 'Music') 
GROUP BY T1.name 
HAVING COUNT(DISTINCT T3.name) > 1;
```
-------------------------646 sample_num
```sql
SELECT T.name FROM tracks T WHERE T.id IN (SELECT PT1.track_id FROM playlist_tracks PT1 JOIN playlists P1 ON PT1.playlist_id = P1.id WHERE P1.name = 'Movies') AND T.id IN (SELECT PT2.track_id FROM playlist_tracks PT2 JOIN playlists P2 ON PT2.playlist_id = P2.id WHERE P2.name = 'music')
```
-------------------------647 sample_num
```sql
SELECT genres.name, COUNT(tracks.id) 
FROM tracks 
JOIN genres ON tracks.genre_id = genres.id 
GROUP BY genres.name;
```
-------------------------648 sample_num
```sql
SELECT g.name, COUNT(t.id) as track_count
FROM genres g
JOIN tracks t ON g.id = t.genre_id
GROUP BY g.name;
```
-------------------------649 sample_num
```sql
SELECT COUNT(*) FROM editor;
```
-------------------------650 sample_num
```sql
SELECT Name 
FROM editor 
ORDER BY Age ASC;
```
-------------------------651 sample_num
```sql
SELECT Name, Age FROM editor;
```
-------------------------652 sample_num
```sql
SELECT Name 
FROM editor 
WHERE Age > 25;
```
-------------------------653 sample_num
```sql
SELECT Name 
FROM editor 
WHERE Age IN (24, 25);
```
-------------------------654 sample_num
```sql
SELECT Name 
FROM editor 
ORDER BY Age 
LIMIT 1;
```
-------------------------655 sample_num
```sql
SELECT Age, COUNT(*) 
FROM editor 
GROUP BY Age;
```
-------------------------656 sample_num
```sql
SELECT Age, COUNT(*) AS Count_Age 
FROM editor 
GROUP BY Age 
ORDER BY Count_Age DESC 
LIMIT 1;
```
-------------------------657 sample_num
```sql
SELECT DISTINCT Theme FROM journal;
```
-------------------------658 sample_num
```sql
SELECT editor.Name, journal.Theme 
FROM editor 
JOIN journal_committee ON editor.Editor_ID = journal_committee.Editor_ID 
JOIN journal ON journal.Journal_ID = journal_committee.Journal_ID;
```
-------------------------659 sample_num
```sql
SELECT editor.Name, journal.Theme 
FROM journal_committee 
JOIN editor ON journal_committee.Editor_ID = editor.Editor_ID 
JOIN journal ON journal_committee.Journal_ID = journal.Journal_ID;
```
-------------------------660 sample_num
```sql
SELECT E.Name, E.Age, J.Theme
FROM editor E
JOIN journal_committee JC ON E.Editor_ID = JC.Editor_ID
JOIN journal J ON JC.Journal_ID = J.Journal_ID
ORDER BY J.Theme ASC;
```
-------------------------661 sample_num
```sql
SELECT e.Name 
FROM editor e
JOIN journal_committee jc ON e.Editor_ID = jc.Editor_ID
JOIN journal j ON jc.Journal_ID = j.Journal_ID
WHERE j.Sales > 3000;
```
-------------------------662 sample_num
```sql
SELECT E.Editor_ID, E.Name, COUNT(JC.Journal_ID) 
FROM editor E 
LEFT JOIN journal_committee JC ON E.Editor_ID = JC.Editor_ID 
GROUP BY E.Editor_ID, E.Name;
```
-------------------------663 sample_num
```sql
SELECT e.Name 
FROM editor e
JOIN journal_committee jc ON e.Editor_ID = jc.Editor_ID
GROUP BY e.Editor_ID, e.Name
HAVING COUNT(jc.Journal_ID) >= 2;
```
-------------------------664 sample_num
```sql
SELECT Name 
FROM editor 
WHERE Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee)
```
-------------------------665 sample_num
```sql
SELECT Date, Theme, Sales 
FROM journal 
WHERE Journal_ID NOT IN (SELECT Journal_ID FROM journal_committee)
```
-------------------------666 sample_num
```sql
SELECT AVG(T1.Sales) 
FROM journal AS T1 
JOIN journal_committee AS T2 ON T1.Journal_ID = T2.Journal_ID 
WHERE T2.Work_Type = 'Photo';
```
-------------------------667 sample_num
```sql
SELECT COUNT(*) FROM Accounts;
```
-------------------------668 sample_num
```sql
SELECT COUNT(*) FROM Accounts;
```
-------------------------669 sample_num
```sql
SELECT account_id, customer_id, account_name 
FROM Accounts;
```
-------------------------670 sample_num
```sql
SELECT account_id, customer_id, account_name 
FROM Accounts;
```
-------------------------671 sample_num
```sql
SELECT other_account_details 
FROM Accounts 
WHERE account_name = '338';
```
-------------------------672 sample_num
```sql
SELECT other_account_details 
FROM Accounts 
WHERE account_name = '338';
```
-------------------------673 sample_num
```sql
SELECT Customers.customer_first_name, Customers.customer_last_name, Customers.customer_phone 
FROM Customers 
JOIN Accounts ON Customers.customer_id = Accounts.customer_id 
WHERE Accounts.account_name = '162';
```
-------------------------674 sample_num
```sql
SELECT Customers.customer_first_name, Customers.customer_last_name, Customers.customer_phone 
FROM Customers 
JOIN Accounts ON Customers.customer_id = Accounts.customer_id 
WHERE Accounts.account_name = '162';
```
-------------------------675 sample_num
```sql
SELECT COUNT(*) 
FROM Accounts 
JOIN Customers ON Accounts.customer_id = Customers.customer_id 
WHERE Customers.customer_first_name = 'Art' AND Customers.customer_last_name = 'Turcotte';
```
-------------------------676 sample_num
```sql
SELECT COUNT(*) 
FROM Accounts 
WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_first_name = 'Art' AND customer_last_name = 'Turcotte');
```
-------------------------677 sample_num
```sql
SELECT customer_id, COUNT(account_id) 
FROM Accounts 
GROUP BY customer_id;
```
-------------------------678 sample_num
```sql
SELECT customer_id, COUNT(account_id) as numberOfAccounts
FROM Accounts
GROUP BY customer_id;
```
-------------------------679 sample_num
```sql
SELECT customer_id, COUNT(account_id) AS num_of_accounts
FROM Accounts
GROUP BY customer_id
ORDER BY num_of_accounts DESC
LIMIT 1;
```
-------------------------680 sample_num
```sql
SELECT T1.customer_id, COUNT(T2.account_id) AS num_of_accounts 
FROM Customers AS T1 
JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id 
GROUP BY T1.customer_id 
ORDER BY num_of_accounts DESC 
LIMIT 1;
```
-------------------------681 sample_num
```sql
SELECT C.customer_first_name, C.customer_last_name, C.customer_id
FROM Customers C
JOIN Accounts A ON C.customer_id = A.customer_id
GROUP BY C.customer_id, C.customer_first_name, C.customer_last_name
HAVING COUNT(A.account_id) = (
    SELECT MIN(num_accounts)
    FROM (
        SELECT COUNT(account_id) AS num_accounts
        FROM Accounts
        GROUP BY customer_id
    ) AS subquery
)
```
-------------------------682 sample_num
```sql
SELECT C.customer_id, C.customer_first_name, C.customer_last_name 
FROM Customers C
JOIN (
  SELECT A.customer_id, COUNT(*) AS num_accounts
  FROM Accounts A
  GROUP BY A.customer_id
) AS AC
ON C.customer_id = AC.customer_id
WHERE AC.num_accounts = (
  SELECT MIN(num_accounts)
  FROM (
    SELECT COUNT(*) AS num_accounts
    FROM Accounts
    GROUP BY customer_id
  )
)
LIMIT 1;
```
-------------------------683 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)
```
-------------------------684 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)
```
-------------------------685 sample_num
```sql
SELECT customer_first_name, customer_last_name 
FROM Customers 
WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM Accounts)
```
-------------------------686 sample_num
```sql
SELECT Customers.customer_first_name, Customers.customer_last_name 
FROM Customers 
LEFT JOIN Accounts ON Customers.customer_id = Accounts.customer_id 
WHERE Accounts.account_id IS NULL;
```
-------------------------687 sample_num
```sql
SELECT DISTINCT c.customer_first_name, c.customer_last_name 
FROM Customers c
JOIN Accounts a ON c.customer_id = a.customer_id;
```
-------------------------688 sample_num
```sql
SELECT Customers.customer_first_name, Customers.customer_last_name 
FROM Accounts
JOIN Customers ON Accounts.customer_id = Customers.customer_id;
```
-------------------------689 sample_num
```sql
SELECT COUNT(DISTINCT customer_id) 
FROM Accounts;
```
-------------------------690 sample_num
```sql
SELECT COUNT(DISTINCT customer_id) 
FROM Accounts;
```
-------------------------691 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------692 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------693 sample_num
```sql
SELECT customer_id, customer_first_name, customer_last_name, customer_phone 
FROM Customers;
```
-------------------------694 sample_num
```sql
SELECT customer_id, customer_first_name, customer_last_name, customer_phone 
FROM Customers;
```
-------------------------695 sample_num
```sql
SELECT customer_phone, customer_email 
FROM Customers 
WHERE customer_first_name = 'Aniyah' AND customer_last_name = 'Feest';
```
-------------------------696 sample_num
```sql
SELECT customer_phone, customer_email 
FROM Customers 
WHERE customer_first_name = 'Aniyah' AND customer_last_name = 'Feest';
```
-------------------------697 sample_num
```sql
SELECT COUNT(*) FROM Customers_Cards;
```
-------------------------698 sample_num
```sql
SELECT COUNT(*) FROM Customers_Cards;
```
-------------------------699 sample_num
```sql
SELECT card_id, customer_id, card_type_code, card_number 
FROM Customers_Cards;
```
-------------------------700 sample_num
```sql
SELECT card_id, customer_id, card_type_code, card_number 
FROM Customers_Cards;
```
-------------------------701 sample_num
```sql
SELECT date_valid_from, date_valid_to 
FROM Customers_Cards 
WHERE card_number = '4560596484842';
```
-------------------------702 sample_num
```sql
SELECT date_valid_from, date_valid_to 
FROM Customers_Cards 
WHERE card_number = '4560596484842';
```
-------------------------703 sample_num
```sql
SELECT Customers.customer_first_name, Customers.customer_last_name, Customers.customer_phone 
FROM Customers 
JOIN Customers_Cards ON Customers.customer_id = Customers_Cards.customer_id 
WHERE Customers_Cards.card_number = '4560596484842';
```
-------------------------704 sample_num
```sql
SELECT Customers.customer_first_name, Customers.customer_last_name, Customers.customer_phone 
FROM Customers
JOIN Customers_Cards ON Customers.customer_id = Customers_Cards.customer_id 
WHERE Customers_Cards.card_number = '4560596484842';
```
-------------------------705 sample_num
```sql
SELECT COUNT(*) 
FROM Customers_Cards 
WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_first_name = 'Art' AND customer_last_name = 'Turcotte');
```
-------------------------706 sample_num
```sql
SELECT COUNT(*) 
FROM Customers_Cards 
WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_first_name = 'Art' AND customer_last_name = 'Turcotte');
```
-------------------------707 sample_num
```sql
SELECT COUNT(*) 
FROM Customers_Cards 
WHERE card_type_code = 'debit';
```
-------------------------708 sample_num
```sql
SELECT COUNT(*) 
FROM Customers_Cards 
WHERE card_type_code = 'Debit';
```
-------------------------709 sample_num
```sql
SELECT COUNT(*) 
FROM Customers_Cards 
WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_first_name = 'Blanche' AND customer_last_name = 'Huels') AND card_type_code = 'Credit';
```
-------------------------710 sample_num
```sql
SELECT COUNT(*) 
FROM Customers_Cards 
JOIN Customers ON Customers_Cards.customer_id = Customers.customer_id 
WHERE Customers.customer_first_name = 'Blanche' 
AND Customers.customer_last_name = 'Huels' 
AND Customers_Cards.card_type_code = 'Credit';
```
-------------------------711 sample_num
```sql
SELECT Customers.customer_id, COUNT(Customers_Cards.card_id) AS number_of_cards
FROM Customers
JOIN Customers_Cards ON Customers.customer_id = Customers_Cards.customer_id
GROUP BY Customers.customer_id;
```
-------------------------712 sample_num
```sql
SELECT customer_id, COUNT(card_id) as number_of_cards
FROM Customers_Cards
GROUP BY customer_id;
```
-------------------------713 sample_num
```sql
SELECT customer_id, COUNT(card_id) as num_cards
FROM Customers_Cards
GROUP BY customer_id
ORDER BY num_cards DESC
LIMIT 1;
```
-------------------------714 sample_num
```sql
SELECT CC.customer_id, COUNT(CC.card_id) AS num_of_cards
FROM Customers_Cards CC
GROUP BY CC.customer_id
ORDER BY num_of_cards DESC
LIMIT 1;
```
-------------------------715 sample_num
```sql
SELECT c.customer_id, c.customer_first_name, c.customer_last_name
FROM Customers c
JOIN (
    SELECT customer_id 
    FROM Customers_Cards 
    GROUP BY customer_id 
    HAVING COUNT(card_id) >= 2
) cc ON c.customer_id = cc.customer_id;
```
-------------------------716 sample_num
```sql
SELECT c.customer_id, c.customer_first_name, c.customer_last_name
FROM Customers c
JOIN Customers_Cards cc ON c.customer_id = cc.customer_id
GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name
HAVING COUNT(cc.card_id) >= 2;
```
-------------------------717 sample_num
```sql
SELECT c.customer_id, c.customer_first_name, c.customer_last_name 
FROM Customers c
JOIN Accounts a ON c.customer_id = a.customer_id 
GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name 
ORDER BY COUNT(a.account_id) 
LIMIT 1;
```
-------------------------718 sample_num
```sql
SELECT C.customer_id, C.customer_first_name, C.customer_last_name 
FROM Customers C
JOIN Accounts A ON C.customer_id = A.customer_id
GROUP BY C.customer_id, C.customer_first_name, C.customer_last_name
ORDER BY COUNT(A.account_id) ASC
LIMIT 1;
```
-------------------------719 sample_num
```sql
SELECT card_type_code, COUNT(card_id) AS numberOfCards
FROM Customers_Cards
GROUP BY card_type_code;
```
-------------------------720 sample_num
```sql
SELECT card_type_code, COUNT(card_id) AS number_of_cards
FROM Customers_Cards
GROUP BY card_type_code;
```
-------------------------721 sample_num
```sql
SELECT card_type_code, COUNT(card_id) AS num_of_cards
FROM Customers_Cards
GROUP BY card_type_code
ORDER BY num_of_cards DESC
LIMIT 1;
```
-------------------------722 sample_num
```sql
SELECT card_type_code 
FROM Customers_Cards 
GROUP BY card_type_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------723 sample_num
```sql
SELECT card_type_code 
FROM Customers_Cards 
GROUP BY card_type_code 
HAVING COUNT(card_id) >= 5;
```
-------------------------724 sample_num
```sql
SELECT card_type_code 
FROM Customers_Cards 
GROUP BY card_type_code 
HAVING COUNT(card_id) >= 5;
```
-------------------------725 sample_num
```sql
SELECT card_type_code, COUNT(customer_id) AS numberOfCustomers
FROM Customers_Cards
GROUP BY card_type_code;
```
-------------------------726 sample_num
```sql
SELECT card_type_code, COUNT(DISTINCT customer_id) AS num_customers
FROM Customers_Cards
GROUP BY card_type_code;
```
-------------------------727 sample_num
```sql
SELECT c.customer_id, c.customer_first_name 
FROM Customers c
LEFT JOIN Customers_Cards cc ON c.customer_id = cc.customer_id 
WHERE cc.card_id IS NULL OR cc.card_type_code != 'Credit'
GROUP BY c.customer_id, c.customer_first_name
HAVING COUNT(cc.card_id) = 0 OR MAX(cc.card_type_code) != 'Credit';
```
-------------------------728 sample_num
```sql
SELECT c.customer_id, c.customer_first_name 
FROM Customers c
WHERE c.customer_id NOT IN (
    SELECT cc.customer_id 
    FROM Customers_Cards cc 
    WHERE cc.card_type_code = 'Credit'
);
```
-------------------------729 sample_num
```sql
SELECT DISTINCT card_type_code FROM Customers_Cards;
```
-------------------------730 sample_num
```sql
SELECT DISTINCT card_type_code FROM Customers_Cards;
```
-------------------------731 sample_num
```sql
SELECT COUNT(DISTINCT card_type_code) FROM Customers_Cards;
```
-------------------------732 sample_num
```sql
SELECT COUNT(DISTINCT card_type_code) FROM Customers_Cards;
```
-------------------------733 sample_num
```sql
SELECT DISTINCT transaction_type FROM Financial_Transactions;
```
-------------------------734 sample_num
```sql
SELECT DISTINCT transaction_type FROM Financial_Transactions;
```
-------------------------735 sample_num
```sql
SELECT COUNT(DISTINCT transaction_type) FROM Financial_Transactions;
```
-------------------------736 sample_num
```sql
SELECT COUNT(DISTINCT transaction_type) FROM Financial_Transactions;
```
-------------------------737 sample_num
```sql
SELECT AVG(transaction_amount) AS average_transaction_amount, 
       SUM(transaction_amount) AS total_transaction_amount 
FROM Financial_Transactions;
```
-------------------------738 sample_num
```sql
SELECT AVG(transaction_amount) AS average_transaction_amount, SUM(transaction_amount) AS total_transaction_amount 
FROM Financial_Transactions;
```
-------------------------739 sample_num
```sql
SELECT cc.card_type_code, COUNT(ft.transaction_id) 
FROM Customers_Cards cc 
LEFT JOIN Financial_Transactions ft ON cc.card_id = ft.card_id 
GROUP BY cc.card_type_code;
```
-------------------------740 sample_num
```sql
SELECT cc.card_type_code, COUNT(ft.transaction_id) AS transaction_count
FROM Customers_Cards cc
JOIN Financial_Transactions ft ON cc.card_id = ft.card_id
GROUP BY cc.card_type_code;
```
-------------------------741 sample_num
```sql
SELECT transaction_type, COUNT(*) as number_of_transactions 
FROM Financial_Transactions 
GROUP BY transaction_type;
```
-------------------------742 sample_num
```sql
SELECT transaction_type, COUNT(*) as transaction_count
FROM Financial_Transactions
GROUP BY transaction_type;
```
-------------------------743 sample_num
```sql
SELECT transaction_type, SUM(transaction_amount) as total_amount 
FROM Financial_Transactions 
GROUP BY transaction_type 
ORDER BY total_amount DESC 
LIMIT 1;
```
-------------------------744 sample_num
```sql
SELECT transaction_type, SUM(transaction_amount) as total_amount
FROM Financial_Transactions
GROUP BY transaction_type
ORDER BY total_amount DESC
LIMIT 1;
```
-------------------------745 sample_num
```sql
SELECT Accounts.account_id, COUNT(Financial_Transactions.transaction_id) AS transaction_count
FROM Accounts 
JOIN Financial_Transactions 
ON Accounts.account_id = Financial_Transactions.account_id
GROUP BY Accounts.account_id;
```
-------------------------746 sample_num
```sql
SELECT account_id, COUNT(*) as transaction_count 
FROM Financial_Transactions 
GROUP BY account_id;
```
-------------------------747 sample_num
```sql
SELECT COUNT(*) FROM track;
```
-------------------------748 sample_num
```sql
SELECT COUNT(*) FROM track;
```
-------------------------749 sample_num
```sql
SELECT Name, Location FROM track;
```
-------------------------750 sample_num
```sql
SELECT Name, Location FROM track;
```
-------------------------751 sample_num
```sql
SELECT Name, Seating 
FROM track 
WHERE Year_Opened > 2000 
ORDER BY Seating;
```
-------------------------752 sample_num
```sql
SELECT Name, Seating 
FROM track 
WHERE Year_Opened > 2000 
ORDER BY Seating;
```
-------------------------753 sample_num
```sql
SELECT Name, Location, Seating 
FROM track 
ORDER BY Year_Opened DESC 
LIMIT 1;
```
-------------------------754 sample_num
```sql
SELECT Name, Location, Seating 
FROM track 
WHERE Year_Opened = (SELECT MAX(Year_Opened) FROM track);
```
-------------------------755 sample_num
```sql
SELECT MIN(Seating) as Min_Seating, MAX(Seating) as Max_Seating, AVG(Seating) as Avg_Seating 
FROM track;
```
-------------------------756 sample_num
```sql
SELECT MIN(Seating) as Min_Seating, MAX(Seating) as Max_Seating, AVG(Seating) as Avg_Seating 
FROM track;
```
-------------------------757 sample_num
```sql
SELECT Name, Location, Year_Opened 
FROM track 
WHERE Seating > (SELECT AVG(Seating) FROM track);
```
-------------------------758 sample_num
```sql
SELECT Name, Location, Year_Opened 
FROM track 
WHERE Seating > (SELECT AVG(Seating) FROM track);
```
-------------------------759 sample_num
```sql
SELECT DISTINCT Location FROM track;
```
-------------------------760 sample_num
```sql
SELECT DISTINCT Location FROM track;
```
-------------------------761 sample_num
```sql
SELECT COUNT(*) FROM race;
```
-------------------------762 sample_num
```sql
SELECT COUNT(*) FROM race;
```
-------------------------763 sample_num
```sql
SELECT DISTINCT Class FROM race;
```
-------------------------764 sample_num
```sql
SELECT DISTINCT Class FROM race;
```
-------------------------765 sample_num
```sql
SELECT Name, Class, Date FROM race;
```
-------------------------766 sample_num
```sql
SELECT Name, Class, Date FROM race;
```
-------------------------767 sample_num
```sql
SELECT Class, COUNT(*) AS NumberOfRaces
FROM race
GROUP BY Class;
```
-------------------------768 sample_num
```sql
SELECT Class, COUNT(*) 
FROM race 
GROUP BY Class;
```
-------------------------769 sample_num
```sql
SELECT Class 
FROM race 
GROUP BY Class 
ORDER BY COUNT(Race_ID) DESC 
LIMIT 1;
```
-------------------------770 sample_num
```sql
SELECT Class 
FROM race 
GROUP BY Class 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------771 sample_num
```sql
SELECT Class 
FROM race 
GROUP BY Class 
HAVING COUNT(Race_ID) >= 2;
```
-------------------------772 sample_num
```sql
SELECT Class 
FROM race 
GROUP BY Class 
HAVING COUNT(Race_ID) >= 2;
```
-------------------------773 sample_num
```sql
SELECT T2.Name 
FROM track AS T2 
WHERE NOT EXISTS (
    SELECT * 
    FROM race AS T1 
    WHERE T1.Track_ID = T2.Track_ID AND T1.Class = 'GT'
)
```
-------------------------774 sample_num
```sql
SELECT T1.Name 
FROM track AS T1 
LEFT JOIN race AS T2 ON T1.Track_ID = T2.Track_ID 
WHERE T2.Class != 'GT' OR T2.Class IS NULL
GROUP BY T1.Track_ID
HAVING COUNT(T2.Race_ID) = 0
```
-------------------------775 sample_num
```sql
SELECT Name 
FROM track 
WHERE Track_ID NOT IN (SELECT Track_ID FROM race);
```
-------------------------776 sample_num
```sql
SELECT Name 
FROM track 
WHERE Track_ID NOT IN (SELECT Track_ID FROM race);
```
-------------------------777 sample_num
```sql
SELECT Year_Opened 
FROM track 
WHERE Seating >= 5000 INTERSECT 
SELECT Year_Opened 
FROM track 
WHERE Seating <= 4000;
```
-------------------------778 sample_num
```sql
SELECT Year_Opened 
FROM track 
WHERE Seating BETWEEN 4000 AND 5000;
```
-------------------------779 sample_num
```sql
SELECT T2.Name, COUNT(T1.Race_ID)
FROM race AS T1
JOIN track AS T2 ON T1.Track_ID = T2.Track_ID
GROUP BY T2.Name;
```
-------------------------780 sample_num
```sql
SELECT T2.Name, COUNT(T1.Race_ID) 
FROM race AS T1 
JOIN track AS T2 
ON T1.Track_ID = T2.Track_ID 
GROUP BY T1.Track_ID;
```
-------------------------781 sample_num
```sql
SELECT T2.Name 
FROM race AS T1 
JOIN track AS T2 
ON T1.Track_ID = T2.Track_ID 
GROUP BY T2.Name 
ORDER BY COUNT(T1.Race_ID) DESC 
LIMIT 1;
```
-------------------------782 sample_num
```sql
SELECT T2.Name 
FROM race AS T1 
JOIN track AS T2 ON T1.Track_ID = T2.Track_ID 
GROUP BY T1.Track_ID 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------783 sample_num
```sql
SELECT race.Name, race.Date, track.Name 
FROM race 
JOIN track ON race.Track_ID = track.Track_ID;
```
-------------------------784 sample_num
```sql
SELECT race.Name AS Race_Name, race.Date, track.Name AS Track_Name 
FROM race 
JOIN track ON race.Track_ID = track.Track_ID;
```
-------------------------785 sample_num
```sql
SELECT T2.Name, T2.Location 
FROM race AS T1 
JOIN track AS T2 
ON T1.Track_ID = T2.Track_ID 
GROUP BY T1.Track_ID 
HAVING COUNT(*) = 1;
```
-------------------------786 sample_num
```sql
SELECT T2.Name, T2.Location 
FROM race AS T1 
JOIN track AS T2 
ON T1.Track_ID = T2.Track_ID 
GROUP BY T1.Track_ID 
HAVING COUNT(*) = 1;
```
-------------------------787 sample_num
```sql
SELECT T1.Location 
FROM track AS T1 
JOIN track AS T2 ON T1.Location = T2.Location 
WHERE T1.Seating > 90000 AND T2.Seating < 70000
GROUP BY T1.Location
HAVING COUNT(*) >= 2;
```
-------------------------788 sample_num
```sql
SELECT Location 
FROM track 
WHERE Seating > 90000 
INTERSECT 
SELECT Location 
FROM track 
WHERE Seating < 70000;
```
-------------------------789 sample_num
```sql
SELECT COUNT(*) 
FROM member 
WHERE Membership_card = 'Black';
```
-------------------------790 sample_num
```sql
SELECT Address, COUNT(*) AS Num_of_Members 
FROM member 
GROUP BY Address;
```
-------------------------791 sample_num
```sql
SELECT Name 
FROM member 
WHERE Address IN ('Harford', 'Waterbury');
```
-------------------------792 sample_num
```sql
SELECT Member_ID, Name 
FROM member 
WHERE Age < 30 OR Membership_card = 'Black';
```
-------------------------793 sample_num
```sql
SELECT Time_of_purchase, Age, Address 
FROM member 
ORDER BY Time_of_purchase;
```
-------------------------794 sample_num
```sql
SELECT Membership_card, COUNT(*) AS num_members
FROM member
GROUP BY Membership_card
HAVING num_members > 5;
```
-------------------------795 sample_num
```sql
SELECT Address 
FROM member 
WHERE Age < 30 
INTERSECT 
SELECT Address 
FROM member 
WHERE Age > 40;
```
-------------------------796 sample_num
```sql
SELECT T1.Membership_card 
FROM member AS T1 
WHERE T1.Address = 'Hartford' 
INTERSECT 
SELECT T1.Membership_card 
FROM member AS T1 
WHERE T1.Address = 'Waterbury'
```
-------------------------797 sample_num
```sql
SELECT COUNT(*) FROM member WHERE Address <> 'Hartford';
```
-------------------------798 sample_num
```sql
SELECT Address 
FROM shop 
WHERE NOT EXISTS (
    SELECT * 
    FROM member 
    WHERE shop.Address = member.Address AND member.Membership_card = 'black'
)
```
-------------------------799 sample_num
```sql
SELECT Address FROM coffee_shop.shop ORDER BY Open_Year;
```
-------------------------800 sample_num
```sql
SELECT AVG(Score), AVG(Num_of_staff) FROM shop;
```
-------------------------801 sample_num
```sql
SELECT Shop_ID, Address 
FROM shop 
WHERE Score < (SELECT AVG(Score) FROM shop);
```
-------------------------802 sample_num
```sql
SELECT Address, Num_of_staff 
FROM shop 
WHERE Shop_ID NOT IN (SELECT DISTINCT Shop_ID FROM happy_hour);
```
-------------------------803 sample_num
```sql
SELECT T1.Shop_ID, T1.Address 
FROM shop AS T1 
JOIN happy_hour AS T2 ON T1.Shop_ID = T2.Shop_ID 
WHERE T2.Month = 'May';
```
-------------------------804 sample_num
```sql
SELECT Shop_ID, COUNT(*) AS Num_of_HH
FROM happy_hour
GROUP BY Shop_ID
ORDER BY Num_of_HH DESC
LIMIT 1;
```
-------------------------805 sample_num
```sql
SELECT Month, COUNT(*) AS Total_Happy_Hours 
FROM happy_hour 
GROUP BY Month 
ORDER BY Total_Happy_Hours DESC 
LIMIT 1;
```
-------------------------806 sample_num
```sql
SELECT Month 
FROM happy_hour 
GROUP BY Month 
HAVING COUNT(HH_ID) > 2;
```
-------------------------807 sample_num
```sql
SELECT COUNT(*) FROM Album;
```
-------------------------808 sample_num
```sql
SELECT COUNT(*) FROM Album;
```
-------------------------809 sample_num
```sql
SELECT Name FROM Genre;
```
-------------------------810 sample_num
```sql
SELECT DISTINCT Name FROM Genre;
```
-------------------------811 sample_num
```sql
SELECT * FROM Customer WHERE State = 'NY';
```
-------------------------812 sample_num
```sql
SELECT * FROM Customer WHERE State = 'NY';
```
-------------------------813 sample_num
```sql
SELECT FirstName, LastName FROM Employee WHERE City = 'Calgary';
```
-------------------------814 sample_num
```sql
SELECT FirstName, LastName FROM Employee WHERE City = 'Calgary';
```
-------------------------815 sample_num
```sql
SELECT DISTINCT BillingCountry FROM Invoice;
```
-------------------------816 sample_num
```sql
SELECT DISTINCT BillingCountry FROM Invoice;
```
-------------------------817 sample_num
```sql
SELECT Name FROM Artist WHERE Name LIKE '%a%';
```
-------------------------818 sample_num
```sql
SELECT Name FROM Artist WHERE Name LIKE '%a%';
```
-------------------------819 sample_num
```sql
SELECT Album.Title 
FROM Album 
JOIN Artist ON Album.ArtistId = Artist.ArtistId 
WHERE Artist.Name = 'AC/DC';
```
-------------------------820 sample_num
```sql
SELECT A.Title 
FROM Album A 
JOIN Artist ART ON A.ArtistId = ART.ArtistId 
WHERE ART.Name = 'AC/DC';
```
-------------------------821 sample_num
```sql
SELECT COUNT(*) 
FROM Album 
WHERE ArtistId = (SELECT ArtistId FROM Artist WHERE Name = 'Metallica');
```
-------------------------822 sample_num
```sql
SELECT COUNT(*) 
FROM Album 
WHERE ArtistId = (
    SELECT ArtistId 
    FROM Artist 
    WHERE Name = 'Metallica'
);
```
-------------------------823 sample_num
```sql
SELECT T2.Name 
FROM Album AS T1 
JOIN Artist AS T2 ON T1.ArtistId = T2.ArtistId 
WHERE T1.Title = 'Balls to the Wall'
```
-------------------------824 sample_num
```sql
SELECT T2.Name 
FROM Album AS T1 
JOIN Artist AS T2 ON T1.ArtistId = T2.ArtistId 
WHERE T1.Title = 'Balls to the Wall';
```
-------------------------825 sample_num
```sql
SELECT T2.Name, COUNT(T1.AlbumId) AS NumberOfAlbums
FROM Album AS T1
JOIN Artist AS T2 ON T1.ArtistId = T2.ArtistId
GROUP BY T2.Name
ORDER BY NumberOfAlbums DESC
LIMIT 1;
```
-------------------------826 sample_num
```sql
SELECT T2.Name 
FROM Album AS T1 
JOIN Artist AS T2 ON T1.ArtistId = T2.ArtistId 
GROUP BY T2.Name 
ORDER BY COUNT(T1.AlbumId) DESC 
LIMIT 1;
```
-------------------------827 sample_num
```sql
SELECT Name 
FROM Track 
WHERE Name LIKE '%you%';
```
-------------------------828 sample_num
```sql
SELECT Name FROM Track WHERE Name LIKE '%you%';
```
-------------------------829 sample_num
```sql
SELECT AVG(UnitPrice) FROM Track;
```
-------------------------830 sample_num
```sql
SELECT AVG(UnitPrice) FROM Track;
```
-------------------------831 sample_num
```sql
SELECT MAX(Milliseconds) AS LongestTrack, MIN(Milliseconds) AS ShortestTrack FROM Track;
```
-------------------------832 sample_num
```sql
SELECT MAX(Milliseconds) AS MaxDuration, MIN(Milliseconds) AS MinDuration FROM Track;
```
-------------------------833 sample_num
```sql
SELECT A.AlbumId, A.Title, COUNT(T.TrackId) AS NumberOfTracks
FROM Album A
JOIN Track T ON A.AlbumId = T.AlbumId
GROUP BY A.AlbumId, A.Title;
```
-------------------------834 sample_num
```sql
SELECT A.Title, A.AlbumId, COUNT(T.TrackId) AS NumberOfTracks
FROM Album A
JOIN Track T ON A.AlbumId = T.AlbumId
GROUP BY A.AlbumId, A.Title;
```
-------------------------835 sample_num
```sql
SELECT T1.Name FROM Genre AS T1 JOIN Track AS T2 ON T1.GenreId = T2.GenreId GROUP BY T1.GenreId ORDER BY COUNT(T2.TrackId) DESC LIMIT 1;
```
-------------------------836 sample_num
```sql
SELECT T1.Name 
FROM Genre AS T1 
JOIN Track AS T2 ON T1.GenreId = T2.GenreId 
GROUP BY T1.GenreId 
ORDER BY COUNT(T2.TrackId) DESC 
LIMIT 1;
```
-------------------------837 sample_num
```sql
SELECT MediaType.Name
FROM MediaType
JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId
GROUP BY MediaType.Name
ORDER BY COUNT(Track.TrackId) ASC
LIMIT 1;
```
-------------------------838 sample_num
```sql
SELECT MediaType.Name
FROM MediaType
JOIN Track ON MediaType.MediaTypeId = Track.MediaTypeId
GROUP BY MediaType.Name
ORDER BY COUNT(Track.TrackId) ASC
LIMIT 1;
```
-------------------------839 sample_num
```sql
SELECT Album.Title, Album.AlbumId 
FROM Album 
JOIN Track ON Album.AlbumId = Track.AlbumId 
WHERE Track.UnitPrice > 1;
```
-------------------------840 sample_num
```sql
SELECT A.Title, A.AlbumId 
FROM Album A 
JOIN Track T ON A.AlbumId = T.AlbumId 
WHERE T.UnitPrice > 1;
```
-------------------------841 sample_num
```sql
SELECT COUNT(*) 
FROM Track 
JOIN Genre ON Track.GenreId = Genre.GenreId 
WHERE Genre.Name = 'Rock';
```
-------------------------842 sample_num
```sql
SELECT COUNT(*) 
FROM Track 
JOIN Genre ON Track.GenreId = Genre.GenreId 
WHERE Genre.Name = 'Rock';
```
-------------------------843 sample_num
```sql
SELECT AVG(T.UnitPrice) 
FROM Track T
JOIN Genre G ON T.GenreId = G.GenreId
WHERE G.Name = 'Jazz';
```
-------------------------844 sample_num
```sql
SELECT AVG(UnitPrice) 
FROM Track 
JOIN Genre ON Track.GenreId = Genre.GenreId 
WHERE Genre.Name = 'Jazz';
```
-------------------------845 sample_num
```sql
SELECT FirstName, LastName FROM Customer WHERE Email = 'luisg@embraer.com.br';
```
-------------------------846 sample_num
```sql
SELECT FirstName, LastName FROM Customer WHERE Email = 'luisg@embraer.com.br';
```
-------------------------847 sample_num
```sql
SELECT COUNT(*) FROM Customer WHERE Email LIKE '%gmail.com';
```
-------------------------848 sample_num
```sql
SELECT COUNT(*) FROM Customer WHERE Email LIKE '%gmail.com';
```
-------------------------849 sample_num
```sql
SELECT E.FirstName, E.LastName 
FROM Employee E
JOIN Customer C ON E.EmployeeId = C.SupportRepId
WHERE C.FirstName = 'Leonie';
```
-------------------------850 sample_num
```sql
SELECT E.FirstName, E.LastName 
FROM Employee E
JOIN Customer C ON E.EmployeeId = C.SupportRepId
WHERE C.FirstName = 'Leonie';
```
-------------------------851 sample_num
```sql
SELECT T2.City FROM Customer AS T1 JOIN Employee AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.PostalCode = '70174'
```
-------------------------852 sample_num
```sql
SELECT DISTINCT E.City 
FROM Employee E
JOIN Customer C ON E.EmployeeId = C.SupportRepId
WHERE C.PostalCode = '70174';
```
-------------------------853 sample_num
```sql
SELECT COUNT(DISTINCT City) FROM Employee;
```
-------------------------854 sample_num
```sql
SELECT COUNT(DISTINCT City) FROM Employee;
```
-------------------------855 sample_num
```sql
SELECT InvoiceDate 
FROM Invoice 
WHERE CustomerId IN (
    SELECT CustomerId 
    FROM Customer 
    WHERE FirstName = 'Astrid' AND LastName = 'Gruber'
);
```
-------------------------856 sample_num
```sql
SELECT InvoiceDate FROM Invoice WHERE CustomerId IN (SELECT CustomerId FROM Customer WHERE FirstName = 'Astrid' AND LastName = 'Gruber');
```
-------------------------857 sample_num
```sql
SELECT DISTINCT Customer.LastName 
FROM Customer 
WHERE NOT EXISTS (
    SELECT * 
    FROM Invoice 
    WHERE Invoice.CustomerId = Customer.CustomerId AND Invoice.Total > 20
);
```
-------------------------858 sample_num
```sql
SELECT DISTINCT Customer.LastName 
FROM Customer 
LEFT JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId 
WHERE Invoice.Total <= 20 OR Invoice.CustomerId IS NULL;
```
-------------------------859 sample_num
```sql
SELECT DISTINCT C.FirstName 
FROM Customer C 
JOIN Invoice I ON C.CustomerId = I.CustomerId 
WHERE C.Country = 'Brazil';
```
-------------------------860 sample_num
```sql
SELECT DISTINCT c.FirstName 
FROM Customer c
JOIN Invoice i ON c.CustomerId = i.CustomerId
WHERE c.Country = 'Brazil';
```
-------------------------861 sample_num
```sql
SELECT DISTINCT C.Address 
FROM Customer C
JOIN Invoice I ON C.CustomerId = I.CustomerId 
WHERE C.Country = 'Germany';
```
-------------------------862 sample_num
```sql
SELECT DISTINCT c.Address 
FROM Customer c
JOIN Invoice i ON c.CustomerId = i.CustomerId 
WHERE c.Country = 'Germany';
```
-------------------------863 sample_num
```sql
SELECT Phone FROM Employee;
```
-------------------------864 sample_num
```sql
SELECT Phone FROM Employee;
```
-------------------------865 sample_num
```sql
SELECT COUNT(*) 
FROM Track 
WHERE MediaTypeId = (
    SELECT MediaTypeId 
    FROM MediaType 
    WHERE Name = 'AAC audio file'
);
```
-------------------------866 sample_num
```sql
SELECT COUNT(*) 
FROM Track 
JOIN MediaType ON Track.MediaTypeId = MediaType.MediaTypeId 
WHERE MediaType.Name = 'AAC audio file';
```
-------------------------867 sample_num
```sql
SELECT AVG(Milliseconds) 
FROM Track 
WHERE GenreId IN (
    SELECT GenreId 
    FROM Genre 
    WHERE Name IN ('Latin', 'Pop')
);
```
-------------------------868 sample_num
```sql
SELECT AVG(T2.Milliseconds) 
FROM Genre T1 
JOIN Track T2 ON T1.GenreId = T2.GenreId 
WHERE T1.Name = 'Latin' OR T1.Name = 'Pop';
```
-------------------------869 sample_num
```sql
SELECT T1.FirstName, T1.EmployeeId
FROM Employee AS T1
JOIN Customer AS T2 ON T1.EmployeeId = T2.SupportRepId
GROUP BY T1.EmployeeId
HAVING COUNT(T2.CustomerId) >= 10;
```
-------------------------870 sample_num
```sql
SELECT T1.FirstName, T1.EmployeeId
FROM Employee AS T1
JOIN Customer AS T2 ON T1.EmployeeId = T2.SupportRepId
GROUP BY T1.EmployeeId
HAVING COUNT(T2.CustomerId) >= 10;
```
-------------------------871 sample_num
```sql
SELECT Employee.LastName, COUNT(Customer.CustomerId) AS CustomerCount
FROM Employee
JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId
GROUP BY Employee.LastName
HAVING CustomerCount <= 20;
```
-------------------------872 sample_num
```sql
SELECT T1.LastName 
FROM Employee AS T1 
JOIN Customer AS T2 ON T1.EmployeeId = T2.SupportRepId 
GROUP BY T1.EmployeeId 
HAVING COUNT(T2.CustomerId) <= 20;
```
-------------------------873 sample_num
```sql
SELECT Title FROM Album ORDER BY Title ASC;
```
-------------------------874 sample_num
```sql
SELECT Title 
FROM Album 
ORDER BY Title ASC;
```
-------------------------875 sample_num
```sql
SELECT T2.Name, T1.ArtistId
FROM Album AS T1
JOIN Artist AS T2 ON T1.ArtistId = T2.ArtistId
GROUP BY T1.ArtistId
HAVING COUNT(T1.AlbumId) >= 3
ORDER BY T2.Name;
```
-------------------------876 sample_num
```sql
SELECT A.Name, B.ArtistId
FROM (
    SELECT ArtistId, COUNT(*) as num_albums
    FROM Album
    GROUP BY ArtistId
    HAVING COUNT(*) >= 3
) B
JOIN Artist A ON A.ArtistId = B.ArtistId
ORDER BY A.Name;
```
-------------------------877 sample_num
```sql
SELECT Name 
FROM Artist 
WHERE ArtistId NOT IN (SELECT ArtistId FROM Album);
```
-------------------------878 sample_num
```sql
SELECT Name 
FROM Artist 
WHERE ArtistId NOT IN (SELECT ArtistId FROM Album)
```
-------------------------879 sample_num
```sql
SELECT AVG(UnitPrice) 
FROM Track 
JOIN Genre ON Track.GenreId = Genre.GenreId 
WHERE Genre.Name = 'Rock';
```
-------------------------880 sample_num
```sql
SELECT AVG(T.UnitPrice) 
FROM Track T
JOIN Genre G ON T.GenreId = G.GenreId
WHERE G.Name = 'Rock';
```
-------------------------881 sample_num
```sql
SELECT 
    MAX(T3.Milliseconds) AS Longest_Pop_Track,
    MIN(T3.Milliseconds) AS Shortest_Pop_Track
FROM 
    Genre T1
INNER JOIN 
    Track T3 ON T1.GenreId = T3.GenreId
WHERE 
    T1.Name = 'Pop';
```
-------------------------882 sample_num
```sql
SELECT MAX(T2.Milliseconds) AS MaxMilliseconds, MIN(T2.Milliseconds) AS MinMilliseconds 
FROM Genre T1 
JOIN Track T2 ON T1.GenreId = T2.GenreId 
WHERE T1.Name = 'Pop';
```
-------------------------883 sample_num
```sql
SELECT BirthDate FROM Employee WHERE City = 'Edmonton';
```
-------------------------884 sample_num
```sql
SELECT BirthDate FROM Employee WHERE City = 'Edmonton';
```
-------------------------885 sample_num
```sql
SELECT DISTINCT(UnitPrice) FROM Track;
```
-------------------------886 sample_num
```sql
SELECT DISTINCT UnitPrice FROM Track;
```
-------------------------887 sample_num
```sql
SELECT COUNT(*) 
FROM Artist 
WHERE ArtistId NOT IN (SELECT ArtistId FROM Album)
```
-------------------------888 sample_num
```sql
SELECT COUNT(*) 
FROM Artist 
WHERE ArtistId NOT IN (SELECT ArtistId FROM Album)
```
-------------------------889 sample_num
```sql
SELECT DISTINCT A.Title 
FROM Album A 
JOIN Track T ON A.AlbumId = T.AlbumId 
JOIN Genre G ON T.GenreId = G.GenreId 
WHERE G.Name IN ('Reggae', 'Rock') 
GROUP BY A.Title 
HAVING COUNT(DISTINCT G.Name) = 2;
```
-------------------------890 sample_num
```sql
SELECT DISTINCT A.Title 
FROM Album A
JOIN Track T ON A.AlbumId = T.AlbumId
JOIN Genre G ON T.GenreId = G.GenreId
WHERE G.Name IN ('Reggae', 'Rock')
GROUP BY A.Title
HAVING COUNT(DISTINCT G.Name) > 1;
```
-------------------------891 sample_num
```sql
SELECT DISTINCT Available_Policies.Customer_Phone 
FROM Available_Policies;
```
-------------------------892 sample_num
```sql
SELECT DISTINCT Available_Policies.Customer_Phone 
FROM Available_Policies;
```
-------------------------893 sample_num
```sql
SELECT DISTINCT Available_Policies.Customer_Phone 
FROM Available_Policies 
JOIN Customers_Policies ON Available_Policies.Policy_ID = Customers_Policies.Policy_ID 
WHERE Available_Policies.policy_type_code = 'Life Insurance';
```
-------------------------894 sample_num
```sql
SELECT DISTINCT Available_Policies.Customer_Phone 
FROM Available_Policies 
JOIN Customers_Policies ON Available_Policies.Policy_ID = Customers_Policies.Policy_ID 
WHERE Available_Policies.policy_type_code = 'Life Insurance';
```
-------------------------895 sample_num
```sql
SELECT policy_type_code, COUNT(*) as record_count 
FROM Available_Policies 
GROUP BY policy_type_code 
ORDER BY record_count DESC 
LIMIT 1;
```
-------------------------896 sample_num
```sql
SELECT policy_type_code, COUNT(*) as count 
FROM Available_Policies 
GROUP BY policy_type_code 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------897 sample_num
```sql
SELECT DISTINCT AP.Customer_Phone 
FROM Available_Policies AP 
JOIN Customers_Policies CP ON AP.Policy_ID = CP.Policy_ID 
WHERE AP.policy_type_code = (
    SELECT policy_type_code 
    FROM (
        SELECT policy_type_code, COUNT(*) AS cnt 
        FROM Available_Policies 
        GROUP BY policy_type_code 
        ORDER BY cnt DESC 
        LIMIT 1
    ) AS subquery
);
```
-------------------------898 sample_num
```sql
SELECT T3.Customer_Phone
FROM (
    SELECT Policy_Type_Code
    FROM Available_Policies
    GROUP BY Policy_Type_Code
    ORDER BY COUNT(*) DESC
    LIMIT 1
) AS MostCommonPolicyType,
Available_Policies AS T1
JOIN Customers_Policies AS T2 ON T1.Policy_ID = T2.Policy_ID
JOIN Customers AS T3 ON T2.Customer_ID = T3.Customer_ID
WHERE T1.Policy_Type_Code = MostCommonPolicyType.Policy_Type_Code;
```
-------------------------899 sample_num
```sql
SELECT policy_type_code 
FROM Available_Policies 
GROUP BY policy_type_code 
HAVING COUNT(Customer_ID) > 4;
```
Note: This query assumes that each row in the Available_Policies table corresponds to a unique policy used by a customer. If this is not the case, the query may need to be adjusted to join the Available_Policies table with the Customers_Policies table first.
Corrected Query:
```sql
SELECT ap.policy_type_code
FROM Available_Policies ap 
    JOIN Customers_Policies cp ON ap.Policy_ID = cp.Policy_ID
GROUP BY ap.policy_type_code
HAVING COUNT(DISTINCT cp.Customer_ID) > 4;
```
-------------------------900 sample_num
```sql
SELECT policy_type_code 
FROM (
    SELECT policy_type_code, COUNT(DISTINCT Customer_ID) as num_customers
    FROM Available_Policies
    JOIN Customers_Policies ON Available_Policies.Policy_ID = Customers_Policies.Policy_ID
    GROUP BY policy_type_code
) AS subquery
WHERE num_customers > 4;
```
-------------------------901 sample_num
```sql
SELECT SUM(Settlement_Amount) AS Total_Settlement_Amount, AVG(Settlement_Amount) AS Average_Settlement_Amount 
FROM Settlements;
```
-------------------------902 sample_num
```sql
SELECT SUM(Settlement_Amount) AS Total_Sum, AVG(Settlement_Amount) AS Average_Sum 
FROM Settlements;
```
-------------------------903 sample_num
```sql
SELECT s.Service_name 
FROM Services s
JOIN First_Notification_of_Loss fnol ON s.Service_ID = fnol.Service_ID
GROUP BY s.Service_ID, s.Service_name
HAVING COUNT(fnol.FNOL_ID) > 2;
```
-------------------------904 sample_num
```sql
SELECT s.Service_name
FROM Services s
JOIN First_Notification_of_Loss fnol ON s.Service_ID = fnol.Service_ID
GROUP BY s.Service_ID, s.Service_name
HAVING COUNT(fnol.FNOL_ID) > 2;
```
-------------------------905 sample_num
```sql
SELECT Claims.Effective_Date 
FROM Claims 
JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID 
GROUP BY Claims.Effective_Date 
ORDER BY SUM(Settlements.Settlement_Amount) DESC 
LIMIT 1;
```
```
-------------------------906 sample_num
```sql
SELECT Claims.Effective_Date
FROM Claims
JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID
GROUP BY Claims.Effective_Date
ORDER BY SUM(Settlements.Settlement_Amount) DESC
LIMIT 1;
```
```
-------------------------907 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
JOIN Customers_Policies ON Customers.Customer_ID = Customers_Policies.Customer_ID 
JOIN Available_Policies ON Customers_Policies.Policy_ID = Available_Policies.Policy_ID 
WHERE Customers.Customer_name = 'Dayana Robel';
```
-------------------------908 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
JOIN Customers_Policies ON Customers.Customer_ID = Customers_Policies.Customer_ID 
JOIN Available_Policies ON Customers_Policies.Policy_ID = Available_Policies.Policy_ID 
WHERE Customers.Customer_name = 'Dayana Robel';
```
-------------------------909 sample_num
```sql
SELECT C.Customer_name 
FROM Customers AS C
JOIN Customers_Policies AS CP ON C.Customer_ID = CP.Customer_ID
GROUP BY C.Customer_name
ORDER BY COUNT(CP.Policy_ID) DESC
LIMIT 1;
```
-------------------------910 sample_num
```sql
SELECT C.Customer_name
FROM Customers C
JOIN Customers_Policies CP ON C.Customer_ID = CP.Customer_ID
GROUP BY C.Customer_name
ORDER BY COUNT(CP.Policy_ID) DESC
LIMIT 1;
```
-------------------------911 sample_num
```sql
SELECT ap.policy_type_code 
FROM Available_Policies ap 
JOIN Customers_Policies cp ON ap.Policy_ID = cp.Policy_ID 
JOIN Customers c ON cp.Customer_ID = c.Customer_ID 
WHERE c.Customer_name = 'Dayana Robel';
```
-------------------------912 sample_num
```sql
SELECT ap.policy_type_code 
FROM Available_Policies ap 
JOIN Customers_Policies cp ON ap.Policy_ID = cp.Policy_ID 
JOIN Customers c ON cp.Customer_ID = c.Customer_ID 
WHERE c.Customer_name = 'Dayana Robel';
```
-------------------------913 sample_num
```sql
SELECT ap.policy_type_code 
FROM Available_Policies ap 
JOIN Customers_Policies cp ON ap.Policy_ID = cp.Policy_ID 
WHERE cp.Customer_ID = (
    SELECT cp2.Customer_ID 
    FROM Customers_Policies cp2 
    GROUP BY cp2.Customer_ID 
    ORDER BY COUNT(cp2.Policy_ID) DESC 
    LIMIT 1
)
GROUP BY ap.policy_type_code;
```
-------------------------914 sample_num
```sql
SELECT policy_type_code 
FROM Available_Policies 
WHERE Policy_ID IN (
    SELECT Policy_ID 
    FROM Customers_Policies 
    WHERE Customer_ID = (
        SELECT Customer_ID 
        FROM (
            SELECT Customer_ID, COUNT(*) as policy_count 
            FROM Customers_Policies 
            GROUP BY Customer_ID 
            ORDER BY policy_count DESC 
            LIMIT 1
        ) as subquery
    )
);
```
-------------------------915 sample_num
```sql
SELECT Service_name FROM Services ORDER BY Service_name;
```
-------------------------916 sample_num
```sql
SELECT Service_name 
FROM Services 
ORDER BY Service_name ASC;
```
-------------------------917 sample_num
```sql
SELECT COUNT(*) FROM Services;
```
-------------------------918 sample_num
```sql
SELECT COUNT(*) FROM Services;
```
-------------------------919 sample_num
```sql
SELECT c.Customer_name 
FROM Customers c 
LEFT JOIN First_Notification_of_Loss fnol ON c.Customer_ID = fnol.Customer_ID 
WHERE fnol.FNOL_ID IS NULL;
```
-------------------------920 sample_num
```sql
SELECT c.Customer_name 
FROM Customers c
LEFT JOIN First_Notification_of_Loss fnol ON c.Customer_ID = fnol.Customer_ID
WHERE fnol.FNOL_ID IS NULL;
```
-------------------------921 sample_num
```sql
SELECT DISTINCT c.Customer_name
FROM Customers c
JOIN First_Notification_of_Loss fnol ON c.Customer_ID = fnol.Customer_ID
JOIN Services s ON fnol.Service_ID = s.Service_ID
WHERE s.Service_name IN ('Close a policy', 'Upgrade a policy');
```
-------------------------922 sample_num
```sql
SELECT DISTINCT c.Customer_name
FROM Customers c
JOIN First_Notification_of_Loss fnol ON c.Customer_ID = fnol.Customer_ID
JOIN Services s ON fnol.Service_ID = s.Service_ID
WHERE s.Service_name IN ('Close a policy', 'Upgrade a policy');
```
-------------------------923 sample_num
```sql
SELECT c.Customer_name 
FROM Customers c
JOIN First_Notification_of_Loss fnol1 
    ON c.Customer_ID = fnol1.Customer_ID 
    JOIN Services s1 
    ON fnol1.Service_ID = s1.Service_ID AND s1.Service_name = 'Close a policy'
JOIN First_Notification_of_Loss fnol2 
    ON c.Customer_ID = fnol2.Customer_ID 
    JOIN Services s2 
    ON fnol2.Service_ID = s2.Service_ID AND s2.Service_name = 'New policy application'
GROUP BY c.Customer_name
HAVING COUNT(DISTINCT s1.Service_ID) > 0 AND COUNT(DISTINCT s2.Service_ID) > 0;
```
-------------------------924 sample_num
```sql
SELECT c.Customer_name 
FROM Customers c
JOIN First_Notification_of_Loss fnol1 
    ON c.Customer_ID = fnol1.Customer_ID 
        AND fnol1.Service_ID IN (
            SELECT s.Service_ID 
            FROM Services s 
            WHERE s.Service_name = 'Close a policy'
        )
JOIN First_Notification_of_Loss fnol2 
    ON c.Customer_ID = fnol2.Customer_ID 
        AND fnol2.Service_ID IN (
            SELECT s.Service_ID 
            FROM Services s 
            WHERE s.Service_name = 'Upgrade a policy'
        )
GROUP BY c.Customer_name 
HAVING COUNT(DISTINCT fnol1.Service_ID) > 1 
AND COUNT(DISTINCT fnol2.Service_ID) > 1
```
```
-------------------------925 sample_num
```sql
SELECT Customer_ID FROM Customers WHERE Customer_name LIKE '%Diana%';
```
-------------------------926 sample_num
```sql
SELECT Customer_ID FROM Customers WHERE Customer_name LIKE '%Diana%';
```
-------------------------927 sample_num
```sql
SELECT MAX(Settlement_Amount) AS Maximum_Settlement_Amount, MIN(Settlement_Amount) AS Minimum_Settlement_Amount FROM Settlements;
```
-------------------------928 sample_num
```sql
SELECT MAX(Settlement_Amount) AS Maximum_Amount, MIN(Settlement_Amount) AS Minimum_Amount 
FROM Settlements;
```
-------------------------929 sample_num
```sql
SELECT * FROM Customers ORDER BY Customer_ID ASC;
```
-------------------------930 sample_num
```sql
SELECT DISTINCT Customer_ID FROM Customers ORDER BY Customer_ID;
```
-------------------------931 sample_num
```sql
SELECT cp.Date_Opened, cp.Date_Closed 
FROM Customers AS c 
JOIN Customers_Policies AS cp ON c.Customer_ID = cp.Customer_ID 
WHERE c.Customer_name LIKE '%Diana%';
```
-------------------------932 sample_num
```sql
SELECT cp.Date_Opened, cp.Date_Closed 
FROM Customers AS c 
JOIN Customers_Policies AS cp ON c.Customer_ID = cp.Customer_ID 
WHERE c.Customer_name LIKE '%Diana%';
```
-------------------------933 sample_num
```sql
SELECT COUNT(DISTINCT name) FROM enzyme;
```
-------------------------934 sample_num
```sql
SELECT COUNT(*) FROM enzyme;
```
-------------------------935 sample_num
```sql
SELECT name FROM enzyme ORDER BY name DESC;
```
-------------------------936 sample_num
```sql
SELECT name FROM enzyme ORDER BY name DESC;
```
-------------------------937 sample_num
```sql
SELECT e.name, e.Location 
FROM enzyme AS e;
```
-------------------------938 sample_num
```sql
SELECT name, Location FROM enzyme;
```
-------------------------939 sample_num
```sql
SELECT MAX(OMIM) FROM enzyme;
```
-------------------------940 sample_num
```sql
SELECT MAX(OMIM) FROM enzyme;
```
-------------------------941 sample_num
```sql
SELECT Product, Chromosome, Porphyria 
FROM enzyme 
WHERE Location = 'Cytosol';
```
-------------------------942 sample_num
```sql
SELECT Product, Chromosome, Porphyria 
FROM enzyme 
WHERE Location = 'Cytosol';
```
-------------------------943 sample_num
```sql
SELECT name FROM enzyme WHERE Product != 'Heme';
```
-------------------------944 sample_num
```sql
SELECT name FROM enzyme WHERE Product != 'Heme';
```
-------------------------945 sample_num
```sql
SELECT name, Trade_Name 
FROM medicine 
WHERE FDA_approved = 'Yes';
```
-------------------------946 sample_num
```sql
SELECT name, Trade_Name FROM medicine WHERE FDA_approved = 'Yes';
```
-------------------------947 sample_num
```sql
SELECT e.name 
FROM enzyme e
JOIN medicine_enzyme_interaction mei ON e.id = mei.enzyme_id
JOIN medicine m ON m.id = mei.medicine_id
WHERE m.name = 'Amisulpride' AND mei.interaction_type = 'inhibitor';
```
-------------------------948 sample_num
```sql
SELECT e.name 
FROM enzyme e
JOIN medicine_enzyme_interaction mei ON e.id = mei.enzyme_id
JOIN medicine m ON m.id = mei.medicine_id
WHERE m.name = 'Amisulpride' AND mei.interaction_type = 'inhibitor';
```
-------------------------949 sample_num
```sql
SELECT T2.id, T2.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id GROUP BY T2.id HAVING COUNT(T1.enzyme_id) >= 2
```
-------------------------950 sample_num
```sql
SELECT m.id, m.name 
FROM medicine m
JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id
GROUP BY m.id, m.name
HAVING COUNT(mei.enzyme_id) > 1;
```
-------------------------951 sample_num
```sql
SELECT m.id, m.name, m.FDA_approved
FROM medicine m
JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id
GROUP BY m.id, m.name, m.FDA_approved
ORDER BY COUNT(mei.enzyme_id) DESC;
```
-------------------------952 sample_num
```sql
SELECT m.id, m.name, m.FDA_approved, COUNT(me.interaction_type) as interaction_count
FROM medicine m
JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id
GROUP BY m.id, m.name, m.FDA_approved
ORDER BY interaction_count DESC;
```
-------------------------953 sample_num
```sql
SELECT e.id, e.name 
FROM enzyme e
JOIN medicine_enzyme_interaction mei ON e.id = mei.enzyme_id
WHERE mei.interaction_type = 'activator'
GROUP BY e.id, e.name
ORDER BY COUNT(mei.medicine_id) DESC
LIMIT 1;
```
-------------------------954 sample_num
```sql
SELECT e.id, e.name 
FROM enzyme e 
JOIN medicine_enzyme_interaction mei 
ON e.id = mei.enzyme_id 
WHERE mei.interaction_type = 'activator' 
GROUP BY e.id, e.name 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------955 sample_num
```sql
SELECT interaction_type 
FROM medicine_enzyme_interaction 
WHERE enzyme_id = (SELECT id FROM enzyme WHERE name = 'ALA synthase') 
AND medicine_id = (SELECT id FROM medicine WHERE name = 'Aripiprazole');
```
-------------------------956 sample_num
```sql
SELECT interaction_type 
FROM medicine_enzyme_interaction 
WHERE enzyme_id = (SELECT id FROM enzyme WHERE name = 'ALA synthase') 
AND medicine_id = (SELECT id FROM medicine WHERE name = 'Aripiprazole');
```
-------------------------957 sample_num
```sql
SELECT interaction_type, COUNT(*) as count 
FROM medicine_enzyme_interaction 
GROUP BY interaction_type 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------958 sample_num
```sql
SELECT interaction_type, COUNT(*) as count 
FROM medicine_enzyme_interaction 
GROUP BY interaction_type 
ORDER BY count DESC;
```
-------------------------959 sample_num
```sql
SELECT COUNT(*) FROM medicine WHERE FDA_approved = 'No';
```
-------------------------960 sample_num
```sql
SELECT COUNT(*) FROM medicine WHERE FDA_approved = 'No';
```
-------------------------961 sample_num
```sql
SELECT COUNT(*) FROM enzyme WHERE id NOT IN (SELECT enzyme_id FROM medicine_enzyme_interaction)
```
-------------------------962 sample_num
```sql
SELECT COUNT(*) FROM enzyme WHERE id NOT IN (SELECT enzyme_id FROM medicine_enzyme_interaction)
```
-------------------------963 sample_num
```sql
SELECT m.id, m.Trade_Name 
FROM medicine m
JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id
GROUP BY m.id, m.Trade_Name
HAVING COUNT(mei.enzyme_id) >= 3;
```
-------------------------964 sample_num
```sql
SELECT m.id, m.Trade_Name
FROM medicine m
JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id
GROUP BY m.id, m.Trade_Name
HAVING COUNT(mei.enzyme_id) >= 3;
```
-------------------------965 sample_num
```sql
SELECT DISTINCT e.name, e.Location, e.Product 
FROM enzyme e
JOIN medicine_enzyme_interaction mei ON e.id = mei.enzyme_id 
WHERE mei.interaction_type = 'inhibitor';
```
-------------------------966 sample_num
```sql
SELECT DISTINCT enzyme.name, enzyme.Location, enzyme.Product 
FROM enzyme 
JOIN medicine_enzyme_interaction 
ON enzyme.id = medicine_enzyme_interaction.enzyme_id 
WHERE medicine_enzyme_interaction.interaction_type = 'inhibitor';
```
-------------------------967 sample_num
```sql
SELECT m.name, m.Trade_Name 
FROM medicine m
JOIN medicine_enzyme_interaction mie1 ON m.id = mie1.medicine_id
JOIN medicine_enzyme_interaction mie2 ON m.id = mie2.medicine_id
WHERE mie1.interaction_type = 'inhibitor' 
AND mie2.interaction_type = 'activitor'
GROUP BY m.name, m.Trade_Name;
```
```
-------------------------968 sample_num
```sql
SELECT m.name, m.Trade_Name 
FROM medicine m 
JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id 
WHERE mei.interaction_type IN ('inhibitor', 'activator');
```
```
-------------------------969 sample_num
```sql
SELECT m.name, m.Trade_Name 
FROM medicine m
WHERE m.id NOT IN (
    SELECT mei.medicine_id 
    FROM medicine_enzyme_interaction mei
    JOIN enzyme e ON mei.enzyme_id = e.id
    WHERE e.Product = 'Heme'
);
```
-------------------------970 sample_num
```sql
SELECT m.name, m.Trade_Name 
FROM medicine m 
WHERE NOT EXISTS (
    SELECT * 
    FROM medicine_enzyme_interaction mei 
    JOIN enzyme e ON mei.enzyme_id = e.id 
    WHERE mei.medicine_id = m.id AND e.Product = 'Heme'
);
```
-------------------------971 sample_num
```sql
SELECT COUNT(DISTINCT FDA_approved) FROM medicine;
```
-------------------------972 sample_num
```sql
SELECT COUNT(DISTINCT FDA_approved) FROM medicine;
```
-------------------------973 sample_num
```sql
SELECT name FROM enzyme WHERE name LIKE '%ALA%';
```
-------------------------974 sample_num
```sql
SELECT name FROM enzyme WHERE name LIKE '%ALA%';
```
-------------------------975 sample_num
```sql
SELECT Trade_Name, COUNT(*) as num_medicines 
FROM medicine 
GROUP BY Trade_Name;
```
-------------------------976 sample_num
```sql
SELECT Trade_Name, COUNT(name) 
FROM medicine 
GROUP BY Trade_Name;
```
-------------------------977 sample_num
```sql
SELECT university.School, university.Nickname 
FROM university 
ORDER BY university.Founded;
```
-------------------------978 sample_num
```sql
SELECT university.School, university.Nickname 
FROM university 
ORDER BY university.Founded;
```
-------------------------979 sample_num
```sql
SELECT School, Location 
FROM university 
WHERE Affiliation = 'Public';
```
-------------------------980 sample_num
```sql
SELECT School, Location FROM university WHERE Affiliation = 'Public';
```
-------------------------981 sample_num
```sql
SELECT Founded FROM university WHERE Enrollment = (SELECT MAX(Enrollment) FROM university)
```
-------------------------982 sample_num
```sql
SELECT Founded FROM university WHERE Enrollment = (SELECT MAX(Enrollment) FROM university);
```
-------------------------983 sample_num
```sql
SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1;
```
-------------------------984 sample_num
```sql
SELECT Founded FROM university WHERE Affiliation != 'Public' ORDER BY Founded DESC LIMIT 1;
```
-------------------------985 sample_num
```sql
SELECT COUNT(DISTINCT School_ID) FROM basketball_match;
```
-------------------------986 sample_num
```sql
SELECT COUNT(DISTINCT School_ID) 
FROM basketball_match;
```
-------------------------987 sample_num
```sql
SELECT MAX(ACC_Percent) FROM basketball_match;
```
-------------------------988 sample_num
```sql
SELECT MAX(ACC_Percent) FROM basketball_match;
```
-------------------------989 sample_num
```sql
SELECT T2.Primary_conference FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID WHERE T1.ACC_Percent = (SELECT MIN(ACC_Percent) FROM basketball_match)
```
-------------------------990 sample_num
```sql
SELECT T1.Primary_conference 
FROM university AS T1 
JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID 
ORDER BY T2.ACC_Percent 
LIMIT 1;
```
-------------------------991 sample_num
```sql
SELECT basketball_match.Team_Name, basketball_match.ACC_Regular_Season 
FROM basketball_match 
JOIN university ON basketball_match.School_ID = university.School_ID 
WHERE university.Founded = (SELECT MIN(Founded) FROM university);
```
-------------------------992 sample_num
```sql
SELECT basketball_match.Team_Name, basketball_match.ACC_Regular_Season 
FROM basketball_match 
JOIN university ON basketball_match.School_ID = university.School_ID 
WHERE university.Founded = (SELECT MIN(Founded) FROM university);
```
-------------------------993 sample_num
```sql
SELECT university.Location, basketball_match.All_Games 
FROM basketball_match 
JOIN university ON basketball_match.School_ID = university.School_ID 
WHERE basketball_match.Team_Name = 'Clemson';
```
-------------------------994 sample_num
```sql
SELECT T1.All_Games, T2.Location FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID WHERE T2.Nickname = 'Clemson'
```
-------------------------995 sample_num
```sql
SELECT AVG(Enrollment) 
FROM university 
WHERE Founded < 1850;
```
-------------------------996 sample_num
```sql
SELECT AVG(Enrollment) 
FROM university 
WHERE Founded < 1850;
```
-------------------------997 sample_num
```sql
SELECT Enrollment, Primary_conference 
FROM university 
WHERE Founded = (SELECT MIN(Founded) FROM university);
```
-------------------------998 sample_num
```sql
SELECT Enrollment, Primary_conference 
FROM university 
ORDER BY Founded 
LIMIT 1;
```
-------------------------999 sample_num
```sql
SELECT SUM(Enrollment) AS Total_Enrollment, MIN(Enrollment) AS Min_Enrollment FROM university;
```
-------------------------1000 sample_num
```sql
SELECT SUM(Enrollment) AS Total_Enrollment, MIN(Enrollment) AS Min_Enrollment FROM university;
```
-------------------------1001 sample_num
```sql
SELECT Affiliation, SUM(Enrollment) as Total_Enrollment
FROM university
GROUP BY Affiliation;
```
-------------------------1002 sample_num
```sql
SELECT Affiliation, SUM(Enrollment) 
FROM university 
GROUP BY Affiliation;
```
-------------------------1003 sample_num
```sql
SELECT COUNT(*) 
FROM university 
WHERE School_ID NOT IN (SELECT School_ID FROM basketball_match)
```
-------------------------1004 sample_num
```sql
SELECT COUNT(*) 
FROM university 
WHERE School_ID NOT IN (SELECT School_ID FROM basketball_match)
```
-------------------------1005 sample_num
```sql
SELECT School 
FROM university 
WHERE Founded > 1850 OR Affiliation = 'Public'
```
-------------------------1006 sample_num
```sql
SELECT School 
FROM university 
WHERE Founded < 1850 OR Affiliation = 'Public';
```
-------------------------1007 sample_num
```sql
SELECT COUNT(DISTINCT Affiliation) FROM university;
```
-------------------------1008 sample_num
```sql
SELECT COUNT(DISTINCT Affiliation) FROM university;
```
-------------------------1009 sample_num
```sql
SELECT COUNT(*) 
FROM university 
WHERE Location LIKE '%NY%';
```
-------------------------1010 sample_num
```sql
SELECT COUNT(*) FROM university WHERE Location LIKE '%NY%';
```
-------------------------1011 sample_num
```sql
SELECT T1.Team_Name 
FROM basketball_match AS T1 
JOIN university AS T2 
ON T1.School_ID = T2.School_ID 
WHERE T2.Enrollment < (SELECT AVG(Enrollment) FROM university)
```
-------------------------1012 sample_num
```sql
SELECT bm.Team_Name 
FROM basketball_match bm
JOIN university u ON bm.School_ID = u.School_ID 
WHERE u.Enrollment < (SELECT AVG(Enrollment) FROM university);
```
-------------------------1013 sample_num
```sql
SELECT Affiliation, COUNT(School_ID) 
FROM university 
WHERE Enrollment > 20000 
GROUP BY Affiliation;
```
-------------------------1014 sample_num
```sql
SELECT Affiliation, COUNT(*) AS Num_Schools
FROM university
WHERE Enrollment > 20000
GROUP BY Affiliation;
```
-------------------------1015 sample_num
```sql
SELECT Affiliation, SUM(Enrollment) as Total_Enrollment 
FROM university 
WHERE Founded > 1850 
GROUP BY Affiliation;
```
-------------------------1016 sample_num
```sql
SELECT Affiliation, SUM(Enrollment) AS Total_Enrollment
FROM university
WHERE Founded > 1850
GROUP BY Affiliation;
```
-------------------------1017 sample_num
```sql
SELECT MAX(Enrollment) FROM university;
```
-------------------------1018 sample_num
```sql
SELECT MAX(Enrollment) FROM university;
```
-------------------------1019 sample_num
```sql
SELECT * FROM basketball_match;
```
-------------------------1020 sample_num
```sql
SELECT * FROM basketball_match;
```
-------------------------1021 sample_num
```sql
SELECT Team_Name 
FROM basketball_match 
ORDER BY All_Home DESC;
```
-------------------------1022 sample_num
```sql
SELECT Team_Name 
FROM basketball_match 
ORDER BY All_Home DESC;
```
-------------------------1023 sample_num
```sql
SELECT Model_name 
FROM chip_model 
WHERE Launch_year BETWEEN 2002 AND 2004;
```
-------------------------1024 sample_num
```sql
SELECT Model_name, MIN(RAM_MiB) 
FROM chip_model;
```
However, to get the specific model with the least amount of RAM, you would use:
```sql
SELECT Model_name, RAM_MiB 
FROM chip_model
WHERE RAM_MiB = (SELECT MIN(RAM_MiB) FROM chip_model);
```
-------------------------1025 sample_num
```sql
SELECT chip_model.Model_name, screen_mode.Graphics_mode 
FROM phone 
JOIN chip_model ON phone.chip_model = chip_model.Model_name 
JOIN screen_mode ON phone.screen_mode = screen_mode.Graphics_mode 
WHERE phone.Hardware_Model_name = 'LG-P760';
```
-------------------------1026 sample_num
```sql
SELECT COUNT(*) FROM phone WHERE Company_name = 'Nokia Corporation';
```
-------------------------1027 sample_num
```sql
SELECT MAX(T1.RAM_MiB) AS Max_RAM, MIN(T1.RAM_MiB) AS Min_RAM 
FROM chip_model AS T1 
JOIN phone AS T2 ON T1.Model_name = T2.chip_model 
WHERE T2.Company_name = 'Nokia Corporation';
```
-------------------------1028 sample_num
```sql
SELECT AVG(T1.ROM_MiB) 
FROM chip_model AS T1 
JOIN phone AS T2 ON T1.Model_name = T2.chip_model 
WHERE T2.Company_name = 'Nokia Corporation';
```
-------------------------1029 sample_num
```sql
SELECT Hardware_Model_name, Company_name 
FROM phone 
JOIN chip_model ON phone.chip_model = chip_model.Model_name 
WHERE chip_model.Launch_year = 2002 OR chip_model.RAM_MiB > 32;
```
-------------------------1030 sample_num
```sql
SELECT Hardware_Model_name, Company_name 
FROM phone 
WHERE Accreditation_type LIKE '%Full%';
```
-------------------------1031 sample_num
```sql
SELECT T2.Char_cells, T2.Pixels, T2.Hardware_colours 
FROM phone AS T1 
JOIN screen_mode AS T2 
ON T1.screen_mode = T2.Graphics_mode 
WHERE T1.Hardware_Model_name = 'LG-P760';
```
-------------------------1032 sample_num
```sql
SELECT Hardware_Model_name, Company_name 
FROM phone 
JOIN screen_mode ON phone.screen_mode = screen_mode.Graphics_mode 
WHERE screen_mode.Type = 'Graphics';
```
-------------------------1033 sample_num
```sql
SELECT Company_name, COUNT(Hardware_Model_name) AS Model_Count
FROM phone
GROUP BY Company_name
ORDER BY Model_Count ASC
LIMIT 1;
```
-------------------------1034 sample_num
```sql
SELECT Company_name 
FROM phone 
GROUP BY Company_name 
HAVING COUNT(DISTINCT Hardware_Model_name) > 1;
```
-------------------------1035 sample_num
```sql
SELECT MAX(used_kb) AS Maximum, MIN(used_kb) AS Minimum, AVG(used_kb) AS Average 
FROM screen_mode;
```
-------------------------1036 sample_num
```sql
SELECT p.Hardware_Model_name 
FROM phone p
JOIN chip_model cm ON p.chip_model = cm.Model_name
WHERE cm.Launch_year = 2002
ORDER BY cm.RAM_MiB DESC
LIMIT 1;
```
-------------------------1037 sample_num
```sql
SELECT T1.WiFi, T3.Type 
FROM chip_model AS T1 
JOIN phone AS T2 ON T1.Model_name = T2.chip_model 
JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode 
WHERE T2.Hardware_Model_name = 'LG-P760';
```
-------------------------1038 sample_num
```sql
SELECT T1.Hardware_Model_name 
FROM phone AS T1 
JOIN screen_mode AS T2 ON T1.screen_mode = T2.Graphics_mode 
JOIN chip_model AS T3 ON T1.chip_model = T3.Model_name 
WHERE (T2.Type = 'Text') OR (T3.RAM_MiB > 32)
``` 
However, for the correct execution, the join conditions might need adjustment based on the actual relationships between tables. The provided schema suggests a many-to-many relationship which is resolved through the use of the table 'phone'. Therefore, the correct representation of the entities in the 'phone' table (chip_model and screen_mode) should be confirmed.
```
-------------------------1039 sample_num
```sql
SELECT Hardware_Model_name 
FROM phone 
WHERE Company_name = 'Nokia Corporation' 
OR screen_mode IN (SELECT Graphics_mode FROM screen_mode WHERE Type = 'Graphics');
```
-------------------------1040 sample_num
```sql
SELECT Hardware_Model_name 
FROM phone 
WHERE Company_name = 'Nokia Corporation' 
AND screen_mode NOT IN (SELECT Graphics_mode FROM screen_mode WHERE Type = 'Text');
```
-------------------------1041 sample_num
```sql
SELECT T1.Hardware_Model_name, T1.Company_name 
FROM phone AS T1 
JOIN screen_mode AS T2 
ON T1.screen_mode = T2.Graphics_mode 
WHERE T2.used_kb BETWEEN 10 AND 15;
```
-------------------------1042 sample_num
```sql
SELECT Accreditation_type, COUNT(*) 
FROM phone 
GROUP BY Accreditation_type;
```
-------------------------1043 sample_num
```sql
SELECT Accreditation_type, COUNT(*) 
FROM phone 
GROUP BY Accreditation_type;
```
-------------------------1044 sample_num
```sql
SELECT Accreditation_level 
FROM phone 
GROUP BY Accreditation_level 
HAVING COUNT(Hardware_Model_name) > 3;
```
-------------------------1045 sample_num
```sql
SELECT * FROM chip_model;
```
-------------------------1046 sample_num
```sql
SELECT COUNT(*) FROM chip_model WHERE WiFi = 0;
```
-------------------------1047 sample_num
```sql
SELECT COUNT(*) FROM chip_model WHERE WiFi = 0;
```
-------------------------1048 sample_num
```sql
SELECT Model_name
FROM chip_model
ORDER BY Launch_year;
```
-------------------------1049 sample_num
```sql
SELECT AVG(RAM_MiB) 
FROM chip_model 
WHERE Model_name NOT IN (SELECT chip_model FROM phone)
```
-------------------------1050 sample_num
```sql
SELECT Model_name 
FROM chip_model 
WHERE Model_name NOT IN (
    SELECT chip_model 
    FROM phone 
    WHERE Accreditation_type = 'full'
)
```
-------------------------1051 sample_num
```sql
SELECT T2.Pixels 
FROM phone AS T1 
JOIN screen_mode AS T2 ON T1.screen_mode = T2.Graphics_mode 
WHERE T1.Accreditation_type = 'Full' 
INTERSECT 
SELECT T2.Pixels 
FROM phone AS T1 
JOIN screen_mode AS T2 ON T1.screen_mode = T2.Graphics_mode 
WHERE T1.Accreditation_type = 'Provisional'
```
-------------------------1052 sample_num
```sql
SELECT COUNT(*) FROM country;
```
-------------------------1053 sample_num
```sql
SELECT COUNT(*) FROM country;
```
-------------------------1054 sample_num
```sql
SELECT Country_name, Capital FROM country;
```
-------------------------1055 sample_num
```sql
SELECT Country_name, Capital FROM country;
```
-------------------------1056 sample_num
```sql
SELECT Official_native_language FROM country WHERE Official_native_language LIKE '%English%';
```
-------------------------1057 sample_num
```sql
SELECT Official_native_language FROM country WHERE Official_native_language LIKE '%English%';
```
-------------------------1058 sample_num
```sql
SELECT DISTINCT Position FROM match_season;
```
-------------------------1059 sample_num
```sql
SELECT DISTINCT Position FROM match_season;
```
-------------------------1060 sample_num
```sql
SELECT Player 
FROM match_season 
WHERE College = 'UCLA';
```
-------------------------1061 sample_num
```sql
SELECT Player 
FROM match_season 
WHERE College = 'UCLA';
```
-------------------------1062 sample_num
```sql
SELECT DISTINCT Position 
FROM match_season 
WHERE College = 'UCLA' OR College = 'Duke';
```
-------------------------1063 sample_num
```sql
SELECT DISTINCT Position 
FROM match_season 
WHERE College = 'UCLA' OR College = 'Duke';
```
-------------------------1064 sample_num
```sql
SELECT Draft_Pick_Number, Draft_Class 
FROM match_season 
WHERE Position = 'Defender';
```
-------------------------1065 sample_num
```sql
SELECT Draft_Pick_Number, Draft_Class 
FROM match_season 
WHERE Position = 'Defender';
```
-------------------------1066 sample_num
```sql
SELECT COUNT(DISTINCT Team) FROM match_season;
```
-------------------------1067 sample_num
```sql
SELECT COUNT(DISTINCT Team) FROM match_season;
```
-------------------------1068 sample_num
```sql
SELECT player.Player, Years_Played 
FROM player;
```
-------------------------1069 sample_num
```sql
SELECT Player, Years_Played 
FROM player 
GROUP BY Player;
```
-------------------------1070 sample_num
```sql
SELECT Name FROM team;
```
-------------------------1071 sample_num
```sql
SELECT Name FROM team;
```
-------------------------1072 sample_num
```sql
SELECT match_season.Season, match_season.Player, country.Country_name 
FROM match_season 
JOIN country ON match_season.Country = country.Country_id;
```
-------------------------1073 sample_num
```sql
SELECT player.Player, match_season.Season, country.Country_name 
FROM player 
JOIN match_season ON player.Player_ID = match_season.Player 
JOIN country ON match_season.Country = country.Country_id;
```
-------------------------1074 sample_num
```sql
SELECT player.Player 
FROM player 
JOIN country ON player.Team = country.Country_id 
WHERE country.Country_name = 'Indonesia';
```
-------------------------1075 sample_num
```sql
SELECT player.Player 
FROM player 
JOIN country ON player.Team = country.Country_id 
WHERE country.Country_name = 'Indonesia';
```
-------------------------1076 sample_num
```sql
SELECT DISTINCT m.position 
FROM match_season m
JOIN country c ON m.country = c.country_id 
WHERE c.capital = 'Dublin';
```
-------------------------1077 sample_num
```sql
SELECT DISTINCT match_season.Position 
FROM match_season 
JOIN country ON match_season.Country = country.Country_id 
WHERE country.Capital = 'Dublin';
```
-------------------------1078 sample_num
```sql
SELECT DISTINCT c.Official_native_language 
FROM country c
JOIN match_season ms ON c.Country_id = ms.Country
WHERE ms.College IN ('Maryland', 'Duke');
```
-------------------------1079 sample_num
```sql
SELECT DISTINCT c.Official_native_language 
FROM country AS c
JOIN match_season AS ms ON c.Country_id = ms.Country 
WHERE ms.College IN ('Maryland', 'Duke');
```
-------------------------1080 sample_num
```sql
SELECT COUNT(DISTINCT T3.Official_native_language) 
FROM match_season AS T1 
JOIN player AS T2 ON T1.Player = T2.Player_ID 
JOIN country AS T3 ON T1.Country = T3.Country_id 
WHERE T1.Position = 'Defender';
```
-------------------------1081 sample_num
```sql
SELECT COUNT(DISTINCT c.Official_native_language) 
FROM country c
JOIN match_season ms ON c.Country_id = ms.Country
WHERE ms.Position = 'Defender';
```
-------------------------1082 sample_num
```sql
SELECT match_season.Season, match_season.Player, team.Name 
FROM match_season 
JOIN team ON match_season.Team = team.Team_id;
```
-------------------------1083 sample_num
```sql
SELECT DISTINCT player.Player, match_season.Season, team.Name 
FROM player 
JOIN match_season ON player.Player_ID = match_season.Player 
JOIN team ON match_season.Team = team.Team_id;
```
-------------------------1084 sample_num
```sql
SELECT match_season.Position 
FROM match_season 
JOIN team ON match_season.Team = team.Team_id 
WHERE team.Name = "Ryley Goldner";
```
-------------------------1085 sample_num
```sql
SELECT match_season.Position 
FROM match_season 
JOIN team ON match_season.Team = team.Team_id 
WHERE team.Name = 'Ryley Goldner';
```
-------------------------1086 sample_num
```sql
SELECT COUNT(DISTINCT T3.College) 
FROM team AS T1 
JOIN match_season AS T2 ON T1.Team_id = T2.Team 
JOIN player AS T3 ON T2.Player = T3.Player_ID 
WHERE T1.Name = 'Columbus Crew';
```
-------------------------1087 sample_num
```sql
SELECT COUNT(DISTINCT T3.College) 
FROM team AS T1 
JOIN match_season AS T2 ON T1.Team_id = T2.Team 
JOIN player AS T3 ON T3.Player_ID = T2.Player 
WHERE T1.Name = 'Columbus Crew'
```
-------------------------1088 sample_num
```sql
SELECT player.Player, player.Years_Played 
FROM player 
JOIN team ON player.Team = team.Team_id 
WHERE team.Name = 'Columbus Crew';
```
-------------------------1089 sample_num
```sql
SELECT player.Player, Years_Played 
FROM player 
JOIN team ON player.Team = team.Team_id 
WHERE team.Name = 'Columbus Crew';
```
Note: This assumes that the 'Team' column in the 'player' table contains a foreign key to the 'Team_id' in the 'team' table. If this is not the case, you may need to adjust the join condition accordingly. Also, if 'Years_Played' is not specific to the 'Columbus Crew', you may want to adjust the query to calculate the years played for this team specifically.
-------------------------1090 sample_num
```sql
SELECT Position, COUNT(*) AS NumberOfPlayers
FROM match_season
GROUP BY Position;
```
-------------------------1091 sample_num
```sql
SELECT Position, COUNT(*) AS Num_Players
FROM match_season
GROUP BY Position;
```
-------------------------1092 sample_num
```sql
SELECT country.Country_name, COUNT(player.Player_ID) as Num_of_Players
FROM country
JOIN match_season ON country.Country_id = match_season.Country
JOIN player ON match_season.Player = player.Player_ID
GROUP BY country.Country_name;
```
-------------------------1093 sample_num
```sql
SELECT Country, COUNT(Player) 
FROM match_season 
GROUP BY Country;
```
-------------------------1094 sample_num
```sql
SELECT Player 
FROM match_season 
ORDER BY College ASC;
```
-------------------------1095 sample_num
```sql
SELECT player.Player, match_season.College 
FROM player 
JOIN match_season ON player.Player_ID = match_season.Player 
ORDER BY match_season.College ASC;
```
-------------------------1096 sample_num
```sql
SELECT Position, COUNT(*) AS Commonality
FROM match_season
GROUP BY Position
ORDER BY Commonality DESC
LIMIT 1;
```
-------------------------1097 sample_num
```sql
SELECT Position, COUNT(*) AS count 
FROM match_season 
GROUP BY Position 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------1098 sample_num
```sql
SELECT College, COUNT(*) AS Frequency 
FROM match_season 
GROUP BY College 
ORDER BY Frequency DESC 
LIMIT 3;
```
-------------------------1099 sample_num
```sql
SELECT College 
FROM match_season 
GROUP BY College 
ORDER BY COUNT(Player) DESC 
LIMIT 3;
```
-------------------------1100 sample_num
```sql
SELECT College 
FROM match_season 
GROUP BY College 
HAVING COUNT(Player) >= 2;
```
-------------------------1101 sample_num
```sql
SELECT College 
FROM match_season 
GROUP BY College 
HAVING COUNT(Player) >= 2;
```
-------------------------1102 sample_num
```sql
SELECT College 
FROM match_season 
GROUP BY College 
HAVING COUNT(Player) >= 2 
ORDER BY College DESC;
```
-------------------------1103 sample_num
```sql
SELECT College 
FROM match_season 
GROUP BY College 
HAVING COUNT(Player) >= 2 
ORDER BY College DESC;
```
-------------------------1104 sample_num
```sql
SELECT team.Name 
FROM team 
LEFT JOIN match_season ON team.Team_id = match_season.Team 
WHERE match_season.Team IS NULL;
```
-------------------------1105 sample_num
```sql
SELECT team.Name 
FROM team 
LEFT JOIN match_season ON team.Team_id = match_season.Team 
WHERE match_season.Team IS NULL;
```
-------------------------1106 sample_num
```sql
SELECT c.Country_name 
FROM country c 
JOIN match_season ms ON c.Country_id = ms.Country 
WHERE ms.Position = 'Forward' 
INTERSECT 
SELECT c.Country_name 
FROM country c 
JOIN match_season ms ON c.Country_id = ms.Country 
WHERE ms.Position = 'Defender'
```
-------------------------1107 sample_num
```sql
SELECT DISTINCT c.Country_name 
FROM country c
JOIN match_season ms ON c.Country_id = ms.Country
WHERE ms.Position = 'Forward' 
INTERSECT 
SELECT DISTINCT c.Country_name 
FROM country c
JOIN match_season ms ON c.Country_id = ms.Country
WHERE ms.Position = 'Defender';
```
-------------------------1108 sample_num
```sql
SELECT College 
FROM match_season 
WHERE Position = 'midfielder' 
INTERSECT 
SELECT College 
FROM match_season 
WHERE Position = 'defender'
```
-------------------------1109 sample_num
```sql
SELECT College 
FROM match_season 
WHERE Position = 'Midfielder' 
INTERSECT 
SELECT College 
FROM match_season 
WHERE Position = 'Defender'
```
-------------------------1110 sample_num
```sql
SELECT COUNT(*) FROM climber;
```
-------------------------1111 sample_num
```sql
SELECT COUNT(*) FROM climber;
```
-------------------------1112 sample_num
```sql
SELECT Name 
FROM climber 
ORDER BY Points DESC;
```
-------------------------1113 sample_num
```sql
SELECT Name 
FROM climber 
ORDER BY Points DESC;
```
-------------------------1114 sample_num
```sql
SELECT Name 
FROM climber 
WHERE Country <> 'Switzerland';
```
-------------------------1115 sample_num
```sql
SELECT Name 
FROM climber 
WHERE Country <> 'Switzerland';
```
-------------------------1116 sample_num
```sql
SELECT MAX(Points) 
FROM climber 
WHERE Country = 'United Kingdom';
```
-------------------------1117 sample_num
```sql
SELECT MAX(Points) 
FROM climber 
WHERE Country = 'United Kingdom';
```
-------------------------1118 sample_num
```sql
SELECT COUNT(DISTINCT Country) FROM climber;
```
-------------------------1119 sample_num
```sql
SELECT COUNT(DISTINCT Country) FROM climber;
```
-------------------------1120 sample_num
```sql
SELECT Name FROM mountain ORDER BY Name ASC;
```
-------------------------1121 sample_num
```sql
SELECT Name FROM mountain ORDER BY Name ASC;
```
-------------------------1122 sample_num
```sql
SELECT Country FROM mountain WHERE Height > 5000;
```
-------------------------1123 sample_num
```sql
SELECT Country FROM mountain WHERE Height > 5000;
```
-------------------------1124 sample_num
```sql
SELECT Name FROM mountain WHERE Height = (SELECT MAX(Height) FROM mountain);
```
-------------------------1125 sample_num
```sql
SELECT Name FROM mountain WHERE Height = (SELECT MAX(Height) FROM mountain);
```
-------------------------1126 sample_num
```sql
SELECT DISTINCT Range 
FROM mountain 
WHERE Prominence IN (SELECT TOP 3 Prominence FROM mountain ORDER BY Prominence DESC)
```
-------------------------1127 sample_num
```sql
SELECT DISTINCT Range 
FROM mountain 
WHERE Mountain_ID IN (SELECT Mountain_ID 
                      FROM mountain 
                      ORDER BY Prominence DESC 
                      LIMIT 3)
```
-------------------------1128 sample_num
```sql
SELECT climber.Name AS Climber_Name, mountain.Name AS Mountain_Name 
FROM climber 
JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID;
```
-------------------------1129 sample_num
```sql
SELECT climber.Name AS Climber_Name, mountain.Name AS Mountain_Name 
FROM climber 
JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID;
```
-------------------------1130 sample_num
```sql
SELECT climber.Name, mountain.Height 
FROM climber 
JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID;
```
-------------------------1131 sample_num
```sql
SELECT climber.Name, mountain.Height 
FROM climber 
INNER JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID;
```
-------------------------1132 sample_num
```sql
SELECT m.Height 
FROM mountain m
JOIN climber c ON m.Mountain_ID = c.Mountain_ID 
WHERE c.Points = (SELECT MAX(Points) FROM climber);
```
-------------------------1133 sample_num
```sql
SELECT T1.Height FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Points = (SELECT MAX(Points) FROM climber)
```
-------------------------1134 sample_num
```sql
SELECT DISTINCT m.Name 
FROM mountain m
JOIN climber c ON m.Mountain_ID = c.Mountain_ID
WHERE c.Country = 'West Germany';
```
-------------------------1135 sample_num
```sql
SELECT DISTINCT m.Name 
FROM mountain m
JOIN climber c ON m.Mountain_ID = c.Mountain_ID
WHERE c.Country = 'West Germany';
```
-------------------------1136 sample_num
```sql
SELECT climber.Time 
FROM climber 
JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID 
WHERE mountain.Country = 'Uganda';
```
-------------------------1137 sample_num
```sql
SELECT T1.Time 
FROM climber AS T1 
JOIN mountain AS T2 
ON T1.Mountain_ID = T2.Mountain_ID 
WHERE T2.Country = 'Uganda'
```
-------------------------1138 sample_num
```sql
SELECT Country, COUNT(*) AS Num_Climbers 
FROM climber 
GROUP BY Country;
```
-------------------------1139 sample_num
```sql
SELECT Country, COUNT(*) 
FROM climber 
GROUP BY Country;
```
-------------------------1140 sample_num
```sql
SELECT Country 
FROM mountain 
GROUP BY Country 
HAVING COUNT(Mountain_ID) > 1;
```
-------------------------1141 sample_num
```sql
SELECT Country 
FROM mountain 
GROUP BY Country 
HAVING COUNT(Mountain_ID) > 1;
```
-------------------------1142 sample_num
```sql
SELECT Name 
FROM mountain 
WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)
```
-------------------------1143 sample_num
```sql
SELECT Name 
FROM mountain 
WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)
```
-------------------------1144 sample_num
```sql
SELECT DISTINCT Country 
FROM climbing.mountain 
WHERE Height > 5600 OR Height < 5200;
```
-------------------------1145 sample_num
```sql
SELECT Country 
FROM mountain 
WHERE Height > 5600 
INTERSECT 
SELECT Country 
FROM mountain 
WHERE Height < 5200;
```
-------------------------1146 sample_num
```sql
SELECT Range 
FROM mountain 
GROUP BY Range 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------1147 sample_num
```sql
SELECT Range, COUNT(*) as mountain_count 
FROM climbing.mountain 
GROUP BY Range 
ORDER BY mountain_count DESC 
LIMIT 1;
```
-------------------------1148 sample_num
```sql
SELECT Name 
FROM mountain 
WHERE Height > 5000 OR Prominence > 1000;
```
-------------------------1149 sample_num
```sql
SELECT Name 
FROM mountain 
WHERE Height > 5000 OR Prominence > 1000;
```
-------------------------1150 sample_num
```sql
SELECT COUNT(*) FROM body_builder;
```
-------------------------1151 sample_num
```sql
SELECT Total 
FROM body_builder 
ORDER BY Total ASC;
```
-------------------------1152 sample_num
```sql
SELECT bb.Snatch, bb.Clean_Jerk 
FROM body_builder bb 
ORDER BY bb.Snatch ASC;
```
-------------------------1153 sample_num
```sql
SELECT AVG(Snatch) FROM body_builder;
```
-------------------------1154 sample_num
```sql
SELECT Clean_Jerk 
FROM body_builder 
WHERE Total = (SELECT MAX(Total) FROM body_builder);
```
However, this will not necessarily return a unique result if there is more than one body builder with the same highest total score. A better query would be:
```sql
SELECT b1.Clean_Jerk 
FROM body_builder b1 
WHERE b1.Total = (
    SELECT MAX(b2.Total)
    FROM body_builder b2
);
```
-------------------------1155 sample_num
```sql
SELECT Birth_Date 
FROM people 
ORDER BY Height ASC;
```
-------------------------1156 sample_num
```sql
SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM body_builder);
```
-------------------------1157 sample_num
```sql
SELECT p.Name
FROM people p
JOIN body_builder bb ON p.People_ID = bb.People_ID
WHERE bb.Total > 300;
```
-------------------------1158 sample_num
```sql
SELECT p.Name 
FROM people p
JOIN body_builder bb ON p.People_ID = bb.People_ID 
WHERE p.Weight = (SELECT MAX(Weight) FROM people);
```
-------------------------1159 sample_num
```sql
SELECT p.Birth_Date, p.Birth_Place 
FROM people p
JOIN body_builder bb ON p.People_ID = bb.People_ID 
WHERE bb.Total = (SELECT MAX(Total) FROM body_builder);
```
-------------------------1160 sample_num
```sql
SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total < 315;
```
-------------------------1161 sample_num
```sql
SELECT AVG(T1.Total) 
FROM body_builder AS T1 
JOIN people AS T2 ON T1.People_ID = T2.People_ID 
WHERE T2.Height > 200;
```
-------------------------1162 sample_num
```sql
SELECT p.Name 
FROM people p
JOIN body_builder bb ON p.People_ID = bb.People_ID 
ORDER BY bb.Total DESC;
```
-------------------------1163 sample_num
```sql
SELECT Birth_Place, COUNT(*) 
FROM people 
GROUP BY Birth_Place;
```
-------------------------1164 sample_num
```sql
SELECT Birth_Place, COUNT(*) as count 
FROM people 
GROUP BY Birth_Place 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------1165 sample_num
```sql
SELECT Birth_Place 
FROM people 
GROUP BY Birth_Place 
HAVING COUNT(People_ID) >= 2;
```
-------------------------1166 sample_num
```sql
SELECT Height, Weight FROM people ORDER BY Height DESC;
```
-------------------------1167 sample_num
```sql
SELECT body_builder.*, people.Name, people.Height, people.Weight, people.Birth_Date, people.Birth_Place 
FROM body_builder 
JOIN people ON body_builder.People_ID = people.People_ID;
```
-------------------------1168 sample_num
```sql
SELECT Name, Birth_Place 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM body_builder);
```
-------------------------1169 sample_num
```sql
SELECT COUNT(DISTINCT Birth_Place) FROM people;
```
-------------------------1170 sample_num
```sql
SELECT COUNT(*) FROM people WHERE People_ID NOT IN (SELECT People_ID FROM body_builder)
```
-------------------------1171 sample_num
```sql
SELECT p.Weight 
FROM people p 
JOIN body_builder bb ON p.People_ID = bb.People_ID 
WHERE bb.Snatch > 140 OR p.Height > 200;
```
-------------------------1172 sample_num
```sql
SELECT T1.Total 
FROM body_builder AS T1 
JOIN people AS T2 
ON T1.People_ID = T2.People_ID 
WHERE T2.Birth_Date LIKE '%January%';
```
-------------------------1173 sample_num
```sql
SELECT MIN(Snatch) FROM body_builder;
```
-------------------------1174 sample_num
```sql
SELECT COUNT(*) FROM election
```
-------------------------1175 sample_num
```sql
SELECT Votes FROM election ORDER BY Votes DESC;
```
-------------------------1176 sample_num
```sql
SELECT Date, Vote_Percent FROM election;
```
-------------------------1177 sample_num
```sql
SELECT MIN(Vote_Percent) AS Min_Vote_Percent, MAX(Vote_Percent) AS Max_Vote_Percent FROM election;
```
-------------------------1178 sample_num
```sql
SELECT Name, Party FROM representative;
```
-------------------------1179 sample_num
```sql
SELECT Name 
FROM representative 
WHERE Party != 'Republican';
```
-------------------------1180 sample_num
```sql
SELECT Lifespan 
FROM representative 
WHERE State IN ('New York', 'Indiana');
```
-------------------------1181 sample_num
```sql
SELECT representative.Name, election.Date 
FROM election 
JOIN representative ON election.Representative_ID = representative.Representative_ID;
```
-------------------------1182 sample_num
```sql
SELECT r.Name
FROM representative r
JOIN election e ON r.Representative_ID = e.Representative_ID
WHERE e.Votes > 10000;
```
-------------------------1183 sample_num
```sql
SELECT r.Name 
FROM election e 
JOIN representative r ON e.Representative_ID = r.Representative_ID 
ORDER BY e.Votes DESC;
```
-------------------------1184 sample_num
```sql
SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.Votes = (SELECT MIN(Votes) FROM election)
```
-------------------------1185 sample_num
```sql
SELECT r.Lifespan
FROM election e
JOIN representative r ON e.Representative_ID = r.Representative_ID
ORDER BY e.Vote_Percent DESC;
```
-------------------------1186 sample_num
```sql
SELECT AVG(e.Votes) 
FROM election e
JOIN representative r ON e.Representative_ID = r.Representative_ID
WHERE r.Party = 'Republican';
```
-------------------------1187 sample_num
```sql
SELECT Party, COUNT(*) 
FROM representative 
GROUP BY Party;
```
-------------------------1188 sample_num
```sql
SELECT Party 
FROM representative 
GROUP BY Party 
ORDER BY COUNT(Representative_ID) DESC 
LIMIT 1;
```
-------------------------1189 sample_num
```sql
SELECT Party 
FROM representative 
GROUP BY Party 
HAVING COUNT(*) >= 3;
```
-------------------------1190 sample_num
```sql
SELECT State 
FROM representative 
GROUP BY State 
HAVING COUNT(Representative_ID) >= 2;
```
-------------------------1191 sample_num
```sql
SELECT Name 
FROM representative 
WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)
```
-------------------------1192 sample_num
```sql
SELECT Party 
FROM representative 
WHERE State = 'New York' 
INTERSECT 
SELECT Party 
FROM representative 
WHERE State = 'Pennsylvania'
```
-------------------------1193 sample_num
```sql
SELECT COUNT(DISTINCT Party) FROM representative;
```
-------------------------1194 sample_num
```sql
SELECT COUNT(*) FROM Apartment_Bookings;
```
-------------------------1195 sample_num
```sql
SELECT COUNT(*) FROM Apartment_Bookings;
```
-------------------------1196 sample_num
```sql
SELECT booking_start_date, booking_end_date FROM Apartment_Bookings;
```
-------------------------1197 sample_num
```sql
SELECT booking_start_date, booking_end_date 
FROM Apartment_Bookings;
```
-------------------------1198 sample_num
```sql
SELECT DISTINCT building_description FROM Apartment_Buildings;
```
-------------------------1199 sample_num
```sql
SELECT DISTINCT building_description FROM Apartment_Buildings;
```
-------------------------1200 sample_num
```sql
SELECT building_short_name 
FROM Apartment_Buildings 
WHERE building_manager = 'Emma';
```
-------------------------1201 sample_num
```sql
SELECT building_short_name 
FROM Apartment_Buildings 
WHERE building_manager = 'Emma';
```
-------------------------1202 sample_num
```sql
SELECT building_address, building_phone 
FROM Apartment_Buildings 
WHERE building_manager = 'Brenden';
```
-------------------------1203 sample_num
```sql
SELECT building_address, building_phone 
FROM Apartment_Buildings 
WHERE building_manager = 'Brenden';
```
-------------------------1204 sample_num
```sql
SELECT building_full_name 
FROM Apartment_Buildings 
WHERE building_full_name LIKE '%court%';
```
-------------------------1205 sample_num
```sql
SELECT building_full_name 
FROM Apartment_Buildings 
WHERE building_full_name LIKE '%court%';
```
-------------------------1206 sample_num
```sql
SELECT MIN(bathroom_count) AS min_bathrooms, MAX(bathroom_count) AS max_bathrooms 
FROM Apartments;
```
-------------------------1207 sample_num
```sql
SELECT MIN(bathroom_count) AS min_bathroom_count, MAX(bathroom_count) AS max_bathroom_count FROM Apartments;
```
-------------------------1208 sample_num
```sql
SELECT AVG(bedroom_count) FROM Apartments;
```
-------------------------1209 sample_num
```sql
SELECT AVG(bedroom_count) 
FROM Apartments;
```
-------------------------1210 sample_num
```sql
SELECT apt_number, room_count 
FROM Apartments;
```
-------------------------1211 sample_num
```sql
SELECT apt_number, room_count 
FROM Apartments;
```
-------------------------1212 sample_num
```sql
SELECT AVG(room_count) 
FROM Apartments 
WHERE apt_type_code = 'Studio';
```
-------------------------1213 sample_num
```sql
SELECT AVG(room_count) 
FROM Apartments 
WHERE apt_type_code = 'Studio';
```
-------------------------1214 sample_num
```sql
SELECT apt_number 
FROM Apartments 
WHERE apt_type_code = 'Flat';
```
-------------------------1215 sample_num
```sql
SELECT apt_number 
FROM Apartments 
WHERE apt_type_code = 'Flat';
```
-------------------------1216 sample_num
```sql
SELECT guest_first_name, guest_last_name FROM Guests;
```
-------------------------1217 sample_num
```sql
SELECT guest_first_name, guest_last_name FROM Guests;
```
-------------------------1218 sample_num
```sql
SELECT date_of_birth 
FROM Guests 
WHERE gender_code = 'Male';
```
-------------------------1219 sample_num
```sql
SELECT Guests.date_of_birth 
FROM Guests 
WHERE Guests.gender_code = 'Male';
```
-------------------------1220 sample_num
```sql
SELECT A.apt_number, AB.booking_start_date, AB.booking_end_date 
FROM Apartments A 
JOIN Apartment_Bookings AB ON A.apt_id = AB.apt_id;
```
-------------------------1221 sample_num
```sql
SELECT A.apt_number, AB.booking_start_date, AB.booking_end_date 
FROM Apartments A 
JOIN Apartment_Bookings AB ON A.apt_id = AB.apt_id;
```
-------------------------1222 sample_num
```sql
SELECT T1.booking_start_date, T1.booking_end_date 
FROM Apartment_Bookings AS T1 
JOIN Apartments AS T2 
ON T1.apt_id = T2.apt_id 
WHERE T2.apt_type_code = 'Duplex';
```
-------------------------1223 sample_num
```sql
SELECT ab.booking_start_date, ab.booking_end_date 
FROM Apartment_Bookings ab 
JOIN Apartments a ON ab.apt_id = a.apt_id 
WHERE a.apt_type_code = 'Duplex';
```
-------------------------1224 sample_num
```sql
SELECT AB.booking_start_date, AB.booking_end_date 
FROM Apartment_Bookings AB 
JOIN Apartments A ON AB.apt_id = A.apt_id 
WHERE A.bedroom_count > 2;
```
-------------------------1225 sample_num
```sql
SELECT ab.booking_start_date, ab.booking_end_date 
FROM Apartment_Bookings ab 
JOIN Apartments a ON ab.apt_id = a.apt_id 
WHERE a.bedroom_count > 2;
```
-------------------------1226 sample_num
```sql
SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = 'Suite 634'
```
-------------------------1227 sample_num
```sql
SELECT booking_status_code 
FROM Apartment_Bookings 
JOIN Apartments ON Apartment_Bookings.apt_id = Apartments.apt_id 
WHERE Apartments.apt_number = 'Suite 634';
```
-------------------------1228 sample_num
```sql
SELECT DISTINCT A.apt_number 
FROM Apartments A 
JOIN Apartment_Bookings AB ON A.apt_id = AB.apt_id 
WHERE AB.booking_status_code = 'Confirmed';
```
-------------------------1229 sample_num
```sql
SELECT Apartments.apt_number 
FROM Apartments 
JOIN Apartment_Bookings ON Apartments.apt_id = Apartment_Bookings.apt_id 
WHERE Apartment_Bookings.booking_status_code = 'Confirmed';
```
-------------------------1230 sample_num
```sql
SELECT AVG(A.room_count) 
FROM Apartments A
JOIN Apartment_Bookings AB ON A/apt_id = AB.apt_id
WHERE AB.booking_status_code = 'Provisional';
```
-------------------------1231 sample_num
```sql
SELECT AVG(A.room_count) 
FROM Apartments A
JOIN Apartment_Bookings AB ON A/apt_id = AB.apt_id
WHERE AB.booking_status_code = 'Provisional';
```
-------------------------1232 sample_num
```sql
SELECT Guests.guest_first_name, Apartment_Bookings.booking_start_date, Apartment_Bookings.booking_end_date 
FROM Apartment_Bookings 
JOIN Guests ON Apartment_Bookings.guest_id = Guests.guest_id;
```
-------------------------1233 sample_num
```sql
SELECT G.guest_first_name, AB.booking_start_date, AB.booking_end_date 
FROM Apartment_Bookings AB 
JOIN Guests G ON AB.guest_id = G.guest_id;
```
-------------------------1234 sample_num
```sql
SELECT ab.booking_start_date, ab.booking_end_date 
FROM Apartment_Bookings ab 
JOIN Guests g ON ab.guest_id = g.guest_id 
WHERE g.gender_code = 'Female';
```
-------------------------1235 sample_num
```sql
SELECT ab.booking_start_date, ab.booking_end_date 
FROM Apartment_Bookings ab 
JOIN Guests g ON ab.guest_id = g.guest_id 
WHERE g.gender_code = 'Female';
```
-------------------------1236 sample_num
```sql
SELECT Guests.guest_first_name, Guests.guest_last_name 
FROM Guests
JOIN Apartment_Bookings ON Guests.guest_id = Apartment_Bookings.guest_id
WHERE Apartment_Bookings.booking_status_code = 'Confirmed';
```
-------------------------1237 sample_num
```sql
SELECT Guests.guest_first_name, Guests.guest_last_name 
FROM Guests 
JOIN Apartment_Bookings ON Guests.guest_id = Apartment_Bookings.guest_id 
WHERE Apartment_Bookings.booking_status_code = 'Confirmed';
```
-------------------------1238 sample_num
```sql
SELECT T2.facility_code 
FROM Apartments AS T1 
JOIN Apartment_Facilities AS T2 ON T1.apt_id = T2.apt_id 
WHERE T1.bedroom_count > 4;
```
-------------------------1239 sample_num
```sql
SELECT T2.facility_code 
FROM Apartments AS T1 
JOIN Apartment_Facilities AS T2 ON T1.apt_id = T2.apt_id 
WHERE T1.bedroom_count > 4;
```
-------------------------1240 sample_num
```sql
SELECT SUM(A.room_count) 
FROM Apartments A
JOIN Apartment_Facilities AF ON A.apt_id = AF.apt_id
WHERE AF.facility_code = 'Gym';
```
-------------------------1241 sample_num
```sql
SELECT SUM(A.room_count) 
FROM Apartments A
JOIN Apartment_Facilities AF ON A.apt_id = AF.apt_id
WHERE AF.facility_code = 'Gym';
```
-------------------------1242 sample_num
```sql
SELECT SUM(Apartment.room_count) 
FROM Apartments 
JOIN Apartment_Buildings 
ON Apartments.building_id = Apartment_Buildings.building_id 
WHERE Apartment_Buildings.building_short_name = 'Columbus Square';
```
-------------------------1243 sample_num
```sql
SELECT SUM(Apartment.room_count) 
FROM Apartment 
JOIN Apartment_Buildings 
ON Apartment.building_id = Apartment_Buildings.building_id 
WHERE Apartment_Buildings.building_short_name = 'Columbus Square';
```
-------------------------1244 sample_num
```sql
SELECT DISTINCT building_address 
FROM Apartment_Buildings 
JOIN Apartments ON Apartment_Buildings.building_id = Apartments.building_id 
WHERE bathroom_count > 2;
```
-------------------------1245 sample_num
```sql
SELECT DISTINCT ab.building_address 
FROM Apartment_Buildings ab 
JOIN Apartments a ON ab.building_id = a.building_id 
WHERE a.bathroom_count > 2;
```
-------------------------1246 sample_num
```sql
SELECT Apartments.apt_type_code, Apartments.apt_number 
FROM Apartments 
JOIN Apartment_Buildings ON Apartments.building_id = Apartment_Buildings.building_id 
WHERE Apartment_Buildings.building_manager = 'Kyle';
```
-------------------------1247 sample_num
```sql
SELECT Apartments.apt_type_code, Apartments.apt_number 
FROM Apartments 
JOIN Apartment_Buildings ON Apartments.building_id = Apartment_Buildings.building_id 
WHERE Apartment_Buildings.building_manager = 'Kyle';
```
-------------------------1248 sample_num
```sql
SELECT booking_status_code, COUNT(*) as number_of_bookings
FROM Apartment_Bookings
GROUP BY booking_status_code;
```
-------------------------1249 sample_num
```sql
SELECT booking_status_code, COUNT(*) as num_bookings
FROM Apartment_Bookings
GROUP BY booking_status_code;
```
-------------------------1250 sample_num
```sql
SELECT apt_number 
FROM Apartments 
ORDER BY room_count ASC;
```
-------------------------1251 sample_num
```sql
SELECT apt_number 
FROM Apartments 
ORDER BY room_count ASC;
```
-------------------------1252 sample_num
```sql
SELECT apt_number 
FROM Apartments 
WHERE bedroom_count = (SELECT MAX(bedroom_count) FROM Apartments);
```
-------------------------1253 sample_num
```sql
SELECT apt_number 
FROM Apartments 
WHERE bedroom_count = (SELECT MAX(bedroom_count) FROM Apartments)
LIMIT 1;
```
-------------------------1254 sample_num
```sql
SELECT apt_type_code, COUNT(*) AS num_apartments
FROM Apartments
GROUP BY apt_type_code
ORDER BY num_apartments ASC;
```
-------------------------1255 sample_num
```sql
SELECT apt_type_code, COUNT(*) AS num_apartments
FROM Apartments
GROUP BY apt_type_code
ORDER BY num_apartments ASC;
```
-------------------------1256 sample_num
```sql
SELECT apt_type_code, AVG(room_count) as avg_rooms
FROM Apartments
GROUP BY apt_type_code
ORDER BY avg_rooms DESC
LIMIT 3;
```
-------------------------1257 sample_num
```sql
SELECT apt_type_code, AVG(room_count) as avg_room_count
FROM Apartments
GROUP BY apt_type_code
ORDER BY avg_room_count DESC
LIMIT 3;
```
-------------------------1258 sample_num
```sql
SELECT apt_type_code, bathroom_count, bedroom_count 
FROM Apartments 
WHERE (room_count + bathroom_count + bedroom_count) = 
(SELECT MAX(room_count + bathroom_count + bedroom_count) FROM Apartments)
```
```
-------------------------1259 sample_num
```sql
SELECT apt_type_code, bathroom_count, bedroom_count 
FROM Apartments 
GROUP BY apt_type_code, bathroom_count, bedroom_count 
ORDER BY SUM(room_count) DESC 
LIMIT 1;
```
-------------------------1260 sample_num
```sql
SELECT apt_type_code, COUNT(*) as count
FROM Apartments
GROUP BY apt_type_code
ORDER BY count DESC
LIMIT 1;
```
-------------------------1261 sample_num
```sql
SELECT apt_type_code, COUNT(*) as count 
FROM Apartments 
GROUP BY apt_type_code 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------1262 sample_num
```sql
SELECT apt_type_code 
FROM Apartments 
WHERE bathroom_count > 1 
GROUP BY apt_type_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------1263 sample_num
```sql
SELECT apt_type_code 
FROM Apartments 
WHERE bathroom_count > 1 
GROUP BY apt_type_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------1264 sample_num
```sql
SELECT apt_type_code, MAX(room_count) AS max_rooms, MIN(room_count) AS min_rooms 
FROM Apartments 
GROUP BY apt_type_code;
```
-------------------------1265 sample_num
```sql
SELECT apt_type_code, MAX(room_count) AS max_rooms, MIN(room_count) AS min_rooms 
FROM Apartments 
GROUP BY apt_type_code;
```
-------------------------1266 sample_num
```sql
SELECT Guests.gender_code, COUNT(Guests.guest_id) AS guest_count
FROM Guests
GROUP BY Guests.gender_code
ORDER BY guest_count DESC;
```
-------------------------1267 sample_num
```sql
SELECT gender_code, COUNT(*) as count
FROM Guests
GROUP BY gender_code
ORDER BY count DESC;
```
-------------------------1268 sample_num
```sql
SELECT COUNT(*) 
FROM Apartments 
WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)
```
-------------------------1269 sample_num
```sql
SELECT COUNT(*) 
FROM Apartments 
WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)
```
-------------------------1270 sample_num
```sql
SELECT DISTINCT A.apt_number 
FROM Apartments A 
JOIN Apartment_Bookings AB1 
ON A.apt_id = AB1.apt_id 
JOIN Apartment_Bookings AB2 
ON A.apt_id = AB2.apt_id 
WHERE AB1.booking_status_code = 'Provisional' 
AND AB2.booking_status_code = 'Confirmed';
```
-------------------------1271 sample_num
```sql
SELECT DISTINCT A.apt_number 
FROM Apartments A 
JOIN Apartment_Bookings AB1 
ON A.apt_id = AB1.apt_id 
JOIN Apartment_Bookings AB2 
ON A.apt_id = AB2.apt_id 
WHERE AB1.booking_status_code = 'Provisional' 
AND AB2.booking_status_code = 'Confirmed';
```
-------------------------1272 sample_num
```sql
SELECT a.apt_number 
FROM Apartments a
WHERE a.apt_id IN (
    SELECT vas.apt_id 
    FROM View_Unit_Status vas
    WHERE vas.available_yn = 0
) 
AND a.apt_id IN (
    SELECT vas.apt_id 
    FROM View_Unit_Status vas
    WHERE vas.available_yn = 1
)
```
-------------------------1273 sample_num
```sql
SELECT DISTINCT A.apt_number 
FROM Apartments A
JOIN View_Unit_Status VUS1 ON A.apt_id = VUS1.apt_id AND VUS1.available_yn = 0
JOIN View_Unit_Status VUS2 ON A.apt_id = VUS2.apt_id AND VUS2.available_yn = 1;
```
-------------------------1274 sample_num
```sql
SELECT COUNT(*) FROM game WHERE Season > 2007;
```
-------------------------1275 sample_num
```sql
SELECT T2.Date 
FROM stadium AS T1 
JOIN game AS T2 ON T1.id = T2.stadium_id 
GROUP BY T2.Home_team 
ORDER BY T2.Date DESC;
```
-------------------------1276 sample_num
```sql
SELECT Season, Home_team, Away_team 
FROM game;
```
-------------------------1277 sample_num
```sql
SELECT MAX(Home_Games) AS Max_Home_Games, MIN(Home_Games) AS Min_Home_Games, AVG(Home_Games) AS Avg_Home_Games FROM stadium;
```
-------------------------1278 sample_num
```sql
SELECT AVG(Average_Attendance) 
FROM stadium 
WHERE Capacity_Percentage > 100;
```
-------------------------1279 sample_num
```sql
SELECT Player, Number_of_matches, Source 
FROM injury_accident 
WHERE Injury != 'Knee problem';
```
-------------------------1280 sample_num
```sql
SELECT T1.Season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id WHERE T2.Player = 'Walter Samuel'
```
-------------------------1281 sample_num
```sql
SELECT game.id, game.Score, game.Date 
FROM game 
JOIN injury_accident ON game.id = injury_accident.game_id 
GROUP BY game.id 
HAVING COUNT(injury_accident.id) >= 2;
```
-------------------------1282 sample_num
```sql
SELECT T1.id, T1.name 
FROM stadium AS T1 
JOIN game AS T2 ON T1.id = T2.stadium_id 
JOIN injury_accident AS T3 ON T2.id = T3.game_id 
GROUP BY T1.id, T1.name 
ORDER BY COUNT(T3.id) DESC 
LIMIT 1;
```
-------------------------1283 sample_num
```sql
SELECT s.id, s.name 
FROM stadium s
JOIN game g ON s.id = g.stadium_id
JOIN injury_accident ia ON g.id = ia.game_id
GROUP BY s.id, s.name
ORDER BY COUNT(ia.id) DESC
LIMIT 1;
```
-------------------------1284 sample_num
```sql
SELECT game.Season, stadium.name 
FROM injury_accident 
JOIN game ON injury_accident.game_id = game.id 
JOIN stadium ON game.stadium_id = stadium.id 
WHERE injury_accident.Injury IN ('Foot injury', 'Knee problem');
```
-------------------------1285 sample_num
```sql
SELECT COUNT(DISTINCT Source) FROM injury_accident;
```
-------------------------1286 sample_num
```sql
SELECT COUNT(*) 
FROM game 
WHERE id NOT IN (SELECT game_id FROM injury_accident);
```
-------------------------1287 sample_num
```sql
SELECT COUNT(DISTINCT i.Injury) 
FROM injury_accident i
JOIN game g ON i.game_id = g.id
WHERE g.Season > 2010;
```
-------------------------1288 sample_num
```sql
SELECT T1.name 
FROM stadium AS T1 
JOIN game AS T2 ON T1.id = T2.stadium_id 
JOIN injury_accident AS T3 ON T2.id = T3.game_id 
WHERE T3.Player = 'Walter Samuel' 
INTERSECT 
SELECT T1.name 
FROM stadium AS T1 
JOIN game AS T2 ON T1.id = T2.stadium_id 
JOIN injury_accident AS T3 ON T2.id = T3.game_id 
WHERE T3.Player = 'Thiago Motta'
```
-------------------------1289 sample_num
```sql
SELECT s.name, s.Average_Attendance, s.Total_Attendance 
FROM stadium s 
WHERE s.id NOT IN (
    SELECT DISTINCT g.stadium_id 
    FROM game g 
    JOIN injury_accident ia ON g.id = ia.game_id
)
```
-------------------------1290 sample_num
```sql
SELECT name FROM stadium WHERE name LIKE '%Bank%';
```
-------------------------1291 sample_num
```sql
SELECT s.name, COUNT(g.id) as Total_Games
FROM stadium s
JOIN game g ON s.id = g.stadium_id
GROUP BY s.name;
```
-------------------------1292 sample_num
```sql
SELECT injury_accident.id, game.Date, injury_accident.Player 
FROM injury_accident 
JOIN game ON injury_accident.game_id = game.id 
ORDER BY game.Season DESC;
```
-------------------------1293 sample_num
```sql
SELECT Country.name, League.name 
FROM Country 
JOIN League ON Country.id = League.country_id;
```
-------------------------1294 sample_num
```sql
SELECT COUNT(*) FROM League WHERE id IN (SELECT id FROM Country WHERE name = 'England');
```
-------------------------1295 sample_num
```sql
SELECT AVG(weight) FROM Player;
```
-------------------------1296 sample_num
```sql
SELECT MAX(height) AS max_height, MIN(height) AS min_height FROM Player;
```
-------------------------1297 sample_num
```sql
SELECT player_name 
FROM Player 
WHERE player_api_id IN (
    SELECT player_api_id 
    FROM Player_Attributes 
    WHERE overall_rating > (
        SELECT AVG(overall_rating) 
        FROM Player_Attributes
    )
);
```
-------------------------1298 sample_num
```sql
SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling = (SELECT MAX(dribbling) FROM Player_Attributes)
```
-------------------------1299 sample_num
```sql
SELECT Player.player_name 
FROM Player 
JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id 
WHERE Player_Attributes.crossing > 90 AND Player_Attributes.preferred_foot = 'right';
```
-------------------------1300 sample_num
```sql
SELECT T2.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = "left" AND T1.overall_rating BETWEEN 85 AND 90;
```
-------------------------1301 sample_num
```sql
SELECT preferred_foot, AVG(overall_rating) 
FROM Player_Attributes 
GROUP BY preferred_foot;
```
-------------------------1302 sample_num
```sql
SELECT preferred_foot, COUNT(*) 
FROM Player_Attributes 
WHERE overall_rating > 80 
GROUP BY preferred_foot;
```
-------------------------1303 sample_num
```sql
SELECT player_api_id 
FROM Player 
JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id 
WHERE Player.height >= 180 AND Player_Attributes.overall_rating > 85;
```
-------------------------1304 sample_num
```sql
SELECT player_api_id 
FROM Player_Attributes 
WHERE preferred_foot = 'left' 
AND player_api_id IN (SELECT player_api_id FROM Player WHERE height BETWEEN 180 AND 190);
```
-------------------------1305 sample_num
```sql
SELECT p.player_name, pa.overall_rating 
FROM Player_Attributes pa 
JOIN Player p ON pa.player_api_id = p.player_api_id 
ORDER BY pa.overall_rating DESC 
LIMIT 3;
```
-------------------------1306 sample_num
```sql
SELECT player_name, birthday 
FROM Player 
WHERE player_api_id IN (
    SELECT player_api_id 
    FROM Player_Attributes 
    ORDER BY potential DESC 
    LIMIT 5
)
```
-------------------------1307 sample_num
```sql
SELECT COUNT(*) FROM performance;
```
-------------------------1308 sample_num
```sql
SELECT Host 
FROM performance 
ORDER BY Attendance ASC;
```
-------------------------1309 sample_num
```sql
SELECT Date, Location FROM performance;
```
-------------------------1310 sample_num
```sql
SELECT Attendance 
FROM performance 
WHERE Location IN ('TD Garden', 'Bell Centre');
```
-------------------------1311 sample_num
```sql
SELECT AVG(Attendance) FROM performance;
```
-------------------------1312 sample_num
```sql
SELECT Date 
FROM performance 
WHERE Attendance = (SELECT MAX(Attendance) FROM performance);
```
-------------------------1313 sample_num
```sql
SELECT Location, COUNT(*) AS NumberOfPerformances
FROM performance
GROUP BY Location;
```
-------------------------1314 sample_num
```sql
SELECT Location, COUNT(*) as Count 
FROM performance 
GROUP BY Location 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------1315 sample_num
```sql
SELECT Location 
FROM performance 
GROUP BY Location 
HAVING COUNT(Performance_ID) >= 2;
```
-------------------------1316 sample_num
```sql
SELECT Location 
FROM performance 
WHERE Attendance > 2000 
INTERSECT 
SELECT Location 
FROM performance 
WHERE Attendance < 1000;
```
-------------------------1317 sample_num
```sql
SELECT m.Name, p.Location 
FROM member m 
JOIN member_attendance ma ON m.Member_ID = ma.Member_ID 
JOIN performance p ON ma.Performance_ID = p.Performance_ID;
```
-------------------------1318 sample_num
```sql
SELECT m.Name, p.Location 
FROM member AS m 
JOIN member_attendance AS ma ON m.Member_ID = ma.Member_ID 
JOIN performance AS p ON ma.Performance_ID = p.Performance_ID 
ORDER BY m.Name ASC;
```
-------------------------1319 sample_num
```sql
SELECT DISTINCT p.Date 
FROM performance p
JOIN member_attendance ma ON p.Performance_ID = ma.Performance_ID 
JOIN member m ON ma.Member_ID = m.Member_ID 
WHERE m.Role = 'Violin';
```
-------------------------1320 sample_num
```sql
SELECT m.Name, p.Date 
FROM member_attendance ma 
JOIN member m ON ma.Member_ID = m.Member_ID 
JOIN performance p ON ma.Performance_ID = p.Performance_ID 
ORDER BY p.Attendance DESC;
```
-------------------------1321 sample_num
```sql
SELECT Name 
FROM member 
WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance)
```
-------------------------1322 sample_num
```sql
SELECT building 
FROM classroom 
WHERE capacity > 50;
```
-------------------------1323 sample_num
```sql
SELECT DISTINCT building 
FROM classroom 
WHERE capacity > 50;
```
-------------------------1324 sample_num
```sql
SELECT COUNT(*) 
FROM classroom 
WHERE building <> 'Lamberton';
```
-------------------------1325 sample_num
```sql
SELECT COUNT(*) 
FROM classroom 
WHERE building != 'Lamberton';
```
-------------------------1326 sample_num
```sql
SELECT dept_name, building 
FROM department 
WHERE budget > (SELECT AVG(budget) FROM department);
```
-------------------------1327 sample_num
```sql
SELECT name, building 
FROM department 
WHERE budget > (SELECT AVG(budget) FROM department);
```
-------------------------1328 sample_num
```sql
SELECT building, room_number FROM classroom WHERE capacity BETWEEN 50 AND 100;
```
-------------------------1329 sample_num
```sql
SELECT room_number, building FROM classroom WHERE capacity BETWEEN 50 AND 100;
```
-------------------------1330 sample_num
```sql
SELECT dept_name, building 
FROM department 
WHERE budget = (SELECT MAX(budget) FROM department);
```
-------------------------1331 sample_num
```sql
SELECT dept_name, building 
FROM department 
WHERE budget = (SELECT MAX(budget) FROM department);
```
-------------------------1332 sample_num
```sql
SELECT name 
FROM student 
WHERE dept_name = 'History' 
ORDER BY tot_cred DESC 
LIMIT 1;
```
-------------------------1333 sample_num
```sql
SELECT name 
FROM student 
WHERE dept_name = 'History' 
ORDER BY tot_cred DESC 
LIMIT 1;
```
-------------------------1334 sample_num
```sql
SELECT COUNT(*) 
FROM classroom 
WHERE building = 'Lamberton';
```
-------------------------1335 sample_num
```sql
SELECT COUNT(*) 
FROM classroom 
WHERE building = 'Lamberton';
```
-------------------------1336 sample_num
```sql
SELECT COUNT(*) FROM advisor;
```
-------------------------1337 sample_num
```sql
SELECT COUNT(*) FROM advisor;
```
-------------------------1338 sample_num
```sql
SELECT COUNT(DISTINCT dept_name) 
FROM course;
```
-------------------------1339 sample_num
```sql
SELECT COUNT(DISTINCT dept_name) 
FROM course;
```
-------------------------1340 sample_num
```sql
SELECT COUNT(DISTINCT course_id) 
FROM course 
WHERE dept_name = 'Physics';
```
-------------------------1341 sample_num
```sql
SELECT COUNT(*) 
FROM course 
WHERE dept_name = 'Physics';
```
-------------------------1342 sample_num
```sql
SELECT c.title 
FROM course c
JOIN prereq p ON c.course_id = p.course_id
GROUP BY c.course_id
HAVING COUNT(p.prereq_id) = 2;
```
-------------------------1343 sample_num
```sql
SELECT c.title 
FROM course c
JOIN prereq p ON c.course_id = p.course_id
GROUP BY c.course_id
HAVING COUNT(p.prereq_id) = 2;
```
-------------------------1344 sample_num
```sql
SELECT C.title, C.credits, C.dept_name 
FROM course C 
WHERE C.course_id IN (
    SELECT P.course_id 
    FROM prereq P 
    GROUP BY P.course_id 
    HAVING COUNT(P.prereq_id) > 1
);
```
-------------------------1345 sample_num
```sql
SELECT C.title, C.credits, C.dept_name 
FROM course C 
WHERE C.course_id IN (
    SELECT P.course_id 
    FROM prereq P 
    GROUP BY P.course_id 
    HAVING COUNT(P.prereq_id) > 1
);
```
-------------------------1346 sample_num
```sql
SELECT COUNT(*) 
FROM course 
WHERE course_id NOT IN (SELECT course_id FROM prereq);
```
-------------------------1347 sample_num
```sql
SELECT COUNT(*) 
FROM course 
WHERE NOT EXISTS (SELECT * FROM prereq WHERE prereq.course_id = course.course_id);
```
-------------------------1348 sample_num
```sql
SELECT title 
FROM course 
WHERE course_id NOT IN (SELECT course_id FROM prereq)
```
```
-------------------------1349 sample_num
```sql
SELECT title 
FROM course 
WHERE course_id NOT IN (SELECT course_id FROM prereq)
```
```
-------------------------1350 sample_num
```sql
SELECT COUNT(DISTINCT ID) 
FROM teaches;
```
-------------------------1351 sample_num
```sql
SELECT COUNT(DISTINCT ID) 
FROM teaches;
```
-------------------------1352 sample_num
```sql
SELECT SUM(budget) 
FROM department 
WHERE dept_name IN ('Marketing', 'Finance');
```
-------------------------1353 sample_num
```sql
SELECT SUM(budget) 
FROM department 
WHERE dept_name IN ('Marketing', 'Finance');
```
-------------------------1354 sample_num
```sql
SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%';
```
-------------------------1355 sample_num
```sql
SELECT T2.dept_name FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name = T2.dept_name WHERE T1.name LIKE '%Soisalon%';
```
-------------------------1356 sample_num
```sql
SELECT COUNT(*) 
FROM classroom 
WHERE building = 'Lamberton' AND capacity < 50;
```
-------------------------1357 sample_num
```sql
SELECT COUNT(*) 
FROM classroom 
WHERE building = 'Lamberton' AND capacity < 50;
```
-------------------------1358 sample_num
```sql
SELECT name, budget FROM department WHERE budget > (SELECT AVG(budget) FROM department);
```
-------------------------1359 sample_num
```sql
SELECT dept_name, budget 
FROM department 
WHERE budget > (SELECT AVG(budget) FROM department);
```
-------------------------1360 sample_num
```sql
SELECT name 
FROM instructor 
WHERE dept_name = 'Statistics' 
ORDER BY salary 
LIMIT 1;
```
-------------------------1361 sample_num
```sql
SELECT name 
FROM instructor 
WHERE dept_name = 'Statistics' 
ORDER BY salary 
LIMIT 1;
```
-------------------------1362 sample_num
```sql
SELECT title 
FROM course 
WHERE dept_name = 'Statistics' 
INTERSECT 
SELECT title 
FROM course 
WHERE dept_name = 'Psychology';
```
-------------------------1363 sample_num
```sql
SELECT title 
FROM course AS T1 
WHERE T1.dept_name = 'Statistics' 
INTERSECT 
SELECT title 
FROM course AS T2 
WHERE T2.dept_name = 'Psychology';
```
-------------------------1364 sample_num
```sql
SELECT title 
FROM course 
WHERE dept_name = 'Statistics' 
EXCEPT 
SELECT title 
FROM course 
WHERE dept_name = 'Psychology';
```
-------------------------1365 sample_num
```sql
SELECT title 
FROM course 
WHERE dept_name = 'Statistics' 
EXCEPT 
SELECT title 
FROM course 
WHERE dept_name = 'Psychology';
```
-------------------------1366 sample_num
```sql
SELECT ID 
FROM teaches 
WHERE semester = 'Fall' AND year = 2009 
EXCEPT 
SELECT ID 
FROM teaches 
WHERE semester = 'Spring' AND year = 2010;
```
-------------------------1367 sample_num
```sql
SELECT ID 
FROM teaches 
WHERE semester = 'Fall' AND year = 2009 
EXCEPT 
SELECT ID 
FROM teaches 
WHERE semester = 'Spring' AND year = 2010;
```
-------------------------1368 sample_num
```sql
SELECT DISTINCT s.name 
FROM student s 
JOIN takes t ON s.ID = t.ID 
WHERE t.year IN (2009, 2010);
```
-------------------------1369 sample_num
```sql
SELECT DISTINCT s.name 
FROM student s 
JOIN takes t ON s.ID = t.ID 
WHERE t.year IN (2009, 2010);
```
-------------------------1370 sample_num
```sql
SELECT dept_name, COUNT(course_id) AS course_count
FROM course
GROUP BY dept_name
ORDER BY course_count DESC
LIMIT 3;
```
-------------------------1371 sample_num
```sql
SELECT dept_name 
FROM course 
GROUP BY dept_name 
ORDER BY COUNT(course_id) DESC 
LIMIT 3;
```
-------------------------1372 sample_num
```sql
SELECT T1.dept_name 
FROM department AS T1 
JOIN (
    SELECT dept_name, SUM(credits) as total_credits 
    FROM course 
    GROUP BY dept_name 
    ORDER BY total_credits DESC 
    LIMIT 1
) AS T2 
ON T1.dept_name = T2.dept_name;
```
-------------------------1373 sample_num
```sql
SELECT T2.dept_name 
FROM course AS T1 
JOIN department AS T2 ON T1.dept_name = T2.dept_name 
GROUP BY T2.dept_name 
ORDER BY SUM(T1.credits) DESC 
LIMIT 1;
```
-------------------------1374 sample_num
```sql
SELECT title 
FROM course 
ORDER BY title, credits;
```
-------------------------1375 sample_num
```sql
SELECT title 
FROM course 
ORDER BY title, credits;
```
-------------------------1376 sample_num
```sql
SELECT dept_name
FROM department
WHERE budget = (SELECT MIN(budget) FROM department);
```
-------------------------1377 sample_num
```sql
SELECT dept_name FROM department ORDER BY budget ASC LIMIT 1;
```
-------------------------1378 sample_num
```sql
SELECT dept_name, building 
FROM department 
ORDER BY budget DESC;
```
-------------------------1379 sample_num
```sql
SELECT dept_name, building 
FROM department 
ORDER BY budget DESC;
```
-------------------------1380 sample_num
```sql
SELECT name FROM instructor WHERE salary = (SELECT MAX(salary) FROM instructor);
```
-------------------------1381 sample_num
```sql
SELECT name FROM instructor WHERE salary = (SELECT MAX(salary) FROM instructor);
```
-------------------------1382 sample_num
```sql
SELECT * FROM instructor ORDER BY salary ASC;
```
-------------------------1383 sample_num
```sql
SELECT * FROM instructor ORDER BY salary ASC;
```
-------------------------1384 sample_num
```sql
SELECT name, dept_name 
FROM student 
ORDER BY tot_cred ASC;
```
-------------------------1385 sample_num
```sql
SELECT name, dept_name 
FROM student 
ORDER BY tot_cred;
```
-------------------------1386 sample_num
```sql
SELECT course.title, instructor.name 
FROM course 
JOIN teaches ON course.course_id = teaches.course_id 
JOIN instructor ON instructor.ID = teaches.ID 
WHERE teaches.year = 2008 
ORDER BY course.title, instructor.name;
```
-------------------------1387 sample_num
```sql
SELECT course.title, instructor.name 
FROM course 
JOIN teaches ON course.course_id = teaches.course_id 
JOIN instructor ON instructor.ID = teaches.ID 
WHERE teaches.year = 2008 
ORDER BY course.title ASC;
```
-------------------------1388 sample_num
```sql
SELECT i.name
FROM instructor i
JOIN advisor a ON i.ID = a.i_ID
GROUP BY i.name
HAVING COUNT(a.s_ID) > 1;
```
-------------------------1389 sample_num
```sql
SELECT T1.name 
FROM instructor AS T1 
JOIN advisor AS T2 ON T1.ID = T2.i_ID 
GROUP BY T2.i_ID 
HAVING COUNT(*) > 1;
```
-------------------------1390 sample_num
```sql
SELECT T1.name 
FROM student AS T1 
JOIN advisor AS T2 ON T1.ID = T2.s_ID 
GROUP BY T1.ID 
HAVING COUNT(T2.i_ID) > 1;
```
-------------------------1391 sample_num
```sql
SELECT s.name 
FROM student s
JOIN advisor a ON s.ID = a.s_ID
GROUP BY s.name
HAVING COUNT(a.i_ID) > 1;
```
-------------------------1392 sample_num
```sql
SELECT building, COUNT(*) AS num_rooms
FROM classroom
WHERE capacity > 50
GROUP BY building;
```
-------------------------1393 sample_num
```sql
SELECT building, COUNT(*) 
FROM classroom 
WHERE capacity > 50 
GROUP BY building;
```
-------------------------1394 sample_num
```sql
SELECT building, MAX(capacity) AS max_capacity, AVG(capacity) AS avg_capacity 
FROM classroom 
GROUP BY building;
```
-------------------------1395 sample_num
```sql
SELECT building, MAX(capacity) AS greatest_capacity, AVG(capacity) AS average_capacity 
FROM classroom 
GROUP BY building;
```
-------------------------1396 sample_num
```sql
SELECT title 
FROM course 
GROUP BY title 
HAVING COUNT(dept_name) > 1;
```
Note: This query assumes that the same course (by title) cannot have the same department name multiple times in the course table. If it's possible, then the query needs to be adjusted to:
```sql
SELECT c1.title 
FROM course c1 
JOIN (
  SELECT course_id 
  FROM course 
  GROUP BY course_id 
  HAVING COUNT(dept_name) > 1
) c2 ON c1.course_id = c2.course_id;
```
-------------------------1397 sample_num
```sql
SELECT title 
FROM course 
GROUP BY title 
HAVING COUNT(dept_name) > 1;
```
-------------------------1398 sample_num
```sql
SELECT dept_name, SUM(credits) as total_credits
FROM course
GROUP BY dept_name;
```
-------------------------1399 sample_num
```sql
SELECT dept_name, SUM(credits) 
FROM course 
GROUP BY dept_name;
```
-------------------------1400 sample_num
```sql
SELECT MIN(salary) 
FROM instructor 
WHERE dept_name IN (
    SELECT dept_name 
    FROM instructor 
    GROUP BY dept_name 
    HAVING AVG(salary) > (
        SELECT AVG(salary) 
        FROM instructor
    )
)
```
-------------------------1401 sample_num
```sql
SELECT MIN(salary) 
FROM instructor 
WHERE dept_name IN (
    SELECT dept_name 
    FROM instructor 
    GROUP BY dept_name 
    HAVING AVG(salary) > (
        SELECT AVG(salary) 
        FROM instructor
    )
)
```
-------------------------1402 sample_num
```sql
SELECT semester, year, COUNT(*) AS num_courses
FROM section
GROUP BY semester, year;
```
-------------------------1403 sample_num
```sql
SELECT semester, year, COUNT(*) AS num_courses
FROM section
GROUP BY semester, year;
```
-------------------------1404 sample_num
```sql
SELECT year 
FROM section 
GROUP BY year 
ORDER BY COUNT(course_id) DESC 
LIMIT 1;
```
-------------------------1405 sample_num
```sql
SELECT year, COUNT(*) as num_courses 
FROM section 
GROUP BY year 
ORDER BY num_courses DESC 
LIMIT 1;
```
-------------------------1406 sample_num
```sql
SELECT year, semester 
FROM section 
GROUP BY year, semester 
ORDER BY COUNT(course_id) DESC 
LIMIT 1;
```
-------------------------1407 sample_num
```sql
SELECT year, semester 
FROM section 
GROUP BY year, semester 
ORDER BY COUNT(course_id) DESC 
LIMIT 1;
```
-------------------------1408 sample_num
```sql
SELECT dept_name, COUNT(*) AS num_students
FROM student
GROUP BY dept_name
ORDER BY num_students DESC
LIMIT 1;
```
-------------------------1409 sample_num
```sql
SELECT T3.dept_name 
FROM student AS T1 
JOIN department AS T3 ON T1.dept_name = T3.dept_name 
GROUP BY T3.dept_name 
ORDER BY COUNT(T1.ID) DESC 
LIMIT 1
```
-------------------------1410 sample_num
```sql
SELECT dept_name, COUNT(*) AS total_students
FROM student
GROUP BY dept_name;
```
-------------------------1411 sample_num
```sql
SELECT dept_name, COUNT(*) AS num_students
FROM student
GROUP BY dept_name;
```
-------------------------1412 sample_num
```sql
SELECT semester, year 
FROM takes
GROUP BY semester, year
ORDER BY COUNT(ID) ASC
LIMIT 1;
```
-------------------------1413 sample_num
```sql
SELECT semester, year 
FROM (
    SELECT semester, year, COUNT(ID) AS num_students
    FROM takes
    GROUP BY semester, year
) AS student_count
ORDER BY num_students ASC
LIMIT 1;
```
-------------------------1414 sample_num
```sql
SELECT i_ID 
FROM advisor 
WHERE s_ID IN (SELECT ID 
               FROM student 
               WHERE dept_name = 'History') 
GROUP BY i_ID 
HAVING COUNT(*) = (SELECT COUNT(*) 
                   FROM student 
                   WHERE dept_name = 'History');
```
-------------------------1415 sample_num
```sql
SELECT i.ID 
FROM instructor i 
JOIN advisor a ON i.ID = a.i_ID 
JOIN student s ON a.s_ID = s.ID 
WHERE s.dept_name = 'History';
```
-------------------------1416 sample_num
```sql
SELECT DISTINCT T2.name, T2.salary 
FROM advisor AS T1 
JOIN instructor AS T2 ON T1.i_ID = T2.ID 
JOIN student AS T3 ON T1.s_ID = T3.ID 
WHERE T3.dept_name = 'History';
```
-------------------------1417 sample_num
```sql
SELECT T2.name, T2.salary 
FROM advisor AS T1 
JOIN instructor AS T2 ON T1.i_ID = T2.ID 
JOIN student AS T3 ON T1.s_ID = T3.ID 
WHERE T3.dept_name = 'History'
```
-------------------------1418 sample_num
```sql
SELECT course_id FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq);
```
-------------------------1419 sample_num
```sql
SELECT course_id FROM course WHERE NOT EXISTS (SELECT * FROM prereq WHERE course.course_id = prereq.course_id);
```
-------------------------1420 sample_num
```sql
SELECT title 
FROM course 
WHERE course_id NOT IN (SELECT course_id FROM prereq)
```
-------------------------1421 sample_num
```sql
SELECT title 
FROM course 
WHERE NOT EXISTS (
    SELECT * 
    FROM prereq 
    WHERE course.course_id = prereq.course_id
);
```
-------------------------1422 sample_num
```sql
SELECT p.prereq_id, c.title 
FROM prereq AS p 
JOIN course AS c ON p.prereq_id = c.course_id 
WHERE p.course_id = (SELECT course_id FROM course WHERE title = 'International Finance');
```
-------------------------1423 sample_num
```sql
SELECT T3.title 
FROM course AS T1 
JOIN prereq AS T2 ON T1.course_id = T2.course_id 
JOIN course AS T3 ON T3.course_id = T2.prereq_id 
WHERE T1.title = 'International Finance'
```
-------------------------1424 sample_num
```sql
SELECT c.title 
FROM course c
JOIN prereq p ON c.course_id = p.course_id
WHERE p.prereq_id IN (
    SELECT course_id 
    FROM course 
    WHERE title = 'Differential Geometry'
);
```
-------------------------1425 sample_num
```sql
SELECT c.title 
FROM course c 
JOIN prereq p ON c.course_id = p.course_id 
WHERE p.prereq_id = (SELECT course_id FROM course WHERE title = 'Differential Geometry');
```
-------------------------1426 sample_num
```sql
SELECT DISTINCT s.name 
FROM student s, takes t 
WHERE s.ID = t.ID AND t.semester = 'Fall' AND t.year = 2003;
```
-------------------------1427 sample_num
```sql
SELECT DISTINCT s.name 
FROM student s 
JOIN takes t ON s.ID = t.ID 
WHERE t.semester = 'Fall' AND t.year = 2003;
```
-------------------------1428 sample_num
```sql
SELECT T1.title 
FROM course AS T1 JOIN section AS T2 ON T1.course_id = T2.course_id 
WHERE T2.building = 'Chandler' AND T2.semester = 'fall' AND T2.year = 2010;
```
-------------------------1429 sample_num
```sql
SELECT T1.title 
FROM course AS T1 JOIN section AS T2 ON T1.course_id = T2.course_id 
WHERE T2.building = 'Chandler' AND T2.semester = 'Fall' AND T2.year = 2010;
```
-------------------------1430 sample_num
```sql
SELECT T3.name 
FROM course AS T1 
JOIN teaches AS T2 ON T1.course_id = T2.course_id 
JOIN instructor AS T3 ON T3.ID = T2.ID 
WHERE T1.title = 'C Programming' AND T2.semester < SYSDATE();
```
-------------------------1431 sample_num
```sql
SELECT DISTINCT T2.name 
FROM course AS T1 
JOIN instructor AS T2 ON T1.dept_name = T2.dept_name 
JOIN teaches AS T3 ON T2.ID = T3.ID 
WHERE T1.title = 'C Programming';
```
-------------------------1432 sample_num
```sql
SELECT T1.name, T1.salary 
FROM instructor AS T1 
JOIN advisor AS T2 ON T1.ID = T2.i_ID 
JOIN student AS T3 ON T2.s_ID = T3.ID 
WHERE T3.dept_name = 'Math';
```
-------------------------1433 sample_num
```sql
SELECT T2.name, T2.salary 
FROM advisor AS T1 
JOIN instructor AS T2 ON T1.i_ID = T2.ID 
JOIN student AS T3 ON T1.s_ID = T3.ID 
WHERE T3.dept_name = 'Math'
```
-------------------------1434 sample_num
```sql
SELECT T3.name 
FROM advisor AS T1 
JOIN student AS T2 ON T1.s_ID = T2.ID 
JOIN instructor AS T3 ON T1.i_ID = T3.ID 
WHERE T2.dept_name = 'Math' 
ORDER BY T2.tot_cred;
```
-------------------------1435 sample_num
```sql
SELECT T3.name 
FROM advisor AS T1 
JOIN student AS T2 ON T1.s_ID = T2.ID 
JOIN instructor AS T3 ON T1.i_ID = T3.ID 
WHERE T2.dept_name = 'math' 
ORDER BY T2.tot_cred;
```
-------------------------1436 sample_num
```sql
SELECT T1.title 
FROM course AS T1 
JOIN prereq AS T2 
ON T1.course_id = T2.prereq_id 
WHERE T2.course_id = 'Mobile Computing'
``` 

Note: The 'Mobile Computing' should be replaced by the course_id of the course 'Mobile Computing' if the course_id is used as the identifier in your database. If 'title' is used as an identifier, then the query is correct.
-------------------------1437 sample_num
```sql
SELECT title 
FROM course 
WHERE course_id IN (SELECT prereq_id FROM prereq WHERE course_id = 'Mobile Computing');
```
Note: This assumes that 'Mobile Computing' is a valid entry in the course table. If it's an entry in another table that references course_id, you would need to adjust the query to find the correct course_id first.
-------------------------1438 sample_num
```sql
SELECT T3.name FROM student AS T1 JOIN advisor AS T2 ON T1.ID = T2.s_ID JOIN instructor AS T3 ON T3.ID = T2.i_ID WHERE T1.tot_cred = (SELECT MAX(tot_cred) FROM student)
```
-------------------------1439 sample_num
```sql
SELECT T3.name FROM student AS T1 JOIN advisor AS T2 ON T1.ID = T2.s_ID JOIN instructor AS T3 ON T3.ID = T2.i_ID WHERE T1.tot_cred = (SELECT MAX(tot_cred) FROM student)
```
-------------------------1440 sample_num
```sql
SELECT name 
FROM instructor 
WHERE ID NOT IN (SELECT ID FROM teaches);
```
-------------------------1441 sample_num
```sql
SELECT name 
FROM instructor 
WHERE ID NOT IN (SELECT ID FROM teaches);
```
-------------------------1442 sample_num
```sql
SELECT ID FROM instructor WHERE ID NOT IN (SELECT ID FROM teaches)
```
-------------------------1443 sample_num
```sql
SELECT ID FROM instructor WHERE ID NOT IN (SELECT ID FROM teaches)
```
-------------------------1444 sample_num
```sql
SELECT name 
FROM instructor 
WHERE ID NOT IN (
    SELECT teaches.ID 
    FROM teaches 
    WHERE semester = 'Spring'
);
```
-------------------------1445 sample_num
```sql
SELECT name 
FROM instructor 
WHERE ID NOT IN (
    SELECT teaches.ID 
    FROM teaches 
    WHERE semester = 'Spring'
);
```
-------------------------1446 sample_num
```sql
SELECT dept_name, AVG(salary) as avg_salary
FROM instructor
GROUP BY dept_name
ORDER BY avg_salary DESC
LIMIT 1;
```
-------------------------1447 sample_num
```sql
SELECT dept_name, AVG(salary) as avg_salary
FROM instructor
GROUP BY dept_name
ORDER BY avg_salary DESC
LIMIT 1;
```
-------------------------1448 sample_num
```sql
SELECT COUNT(*), AVG(salary) 
FROM instructor 
WHERE dept_name = (
    SELECT dept_name 
    FROM department 
    ORDER BY budget DESC 
    LIMIT 1
);
```
-------------------------1449 sample_num
```sql
SELECT COUNT(i.ID), AVG(i.salary) 
FROM instructor i
JOIN department d ON i.dept_name = d.dept_name
WHERE d.budget = (SELECT MAX(budget) FROM department);
```
-------------------------1450 sample_num
```sql
SELECT T3.title, T3.credits FROM classroom AS T1 JOIN section AS T2 ON T1.building = T2.building AND T1.room_number = T2.room_number JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.capacity = (SELECT MAX(capacity) FROM classroom)
```
-------------------------1451 sample_num
```sql
SELECT T1.title, T1.credits 
FROM course AS T1 
JOIN section AS T2 ON T1.course_id = T2.course_id 
JOIN classroom AS T3 ON T3.building = T2.building AND T3.room_number = T2.room_number 
WHERE T3.capacity = (SELECT MAX(capacity) FROM classroom);
```
-------------------------1452 sample_num
```sql
SELECT s.name 
FROM student s
WHERE s.dept_name != 'Biology'
AND NOT EXISTS (
    SELECT *
    FROM takes t
    JOIN section sec ON t.course_id = sec.course_id AND t.sec_id = sec.sec_id AND t.semester = sec.semester AND t.year = sec.year
    JOIN course c ON sec.course_id = c.course_id
    WHERE t.ID = s.ID
    AND c.dept_name = 'Biology'
);
```
-------------------------1453 sample_num
```sql
SELECT s.name 
FROM student s 
WHERE s.ID NOT IN (
    SELECT t.ID 
    FROM takes t 
    JOIN course c ON t.course_id = c.course_id 
    WHERE c.dept_name = 'Biology'
)
```
-------------------------1454 sample_num
```sql
SELECT 
    s.dept_name,
    COUNT(DISTINCT s.ID) AS total_students,
    COUNT(DISTINCT i.ID) AS total_instructors
FROM 
    student s
LEFT JOIN 
    instructor i ON s.dept_name = i.dept_name
GROUP BY 
    s.dept_name;
```
-------------------------1455 sample_num
```sql
SELECT 
    s.dept_name AS department, 
    COUNT(DISTINCT s.ID) AS num_students, 
    COUNT(DISTINCT i.ID) AS num_instructors 
FROM 
    student s 
LEFT JOIN 
    instructor i ON s.dept_name = i.dept_name 
GROUP BY 
    s.dept_name;
```
-------------------------1456 sample_num
```sql
SELECT T3.name 
FROM prereq AS T1 
JOIN course AS T2 ON T1.course_id = T2.course_id 
JOIN takes AS T4 ON T4.course_id = T1.prereq_id 
JOIN student AS T3 ON T3.ID = T4.ID 
WHERE T2.title = 'International Finance'
GROUP BY T3.name;
```
-------------------------1457 sample_num
```sql
SELECT s.name 
FROM student s
JOIN takes t ON s.ID = t.ID
JOIN prereq p ON t.course_id = p.prereq_id
WHERE p.course_id IN (SELECT course_id FROM course WHERE title = 'International Finance')
GROUP BY s.name;
```
-------------------------1458 sample_num
```sql
SELECT name, salary 
FROM instructor 
WHERE salary < (
    SELECT AVG(salary) 
    FROM instructor 
    WHERE dept_name = 'Physics'
) AND dept_name = 'Physics';
```
-------------------------1459 sample_num
```sql
SELECT name, salary 
FROM instructor 
WHERE salary < (SELECT AVG(salary) FROM instructor WHERE dept_name = 'Physics') 
AND dept_name = 'Physics';
```
-------------------------1460 sample_num
```sql
SELECT DISTINCT s.name 
FROM student s, takes t, course c 
WHERE s.ID = t.ID AND c.course_id = t.course_id AND c.dept_name = 'Statistics';
```
-------------------------1461 sample_num
```sql
SELECT DISTINCT s.name 
FROM student s
JOIN takes t ON s.ID = t.ID
JOIN section sec ON t.course_id = sec.course_id AND t.sec_id = sec.sec_id AND t.semester = sec.semester AND t.year = sec.year
JOIN course c ON sec.course_id = c.course_id
WHERE c.dept_name = 'Statistics';
```
-------------------------1462 sample_num
```sql
SELECT building, room_number, semester, year 
FROM section 
JOIN course ON section.course_id = course.course_id 
WHERE course.dept_name = 'Psychology' 
ORDER BY course.title;
```
-------------------------1463 sample_num
```sql
SELECT building, room_number, semester, year 
FROM section 
JOIN course ON section.course_id = course.course_id 
WHERE course.dept_name = 'Psychology' 
ORDER BY course.title;
```
-------------------------1464 sample_num
```sql
SELECT name FROM instructor WHERE dept_name = 'Computer Science';
```
-------------------------1465 sample_num
```sql
SELECT name 
FROM instructor 
WHERE dept_name = 'Comp. Sci.';
```
-------------------------1466 sample_num
```sql
SELECT name 
FROM instructor 
WHERE dept_name = 'Comp. Sci.' AND salary > 80000;
```
-------------------------1467 sample_num
```sql
SELECT name 
FROM instructor 
WHERE dept_name = 'Comp. Sci.' AND salary > 80000;
```
-------------------------1468 sample_num
```sql
SELECT DISTINCT T1.name, T2.course_id 
FROM instructor AS T1 
JOIN teaches AS T2 ON T1.ID = T2.ID;
```
-------------------------1469 sample_num
```sql
SELECT T1.name, T2.course_id 
FROM instructor AS T1 
JOIN teaches AS T2 
ON T1.ID = T2.ID;
```
-------------------------1470 sample_num
```sql
SELECT DISTINCT T1.name, T3.course_id 
FROM instructor AS T1 
JOIN teaches AS T2 ON T1.ID = T2.ID 
JOIN course AS T3 ON T2.course_id = T3.course_id 
WHERE T1.dept_name = 'Art';
```
-------------------------1471 sample_num
```sql
SELECT T1.name, T3.course_id 
FROM instructor AS T1 
JOIN teaches AS T2 ON T1.ID = T2.ID 
JOIN section AS T3 ON T2.course_id = T3.course_id AND T2.sec_id = T3.sec_id AND T2.semester = T3.semester AND T2.year = T3.year 
WHERE T1.dept_name = 'Art';
```
-------------------------1472 sample_num
```sql
SELECT name FROM instructor WHERE name LIKE '%dar%';
```
-------------------------1473 sample_num
```sql
SELECT name FROM instructor WHERE name LIKE '%dar%';
```
-------------------------1474 sample_num
```sql
SELECT DISTINCT name 
FROM instructor 
ORDER BY name ASC;
```
-------------------------1475 sample_num
```sql
SELECT DISTINCT name FROM instructor ORDER BY name;
```
-------------------------1476 sample_num
```sql
SELECT course_id FROM section WHERE (semester='Fall' AND year=2009) OR (semester='Spring' AND year=2010);
```
-------------------------1477 sample_num
```sql
SELECT DISTINCT course_id FROM section WHERE semester='Fall' AND year=2009 UNION SELECT DISTINCT course_id FROM section WHERE semester='Spring' AND year=2010;
```
-------------------------1478 sample_num
```sql
SELECT DISTINCT course_id FROM section WHERE (semester = 'Fall' AND year = 2009) OR (semester = 'Spring' AND year = 2010);
```
-------------------------1479 sample_num
```sql
SELECT course_id
FROM section
WHERE semester = 'Fall' AND year = 2009
GROUP BY course_id
HAVING EXISTS (
    SELECT *
    FROM section s2
    WHERE s2.course_id = section.course_id
    AND s2.semester = 'Spring' AND s2.year = 2010
)
```
-------------------------1480 sample_num
```sql
SELECT course_id FROM section WHERE semester = 'Fall' AND year = 2009
EXCEPT
SELECT course_id FROM section WHERE semester = 'Spring' AND year = 2010;
```
-------------------------1481 sample_num
```sql
SELECT course_id
FROM section
WHERE semester = 'Fall' AND year = 2009
EXCEPT
SELECT course_id
FROM section
WHERE semester = 'Spring' AND year = 2010;
```
-------------------------1482 sample_num
```sql
SELECT DISTINCT salary 
FROM instructor 
WHERE salary < (SELECT MAX(salary) FROM instructor);
```
-------------------------1483 sample_num
```sql
SELECT DISTINCT salary FROM instructor WHERE salary < (SELECT MAX(salary) FROM instructor);
```
-------------------------1484 sample_num
```sql
SELECT COUNT(DISTINCT T1.name) 
FROM instructor AS T1 
JOIN teaches AS T2 ON T1.ID = T2.ID 
WHERE T2.semester = 'Spring' AND T2.year = 2010;
```
-------------------------1485 sample_num
```sql
SELECT COUNT(DISTINCT T1.name) 
FROM instructor AS T1 
JOIN teaches AS T2 ON T1.ID = T2.ID 
WHERE T2.semester = 'Spring' AND T2.year = 2010;
```
-------------------------1486 sample_num
```sql
SELECT dept_name, AVG(salary) 
FROM instructor 
GROUP BY dept_name 
HAVING AVG(salary) > 42000;
```
-------------------------1487 sample_num
```sql
SELECT dept_name, AVG(salary) 
FROM instructor 
GROUP BY dept_name 
HAVING AVG(salary) > 42000;
```
-------------------------1488 sample_num
```sql
SELECT name 
FROM instructor 
WHERE salary > (SELECT MIN(salary) 
                FROM instructor 
                WHERE dept_name = 'Biology')
```
-------------------------1489 sample_num
```sql
SELECT name 
FROM instructor 
WHERE salary > (SELECT MIN(salary) 
                FROM instructor 
                WHERE dept_name = 'Biology')
AND dept_name != 'Biology'
UNION
SELECT name 
FROM instructor 
WHERE dept_name = 'Biology';
```
-------------------------1490 sample_num
```sql
SELECT name 
FROM instructor 
WHERE salary > (
    SELECT MAX(salary) 
    FROM instructor 
    WHERE dept_name = 'Biology'
)
```
-------------------------1491 sample_num
```sql
SELECT name 
FROM instructor 
WHERE salary > ANY (
    SELECT salary 
    FROM instructor 
    WHERE dept_name = 'Biology'
)
AND NOT dept_name = 'Biology';
```
-------------------------1492 sample_num
```sql
SELECT COUNT(*) FROM debate;
```
-------------------------1493 sample_num
```sql
SELECT Venue 
FROM debate 
ORDER BY Num_of_Audience ASC;
```
-------------------------1494 sample_num
```sql
SELECT Date, Venue FROM debate;
```
-------------------------1495 sample_num
```sql
SELECT Date 
FROM debate 
WHERE Num_of_Audience > 150;
```
-------------------------1496 sample_num
```sql
SELECT Name 
FROM people 
WHERE Age IN (35, 36);
```
-------------------------1497 sample_num
```sql
SELECT Party FROM people WHERE Age = (SELECT MIN(Age) FROM people)
```
-------------------------1498 sample_num
```sql
SELECT Party, COUNT(*) AS Num_of_People
FROM people
GROUP BY Party;
```
-------------------------1499 sample_num
```sql
SELECT Party 
FROM people 
GROUP BY Party 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------1500 sample_num
```sql
SELECT DISTINCT Venue FROM debate;
```
-------------------------1501 sample_num
```sql
SELECT p.Name, d.Date, d.Venue 
FROM people p 
JOIN debate_people dp ON p.People_ID = dp.Affirmative 
JOIN debate d ON dp.Debate_ID = d.Debate_ID;
```
-------------------------1502 sample_num
```sql
SELECT P.Name, D.Date, D.Venue 
FROM people AS P 
JOIN debate_people AS DP ON P.People_ID = DP.Negative 
JOIN debate AS D ON DP.Debate_ID = D.Debate_ID 
ORDER BY P.Name ASC;
```
-------------------------1503 sample_num
```sql
SELECT p.Name 
FROM people p 
JOIN debate_people dp ON p.People_ID = dp.Affirmative 
JOIN debate d ON dp.Debate_ID = d.Debate_ID 
WHERE d.Num_of_Audience > 200;
```
-------------------------1504 sample_num
```sql
SELECT P.Name, COUNT(DP.Affirmative) 
FROM people P 
JOIN debate_people DP ON P.People_ID = DP.Affirmative 
GROUP BY P.Name;
```
-------------------------1505 sample_num
```sql
SELECT p.Name
FROM people p
JOIN debate_people dp ON p.People_ID = dp.Negative
GROUP BY p.Name
HAVING COUNT(*) >= 2;
```
-------------------------1506 sample_num
```sql
SELECT p.Name 
FROM people p 
LEFT JOIN debate_people dp ON p.People_ID = dp.Affirmative 
WHERE dp.Affirmative IS NULL;
```
-------------------------1507 sample_num
```sql
SELECT Customer_Details 
FROM Customers 
ORDER BY Customer_Details ASC;
```
-------------------------1508 sample_num
```sql
SELECT Customer_Details 
FROM Customers 
ORDER BY Customer_Details ASC;
```
-------------------------1509 sample_num
```sql
SELECT Policies.Policy_Type_Code 
FROM Policies 
JOIN Customers ON Policies.Customer_ID = Customers.Customer_ID 
WHERE Customers.Customer_Details = 'Dayana Robel';
```
-------------------------1510 sample_num
```sql
SELECT T2.Policy_Type_Code 
FROM Customers AS T1 
JOIN Policies AS T2 ON T1.Customer_ID = T2.Customer_ID 
WHERE T1.Customer_Details = 'Dayana Robel';
```
-------------------------1511 sample_num
```sql
SELECT Policy_Type_Code, COUNT(*) as frequency
FROM Policies
GROUP BY Policy_Type_Code
ORDER BY frequency DESC
LIMIT 1;
```
-------------------------1512 sample_num
```sql
SELECT Policy_Type_Code, COUNT(*) as frequency
FROM Policies
GROUP BY Policy_Type_Code
ORDER BY frequency DESC
LIMIT 1;
```
-------------------------1513 sample_num
```sql
SELECT Policy_Type_Code 
FROM Policies 
GROUP BY Policy_Type_Code 
HAVING COUNT(DISTINCT Customer_ID) > 2;
```
-------------------------1514 sample_num
```sql
SELECT Policy_Type_Code 
FROM Policies 
GROUP BY Policy_Type_Code 
HAVING COUNT(Customer_ID) > 2;
```
-------------------------1515 sample_num
```sql
SELECT SUM(Amount_Paid) AS Total_Amount_Paid, AVG(Amount_Paid) AS Average_Amount_Paid 
FROM Claim_Headers;
```
-------------------------1516 sample_num
```sql
SELECT SUM(Amount_Paid) AS Total_Amount_Paid, AVG(Amount_Paid) AS Average_Amount_Paid 
FROM Claim_Headers;
```
-------------------------1517 sample_num
```sql
SELECT SUM(ch.Amount_Claimed) 
FROM Claim_Headers ch 
JOIN Claims_Documents cd ON ch.Claim_Header_ID = cd.Claim_ID 
WHERE cd.Created_Date = (SELECT MAX(Created_Date) FROM Claims_Documents)
```
-------------------------1518 sample_num
```sql
SELECT SUM(Amount_Claimed) 
FROM Claim_Headers
WHERE Claim_Header_ID IN (
    SELECT Claim_ID
    FROM Claims_Documents
    WHERE Created_Date = (
        SELECT MAX(Created_Date)
        FROM Claims_Documents
    )
);
```
-------------------------1519 sample_num
```sql
SELECT C.Customer_Details
FROM Customers C
JOIN Policies P ON C.Customer_ID = P.Customer_ID
JOIN Claim_Headers CH ON P.Policy_ID = CH.Policy_ID
WHERE CH.Amount_Claimed = (SELECT MAX(Amount_Claimed) FROM Claim_Headers)
```
```
-------------------------1520 sample_num
```sql
SELECT C.Customer_Details
FROM Customers C
JOIN Policies P ON C.Customer_ID = P.Customer_ID
JOIN Claim_Headers CH ON P.Policy_ID = CH.Policy_ID
WHERE CH.Amount_Claimed = (SELECT MAX(Amount_Claimed) FROM Claim_Headers)
LIMIT 1;
```
-------------------------1521 sample_num
```sql
SELECT C.Customer_Details
FROM Customers C
JOIN Policies P ON C.Customer_ID = P.Customer_ID
JOIN Claim_Headers CH ON P.Policy_ID = CH.Policy_ID
WHERE CH.Amount_Piad = (
    SELECT MIN(Amount_Piad)
    FROM Claim_Headers
)
```
```
-------------------------1522 sample_num
```sql
SELECT C.Customer_Details
FROM Customers C
JOIN Policies P ON C.Customer_ID = P.Customer_ID
JOIN Claim_Headers CH ON P.Policy_ID = CH.Policy_ID
WHERE CH.Amount_Claimed = (
    SELECT MIN(Amount_Claimed)
    FROM Claim_Headers
)
LIMIT 1;
```
-------------------------1523 sample_num
```sql
SELECT Customer_Details 
FROM Customers 
WHERE Customer_ID NOT IN (SELECT Customer_ID FROM Policies);
```
-------------------------1524 sample_num
```sql
SELECT Customer_Details FROM Customers WHERE Customer_ID NOT IN (SELECT Customer_ID FROM Policies)
```
-------------------------1525 sample_num
```sql
SELECT COUNT(*) FROM Claims_Processing_Stages;
```
-------------------------1526 sample_num
```sql
SELECT COUNT(DISTINCT Claim_Stage_ID) FROM Claims_Processing_Stages;
```
-------------------------1527 sample_num
```sql
SELECT Claim_Status_Name, COUNT(*) AS Number_of_Claims
FROM Claims_Processing_Stages cps
JOIN Claims_Processing cp ON cps.Claim_Stage_ID = cp.Claim_Stage_ID
GROUP BY Claim_Status_Name
ORDER BY Number_of_Claims DESC
LIMIT 1;
```
```
-------------------------1528 sample_num
```sql
SELECT cpst.Claim_Status_Name, COUNT(cp.Claim_Processing_ID) as Total_Claims
FROM Claims_Processing_Stages cpst
JOIN Claims_Processing cp ON cpst.Claim_Stage_ID = cp.Claim_Stage_ID
GROUP BY cpst.Claim_Status_Name
ORDER BY Total_Claims DESC
LIMIT 1;
```
-------------------------1529 sample_num
```sql
SELECT Customer_Details 
FROM Customers 
WHERE Customer_Details LIKE '%Diana%';
```
-------------------------1530 sample_num
```sql
SELECT Customer_Details 
FROM Customers 
WHERE Customer_Details LIKE '%Diana%';
```
-------------------------1531 sample_num
I'm assuming that "deputy policy" is meant to be "dependent policy", and that such policies might be indicated by a specific value in `Policy_Type_Code`. However, since we don't have exact values for `Policy_Type_Code`, I'll use a placeholder `'DP'` which should be replaced with the actual code for dependent policies.

```sql
SELECT DISTINCT C.Customer_Details
FROM Customers C
JOIN Policies P ON C.Customer_ID = P.Customer_ID
WHERE P.Policy_Type_Code = 'DP';
```
This query selects distinct customer details from the Customers table where their policy type code matches the code for dependent policies. Adjust `'DP'` as necessary based on your actual data.
-------------------------1532 sample_num
```sql
SELECT Customers.Customer_Details 
FROM Customers 
JOIN Policies ON Customers.Customer_ID = Policies.Customer_ID 
WHERE Policies.Policy_Type_Code = 'Deputy';
```
-------------------------1533 sample_num
```sql
SELECT DISTINCT c.Customer_Details
FROM Customers c
JOIN Policies p ON c.Customer_ID = p.Customer_ID
WHERE p.Policy_Type_Code IN ('Deputy', 'Uniformed');
```
-------------------------1534 sample_num
```sql
SELECT Customer_Details
FROM Customers
WHERE Customer_ID IN (
    SELECT Customer_ID
    FROM Policies
    WHERE Policy_Type_Code IN ('Deputy', 'Uniform')
);
```
-------------------------1535 sample_num
```sql
SELECT Customer_Details AS Customer_Name FROM Customers
UNION
SELECT Staff_Details AS Staff_Name FROM Staff;
```
-------------------------1536 sample_num
```sql
SELECT Customer_Details FROM Customers
UNION
SELECT Staff_Details FROM Staff
```
-------------------------1537 sample_num
```sql
SELECT Policy_Type_Code, COUNT(*) AS Number_of_Records
FROM Policies
GROUP BY Policy_Type_Code;
```
-------------------------1538 sample_num
```sql
SELECT Policy_Type_Code, COUNT(*) AS Policy_Count
FROM Policies
GROUP BY Policy_Type_Code;
```
-------------------------1539 sample_num
```sql
SELECT c.Customer_Details, COUNT(p.Policy_ID) AS PolicyCount
FROM Customers c
JOIN Policies p ON c.Customer_ID = p.Customer_ID
GROUP BY c.Customer_Details
ORDER BY PolicyCount DESC
LIMIT 1;
```
-------------------------1540 sample_num
```sql
SELECT C.Customer_Details, COUNT(P.Policy_ID) AS NumberOfPolicies
FROM Customers C
JOIN Policies P ON C.Customer_ID = P.Customer_ID
GROUP BY C.Customer_Details
ORDER BY NumberOfPolicies DESC
LIMIT 1;
```
-------------------------1541 sample_num
```sql
SELECT Claim_Status_Description 
FROM Claims_Processing_Stages 
WHERE Claim_Status_Name = 'Open';
```
-------------------------1542 sample_num
```sql
SELECT Claim_Status_Description 
FROM Claims_Processing_Stages 
WHERE Claim_Status_Name = 'Open';
```
-------------------------1543 sample_num
```sql
SELECT COUNT(DISTINCT Claim_Outcome_Code) FROM Claims_Processing;
```
-------------------------1544 sample_num
```sql
SELECT COUNT(DISTINCT Claim_Outcome_Code) 
FROM Claims_Processing;
```
-------------------------1545 sample_num
```sql
SELECT c.Customer_Details
FROM Customers c
JOIN Policies p ON c.Customer_ID = p.Customer_ID
WHERE p.Start_Date = (SELECT MAX(Start_Date) FROM Policies);
```
-------------------------1546 sample_num
```sql
SELECT c.Customer_Details
FROM Customers c
JOIN Policies p ON c.Customer_ID = p.Customer_ID
WHERE p.Start_Date = (
    SELECT MAX(Start_Date)
    FROM Policies
)
```
-------------------------1547 sample_num
```sql
SELECT COUNT(*) FROM Accounts;
```
-------------------------1548 sample_num
```sql
SELECT COUNT(*) FROM Accounts;
```
-------------------------1549 sample_num
```sql
SELECT COUNT(DISTINCT T1.customer_id) 
FROM Customers AS T1 
JOIN Accounts AS T2 
ON T1.customer_id = T2.customer_id;
```
-------------------------1550 sample_num
```sql
SELECT COUNT(DISTINCT T1.customer_id) 
FROM Customers AS T1 
JOIN Accounts AS T2 
ON T1.customer_id = T2.customer_id;
```
-------------------------1551 sample_num
```sql
SELECT account_id, date_account_opened, account_name, other_account_details 
FROM Accounts;
```
-------------------------1552 sample_num
```sql
SELECT account_id, date_account_opened, account_name, other_account_details FROM Accounts;
```
-------------------------1553 sample_num
```sql
SELECT a.account_id, a.account_name, a.other_account_details
FROM Accounts AS a
JOIN Customers AS c ON a.customer_id = c.customer_id
WHERE c.customer_first_name = 'Meaghan';
```
-------------------------1554 sample_num
```sql
SELECT Accounts.account_id, Accounts.account_name, Accounts.date_account_opened, Accounts.other_account_details 
FROM Accounts 
JOIN Customers ON Accounts.customer_id = Customers.customer_id 
WHERE Customers.customer_first_name = 'Meaghan';
```
-------------------------1555 sample_num
```sql
SELECT Accounts.account_name, Accounts.other_account_details
FROM Accounts
JOIN Customers ON Accounts.customer_id = Customers.customer_id
WHERE Customers.customer_first_name = 'Meaghan' AND Customers.customer_last_name = 'Keeling';
```
-------------------------1556 sample_num
```sql
SELECT a.account_id, a.date_account_opened, a.account_name, a.other_account_details
FROM Accounts a
JOIN Customers c ON a.customer_id = c.customer_id
WHERE c.customer_first_name = 'Meaghan' AND c.customer_last_name = 'Keeling';
```
-------------------------1557 sample_num
```sql
SELECT Customers.customer_first_name, Customers.customer_last_name 
FROM Customers
JOIN Accounts ON Customers.customer_id = Accounts.customer_id
WHERE Accounts.account_name = '900';
```
-------------------------1558 sample_num
```sql
SELECT c.customer_first_name, c.customer_middle_initial, c.customer_last_name
FROM Customers c
JOIN Accounts a ON c.customer_id = a.customer_id
WHERE a.account_name = '900';
```
-------------------------1559 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
WHERE NOT EXISTS (
    SELECT 1 
    FROM Accounts 
    WHERE Accounts.customer_id = Customers.customer_id
);
```
-------------------------1560 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)
```
-------------------------1561 sample_num
```sql
SELECT DISTINCT c.customer_first_name, c.customer_last_name, c.phone_number 
FROM Customers c
JOIN Accounts a ON c.customer_id = a.customer_id;
```
-------------------------1562 sample_num
```sql
SELECT DISTINCT c.customer_first_name, c.customer_last_name, c.phone_number 
FROM Customers c
JOIN Accounts a ON c.customer_id = a.customer_id;
```
-------------------------1563 sample_num
```sql
SELECT customer_id 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)
```
-------------------------1564 sample_num
```sql
SELECT customer_id FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)
```
-------------------------1565 sample_num
```sql
SELECT COUNT(*) AS NumberOfAccounts, customer_id 
FROM Accounts 
GROUP BY customer_id;
```
-------------------------1566 sample_num
```sql
SELECT customer_id, COUNT(*) as num_accounts
FROM Accounts
GROUP BY customer_id;
```
-------------------------1567 sample_num
```sql
SELECT c.customer_id, c.customer_first_name, c.customer_last_name, COUNT(a.account_id) as num_accounts
FROM Customers c
JOIN Accounts a ON c.customer_id = a.customer_id
GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name
ORDER BY num_accounts DESC
LIMIT 1;
```
-------------------------1568 sample_num
```sql
SELECT c.customer_id, c.customer_first_name, c.customer_last_name 
FROM Customers c
JOIN (
    SELECT customer_id, COUNT(*) as account_count
    FROM Accounts
    GROUP BY customer_id
    ORDER BY account_count DESC
    LIMIT 1
) a ON c.customer_id = a.customer_id;
```
-------------------------1569 sample_num
```sql
SELECT c.customer_id, c.customer_first_name, c.customer_last_name, COUNT(a.account_id) as num_accounts
FROM Customers c
LEFT JOIN Accounts a ON c.customer_id = a.customer_id
GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name;
```
-------------------------1570 sample_num
```sql
SELECT c.customer_id, c.customer_first_name, c.customer_last_name, COUNT(a.account_id) as num_accounts
FROM Customers c
LEFT JOIN Accounts a ON c.customer_id = a.customer_id
GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name
```
-------------------------1571 sample_num
```sql
SELECT c.customer_first_name, c.customer_id
FROM Customers c
JOIN Accounts a ON c.customer_id = a.customer_id
GROUP BY c.customer_id, c.customer_first_name
HAVING COUNT(a.account_id) >= 2;
```
-------------------------1572 sample_num
```sql
SELECT c.customer_id, c.customer_first_name
FROM Customers c
JOIN Accounts a ON c.customer_id = a.customer_id
GROUP BY c.customer_id, c.customer_first_name
HAVING COUNT(a.account_id) >= 2;
```
-------------------------1573 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------1574 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------1575 sample_num
```sql
SELECT gender, COUNT(*) AS number_of_customers
FROM Customers
GROUP BY gender;
```
-------------------------1576 sample_num
```sql
SELECT gender, COUNT(*) AS number_of_customers
FROM Customers
GROUP BY gender;
```
-------------------------1577 sample_num
```sql
SELECT COUNT(*) FROM Financial_Transactions;
```
-------------------------1578 sample_num
```sql
SELECT COUNT(*) FROM Financial_Transactions;
```
-------------------------1579 sample_num
```sql
SELECT COUNT(transaction_id) AS Number_of_Transactions, account_id 
FROM Financial_Transactions 
GROUP BY account_id;
```
-------------------------1580 sample_num
```sql
SELECT account_id, COUNT(*) 
FROM Financial_Transactions 
GROUP BY account_id;
```
-------------------------1581 sample_num
```sql
SELECT COUNT(*) 
FROM Financial_Transactions 
WHERE account_id = (SELECT account_id FROM Accounts WHERE account_name = '337');
```
-------------------------1582 sample_num
```sql
SELECT COUNT(*) 
FROM Financial_Transactions 
WHERE account_id = (SELECT account_id FROM Accounts WHERE account_name = '337');
```
-------------------------1583 sample_num
```sql
SELECT AVG(transaction_amount) AS average_transaction_amount,
       MIN(transaction_amount) AS minimum_transaction_amount,
       MAX(transaction_amount) AS maximum_transaction_amount,
       SUM(transaction_amount) AS total_transaction_amount
FROM Financial_Transactions;
```
-------------------------1584 sample_num
```sql
SELECT AVG(transaction_amount) as Average_Amount, 
       MIN(transaction_amount) as Minimum_Amount, 
       MAX(transaction_amount) as Maximum_Amount, 
       SUM(transaction_amount) as Total_Amount 
FROM Financial_Transactions;
```
-------------------------1585 sample_num
```sql
SELECT transaction_id 
FROM Financial_Transactions 
WHERE transaction_amount > (SELECT AVG(transaction_amount) FROM Financial_Transactions);
```
-------------------------1586 sample_num
```sql
SELECT transaction_id FROM Financial_Transactions WHERE transaction_amount > (SELECT AVG(transaction_amount) FROM Financial_Transactions);
```
-------------------------1587 sample_num
```sql
SELECT transaction_type, SUM(transaction_amount) 
FROM Financial_Transactions 
GROUP BY transaction_type;
```
-------------------------1588 sample_num
```sql
SELECT transaction_type, SUM(transaction_amount) AS total_transaction_amount 
FROM Financial_Transactions 
GROUP BY transaction_type;
```
-------------------------1589 sample_num
```sql
SELECT Accounts.account_name, Accounts.account_id, COUNT(Financial_Transactions.transaction_id) AS num_transactions
FROM Accounts
LEFT JOIN Financial_Transactions ON Accounts.account_id = Financial_Transactions.account_id
GROUP BY Accounts.account_id;
```
-------------------------1590 sample_num
```sql
SELECT Accounts.account_id, Accounts.account_name, COUNT(Financial_Transactions.transaction_id) AS num_transactions
FROM Accounts
LEFT JOIN Financial_Transactions ON Accounts.account_id = Financial_Transactions.account_id
GROUP BY Accounts.account_id, Accounts.account_name
```
-------------------------1591 sample_num
```sql
SELECT account_id, COUNT(*) as transaction_count
FROM Financial_Transactions
GROUP BY account_id
ORDER BY transaction_count DESC
LIMIT 1;
```
-------------------------1592 sample_num
```sql
SELECT account_id 
FROM Financial_Transactions 
GROUP BY account_id 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------1593 sample_num
```sql
SELECT T1.account_id, T1.account_name 
FROM Accounts AS T1 
JOIN Financial_Transactions AS T2 ON T1.account_id = T2.account_id 
GROUP BY T1.account_id, T1.account_name 
HAVING COUNT(T2.transaction_id) >= 4;
```
-------------------------1594 sample_num
```sql
SELECT a.account_id, a.account_name
FROM Accounts a
JOIN Financial_Transactions ft ON a.account_id = ft.account_id
GROUP BY a.account_id, a.account_name
HAVING COUNT(ft.transaction_id) >= 4;
```
-------------------------1595 sample_num
```sql
SELECT DISTINCT product_size FROM Products;
```
-------------------------1596 sample_num
```sql
SELECT DISTINCT product_size FROM Products;
```
-------------------------1597 sample_num
```sql
SELECT DISTINCT product_color FROM Products;
```
-------------------------1598 sample_num
```sql
SELECT DISTINCT product_color 
FROM Products;
```
-------------------------1599 sample_num
```sql
SELECT Invoice_number, COUNT(*) AS Number_of_Transactions
FROM Financial_Transactions
GROUP BY Invoice_number;
```
-------------------------1600 sample_num
```sql
SELECT invoice_number, COUNT(*) as transaction_count
FROM Financial_Transactions
GROUP BY invoice_number;
```
-------------------------1601 sample_num
```sql
SELECT T1.invoice_number, T1.invoice_date 
FROM Invoices AS T1 
JOIN Financial_Transactions AS T2 
ON T1.invoice_number = T2.invoice_number 
GROUP BY T1.invoice_number 
ORDER BY COUNT(T2.transaction_id) DESC 
LIMIT 1;
```
-------------------------1602 sample_num
```sql
SELECT T1.invoice_number, T1.invoice_date 
FROM Invoices AS T1 
JOIN Financial_Transactions AS T2 
ON T1.invoice_number = T2.invoice_number 
GROUP BY T1.invoice_number 
ORDER BY COUNT(T2.transaction_id) DESC 
LIMIT 1;
```
-------------------------1603 sample_num
```sql
SELECT COUNT(*) FROM Invoices;
```
-------------------------1604 sample_num
```sql
SELECT COUNT(*) FROM Invoices;
```
-------------------------1605 sample_num
```sql
SELECT i.invoice_date, o.order_id, o.order_details 
FROM Invoices i 
JOIN Orders o ON i.order_id = o.order_id;
```
-------------------------1606 sample_num
```sql
SELECT i.invoice_date, o.order_id, o.order_details 
FROM Invoices i 
JOIN Orders o ON i.order_id = o.order_id;
```
-------------------------1607 sample_num
```sql
SELECT order_id, COUNT(invoice_number) AS num_invoices
FROM Invoices
GROUP BY order_id;
```
-------------------------1608 sample_num
```sql
SELECT order_id, COUNT(invoice_number) as invoice_count
FROM Invoices
GROUP BY order_id;
```
-------------------------1609 sample_num
```sql
SELECT o.order_id, o.order_details
FROM Orders o
WHERE (
    SELECT COUNT(*)
    FROM Invoices i
    WHERE o.order_id = i.order_id
) > 2;
```
-------------------------1610 sample_num
```sql
SELECT o.order_id, o.order_details
FROM Orders o
WHERE o.order_id IN (
    SELECT i.order_id
    FROM Invoices i
    GROUP BY i.order_id
    HAVING COUNT(i.invoice_number) >= 2
)
```
-------------------------1611 sample_num
```sql
SELECT c.customer_last_name, c.customer_id, c.phone_number
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.customer_last_name, c.phone_number
ORDER BY COUNT(o.order_id) DESC
LIMIT 1;
```
-------------------------1612 sample_num
```sql
SELECT C.customer_last_name, C.customer_id, C.phone_number
FROM Customers C
JOIN Orders O ON C.customer_id = O.customer_id
GROUP BY C.customer_id, C.customer_last_name, C.phone_number
ORDER BY COUNT(O.order_id) DESC
LIMIT 1;
```
-------------------------1613 sample_num
```sql
SELECT Products.product_name 
FROM Products 
LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id 
WHERE Order_Items.product_id IS NULL;
```
-------------------------1614 sample_num
```sql
SELECT p.product_name 
FROM Products p 
LEFT JOIN Order_Items oi ON p.product_id = oi.product_id 
WHERE oi.product_id IS NULL;
```
-------------------------1615 sample_num
```sql
SELECT p.product_name, SUM(oi.product_quantity) AS total_quantity_ordered
FROM Products p
JOIN Order_Items oi ON p.product_id = oi.product_id
GROUP BY p.product_name;
```
-------------------------1616 sample_num
```sql
SELECT Products.product_name, SUM(Order_Items.product_quantity) as total_quantity_ordered
FROM Products
JOIN Order_Items ON Products.product_id = Order_Items.product_id
GROUP BY Products.product_name;
```
-------------------------1617 sample_num
```sql
SELECT Orders.order_id, COUNT(Order_Items.order_item_id) AS number_of_items
FROM Orders
JOIN Order_Items ON Orders.order_id = Order_Items.order_id
GROUP BY Orders.order_id;
```
-------------------------1618 sample_num
```sql
SELECT order_id, COUNT(order_item_id) AS numberOfOrderItems
FROM Order_Items
GROUP BY order_id;
```
-------------------------1619 sample_num
```sql
SELECT product_id, COUNT(DISTINCT order_id) AS unique_orders
FROM Order_Items
GROUP BY product_id;
```
-------------------------1620 sample_num
```sql
SELECT product_id, COUNT(DISTINCT order_id) 
FROM Order_Items 
GROUP BY product_id;
```
-------------------------1621 sample_num
```sql
SELECT P.product_name, COUNT(DISTINCT C.customer_id) AS NumberOfCustomers
FROM Products P
JOIN Order_Items OI ON P.product_id = OI.product_id
JOIN Orders O ON OI.order_id = O.order_id
JOIN Customers C ON O.customer_id = C.customer_id
GROUP BY P.product_name;
```
-------------------------1622 sample_num
```sql
SELECT p.product_name, COUNT(DISTINCT o.customer_id) AS num_customers
FROM Products p
JOIN Order_Items oi ON p.product_id = oi.product_id
JOIN Orders o ON oi.order_id = o.order_id
GROUP BY p.product_name;
```
-------------------------1623 sample_num
```sql
SELECT Orders.order_id, COUNT(Order_Items.product_id) AS numberOfProducts
FROM Orders
JOIN Order_Items ON Orders.order_id = Order_Items.order_id
GROUP BY Orders.order_id;
```
-------------------------1624 sample_num
```sql
SELECT order_id, COUNT(DISTINCT product_id) 
FROM Order_Items 
GROUP BY order_id;
```
-------------------------1625 sample_num
```sql
SELECT Orders.order_id, SUM(Order_Items.product_quantity) as total_quantity
FROM Orders
JOIN Order_Items ON Orders.order_id = Order_Items.order_id
GROUP BY Orders.order_id;
```
-------------------------1626 sample_num
```sql
SELECT Orders.order_id, SUM(Order_Items.product_quantity) AS total_product_quantity
FROM Orders
JOIN Order_Items ON Orders.order_id = Order_Items.order_id
GROUP BY Orders.order_id;
```
-------------------------1627 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
WHERE product_id NOT IN (SELECT product_id FROM Order_Items)
```
```
-------------------------1628 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
WHERE product_id NOT IN (SELECT product_id FROM Order_Items)
```
-------------------------1629 sample_num
```sql
SELECT COUNT(*) FROM church WHERE Open_Date < 1850;
```
-------------------------1630 sample_num
```sql
SELECT Name, Open_Date, Organized_by FROM church;
```
-------------------------1631 sample_num
```sql
SELECT Name 
FROM church 
ORDER BY Open_Date DESC;
```
-------------------------1632 sample_num
```sql
SELECT Open_Date AS Opening_Year
FROM church
GROUP BY Open_Date
HAVING COUNT(*) >= 2
```
-------------------------1633 sample_num
```sql
SELECT Organized_by, Name 
FROM church 
WHERE Open_Date BETWEEN 1830 AND 1840;
```
-------------------------1634 sample_num
```sql
SELECT Open_Date, COUNT(*) 
FROM church 
GROUP BY Open_Date;
```
-------------------------1635 sample_num
```sql
SELECT T1.Name, T1.Open_Date 
FROM church AS T1 
JOIN wedding AS T2 ON T1.Church_ID = T2.Church_ID 
ORDER BY T1.Open_Date DESC 
LIMIT 3;
``` 
However, to only get the information from the 'church' table, a correct query would be:
```sql
SELECT Name, Open_Date 
FROM church 
ORDER BY Open_Date DESC 
LIMIT 3;
```
-------------------------1636 sample_num
```sql
SELECT COUNT(*) FROM people WHERE Age > 30 AND Is_Male = 'No';
```
-------------------------1637 sample_num
```sql
SELECT DISTINCT Country 
FROM people 
WHERE Age > 25 AND Age < 30;
```
-------------------------1638 sample_num
```sql
SELECT MIN(Age) AS Min_Age, MAX(Age) AS Max_Age, AVG(Age) AS Avg_Age FROM people;
```
-------------------------1639 sample_num
```sql
SELECT Name, Country 
FROM people 
WHERE Age < (SELECT AVG(Age) FROM people);
```
-------------------------1640 sample_num
```sql
SELECT p1.Name, p2.Name 
FROM wedding w 
JOIN people p1 ON w.Male_ID = p1.People_ID 
JOIN people p2 ON w.Female_ID = p2.People_ID 
WHERE w.Year > 2014;
```
-------------------------1641 sample_num
```sql
SELECT Name, Age 
FROM people 
WHERE Is_Male = 1 AND People_ID NOT IN (SELECT Male_ID FROM wedding);
```
-------------------------1642 sample_num
```sql
SELECT Name 
FROM church 
WHERE Church_ID NOT IN (SELECT Church_ID FROM wedding WHERE Year = 2015)
```
-------------------------1643 sample_num
```sql
SELECT T2.Name 
FROM wedding AS T1 
JOIN church AS T2 ON T1.Church_ID = T2.Church_ID 
GROUP BY T2.Name 
HAVING COUNT(*) >= 2;
```
-------------------------1644 sample_num
```sql
SELECT p.Name
FROM people p
JOIN wedding w ON p.People_ID = w.Female_ID
WHERE p.Country = 'Canada'
AND p.Is_Male = 'No'
AND w.Year = 2016;
```
-------------------------1645 sample_num
```sql
SELECT COUNT(*) 
FROM wedding 
WHERE Year = 2016;
```
-------------------------1646 sample_num
```sql
SELECT T2.Name FROM wedding AS T1 JOIN church AS T2 ON T1.Church_ID = T2.Church_ID JOIN people AS T3 ON T1.Male_ID = T3.People_ID OR T1.Female_ID = T3.People_ID WHERE T3.Age > 30
```
-------------------------1647 sample_num
```sql
SELECT Country, COUNT(*) AS NumberOfPeople
FROM people
GROUP BY Country;
```
-------------------------1648 sample_num
```sql
SELECT COUNT(DISTINCT T1.Church_ID) FROM church AS T1 JOIN wedding AS T2 ON T1.Church_ID = T2.Church_ID WHERE T2.Year = 2016
```
-------------------------1649 sample_num
```sql
SELECT COUNT(*) FROM artist;
```
-------------------------1650 sample_num
```sql
SELECT COUNT(*) FROM artist;
```
-------------------------1651 sample_num
```sql
SELECT Name, Age, Country 
FROM artist 
ORDER BY Year_Join;
```
-------------------------1652 sample_num
```sql
SELECT Name, Age, Country
FROM artist
ORDER BY Year_Join;
```
-------------------------1653 sample_num
```sql
SELECT DISTINCT Country FROM artist;
```
-------------------------1654 sample_num
```sql
SELECT DISTINCT Country FROM artist;
```
-------------------------1655 sample_num
```sql
SELECT Name, Year_Join 
FROM artist 
WHERE Country <> 'United States';
```
-------------------------1656 sample_num
```sql
SELECT Name, Year_Join 
FROM artist 
WHERE Country != 'United States';
```
-------------------------1657 sample_num
```sql
SELECT COUNT(*) FROM artist WHERE Age > 46 AND Year_Join > 1990;
```
-------------------------1658 sample_num
```sql
SELECT COUNT(*) FROM artist WHERE Age > 46 AND Year_Join > 1990;
```
-------------------------1659 sample_num
```sql
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age 
FROM artist 
WHERE Country = 'United States';
```
-------------------------1660 sample_num
```sql
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age 
FROM artist 
WHERE Country = 'United States';
```
-------------------------1661 sample_num
```sql
SELECT Name FROM artist WHERE Year_Join = (SELECT MAX(Year_Join) FROM artist);
```
-------------------------1662 sample_num
```sql
SELECT Name 
FROM artist 
ORDER BY Year_Join DESC 
LIMIT 1;
```
-------------------------1663 sample_num
```sql
SELECT COUNT(*) 
FROM exhibition 
WHERE Year >= 2005;
```
-------------------------1664 sample_num
```sql
SELECT COUNT(*) 
FROM exhibition 
WHERE Year >= 2005;
```
-------------------------1665 sample_num
```sql
SELECT Theme, Year FROM exhibition WHERE Ticket_Price < 15;
```
-------------------------1666 sample_num
```sql
SELECT Theme, Year FROM exhibition WHERE Ticket_Price < 15;
```
-------------------------1667 sample_num
```sql
SELECT A.Name, COUNT(E.Exhibition_ID) 
FROM artist A 
JOIN exhibition E ON A.Artist_ID = E.Artist_ID 
GROUP BY A.Name;
```
-------------------------1668 sample_num
```sql
SELECT a.Name, COUNT(e.Exhibition_ID) as Num_Exhibitions
FROM artist a
JOIN exhibition e ON a.Artist_ID = e.Artist_ID
GROUP BY a.Artist_ID, a.Name;
```
-------------------------1669 sample_num
```sql
SELECT T1.Name, T1.Country 
FROM artist AS T1 
JOIN exhibition AS T2 
ON T1.Artist_ID = T2.Artist_ID 
GROUP BY T1.Artist_ID 
ORDER BY COUNT(T2.Exhibition_ID) DESC 
LIMIT 1;
```
-------------------------1670 sample_num
```sql
SELECT T1.Name, T1.Country 
FROM artist AS T1 
JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID 
GROUP BY T1.Artist_ID 
ORDER BY COUNT(T2.Exhibition_ID) DESC 
LIMIT 1;
```
-------------------------1671 sample_num
```sql
SELECT Name 
FROM artist 
WHERE Artist_ID NOT IN (SELECT DISTINCT Artist_ID FROM exhibition);
```
-------------------------1672 sample_num
```sql
SELECT Name 
FROM artist 
WHERE Artist_ID NOT IN (SELECT Artist_ID FROM exhibition);
```
-------------------------1673 sample_num
```sql
SELECT exhibition.Theme, artist.Name 
FROM exhibition 
JOIN artist ON exhibition.Artist_ID = artist.Artist_ID 
WHERE exhibition.Ticket_Price > (SELECT AVG(Ticket_Price) FROM exhibition);
```
-------------------------1674 sample_num
```sql
SELECT T1.Name, T2.Theme 
FROM artist AS T1 
JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID 
WHERE T2.Ticket_Price > (SELECT AVG(Ticket_Price) FROM exhibition);
```
-------------------------1675 sample_num
```sql
SELECT AVG(Ticket_Price) AS Average_Price, MIN(Ticket_Price) AS Min_Price, MAX(Ticket_Price) AS Max_Price 
FROM exhibition 
WHERE Year < 2009;
```
-------------------------1676 sample_num
```sql
SELECT AVG(Ticket_Price) AS Average_Price, MIN(Ticket_Price) AS Minimum_Price, MAX(Ticket_Price) AS Maximum_Price 
FROM exhibition 
WHERE Year < 2009;
```
-------------------------1677 sample_num
```sql
SELECT Theme, Year 
FROM exhibition 
ORDER BY Ticket_Price DESC;
```
-------------------------1678 sample_num
```sql
SELECT Theme, Year 
FROM exhibition 
ORDER BY Ticket_Price DESC;
```
-------------------------1679 sample_num
```sql
SELECT exhibition.Theme, exhibition_record.Date, exhibition_record.Attendance 
FROM exhibition 
JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID 
WHERE exhibition.Year = 2004;
```
-------------------------1680 sample_num
```sql
SELECT exhibition.Theme, exhibition_record.Date, exhibition_record.Attendance 
FROM exhibition 
JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID 
WHERE YEAR(exhibition_record.Date) = 2004;
```
-------------------------1681 sample_num
```sql
SELECT Name 
FROM artist 
WHERE Artist_ID NOT IN (
    SELECT Artist_ID 
    FROM exhibition 
    WHERE Year = 2004
);
```
-------------------------1682 sample_num
```sql
SELECT Name 
FROM artist 
WHERE Artist_ID NOT IN (
    SELECT Artist_ID 
    FROM exhibition 
    WHERE Year = 2004
);
```
-------------------------1683 sample_num
```sql
SELECT T1.Theme 
FROM exhibition AS T1 
JOIN exhibition_record AS T2 ON T1.Exhibition_ID = T2.Exhibition_ID 
WHERE T2.Attendance < 100 
INTERSECT 
SELECT T1.Theme 
FROM exhibition AS T1 
JOIN exhibition_record AS T2 ON T1.Exhibition_ID = T2.Exhibition_ID 
WHERE T2.Attendance > 500
```
-------------------------1684 sample_num
```sql
SELECT T1.Theme 
FROM exhibition AS T1 
JOIN exhibition_record AS T2 ON T1.Exhibition_ID = T2.Exhibition_ID 
WHERE T2.Attendance < 100 
INTERSECT 
SELECT T1.Theme 
FROM exhibition AS T1 
JOIN exhibition_record AS T2 ON T1.Exhibition_ID = T2.Exhibition_ID 
WHERE T2.Attendance > 500
```
-------------------------1685 sample_num
```sql
SELECT COUNT(*) 
FROM exhibition e 
JOIN exhibition_record er ON e.Exhibition_ID = er.Exhibition_ID 
WHERE er.Attendance > 100 OR e.Ticket_Price < 10;
```
-------------------------1686 sample_num
```sql
SELECT COUNT(*) 
FROM exhibition e 
JOIN exhibition_record er ON e.Exhibition_ID = er.Exhibition_ID 
WHERE er.Attendance > 100 OR e.Ticket_Price < 10;
```
-------------------------1687 sample_num
```sql
SELECT T1.Name 
FROM artist AS T1 
JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID 
JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID 
GROUP BY T1.Artist_ID 
HAVING AVG(T3.Attendance) > 200;
```
-------------------------1688 sample_num
```sql
SELECT T1.Name 
FROM artist AS T1 
JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID 
JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID 
GROUP BY T1.Artist_ID 
HAVING AVG(T3.Attendance) > 200;
```
-------------------------1689 sample_num
```sql
SELECT i_id FROM item WHERE title = 'orange';
```
-------------------------1690 sample_num
```sql
SELECT * FROM item;
```
-------------------------1691 sample_num
```sql
SELECT COUNT(*) FROM review;
```
-------------------------1692 sample_num
```sql
SELECT COUNT(*) FROM useracct;
```
-------------------------1693 sample_num
```sql
SELECT AVG(rating), MAX(rating) FROM review;
```
-------------------------1694 sample_num
```sql
SELECT MAX(rank) FROM review;
```
-------------------------1695 sample_num
```sql
SELECT COUNT(DISTINCT u_id) FROM review;
```
-------------------------1696 sample_num
```sql
SELECT COUNT(DISTINCT i_id) FROM review;
```
-------------------------1697 sample_num
```sql
SELECT COUNT(*) 
FROM item 
WHERE i_id NOT IN (SELECT i_id FROM review)
```
-------------------------1698 sample_num
```sql
SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)
```
-------------------------1699 sample_num
```sql
SELECT title 
FROM item 
WHERE i_id IN (SELECT i_id 
               FROM review 
               WHERE rating = 10)
```
-------------------------1700 sample_num
```sql
SELECT i.title 
FROM item i 
JOIN review r ON i.i_id = r.i_id 
WHERE r.rating > (SELECT AVG(rating) FROM review)
GROUP BY i.title;
```
-------------------------1701 sample_num
```sql
SELECT DISTINCT i.title 
FROM item i
JOIN review r ON i.i_id = r.i_id
WHERE r.rating < 5;
```
-------------------------1702 sample_num
```sql
SELECT title 
FROM item 
WHERE i_id IN (
    SELECT i_id 
    FROM review 
    WHERE rating > 8
    ) 
AND i_id IN (
    SELECT i_id 
    FROM review 
    WHERE rating < 5
)
```
-------------------------1703 sample_num
```sql
SELECT i.title 
FROM item i
JOIN review r ON i.i_id = r.i_id
GROUP BY i.i_id, i.title
HAVING AVG(r.rating) > 5 AND MAX(r.rank) > 3
```
-------------------------1704 sample_num
```sql
SELECT i.title 
FROM item i 
JOIN review r ON i.i_id = r.i_id 
GROUP BY i.title 
ORDER BY AVG(r.rating) ASC 
LIMIT 1;
```
-------------------------1705 sample_num
```sql
SELECT title 
FROM item 
ORDER BY title ASC;
```
-------------------------1706 sample_num
```sql
SELECT U.name 
FROM useracct U 
JOIN review R ON U.u_id = R.u_id 
GROUP BY R.u_id 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------1707 sample_num
```sql
SELECT i.title, i.i_id 
FROM item i 
JOIN review r ON i.i_id = r.i_id 
GROUP BY i.i_id, i.title 
ORDER BY AVG(r.rating) DESC 
LIMIT 1;
```
-------------------------1708 sample_num
```sql
SELECT i.title, i.i_id 
FROM item i
JOIN review r ON i.i_id = r.i_id
GROUP BY i.i_id, i.title
ORDER BY AVG(r.rank) DESC
LIMIT 1;
```
-------------------------1709 sample_num
```sql
SELECT U.name, AVG(R.rating) 
FROM useracct AS U 
JOIN review AS R ON U.u_id = R.u_id 
GROUP BY R.u_id;
```
-------------------------1710 sample_num
```sql
SELECT U.name, COUNT(R.a_id) AS num_reviews
FROM useracct U
JOIN review R ON U.u_id = R.u_id
GROUP BY U.u_id, U.name;
```
-------------------------1711 sample_num
```sql
SELECT U.name 
FROM useracct U 
JOIN review R ON U.u_id = R.u_id 
WHERE R.rating = (SELECT MAX(rating) FROM review);
```
-------------------------1712 sample_num
```sql
SELECT T1.name 
FROM useracct AS T1 
JOIN (
  SELECT source_u_id, AVG(trust) as avg_trust 
  FROM trust 
  GROUP BY source_u_id
) AS T2 
ON T1.u_id = T2.source_u_id 
ORDER BY avg_trust DESC 
LIMIT 1;
```
-------------------------1713 sample_num
```sql
SELECT T2.name, AVG(T1.trust) AS avg_trust 
FROM trust AS T1 
JOIN useracct AS T2 ON T1.target_u_id = T2.u_id 
GROUP BY T1.target_u_id;
```
-------------------------1714 sample_num
```sql
SELECT U.name 
FROM useracct U 
JOIN trust T ON U.u_id = T.target_u_id 
WHERE T.trust = (SELECT MIN(trust) FROM trust)
LIMIT 1;
```
-------------------------1715 sample_num
```sql
SELECT title 
FROM item 
WHERE i_id NOT IN (SELECT i_id FROM review)
```
-------------------------1716 sample_num
```sql
SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)
```
-------------------------1717 sample_num
```sql
SELECT COUNT(*) 
FROM useracct 
WHERE u_id NOT IN (SELECT u_id FROM review)
```
-------------------------1718 sample_num
```sql
SELECT COUNT(*) 
FROM item 
WHERE i_id NOT IN (SELECT i_id FROM review)
```
-------------------------1719 sample_num
```sql
SELECT COUNT(*) FROM player;
```
-------------------------1720 sample_num
```sql
SELECT Player_name 
FROM player 
ORDER BY Votes ASC;
```
-------------------------1721 sample_num
```sql
SELECT Gender, Occupation FROM player;
```
-------------------------1722 sample_num
```sql
SELECT Player_name, Residence 
FROM player 
WHERE Occupation != 'Researcher';
```
-------------------------1723 sample_num
```sql
SELECT Sponsor_name 
FROM player 
WHERE Residence IN ('Brandon', 'Birtle');
```
-------------------------1724 sample_num
```sql
SELECT Player_name FROM player WHERE Votes = (SELECT MAX(Votes) FROM player);
```
-------------------------1725 sample_num
```sql
SELECT Occupation, COUNT(Player_ID) 
FROM player 
GROUP BY Occupation;
```
-------------------------1726 sample_num
```sql
SELECT Occupation, COUNT(*) AS count
FROM player
GROUP BY Occupation
ORDER BY count DESC
LIMIT 1;
```
-------------------------1727 sample_num
```sql
SELECT Residence 
FROM player 
GROUP BY Residence 
HAVING COUNT(Player_ID) >= 2;
```
-------------------------1728 sample_num
```sql
SELECT p.Player_name, c.Coach_name 
FROM player p
JOIN player_coach pc ON p.Player_ID = pc.Player_ID
JOIN coach c ON pc.Coach_ID = c.Coach_ID;
```
-------------------------1729 sample_num
```sql
SELECT p.Player_name 
FROM player p 
JOIN player_coach pc ON p.Player_ID = pc.Player_ID 
JOIN coach c ON pc.Coach_ID = c.Coach_ID 
WHERE c.Rank = 1;
```
-------------------------1730 sample_num
```sql
SELECT p.Player_name, p.Gender 
FROM player p 
JOIN player_coach pc ON p.Player_ID = pc.Player_ID 
WHERE pc.Starting_year > 2011;
```
-------------------------1731 sample_num
```sql
SELECT p.Player_name, c.Coach_name
FROM player p
JOIN player_coach pc ON p.Player_ID = pc.Player_ID
JOIN coach c ON pc.Coach_ID = c.Coach_ID
ORDER BY p.Votes DESC;
```
-------------------------1732 sample_num
```sql
SELECT Player_name 
FROM player 
WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)
```
-------------------------1733 sample_num
```sql
SELECT 
    Residence 
FROM 
    player 
WHERE 
    Gender = 'M' 
INTERSECT 
SELECT 
    Residence 
FROM 
    player 
WHERE 
    Gender = 'F'
```
-------------------------1734 sample_num
```sql
SELECT c.Club_ID, c.Club_name, COUNT(co.Coach_ID) AS NumberOfCoaches
FROM club c
JOIN coach co ON c.Club_ID = co.Club_ID
GROUP BY c.Club_ID, c.Club_name;
```
-------------------------1735 sample_num
```sql
SELECT T1.Gold 
FROM (
SELECT T2.Club_ID, COUNT(T2.Coach_ID) AS Coach_Count 
FROM coach AS T2 
GROUP BY T2.Club_ID 
ORDER BY Coach_Count DESC 
LIMIT 1
) AS T1 
JOIN match_result AS T3 
ON T1.Club_ID = T3.Club_ID;
```
-------------------------1736 sample_num
```sql
SELECT COUNT(*) FROM gymnast
```
-------------------------1737 sample_num
```sql
SELECT COUNT(*) FROM gymnast;
```
-------------------------1738 sample_num
```sql
SELECT Gymnast_ID, Total_Points 
FROM gymnast 
ORDER BY Total_Points DESC;
```
-------------------------1739 sample_num
```sql
SELECT Gymnast_ID, Total_Points 
FROM gymnast 
ORDER BY Total_Points DESC;
```
-------------------------1740 sample_num
```sql
SELECT g.Total_Points 
FROM gymnast g
ORDER BY g.Floor_Exercise_Points DESC;
```
-------------------------1741 sample_num
```sql
SELECT Gymnast_ID, Total_Points 
FROM gymnast 
ORDER BY Floor_Exercise_Points DESC;
```
-------------------------1742 sample_num
```sql
SELECT AVG(Horizontal_Bar_Points) FROM gymnast;
```
-------------------------1743 sample_num
```sql
SELECT AVG(Horizontal_Bar_Points) FROM gymnast;
```
-------------------------1744 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Name ASC;
```
-------------------------1745 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Name ASC;
```
-------------------------1746 sample_num
```sql
SELECT Name FROM people WHERE People_ID IN (SELECT Gymnast_ID FROM gymnast)
```
-------------------------1747 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID IN (SELECT Gymnast_ID FROM gymnast);
```
-------------------------1748 sample_num
```sql
SELECT p.Name
FROM people p
JOIN gymnast g ON p.People_ID = g.Gymnast_ID
WHERE p.Hometown <> 'Santo Domingo';
```
-------------------------1749 sample_num
```sql
SELECT p.Name
FROM people p
JOIN gymnast g ON p.People_ID = g.Gymnast_ID
WHERE p.Hometown <> 'Santo Domingo';
```
-------------------------1750 sample_num
```sql
SELECT Age 
FROM people 
WHERE Height = (SELECT MAX(Height) FROM people);
```
-------------------------1751 sample_num
```sql
SELECT Age 
FROM people 
WHERE Height = (SELECT MAX(Height) FROM people);
```
-------------------------1752 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Age DESC 
LIMIT 5;
```
-------------------------1753 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Age DESC 
LIMIT 5;
```
-------------------------1754 sample_num
```sql
SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Age = (SELECT MIN(Age) FROM people)
```
-------------------------1755 sample_num
```sql
SELECT T1.Total_Points 
FROM gymnast AS T1 
JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID 
WHERE T2.Age = (SELECT MIN(Age) FROM people)
```
```
-------------------------1756 sample_num
```sql
SELECT AVG(Age) 
FROM people 
WHERE People_ID IN (SELECT Gymnast_ID FROM gymnast);
```
-------------------------1757 sample_num
```sql
SELECT AVG(Age) 
FROM people 
WHERE People_ID IN (SELECT Gymnast_ID FROM gymnast);
```
-------------------------1758 sample_num
```sql
SELECT DISTINCT T2.Hometown 
FROM gymnast AS T1 
JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID 
WHERE T1.Total_Points > 57.5;
```
-------------------------1759 sample_num
```sql
SELECT DISTINCT T2.Hometown 
FROM gymnast AS T1 
JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID 
WHERE T1.Total_Points > 57.5;
```
-------------------------1760 sample_num
```sql
SELECT p.Hometown, COUNT(g.Gymnast_ID) 
FROM people p 
JOIN gymnast g ON p.People_ID = g.Gymnast_ID 
GROUP BY p.Hometown;
```
-------------------------1761 sample_num
```sql
SELECT p.Hometown, COUNT(g.Gymnast_ID) 
FROM people p 
JOIN gymnast g ON p.People_ID = g.Gymnast_ID 
GROUP BY p.Hometown;
```
-------------------------1762 sample_num
```sql
SELECT T2.Hometown, COUNT(T1.Gymnast_ID) AS Count 
FROM gymnast AS T1 
JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID 
GROUP BY T2.Hometown 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------1763 sample_num
```sql
SELECT T2.Hometown 
FROM gymnast AS T1 
JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID 
GROUP BY T2.Hometown 
ORDER BY COUNT(T2.Hometown) DESC 
LIMIT 1;
```
-------------------------1764 sample_num
```sql
SELECT Hometown 
FROM people 
WHERE People_ID IN (SELECT Gymnast_ID FROM gymnast) 
GROUP BY Hometown 
HAVING COUNT(*) >= 2;
```
-------------------------1765 sample_num
```sql
SELECT Hometown 
FROM people 
WHERE People_ID IN (SELECT Gymnast_ID FROM gymnast) 
GROUP BY Hometown 
HAVING COUNT(*) >= 2;
```
-------------------------1766 sample_num
```sql
SELECT p.Name 
FROM people p
JOIN gymnast g ON p.People_ID = g.Gymnast_ID 
ORDER BY p.Height ASC;
```
-------------------------1767 sample_num
```sql
SELECT people.Name
FROM people
INNER JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID
ORDER BY people.Height ASC;
```
-------------------------1768 sample_num
```sql
SELECT DISTINCT Hometown 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM gymnast)
```
-------------------------1769 sample_num
```sql
SELECT Hometown 
FROM people 
WHERE People_ID NOT IN (SELECT Gymnast_ID FROM gymnast)
```
-------------------------1770 sample_num
```sql
SELECT Hometown 
FROM people 
WHERE Age > 20 AND Age < 23
``` 

But it should be noted that your question implies a condition which is logically impossible ("people older than 23 and younger than 20"). Therefore, this query will return an empty set. If you meant to search for individuals older than 20 and younger than 23, please use that condition instead.
-------------------------1771 sample_num
```sql
SELECT Hometown 
FROM people 
WHERE Age > 23 
INTERSECT 
SELECT Hometown 
FROM people 
WHERE Age < 20
```
-------------------------1772 sample_num
```sql
SELECT COUNT(DISTINCT Hometown) FROM people;
```
-------------------------1773 sample_num
```sql
SELECT COUNT(DISTINCT Hometown) FROM people;
```
-------------------------1774 sample_num
```sql
SELECT T2.Age 
FROM gymnast AS T1 
JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID 
ORDER BY T1.Total_Points DESC;
```
-------------------------1775 sample_num
```sql
SELECT T2.Age 
FROM gymnast AS T1 
JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID 
ORDER BY T1.Total_Points DESC;
```
-------------------------1776 sample_num
```sql
SELECT SUM(S.balance) 
FROM SAVINGS S 
JOIN ACCOUNTS A ON S.custid = A.custid 
WHERE A.name <> 'Brown';
```
-------------------------1777 sample_num
```sql
SELECT SUM(S.balance) 
FROM SAVINGS S 
WHERE S.custid NOT IN (SELECT A.custid FROM ACCOUNTS A WHERE A.name = 'Brown');
```
-------------------------1778 sample_num
```sql
SELECT COUNT(*) FROM ACCOUNTS;
```
-------------------------1779 sample_num
```sql
SELECT COUNT(*) FROM ACCOUNTS;
```
-------------------------1780 sample_num
```sql
SELECT SUM(balance) FROM CHECKING;
```
-------------------------1781 sample_num
```sql
SELECT SUM(balance) 
FROM CHECKING;
```
-------------------------1782 sample_num
```sql
SELECT AVG(balance) FROM CHECKING;
```
-------------------------1783 sample_num
```sql
SELECT AVG(balance) 
FROM CHECKING;
```
-------------------------1784 sample_num
```sql
SELECT COUNT(*) 
FROM (
    SELECT a.custid
    FROM ACCOUNTS a
    JOIN SAVINGS s ON a.custid = s.custid
    WHERE s.balance > (SELECT AVG(balance) FROM SAVINGS)
) as t;
```
-------------------------1785 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT s.custid
  FROM SAVINGS s
  JOIN ACCOUNTS a ON s.custid = a.custid
  WHERE s.balance > (SELECT AVG(balance) FROM SAVINGS)
) as result;
```
-------------------------1786 sample_num
```sql
SELECT a.custid, a.name 
FROM ACCOUNTS a 
JOIN CHECKING c ON a.custid = c.custid 
WHERE c.balance < (SELECT MAX(balance) FROM CHECKING);
```
-------------------------1787 sample_num
```sql
SELECT a.custid, a.name 
FROM accounts a 
JOIN checking c ON a.custid = c.custid 
WHERE c.balance < (SELECT MAX(balance) FROM checking);
```
-------------------------1788 sample_num
```sql
SELECT C.balance
FROM ACCOUNTS A
JOIN CHECKING C ON A.custid = C.custid
WHERE A.name LIKE '%ee%';
```
-------------------------1789 sample_num
```sql
SELECT C.balance
FROM ACCOUNTS A
JOIN CHECKING C ON A.custid = C.custid
WHERE A.name LIKE '%ee%';
```
-------------------------1790 sample_num
```sql
SELECT c.balance AS checking_balance, s.balance AS savings_balance 
FROM ACCOUNTS a 
JOIN CHECKING c ON a.custid = c.custid 
JOIN SAVINGS s ON a.custid = s.custid 
WHERE a.name = 'Brown';
```
-------------------------1791 sample_num
```sql
SELECT CHECKING.balance AS checking_balance, SAVINGS.balance AS savings_balance 
FROM ACCOUNTS 
JOIN CHECKING ON ACCOUNTS.custid = CHECKING.custid 
JOIN SAVINGS ON ACCOUNTS.custid = SAVINGS.custid 
WHERE ACCOUNTS.name = 'Brown';
```
-------------------------1792 sample_num
```sql
SELECT a.name
FROM ACCOUNTS a
JOIN CHECKING c ON a.custid = c.custid
JOIN SAVINGS s ON a.custid = s.custid
WHERE c.balance > (SELECT AVG(balance) FROM CHECKING)
AND s.balance < (SELECT AVG(balance) FROM SAVINGS);
```
-------------------------1793 sample_num
```sql
SELECT A.name
FROM ACCOUNTS A
JOIN CHECKING C ON A.custid = C.custid
JOIN SAVINGS S ON A.custid = S.custid
WHERE C.balance > (SELECT AVG(balance) FROM CHECKING)
AND S.balance < (SELECT AVG(balance) FROM SAVINGS);
```
-------------------------1794 sample_num
```sql
SELECT C.balance
FROM CHECKING AS C
JOIN SAVINGS AS S ON C.custid = S.custid
WHERE S.balance > (SELECT AVG(balance) FROM SAVINGS)
```
-------------------------1795 sample_num
```sql
SELECT C.balance
FROM CHECKING AS C
JOIN ACCOUNTS AS A ON C.custid = A.custid
JOIN SAVINGS AS S ON A.custid = S.custid
WHERE S.balance > (SELECT AVG(balance) FROM SAVINGS)
```
-------------------------1796 sample_num
```sql
SELECT name 
FROM ACCOUNTS 
ORDER BY name ASC;
```
-------------------------1797 sample_num
```sql
SELECT name 
FROM ACCOUNTS 
ORDER BY name ASC;
```
-------------------------1798 sample_num
```sql
SELECT a.name 
FROM ACCOUNTS a
JOIN SAVINGS s ON a.custid = s.custid
JOIN CHECKING c ON a.custid = c.custid
WHERE (s.balance + c.balance) = (
    SELECT MIN(s2.balance + c2.balance)
    FROM SAVINGS s2
    JOIN CHECKING c2 ON s2.custid = c2.custid
)
```
-------------------------1799 sample_num
```sql
SELECT a.name 
FROM ACCOUNTS a
JOIN SAVINGS s ON a.custid = s.custid
JOIN CHECKING c ON a.custid = c.custid
WHERE (s.balance + c.balance) = (
    SELECT MIN(s2.balance + c2.balance)
    FROM SAVINGS s2
    JOIN CHECKING c2 ON s2.custid = c2.custid
)
```
-------------------------1800 sample_num
```sql
SELECT a.name, s.balance + c.balance AS total_balance
FROM ACCOUNTS a
JOIN SAVINGS s ON a.custid = s.custid
JOIN CHECKING c ON a.custid = c.custid
WHERE s.balance > (SELECT AVG(balance) FROM SAVINGS)
```
-------------------------1801 sample_num
```sql
SELECT A.name, SUM(C.balance + S.balance) AS total_balance
FROM ACCOUNTS A
JOIN CHECKING C ON A.custid = C.custid
JOIN SAVINGS S ON A.custid = S.custid
WHERE S.balance > (SELECT AVG(balance) FROM SAVINGS)
GROUP BY A.custid, A.name;
```
-------------------------1802 sample_num
```sql
SELECT A.name, C.balance
FROM ACCOUNTS A
JOIN SAVINGS S ON A.custid = S.custid
JOIN CHECKING C ON A.custid = C.custid
WHERE S.balance = (SELECT MIN(balance) FROM SAVINGS)
```
-------------------------1803 sample_num
```sql
SELECT A.name, C.balance 
FROM ACCOUNTS A 
JOIN CHECKING C ON A.custid = C.custid 
WHERE A.custid = (
    SELECT S.custid 
    FROM SAVINGS S 
    WHERE S.balance = (
        SELECT MIN(balance) 
        FROM SAVINGS
    )
);
```
-------------------------1804 sample_num
```sql
SELECT a.name, COUNT(c.custid) 
FROM ACCOUNTS a 
LEFT JOIN CHECKING c ON a.custid = c.custid 
GROUP BY a.name;
```
-------------------------1805 sample_num
```sql
SELECT a.name, COUNT(c.custid) AS checking_accounts
FROM ACCOUNTS a
LEFT JOIN CHECKING c ON a.custid = c.custid
GROUP BY a.custid, a.name;
```
-------------------------1806 sample_num
```sql
SELECT a.name, SUM(s.balance) as total_savings
FROM ACCOUNTS a
JOIN SAVINGS s ON a.custid = s.custid
GROUP BY a.name;
```
-------------------------1807 sample_num
```sql
SELECT a.name, SUM(s.balance) as total_savings
FROM ACCOUNTS a
JOIN SAVINGS s ON a.custid = s.custid
GROUP BY a.name;
```
-------------------------1808 sample_num
```sql
SELECT a.name 
FROM ACCOUNTS a 
JOIN CHECKING c ON a.custid = c.custid 
WHERE c.balance < (SELECT AVG(balance) FROM CHECKING);
```
-------------------------1809 sample_num
```sql
SELECT a.name
FROM ACCOUNTS a
JOIN CHECKING c ON a.custid = c.custid
WHERE c.balance < (SELECT AVG(balance) FROM CHECKING)
```
-------------------------1810 sample_num
```sql
SELECT s.balance
FROM savings s
JOIN (
  SELECT custid
  FROM checking
  ORDER BY balance DESC
  LIMIT 1
) c ON s.custid = c.custid;
```
-------------------------1811 sample_num
```sql
SELECT s.balance
FROM SAVINGS s
JOIN ACCOUNTS a ON s.custid = a.custid
WHERE a.custid = (
    SELECT c.custid
    FROM CHECKING c
    JOIN ACCOUNTS ac ON c.custid = ac.custid
    WHERE ac.name = (
        SELECT ac.name
        FROM CHECKING c
        JOIN ACCOUNTS ac ON c.custid = ac.custid
        ORDER BY c.balance DESC
        LIMIT 1
    )
);
```
However, a more efficient query would be:
```sql
SELECT s.balance AS savings_balance
FROM SAVINGS s
JOIN (
    SELECT custid
    FROM CHECKING
    ORDER BY balance DESC
    LIMIT 1
) c ON s.custid = c.custid;
```
-------------------------1812 sample_num
```sql
SELECT a.custid, 
       (s.balance + c.balance) AS total_balance
FROM ACCOUNTS a
LEFT JOIN SAVINGS s ON a.custid = s.custid
LEFT JOIN CHECKING c ON a.custid = c.custid
ORDER BY total_balance ASC;
```
-------------------------1813 sample_num
```sql
SELECT 
    a.custid,
    (s.balance + c.balance) AS total_balance
FROM 
    ACCOUNTS a
LEFT JOIN 
    SAVINGS s ON a.custid = s.custid
LEFT JOIN 
    CHECKING c ON a.custid = c.custid
ORDER BY 
    total_balance;
```
-------------------------1814 sample_num
```sql
SELECT A.name, C.balance
FROM ACCOUNTS A
JOIN CHECKING C ON A.custid = C.custid
JOIN SAVINGS S ON A.custid = S.custid
WHERE S.balance = (SELECT MIN(balance) FROM SAVINGS)
```
-------------------------1815 sample_num
```sql
SELECT A.name, C.balance
FROM ACCOUNTS A
JOIN SAVINGS S ON A.custid = S.custid
JOIN CHECKING C ON A.custid = C.custid
WHERE S.balance = (SELECT MIN(balance) FROM SAVINGS)
```
-------------------------1816 sample_num
```sql
SELECT 
    a.name, 
    c.balance AS checking_balance, 
    s.balance AS savings_balance
FROM 
    ACCOUNTS a
LEFT JOIN 
    CHECKING c ON a.custid = c.custid
LEFT JOIN 
    SAVINGS s ON a.custid = s.custid;
```
-------------------------1817 sample_num
```sql
SELECT 
    a.name, 
    c.balance AS checking_balance, 
    s.balance AS savings_balance
FROM 
    ACCOUNTS a
LEFT JOIN 
    CHECKING c ON a.custid = c.custid
LEFT JOIN 
    SAVINGS s ON a.custid = s.custid;
```
-------------------------1818 sample_num
```sql
SELECT 
    a.name,
    c.balance AS checking_balance,
    s.balance AS savings_balance
FROM 
    ACCOUNTS a
LEFT JOIN 
    CHECKING c ON a.custid = c.custid
LEFT JOIN 
    SAVINGS s ON a.custid = s.custid
ORDER BY 
    (c.balance + s.balance) DESC;
```
-------------------------1819 sample_num
```sql
SELECT 
    a.name,
    c.balance AS checking_balance,
    s.balance AS savings_balance
FROM 
    ACCOUNTS a
LEFT JOIN 
    CHECKING c ON a.custid = c.custid
LEFT JOIN 
    SAVINGS s ON a.custid = s.custid
ORDER BY 
    (c.balance + s.balance) DESC;
```
-------------------------1820 sample_num
```sql
SELECT a.name 
FROM ACCOUNTS a 
JOIN CHECKING c ON a.custid = c.custid 
JOIN SAVINGS s ON a.custid = s.custid 
WHERE c.balance > s.balance;
```
-------------------------1821 sample_num
```sql
SELECT A.name 
FROM ACCOUNTS A 
JOIN CHECKING C ON A.custid = C.custid 
JOIN SAVINGS S ON A.custid = S.custid 
WHERE C.balance > S.balance;
```
-------------------------1822 sample_num
```sql
SELECT a.name, (c.balance + s.balance) as total_balance 
FROM ACCOUNTS a 
JOIN CHECKING c ON a.custid = c.custid 
JOIN SAVINGS s ON a.custid = s.custid 
WHERE s.balance < c.balance;
```
-------------------------1823 sample_num
```sql
SELECT 
    a.name,
    (c.balance + s.balance) AS total_balance
FROM 
    ACCOUNTS a
JOIN 
    SAVINGS s ON a.custid = s.custid
JOIN 
    CHECKING c ON a.custid = c.custid
WHERE 
    s.balance < c.balance;
```
-------------------------1824 sample_num
```sql
SELECT a.name, s.balance
FROM accounts a
JOIN savings s ON a.custid = s.custid
ORDER BY s.balance DESC
LIMIT 3;
```
-------------------------1825 sample_num
```sql
SELECT a.name, s.balance
FROM accounts a
JOIN savings s ON a.custid = s.custid
ORDER BY s.balance DESC
LIMIT 3;
```
-------------------------1826 sample_num
```sql
SELECT COUNT(*) 
FROM browser 
WHERE market_share >= 5;
```
-------------------------1827 sample_num
```sql
SELECT name 
FROM browser 
ORDER BY market_share DESC;
```
-------------------------1828 sample_num
```sql
SELECT id, name, market_share FROM browser;
```
-------------------------1829 sample_num
```sql
SELECT MAX(market_share) AS Maximum, MIN(market_share) AS Minimum, AVG(market_share) AS Average 
FROM browser;
```
-------------------------1830 sample_num
```sql
SELECT id, market_share FROM browser WHERE name = 'Safari';
```
-------------------------1831 sample_num
```sql
SELECT name, Operating_system 
FROM Web_client_accelerator 
WHERE Connection != 'Broadband' OR Connection IN (SELECT Connection FROM Web_client_accelerator WHERE Connection <> 'Broadband')
``` 
However, the above query can be simplified and improved to:

```sql
SELECT name, Operating_system 
FROM Web_client_accelerator 
WHERE Connection != 'Broadband'
```
```sql
```

The last line was an error in formatting, please ignore. The correct query is as above. 
```sql
SELECT name, Operating_system 
FROM Web_client_accelerator 
WHERE Connection != 'Broadband'
```
-------------------------1832 sample_num
```sql
SELECT b.name 
FROM browser AS b 
JOIN accelerator_compatible_browser AS acb ON b.id = acb.browser_id 
JOIN Web_client_accelerator AS wca ON wca.id = acb.accelerator_id 
WHERE wca.name = 'CProxy' AND acb.compatible_since_year > 1998;
```
-------------------------1833 sample_num
```sql
SELECT wca.id, wca.name 
FROM Web_client_accelerator wca
JOIN accelerator_compatible_browser acb ON wca.id = acb.accelerator_id
GROUP BY wca.id, wca.name
HAVING COUNT(acb.browser_id) >= 2;
```
-------------------------1834 sample_num
```sql
SELECT b.id, b.name 
FROM browser b
JOIN accelerator_compatible_browser abc ON b.id = abc.browser_id
GROUP BY b.id, b.name
ORDER BY COUNT(abc.accelerator_id) DESC
LIMIT 1;
```
-------------------------1835 sample_num
```sql
SELECT acb.compatible_since_year 
FROM accelerator_compatible_browser acb 
JOIN Web_client_accelerator wca ON acb.accelerator_id = wca.id 
JOIN browser b ON acb.browser_id = b.id 
WHERE wca.name = 'CACHEbox' AND b.name = 'Internet Explorer';
```
-------------------------1836 sample_num
```sql
SELECT COUNT(DISTINCT Client) FROM Web_client_accelerator;
```
-------------------------1837 sample_num
```sql
SELECT COUNT(*) 
FROM Web_client_accelerator wca
LEFT JOIN accelerator_compatible_browser acb ON wca.id = acb.accelerator_id
WHERE acb.accelerator_id IS NULL;
```
Note: This assumes that `Web_client_accelerator` table's `id` column is the same as the `accelerator_id` in `accelerator_compatible_browser` table. If it's not the case, you should replace `wca.id` with the correct column name from `Web_client_accelerator` table that corresponds to `accelerator_id` in `accelerator_compatible_browser` table.
-------------------------1838 sample_num
```sql
SELECT DISTINCT wca.name 
FROM Web_client_accelerator wca
JOIN accelerator_compatible_browser acb ON wca.id = acb.accelerator_id
JOIN browser b ON b.id = acb.browser_id
WHERE b.market_share > 15;
```
-------------------------1839 sample_num
```sql
SELECT b.name 
FROM browser b
JOIN accelerator_compatible_browser acb1 ON b.id = acb1.browser_id 
JOIN Web_client_accelerator wca1 ON wca1.id = acb1.accelerator_id AND wca1.name = 'CACHEbox'
JOIN accelerator_compatible_browser acb2 ON b.id = acb2.browser_id 
JOIN Web_client_accelerator wca2 ON wca2.id = acb2.accelerator_id AND wca2.name = 'Fasterfox'
GROUP BY b.name
HAVING COUNT(DISTINCT wca1.name) > 0 AND COUNT(DISTINCT wca2.name) > 0;
```
```
-------------------------1840 sample_num
```sql
SELECT wca.name, wca.Operating_system 
FROM Web_client_accelerator wca 
WHERE wca.id NOT IN (
    SELECT acb.accelerator_id 
    FROM accelerator_compatible_browser acb 
    JOIN browser b ON acb.browser_id = b.id 
    WHERE b.name = 'Opera'
)
```
-------------------------1841 sample_num
```sql
SELECT name FROM Web_client_accelerator WHERE name LIKE '%Opera%';
```
-------------------------1842 sample_num
```sql
SELECT Operating_system, COUNT(*) as num_accelerators
FROM Web_client_accelerator
GROUP BY Operating_system;
```
-------------------------1843 sample_num
```sql
SELECT b.name AS browser_name, w.name AS accelerator_name, ac.compatible_since_year 
FROM accelerator_compatible_browser ac 
JOIN browser b ON ac.browser_id = b.id 
JOIN Web_client_accelerator w ON ac.accelerator_id = w.id 
ORDER BY ac.compatible_since_year DESC;
```
-------------------------1844 sample_num
```sql
SELECT COUNT(*) FROM wrestler;
```
-------------------------1845 sample_num
```sql
SELECT COUNT(*) FROM wrestler;
```
-------------------------1846 sample_num
```sql
SELECT Name 
FROM wrestler 
ORDER BY Days_held DESC;
```
-------------------------1847 sample_num
```sql
SELECT Name 
FROM wrestler 
ORDER BY Days_held DESC;
```
-------------------------1848 sample_num
```sql
SELECT Name 
FROM wrestler 
ORDER BY Days_held 
LIMIT 1;
```
-------------------------1849 sample_num
```sql
SELECT Name 
FROM wrestler 
ORDER BY Days_held 
LIMIT 1;
```
-------------------------1850 sample_num
```sql
SELECT DISTINCT Reign FROM wrestler WHERE Location != 'Tokyo,Japan';
```
-------------------------1851 sample_num
```sql
SELECT DISTINCT Reign FROM wrestler WHERE Location != 'Tokyo, Japan'
```
-------------------------1852 sample_num
```sql
SELECT Name, Location FROM wrestler;
```
-------------------------1853 sample_num
```sql
SELECT Name, Location FROM wrestler;
```
-------------------------1854 sample_num
```sql
SELECT E.Elimination_Move 
FROM Elimination E 
JOIN wrestler W ON E.Wrestler_ID = W.Wrestler_ID 
WHERE W.Team = 'Team Orton';
```
-------------------------1855 sample_num
```sql
SELECT E.Elimination_Move 
FROM Elimination E 
JOIN wrestler W ON E.Wrestler_ID = W.Wrestler_ID 
WHERE W.Name IN (SELECT W.Name FROM wrestler W WHERE W.Team = 'Team Orton');
```
```
-------------------------1856 sample_num
```sql
SELECT w.Name, e.Elimination_Move 
FROM wrestler w 
JOIN Elimination e ON w.Wrestler_ID = e.Wrestler_ID;
```
-------------------------1857 sample_num
```sql
SELECT w.Name, e.Elimination_Move 
FROM wrestler w 
JOIN Elimination e ON w.Wrestler_ID = e.Wrestler_ID;
```
-------------------------1858 sample_num
```sql
SELECT w.Name, e.Team 
FROM wrestler w 
JOIN Elimination e ON w.Wrestler_ID = e.Wrestler_ID 
ORDER BY w.Days_held DESC;
```
-------------------------1859 sample_num
```sql
SELECT w.Name, e.Team 
FROM wrestler w 
JOIN Elimination e ON w.Wrestler_ID = e.Wrestler_ID 
ORDER BY w.Days_held DESC;
```
-------------------------1860 sample_num
```sql
SELECT E.Time 
FROM Elimination E 
JOIN wrestler W ON E.Wrestler_ID = W.Wrestler_ID 
WHERE W.Days_held = (SELECT MAX(Days_held) FROM wrestler);
```
-------------------------1861 sample_num
```sql
SELECT E.Time 
FROM Elimination E 
JOIN wrestler W ON E.Wrestler_ID = W.Wrestler_ID 
WHERE W.Days_held = (SELECT MAX(Days_held) FROM wrestler);
```
-------------------------1862 sample_num
```sql
SELECT E.Time 
FROM Elimination E 
JOIN wrestler W ON E.Wrestler_ID = W.Wrestler_ID 
WHERE W.Days_held > 50;
```
-------------------------1863 sample_num
```sql
SELECT E.Time 
FROM Elimination E 
JOIN wrestler W ON E.Wrestler_ID = W.Wrestler_ID 
WHERE W.Days_held > 50;
```
-------------------------1864 sample_num
```sql
SELECT Team, COUNT(*) AS NumberOfEliminations
FROM Elimination
GROUP BY Team;
```
-------------------------1865 sample_num
```sql
SELECT Team, COUNT(*) AS Eliminations 
FROM Elimination 
GROUP BY Team;
```
-------------------------1866 sample_num
```sql
SELECT Team
FROM Elimination
GROUP BY Team
HAVING COUNT(Elimination_ID) > 3;
```
-------------------------1867 sample_num
```sql
SELECT Team
FROM Elimination
GROUP BY Team
HAVING COUNT(Elimination_ID) > 3;
```
-------------------------1868 sample_num
```sql
SELECT Reign, Days_held FROM wrestler;
```
-------------------------1869 sample_num
```sql
SELECT Reign, Days_held FROM wrestler;
```
-------------------------1870 sample_num
```sql
SELECT Name 
FROM wrestler 
WHERE Days_held < 100;
```
-------------------------1871 sample_num
```sql
SELECT Name 
FROM wrestler 
WHERE Days_held < 100;
```
-------------------------1872 sample_num
```sql
SELECT Reign, COUNT(*) AS Frequency 
FROM wrestler 
GROUP BY Reign 
ORDER BY Frequency DESC 
LIMIT 1;
```
-------------------------1873 sample_num
```sql
SELECT Reign, COUNT(*) AS Count 
FROM wrestler 
GROUP BY Reign 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------1874 sample_num
```sql
SELECT Location 
FROM wrestler 
GROUP BY Location 
HAVING COUNT(Wrestler_ID) > 2;
```
-------------------------1875 sample_num
```sql
SELECT Location 
FROM wrestler 
GROUP BY Location 
HAVING COUNT(Wrestler_ID) > 2;
```
-------------------------1876 sample_num
```sql
SELECT w.Name 
FROM wrestler w 
LEFT JOIN Elimination e ON w.Wrestler_ID = e.Wrestler_ID 
WHERE e.Wrestler_ID IS NULL;
```
-------------------------1877 sample_num
```sql
SELECT Name 
FROM wrestler 
WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM Elimination);
```
-------------------------1878 sample_num
```sql
SELECT Team 
FROM Elimination 
WHERE Eliminated_By = 'Orton' 
INTERSECT 
SELECT Team 
FROM Elimination 
WHERE Eliminated_By = 'Benjamin'
```
-------------------------1879 sample_num
```sql
SELECT T1.Team 
FROM Elimination AS T1 
JOIN Elimination AS T2 
ON T1.Team = T2.Team 
WHERE T1.Eliminated_By = 'Orton' AND T2.Eliminated_By = 'Benjamin'
GROUP BY T1.Team
HAVING COUNT(*) >= 2
```
-------------------------1880 sample_num
```sql
SELECT COUNT(DISTINCT Team) FROM Elimination
```
-------------------------1881 sample_num
```sql
SELECT COUNT(DISTINCT Team) FROM Elimination;
```
-------------------------1882 sample_num
```sql
SELECT E.Time 
FROM Elimination E 
JOIN wrestler W ON E.Wrestler_ID = W.Wrestler_ID 
WHERE W.Name = 'Punk' OR W.Name = 'Orton';
```
-------------------------1883 sample_num
```sql
SELECT Time 
FROM Elimination 
WHERE Eliminated_By IN ('Punk', 'Orton');
```
-------------------------1884 sample_num
```sql
SELECT COUNT(*) FROM School;
```
-------------------------1885 sample_num
```sql
SELECT COUNT(*) FROM School;
```
-------------------------1886 sample_num
```sql
SELECT School_name FROM School ORDER BY School_name ASC;
```
-------------------------1887 sample_num
```sql
SELECT School_name, Location, Mascot 
FROM School;
```
-------------------------1888 sample_num
```sql
SELECT SUM(Enrollment) AS Total_Enrollment, AVG(Enrollment) AS Average_Enrollment FROM School;
```
-------------------------1889 sample_num
```sql
SELECT Mascot 
FROM School 
WHERE Enrollment > (SELECT AVG(Enrollment) FROM School)
```
-------------------------1890 sample_num
```sql
SELECT School_name 
FROM School 
ORDER BY Enrollment 
LIMIT 1;
```
-------------------------1891 sample_num
```sql
SELECT AVG(Enrollment) AS Average_Enrollment, MAX(Enrollment) AS Maximum_Enrollment, MIN(Enrollment) AS Minimum_Enrollment 
FROM School;
```
-------------------------1892 sample_num
```sql
SELECT County, COUNT(School_id) AS NumberOfSchools, SUM(Enrollment) AS TotalEnrollment
FROM School
GROUP BY County;
```
-------------------------1893 sample_num
```sql
SELECT COUNT(*) 
FROM endowment 
JOIN School ON endowment.School_id = School.School_id 
WHERE School.School_name = 'Glenn';
```
-------------------------1894 sample_num
```sql
SELECT donator_name, amount 
FROM endowment 
ORDER BY amount DESC;
```
-------------------------1895 sample_num
```sql
SELECT School_name 
FROM School 
WHERE School_id NOT IN (SELECT School_id FROM endowment)
```
-------------------------1896 sample_num
```sql
SELECT S.School_name
FROM School S
JOIN endowment E ON S.School_id = E.School_id
WHERE E.amount <= 10;
```
-------------------------1897 sample_num
```sql
SELECT T3.donator_name 
FROM endowment AS T1 
JOIN School AS T2 ON T1.School_id = T2.School_id 
JOIN (SELECT donator_name FROM endowment WHERE School_id IN (SELECT School_id FROM School WHERE School_name = 'Glenn')) AS T3 ON T3.donator_name = T1.donator_name 
WHERE T2.School_name = 'Triton'
GROUP BY T3.donator_name 
HAVING COUNT(*) > 1;
```
-------------------------1898 sample_num
```sql
SELECT donator_name 
FROM endowment 
WHERE amount >= 9;
```
-------------------------1899 sample_num
```sql
SELECT amount, donator_name 
FROM endowment 
ORDER BY amount DESC 
LIMIT 1;
```
-------------------------1900 sample_num
```sql
SELECT COUNT(*) 
FROM budget 
WHERE Budgeted > 3000 AND Year <= 2001;
```
-------------------------1901 sample_num
```sql
SELECT COUNT(*) 
FROM budget 
WHERE Year <= 2001 AND Budgeted > 3000;
```
-------------------------1902 sample_num
```sql
SELECT School.School_name, budget.Budgeted, budget.Invested
FROM School
JOIN budget ON School.School_id = budget.School_id
WHERE budget.Year >= 2002;
```
-------------------------1903 sample_num
```sql
SELECT donator_name 
FROM endowment;
```
-------------------------1904 sample_num
```sql
SELECT COUNT(*) 
FROM budget 
WHERE Budgeted < Invested;
```
-------------------------1905 sample_num
```sql
SELECT SUM(budget.Budgeted) 
FROM school_finance.budget 
JOIN school_finance.School ON budget.School_id = School.School_id 
WHERE School.School_name = 'Glenn';
```
-------------------------1906 sample_num
```sql
SELECT s.School_name 
FROM School s
JOIN budget b ON s.School_id = b.School_id
JOIN endowment e ON s.School_id = e.School_id
WHERE (b.Budgeted > 100 OR SUM(e.amount) > 10)
GROUP BY s.School_name;
```
Note: The original question did not specify if the endowment comparison should be individual donations or cumulative. If it is cumulative, then a `SUM` function is needed to add up all the endowments for each school as shown above. However, this requires that there can be multiple entries in endowment table for a single school, which was not specified in the original question. If the endowment comparison should be individual donations, then `SUM(e.amount)` should be removed and `e.amount > 10` should be used instead in the WHERE clause. Also, if a school can have multiple budget entries per year (which was not specified), then an additional `GROUP BY b.Year` might be needed in the query to correctly calculate the total budget amount. But this would require additional information about how to aggregate those multiple budget entries. Without these clarifications, the above query assumes that each school has only one budget entry per year and that the endowment comparison should be cumulative.
-------------------------1907 sample_num
```sql
SELECT s.School_name
FROM School s
JOIN endowment e ON s.School_id = e.School_id
WHERE e.amount > 8.5
GROUP BY s.School_name
HAVING COUNT(e.endowment_id) > 1;
```
-------------------------1908 sample_num
```sql
SELECT COUNT(DISTINCT T1.School_id) 
FROM School AS T1 
JOIN (
    SELECT School_id, COUNT(*) as donor_count
    FROM endowment
    WHERE amount < 8.5
    GROUP BY School_id
    HAVING COUNT(*) > 1
) AS T2 ON T1.School_id = T2.School_id;
```
-------------------------1909 sample_num
```sql
SELECT S.School_name, S.IHSAA_Football_Class, S.Mascot 
FROM School S
JOIN budget B ON S.School_id = B.School_id
WHERE B.Budgeted > 6000 OR B.Year < 2003
ORDER BY B.total_budget_percent_invested, B.total_budget_percent_budgeted;
```
-------------------------1910 sample_num
```sql
SELECT COUNT(*) FROM building;
```
-------------------------1911 sample_num
```sql
SELECT Name, Street_address, Floors 
FROM building 
ORDER BY Floors;
```
-------------------------1912 sample_num
```sql
SELECT Name FROM building WHERE Height_feet = (SELECT MAX(Height_feet) FROM building);
```
-------------------------1913 sample_num
```sql
SELECT AVG(Floors) AS Average_Floors, MAX(Floors) AS Max_Floors, MIN(Floors) AS Min_Floors FROM building;
```
-------------------------1914 sample_num
```sql
SELECT COUNT(*) 
FROM building 
WHERE Height_feet > (SELECT AVG(Height_feet) FROM building) 
OR Floors > (SELECT AVG(Floors) FROM building);
```
-------------------------1915 sample_num
```sql
SELECT Name 
FROM building 
WHERE Height_feet >= 200 AND Floors >= 20;
```
-------------------------1916 sample_num
```sql
SELECT Institution, Location 
FROM Institution 
WHERE Founded > 1990 AND Type = 'Private';
```
-------------------------1917 sample_num
```sql
SELECT Type, COUNT(Institution_id) AS Num_Institutions, SUM(Enrollment) AS Total_Enrollment
FROM Institution
GROUP BY Type;
```
-------------------------1918 sample_num
```sql
SELECT Type 
FROM Institution 
GROUP BY Type 
ORDER BY COUNT(Institution_id) DESC 
LIMIT 1;
```
-------------------------1919 sample_num
```sql
SELECT T1.Type 
FROM Institution AS T1 
JOIN building AS T2 
ON T1.building_id = T2.building_id 
WHERE T1.Founded > 1990 AND T1.Enrollment >= 1000;
```
-------------------------1920 sample_num
```sql
SELECT Name 
FROM building 
WHERE building_id NOT IN (SELECT building_id FROM Institution)
```
-------------------------1921 sample_num
```sql
SELECT Name FROM building WHERE building_id NOT IN (SELECT building_id FROM Institution WHERE Founded = 2003)
```
-------------------------1922 sample_num
```sql
SELECT building.Name, COUNT(Institution.Institution_id) 
FROM building 
LEFT JOIN Institution ON building.building_id = Institution.building_id 
GROUP BY building.building_id, building.Name;
```
-------------------------1923 sample_num
```sql
SELECT b.Name, b.Height_feet 
FROM building b
JOIN Institution i ON b.building_id = i.building_id
WHERE i.Founded > 1880
GROUP BY b.building_id
HAVING COUNT(i.Institution_id) >= 2;
```
-------------------------1924 sample_num
```sql
SELECT DISTINCT Type FROM Institution;
```
-------------------------1925 sample_num
```sql
SELECT Institution.Institution, COUNT(protein.protein_name) 
FROM Institution 
JOIN protein ON Institution.Institution_id = protein.Institution_id 
GROUP BY Institution.Institution;
```
-------------------------1926 sample_num
```sql
SELECT COUNT(*) 
FROM protein 
WHERE Institution_id IN (
    SELECT Institution_id 
    FROM Institution 
    WHERE Founded > 1880 OR Type = 'Private'
);
```
-------------------------1927 sample_num
```sql
SELECT protein.protein_name, Institution.Institution 
FROM protein 
JOIN Institution ON protein.Institution_id = Institution.Institution_id;
```
-------------------------1928 sample_num
```sql
SELECT COUNT(*) 
FROM protein 
WHERE Institution_id IN (
    SELECT Institution_id 
    FROM Institution 
    WHERE building_id IN (
        SELECT building_id 
        FROM building 
        WHERE Floors >= 20
    )
);
```
-------------------------1929 sample_num
```sql
SELECT COUNT(*) FROM Institution WHERE Institution_id NOT IN (SELECT Institution_id FROM protein)
```
-------------------------1930 sample_num
```sql
SELECT Location FROM cinema WHERE Capacity <= 800 GROUP BY Location HAVING COUNT(*) = (SELECT COUNT(*) FROM cinema WHERE Capacity > 800 GROUP BY Location)
```

Actually, the above query is not correct for the question. The correct SQL query should be:

```sql
SELECT DISTINCT Location FROM cinema WHERE Capacity <= 800
EXCEPT
SELECT DISTINCT Location FROM cinema WHERE Capacity > 800
```
-------------------------1931 sample_num
```sql
SELECT Location 
FROM cinema 
WHERE Openning_year = 2010 
INTERSECT 
SELECT Location 
FROM cinema 
WHERE Openning_year = 2011
```
-------------------------1932 sample_num
```sql
SELECT COUNT(*) FROM cinema;
```
-------------------------1933 sample_num
```sql
SELECT COUNT(*) FROM cinema;
```
-------------------------1934 sample_num
```sql
SELECT Name, Openning_year, Capacity FROM cinema;
```
-------------------------1935 sample_num
```sql
SELECT Name, Location 
FROM cinema 
WHERE Capacity > (SELECT AVG(Capacity) FROM cinema);
```
-------------------------1936 sample_num
```sql
SELECT DISTINCT Location FROM cinema;
```
-------------------------1937 sample_num
```sql
SELECT DISTINCT Location FROM cinema;
```
-------------------------1938 sample_num
```sql
SELECT Name, Openning_year 
FROM cinema 
ORDER BY Openning_year DESC;
```
-------------------------1939 sample_num
```sql
SELECT Name, Location 
FROM cinema 
ORDER BY Capacity DESC 
LIMIT 1;
```
-------------------------1940 sample_num
```sql
SELECT AVG(Capacity) AS Average_Capacity, MIN(Capacity) AS Min_Capacity, MAX(Capacity) AS Max_Capacity 
FROM cinema 
WHERE Openning_year >= 2011;
```
-------------------------1941 sample_num
```sql
SELECT Location, COUNT(*) AS NumberOfCinemas
FROM cinema
GROUP BY Location;
```
-------------------------1942 sample_num
```sql
SELECT Location, COUNT(Cinema_ID) AS Cinema_Count 
FROM cinema 
WHERE Openning_year >= 2010 
GROUP BY Location 
ORDER BY Cinema_Count DESC 
LIMIT 1;
```
-------------------------1943 sample_num
```sql
SELECT Location 
FROM cinema 
WHERE Capacity > 300 
GROUP BY Location 
HAVING COUNT(Cinema_ID) >= 2;
```
-------------------------1944 sample_num
```sql
SELECT Location FROM cinema WHERE Capacity > 300 GROUP BY Location HAVING COUNT(Cinema_ID) >= 2;
```
-------------------------1945 sample_num
```sql
SELECT Title, Directed_by FROM film;
```
-------------------------1946 sample_num
```sql
SELECT Title, Directed_by FROM film;
```
-------------------------1947 sample_num
```sql
SELECT DISTINCT Directed_by FROM film;
```
-------------------------1948 sample_num
```sql
SELECT DISTINCT Directed_by FROM film;
```
-------------------------1949 sample_num
```sql
SELECT Directed_by, COUNT(*) 
FROM film 
GROUP BY Directed_by;
```
-------------------------1950 sample_num
```sql
SELECT T2.Name, SUM(T3.Show_times_per_day) AS Total_Show_Times 
FROM schedule AS T1 
JOIN cinema AS T2 ON T1.Cinema_ID = T2.Cinema_ID 
JOIN film AS T3 ON T1.Film_ID = T3.Film_ID 
GROUP BY T2.Name;
```
-------------------------1951 sample_num
```sql
SELECT T1.Title, MAX(T3.Price) 
FROM film AS T1 
JOIN schedule AS T3 ON T1.Film_ID = T3.Film_ID 
GROUP BY T1.Title;
```
-------------------------1952 sample_num
```sql
SELECT film.Title, MAX(schedule.Price) 
FROM film 
JOIN schedule ON film.Film_ID = schedule.Film_ID 
GROUP BY film.Title;
```
-------------------------1953 sample_num
```sql
SELECT c.Name, f.Title, s.Date, s.Price 
FROM schedule s 
JOIN cinema c ON s.Cinema_ID = c.Cinema_ID 
JOIN film f ON s.Film_ID = f.Film_ID;
```
-------------------------1954 sample_num
```sql
SELECT film.Title, film.Directed_by 
FROM film 
LEFT JOIN schedule ON film.Film_ID = schedule.Film_ID 
WHERE schedule.Film_ID IS NULL;
```
-------------------------1955 sample_num
```sql
SELECT f.Directed_by, SUM(s.Show_times_per_day) as Total_Show_Times 
FROM film f 
JOIN schedule s ON f.Film_ID = s.Film_ID 
GROUP BY f.Directed_by 
ORDER BY Total_Show_Times DESC 
LIMIT 1;
```
-------------------------1956 sample_num
```sql
SELECT Location
FROM cinema
WHERE Capacity > 300
GROUP BY Location
HAVING COUNT(Cinema_ID) > 1;
```
-------------------------1957 sample_num
```sql
SELECT Location
FROM cinema
WHERE Capacity > 300
GROUP BY Location
HAVING COUNT(*) > 1;
```
-------------------------1958 sample_num
```sql
SELECT COUNT(*) FROM film WHERE Title LIKE '%Dummy%';
```
-------------------------1959 sample_num
```sql
SELECT COUNT(*) FROM film WHERE Title LIKE '%Dummy%';
```
-------------------------1960 sample_num
```sql
SELECT good_or_bad_customer 
FROM Customers 
WHERE coupon_id IN (
    SELECT coupon_id 
    FROM Discount_Coupons 
    WHERE coupon_amount = 500
);
```
-------------------------1961 sample_num
```sql
SELECT 
    c.customer_id, 
    c.first_name, 
    COUNT(b.booking_id) as number_of_bookings
FROM 
    Customers c
LEFT JOIN 
    Bookings b ON c.customer_id = b.customer_id
GROUP BY 
    c.customer_id, 
    c.first_name;
```
-------------------------1962 sample_num
```sql
SELECT Customers.customer_id, MAX(SUM(Payments.amount_paid)) AS max_total_amount_paid
FROM Customers
JOIN Payments ON Customers.customer_id = Payments.customer_id
GROUP BY Customers.customer_id
ORDER BY max_total_amount_paid DESC
LIMIT 1;
```
Note: The use of `MAX(SUM(...))` might not work on all SQL dialects. Some may require subqueries or window functions to perform this calculation.
-------------------------1963 sample_num
```sql
SELECT b.booking_id, b.amount_of_refund 
FROM Bookings b
JOIN Payments p ON b.booking_id = p.booking_id
GROUP BY b.booking_id
ORDER BY COUNT(p.payment_id) DESC
LIMIT 1;
```
-------------------------1964 sample_num
```sql
SELECT product_id 
FROM Products_Booked 
GROUP BY product_id 
HAVING COUNT(*) = 3;
```
-------------------------1965 sample_num
```sql
SELECT T2.product_description 
FROM Products_Booked AS T1 
JOIN Products_for_Hire AS T2 
ON T1.product_id = T2.product_id 
WHERE T1.booked_amount = 102.76;
```
-------------------------1966 sample_num
```sql
SELECT B.booking_start_date, B.booking_end_date 
FROM Bookings B
JOIN Products_Booked PB ON B.booking_id = PB.booking_id
JOIN Products_for_Hire PH ON PB.product_id = PH.product_id
WHERE PH.product_name = 'Book collection A'
```
-------------------------1967 sample_num
```sql
SELECT p.product_name 
FROM Products_for_Hire p 
JOIN View_Product_Availability vpa 
ON p.product_id = vpa.product_id 
WHERE vpa.available_yn = 1;
```
-------------------------1968 sample_num
```sql
SELECT COUNT(DISTINCT product_type_code) 
FROM Products_for_Hire;
```
-------------------------1969 sample_num
```sql
SELECT first_name, last_name, gender_mf 
FROM Customers 
WHERE good_or_bad_customer = 'good' 
ORDER BY last_name;
```
-------------------------1970 sample_num
```sql
SELECT AVG(amount_due) FROM Payments;
```
-------------------------1971 sample_num
```sql
SELECT MAX(booked_count) as Maximum, MIN(booked_count) as Minimum, AVG(booked_count) as Average 
FROM Products_Booked;
```
-------------------------1972 sample_num
```sql
SELECT DISTINCT payment_type_code 
FROM Payments;
```
-------------------------1973 sample_num
```sql
SELECT daily_hire_cost 
FROM Products_for_Hire 
WHERE product_name LIKE '%Book%';
```
-------------------------1974 sample_num
```sql
SELECT COUNT(*) 
FROM Products_for_Hire p
WHERE NOT EXISTS (
    SELECT *
    FROM Products_Booked pb 
    WHERE pb.product_id = p.product_id AND pb.booked_amount > 200
);
```
-------------------------1975 sample_num
```sql
SELECT DISTINCT d.coupon_amount 
FROM Discount_Coupons d
JOIN Customers c ON d.coupon_id = c.coupon_id
WHERE c.good_or_bad_customer = 'Good' AND c.good_or_bad_customer = 'Bad'
```
However, this query won't work as expected since a customer can't be both 'Good' and 'Bad' at the same time in the real scenario. A correct way to get the coupon amounts used by both good and bad customers would be:
```sql
SELECT d.coupon_amount
FROM Discount_Coupons d
JOIN Customers c ON d.coupon_id = c.coupon_id
WHERE c.good_or_bad_customer = 'Good'
INTERSECT
SELECT d.coupon_amount
FROM Discount_Coupons d
JOIN Customers c ON d.coupon_id = c.coupon_id
WHERE c.good_or_bad_customer = 'Bad'
```
-------------------------1976 sample_num
```sql
SELECT payment_date 
FROM Payments 
WHERE amount_paid > 300 OR payment_type_code = 'Check'
```
-------------------------1977 sample_num
```sql
SELECT product_name, product_description 
FROM Products_for_Hire 
WHERE product_type_code = 'Cutlery' AND daily_hire_cost < 20;
```
-------------------------1978 sample_num
```sql
SELECT COUNT(*) FROM phone
```
-------------------------1979 sample_num
```sql
SELECT Name 
FROM phone 
ORDER BY Price ASC;
```
-------------------------1980 sample_num
```sql
SELECT Memory_in_G, Carrier FROM phone;
```
-------------------------1981 sample_num
```sql
SELECT DISTINCT Carrier 
FROM phone 
WHERE Memory_in_G > 32;
```
-------------------------1982 sample_num
```sql
SELECT Name 
FROM phone 
WHERE Carrier IN ('Sprint', 'TMobile');
```
-------------------------1983 sample_num
```sql
SELECT Carrier FROM phone WHERE Price = (SELECT MAX(Price) FROM phone)
```
-------------------------1984 sample_num
```sql
SELECT Carrier, COUNT(*) AS Num_of_Phones 
FROM phone 
GROUP BY Carrier;
```
-------------------------1985 sample_num
```sql
SELECT Carrier, COUNT(*) as frequency 
FROM phone 
GROUP BY Carrier 
ORDER BY frequency DESC 
LIMIT 1;
```
-------------------------1986 sample_num
```sql
SELECT Carrier 
FROM phone 
WHERE Memory_in_G < 32 
INTERSECT 
SELECT Carrier 
FROM phone 
WHERE Memory_in_G > 64;
```
-------------------------1987 sample_num
```sql
SELECT p.Name, m.District 
FROM phone_market AS pm 
JOIN phone AS p ON pm.Phone_ID = p.Phone_ID 
JOIN market AS m ON pm.Market_ID = m.Market_ID;
```
-------------------------1988 sample_num
```sql
SELECT p.Name, m.District 
FROM phone AS p 
JOIN phone_market AS pm ON p.Phone_ID = pm.Phone_ID 
JOIN market AS m ON pm.Market_ID = m.Market_ID 
ORDER BY m.Ranking ASC;
```
-------------------------1989 sample_num
```sql
SELECT p.Name 
FROM phone p 
JOIN phone_market pm ON p.Phone_ID = pm.Phone_ID 
JOIN market m ON pm.Market_ID = m.Market_ID 
WHERE m.Num_of_shops > 50;
```
-------------------------1990 sample_num
```sql
SELECT p.Name, SUM(pm.Num_of_stock) 
FROM phone AS p 
JOIN phone_market AS pm ON p.Phone_ID = pm.Phone_ID 
GROUP BY p.Name;
```
-------------------------1991 sample_num
```sql
SELECT p.Name
FROM phone p
JOIN phone_market pm ON p.Phone_ID = pm.Phone_ID
GROUP BY p.Name
HAVING SUM(pm.Num_of_stock) > 2000
ORDER BY SUM(pm.Num_of_stock) DESC;
```
-------------------------1992 sample_num
```sql
SELECT Name 
FROM phone 
WHERE Phone_ID NOT IN (SELECT Phone_ID FROM phone_market)
```
-------------------------1993 sample_num
```sql
SELECT COUNT(*) FROM company;
```
-------------------------1994 sample_num
```sql
SELECT COUNT(*) FROM company;
```
-------------------------1995 sample_num
```sql
SELECT Company, Rank 
FROM company 
ORDER BY Sales_billion DESC;
```
-------------------------1996 sample_num
```sql
SELECT Company, Rank 
FROM company 
ORDER BY Sales_billion DESC;
```
-------------------------1997 sample_num
```sql
SELECT Company, Main_Industry 
FROM company 
WHERE Headquarters != 'USA';
```
-------------------------1998 sample_num
```sql
SELECT Company, Main_Industry FROM company WHERE Headquarters != 'United States';
```
-------------------------1999 sample_num
```sql
SELECT Company, Headquarters 
FROM company 
ORDER BY Market_Value DESC;
```
-------------------------2000 sample_num
```sql
SELECT Company, Headquarters 
FROM company 
ORDER BY Market_Value DESC;
```
-------------------------2001 sample_num
```sql
SELECT MIN(Market_Value) as Min_Market_Value, MAX(Market_Value) as Max_Market_Value, AVG(Market_Value) as Avg_Market_Value FROM company;
```
-------------------------2002 sample_num
```sql
SELECT MIN(Market_Value) AS MinMarketValue, MAX(Market_Value) AS MaxMarketValue, AVG(Market_Value) AS AvgMarketValue 
FROM company;
```
-------------------------2003 sample_num
```sql
SELECT Main_Industry FROM company;
```
-------------------------2004 sample_num
```sql
SELECT DISTINCT Main_Industry FROM company;
```
-------------------------2005 sample_num
```sql
SELECT Headquarters, COUNT(Company_ID) 
FROM company 
GROUP BY Headquarters;
```
-------------------------2006 sample_num
```sql
SELECT Headquarters, COUNT(*) AS Num_of_Companies
FROM company
GROUP BY Headquarters;
```
-------------------------2007 sample_num
```sql
SELECT Main_Industry, SUM(Market_Value) 
FROM company 
GROUP BY Main_Industry;
```
-------------------------2008 sample_num
```sql
SELECT Main_Industry, SUM(Market_Value) 
FROM company 
GROUP BY Main_Industry;
```
-------------------------2009 sample_num
```sql
SELECT Main_Industry, COUNT(*) AS Number_of_Companies
FROM company
GROUP BY Main_Industry
ORDER BY SUM(Market_Value) DESC
LIMIT 1;
```
-------------------------2010 sample_num
```sql
SELECT Main_Industry, COUNT(Company) 
FROM company 
WHERE Market_Value IN (SELECT MAX(Market_Value) 
                      FROM company 
                      GROUP BY Main_Industry) 
GROUP BY Main_Industry;
```
```
-------------------------2011 sample_num
```sql
SELECT Headquarters 
FROM company 
WHERE Main_Industry = 'Banking' 
GROUP BY Headquarters 
HAVING COUNT(*) >= 2;
```
-------------------------2012 sample_num
```sql
SELECT Headquarters 
FROM company 
WHERE Main_Industry = 'Banking' 
GROUP BY Headquarters 
HAVING COUNT(*) >= 2;
```
-------------------------2013 sample_num
```sql
SELECT Station_ID, Location, Manager_Name
FROM gas_station
ORDER BY Open_Year;
```
-------------------------2014 sample_num
```sql
SELECT Station_ID, Location, Manager_Name 
FROM gas_station 
ORDER BY Open_Year ASC;
```
-------------------------2015 sample_num
```sql
SELECT COUNT(*) 
FROM gas_station 
WHERE Open_Year BETWEEN 2000 AND 2005;
```
-------------------------2016 sample_num
```sql
SELECT COUNT(*) 
FROM gas_station 
WHERE Open_Year BETWEEN 2000 AND 2005;
```
-------------------------2017 sample_num
```sql
SELECT Location, COUNT(Station_ID) 
FROM gas_station 
GROUP BY Location 
ORDER BY COUNT(Station_ID);
```
-------------------------2018 sample_num
```sql
SELECT Location, COUNT(Station_ID) AS NumberOfStations
FROM gas_station
GROUP BY Location
ORDER BY NumberOfStations;
```
-------------------------2019 sample_num
```sql
SELECT DISTINCT Headquarters 
FROM company 
WHERE Main_Industry = 'Banking' 
INTERSECT 
SELECT DISTINCT Headquarters 
FROM company 
WHERE Main_Industry = 'Oil and gas';
```
-------------------------2020 sample_num
```sql
SELECT DISTINCT c.Headquarters 
FROM company c 
WHERE c.Main_Industry IN ('Banking', 'Oil and Gas') 
GROUP BY c.Headquarters 
HAVING COUNT(DISTINCT c.Main_Industry) = 2;
```
-------------------------2021 sample_num
```sql
SELECT DISTINCT Headquarters 
FROM company 
WHERE Main_Industry <> 'Banking';
```
-------------------------2022 sample_num
```sql
SELECT DISTINCT Headquarters 
FROM company 
WHERE Main_Industry <> 'Banking';
```
-------------------------2023 sample_num
```sql
SELECT Company, COUNT(Station_ID) 
FROM company 
JOIN station_company ON company.Company_ID = station_company.Company_ID 
GROUP BY Company;
```
-------------------------2024 sample_num
```sql
SELECT Company, COUNT(Station_ID) as NumberOfStations
FROM company
JOIN station_company ON company.Company_ID = station_company.Company_ID
GROUP BY Company_ID, Company;
```
-------------------------2025 sample_num
```sql
SELECT Company, Main_Industry 
FROM company 
WHERE Company_ID NOT IN (SELECT DISTINCT Company_ID FROM station_company)
```
-------------------------2026 sample_num
```sql
SELECT Main_Industry, Company 
FROM company 
WHERE Company_ID NOT IN (SELECT DISTINCT Company_ID FROM station_company)
```
-------------------------2027 sample_num
```sql
SELECT gs.Manager_Name 
FROM gas_station gs 
JOIN station_company sc ON gs.Station_ID = sc.Station_ID 
JOIN company c ON sc.Company_ID = c.Company_ID 
WHERE c.Company = 'ExxonMobil';
```
-------------------------2028 sample_num
```sql
SELECT gs.Manager_Name 
FROM gas_station gs 
JOIN station_company sc ON gs.Station_ID = sc.Station_ID 
JOIN company c ON sc.Company_ID = c.Company_ID 
WHERE c.Company = 'ExxonMobil';
```
-------------------------2029 sample_num
```sql
SELECT gs.Location 
FROM gas_station gs 
JOIN station_company sc ON gs.Station_ID = sc.Station_ID 
JOIN company c ON sc.Company_ID = c.Company_ID 
WHERE c.Market_Value > 100;
```
-------------------------2030 sample_num
```sql
SELECT DISTINCT gs.Location 
FROM gas_station gs 
JOIN station_company sc ON gs.Station_ID = sc.Station_ID 
JOIN company c ON sc.Company_ID = c.Company_ID 
WHERE c.Market_Value > 100;
```
-------------------------2031 sample_num
```sql
SELECT Manager_Name, COUNT(Manager_Name) as Station_Count 
FROM gas_station 
WHERE Open_Year > 2000 
GROUP BY Manager_Name 
ORDER BY Station_Count DESC 
LIMIT 1;
```
-------------------------2032 sample_num
```sql
SELECT Manager_Name 
FROM gas_station 
WHERE Open_Year > 2000 
GROUP BY Manager_Name 
ORDER BY COUNT(Station_ID) DESC 
LIMIT 1;
```
-------------------------2033 sample_num
```sql
SELECT Location 
FROM gas_station 
ORDER BY Open_Year;
```
-------------------------2034 sample_num
```sql
SELECT Location 
FROM gas_station 
ORDER BY Open_Year;
```
-------------------------2035 sample_num
```sql
SELECT Rank, Company, Market_Value 
FROM company 
WHERE Main_Industry = 'banking' 
ORDER BY Sales_billion, Profits_billion;
```
-------------------------2036 sample_num
```sql
SELECT Rank, Company, Market_Value 
FROM company 
WHERE Main_Industry = 'Banking' 
ORDER BY Sales_billion, Profits_billion;
```
-------------------------2037 sample_num
```sql
SELECT gs.Location, gs.Representative_Name 
FROM gas_station gs 
JOIN station_company sc ON gs.Station_ID = sc.Station_ID 
JOIN company c ON sc.Company_ID = c.Company_ID 
WHERE c.Assets_billion IN (
    SELECT Assets_billion 
    FROM company 
    ORDER BY Assets_billion DESC 
    LIMIT 3
);
```
-------------------------2038 sample_num
```sql
SELECT gs.Location, gs.Representative_Name 
FROM gas_station gs 
JOIN station_company sc ON gs.Station_ID = sc.Station_ID 
JOIN company c ON sc.Company_ID = c.Company_ID 
ORDER BY c.Assets_billion DESC 
LIMIT 3;
```
Note: This query will only return the top 3 gas stations based on the company's assets. If you want all gas stations from the top 3 companies with the largest amount of assets, you should use subquery or IN clause to get the top 3 companies first. Here is an example:
```sql
SELECT gs.Location, gs.Representative_Name 
FROM gas_station gs 
JOIN station_company sc ON gs.Station_ID = sc.Station_ID 
JOIN company c ON sc.Company_ID = c.Company_ID 
WHERE c.Company_ID IN (
    SELECT Company_ID 
    FROM company 
    ORDER BY Assets_billion DESC 
    LIMIT 3
);
```
-------------------------2039 sample_num
```sql
SELECT COUNT(*) FROM region;
```
-------------------------2040 sample_num
```sql
SELECT COUNT(*) FROM region;
```
-------------------------2041 sample_num
```sql
SELECT DISTINCT Region_name 
FROM region 
ORDER BY Label;
```
-------------------------2042 sample_num
```sql
SELECT DISTINCT Region_name 
FROM region 
ORDER BY Label;
```
-------------------------2043 sample_num
```sql
SELECT COUNT(*) FROM party;
```
-------------------------2044 sample_num
```sql
SELECT COUNT(DISTINCT Party_name) FROM party;
```
-------------------------2045 sample_num
```sql
SELECT Minister, Took_office, Left_office 
FROM party 
ORDER BY Left_office;
```
-------------------------2046 sample_num
```sql
SELECT Minister, Took_office, Left_office 
FROM party 
ORDER BY Left_office;
```
-------------------------2047 sample_num
```sql
SELECT Minister FROM party WHERE Took_office > '1961-01-01' OR Took_office < '1959-01-01';
```
-------------------------2048 sample_num
```sql
SELECT Minister FROM party WHERE Took_office > '1961-01-01' OR Took_office < '1959-01-01';
```
-------------------------2049 sample_num
```sql
SELECT Minister FROM party WHERE Party_name != 'Progress Party';
```
-------------------------2050 sample_num
```sql
SELECT Minister 
FROM party 
WHERE Party_name <> 'Progress Party'
```
-------------------------2051 sample_num
```sql
SELECT Minister, Party_name 
FROM party 
ORDER BY Took_office DESC;
``` 

However, this query will not show ministers that do not have a corresponding party name in the case where the 'Party_name' field is nullable. A better query might be:

```sql
SELECT p.Minister, COALESCE(p.Party_name, 'Unknown Party') 
FROM party p
ORDER BY p.Took_office DESC;
```
But if you want to make sure only ministers with their party names are selected, you could use an inner join:

```sql
SELECT p.Minister, p.Party_name 
FROM party p
WHERE p.Party_name IS NOT NULL
ORDER BY p.Took_office DESC;
```
-------------------------2052 sample_num
```sql
SELECT p.Minister, pr.Party_name 
FROM party AS p 
JOIN party AS pr ON p.Party_ID = pr.Party_ID 
ORDER BY p.Took_office DESC;
```
Note: This answer assumes that the 'Party_ID' column exists in both the 'party' and 'region' tables, however, based on your provided schema this might not be correct. Therefore, you should replace the incorrect table in the join clause with the correct one. The proper query would probably join 'party' table with itself which doesn't make much sense. There might be a misunderstanding of the schema structure. Here's the adjusted logic:

```sql
SELECT p.Minister, p.Party_name 
FROM party AS p 
ORDER BY p.Took_office DESC;
``` 
This will work if all necessary information is contained within the 'party' table.

If you want to join with another table to get additional information, you would need to specify how those tables are related.
-------------------------2053 sample_num
```sql
SELECT Minister 
FROM party 
WHERE Left_office = (SELECT MAX(Left_office) FROM party);
```
-------------------------2054 sample_num
```sql
SELECT Minister 
FROM party 
WHERE Left_office = (SELECT MAX(Left_office) FROM party);
```
-------------------------2055 sample_num
```sql
SELECT member.Member_Name, party.Party_name 
FROM member 
JOIN party ON member.Party_ID = party.Party_ID;
```
-------------------------2056 sample_num
```sql
SELECT member.Member_Name, party.Party_name 
FROM member 
JOIN party ON member.Party_ID = party.Party_ID;
```
-------------------------2057 sample_num
```sql
SELECT p.Party_name, COUNT(m.Member_ID) AS NumberOfMembers
FROM party p
JOIN member m ON p.Party_ID = m.Party_ID
GROUP BY p.Party_name;
```
-------------------------2058 sample_num
```sql
SELECT p.Party_name, COUNT(m.Member_ID) as Number_of_Members
FROM party p
JOIN member m ON p.Party_ID = m.Party_ID
GROUP BY p.Party_name;
```
-------------------------2059 sample_num
```sql
SELECT p.Party_name
FROM party p
JOIN member m ON p.Party_ID = m.Party_ID
GROUP BY p.Party_ID, p.Party_name
ORDER BY COUNT(m.Member_ID) DESC
LIMIT 1;
```
-------------------------2060 sample_num
```sql
SELECT p.Party_name
FROM party p
JOIN member m ON p.Party_ID = m.Party_ID
GROUP BY p.Party_ID, p.Party_name
ORDER BY COUNT(m.Member_ID) DESC
LIMIT 1;
```
-------------------------2061 sample_num
```sql
SELECT p.Party_name, r.Region_name 
FROM party AS p 
JOIN region AS r ON p.Region_ID = r.Region_ID;
```
-------------------------2062 sample_num
```sql
SELECT p.Party_name, r.Region_name 
FROM party AS p 
JOIN region AS r ON p.Region_ID = r.Region_ID;
```
-------------------------2063 sample_num
```sql
SELECT Party_name FROM party WHERE Party_ID NOT IN (SELECT Party_ID FROM member)
```
-------------------------2064 sample_num
```sql
SELECT Party_name 
FROM party 
WHERE Party_ID NOT IN (SELECT Party_ID FROM member)
```
```
-------------------------2065 sample_num
```sql
SELECT T1.Member_Name 
FROM member AS T1 
JOIN party AS T2 ON T1.Party_ID = T2.Party_ID 
WHERE T2.Party_ID = 3 INTERSECT 
SELECT T1.Member_Name 
FROM member AS T1 
JOIN party AS T2 ON T1.Party_ID = T2.Party_ID 
WHERE T2.Party_ID = 1;
```
-------------------------2066 sample_num
```sql
SELECT T1.Member_Name 
FROM member AS T1 
JOIN party AS T2 ON T1.Party_ID = T2.Party_ID 
WHERE T2.Party_ID = 3 
INTERSECT 
SELECT T1.Member_Name 
FROM member AS T1 
JOIN party AS T2 ON T1.Party_ID = T2.Party_ID 
WHERE T2.Party_ID = 1;
```
-------------------------2067 sample_num
```sql
SELECT Member_Name 
FROM member 
WHERE NOT EXISTS (
    SELECT * 
    FROM party 
    WHERE member.Party_ID = party.Party_ID AND party.Party_name = 'Progress Party'
);
```
-------------------------2068 sample_num
```sql
SELECT Member_Name 
FROM member 
WHERE Party_ID NOT IN (SELECT Party_ID FROM party WHERE Party_name = 'Progress Party')
```
-------------------------2069 sample_num
```sql
SELECT COUNT(*) FROM party_events;
```
-------------------------2070 sample_num
```sql
SELECT COUNT(*) FROM party_events;
```
-------------------------2071 sample_num
```sql
SELECT p.Party_name, COUNT(pe.Event_ID) 
FROM party AS p 
JOIN party_events AS pe ON p.Party_ID = pe.Party_ID 
GROUP BY p.Party_name;
```
-------------------------2072 sample_num
```sql
SELECT COUNT(party_events.Event_ID), party.Party_name 
FROM party_events 
JOIN party ON party_events.Party_ID = party.Party_ID 
GROUP BY party.Party_name;
```
-------------------------2073 sample_num
```sql
SELECT Member_Name 
FROM member 
WHERE Member_ID NOT IN (SELECT Member_in_charge_ID FROM party_events)
```
-------------------------2074 sample_num
```sql
SELECT Member_Name 
FROM member 
WHERE Member_ID NOT IN (SELECT Member_in_charge_ID FROM party_events)
```
-------------------------2075 sample_num
```sql
SELECT p.Party_name 
FROM party p
JOIN party_events pe ON p.Party_ID = pe.Party_ID
GROUP BY p.Party_ID, p.Party_name
HAVING COUNT(pe.Event_ID) >= 2;
```
-------------------------2076 sample_num
```sql
SELECT p.Party_name
FROM party p
JOIN party_events pe ON p.Party_ID = pe.Party_ID
GROUP BY p.Party_ID, p.Party_name
HAVING COUNT(pe.Event_ID) >= 2;
```
-------------------------2077 sample_num
```sql
SELECT T1.Member_Name 
FROM member AS T1 
JOIN party_events AS T2 
ON T1.Member_ID = T2.Member_in_charge_ID 
GROUP BY T2.Member_in_charge_ID 
ORDER BY COUNT(T2.Event_ID) DESC 
LIMIT 1;
```
-------------------------2078 sample_num
```sql
SELECT T1.Member_Name, COUNT(T2.Event_ID) AS Event_Count 
FROM member AS T1 
JOIN party_events AS T2 ON T1.Member_ID = T2.Member_in_charge_ID 
GROUP BY T1.Member_Name 
ORDER BY Event_Count DESC 
LIMIT 1;
```
-------------------------2079 sample_num
```sql
SELECT Event_Name 
FROM party_events 
GROUP BY Event_Name 
HAVING COUNT(*) > 2;
```
-------------------------2080 sample_num
```sql
SELECT Event_Name
FROM party_events
GROUP BY Event_Name
HAVING COUNT(Event_Name) > 2;
```
-------------------------2081 sample_num
```sql
SELECT COUNT(*) 
FROM party_events pe
JOIN party p ON pe.Party_ID = p.Party_ID
JOIN region r ON p.Region_ID = r.Region_ID
WHERE pe.Event_Name = 'Annual Meeting' AND r.Region_name = 'United Kingdom';
```
-------------------------2082 sample_num
```sql
SELECT COUNT(*) 
FROM party_events 
JOIN party ON party_events.Party_ID = party.Party_ID 
JOIN region ON party.Region_ID = region.Region_ID 
WHERE region.Region_name = 'United Kingdom' AND party_events.Event_Name = 'Annual Meeting';
```
-------------------------2083 sample_num
```sql
SELECT COUNT(*) FROM pilot;
```
-------------------------2084 sample_num
```sql
SELECT Pilot_name 
FROM pilot 
ORDER BY Rank ASC;
```
-------------------------2085 sample_num
```sql
SELECT Position, Team FROM pilot;
```
-------------------------2086 sample_num
```sql
SELECT DISTINCT Position 
FROM pilot 
WHERE Age > 30;
```
-------------------------2087 sample_num
```sql
SELECT Pilot_name 
FROM pilot 
WHERE Team IN ('Bradley', 'Fordham');
```
-------------------------2088 sample_num
```sql
SELECT T1.Join_Year FROM pilot AS T1 JOIN pilot_record AS T2 ON T1.Pilot_ID = T2.Pilot_ID WHERE T1.Rank = (SELECT MIN(Rank) FROM pilot)
```
-------------------------2089 sample_num
```sql
SELECT Nationality, COUNT(*) 
FROM pilot 
GROUP BY Nationality;
```
-------------------------2090 sample_num
```sql
SELECT Nationality, COUNT(*) as count
FROM pilot
GROUP BY Nationality
ORDER BY count DESC
LIMIT 1;
```
-------------------------2091 sample_num
```sql
SELECT Position 
FROM pilot 
WHERE Join_Year > 2005 
INTERSECT 
SELECT Position 
FROM pilot 
WHERE Join_Year < 2000;
```
-------------------------2092 sample_num
```sql
SELECT pilot.Pilot_name, aircraft.Model 
FROM pilot 
JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID 
JOIN aircraft ON aircraft.Aircraft_ID = pilot_record.Aircraft_ID;
```
-------------------------2093 sample_num
```sql
SELECT T2.Pilot_name, T3.Fleet_Series 
FROM pilot_record AS T1 
JOIN pilot AS T2 ON T1.Pilot_ID = T2.Pilot_ID 
JOIN aircraft AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID 
ORDER BY T2.Rank ASC;
```
-------------------------2094 sample_num
```sql
SELECT DISTINCT a.Fleet_Series 
FROM aircraft a 
JOIN pilot_record pr ON a.Aircraft_ID = pr.Aircraft_ID 
JOIN pilot p ON pr.Pilot_ID = p.Pilot_ID 
WHERE p.Age < 34;
```
-------------------------2095 sample_num
```sql
SELECT T2.Pilot_name, COUNT(T1.Record_ID) 
FROM pilot_record AS T1 
JOIN pilot AS T2 ON T1.Pilot_ID = T2.Pilot_ID 
GROUP BY T2.Pilot_name;
```
-------------------------2096 sample_num
```sql
SELECT T1.Pilot_name 
FROM pilot AS T1 
JOIN pilot_record AS T2 ON T1.Pilot_ID = T2.Pilot_ID 
GROUP BY T1.Pilot_ID 
HAVING COUNT(T2.Record_ID) > 1;
```
-------------------------2097 sample_num
```sql
SELECT Pilot_name 
FROM pilot 
WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)
```
-------------------------2098 sample_num
```sql
SELECT document_status_code FROM Ref_Document_Status;
```
-------------------------2099 sample_num
```sql
SELECT document_status_description 
FROM Ref_Document_Status 
WHERE document_status_code = 'working';
```
-------------------------2100 sample_num
```sql
SELECT document_type_code FROM Ref_Document_Types;
```
-------------------------2101 sample_num
```sql
SELECT document_type_description 
FROM Ref_Document_Types 
WHERE document_type_code = 'Paper';
```
-------------------------2102 sample_num
```sql
SELECT shipping_agent_name FROM Ref_Shipping_Agents;
```
-------------------------2103 sample_num
```sql
SELECT shipping_agent_code 
FROM Ref_Shipping_Agents 
WHERE shipping_agent_name = 'UPS';
```
-------------------------2104 sample_num
```sql
SELECT role_code FROM Roles;
```
-------------------------2105 sample_num
```sql
SELECT role_description FROM Roles WHERE role_code = 'ED';
```
-------------------------2106 sample_num
```sql
SELECT COUNT(*) FROM Employees;
```
-------------------------2107 sample_num
```sql
SELECT Roles.role_description 
FROM Roles 
JOIN Employees ON Roles.role_code = Employees.role_code 
WHERE Employees.employee_name = 'Koby';
```
-------------------------2108 sample_num
```sql
SELECT document_id, receipt_date 
FROM Documents;
```
-------------------------2109 sample_num
```sql
SELECT 
    R.role_description, 
    R.role_code, 
    COUNT(E.employee_id) AS number_of_employees
FROM 
    Roles R
LEFT JOIN 
    Employees E ON R.role_code = E.role_code
GROUP BY 
    R.role_code, 
    R.role_description;
```
-------------------------2110 sample_num
```sql
SELECT Roles.role_description, COUNT(Employees.employee_id) AS NumberOfEmployees
FROM Roles
JOIN Employees ON Roles.role_code = Employees.role_code
GROUP BY Roles.role_code
HAVING COUNT(Employees.employee_id) > 1;
```
-------------------------2111 sample_num
```sql
SELECT Ref_Document_Status.document_status_description 
FROM Ref_Document_Status 
JOIN Documents 
ON Ref_Document_Status.document_status_code = Documents.document_status_code 
WHERE Documents.document_id = 1;
```
-------------------------2112 sample_num
```sql
SELECT COUNT(*) 
FROM Documents 
WHERE document_status_code = 'done';
``` 

Note: This assumes that 'done' is a valid value for the document_status_code column. If 'done' is stored as an enum or integer value, you would need to replace 'done' with the correct value.
-------------------------2113 sample_num
```sql
SELECT document_type_code 
FROM Documents 
WHERE document_id = 2;
```
-------------------------2114 sample_num
```sql
SELECT document_id 
FROM Documents 
WHERE document_status_code = 'done' AND document_type_code = 'paper';
```
-------------------------2115 sample_num
```sql
SELECT Ref_Shipping_Agents.shipping_agent_name 
FROM Documents 
JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code 
WHERE Documents.document_id = 2;
```
-------------------------2116 sample_num
```sql
SELECT COUNT(*) 
FROM Documents 
WHERE shipping_agent_code = 'USPS';
```
-------------------------2117 sample_num
```sql
SELECT Ref_Shipping_Agents.shipping_agent_name, COUNT(Documents.document_id) AS NumberOfDocuments
FROM Documents
JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code
GROUP BY Ref_Shipping_Agents.shipping_agent_name
ORDER BY NumberOfDocuments DESC
LIMIT 1;
```
-------------------------2118 sample_num
```sql
SELECT receipt_date FROM Documents WHERE document_id = 3;
```
-------------------------2119 sample_num
```sql
SELECT Addresses.address_details 
FROM Documents_Mailed 
JOIN Addresses ON Documents_Mailed.mailed_to_address_id = Addresses.address_id 
WHERE document_id = 4;
```
-------------------------2120 sample_num
```sql
SELECT mailing_date 
FROM Documents_Mailed 
WHERE document_id = 7;
```
-------------------------2121 sample_num
```sql
SELECT document_id FROM Documents WHERE document_status_code = (SELECT document_status_code FROM Ref_Document_Status WHERE document_status_description = 'done') AND document_type_code = (SELECT document_type_code FROM Ref_Document_Types WHERE document_type_description = 'Paper') AND shipping_agent_code != (SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'USPS');
```
-------------------------2122 sample_num
```sql
SELECT document_id 
FROM Documents 
WHERE document_status_code = (SELECT document_status_code FROM Ref_Document_Status WHERE document_status_description = 'done') 
AND document_type_code = (SELECT document_type_code FROM Ref_Document_Types WHERE document_type_description = 'Paper') 
AND shipping_agent_code = (SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'USPS');
```
-------------------------2123 sample_num
```sql
SELECT draft_details 
FROM Document_Drafts 
WHERE document_id = 7;
```
-------------------------2124 sample_num
```sql
SELECT COUNT(*) FROM Draft_Copies WHERE document_id = 2;
```
-------------------------2125 sample_num
```sql
SELECT document_id, COUNT(*) as num_draft_copies
FROM Draft_Copies
GROUP BY document_id
ORDER BY num_draft_copies DESC
LIMIT 1;
```
-------------------------2126 sample_num
```sql
SELECT document_id, COUNT(*) AS num_draft_copies
FROM Draft_Copies
GROUP BY document_id
HAVING COUNT(*) > 1;
```
-------------------------2127 sample_num
```sql
SELECT E.employee_name
FROM Circulation_History CH
JOIN Employees E ON CH.employee_id = E.employee_id
WHERE CH.document_id = 1;
```
-------------------------2128 sample_num
```sql
SELECT e.employee_name 
FROM Employees e
LEFT JOIN Circulation_History ch ON e.employee_id = ch.employee_id
WHERE ch.employee_id IS NULL;
```
-------------------------2129 sample_num
```sql
SELECT E.employee_name, COUNT(CH.document_id) as Num_Drafts_and_Copies
FROM Circulation_History CH
JOIN Employees E ON CH.employee_id = E.employee_id
GROUP BY E.employee_name
ORDER BY Num_Drafts_and_Copies DESC
LIMIT 1;
```
-------------------------2130 sample_num
```sql
SELECT 
    CH.document_id, 
    COUNT(DISTINCT CH.employee_id) AS num_employees
FROM 
    Circulation_History CH
GROUP BY 
    CH.document_id;
```
-------------------------2131 sample_num
```sql
SELECT Dname 
FROM department 
ORDER BY Mgr_start_date;
```
-------------------------2132 sample_num
```sql
SELECT Dependent_name 
FROM dependent 
WHERE Relationship = 'Spouse';
```
-------------------------2133 sample_num
```sql
SELECT COUNT(*) 
FROM dependent 
WHERE Sex = 'F';
```
-------------------------2134 sample_num
```sql
SELECT department.Dname 
FROM department 
JOIN dept_locations ON department.Dnumber = dept_locations.Dnumber 
WHERE dept_locations.Dlocation = 'Houston';
```
-------------------------2135 sample_num
```sql
SELECT Fname, Lname 
FROM employee 
WHERE Salary > 30000;
```
-------------------------2136 sample_num
```sql
SELECT COUNT(*), Sex 
FROM employee 
WHERE Salary < 50000 
GROUP BY Sex;
```
-------------------------2137 sample_num
```sql
SELECT Fname, Lname, Address 
FROM employee 
ORDER BY Bdate ASC;
```
-------------------------2138 sample_num
```sql
SELECT T3.Event_Details FROM Services AS T1 JOIN Events AS T3 ON T1.Service_ID = T3.Service_ID WHERE T1.Service_Type_Code = 'Marriage';
```
-------------------------2139 sample_num
```sql
SELECT E.Event_ID, E.Event_Details 
FROM Events E
JOIN Participants_in_Events PE1 
ON E.Event_ID = PE1.Event_ID 
GROUP BY E.Event_ID, E.Event_Details 
HAVING COUNT(PE1.Participant_ID) > 1;
```
-------------------------2140 sample_num
```sql
SELECT P.Participant_ID, P.Participant_Type_Code, COUNT(PIE.Event_ID) AS NumberOfEventsAttended
FROM Participants P
JOIN Participants_in_Events PIE ON P.Participant_ID = PIE.Participant_ID
GROUP BY P.Participant_ID, P.Participant_Type_Code;
```
-------------------------2141 sample_num
```sql
SELECT Participant_ID, Participant_Type_Code, Participant_Details FROM Participants;
```
-------------------------2142 sample_num
```sql
SELECT COUNT(*) 
FROM Participants 
WHERE Participant_Type_Code = 'Organizer';
```
-------------------------2143 sample_num
```sql
SELECT DISTINCT Service_Type_Code 
FROM Services 
ORDER BY Service_Type_Code ASC;
```
-------------------------2144 sample_num
```sql
SELECT E.Service_ID, S.Service_Type_Code AS ServiceDetails
FROM Events E
JOIN Services S ON E.Service_ID = S.Service_ID;
```
-------------------------2145 sample_num
```sql
SELECT COUNT(*) 
FROM Events e 
JOIN Participants_in_Events pe ON e.Event_ID = pe.Event_ID 
JOIN Participants p ON pe.Participant_ID = p.Participant_ID 
WHERE p.Participant_Details LIKE '%Dr.%';
```
-------------------------2146 sample_num
```sql
SELECT Participant_Type_Code, COUNT(*) AS Count 
FROM Participants 
GROUP BY Participant_Type_Code 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------2147 sample_num
```sql
SELECT S.Service_ID, S.Service_Type_Code 
FROM Services S 
WHERE S.Service_ID IN (
    SELECT E.Service_ID 
    FROM Events E 
    JOIN Participants_in_Events PIE ON E.Event_ID = PIE.Event_ID 
    GROUP BY E.Service_ID 
    ORDER BY COUNT(PIE.Participant_ID) 
    LIMIT 1
)
```
-------------------------2148 sample_num
```sql
SELECT Event_ID 
FROM Participants_in_Events 
GROUP BY Event_ID 
ORDER BY COUNT(Participant_ID) DESC 
LIMIT 1;
```
-------------------------2149 sample_num
```sql
SELECT Event_ID FROM Events WHERE Event_ID NOT IN (SELECT Event_ID FROM Participants_in_Events WHERE Participant_ID IN (SELECT Participant_ID FROM Participants WHERE Participant_Details = 'Kenyatta Kuhn'))
```
-------------------------2150 sample_num
```sql
SELECT s.Service_Type_Code 
FROM Services s
JOIN Events e ON s.Service_ID = e.Service_ID
WHERE e.Event_Details LIKE '%successful%'
GROUP BY s.Service_Type_Code
HAVING COUNT(*) > 1 AND 
       (SELECT COUNT(*)
        FROM Events e2
        WHERE e2.Service_ID = s.Service_ID AND
              e2.Event_Details LIKE '%failure%') > 0;
```
-------------------------2151 sample_num
```sql
SELECT COUNT(*) 
FROM Events 
WHERE Event_ID NOT IN (SELECT Event_ID FROM Participants_in_Events)
```
-------------------------2152 sample_num
```sql
SELECT DISTINCT Participant_ID 
FROM Participants_in_Events;
```
-------------------------2153 sample_num
```sql
SELECT name FROM races WHERE date = (SELECT MAX(date) FROM races);
```
-------------------------2154 sample_num
```sql
SELECT name FROM races WHERE date = (SELECT MAX(date) FROM races);
```
-------------------------2155 sample_num
```sql
SELECT name, date 
FROM races 
ORDER BY date DESC 
LIMIT 1;
```
-------------------------2156 sample_num
```sql
SELECT name, date FROM races ORDER BY date DESC LIMIT 1;
```
-------------------------2157 sample_num
```sql
SELECT name FROM races WHERE year = 2017;
```
-------------------------2158 sample_num
```sql
SELECT name FROM races WHERE year = 2017;
```
-------------------------2159 sample_num
```sql
SELECT DISTINCT name FROM races WHERE year BETWEEN 2014 AND 2017;
```
-------------------------2160 sample_num
```sql
SELECT DISTINCT name FROM races WHERE year BETWEEN 2014 AND 2017;
```
-------------------------2161 sample_num
```sql
SELECT DISTINCT d.forename, d.surname 
FROM drivers d
JOIN lapTimes lt ON d.driverId = lt.driverId 
WHERE lt.milliseconds < 93000;
```
-------------------------2162 sample_num
```sql
SELECT DISTINCT d.forename, d.surname 
FROM drivers d 
JOIN lapTimes lt ON d.driverId = lt.driverId 
WHERE lt.milliseconds < 93000;
```
-------------------------2163 sample_num
```sql
SELECT DISTINCT d.driverId, d.nationality 
FROM drivers d
JOIN lapTimes lt ON d.driverId = lt.driverId
WHERE lt.milliseconds > 100000;
```
-------------------------2164 sample_num
```sql
SELECT DISTINCT d.driverId, d.nationality 
FROM drivers d
JOIN lapTimes lt ON d.driverId = lt.driverId
WHERE lt.milliseconds > 100000;
```
-------------------------2165 sample_num
```sql
SELECT d.forename, d.surname 
FROM drivers d 
JOIN (
  SELECT driverId, MIN(milliseconds) as min_milliseconds 
  FROM lapTimes 
  GROUP BY driverId
) lt 
ON d.driverId = lt.driverId 
ORDER BY lt.min_milliseconds 
LIMIT 1;
```
-------------------------2166 sample_num
```sql
SELECT d.forename, d.surname 
FROM drivers d 
JOIN (
  SELECT driverId, MIN(milliseconds) as min_milliseconds 
  FROM lapTimes 
  GROUP BY driverId
) lt 
ON d.driverId = lt.driverId 
ORDER BY lt.min_milliseconds 
LIMIT 1;
```
-------------------------2167 sample_num
```sql
SELECT T1.driverId, T1.surname
FROM drivers AS T1
JOIN (
    SELECT driverId, MAX(milliseconds) AS max_laptime
    FROM lapTimes
    GROUP BY driverId
) AS T2 ON T1.driverId = T2.driverId
WHERE T2.max_laptime = (
    SELECT MAX(milliseconds)
    FROM lapTimes
)
```
Note: This query may not return a unique result if multiple drivers have the same longest laptime. If you want to get only one driver, you may need to add additional conditions or use a ranking function.
-------------------------2168 sample_num
```sql
SELECT T1.driverId, T1.surname 
FROM drivers AS T1 
JOIN results AS T2 ON T1.driverId = T2.driverId 
JOIN (
  SELECT driverId, MAX(milliseconds) as max_laptime 
  FROM lapTimes 
  GROUP BY driverId
) AS T3 ON T2.driverId = T3.driverId 
ORDER BY T3.max_laptime DESC 
LIMIT 1;
```
-------------------------2169 sample_num
```sql
SELECT T2.driverId, T1.forename, T1.surname FROM drivers AS T1 JOIN (
    SELECT driverId, COUNT(*) as count FROM (
        SELECT raceId, driverId FROM lapTimes WHERE position = 1
    ) AS innerQuery
    GROUP BY driverId
    HAVING count >= 2
) AS T2 ON T1.driverId = T2.driverId;
```
-------------------------2170 sample_num
```sql
SELECT T1.driverId, T1.forename, T1.surname 
FROM drivers AS T1 
JOIN (
    SELECT driverId 
    FROM lapTimes 
    WHERE position = 1 
    GROUP BY driverId 
    HAVING COUNT(*) >= 2
) AS T2 ON T1.driverId = T2.driverId;
```
-------------------------2171 sample_num
```sql
SELECT COUNT(*) 
FROM results 
JOIN races ON results.raceId = races.raceId 
WHERE races.name = 'Australian Grand Prix' AND races.year = 2009;
```
-------------------------2172 sample_num
```sql
SELECT COUNT(*) 
FROM results 
JOIN races ON results.raceId = races.raceId 
WHERE races.name = 'Australian Grand Prix' AND races.year = 2009;
```
-------------------------2173 sample_num
```sql
SELECT COUNT(DISTINCT d.driverId)
FROM drivers d
LEFT JOIN results r ON d.driverId = r.driverId AND r.raceId IN (
    SELECT raceId
    FROM races
    WHERE year = 2009
)
WHERE r.driverId IS NULL;
```
-------------------------2174 sample_num
```sql
SELECT COUNT(DISTINCT d.driverId)
FROM drivers d
LEFT JOIN results r ON d.driverId = r.driverId AND r.raceId IN (
    SELECT raceId
    FROM races
    WHERE year = 2009
)
WHERE r.driverId IS NULL
```
```
-------------------------2175 sample_num
```sql
SELECT DISTINCT r.name, r.year 
FROM races r
JOIN results rs ON r.raceid = rs.raceid
JOIN drivers d ON d.driverid = rs.driverid
WHERE d.forename = 'Lewis';
```
-------------------------2176 sample_num
```sql
SELECT T2.name, T2.year 
FROM results AS T1 
JOIN races AS T2 ON T1.raceid = T2.raceid 
JOIN drivers AS T3 ON T1.driverid = T3.driverid 
WHERE T3.surname = 'Lewis'
```
-------------------------2177 sample_num
```sql
SELECT forename, surname FROM drivers WHERE nationality = 'German';
```
-------------------------2178 sample_num
```sql
SELECT forename, surname FROM drivers WHERE nationality = 'German';
```
-------------------------2179 sample_num
```sql
SELECT T1.driverId, T1.forename 
FROM drivers AS T1 
JOIN results AS T2 ON T1.driverId = T2.driverId 
JOIN races AS T3 ON T2.raceId = T3.raceId 
WHERE T3.name = 'Australian Grand Prix' 
INTERSECT 
SELECT T1.driverId, T1.forename 
FROM drivers AS T1 
JOIN results AS T2 ON T1.driverId = T2.driverId 
JOIN races AS T3 ON T2.raceId = T3.raceId 
WHERE T3.name = 'Chinese Grand Prix'
```
-------------------------2180 sample_num
```sql
SELECT T3.driverId, T3.forename 
FROM races AS T1 
JOIN results AS T2 ON T1.raceId = T2.raceId 
JOIN drivers AS T3 ON T2.driverId = T3.driverId 
WHERE T1.name IN ('Australian Grand Prix', 'Chinese Grand Prix')
GROUP BY T3.driverId, T3.forename
HAVING COUNT(*) > 1;
```
-------------------------2181 sample_num
```sql
SELECT d.forename, d.surname 
FROM drivers d 
JOIN results r ON d.driverId = r.driverId 
JOIN races ra ON r.raceId = ra.raceId 
WHERE ra.name = 'Australian Grand Prix' 
AND d.driverId NOT IN (SELECT driverId 
                      FROM results 
                      WHERE raceId IN (SELECT raceId 
                                      FROM races 
                                      WHERE name = 'Chinese Grand Prix'))
GROUP BY d.driverId;
```
-------------------------2182 sample_num
```sql
SELECT d.forename, d.surname 
FROM drivers d
JOIN results r ON d.driverId = r.driverId
JOIN races ra ON r.raceId = ra.raceId
WHERE ra.name = 'Australian Grand Prix'
EXCEPT
SELECT d.forename, d.surname 
FROM drivers d
JOIN results r ON d.driverId = r.driverId
JOIN races rc ON r.raceId = rc.raceId
WHERE rc.name = 'Chinese Grand Prix';
```
-------------------------2183 sample_num
```sql
SELECT DISTINCT d.forename
FROM drivers d
JOIN driverStandings ds ON d.driverId = ds.driverId
WHERE ds.position = 1 AND ds.wins = 1;
```
-------------------------2184 sample_num
```sql
SELECT DISTINCT d.forename 
FROM drivers d
JOIN driverStandings ds ON d.driverId = ds.driverId
WHERE ds.position = 1 AND ds.wins > 0;
```
-------------------------2185 sample_num
```sql
SELECT DISTINCT d.forename
FROM drivers d
JOIN driverStandings ds ON d.driverId = ds.driverId
WHERE ds.position = 1 AND ds.points > 20;
```
-------------------------2186 sample_num
```sql
SELECT DISTINCT d.forename 
FROM drivers d
JOIN driverStandings ds ON d.driverId = ds.driverId
WHERE ds.position = 1 AND ds.points > 20;
```
-------------------------2187 sample_num
```sql
SELECT nationality, COUNT(*) 
FROM constructors 
GROUP BY nationality;
```
-------------------------2188 sample_num
```sql
SELECT nationality, COUNT(DISTINCT constructorId) 
FROM constructors 
GROUP BY nationality;
```
-------------------------2189 sample_num
```sql
SELECT constructorId, COUNT(*) as num_races 
FROM results 
GROUP BY constructorId;
```
-------------------------2190 sample_num
```sql
SELECT constructorId, COUNT(raceId) 
FROM constructorResults 
GROUP BY constructorId;
```
-------------------------2191 sample_num
```sql
SELECT races.name 
FROM races 
JOIN circuits ON races.circuitId = circuits.circuitId 
WHERE races.year > 2017 AND circuits.country = 'Spain';
```
-------------------------2192 sample_num
```sql
SELECT T2.name FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Spain' AND T2.year > 2017;
```
-------------------------2193 sample_num
```sql
SELECT DISTINCT T2.name FROM races AS T2 JOIN circuits AS T1 ON T2.circuitId = T1.circuitId WHERE T2.year > 2000 AND T1.country = 'Spain'
```
-------------------------2194 sample_num
```sql
SELECT T2.name FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Spain' AND T2.year > 2000;
```
-------------------------2195 sample_num
```sql
SELECT DISTINCT T.driverId, T.stop 
FROM pitStops AS T 
WHERE T.duration < (SELECT MAX(T2.duration) FROM pitStops AS T2 WHERE T2.raceId = 841)
```
-------------------------2196 sample_num
```sql
SELECT T1.driverId, T1.stop FROM pitStops AS T1 WHERE T1.duration < (SELECT T2.duration FROM pitStops AS T2 WHERE T2.raceId = 841 AND T2.driverId = T1.driverId) ORDER BY T1.driverId, T1.stop;
```
-------------------------2197 sample_num
```sql
SELECT DISTINCT(driverId) 
FROM pitStops 
WHERE duration > (SELECT MIN(duration) FROM pitStops WHERE raceId = 841)
``` 

However, to specifically find the drivers with longer stop duration than ANY driver in raceId 841, the correct query should be:

```sql
SELECT DISTINCT(driverId) 
FROM pitStops 
WHERE duration > (SELECT duration FROM pitStops WHERE raceId = 841)
AND raceId = 841
```

But this would return every driver in race 841, even those with shorter times. If you want only drivers with longer stop durations than the maximum stop duration for any driver in race 841:

```sql
SELECT DISTINCT(driverId) 
FROM pitStops 
WHERE duration > (SELECT MAX(duration) FROM pitStops WHERE raceId = 841)
```
-------------------------2198 sample_num
```sql
SELECT DISTINCT T2.stop, T2.duration FROM pitStops AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 841 AND T2.duration > (SELECT duration FROM pitStops WHERE raceId = 841)
```
-------------------------2199 sample_num
```sql
SELECT DISTINCT forename 
FROM drivers 
ORDER BY forename ASC;
```
-------------------------2200 sample_num
```sql
SELECT DISTINCT forename 
FROM drivers 
ORDER BY forename ASC;
```
-------------------------2201 sample_num
```sql
SELECT DISTINCT name FROM races ORDER BY name DESC;
```
-------------------------2202 sample_num
```sql
SELECT DISTINCT name FROM races ORDER BY name DESC;
```
-------------------------2203 sample_num
```sql
SELECT name FROM races WHERE year BETWEEN 2009 AND 2011;
```
-------------------------2204 sample_num
```sql
SELECT name FROM races WHERE year BETWEEN 2009 AND 2011;
```
-------------------------2205 sample_num
```sql
SELECT name FROM races WHERE time > '12:00:00' OR time < '09:00:00';
```
-------------------------2206 sample_num
```sql
SELECT name FROM races WHERE time > '12:00:00' OR time < '09:00:00';
```
-------------------------2207 sample_num
```sql
SELECT d.forename, d.surname, d.driverId
FROM drivers d
WHERE d.driverId IN (
    SELECT p.driverId
    FROM pitStops p
    GROUP BY p.driverId
    HAVING COUNT(*) > 8
)
OR d.driverId IN (
    SELECT r.driverId
    FROM results r
    GROUP BY r.driverId
    HAVING COUNT(*) > 5
);
```
-------------------------2208 sample_num
```sql
SELECT d.forename, d.surname, d.driverId
FROM drivers d
JOIN (
    SELECT driverId, COUNT(*) as stop_count
    FROM pitStops
    GROUP BY driverId
    HAVING COUNT(*) > 8
) ps ON d.driverId = ps.driverId
UNION
SELECT d.forename, d.surname, d.driverId
FROM drivers d
JOIN (
    SELECT driverId, COUNT(*) as race_count
    FROM results
    GROUP BY driverId
    HAVING COUNT(*) > 5
) r ON d.driverId = r.driverId;
```
-------------------------2209 sample_num
```sql
SELECT d.surname, d.driverId 
FROM drivers d
JOIN (
    SELECT driverId 
    FROM pitStops 
    GROUP BY driverId 
    HAVING COUNT(*) = 11
) p ON d.driverId = p.driverId
JOIN (
    SELECT driverId 
    FROM results 
    GROUP BY driverId 
    HAVING COUNT(*) > 5
) r ON d.driverId = r.driverId;
```
-------------------------2210 sample_num
```sql
SELECT d.surname, d.driverId 
FROM drivers d
JOIN (
    SELECT driverId 
    FROM pitStops 
    GROUP BY driverId 
    HAVING COUNT(*) = 11
) p ON d.driverId = p.driverId
JOIN (
    SELECT driverId 
    FROM results 
    GROUP BY driverId 
    HAVING COUNT(*) > 5
) r ON d.driverId = r.driverId;
```
-------------------------2211 sample_num
```sql
SELECT T1.driverId, T1.surname 
FROM drivers AS T1 
JOIN results AS T2 ON T1.driverId = T2.driverId 
JOIN races AS T3 ON T2.raceId = T3.raceId 
WHERE T3.year > 2010 
GROUP BY T1.driverId 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------2212 sample_num
```sql
SELECT T1.driverId, T1.surname 
FROM drivers AS T1 
JOIN results AS T2 ON T1.driverId = T2.driverId 
JOIN races AS T3 ON T2.raceId = T3.raceId 
WHERE T3.year > 2010 
GROUP BY T1.driverId 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------2213 sample_num
```sql
SELECT name FROM circuits WHERE country IN ('UK', 'Malaysia');
```
-------------------------2214 sample_num
```sql
SELECT name FROM circuits WHERE country = 'UK' OR country = 'Malaysia';
```
-------------------------2215 sample_num
```sql
SELECT circuitId, location FROM circuits WHERE country = 'France' OR country = 'Belgium';
```
-------------------------2216 sample_num
```sql
SELECT circuitId, location FROM circuits WHERE country = 'France' OR country = 'Belgium';
```
-------------------------2217 sample_num
```sql
SELECT c.name
FROM constructors c
JOIN constructorStandings cs ON c.constructorId = cs.constructorId
WHERE c.nationality = 'Japanese' AND cs.points > 5;
```
-------------------------2218 sample_num
```sql
SELECT c.name 
FROM constructors c
JOIN constructorStandings cs ON c.constructorId = cs.constructorId
WHERE c.nationality = 'Japanese' AND cs.points > 5;
```
-------------------------2219 sample_num
```sql
SELECT AVG(T2.fastestLapSpeed) 
FROM races AS T1 
JOIN results AS T2 ON T1.raceId = T2.raceId 
WHERE T1.name = 'Monaco Grand Prix' AND T1.year = 2008;
```
-------------------------2220 sample_num
```sql
SELECT AVG(T2.fastestLapSpeed) 
FROM races AS T1 
JOIN results AS T2 ON T1.raceId = T2.raceId 
WHERE T1.name = 'Monaco Grand Prix' AND T1.year = 2008;
```
-------------------------2221 sample_num
```sql
SELECT MAX(T2.fastestLapSpeed) 
FROM races AS T1 
JOIN results AS T2 ON T1.raceId = T2.raceId 
WHERE T1.name = 'Monaco Grand Prix' AND T1.year = 2008;
```
-------------------------2222 sample_num
```sql
SELECT MAX(T1.fastestLapSpeed) 
FROM results AS T1 
JOIN races AS T2 ON T1.raceId = T2.raceId 
WHERE T2.name = 'Monaco Grand Prix' AND T2.year = 2008;
```
-------------------------2223 sample_num
```sql
SELECT T1.name, T1.year, MAX(T2.fastestLapSpeed) 
FROM races AS T1 
JOIN results AS T2 ON T1.raceId = T2.raceId 
WHERE T1.year > 2004 
GROUP BY T1.name, T1.year 
ORDER BY T1.year;
```
-------------------------2224 sample_num
```sql
SELECT T1.name, MAX(T2.fastestLapSpeed) 
FROM races AS T1 
JOIN results AS T2 ON T1.raceId = T2.raceId 
WHERE T1.year > 2004 
GROUP BY T1.name 
ORDER BY T1.year;
```
-------------------------2225 sample_num
```sql
SELECT T1.name, T1.year, AVG(T2.fastestLapSpeed) 
FROM races AS T1 
JOIN results AS T2 ON T1.raceId = T2.raceId 
WHERE T1.year > 2004 
GROUP BY T1.raceId 
ORDER BY T1.year;
```
-------------------------2226 sample_num
```sql
SELECT r.name, AVG(results.fastestLapSpeed) as avg_speed, r.year 
FROM races r 
JOIN results 
ON r.raceId = results.raceId 
WHERE r.year > 2004 
GROUP BY r.raceId, r.year 
ORDER BY r.year;
```
-------------------------2227 sample_num
```sql
SELECT T1.driverId, T1.forename, COUNT(T2.raceId) AS num_races
FROM drivers AS T1
JOIN results AS T2 ON T1.driverId = T2.driverId
GROUP BY T1.driverId
HAVING COUNT(T2.raceId) >= 2;
```
-------------------------2228 sample_num
```sql
SELECT T1.driverId, T1.forename, COUNT(T2.raceId) 
FROM drivers AS T1 
JOIN results AS T2 ON T1.driverId = T2.driverId 
GROUP BY T1.driverId 
HAVING COUNT(T2.raceId) >= 2;
```
-------------------------2229 sample_num
```sql
SELECT driverId, COUNT(raceId) 
FROM results 
GROUP BY driverId 
HAVING COUNT(raceId) <= 30;
```
-------------------------2230 sample_num
```sql
SELECT driverId, COUNT(raceId) AS race_count
FROM results
GROUP BY driverId
HAVING COUNT(raceId) <= 30;
```
-------------------------2231 sample_num
```sql
SELECT T1.driverId, T1.surname 
FROM drivers AS T1 
JOIN results AS T2 ON T1.driverId = T2.driverId 
GROUP BY T1.driverId 
ORDER BY COUNT(T2.raceId) DESC 
LIMIT 1;
```
-------------------------2232 sample_num
```sql
SELECT T2.driverId, T2.surname
FROM (
  SELECT driverId, COUNT(*) AS race_count
  FROM results
  GROUP BY driverId
) AS T1
JOIN drivers AS T2 ON T1.driverId = T2.driverId
WHERE T1.race_count = (
  SELECT MAX(race_count)
  FROM (
    SELECT COUNT(*) AS race_count
    FROM results
    GROUP BY driverId
  ) AS subquery
)
```
-------------------------2233 sample_num
```sql
SELECT COUNT(*) FROM technician;
```
-------------------------2234 sample_num
```sql
SELECT COUNT(*) FROM technician;
```
-------------------------2235 sample_num
```sql
SELECT Name FROM technician ORDER BY Age ASC;
```
-------------------------2236 sample_num
```sql
SELECT Name FROM technician ORDER BY Age ASC;
```
-------------------------2237 sample_num
```sql
SELECT Team, Starting_Year FROM technician;
```
-------------------------2238 sample_num
```sql
SELECT Team, Starting_Year FROM technician;
```
-------------------------2239 sample_num
```sql
SELECT Name FROM technician WHERE Team != 'NYY';
```
-------------------------2240 sample_num
```sql
SELECT Name FROM technician WHERE Team != 'NYY'
```
-------------------------2241 sample_num
```sql
SELECT Name 
FROM technician 
WHERE Age IN (36, 37);
```
-------------------------2242 sample_num
```sql
SELECT Name 
FROM technician 
WHERE Age IN (36, 37);
```
-------------------------2243 sample_num
```sql
SELECT Starting_Year 
FROM technician 
ORDER BY Age DESC 
LIMIT 1;
```
-------------------------2244 sample_num
```sql
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1;
```
-------------------------2245 sample_num
```sql
SELECT Team, COUNT(*) AS Num_Technicians
FROM technician
GROUP BY Team;
```
-------------------------2246 sample_num
```sql
SELECT Team, COUNT(*) AS NumberOfTechnicians 
FROM technician 
GROUP BY Team;
```
-------------------------2247 sample_num
```sql
SELECT Team 
FROM technician 
GROUP BY Team 
ORDER BY COUNT(technician_id) DESC 
LIMIT 1;
```
-------------------------2248 sample_num
```sql
SELECT Team, COUNT(*) AS num_technicians 
FROM technician 
GROUP BY Team 
ORDER BY num_technicians DESC 
LIMIT 1;
```
-------------------------2249 sample_num
```sql
SELECT Team 
FROM technician 
GROUP BY Team 
HAVING COUNT(technician_id) >= 2;
```
-------------------------2250 sample_num
```sql
SELECT Team 
FROM technician 
GROUP BY Team 
HAVING COUNT(technician_id) >= 2;
```
-------------------------2251 sample_num
```sql
SELECT T2.Name, T3.Machine_series 
FROM repair_assignment AS T1 
JOIN technician AS T2 ON T1.technician_id = T2.technician_id 
JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID;
```
-------------------------2252 sample_num
```sql
SELECT T2.Name, T3.Machine_series 
FROM repair_assignment AS T1 
JOIN technician AS T2 ON T1.technician_id = T2.technician_id 
JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID;
```
-------------------------2253 sample_num
```sql
SELECT T3.Name 
FROM repair_assignment AS T1 
JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID 
JOIN technician AS T3 ON T1.technician_id = T3.technician_id 
ORDER BY T2.quality_rank ASC;
```
-------------------------2254 sample_num
```sql
SELECT T3.Name 
FROM machine AS T1 
JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID 
JOIN technician AS T3 ON T2.technician_id = T3.technician_id 
ORDER BY T1.quality_rank ASC;
```
-------------------------2255 sample_num
```sql
SELECT T3.Name 
FROM repair_assignment AS T1 
JOIN machine AS T2 ON T1.Machine_ID = T2.Machine_ID 
JOIN technician AS T3 ON T1.technician_id = T3.technician_id 
WHERE T2.value_points > 70;
```
-------------------------2256 sample_num
```sql
SELECT T2.Name 
FROM repair_assignment AS T1 
JOIN technician AS T2 ON T1.technician_id = T2.technician_id 
JOIN machine AS T3 ON T1.Machine_ID = T3.Machine_ID 
WHERE T3.value_points > 70;
```
-------------------------2257 sample_num
```sql
SELECT T1.Name, COUNT(T3.repair_ID) 
FROM technician AS T1 
JOIN repair_assignment AS T2 
ON T1.technician_id = T2.technician_id 
JOIN repair AS T3 
ON T2.repair_ID = T3.repair_ID 
GROUP BY T1.Name;
```
-------------------------2258 sample_num
```sql
SELECT T1.Name, COUNT(T3.Machine_ID) AS NumberOfMachines
FROM technician AS T1
JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id
JOIN machine AS T3 ON T2.Machine_ID = T3.Machine_ID
GROUP BY T1.Name;
```
-------------------------2259 sample_num
```sql
SELECT Name 
FROM technician 
WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)
```
-------------------------2260 sample_num
```sql
SELECT Name 
FROM technician 
WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)
```
-------------------------2261 sample_num
```sql
SELECT Starting_Year 
FROM technician 
WHERE Team = 'CLE' 
INTERSECT 
SELECT Starting_Year 
FROM technician 
WHERE Team = 'CWS'
```
-------------------------2262 sample_num
```sql
SELECT Starting_Year 
FROM technician 
WHERE Team = 'CLE' OR Team = 'CWS'
GROUP BY Starting_Year;
```
-------------------------2263 sample_num
```sql
SELECT COUNT(*) FROM entrepreneur
```
-------------------------2264 sample_num
```sql
SELECT COUNT(*) FROM entrepreneur;
```
-------------------------2265 sample_num
```sql
SELECT Company 
FROM entrepreneur 
ORDER BY Money_Requested DESC;
```
-------------------------2266 sample_num
```sql
SELECT Company 
FROM entrepreneur 
ORDER BY Money_Requested DESC;
```
-------------------------2267 sample_num
```sql
SELECT Company, Investor FROM entrepreneur;
```
-------------------------2268 sample_num
```sql
SELECT Company, Investor FROM entrepreneur;
``` 

However, if you want the name of the entrepreneur associated with each company and investor, then you would need to join the two tables on the People_ID field. Here is the corresponding SQL command:

```sql
SELECT e.Company, e.Investor, p.Name 
FROM entrepreneur e 
JOIN people p ON e.People_ID = p.People_ID;
```
-------------------------2269 sample_num
```sql
SELECT AVG(Money_Requested) 
FROM entrepreneur;
```
-------------------------2270 sample_num
```sql
SELECT AVG(Money_Requested) 
FROM entrepreneur;
```
-------------------------2271 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Weight ASC;
```
-------------------------2272 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Weight ASC;
```
-------------------------2273 sample_num
```sql
SELECT p.Name
FROM people p
JOIN entrepreneur e ON p.People_ID = e.People_ID;
```
-------------------------2274 sample_num
```sql
SELECT p.Name
FROM people p
JOIN entrepreneur e ON p.People_ID = e.People_ID;
```
-------------------------2275 sample_num
```sql
SELECT p.Name
FROM entrepreneur e
JOIN people p ON e.People_ID = p.People_ID
WHERE e.Investor != 'Rachel Elnaugh';
```
-------------------------2276 sample_num
```sql
SELECT p.Name
FROM people p
JOIN entrepreneur e ON p.People_ID = e.People_ID
WHERE e.Investor <> 'Rachel Elnaugh'
```
-------------------------2277 sample_num
```sql
SELECT Weight 
FROM people 
WHERE Height = (SELECT MIN(Height) FROM people);
```
-------------------------2278 sample_num
```sql
SELECT Weight 
FROM people 
WHERE Height = (SELECT MIN(Height) FROM people);
```
-------------------------2279 sample_num
```sql
SELECT p.Name 
FROM people p
JOIN entrepreneur e ON p.People_ID = e.People_ID
WHERE p.Weight = (SELECT MAX(Weight) FROM people WHERE People_ID IN (SELECT People_ID FROM entrepreneur))
```
-------------------------2280 sample_num
```sql
SELECT p.Name 
FROM people p
JOIN entrepreneur e ON p.People_ID = e.People_ID
WHERE p.Weight = (SELECT MAX(Weight) FROM people WHERE People_ID IN (SELECT People_ID FROM entrepreneur))
```
-------------------------2281 sample_num
```sql
SELECT SUM(e.Money_Requested) 
FROM entrepreneur e 
JOIN people p ON e.People_ID = p.People_ID 
WHERE p.Height > 1.85;
```
-------------------------2282 sample_num
```sql
SELECT SUM(Money_Requested) 
FROM entrepreneur 
JOIN people ON entrepreneur.People_ID = people.People_ID 
WHERE Height > 1.85;
```
-------------------------2283 sample_num
```sql
SELECT p.Date_of_Birth 
FROM entrepreneur e 
JOIN people p ON e.People_ID = p.People_ID 
WHERE e.Investor IN ('Simon Woodroffe', 'Peter Jones');
```
-------------------------2284 sample_num
```sql
SELECT p.Date_of_Birth 
FROM entrepreneur e 
JOIN people p ON e.People_ID = p.People_ID 
WHERE e.Investor IN ('Simon Woodroffe', 'Peter Jones');
```
-------------------------2285 sample_num
```sql
SELECT p.Weight 
FROM entrepreneur e 
JOIN people p ON e.People_ID = p.People_ID 
ORDER BY e.Money_Requested DESC;
```
-------------------------2286 sample_num
```sql
SELECT p.Weight 
FROM entrepreneur e 
JOIN people p ON e.People_ID = p.People_ID 
ORDER BY e.Money_Requested DESC;
```
-------------------------2287 sample_num
```sql
SELECT Investor, COUNT(Entrepreneur_ID) AS Num_Entrepreneurs
FROM entrepreneur
GROUP BY Investor;
```
-------------------------2288 sample_num
```sql
SELECT Investor, COUNT(Entrepreneur_ID) 
FROM entrepreneur 
GROUP BY Investor;
```
-------------------------2289 sample_num
```sql
SELECT Investor 
FROM entrepreneur 
GROUP BY Investor 
ORDER BY COUNT(Entrepreneur_ID) DESC 
LIMIT 1;
```
-------------------------2290 sample_num
```sql
SELECT Investor, COUNT(*) AS NumberOfInvestments 
FROM entrepreneur 
GROUP BY Investor 
ORDER BY NumberOfInvestments DESC 
LIMIT 1;
```
-------------------------2291 sample_num
```sql
SELECT Investor 
FROM entrepreneur 
GROUP BY Investor 
HAVING COUNT(DISTINCT Entrepreneur_ID) >= 2;
```
-------------------------2292 sample_num
```sql
SELECT Investor 
FROM entrepreneur 
GROUP BY Investor 
HAVING COUNT(Entrepreneur_ID) >= 2;
```
-------------------------2293 sample_num
```sql
SELECT p.Name, e.Company, e.Money_Requested 
FROM entrepreneur e 
JOIN people p ON e.People_ID = p.People_ID 
ORDER BY e.Money_Requested DESC;
```
-------------------------2294 sample_num
```sql
SELECT p.Name, e.Investor, e.Money_Requested 
FROM entrepreneur e 
JOIN people p ON e.People_ID = p.People_ID 
ORDER BY e.Money_Requested DESC;
```
-------------------------2295 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur);
```
-------------------------2296 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)
```
-------------------------2297 sample_num
```sql
SELECT Investor 
FROM entrepreneur 
WHERE Money_Requested > 140000 
INTERSECT 
SELECT Investor 
FROM entrepreneur 
WHERE Money_Requested < 120000;
```
-------------------------2298 sample_num
```sql
SELECT Investor 
FROM entrepreneur 
WHERE Money_Requested > 140000 
INTERSECT 
SELECT Investor 
FROM entrepreneur 
WHERE Money_Requested < 120000;
```
-------------------------2299 sample_num
```sql
SELECT COUNT(DISTINCT Company) FROM entrepreneur;
```
-------------------------2300 sample_num
```sql
SELECT COUNT(DISTINCT Company) FROM entrepreneur;
```
-------------------------2301 sample_num
```sql
SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people);
```
-------------------------2302 sample_num
```sql
SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people);
```
-------------------------2303 sample_num
```sql
SELECT COUNT(*) FROM perpetrator
```
-------------------------2304 sample_num
```sql
SELECT Date 
FROM perpetrator 
ORDER BY Killed DESC;
```
However, to join the two tables and get the perpetrator name as well you would use:
```sql
SELECT p.Date, pe.Name 
FROM perpetrator p 
JOIN people pe ON p.People_ID = pe.People_ID 
ORDER BY p.Killed DESC;
```
-------------------------2305 sample_num
```sql
SELECT People_ID, Injured 
FROM perpetrator 
ORDER BY Injured ASC;
```
However, this query will not list the number of people injured by each perpetrator, but rather it will list the number of injured for each People_ID in ascending order. If you want to count the total number of people injured by each perpetrator and order the result by this count, then the correct query would be:
```sql
SELECT Perpetrator_ID, COUNT(Injured) as Total_Injured 
FROM perpetrator 
GROUP BY Perpetrator_ID 
ORDER BY Total_Injured ASC;
```
-------------------------2306 sample_num
```sql
SELECT AVG(Injured) FROM perpetrator;
```
-------------------------2307 sample_num
```sql
SELECT Location 
FROM perpetrator 
WHERE Killed = (SELECT MAX(Killed) FROM perpetrator);
```
Note: This query may return multiple locations if there are multiple perpetrators with the same highest number of kills. If you want to get only one result, you may need to add additional conditions or sorting.
-------------------------2308 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Height ASC;
```
-------------------------2309 sample_num
```sql
SELECT Name FROM people WHERE People_ID IN (SELECT People_ID FROM perpetrator)
```
-------------------------2310 sample_num
```sql
SELECT p.Name
FROM perpetrator pr
JOIN people p ON pr.People_ID = p.People_ID
WHERE p.Country != 'China'
```
-------------------------2311 sample_num
```sql
SELECT p.Name 
FROM people p
JOIN perpetrator pr ON p.People_ID = pr.People_ID 
WHERE p.Weight = (SELECT MAX(Weight) FROM people);
```
-------------------------2312 sample_num
```sql
SELECT SUM(k.Killed) 
FROM perpetrator k 
JOIN people p ON k.People_ID = p.People_ID 
WHERE p.Height > 1.84;
```
-------------------------2313 sample_num
```sql
SELECT p.Name 
FROM perpetrator pr 
JOIN people p ON pr.People_ID = p.People_ID 
WHERE pr.Country = 'China' OR pr.Country = 'Japan';
```
-------------------------2314 sample_num
```sql
SELECT p.Height
FROM people p
JOIN perpetrator pr ON p.People_ID = pr.People_ID
ORDER BY pr.Injured DESC;
```
```
-------------------------2315 sample_num
```sql
SELECT Country, COUNT(Perpetrator_ID) 
FROM perpetrator 
GROUP BY Country;
```
-------------------------2316 sample_num
```sql
SELECT Country, COUNT(Perpetrator_ID) as Num_Perpetrators
FROM perpetrator
GROUP BY Country
ORDER BY Num_Perpetrators DESC
LIMIT 1;
```
-------------------------2317 sample_num
```sql
SELECT Country, COUNT(Perpetrator_ID) as Num_Perpetrators
FROM perpetrator
GROUP BY Country
HAVING COUNT(Perpetrator_ID) >= 2;
```
-------------------------2318 sample_num
```sql
SELECT p.Name 
FROM perpetrator pr 
JOIN people p ON pr.People_ID = p.People_ID 
ORDER BY pr.Year DESC;
```
-------------------------2319 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)
```
-------------------------2320 sample_num
```sql
SELECT Country 
FROM perpetrator 
WHERE Injured > 50 
INTERSECT 
SELECT Country 
FROM perpetrator 
WHERE Injured < 20;
```
-------------------------2321 sample_num
```sql
SELECT COUNT(DISTINCT Location) FROM perpetrator
```
-------------------------2322 sample_num
```sql
SELECT T1.Date 
FROM perpetrator AS T1 
JOIN people AS T2 
ON T1.People_ID = T2.People_ID 
WHERE T2.Height = (SELECT MAX(Height) FROM people);
```
-------------------------2323 sample_num
```sql
SELECT Year FROM perpetrator ORDER BY Year DESC LIMIT 1;
```
-------------------------2324 sample_num
```sql
SELECT Campus FROM Campuses WHERE County = 'Los Angeles';
```
-------------------------2325 sample_num
```sql
SELECT Campus FROM Campuses WHERE County = 'Los Angeles';
```
-------------------------2326 sample_num
```sql
SELECT Campus FROM Campuses WHERE Location = 'Chico';
```
-------------------------2327 sample_num
```sql
SELECT Campus FROM Campuses WHERE Location = 'Chico';
```
-------------------------2328 sample_num
```sql
SELECT Campus FROM Campuses WHERE Year = 1958;
```
-------------------------2329 sample_num
```sql
SELECT Campus FROM Campuses WHERE Year = 1958;
```
-------------------------2330 sample_num
```sql
SELECT Campus FROM Campuses WHERE Year < 1800;
```
-------------------------2331 sample_num
```sql
SELECT Campus FROM Campuses WHERE Year < 1800;
```
-------------------------2332 sample_num
```sql
SELECT Campus FROM Campuses WHERE Year BETWEEN 1935 AND 1939;
```
-------------------------2333 sample_num
```sql
SELECT Campus FROM Campuses WHERE Year BETWEEN 1935 AND 1939;
```
-------------------------2334 sample_num
```sql
SELECT Campus 
FROM Campuses 
WHERE (Location = 'Northridge' AND County = 'Los Angeles') 
OR (Location = 'San Francisco' AND County = 'San Francisco');
```
-------------------------2335 sample_num
```sql
SELECT Campus 
FROM Campuses 
WHERE Location = 'Northridge' AND County = 'Los Angeles'
OR Location = 'San Francisco' AND County = 'San Francisco';
```
-------------------------2336 sample_num
```sql
SELECT CampusFee 
FROM csu_fees 
WHERE Campus = 'San Jose State University' AND Year = 1996;
```
-------------------------2337 sample_num
```sql
SELECT CampusFee 
FROM csu_fees 
WHERE Campus = 'San Jose State University' AND Year = 1996;
```
-------------------------2338 sample_num
```sql
SELECT CampusFee 
FROM csu_fees 
WHERE Campus = 'San Francisco State University' AND Year = 1996;
```
-------------------------2339 sample_num
```sql
SELECT CampusFee 
FROM csu_fees 
WHERE Campus = 'San Francisco State University' AND Year = 1996;
```
-------------------------2340 sample_num
```sql
SELECT COUNT(*) 
FROM csu_fees 
WHERE CampusFee > (SELECT AVG(CampusFee) FROM csu_fees);
```
-------------------------2341 sample_num
```sql
SELECT COUNT(*) 
FROM csu_fees 
WHERE CampusFee > (SELECT AVG(CampusFee) FROM csu_fees);
```
-------------------------2342 sample_num
```sql
SELECT COUNT(*) 
FROM csu_fees 
WHERE CampusFee > (SELECT AVG(CampusFee) FROM csu_fees);
```
-------------------------2343 sample_num
```sql
SELECT COUNT(*) 
FROM csu_fees 
WHERE CampusFee > (SELECT AVG(CampusFee) FROM csu_fees);
```
-------------------------2344 sample_num
```sql
SELECT Campus FROM Campuses WHERE County = 'Los Angeles' AND Year > 1950;
```
-------------------------2345 sample_num
```sql
SELECT Campus FROM Campuses WHERE County = 'Los Angeles' AND Year > 1950;
```
-------------------------2346 sample_num
```sql
SELECT Year 
FROM degrees 
GROUP BY Year 
ORDER BY SUM(Degrees) DESC 
LIMIT 1;
```
-------------------------2347 sample_num
```sql
SELECT Year 
FROM degrees 
GROUP BY Year 
ORDER BY SUM(Degrees) DESC 
LIMIT 1;
```
-------------------------2348 sample_num
```sql
SELECT Campus 
FROM degrees 
GROUP BY Campus 
ORDER BY SUM(Degrees) DESC 
LIMIT 1;
```
-------------------------2349 sample_num
```sql
SELECT Campus 
FROM degrees 
GROUP BY Campus 
ORDER BY SUM(Degrees) DESC 
LIMIT 1;
```
-------------------------2350 sample_num
```sql
SELECT Campus 
FROM faculty 
WHERE Year = 2003 
GROUP BY Campus 
ORDER BY COUNT(Faculty) DESC 
LIMIT 1;
```
-------------------------2351 sample_num
```sql
SELECT T1.Campus 
FROM faculty AS T1 
JOIN Campuses AS T2 
ON T1.Campus = T2.Id 
WHERE T1.Year = 2003 
ORDER BY T1.Faculty DESC 
LIMIT 1;
```
-------------------------2352 sample_num
```sql
SELECT AVG(CampusFee) 
FROM csu_fees 
WHERE Year = 1996;
```
-------------------------2353 sample_num
```sql
SELECT AVG(CampusFee) 
FROM csu_fees 
WHERE Year = 1996;
```
-------------------------2354 sample_num
```sql
SELECT AVG(CampusFee) 
FROM csu_fees 
WHERE Year = 2005;
```
-------------------------2355 sample_num
```sql
SELECT AVG(CampusFee) 
FROM csu_fees 
WHERE Year = 2005;
```
-------------------------2356 sample_num
```sql
SELECT SUM(Degrees) 
FROM degrees 
WHERE Year BETWEEN 1998 AND 2002;
```
-------------------------2357 sample_num
```sql
SELECT SUM(Degrees) 
FROM degrees 
WHERE Year BETWEEN 1998 AND 2002;
```
-------------------------2358 sample_num
```sql
SELECT Campus, COUNT(Degrees) 
FROM degrees 
JOIN campuses ON degrees.Campus = campuses.Id 
WHERE campuses.County = 'Orange' AND degrees.Year > 2000 
GROUP BY Campus;
```
-------------------------2359 sample_num
```sql
SELECT campuses.Campus, SUM(degrees.Degrees) as Total_Degrees
FROM campuses
JOIN degrees ON campuses.Id = degrees.Campus
WHERE campuses.County = 'Orange' AND degrees.Year > 2000
GROUP BY campuses.Campus;
```
-------------------------2360 sample_num
```sql
SELECT C1.Campus 
FROM campuses AS C1 
JOIN faculty AS F1 ON C1.Id = F1.Campus 
WHERE F1.Year = 2002 
AND F1.Faculty > (
    SELECT MAX(F2.Faculty) 
    FROM campuses AS C2 
    JOIN faculty AS F2 ON C2.Id = F2.Campus 
    WHERE C2.County = 'Orange' AND F2.Year = 2002
)
```
```
-------------------------2361 sample_num
```sql
SELECT T1.campus 
FROM campuses AS T1 
JOIN faculty AS T2 
ON T1.id = T2.campus 
WHERE T2.year = 2002 
AND T2.faculty > (
    SELECT MAX(faculty) 
    FROM campuses 
    JOIN faculty 
    ON campuses.id = faculty.campus 
    WHERE campuses.county = 'Orange' 
    AND faculty.year = 2002
)
```
-------------------------2362 sample_num
```sql
SELECT Campus 
FROM enrollments 
WHERE Year = 1956 AND TotalEnrollment_AY > 400 AND FTE_AY > 200;
```
-------------------------2363 sample_num
```sql
SELECT c.Campus
FROM Campuses c
JOIN enrollments e ON c.Id = e.Campus
WHERE c.Year = 1956 AND e.FTE_AY > 200 AND e.TotalEnrollment_AY > 400;
```
-------------------------2364 sample_num
```sql
SELECT COUNT(*) 
FROM Campuses 
WHERE County = 'Los Angeles';
```
-------------------------2365 sample_num
```sql
SELECT COUNT(*) 
FROM Campuses 
WHERE County = 'LA';
```
-------------------------2366 sample_num
```sql
SELECT Campus FROM Campuses WHERE County = 'Los Angeles';
```
-------------------------2367 sample_num
```sql
SELECT Campus FROM Campuses WHERE County = 'Los Angeles';
```
-------------------------2368 sample_num
```sql
SELECT SUM(Degrees) 
FROM degrees 
JOIN Campuses ON degrees.Campus = Campuses.Id 
WHERE Campus = 'San Jose State University' AND Year = 2000;
```
-------------------------2369 sample_num
```sql
SELECT SUM(Degrees) 
FROM degrees 
WHERE Campus = 'San Jose State University' AND Year = 2000;
```
-------------------------2370 sample_num
```sql
SELECT Degrees 
FROM degrees 
JOIN Campuses ON degrees.Campus = Campuses.Id 
WHERE Campuses.Campus = 'San Francisco State University' AND degrees.Year = 2001;
```
-------------------------2371 sample_num
```sql
SELECT degrees 
FROM degrees 
JOIN campuses ON degrees.Campus = campuses.Id 
WHERE campuses.Campus = 'San Francisco State University' AND degrees.Year = 2001;
```
-------------------------2372 sample_num
```sql
SELECT SUM(Faculty) 
FROM faculty 
WHERE Year = 2002;
```
-------------------------2373 sample_num
```sql
SELECT SUM(Faculty) 
FROM faculty 
WHERE Year = 2002;
```
-------------------------2374 sample_num
```sql
SELECT COUNT(*) 
FROM faculty 
WHERE Campus = 'Long Beach State University' AND Year = 2002;
```
-------------------------2375 sample_num
```sql
SELECT COUNT(Faculty) 
FROM faculty 
WHERE Campus = 'Long Beach State University' AND Year = 2002;
```
-------------------------2376 sample_num
```sql
SELECT COUNT(*) 
FROM faculty 
WHERE Campus = 'San Francisco State University' AND Year = 2004;
```
-------------------------2377 sample_num
```sql
SELECT COUNT(*) 
FROM faculty 
WHERE Campus = 'San Francisco State University' AND Year = 2004;
```
-------------------------2378 sample_num
```sql
SELECT Campus 
FROM faculty 
WHERE Year = 2004 AND Faculty BETWEEN 600 AND 1000;
```
-------------------------2379 sample_num
```sql
SELECT Campus
FROM faculty
WHERE Year = 2004 AND Faculty BETWEEN 600 AND 1000;
```
-------------------------2380 sample_num
```sql
SELECT f.Faculty
FROM faculty f
JOIN (
    SELECT d.Campus, COUNT(d.Degrees) as degree_count
    FROM degrees d
    WHERE d.Year = 2002
    GROUP BY d.Campus
    ORDER BY degree_count DESC
    LIMIT 1
) max_degrees_campus ON f.Campus = max_degrees_campus.Campus
WHERE f.Year = 2002;
```
-------------------------2381 sample_num
```sql
SELECT f.Faculty
FROM faculty f
JOIN (
    SELECT d.Campus, d.Degrees
    FROM degrees d
    WHERE d.Year = 2002
    ORDER BY d.Degrees DESC
    LIMIT 1
) max_degrees
ON f.Campus = max_degrees.Campus
WHERE f.Year = 2002;
```
-------------------------2382 sample_num
```sql
SELECT COUNT(faculty.Faculty) 
FROM faculty 
JOIN campuses ON faculty.Campus = campuses.Id 
WHERE faculty.Year = 2001 AND campuses.Campus = (
    SELECT c.Campus 
    FROM degrees d 
    JOIN campuses c ON d.Campus = c.Id 
    WHERE d.Year = 2001 
    GROUP BY c.Campus 
    ORDER BY SUM(d.Degrees) ASC 
    LIMIT 1
)
```
```
-------------------------2383 sample_num
```sql
SELECT COUNT(faculty.Faculty) 
FROM faculty 
JOIN campuses ON faculty.Campus = campuses.Id 
JOIN degrees ON campuses.Id = degrees.Campus AND faculty.Year = degrees.Year 
WHERE faculty.Year = 2001 
GROUP BY faculty.Campus 
ORDER BY (SELECT COUNT(degrees.Degrees) FROM degrees WHERE degrees.Campus = faculty.Campus AND degrees.Year = 2001) 
LIMIT 1;
```
```
-------------------------2384 sample_num
```sql
SELECT SUM(Undergraduate)
FROM discipline_enrollments
WHERE Campus = 'San Jose State University' AND Year = 2004;
```
-------------------------2385 sample_num
```sql
SELECT SUM(Undergraduate)
FROM discipline_enrollments
WHERE Campus = 'San Jose State' AND Discipline = 'Undergraduate';
```

However, the correct query should join the campuses and discipline_enrollments table to get the correct campus id for 'San Jose State'. But based on the given schema, we don't have a direct way to link 'San Jose State' to its corresponding 'Undergraduate' enrollment without having a common column between the Campuses and discipline_enrollments tables.

A more correct query would be if 'Campus' in discipline_enrollments was an Id that matches the 'Id' in Campuses table. Assuming that, the correct query would be:

```sql
SELECT SUM(de.Undergraduate)
FROM discipline_enrollments de
JOIN Campuses c ON de.Campus = c.Id
WHERE c.Campus = 'San Jose State';
```
But this contradicts the given schema, so the first query is provided as requested.
-------------------------2386 sample_num
```sql
SELECT SUM(discipline_enrollments.Graduate)
FROM discipline_enrollments
JOIN campuses ON discipline_enrollments.Campus = campuses.Id
WHERE campuses.Campus = 'San Francisco State University' AND discipline_enrollments.Year = 2004;
```
-------------------------2387 sample_num
```sql
SELECT SUM(degrees.Degrees) 
FROM degrees 
JOIN campuses ON degrees.Campus = campuses.Id 
WHERE campuses.Campus = 'San Francisco State University' AND degrees.Year = 2004;
```
-------------------------2388 sample_num
```sql
SELECT CampusFee 
FROM csu_fees 
WHERE Campus = 'San Francisco State University' AND Year = 2000;
```
-------------------------2389 sample_num
```sql
SELECT CampusFee 
FROM csu_fees 
WHERE Campus = 'San Francisco State University' AND Year = 2000;
```
-------------------------2390 sample_num
```sql
SELECT CampusFee 
FROM csu_fees 
WHERE Campus = 'San Jose State University' AND Year = 2000;
```
-------------------------2391 sample_num
```sql
SELECT CampusFee 
FROM csu_fees 
WHERE Campus = 'San Jose State University' AND Year = 2000;
```
-------------------------2392 sample_num
```sql
SELECT COUNT(*) FROM Campuses;
```
-------------------------2393 sample_num
```sql
SELECT COUNT(*) FROM Campuses;
```
-------------------------2394 sample_num
```sql
SELECT COUNT(*) FROM candidate
```
-------------------------2395 sample_num
```sql
SELECT COUNT(*) FROM candidate
```
-------------------------2396 sample_num
```sql
SELECT Poll_Source, COUNT(Candidate_ID) AS Num_Candidates
FROM candidate
GROUP BY Poll_Source
ORDER BY Num_Candidates DESC
LIMIT 1;
```
-------------------------2397 sample_num
```sql
SELECT Poll_Source, COUNT(Candidate_ID) AS Num_Candidates
FROM candidate
GROUP BY Poll_Source
ORDER BY Num_Candidates DESC
LIMIT 1;
```
-------------------------2398 sample_num
```sql
SELECT Candidate_ID, People_ID, Poll_Source, Date, Support_rate 
FROM candidate 
ORDER BY Support_rate DESC 
LIMIT 3;
```
-------------------------2399 sample_num
```sql
SELECT TOP 3 Support_rate
FROM candidate
ORDER BY Support_rate DESC;
```
Note: This query will only work in SQL servers that support the TOP clause (e.g., MS SQL Server). If you're using MySQL, use the LIMIT clause instead:
```sql
SELECT Support_rate
FROM candidate
ORDER BY Support_rate DESC
LIMIT 3;
```
-------------------------2400 sample_num
```sql
SELECT Candidate_ID FROM candidate WHERE Oppose_rate = (SELECT MIN(Oppose_rate) FROM candidate);
```
-------------------------2401 sample_num
```sql
SELECT Candidate_ID FROM candidate_poll.candidate WHERE Oppose_rate = (SELECT MIN(Oppose_rate) FROM candidate_poll.candidate);
```
-------------------------2402 sample_num
```sql
SELECT c.Candidate_ID, c.Support_rate, c.Consider_rate, c.Oppose_rate, c.Unsure_rate
FROM candidate_poll.candidate c
ORDER BY c.Unsure_rate ASC;
```
-------------------------2403 sample_num
```sql
SELECT c.Candidate_ID, c.Support_rate, c.Consider_rate, c.Oppose_rate 
FROM candidate AS c 
ORDER BY c.Unsure_rate ASC;
```
-------------------------2404 sample_num
```sql
SELECT Poll_Source FROM candidate WHERE Oppose_rate = (SELECT MAX(Oppose_rate) FROM candidate)
```
-------------------------2405 sample_num
```sql
SELECT T1.Poll_Source FROM candidate AS T1 WHERE T1.Oppose_rate > 0
```
-------------------------2406 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Date_of_Birth ASC;
```
-------------------------2407 sample_num
```sql
SELECT Name 
FROM people 
ORDER BY Date_of_Birth;
```
-------------------------2408 sample_num
```sql
SELECT AVG(Height), AVG(Weight) 
FROM people 
WHERE Sex = 'M';
```
-------------------------2409 sample_num
```sql
SELECT AVG(Height), AVG(Weight) 
FROM people 
WHERE Sex = 'M';
```
-------------------------2410 sample_num
```sql
SELECT Name 
FROM people 
WHERE Height > 200 OR Height < 190;
```
-------------------------2411 sample_num
```sql
SELECT Name 
FROM people 
WHERE Height > 200 OR Height < 190;
```
-------------------------2412 sample_num
```sql
SELECT AVG(Weight), MIN(Weight), Sex 
FROM people 
GROUP BY Sex;
```
-------------------------2413 sample_num
```sql
SELECT AVG(Weight), MIN(Weight), Sex 
FROM people 
GROUP BY Sex;
```
-------------------------2414 sample_num
```sql
SELECT p.Name, p.Sex 
FROM people p
JOIN candidate c ON p.People_ID = c.People_ID 
WHERE c.Support_rate = (SELECT MAX(Support_rate) FROM candidate);
```
-------------------------2415 sample_num
```sql
SELECT p.Name, p.Sex 
FROM people p
JOIN candidate c ON p.People_ID = c.People_ID 
WHERE c.Support_rate = (SELECT MAX(Support_rate) FROM candidate);
```
-------------------------2416 sample_num
```sql
SELECT p.Name, p.Sex, c.Oppose_rate
FROM people p
JOIN (
    SELECT People_ID, MIN(Oppose_rate) AS Min_Oppose
    FROM candidate
    GROUP BY People_ID
) cmin ON p.People_ID = cmin.People_ID
JOIN candidate c ON c.People_ID = p.People_ID AND c.Oppose_rate = cmin.Min_Oppose
WHERE (
    SELECT COUNT(*)
    FROM candidate c2
    WHERE c2.People_ID = p.People_ID AND c2.Oppose_rate < c.Oppose_rate
) = 0
AND (
    SELECT COUNT(*)
    FROM candidate c3
    WHERE c3.People_ID <> p.People_ID AND c3.Sex = p.Sex AND c3.Oppose_rate <= c.Oppose_rate
) = 0
GROUP BY p.Sex;
```
However, this query may not work as expected in some cases due to the complexity and possible ties in the oppose rate. A more efficient and correct approach would be to use window functions, but that was not requested.
-------------------------2417 sample_num
```sql
SELECT p.Name, p.Sex
FROM people p
JOIN (
  SELECT People_ID, MAX(Oppose_rate) as MaxOpposeRate
  FROM candidate
  WHERE Oppose_rate = (
    SELECT MAX(Oppose_rate)
    FROM candidate c2
    WHERE c2.Sex = candidate.Sex
  )
  GROUP BY Sex
) max_oppose
ON p.People_ID = max_oppose.People_ID;
```
Note: The provided solution assumes that the `Sex` column exists in the `candidate` table, which was not specified in the schema provided. If `Sex` is only available in the `people` table, additional joins might be necessary.
-------------------------2418 sample_num
```sql
SELECT p.Sex, AVG(c.Unsure_rate) as Average_Unsure_Ratio
FROM candidate c
JOIN people p ON c.People_ID = p.People_ID
GROUP BY p.Sex
ORDER BY Average_Unsure_Ratio DESC
LIMIT 1;
```
-------------------------2419 sample_num
```sql
SELECT p.Sex 
FROM people p
JOIN candidate c ON p.People_ID = c.People_ID
WHERE c.Unsure_rate = (SELECT MAX(Unsure_rate) FROM candidate);
```
-------------------------2420 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM candidate)
```
```
-------------------------2421 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM candidate)
```
-------------------------2422 sample_num
```sql
SELECT p.Name
FROM candidate c
JOIN people p ON c.People_ID = p.People_ID
WHERE c.Support_rate < c.Oppose_rate;
```
-------------------------2423 sample_num
```sql
SELECT p.Name
FROM candidate c
JOIN people p ON c.People_ID = p.People_ID
WHERE c.Support_rate < c.Oppose_rate;
```
-------------------------2424 sample_num
```sql
SELECT Sex, COUNT(*) 
FROM people 
WHERE Weight > 85 
GROUP BY Sex;
```
-------------------------2425 sample_num
```sql
SELECT Sex, COUNT(*) 
FROM people 
WHERE Weight > 85 
GROUP BY Sex;
```
-------------------------2426 sample_num
```sql
SELECT MAX(Support_rate) AS Highest_Support, MIN(Consider_rate) AS Lowest_Consider, MIN(Oppose_rate) AS Lowest_Oppose
FROM candidate_poll.candidate;
```
-------------------------2427 sample_num
```sql
SELECT MAX(Support_rate) AS Max_Support_Rate, MIN(Consider_rate) AS Min_Consider_Rate, MIN(Oppose_rate) AS Min_Oppose_Rate FROM candidate_poll.candidate;
```
-------------------------2428 sample_num
```sql
SELECT p.Name
FROM candidate c
JOIN people p ON c.People_ID = p.People_ID
WHERE p.Sex = 'F'
ORDER BY p.Name;
```
-------------------------2429 sample_num
```sql
SELECT p.Name
FROM people p
JOIN candidate c ON p.People_ID = c.People_ID
WHERE p.Sex = 'F'
ORDER BY p.Name ASC;
```
-------------------------2430 sample_num
```sql
SELECT Name 
FROM people 
WHERE Height < (SELECT AVG(Height) FROM people)
```
-------------------------2431 sample_num
```sql
SELECT Name 
FROM people 
WHERE Height < (SELECT AVG(Height) FROM people)
```
-------------------------2432 sample_num
```sql
SELECT * FROM people;
```
-------------------------2433 sample_num
```sql
SELECT * FROM people;
```
-------------------------2434 sample_num
```sql
SELECT title 
FROM Movie 
WHERE director = 'steven spielberg';
```
-------------------------2435 sample_num
```sql
SELECT title 
FROM Movie 
WHERE director = 'Steven Spielberg';
```
-------------------------2436 sample_num
```sql
SELECT title FROM Movie WHERE year > 2000 AND director = 'James Cameron';
```
-------------------------2437 sample_num
```sql
SELECT title 
FROM Movie 
WHERE director = 'James Cameron' AND year > 2000;
```
-------------------------2438 sample_num
```sql
SELECT COUNT(*) FROM Movie WHERE year < 2000;
```
-------------------------2439 sample_num
```sql
SELECT COUNT(*) FROM Movie WHERE year < 2000;
```
-------------------------2440 sample_num
```sql
SELECT director FROM Movie WHERE title = 'Avatar';
```
-------------------------2441 sample_num
```sql
SELECT director FROM Movie WHERE title = 'Avatar';
```
-------------------------2442 sample_num
```sql
SELECT COUNT(*) FROM Reviewer;
```
-------------------------2443 sample_num
```sql
SELECT COUNT(*) FROM Reviewer;
```
-------------------------2444 sample_num
```sql
SELECT rID FROM Reviewer WHERE name LIKE '%Mike%';
```
-------------------------2445 sample_num
```sql
SELECT rID FROM Reviewer WHERE name LIKE '%Mike%';
```
-------------------------2446 sample_num
```sql
SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis';
```
-------------------------2447 sample_num
```sql
SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis';
```
-------------------------2448 sample_num
```sql
SELECT COUNT(*) 
FROM Rating 
WHERE stars > 3;
```
-------------------------2449 sample_num
```sql
SELECT COUNT(*) 
FROM Rating 
WHERE stars > 3;
```
-------------------------2450 sample_num
```sql
SELECT MIN(stars) AS Lowest_Rating, MAX(stars) AS Highest_Rating FROM Rating;
```
-------------------------2451 sample_num
```sql
SELECT MAX(stars) AS Max_Stars, MIN(stars) AS Min_Stars FROM Rating;
```
-------------------------2452 sample_num
```sql
SELECT DISTINCT Movie.year
FROM Movie
JOIN Rating ON Movie.mID = Rating.mID
WHERE Rating.stars IN (4, 5)
ORDER BY Movie.year ASC;
```
-------------------------2453 sample_num
```sql
SELECT DISTINCT Movie.year
FROM Movie
JOIN Rating ON Movie.mID = Rating.mID
WHERE Rating.stars >= 4
ORDER BY Movie.year;
```
-------------------------2454 sample_num
```sql
SELECT Movie.director, Movie.title 
FROM Movie 
JOIN Rating ON Movie.mID = Rating.mID 
WHERE Rating.stars = 5;
```
-------------------------2455 sample_num
```sql
SELECT Movie.director, Movie.title 
FROM Movie 
JOIN Rating ON Movie.mID = Rating.mID 
WHERE Rating.stars = 5;
```
-------------------------2456 sample_num
```sql
SELECT r.name, AVG(ra.stars) 
FROM Rating ra 
JOIN Reviewer r ON ra.rID = r.rID 
GROUP BY r.name;
```
-------------------------2457 sample_num
```sql
SELECT Reviewer.rID, Reviewer.name, AVG(Rating.stars) 
FROM Reviewer 
JOIN Rating ON Reviewer.rID = Rating.rID 
GROUP BY Reviewer.rID, Reviewer.name;
```
-------------------------2458 sample_num
```sql
SELECT title 
FROM Movie 
WHERE mID NOT IN (SELECT mID FROM Rating)
```
-------------------------2459 sample_num
```sql
SELECT title 
FROM Movie 
WHERE mID NOT IN (SELECT mID FROM Rating)
```
-------------------------2460 sample_num
```sql
SELECT DISTINCT R.name 
FROM Reviewer R, Rating Ra 
WHERE R.rID = Ra.rID AND Ra.ratingDate IS NULL;
```
-------------------------2461 sample_num
```sql
SELECT DISTINCT name 
FROM Reviewer 
WHERE rID NOT IN (SELECT rID FROM Rating WHERE ratingDate IS NULL)
```
-------------------------2462 sample_num
```sql
SELECT AVG(Rating.stars), Movie.title 
FROM Rating 
JOIN Movie ON Rating.mID = Movie.mID 
WHERE Movie.year = (SELECT MIN(year) FROM Movie)
GROUP BY Movie.title;
```
-------------------------2463 sample_num
```sql
SELECT AVG(Rating.stars), Movie.title 
FROM Rating 
JOIN Movie ON Rating.mID = Movie.mID 
WHERE Movie.year = (SELECT MIN(year) FROM Movie)
GROUP BY Movie.title;
```
-------------------------2464 sample_num
```sql
SELECT title FROM Movie WHERE year = (SELECT MAX(year) FROM Movie);
```
-------------------------2465 sample_num
```sql
SELECT title FROM Movie WHERE year = (SELECT MAX(year) FROM Movie);
```
-------------------------2466 sample_num
```sql
SELECT MAX(Rating.stars), Movie.year 
FROM Rating 
JOIN Movie ON Rating.mID = Movie.mID 
WHERE Movie.year = (SELECT MAX(year) FROM Movie)
```
-------------------------2467 sample_num
```sql
SELECT MAX(T3.stars), T1.year 
FROM Movie AS T1 
JOIN Rating AS T3 ON T1.mID = T3.mID 
WHERE T1.year = (SELECT MAX(year) FROM Movie)
```
-------------------------2468 sample_num
```sql
SELECT title 
FROM Movie 
WHERE year > (SELECT MAX(year) FROM Movie WHERE director = 'Steven Spielberg')
```
-------------------------2469 sample_num
```sql
SELECT title 
FROM Movie 
WHERE year > (
    SELECT MAX(year) 
    FROM Movie 
    WHERE director = 'Steven Spielberg'
);
```
-------------------------2470 sample_num
```sql
SELECT T1.title, T1.director 
FROM Movie AS T1 
JOIN Rating AS T2 ON T1.mID = T2.mID 
WHERE T2.stars > (SELECT AVG(T3.stars) 
                  FROM Rating AS T3 
                  JOIN Movie AS T4 ON T3.mID = T4.mID 
                  WHERE T4.director = 'James Cameron')
```
-------------------------2471 sample_num
```sql
SELECT Movie.title, Movie.director 
FROM Movie 
JOIN Rating ON Movie.mID = Rating.mID 
WHERE Rating.stars > (
    SELECT AVG(Rating.stars) 
    FROM Rating 
    JOIN Movie ON Rating.mID = Movie.mID 
    WHERE Movie.director = 'James Cameron'
)
```
-------------------------2472 sample_num
```sql
SELECT R.name, M.title, Ra.stars, Ra.ratingDate 
FROM Rating AS Ra 
JOIN Movie AS M ON Ra.mID = M.mID 
JOIN Reviewer AS R ON Ra.rID = R.rID 
ORDER BY R.name, M.title, Ra.stars;
```
-------------------------2473 sample_num
```sql
SELECT R.name, M.title, Ra.stars, Ra.ratingDate 
FROM Rating AS Ra 
JOIN Movie AS M ON Ra.mID = M.mID 
JOIN Reviewer AS R ON Ra.rID = R.rID 
ORDER BY R.name, M.title, Ra.stars, Ra.ratingDate;
```
-------------------------2474 sample_num
```sql
SELECT R.name
FROM Reviewer R
JOIN Rating Ra ON R.rID = Ra.rID
GROUP BY R.name
HAVING COUNT(Ra.rID) >= 3;
```
-------------------------2475 sample_num
```sql
SELECT R.name
FROM Reviewer R
JOIN Rating Ra ON R.rID = Ra.rID
GROUP BY R.name
HAVING COUNT(Ra.mID) >= 3;
```
-------------------------2476 sample_num
```sql
SELECT DISTINCT R.name 
FROM Reviewer R, Rating Ra, Movie M 
WHERE M.title = 'Gone with the Wind' AND M.mID = Ra.mID AND R.rID = Ra.rID;
```
-------------------------2477 sample_num
```sql
SELECT DISTINCT R.name 
FROM Reviewer R, Rating Ra, Movie M 
WHERE M.title = 'Gone with the Wind' AND M.mID = Ra.mID AND R.rID = Ra.rID;
```
-------------------------2478 sample_num
```sql
SELECT DISTINCT M.director
FROM Movie M, Rating R, Reviewer Rev
WHERE M.mID = R.mID AND Rev.rID = R.rID AND Rev.name = 'Sarah Martinez';
```
-------------------------2479 sample_num
```sql
SELECT DISTINCT M.director
FROM Movie M
JOIN Rating R ON M.mID = R.mID
JOIN Reviewer Re ON R.rID = Re.rID
WHERE Re.name = 'Sarah Martinez';
```
-------------------------2480 sample_num
```sql
SELECT R.name, M.title, Ra.stars 
FROM Rating AS Ra 
JOIN Movie AS M ON Ra.mID = M.mID 
JOIN Reviewer AS R ON Ra.rID = R.rID 
WHERE M.director = R.name;
```
-------------------------2481 sample_num
```sql
SELECT DISTINCT R.name, M.title, Ra.stars 
FROM Rating AS Ra 
JOIN Reviewer AS R ON Ra.rID = R.rID 
JOIN Movie AS M ON Ra.mID = M.mID 
WHERE R.name = M.director;
```
-------------------------2482 sample_num
```sql
SELECT Reviewer.name, Movie.title 
FROM Reviewer 
CROSS JOIN Movie;
```
Please note that this will return a Cartesian product of all reviewers and movies, which might not be the expected result. If you want to return only the pairs where a review exists, you should use an INNER JOIN with the Rating table. However, based on your question, I provided the direct answer without additional assumptions or explanations.
-------------------------2483 sample_num
```sql
SELECT Reviewer.name, Movie.title 
FROM Reviewer, Movie;
``` 

However, this assumes that each reviewer has reviewed each movie, which is unlikely. If you want to see the combinations of reviewers and movies for which there is a review, you would use:

```sql
SELECT DISTINCT Reviewer.name, Movie.title 
FROM Reviewer 
JOIN Rating ON Reviewer.rID = Rating.rID 
JOIN Movie ON Rating.mID = Movie.mID;
```
-------------------------2484 sample_num
```sql
SELECT Movie.title 
FROM Movie 
WHERE Movie.mID NOT IN (
    SELECT Rating.mID 
    FROM Rating, Reviewer 
    WHERE Rating.rID = Reviewer.rID AND Reviewer.name = 'Chris Jackson'
);
```
-------------------------2485 sample_num
```sql
SELECT Movie.title 
FROM Movie 
WHERE Movie.mID NOT IN (
    SELECT Rating.mID 
    FROM Rating, Reviewer 
    WHERE Rating.rID = Reviewer.rID AND Reviewer.name = 'Chris Jackson'
);
```
-------------------------2486 sample_num
```sql
SELECT M.title, M.director
FROM Movie M
WHERE M.director IN (
    SELECT director
    FROM Movie
    GROUP BY director
    HAVING COUNT(mID) > 1
)
ORDER BY M.director, M.title;
```
-------------------------2487 sample_num
```sql
SELECT M1.director, M1.title 
FROM Movie M1 
JOIN (
    SELECT director 
    FROM Movie 
    GROUP BY director 
    HAVING COUNT(mID) > 1
) AS M2 
ON M1.director = M2.director;
```
-------------------------2488 sample_num
```sql
SELECT T1.title, T1.year 
FROM Movie AS T1 
JOIN (
  SELECT director 
  FROM Movie 
  GROUP BY director 
  HAVING COUNT(mID) > 1
) AS T2 
ON T1.director = T2.director;
```
-------------------------2489 sample_num
```sql
SELECT M1.title, M1.year 
FROM Movie AS M1 
JOIN (
  SELECT director 
  FROM Movie 
  GROUP BY director 
  HAVING COUNT(mID) > 1
) AS D 
ON M1.director = D.director;
```
-------------------------2490 sample_num
```sql
SELECT director 
FROM Movie 
GROUP BY director 
HAVING COUNT(*) = 1;
```
-------------------------2491 sample_num
```sql
SELECT director 
FROM Movie 
GROUP BY director 
HAVING COUNT(mID) = 1;
```
-------------------------2492 sample_num
```sql
SELECT director 
FROM Movie 
WHERE director IS NOT NULL 
GROUP BY director 
HAVING COUNT(mID) = 1;
```
-------------------------2493 sample_num
```sql
SELECT director 
FROM Movie 
WHERE director IS NOT NULL 
GROUP BY director 
HAVING COUNT(mID) = 1;
```
-------------------------2494 sample_num
```sql
SELECT M.director, COUNT(R.rID) AS NumReviews
FROM Movie M
LEFT JOIN Rating R ON M.mID = R.mID
GROUP BY M.director;
```
-------------------------2495 sample_num
```sql
SELECT Movie.director, COUNT(Rating.rID) AS NumberOfReviews
FROM Movie
JOIN Rating ON Movie.mID = Rating.mID
GROUP BY Movie.director;
```
-------------------------2496 sample_num
```sql
SELECT T1.title, AVG(T3.stars) AS avg_rating
FROM Movie AS T1 
JOIN Rating AS T3 ON T1.mID = T3.mID 
GROUP BY T1.mID 
ORDER BY avg_rating DESC 
LIMIT 1;
```
-------------------------2497 sample_num
```sql
SELECT T1.title, AVG(T3.stars) as avg_rating 
FROM Movie AS T1 
JOIN Rating AS T3 ON T1.mID = T3.mID 
GROUP BY T1.title 
ORDER BY avg_rating DESC 
LIMIT 1;
```
-------------------------2498 sample_num
```sql
SELECT Movie.title, AVG(Rating.stars) as average_rating 
FROM Movie 
JOIN Rating ON Movie.mID = Rating.mID 
GROUP BY Movie.title 
ORDER BY average_rating ASC 
LIMIT 1;
```
-------------------------2499 sample_num
```sql
SELECT Movie.title, AVG(Rating.stars) as average_rating
FROM Movie
JOIN Rating ON Movie.mID = Rating.mID
GROUP BY Movie.title
HAVING AVG(Rating.stars) = (
    SELECT MIN(avg_stars)
    FROM (
        SELECT AVG(Rating.stars) as avg_stars
        FROM Rating
        GROUP BY Rating.mID
    ) AS subquery
);
```
-------------------------2500 sample_num
```sql
SELECT M.title, M.year 
FROM Movie M 
JOIN Rating R ON M.mID = R.mID 
GROUP BY M.mID 
ORDER BY AVG(R.stars) DESC 
LIMIT 3;
```
-------------------------2501 sample_num
```sql
SELECT M.title, M.year 
FROM Movie M 
JOIN Rating R ON M.mID = R.mID 
ORDER BY R.stars DESC 
LIMIT 3;
```
-------------------------2502 sample_num
```sql
SELECT D.name AS Director, M.title AS Movie_Title, MAX(R.stars) AS Highest_Rating
FROM Rating R
JOIN Movie M ON R.mID = M.mID
JOIN (
    SELECT mID, director
    FROM Movie
    WHERE director IS NOT NULL
    GROUP BY director
) AS MD ON M.mID = MD.mID
JOIN Reviewer D ON R.rID = D.rID
WHERE M.director = MD.director
GROUP BY MD.director
ORDER BY Highest_Rating DESC;
```
```
-------------------------2503 sample_num
```sql
SELECT D.director, M.title, R.stars
FROM (
    SELECT director AS director, mID AS mid
    FROM Movie
    ) D
JOIN Movie M ON D.mid = M.mID
JOIN Rating R ON M.mID = R.mID
ORDER BY D.director;
``` 
Note: This query will not give you a grouping but a list of all movies titles and their ratings for each director, if you want to get the average rating per director you would need to use GROUP BY.
```sql
SELECT D.director, M.title, AVG(R.stars) as avg_rating
FROM (
    SELECT director AS director, mID AS mid
    FROM Movie
    ) D
JOIN Movie M ON D.mid = M.mID
JOIN Rating R ON M.mID = R.mID
GROUP BY D.director, M.title
ORDER BY D.director;
```
But this will give you an average rating per movie, if you want an average rating per director you would need to group by director only.
```sql
SELECT D.director, AVG(R.stars) as avg_rating
FROM (
    SELECT director AS director, mID AS mid
    FROM Movie
    ) D
JOIN Movie M ON D.mid = M.mID
JOIN Rating R ON M.mID = R.mID
GROUP BY D.director
ORDER BY D.director;
```
-------------------------2504 sample_num
```sql
SELECT R.name, M.title, MIN(Ra.stars)
FROM Reviewer R
JOIN Rating Ra ON R.rID = Ra.rID
JOIN Movie M ON M.mID = Ra.mID
GROUP BY R.name, M.title
HAVING Ra.stars = (
    SELECT MIN(stars)
    FROM Rating
    WHERE rID = R.rID
);
```
-------------------------2505 sample_num
```sql
SELECT R.rID, M.title, MIN(RT.stars) 
FROM Rating RT 
JOIN Movie M ON RT.mID = M.mID 
JOIN Reviewer R ON RT.rID = R.rID 
GROUP BY R.rID, M.title
ORDER BY MIN(RT.stars) ASC;
```
Note: This query does not exactly answer the question as there could be multiple movies with the same smallest rating for a reviewer. A more accurate (but complex) query would involve subqueries or window functions.
A better solution might be:
```sql
SELECT R.name, M.title, RT.stars
FROM Rating RT
JOIN Movie M ON RT.mID = M.mID
JOIN Reviewer R ON RT.rID = R.rID
WHERE RT.stars = (
    SELECT MIN(stars)
    FROM Rating
    WHERE rID = RT.rID
);
```
-------------------------2506 sample_num
```sql
SELECT M.title, R.stars
FROM (
    SELECT director, MIN(R.stars) AS min_stars
    FROM Movie M
    JOIN Rating R ON M.mID = R.mID
    GROUP BY director
) AS MinStars
JOIN Movie M ON MinStars.director = M.director
JOIN Rating R ON M.mID = R.mID
WHERE R.stars = MinStars.min_stars;
```
-------------------------2507 sample_num
```sql
SELECT M1.director, M1.title, MIN(R1.stars) 
FROM Movie AS M1 
JOIN Rating AS R1 ON M1.mID = R1.mID 
GROUP BY M1.director, M1.title 
ORDER BY M1.director, MIN(R1.stars) ASC;
```
Note: This query doesn't exactly answer the question as it orders the movies by the lowest rating per director but doesn't ensure that only one movie per director is shown. A window function or subquery might be needed depending on your SQL version to get the one movie with the worst rating per director. Here's an example using a subquery:

```sql
SELECT M.director, M.title, R.stars
FROM (
    SELECT director, MIN(stars) as min_stars
    FROM (
        SELECT M.director, M.title, R.stars
        FROM Movie M
        JOIN Rating R ON M.mID = R.mID
    ) t
    GROUP BY director
) t2
JOIN Movie M ON M.director = t2.director
JOIN Rating R ON R.mID = M.mID AND R.stars = t2.min_stars;
```
-------------------------2508 sample_num
```sql
SELECT title 
FROM Movie 
WHERE mID IN (
    SELECT mID 
    FROM Rating 
    GROUP BY mID 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
```
-------------------------2509 sample_num
```sql
SELECT T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------2510 sample_num
```sql
SELECT Movie.title 
FROM Movie 
JOIN Rating ON Movie.mID = Rating.mID 
WHERE Rating.stars BETWEEN 3 AND 5;
```
-------------------------2511 sample_num
```sql
SELECT Movie.title 
FROM Movie 
JOIN Rating ON Movie.mID = Rating.mID 
WHERE Rating.stars BETWEEN 3 AND 5;
```
-------------------------2512 sample_num
```sql
SELECT DISTINCT R.name 
FROM Reviewer R, Rating Ra 
WHERE R.rID = Ra.rID AND Ra.stars > 3;
```
-------------------------2513 sample_num
```sql
SELECT DISTINCT R.name 
FROM Reviewer R, Rating Ra 
WHERE R.rID = Ra.rID AND Ra.stars > 3;
```
-------------------------2514 sample_num
```sql
SELECT Movie.title, AVG(Rating.stars) as average_rating
FROM Movie
JOIN Rating ON Movie.mID = Rating.mID
WHERE Rating.rID NOT IN (
    SELECT Reviewer.rID
    FROM Reviewer
    WHERE Reviewer.name = 'Brittany Harris'
)
GROUP BY Movie.title;
```
-------------------------2515 sample_num
```sql
SELECT Movie.mID, title, AVG(stars) as avg_rating 
FROM Movie 
LEFT JOIN Rating ON Movie.mID = Rating.mID 
WHERE Movie.mID NOT IN (
    SELECT mID 
    FROM Rating 
    INNER JOIN Reviewer ON Rating.rID = Reviewer.rID 
    WHERE name = 'Brittany Harris'
)
GROUP BY Movie.mID, title;
```
-------------------------2516 sample_num
```sql
SELECT mID 
FROM Movie 
WHERE mID NOT IN (
    SELECT T1.mID 
    FROM Rating AS T1 
    JOIN Reviewer AS T2 
    ON T1.rID = T2.rID 
    WHERE T2.name = 'Brittany Harris'
)
```
-------------------------2517 sample_num
```sql
SELECT m.mID 
FROM Movie m 
LEFT JOIN Rating r ON m.mID = r.mID 
LEFT JOIN Reviewer rv ON r.rID = rv.rID 
WHERE rv.name != 'Brittany Harris' OR rv.name IS NULL
GROUP BY m.mID;
```
-------------------------2518 sample_num
```sql
SELECT m.title, AVG(r.stars) as average_rating
FROM Movie m
JOIN Rating r ON m.mID = r.mID
GROUP BY m.mID
HAVING COUNT(r.rID) >= 2;
```
-------------------------2519 sample_num
```sql
SELECT Movie.mID, title, AVG(Rating.stars) as average_rating
FROM Movie
JOIN Rating ON Movie.mID = Rating.mID
GROUP BY Movie.mID, title
HAVING COUNT(Rating.rID) > 3;
```
-------------------------2520 sample_num
```sql
SELECT rID FROM Reviewer WHERE rID NOT IN (SELECT rID FROM Rating WHERE stars = 4)
```
-------------------------2521 sample_num
```sql
SELECT rID FROM Reviewer WHERE rID NOT IN (SELECT rID FROM Rating WHERE stars = 4)
```
-------------------------2522 sample_num
```sql
SELECT rID 
FROM Rating 
WHERE stars != 4 
GROUP BY rID;
```
However, this query may not completely satisfy the question since a reviewer who gave 4 stars to one movie can still be in the result if they also gave a non-4 star to another movie. A more accurate query would be:
```sql
SELECT r.rID 
FROM Reviewer r
WHERE NOT EXISTS (
  SELECT 1 
  FROM Rating ra
  WHERE r.rID = ra.rID AND ra.stars = 4
) OR EXISTS (
  SELECT 1 
  FROM Rating rb 
  WHERE r.rID = rb.rID AND rb.stars != 4
);
```
-------------------------2523 sample_num
```sql
SELECT rID FROM Reviewer 
WHERE rID NOT IN (SELECT rID FROM Rating WHERE stars = 4)
```
-------------------------2524 sample_num
```sql
SELECT Movie.title 
FROM Movie 
WHERE Movie.year > 2000 
UNION 
SELECT Movie.title 
FROM Movie, Rating, Reviewer 
WHERE Movie.mID = Rating.mID AND Rating.rID = Reviewer.rID AND Reviewer.name = 'Brittany Harris';
```
-------------------------2525 sample_num
```sql
SELECT Movie.title 
FROM Movie 
WHERE Movie.year > 2000 
UNION 
SELECT Movie.title 
FROM Movie, Rating, Reviewer 
WHERE Rating.mID = Movie.mID AND Rating.rID = Reviewer.rID AND Reviewer.name = 'Brittany Harris';
```
-------------------------2526 sample_num
```sql
SELECT title FROM Movie WHERE year < 1980 OR director = 'James Cameron';
```
-------------------------2527 sample_num
```sql
SELECT title FROM Movie WHERE year < 1980 OR director = 'James Cameron';
```
-------------------------2528 sample_num
```sql
SELECT DISTINCT R.name 
FROM Reviewer R 
JOIN Rating Ra ON R.rID = Ra.rID 
WHERE Ra.stars IN (3, 4);
```
-------------------------2529 sample_num
```sql
SELECT DISTINCT R.name 
FROM Reviewer R, Rating Ra 
WHERE R.rID = Ra.rID AND Ra.stars IN (3, 4);
```
-------------------------2530 sample_num
```sql
SELECT T1.title 
FROM Movie AS T1 
JOIN Rating AS T2 ON T1.mID = T2.mID 
WHERE T2.stars IN (3,4)
GROUP BY T1.title;
```
-------------------------2531 sample_num
```sql
SELECT Movie.title 
FROM Movie 
JOIN Rating ON Movie.mID = Rating.mID 
WHERE Rating.stars IN (3, 4)
```
-------------------------2532 sample_num
```sql
SELECT COUNT(*) FROM county_public_safety;
```
-------------------------2533 sample_num
```sql
SELECT COUNT(DISTINCT Name) FROM county_public_safety;
```
-------------------------2534 sample_num
```sql
SELECT Name 
FROM county_public_safety 
ORDER BY Population DESC;
```
-------------------------2535 sample_num
```sql
SELECT Name 
FROM county_public_safety 
ORDER BY Population DESC;
```
-------------------------2536 sample_num
```sql
SELECT DISTINCT Police_force 
FROM county_public_safety 
WHERE Location != 'East Side'
```
-------------------------2537 sample_num
```sql
SELECT DISTINCT Police_force 
FROM county_public_safety 
WHERE Location != 'East';
```
-------------------------2538 sample_num
```sql
SELECT MIN(Crime_rate) AS Min_Crime_Rate, MAX(Crime_rate) AS Max_Crime_Rate FROM county_public_safety;
```
-------------------------2539 sample_num
```sql
SELECT MIN(Crime_rate) AS Min_Crime_Rate, MAX(Crime_rate) AS Max_Crime_Rate FROM county_public_safety;
```
-------------------------2540 sample_num
```sql
SELECT Crime_rate 
FROM county_public_safety 
ORDER BY Police_officers ASC;
```
-------------------------2541 sample_num
```sql
SELECT Crime_rate 
FROM county_public_safety 
ORDER BY Police_officers ASC;
```
```
-------------------------2542 sample_num
```sql
SELECT Name 
FROM city 
ORDER BY Name ASC;
```
-------------------------2543 sample_num
```sql
SELECT Name 
FROM city 
ORDER BY Name;
```
-------------------------2544 sample_num
```sql
SELECT Hispanic / 100 AS Percentage_Hispanics
FROM city
WHERE Black > 10;
```
However, this would only return the raw percentage value for Hispanic populations in cities where the Black population percentage is greater than 10. To get the answer in a more readable format (as percentages and for specific cities), you might want to use:

```sql
SELECT Name, (Hispanic / 100 * 100) AS Percentage_Hispanics
FROM city
WHERE Black > 10;
```
-------------------------2545 sample_num
```sql
SELECT City_ID, Hispanic 
FROM city 
WHERE Black > 10;
```
However, to return the Hispanic percentage specifically from cities where the Black percentage is greater than 10, and considering that percentages are likely not stored as such but rather calculated based on population data, the query might look more like this:

```sql
SELECT City_ID, (Hispanic/Population)*100 AS Hispanic_Percentage 
FROM city 
WHERE (Black/Population)*100 > 10;
```

Note: The above assumes that there's a `Population` column in the `city` table, which wasn't listed in your schema, so you may need to adjust for how population is represented or calculated in your actual database schema.
-------------------------2546 sample_num
```sql
SELECT Name 
FROM county_public_safety 
ORDER BY Population DESC 
LIMIT 1;
```
-------------------------2547 sample_num
```sql
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1;
```
-------------------------2548 sample_num
```sql
SELECT Name 
FROM city 
ORDER BY White DESC 
LIMIT 5;
```
-------------------------2549 sample_num
```sql
SELECT Name 
FROM city 
ORDER BY White DESC 
LIMIT 5;
```
-------------------------2550 sample_num
```sql
SELECT city.Name AS City_Name, county_public_safety.Name AS County_Name 
FROM city 
JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID;
```
-------------------------2551 sample_num
```sql
SELECT city.Name AS City_Name, county_public_safety.Name AS County_Name 
FROM city 
JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID;
```
-------------------------2552 sample_num
```sql
SELECT city.White, county_public_safety.Crime_rate 
FROM city 
INNER JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID;
```
-------------------------2553 sample_num
```sql
SELECT city.White, county_public_safety.Crime_rate 
FROM city 
JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID;
```
-------------------------2554 sample_num
```sql
SELECT T2.Name 
FROM county_public_safety AS T1 
JOIN city AS T2 ON T1.County_ID = T2.County_ID 
WHERE T1.Police_officers = (SELECT MAX(Police_officers) FROM county_public_safety)
```
-------------------------2555 sample_num
```sql
SELECT T2.Name FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T1.Police_officers = (SELECT MAX(Police_officers) FROM county_public_safety)
```
-------------------------2556 sample_num
```sql
SELECT COUNT(*) 
FROM city 
WHERE County_ID IN (SELECT County_ID FROM county_public_safety WHERE Population > 20000);
```
-------------------------2557 sample_num
```sql
SELECT COUNT(*) 
FROM city 
WHERE County_ID IN (SELECT County_ID 
					FROM county_public_safety 
					WHERE Population > 20000)
```
-------------------------2558 sample_num
```sql
SELECT cps.Crime_rate 
FROM county_public_safety cps
JOIN city c ON cps.County_ID = c.County_ID
WHERE c.White > 90;
```
-------------------------2559 sample_num
```sql
SELECT cps.Crime_rate 
FROM county_public_safety cps
JOIN city c ON cps.County_ID = c.County_ID
WHERE c.White > 90;
```
-------------------------2560 sample_num
```sql
SELECT Police_force, COUNT(County_ID) 
FROM county_public_safety 
GROUP BY Police_force;
```
-------------------------2561 sample_num
```sql
SELECT Police_force, COUNT(County_ID) 
FROM county_public_safety 
GROUP BY Police_force;
```
-------------------------2562 sample_num
```sql
SELECT Location, COUNT(*) AS County_Count
FROM county_public_safety
GROUP BY Location
ORDER BY County_Count DESC
LIMIT 1;
```
-------------------------2563 sample_num
```sql
SELECT Location, COUNT(*) AS County_Count
FROM county_public_safety
GROUP BY Location
ORDER BY County_Count DESC
LIMIT 1;
```
-------------------------2564 sample_num
```sql
SELECT Name 
FROM county_public_safety 
WHERE County_ID NOT IN (SELECT County_ID FROM city)
```
-------------------------2565 sample_num
```sql
SELECT Name 
FROM county_public_safety 
WHERE County_ID NOT IN (SELECT County_ID FROM city)
```
-------------------------2566 sample_num
```sql
SELECT Police_force FROM county_public_safety WHERE Location = 'East' OR Location = 'West';
```
-------------------------2567 sample_num
```sql
SELECT pf.Name 
FROM county_public_safety cps1 
JOIN county_public_safety cps2 ON cps1.Police_force = cps2.Police_force 
WHERE cps1.Location = 'East' AND cps2.Location = 'West'
GROUP BY cps1.Police_force
HAVING COUNT(*) > 1
```
Note: This query assumes that the `Police_force` column contains the name of the police force operating in each county. The query joins the `county_public_safety` table with itself on the `Police_force` column, then filters for counties located in both the East and West regions. It groups the results by police force and uses the `HAVING` clause to only return police forces that operate in more than one county (i.e., in both the East and West)
-------------------------2568 sample_num
```sql
SELECT city.Name 
FROM city 
JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID 
WHERE county_public_safety.Crime_rate < 100;
```
-------------------------2569 sample_num
```sql
SELECT T2.Name 
FROM county_public_safety AS T1 
JOIN city AS T2 ON T1.County_ID = T2.County_ID 
WHERE T1.Crime_rate < 100;
```
-------------------------2570 sample_num
```sql
SELECT County_ID, Name, Case_burden 
FROM county_public_safety 
ORDER BY Population DESC;
```
-------------------------2571 sample_num
```sql
SELECT County_ID, Case_burden 
FROM county_public_safety 
ORDER BY Population DESC;
```
-------------------------2572 sample_num
```sql
SELECT roomName FROM Rooms WHERE decor = 'modern' AND basePrice < 160 AND beds = 2;
```
-------------------------2573 sample_num
```sql
SELECT roomName FROM Rooms WHERE decor = 'modern' AND basePrice < 160 AND beds = 2;
```
-------------------------2574 sample_num
```sql
SELECT RoomId, roomName 
FROM Rooms 
WHERE basePrice > 160 AND maxOccupancy > 2;
```
-------------------------2575 sample_num
```sql
SELECT RoomId, roomName 
FROM Rooms 
WHERE basePrice > 160 AND maxOccupancy > 2;
```
-------------------------2576 sample_num
```sql
SELECT R.RoomId, R.roomName, COUNT(*) AS NumberOfReservations
FROM Rooms R
JOIN Reservations Res ON R.RoomId = Res.Room
GROUP BY R.RoomId, R.roomName
ORDER BY NumberOfReservations DESC
LIMIT 1;
```
-------------------------2577 sample_num
```sql
SELECT R.RoomId, R.roomName, COUNT(*) AS NumberOfReservations
FROM Rooms R
JOIN Reservations Res
ON R.RoomId = Res.Room
GROUP BY R.RoomId, R.roomName
ORDER BY NumberOfReservations DESC
LIMIT 1;
```
-------------------------2578 sample_num
```sql
SELECT SUM(Kids) 
FROM Reservations 
WHERE FirstName = 'ROY' AND LastName = 'SWEAZY';
```
-------------------------2579 sample_num
```sql
SELECT SUM(Kids) 
FROM Reservations 
WHERE FirstName = 'ROY' AND LastName = 'SWEAZ';
```
-------------------------2580 sample_num
```sql
SELECT COUNT(*) 
FROM Reservations 
WHERE FirstName = 'ROY' AND LastName = 'SWEAZY';
```
-------------------------2581 sample_num
```sql
SELECT COUNT(*) 
FROM Reservations 
WHERE FirstName = 'ROY' AND LastName = 'SWEAZY';
```
-------------------------2582 sample_num
```sql
SELECT R.roomName, Res.Rate, Res.CheckIn, Res.CheckOut 
FROM Reservations AS Res 
JOIN Rooms AS R ON Res.Room = R.RoomId 
WHERE Res.Rate = (SELECT MAX(Rate) FROM Reservations);
```
-------------------------2583 sample_num
```sql
SELECT R.FirstName, R.LastName, Reservations.Rate, Reservations.CheckIn, Reservations.CheckOut 
FROM Reservations 
JOIN Rooms AS R ON Reservations.Room = R.RoomId 
WHERE Reservations.Rate = (SELECT MAX(Rate) FROM Reservations);
```
```
-------------------------2584 sample_num
```sql
SELECT Adults FROM Reservations WHERE FirstName = 'CONRAD' AND LastName = 'SELBIG' AND CheckIn = '2010-10-23';
```
-------------------------2585 sample_num
```sql
SELECT Adults 
FROM Reservations 
WHERE FirstName = 'CONRAD' 
AND LastName = 'SELBIG' 
AND CheckIn = '2010-10-23';
```
-------------------------2586 sample_num
```sql
SELECT Kids FROM Reservations WHERE FirstName = 'DAMIAEN' AND LastName = 'TRACHSEL' AND CheckIn = '2010-09-21';
```
-------------------------2587 sample_num
```sql
SELECT Kids FROM Reservations WHERE CheckIn = '2010-09-21' AND FirstName = 'DAMIE'N' AND LastName = 'TRACHSEL';
``` 
Note: There is a small issue with the query due to the single quote in the first name 'DAMIE'N'. You might need to escape it with another single quote or use a double quote based on your SQL dialect.

A corrected version could look like this:

```sql
SELECT Kids FROM Reservations WHERE CheckIn = '2010-09-21' AND FirstName = 'DAMIE''N' AND LastName = 'TRACHSEL';
```
-------------------------2588 sample_num
```sql
SELECT COUNT(*) 
FROM Rooms 
WHERE bedType = 'King';
```
-------------------------2589 sample_num
```sql
SELECT SUM(beds) AS TotalKingBeds 
FROM Rooms 
WHERE bedType = 'King';
```
-------------------------2590 sample_num
```sql
SELECT roomName, decor 
FROM Rooms 
WHERE bedType = 'King' 
ORDER BY basePrice;
```
-------------------------2591 sample_num
```sql
SELECT roomName, decor 
FROM Rooms 
WHERE bedType = 'King' 
ORDER BY basePrice;
```
-------------------------2592 sample_num
```sql
SELECT roomName, basePrice 
FROM Rooms 
ORDER BY basePrice ASC 
LIMIT 1;
```
-------------------------2593 sample_num
```sql
SELECT roomName, basePrice 
FROM Rooms 
ORDER BY basePrice 
LIMIT 1;
```
-------------------------2594 sample_num
```sql
SELECT decor 
FROM Rooms 
WHERE roomName = 'Recluse and defiance';
```
-------------------------2595 sample_num
```sql
SELECT decor 
FROM Rooms 
WHERE roomName = 'Recluse and defiance';
```
-------------------------2596 sample_num
```sql
SELECT bedType, AVG(basePrice) 
FROM Rooms 
GROUP BY bedType;
```
-------------------------2597 sample_num
```sql
SELECT bedType, AVG(basePrice) 
FROM Rooms 
GROUP BY bedType;
```
-------------------------2598 sample_num
```sql
SELECT SUM(maxOccupancy) 
FROM Rooms 
WHERE decor = 'modern';
```
-------------------------2599 sample_num
```sql
SELECT SUM(maxOccupancy) 
FROM Rooms 
WHERE decor = 'modern';
```
-------------------------2600 sample_num
```sql
SELECT R.decor
FROM Rooms R
JOIN Reservations Res ON R.RoomId = Res.Room
GROUP BY R.decor
ORDER BY COUNT(*) ASC
LIMIT 1;
```
-------------------------2601 sample_num
```sql
SELECT decor 
FROM Rooms 
WHERE RoomId NOT IN (
    SELECT Room 
    FROM Reservations 
    GROUP BY Room 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
) 
LIMIT 1;
```
Note: This query may not give the correct result if there are rooms with the same decor that have never been reserved. For an accurate result, more complex queries are required to consider all possibilities.
-------------------------2602 sample_num
```sql
SELECT COUNT(*) 
FROM Reservations R, Rooms M 
WHERE R.Room = M.RoomId AND (R.Adults + R.Kids) = M.maxOccupancy;
```
-------------------------2603 sample_num
```sql
SELECT COUNT(*) 
FROM Reservations R, Rooms M 
WHERE R.Room = M.RoomId AND R.Adults + R.Kids >= M.maxOccupancy;
```
-------------------------2604 sample_num
```sql
SELECT FirstName, LastName 
FROM Reservations 
JOIN Rooms ON Reservations.Room = Rooms.RoomId 
WHERE Rate > BasePrice;
```
-------------------------2605 sample_num
```sql
SELECT FirstName, LastName 
FROM Reservations 
JOIN Rooms 
ON Reservations.Room = Rooms.RoomId 
WHERE Rate > BasePrice;
```
-------------------------2606 sample_num
```sql
SELECT COUNT(*) FROM Rooms;
```
-------------------------2607 sample_num
```sql
SELECT COUNT(*) FROM Rooms;
```
-------------------------2608 sample_num
```sql
SELECT COUNT(*) 
FROM Rooms 
WHERE bedType = 'King';
```
-------------------------2609 sample_num
```sql
SELECT COUNT(*) 
FROM Rooms 
WHERE bedType = 'King';
```
-------------------------2610 sample_num
```sql
SELECT bedType, COUNT(*) as NumOfRooms
FROM Rooms
GROUP BY bedType;
```
-------------------------2611 sample_num
```sql
SELECT bedType, COUNT(*) as NumOfRooms
FROM Rooms
GROUP BY bedType;
```
-------------------------2612 sample_num
```sql
SELECT roomName FROM Rooms WHERE maxOccupancy = (SELECT MAX(maxOccupancy) FROM Rooms);
```
-------------------------2613 sample_num
```sql
SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;
```
-------------------------2614 sample_num
```sql
SELECT RoomId, roomName 
FROM Rooms 
ORDER BY basePrice DESC 
LIMIT 1;
```
-------------------------2615 sample_num
```sql
SELECT roomName FROM Rooms WHERE basePrice = (SELECT MAX(basePrice) FROM Rooms);
```
-------------------------2616 sample_num
```sql
SELECT bedType, roomName 
FROM Rooms 
WHERE decor = 'traditional';
```
-------------------------2617 sample_num
```sql
SELECT roomName, bedType 
FROM Rooms 
WHERE decor = 'traditional';
```
-------------------------2618 sample_num
```sql
SELECT decor, COUNT(*) AS NumberOfRooms 
FROM Rooms 
WHERE bedType = 'King' 
GROUP BY decor;
```
-------------------------2619 sample_num
```sql
SELECT decor, COUNT(*) AS NumberOfRooms 
FROM Rooms 
WHERE bedType = 'King' 
GROUP BY decor;
```
-------------------------2620 sample_num
```sql
SELECT decor, AVG(basePrice) AS Average_Price, MIN(basePrice) AS Minimum_Price
FROM Rooms
GROUP BY decor;
```
-------------------------2621 sample_num
```sql
SELECT decor, AVG(basePrice) AS Average_Price
FROM Rooms
GROUP BY decor;
```
-------------------------2622 sample_num
```sql
SELECT roomName 
FROM Rooms 
ORDER BY basePrice;
```
-------------------------2623 sample_num
```sql
SELECT roomName 
FROM Rooms 
ORDER BY basePrice;
```
-------------------------2624 sample_num
```sql
SELECT decor, COUNT(*) as NumberOfRooms
FROM Rooms
WHERE basePrice > 120
GROUP BY decor;
```
-------------------------2625 sample_num
```sql
SELECT decor, COUNT(*) as NumberOfRooms
FROM Rooms
WHERE basePrice > 120
GROUP BY decor;
```
-------------------------2626 sample_num
```sql
SELECT bedType, AVG(basePrice) 
FROM Rooms 
GROUP BY bedType;
```
-------------------------2627 sample_num
```sql
SELECT bedType, AVG(basePrice) 
FROM Rooms 
GROUP BY bedType;
```
-------------------------2628 sample_num
```sql
SELECT roomName 
FROM Rooms 
WHERE bedType IN ('king', 'queen');
```
-------------------------2629 sample_num
```sql
SELECT roomName 
FROM Rooms 
WHERE bedType IN ('king', 'queen');
```
-------------------------2630 sample_num
```sql
SELECT COUNT(DISTINCT bedType) FROM Rooms;
```
-------------------------2631 sample_num
```sql
SELECT COUNT(DISTINCT bedType) FROM Rooms;
```
-------------------------2632 sample_num
```sql
SELECT RoomId, roomName 
FROM Rooms 
ORDER BY basePrice DESC 
LIMIT 3;
```
-------------------------2633 sample_num
```sql
SELECT roomName, RoomId
FROM Rooms
ORDER BY basePrice DESC
LIMIT 3;
```
-------------------------2634 sample_num
```sql
SELECT roomName 
FROM Rooms 
WHERE basePrice > (SELECT AVG(basePrice) FROM Rooms);
```
-------------------------2635 sample_num
```sql
SELECT roomName 
FROM Rooms 
WHERE basePrice > (SELECT AVG(basePrice) FROM Rooms);
```
-------------------------2636 sample_num
```sql
SELECT COUNT(*) 
FROM Rooms 
WHERE RoomId NOT IN (SELECT Room FROM Reservations);
```
-------------------------2637 sample_num
```sql
SELECT COUNT(*) 
FROM Rooms 
WHERE RoomId NOT IN (SELECT Room FROM Reservations)
```
-------------------------2638 sample_num
```sql
SELECT R.roomName, COUNT(*) AS NumberOfReservations
FROM Rooms R
JOIN Reservations Res
ON R.RoomId = Res.Room
GROUP BY R.roomName;
```
-------------------------2639 sample_num
```sql
SELECT R.roomName, COUNT(*) as ReservationCount
FROM Rooms R
JOIN Reservations Res ON R.RoomId = Res.Room
GROUP BY R.roomName;
```
-------------------------2640 sample_num
```sql
SELECT R.roomName
FROM Rooms R
JOIN Reservations Res
ON R.RoomId = Res.Room
GROUP BY R.roomName
HAVING COUNT(Res.Code) > 60;
```
-------------------------2641 sample_num
```sql
SELECT R.roomName 
FROM Rooms R
JOIN Reservations Res ON R.RoomId = Res.Room
GROUP BY R.roomName
HAVING COUNT(Res.Code) > 60;
```
-------------------------2642 sample_num
```sql
SELECT roomName FROM Rooms WHERE basePrice BETWEEN 120 AND 150;
```
-------------------------2643 sample_num
```sql
SELECT roomName 
FROM Rooms 
WHERE basePrice BETWEEN 120 AND 150;
```
-------------------------2644 sample_num
```sql
SELECT R.roomName 
FROM Rooms R 
JOIN Reservations Res 
ON R.RoomId = Res.Room 
WHERE Res.FirstName LIKE '%ROY%';
```
-------------------------2645 sample_num
```sql
SELECT R.roomName 
FROM Rooms R 
JOIN Reservations Res 
ON R.RoomId = Res.Room 
WHERE Res.FirstName LIKE '%ROY%';
```
-------------------------2646 sample_num
```sql
SELECT cmi_details FROM Customer_Master_Index WHERE master_customer_id IN (SELECT master_customer_id FROM CMI_Cross_References WHERE source_system_code = 'Tax');
```
-------------------------2647 sample_num
```sql
SELECT cr.cmi_cross_ref_id, cr.source_system_code
FROM CMI_Cross_References cr
JOIN Council_Tax ct ON cr.cmi_cross_ref_id = ct.cmi_cross_ref_id
GROUP BY cr.cmi_cross_ref_id, cr.source_system_code;
```
-------------------------2648 sample_num
```sql
SELECT 
    cmi_cr.cmi_cross_ref_id, 
    cmi_cr.master_customer_id, 
    COUNT(br.business_rates_id) as num_of_business_rates
FROM 
    CMI_Cross_References cmi_cr
JOIN 
    Business_Rates br ON cmi_cr.cmi_cross_ref_id = br.cmi_cross_ref_id
GROUP BY 
    cmi_cr.cmi_cross_ref_id, 
    cmi_cr.master_customer_id;
```
-------------------------2649 sample_num
```sql
SELECT 
    cr.source_system_code, 
    bo.council_tax_id
FROM 
    Benefits_Overpayments bo
JOIN 
    CMI_Cross_References cr ON bo.cmi_cross_ref_id = cr.cmi_cross_ref_id
ORDER BY 
    bo.council_tax_id;
```
-------------------------2650 sample_num
```sql
SELECT P.parking_fines_id, C.cmi_cross_ref_id, C.source_system_code 
FROM Parking_Fines P 
JOIN CMI_Cross_References C ON P.cmi_cross_ref_id = C.cmi_cross_ref_id;
```
-------------------------2651 sample_num
```sql
SELECT Rent_Arrears.council_tax_id 
FROM Rent_Arrears 
JOIN CMI_Cross_References ON Rent_Arrears.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id 
JOIN Customer_Master_Index ON CMI_Cross_References.master_customer_id = Customer_Master_Index.master_customer_id 
WHERE Customer_Master_Index.cmi_details != 'Schmidt, Kertzmann and Lubowitz';
```
-------------------------2652 sample_num
```sql
SELECT er.electoral_register_id 
FROM Electoral_Register er
JOIN CMI_Cross_References ccr ON er.cmi_cross_ref_id = ccr.cmi_cross_ref_id
WHERE ccr.source_system_code IN ('Electoral', 'Tax');
```
-------------------------2653 sample_num
```sql
SELECT COUNT(DISTINCT source_system_code) 
FROM CMI_Cross_References;
```
-------------------------2654 sample_num
```sql
SELECT *
FROM Customer_Master_Index
ORDER BY cmi_details DESC;
```
-------------------------2655 sample_num
```sql
SELECT T1.council_tax_id, T2.cmi_cross_ref_id 
FROM Parking_Fines AS T1 
JOIN Council_Tax AS T2 ON T1.council_tax_id = T2.council_tax_id;
```
-------------------------2656 sample_num
```sql
SELECT COUNT(*) 
FROM Council_Tax ct
JOIN CMI_Cross_References ccr ON ct.cmi_cross_ref_id = ccr.cmi_cross_ref_id
JOIN Rent_Arrears ra ON ra.cmi_cross_ref_id = ccr.cmi_cross_ref_id;
```
-------------------------2657 sample_num
```sql
SELECT DISTINCT CCI.source_system_code 
FROM CMI_Cross_References CCI
JOIN Customer_Master_Index CMI ON CCI.master_customer_id = CMI.master_customer_id
WHERE CMI.cmi_details = 'Gottlieb, Becker and Wyman';
```
-------------------------2658 sample_num
```sql
SELECT cmi_cross_ref_id 
FROM CMI_Cross_References 
WHERE cmi_cross_ref_id NOT IN (SELECT cmi_cross_ref_id FROM Parking_Fines)
```
Note: This query will return all the cmi_cross_ref_id from the CMI_Cross_References table that are not present in the Parking_Fines table. However, it's important to ensure that these cmi_cross_ref_id are valid and exist in other tables. To do this, you can add additional conditions to the WHERE clause or join the CMI_Cross_References table with other tables to filter out invalid cmi_cross_ref_id.
-------------------------2659 sample_num
```sql
SELECT DISTINCT source_system_code 
FROM CMI_Cross_References 
WHERE source_system_code LIKE '%en%';
```
-------------------------2660 sample_num
```sql
SELECT COUNT(*) FROM party;
```
-------------------------2661 sample_num
```sql
SELECT COUNT(*) FROM party;
```
-------------------------2662 sample_num
```sql
SELECT Party_Theme 
FROM party 
ORDER BY Number_of_hosts ASC;
```
-------------------------2663 sample_num
```sql
SELECT Party_Theme 
FROM party 
ORDER BY Number_of_hosts ASC;
```
However, to get the themes of parties along with the number of hosts, you would need to join the 'party' and 'party_host' tables and then group by 'Party_Theme'. Here is the correct SQL query:
```sql
SELECT p.Party_Theme, COUNT(ph.Host_ID) as Number_of_Hosts
FROM party p
JOIN party_host ph ON p.Party_ID = ph.Party_ID
GROUP BY p.Party_Theme
ORDER BY Number_of_Hosts ASC;
```
-------------------------2664 sample_num
```sql
SELECT Party_Theme, Location FROM party;
```
-------------------------2665 sample_num
```sql
SELECT Party_Theme, Location FROM party;
```
-------------------------2666 sample_num
```sql
SELECT First_year, Last_year 
FROM party 
WHERE Party_Theme = 'Spring' OR Party_Theme = 'Technology';
```
-------------------------2667 sample_num
```sql
SELECT First_year, Last_year 
FROM party 
WHERE Party_Theme = 'Spring' OR Party_Theme = 'Technology';
```
-------------------------2668 sample_num
```sql
SELECT AVG(Number_of_hosts) 
FROM party;
```
-------------------------2669 sample_num
```sql
SELECT AVG(Number_of_hosts) 
FROM party;
```
-------------------------2670 sample_num
```sql
SELECT T1.Location 
FROM party AS T1 
JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID 
GROUP BY T1.Party_ID 
ORDER BY COUNT(T2.Host_ID) DESC 
LIMIT 1
```
-------------------------2671 sample_num
```sql
SELECT T1.Location 
FROM party AS T1 
JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID 
GROUP BY T1.Party_ID 
ORDER BY COUNT(T2.Host_ID) DESC 
LIMIT 1;
```
-------------------------2672 sample_num
```sql
SELECT Nationality, COUNT(*) AS NumberOfHosts
FROM host
GROUP BY Nationality;
```
-------------------------2673 sample_num
```sql
SELECT Nationality, COUNT(*) 
FROM host 
GROUP BY Nationality;
```
-------------------------2674 sample_num
```sql
SELECT Nationality, COUNT(*) as count 
FROM host 
GROUP BY Nationality 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------2675 sample_num
```sql
SELECT Nationality, COUNT(*) AS Count_Hosts
FROM host
GROUP BY Nationality
ORDER BY Count_Hosts DESC
LIMIT 1;
```
-------------------------2676 sample_num
```sql
SELECT Nationality 
FROM host 
WHERE Age > 45 
INTERSECT 
SELECT Nationality 
FROM host 
WHERE Age < 35;
```
-------------------------2677 sample_num
```sql
SELECT Nationality 
FROM host 
WHERE Age > 45 
INTERSECT 
SELECT Nationality 
FROM host 
WHERE Age < 35;
```
-------------------------2678 sample_num
```sql
SELECT party.Party_Theme, host.Name 
FROM party 
JOIN party_host ON party.Party_ID = party_host.Party_ID 
JOIN host ON party_host.Host_ID = host.Host_ID;
```
-------------------------2679 sample_num
```sql
SELECT p.Party_Theme, h.Name 
FROM party p 
JOIN party_host ph ON p.Party_ID = ph.Party_ID 
JOIN host h ON ph.Host_ID = h.Host_ID;
```
-------------------------2680 sample_num
```sql
SELECT p.Location, h.Name 
FROM party AS p 
JOIN party_host AS ph ON p.Party_ID = ph.Party_ID 
JOIN host AS h ON h.Host_ID = ph.Host_ID 
ORDER BY h.Age ASC;
```
-------------------------2681 sample_num
```sql
SELECT p.Location, h.Name 
FROM party p 
JOIN party_host ph ON p.Party_ID = ph.Party_ID 
JOIN host h ON h.Host_ID = ph.Host_ID 
ORDER BY h.Age ASC;
```
-------------------------2682 sample_num
```sql
SELECT p.Location 
FROM party p 
JOIN party_host ph ON p.Party_ID = ph.Party_ID 
JOIN host h ON h.Host_ID = ph.Host_ID 
WHERE h.Age > 50;
```
-------------------------2683 sample_num
```sql
SELECT T1.Location 
FROM party AS T1 
JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID 
JOIN host AS T3 ON T2.Host_ID = T3.Host_ID 
WHERE T3.Age > 50;
```
-------------------------2684 sample_num
```sql
SELECT h.Name 
FROM host h 
JOIN party_host ph ON h.Host_ID = ph.Host_ID 
JOIN party p ON ph.Party_ID = p.Party_ID 
WHERE p.Number_of_hosts > 20;
```
-------------------------2685 sample_num
```sql
SELECT p.Party_Theme, h.Name
FROM party p
JOIN party_host ph ON p.Party_ID = ph.Party_ID
JOIN host h ON ph.Host_ID = h.Host_ID
GROUP BY p.Party_Theme, h.Name
HAVING COUNT(h.Host_ID) > 20;
```
-------------------------2686 sample_num
```sql
SELECT Name, Nationality FROM host WHERE Age = (SELECT MAX(Age) FROM host);
```
-------------------------2687 sample_num
```sql
SELECT Name, Nationality 
FROM host 
WHERE Age = (SELECT MAX(Age) FROM host);
```
-------------------------2688 sample_num
```sql
SELECT Name 
FROM host 
WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)
```
-------------------------2689 sample_num
```sql
SELECT Name 
FROM host 
WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)
```
-------------------------2690 sample_num
```sql
SELECT COUNT(*) FROM region;
```
-------------------------2691 sample_num
```sql
SELECT COUNT(*) FROM region;
```
-------------------------2692 sample_num
```sql
SELECT Region_code, Region_name 
FROM region 
ORDER BY Region_code;
```
-------------------------2693 sample_num
```sql
SELECT Region_code, Region_name 
FROM region 
ORDER BY Region_code;
```
-------------------------2694 sample_num
```sql
SELECT Region_name 
FROM region 
ORDER BY Region_name ASC;
```
-------------------------2695 sample_num
```sql
SELECT Region_name 
FROM region 
ORDER BY Region_name ASC;
```
-------------------------2696 sample_num
```sql
SELECT Region_name 
FROM region 
WHERE Region_name != 'Denmark';
```
-------------------------2697 sample_num
```sql
SELECT Region_name 
FROM region 
WHERE Region_name <> 'Denmark';
```
-------------------------2698 sample_num
```sql
SELECT COUNT(*) 
FROM storm 
WHERE Number_Deaths > 0;
```
-------------------------2699 sample_num
```sql
SELECT COUNT(*) 
FROM storm 
WHERE Number_Deaths > 0;
```
-------------------------2700 sample_num
```sql
SELECT Name, Dates_active, Number_Deaths 
FROM storm 
WHERE Number_Deaths >= 1;
```
-------------------------2701 sample_num
```sql
SELECT Name, Dates_active, Number_Deaths 
FROM storm 
WHERE Number_Deaths >= 1;
```
-------------------------2702 sample_num
```sql
SELECT AVG(Damage_millions_USD), MAX(Damage_millions_USD) 
FROM storm 
WHERE Max_speed > 1000;
```
-------------------------2703 sample_num
```sql
SELECT AVG(Damage_millions_USD), MAX(Damage_millions_USD) 
FROM storm 
WHERE Max_speed > 1000;
```
-------------------------2704 sample_num
```sql
SELECT SUM(Number_Deaths) AS Total_Deaths, SUM(Damage_millions_USD) AS Total_Damage
FROM storm
WHERE Max_speed > (SELECT AVG(Max_speed) FROM storm);
```
-------------------------2705 sample_num
```sql
SELECT SUM(Number_Deaths) AS Total_Deaths, SUM(Damage_millions_USD) AS Total_Damage
FROM storm
WHERE Max_speed > (SELECT AVG(Max_speed) FROM storm);
```
-------------------------2706 sample_num
```sql
SELECT Name, Damage_millions_USD 
FROM storm 
ORDER BY Max_speed DESC;
```
-------------------------2707 sample_num
```sql
SELECT Name, Damage_millions_USD 
FROM storm 
ORDER BY Max_speed DESC;
```
-------------------------2708 sample_num
```sql
SELECT COUNT(DISTINCT Region_id) FROM affected_region;
```
-------------------------2709 sample_num
```sql
SELECT COUNT(DISTINCT Region_id) FROM affected_region;
```
-------------------------2710 sample_num
```sql
SELECT Region_name 
FROM region 
WHERE Region_id NOT IN (SELECT Region_id FROM affected_region)
```
-------------------------2711 sample_num
```sql
SELECT Region_name 
FROM region 
WHERE Region_id NOT IN (SELECT Region_id FROM affected_region);
```
-------------------------2712 sample_num
```sql
SELECT R.Region_name, COUNT(S.Storm_ID) AS Number_of_storms
FROM region R
JOIN affected_region AR ON R.Region_id = AR.Region_id
JOIN storm S ON AR.Storm_ID = S.Storm_ID
GROUP BY R.Region_name;
```
-------------------------2713 sample_num
```sql
SELECT r.Region_name, COUNT(s.Storm_ID) AS NumberOfStorms
FROM region r
JOIN affected_region ar ON r.Region_id = ar.Region_id
JOIN storm s ON ar.Storm_ID = s.Storm_ID
GROUP BY r.Region_name;
```
-------------------------2714 sample_num
```sql
SELECT storm.Name, COUNT(affected_region.Region_id) AS Number_of_Affected_Regions
FROM storm 
JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID
GROUP BY storm.Name;
```
-------------------------2715 sample_num
```sql
SELECT Storm_ID, COUNT(Region_id) as Number_of_Regions_Affected
FROM affected_region
GROUP BY Storm_ID;
```
-------------------------2716 sample_num
```sql
SELECT s.Name, s.Max_speed 
FROM storm s
JOIN (
  SELECT Storm_ID, COUNT(*) as num_regions
  FROM affected_region
  GROUP BY Storm_ID
  ORDER BY num_regions DESC
  LIMIT 1
) a ON s.Storm_ID = a.Storm_ID;
```
-------------------------2717 sample_num
```sql
SELECT s.Name, s.Max_speed 
FROM storm s
WHERE s.Storm_ID = (
    SELECT a.Storm_ID 
    FROM (
        SELECT Storm_ID, COUNT(DISTINCT Region_id) as num_regions 
        FROM affected_region 
        GROUP BY Storm_ID
    ) a
    ORDER BY num_regions DESC 
    LIMIT 1
);
```
-------------------------2718 sample_num
```sql
SELECT Name 
FROM storm 
WHERE Storm_ID NOT IN (SELECT Storm_ID FROM affected_region)
```
-------------------------2719 sample_num
```sql
SELECT Name 
FROM storm 
WHERE Storm_ID NOT IN (SELECT Storm_ID FROM affected_region)
```
-------------------------2720 sample_num
```sql
SELECT s.Name 
FROM storm s
JOIN affected_region ar ON s.Storm_ID = ar.Storm_ID 
GROUP BY s.Name 
HAVING COUNT(DISTINCT ar.Region_id) >= 2 AND SUM(ar.Number_city_affected) >= 10;
```
-------------------------2721 sample_num
```sql
SELECT s.Name 
FROM storm s
JOIN affected_region ar ON s.Storm_ID = ar.Storm_ID 
GROUP BY s.Name 
HAVING COUNT(DISTINCT ar.Region_id) >= 2 AND SUM(ar.Number_city_affected) >= 10;
```
-------------------------2722 sample_num
```sql
SELECT Name 
FROM storm 
WHERE Storm_ID NOT IN (
    SELECT Storm_ID 
    FROM (
        SELECT Storm_ID, COUNT(Region_id) as num_regions 
        FROM affected_region 
        GROUP BY Storm_ID
    ) as temp 
    WHERE num_regions >= 2
)
```
-------------------------2723 sample_num
```sql
SELECT s.Name 
FROM storm s
LEFT JOIN affected_region ar ON s.Storm_ID = ar.Storm_ID
GROUP BY s.Storm_ID
HAVING COUNT(ar.Region_id) < 2;
```
-------------------------2724 sample_num
```sql
SELECT DISTINCT r.Region_name
FROM region r
JOIN affected_region ar ON r.Region_id = ar.Region_id
JOIN storm s ON ar.Storm_ID = s.Storm_ID
WHERE s.Number_Deaths >= 10;
```
-------------------------2725 sample_num
```sql
SELECT r.Region_name 
FROM region r 
JOIN affected_region ar ON r.Region_id = ar.Region_id 
JOIN storm s ON ar.Storm_ID = s.Storm_ID 
WHERE s.Number_Deaths >= 10;
```
-------------------------2726 sample_num
```sql
SELECT s.Name 
FROM storm s
JOIN affected_region ar ON s.Storm_ID = ar.Storm_ID
JOIN region r ON ar.Region_id = r.Region_id
WHERE r.Region_name = 'Denmark';
```
-------------------------2727 sample_num
```sql
SELECT storm.Name FROM storm 
JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID 
JOIN region ON affected_region.Region_id = region.Region_id 
WHERE region.Region_name = 'Denmark';
```
-------------------------2728 sample_num
```sql
SELECT R.Region_name 
FROM region R 
JOIN affected_region AR ON R.Region_id = AR.Region_id 
JOIN storm S ON AR.Storm_ID = S.Storm_ID 
GROUP BY R.Region_name 
HAVING COUNT(S.Storm_ID) >= 2;
```
-------------------------2729 sample_num
```sql
SELECT R.Region_name 
FROM region R
JOIN affected_region AR ON R.Region_id = AR.Region_id
GROUP BY R.Region_id, R.Region_name
HAVING COUNT(AR.Storm_ID) >= 2;
```
-------------------------2730 sample_num
```sql
SELECT r.Region_name 
FROM region r 
JOIN affected_region ar ON r.Region_id = ar.Region_id 
JOIN storm s ON ar.Storm_ID = s.Storm_ID 
WHERE s.Number_Deaths = (SELECT MAX(Number_Deaths) FROM storm);
```
-------------------------2731 sample_num
```sql
SELECT r.Region_name 
FROM region r 
JOIN affected_region ar ON r.Region_id = ar.Region_id 
JOIN storm s ON ar.Storm_ID = s.Storm_ID 
WHERE s.Number_Deaths = (SELECT MAX(Number_Deaths) FROM storm);
```
-------------------------2732 sample_num
```sql
SELECT s.Name 
FROM storm s 
JOIN affected_region ar1 ON s.Storm_ID = ar1.Storm_ID 
JOIN region r1 ON ar1.Region_id = r1.Region_id 
JOIN affected_region ar2 ON s.Storm_ID = ar2.Storm_ID 
JOIN region r2 ON ar2.Region_id = r2.Region_id 
WHERE r1.Region_name = 'Afghanistan' AND r2.Region_name = 'Albania';
```
-------------------------2733 sample_num
```sql
SELECT s.Name 
FROM storm s
JOIN affected_region ar1 ON s.Storm_ID = ar1.Storm_ID 
JOIN region r1 ON ar1.Region_id = r1.Region_id
JOIN affected_region ar2 ON s.Storm_ID = ar2.Storm_ID 
JOIN region r2 ON ar2.Region_id = r2.Region_id
WHERE r1.Region_name = 'Afghanistan' AND r2.Region_name = 'Albania'
GROUP BY s.Name;
```
```
-------------------------2734 sample_num
```sql
SELECT COUNT(*) FROM county;
```
-------------------------2735 sample_num
```sql
SELECT COUNT(*) FROM county;
```
-------------------------2736 sample_num
```sql
SELECT County_name, Population FROM county;
```
-------------------------2737 sample_num
```sql
SELECT County_name, Population FROM county;
```
-------------------------2738 sample_num
```sql
SELECT AVG(Population) FROM county;
```
-------------------------2739 sample_num
```sql
SELECT AVG(Population) FROM county;
```
-------------------------2740 sample_num
```sql
SELECT MAX(Population) as Max_Population, MIN(Population) as Min_Population FROM county;
```
-------------------------2741 sample_num
```sql
SELECT MAX(Population) AS Max_Population, MIN(Population) AS Min_Population FROM county;
```
-------------------------2742 sample_num
```sql
SELECT DISTINCT District FROM election;
```
-------------------------2743 sample_num
```sql
SELECT DISTINCT District FROM election;
```
-------------------------2744 sample_num
```sql
SELECT Zip_code FROM county WHERE County_name = "Howard";
```
-------------------------2745 sample_num
```sql
SELECT Zip_code FROM county WHERE County_name = 'Howard';
```
-------------------------2746 sample_num
```sql
SELECT Delegate FROM election WHERE District = 1;
```
-------------------------2747 sample_num
```sql
SELECT Delegate 
FROM election 
WHERE District = 1;
```
-------------------------2748 sample_num
```sql
SELECT Delegate, Committee FROM election;
```
-------------------------2749 sample_num
```sql
SELECT Delegate, Committee FROM election;
```
-------------------------2750 sample_num
```sql
SELECT COUNT(DISTINCT Governor) FROM party;
```
-------------------------2751 sample_num
```sql
SELECT COUNT(DISTINCT Governor) FROM party;
```
-------------------------2752 sample_num
```sql
SELECT Lieutenant_Governor, Comptroller 
FROM party 
WHERE Party = 'Democratic'
```
-------------------------2753 sample_num
```sql
SELECT Lieutenant_Governor, Comptroller 
FROM party 
WHERE Party = 'Democratic'
```
-------------------------2754 sample_num
```sql
SELECT DISTINCT Year 
FROM party 
WHERE Governor = 'Eliot Spitzer';
```
-------------------------2755 sample_num
```sql
SELECT DISTINCT Year 
FROM party 
WHERE Governor = 'Eliot Spitzer';
```
-------------------------2756 sample_num
```sql
SELECT * FROM election;
```
-------------------------2757 sample_num
```sql
SELECT * FROM election;
```
-------------------------2758 sample_num
```sql
SELECT election.Delegate, county.County_name 
FROM election 
JOIN county ON election.Counties_Represented = county.County_Id;
```
-------------------------2759 sample_num
```sql
SELECT e.Delegate, c.County_name 
FROM election AS e 
JOIN county AS c ON e.Counties_Represented = c.County_Id;
```
-------------------------2760 sample_num
```sql
SELECT DISTINCT e.Delegate 
FROM election e
JOIN county c ON e.Counties_Represented = c.County_name 
WHERE c.Population < 100000;
```
-------------------------2761 sample_num
```sql
SELECT DISTINCT e.Delegate
FROM election e
JOIN county c ON e.Counties_Represented = c.County_name
WHERE c.Population < 100000;
```
-------------------------2762 sample_num
```sql
SELECT COUNT(DISTINCT T3.Delegate) 
FROM county AS T1 
JOIN election AS T3 ON T1.County_Id = T3.Counties_Represented 
WHERE T1.Population > 50000;
```
-------------------------2763 sample_num
```sql
SELECT COUNT(DISTINCT T3.Delegate) 
FROM county AS T1 
JOIN election AS T3 ON T1.County_Id = T3.Counties_Represented 
WHERE T1.Population > 50000;
```
-------------------------2764 sample_num
```sql
SELECT T1.County_name 
FROM county AS T1 
JOIN election AS T2 ON T1.County_Id = T2.Counties_Represented 
WHERE T2.Committee = 'Appropriations'
```
-------------------------2765 sample_num
```sql
SELECT T1.County_name 
FROM county AS T1 
JOIN election AS T2 ON T1.County_Id = T2.Counties_Represented 
WHERE T2.Committee = 'Appropriations';
```
-------------------------2766 sample_num
```sql
SELECT Delegate, Party 
FROM election;
```
-------------------------2767 sample_num
```sql
SELECT Delegate, Party 
FROM election;
``` 

If there is a need to join with other tables:

```sql
SELECT e.Delegate, p.Party 
FROM election e
JOIN party p ON e.Party = p.Party_ID;
```
-------------------------2768 sample_num
```sql
SELECT T2.Governor 
FROM election AS T1 
JOIN party AS T2 ON T1.Party = T2.Party_ID 
WHERE T1.District = 1;
```
-------------------------2769 sample_num
```sql
SELECT p.Governor
FROM election e
JOIN party p ON e.Party = p.Party_ID
WHERE e.District = 1;
```
-------------------------2770 sample_num
```sql
SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District IN (1, 2)
```
-------------------------2771 sample_num
```sql
SELECT e.Delegate, p.Comptroller
FROM election e
JOIN party p ON e.Party = p.Party_ID
WHERE e.District IN (1, 2)
```
-------------------------2772 sample_num
```sql
SELECT DISTINCT Committee 
FROM election 
WHERE Party = 'Democratic';
```
-------------------------2773 sample_num
```sql
SELECT DISTINCT Committee 
FROM election 
WHERE Party = 'Democratic';
```
-------------------------2774 sample_num
```sql
SELECT C.County_name, COUNT(E.Delegate) AS NumberOfDelegates
FROM county C
JOIN election E ON C.County_Id = E.Counties_Represented
GROUP BY C.County_name;
```
-------------------------2775 sample_num
```sql
SELECT C.County_name, COUNT(E.Delegate) AS Num_Delegates
FROM county C
JOIN election E ON C.County_Id = E.Counties_Represented
GROUP BY C.County_name;
```
-------------------------2776 sample_num
```sql
SELECT T2.Party, COUNT(T1.Delegate) 
FROM election AS T1 
JOIN party AS T2 
ON T1.Party = T2.Party_ID 
GROUP BY T2.Party;
```
-------------------------2777 sample_num
```sql
SELECT Party, COUNT(DISTINCT Delegate) 
FROM election 
GROUP BY Party;
```
-------------------------2778 sample_num
```sql
SELECT County_name FROM county ORDER BY Population ASC;
```
-------------------------2779 sample_num
```sql
SELECT County_name
FROM county
ORDER BY Population ASC;
```
-------------------------2780 sample_num
```sql
SELECT County_name FROM county ORDER BY County_name DESC;
```
-------------------------2781 sample_num
```sql
SELECT County_name FROM county ORDER BY County_name DESC;
```
-------------------------2782 sample_num
```sql
SELECT County_name 
FROM county 
ORDER BY Population DESC 
LIMIT 1;
```
-------------------------2783 sample_num
```sql
SELECT County_name 
FROM county 
ORDER BY Population DESC 
LIMIT 1;
```
-------------------------2784 sample_num
```sql
SELECT County_name 
FROM county 
ORDER BY Population ASC 
LIMIT 3;
```
-------------------------2785 sample_num
```sql
SELECT County_name 
FROM county 
ORDER BY Population ASC 
LIMIT 3;
```
-------------------------2786 sample_num
```sql
SELECT T1.County_name 
FROM county AS T1 
JOIN election AS T2 ON T1.County_Id = T2.Counties_Represented 
GROUP BY T1.County_name 
HAVING COUNT(T2.Delegate) >= 2;
```
-------------------------2787 sample_num
```sql
SELECT c.County_name
FROM county c
JOIN election e ON c.County_Id = e.Counties_Represented
GROUP BY c.County_name
HAVING COUNT(e.Delegate) >= 2;
```
-------------------------2788 sample_num
```sql
SELECT Party 
FROM party 
GROUP BY Party 
HAVING COUNT(*) >= 2;
```
-------------------------2789 sample_num
```sql
SELECT Party 
FROM election 
GROUP BY Party 
HAVING COUNT(*) >= 2;
```
-------------------------2790 sample_num
```sql
SELECT T2.Party 
FROM election AS T1 
JOIN party AS T2 
ON T1.Party = T2.Party_ID 
GROUP BY T2.Party 
ORDER BY COUNT(T1.Delegate) DESC 
LIMIT 1;
```
-------------------------2791 sample_num
```sql
SELECT T2.Party 
FROM election AS T1 
JOIN party AS T2 
ON T1.Party = T2.Party_ID 
GROUP BY T2.Party 
ORDER BY COUNT(T1.Delegate) DESC 
LIMIT 1
```
-------------------------2792 sample_num
```sql
SELECT Governor, COUNT(*) AS Times_Governor 
FROM party 
GROUP BY Governor 
ORDER BY Times_Governor DESC 
LIMIT 1;
```
-------------------------2793 sample_num
```sql
SELECT Governor, COUNT(*) AS Frequency 
FROM party 
GROUP BY Governor 
ORDER BY Frequency DESC 
LIMIT 1;
```
-------------------------2794 sample_num
```sql
SELECT Comptroller, COUNT(Comptroller) AS Times
FROM party
GROUP BY Comptroller
ORDER BY Times DESC
LIMIT 1;
```
-------------------------2795 sample_num
```sql
SELECT Comptroller, COUNT(*) AS Frequency 
FROM party 
GROUP BY Comptroller 
ORDER BY Frequency DESC 
LIMIT 1;
```
-------------------------2796 sample_num
```sql
SELECT Party 
FROM party 
WHERE Party NOT IN (SELECT Party FROM election)
```
-------------------------2797 sample_num
```sql
SELECT Party 
FROM party 
WHERE Party NOT IN (SELECT Party FROM election)
```
However, this query might not work as expected if there are parties in the 'party' table that do not appear in the 'election' table at all. A better query would be:
```sql
SELECT p.Party 
FROM party p 
LEFT JOIN election e ON p.Party = e.Party 
WHERE e.Party IS NULL
```
-------------------------2798 sample_num
```sql
SELECT p.Party 
FROM party p
JOIN election e ON p.Party_ID = e.Party 
WHERE e.Committee = 'Appropriations'
GROUP BY p.Party 
HAVING COUNT(*) > 1
``` 
However, to answer the question "What are the names of parties that have delegates on "Appropriations" committee and..." without any other specified conditions (such as another committee or delegate), the correct SQL query would be:

```sql
SELECT DISTINCT p.Party 
FROM party p
JOIN election e ON p.Party_ID = e.Party 
WHERE e.Committee = 'Appropriations'
```
-------------------------2799 sample_num
```sql
SELECT T1.Party 
FROM party AS T1 
JOIN election AS T2 
ON T1.Party_ID = T2.Party 
WHERE T2.Committee = 'Appropriations' 
INTERSECT 
SELECT T1.Party 
FROM party AS T1 
JOIN election AS T2 
ON T1.Party_ID = T2.Party 
WHERE T2.Committee = 'Economic Matters'
```
-------------------------2800 sample_num
```sql
SELECT T1.Committee 
FROM election AS T1 
JOIN party AS T2 ON T1.Party = T2.Party_ID 
WHERE T2.Party = 'Democratic' 
INTERSECT 
SELECT T1.Committee 
FROM election AS T1 
JOIN party AS T2 ON T1.Party = T2.Party_ID 
WHERE T2.Party = 'Liberal'
```
-------------------------2801 sample_num
```sql
SELECT T1.Committee 
FROM election AS T1 
JOIN party AS T2 ON T1.Party = T2.Party_ID 
WHERE T2.Party = 'Democratic' 
INTERSECT 
SELECT T1.Committee 
FROM election AS T1 
JOIN party AS T2 ON T1.Party = T2.Party_ID 
WHERE T2.Party = 'Liberal'
```
-------------------------2802 sample_num
```sql
SELECT COUNT(*) FROM journalist;
```
-------------------------2803 sample_num
```sql
SELECT Name 
FROM journalist 
ORDER BY Years_working ASC;
```
-------------------------2804 sample_num
```sql
SELECT Nationality, Age FROM journalist;
```
-------------------------2805 sample_num
```sql
SELECT Name 
FROM journalist 
WHERE Nationality IN ('England', 'Wales');
```
-------------------------2806 sample_num
```sql
SELECT AVG(Years_working) FROM journalist;
```
-------------------------2807 sample_num
```sql
SELECT Nationality 
FROM journalist 
ORDER BY Years_working DESC 
LIMIT 1;
```
-------------------------2808 sample_num
```sql
SELECT Nationality, COUNT(*) AS Num_of_Journalists
FROM journalist
GROUP BY Nationality;
```
-------------------------2809 sample_num
```sql
SELECT Nationality, COUNT(Nationality) AS Count 
FROM journalist 
GROUP BY Nationality 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------2810 sample_num
```sql
SELECT Nationality 
FROM journalist 
WHERE Years_working > 10 
INTERSECT 
SELECT Nationality 
FROM journalist 
WHERE Years_working < 3;
```
-------------------------2811 sample_num
```sql
SELECT Date, Venue, Name 
FROM event 
ORDER BY Event_Attendance DESC;
```
-------------------------2812 sample_num
```sql
SELECT j.Name, e.Date 
FROM journalist j 
JOIN news_report nr ON j.journalist_ID = nr.journalist_ID 
JOIN event e ON nr.Event_ID = e.Event_ID;
```
-------------------------2813 sample_num
```sql
SELECT journalist.Name, event.Name 
FROM journalist 
JOIN news_report ON journalist.journalist_ID = news_report.journalist_ID 
JOIN event ON news_report.Event_ID = event.Event_ID 
ORDER BY journalist.Name, event.Name ASC;
```
-------------------------2814 sample_num
```sql
SELECT j.Name, COUNT(nr.Event_ID) 
FROM journalist j 
JOIN news_report nr ON j.journalist_ID = nr.journalist_ID 
GROUP BY j.journalist_ID, j.Name;
```
-------------------------2815 sample_num
```sql
SELECT j.Name 
FROM journalist j 
JOIN news_report nr ON j.journalist_ID = nr.journalist_ID 
GROUP BY j.Name 
HAVING COUNT(nr.Event_ID) > 1;
```
-------------------------2816 sample_num
```sql
SELECT j.Name 
FROM journalist j 
LEFT JOIN news_report nr ON j.journalist_ID = nr.journalist_ID 
WHERE nr.journalist_ID IS NULL
```
-------------------------2817 sample_num
```sql
SELECT AVG(Event_Attendance) AS Average_Attendance, MAX(Event_Attendance) AS Maximum_Attendance 
FROM event;
```
-------------------------2818 sample_num
```sql
SELECT Work_Type, AVG(Age) as Average_Age, AVG(Years_working) as Average_Experience
FROM journalist
JOIN news_report ON journalist.journalist_ID = news_report.journalist_ID
GROUP BY Work_Type;
```
-------------------------2819 sample_num
```sql
SELECT Venue, Name 
FROM event 
ORDER BY Event_Attendance DESC 
LIMIT 2;
```
-------------------------2820 sample_num
```sql
SELECT * FROM Restaurant;
```
-------------------------2821 sample_num
```sql
SELECT Address FROM Restaurant WHERE ResName = 'Subway';
```
-------------------------2822 sample_num
```sql
SELECT Rating FROM Restaurant WHERE ResName = 'Subway';
```
-------------------------2823 sample_num
```sql
SELECT ResTypeName 
FROM Type_Of_Restaurant 
JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID;
``` 

However, to list all unique restaurant types regardless of whether they are associated with any restaurant, you should use the below query:
```sql
SELECT DISTINCT ResTypeName 
FROM Restaurant_Type;
```
-------------------------2824 sample_num
```sql
SELECT ResTypeDescription 
FROM Restaurant_Type 
WHERE ResTypeName = 'Sandwich';
```
-------------------------2825 sample_num
```sql
SELECT ResName, Rating 
FROM Restaurant 
WHERE Rating = (SELECT MAX(Rating) FROM Restaurant);
```
-------------------------2826 sample_num
```sql
SELECT Age FROM Student WHERE Fname = 'Linda' AND LName = 'Smith';
```
-------------------------2827 sample_num
```sql
SELECT Sex FROM Student WHERE Fname = 'Linda' AND LName = 'Smith';
```
-------------------------2828 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE Major = 600;
```
-------------------------2829 sample_num
```sql
SELECT city_code FROM Student WHERE Fname = 'Linda' AND LName = 'Smith';
```
-------------------------2830 sample_num
```sql
SELECT COUNT(*) FROM Student WHERE Advisor = 1121;
```
-------------------------2831 sample_num
```sql
SELECT Advisor, COUNT(StuID) AS NumStudents
FROM Student
GROUP BY Advisor
ORDER BY NumStudents DESC
LIMIT 1;
```
-------------------------2832 sample_num
```sql
SELECT Major, COUNT(*) AS NumStudents
FROM Student
GROUP BY Major
ORDER BY NumStudents ASC
LIMIT 1;
```
-------------------------2833 sample_num
```sql
SELECT Major, COUNT(*) AS NumStudents 
FROM Student 
GROUP BY Major 
HAVING NumStudents BETWEEN 2 AND 30;
```
-------------------------2834 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE Age > 18 AND Major = 600;
```
-------------------------2835 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE Sex = 'F' AND Age > 18 AND Major != 600;
```
-------------------------2836 sample_num
```sql
SELECT COUNT(*) 
FROM Type_Of_Restaurant 
JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID 
WHERE Restaurant_Type.ResTypeName = 'Sandwich';
```
-------------------------2837 sample_num
```sql
SELECT SUM(V.Visited_Time) 
FROM Visits_Restaurant V 
JOIN Student S ON V.StuID = S.StuID 
WHERE S.Fname = 'Linda' AND S.LName = 'Smith';
```
Note: This assumes that 'Time' in the Visits_Restaurant table is actually 'Visited_Time'. If 'Time' is just a timestamp and not the duration spent at the restaurant, then you would need additional logic to calculate the duration spent at each visit.
However, based on the provided schema, the correct SQL query should be:
```sql
SELECT SUM(V.Spent) 
FROM Visits_Restaurant V 
JOIN Student S ON V.StuID = S.StuID 
WHERE S.Fname = 'Linda' AND S.LName = 'Smith';
```
-------------------------2838 sample_num
```sql
SELECT COUNT(*) 
FROM Visits_Restaurant 
JOIN Student ON Visits_Restaurant.StuID = Student.StuID 
JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID 
WHERE Student.Fname = 'Linda' AND Student.LName = 'Smith' AND Restaurant.ResName = 'Subway';
```
-------------------------2839 sample_num
```sql
SELECT vr.Time 
FROM Visits_Restaurant vr 
JOIN Student s ON vr.StuID = s.StuID 
JOIN Restaurant r ON vr.ResID = r.ResID 
WHERE s.Fname = 'Linda' AND s.LName = 'Smith' AND r.ResName = 'Subway';
```
-------------------------2840 sample_num
```sql
SELECT R.ResName, SUM(VR.Spent) AS TotalTimeSpent 
FROM Visits_Restaurant VR 
JOIN Restaurant R ON VR.ResID = R.ResID 
GROUP BY R.ResID 
ORDER BY TotalTimeSpent ASC 
LIMIT 1;
```
-------------------------2841 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S
JOIN Visits_Restaurant VR ON S.StuID = VR.StuID 
GROUP BY S.StuID, S.Fname, S.LName 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------2842 sample_num
```sql
SELECT actual_order_id FROM Actual_Orders WHERE order_status_code = 'Success';
```
-------------------------2843 sample_num
```sql
SELECT P.product_name, P.product_price
FROM Products P
JOIN Actual_Order_Products AOP ON P.product_id = AOP.product_id
GROUP BY P.product_id, P.product_name, P.product_price
ORDER BY COUNT(AOP.product_id) DESC
LIMIT 1;
```
-------------------------2844 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------2845 sample_num
```sql
SELECT COUNT(DISTINCT payment_method) FROM Customers;
```
-------------------------2846 sample_num
```sql
SELECT * FROM Trucks ORDER BY truck_licence_number;
```
-------------------------2847 sample_num
```sql
SELECT product_name 
FROM Products 
ORDER BY product_price DESC 
LIMIT 1;
```
-------------------------2848 sample_num
```sql
SELECT Customers.customer_name
FROM Customers
JOIN Customer_Addresses ON Customers.customer_id = Customer_Addresses.customer_id
JOIN Addresses ON Customer_Addresses.address_id = Addresses.address_id
WHERE Addresses.state_province_county <> 'California';
```
-------------------------2849 sample_num
```sql
SELECT Customers.customer_name, Customers.customer_email 
FROM Customers 
WHERE Customers.payment_method = 'Visa';
```
-------------------------2850 sample_num
```sql
SELECT Customers.customer_name, Customers.customer_phone 
FROM Customers 
JOIN Customer_Addresses ON Customers.customer_id = Customer_Addresses.customer_id 
JOIN Addresses ON Customer_Addresses.address_id = Addresses.address_id 
WHERE Addresses.state_province_county = 'California';
```
-------------------------2851 sample_num
```sql
SELECT state_province_county 
FROM Addresses 
WHERE address_id NOT IN (
    SELECT DISTINCT employee_address_id 
    FROM Employees
)
GROUP BY state_province_county;
```
-------------------------2852 sample_num
```sql
SELECT customer_name, customer_phone, customer_email 
FROM Customers 
ORDER BY date_became_customer;
```
-------------------------2853 sample_num
```sql
SELECT customer_name
FROM Customers
ORDER BY date_became_customer
LIMIT 5;
```
-------------------------2854 sample_num
```sql
SELECT payment_method, COUNT(*) as frequency 
FROM Customers 
GROUP BY payment_method 
ORDER BY frequency DESC 
LIMIT 1;
```
-------------------------2855 sample_num
```sql
SELECT route_name 
FROM Delivery_Routes 
ORDER BY route_name ASC;
```
-------------------------2856 sample_num
```sql
SELECT dr.route_name, COUNT(od.location_code) as delivery_count
FROM Delivery_Routes dr
JOIN Delivery_Route_Locations drl ON dr.route_id = drl.route_id
JOIN Order_Deliveries od ON drl.location_code = od.location_code
GROUP BY dr.route_name
ORDER BY delivery_count DESC
LIMIT 1;
```
-------------------------2857 sample_num
```sql
SELECT Addresses.state_province_county, COUNT(Customers.customer_id) AS num_of_customers
FROM Addresses
JOIN Customer_Addresses ON Addresses.address_id = Customer_Addresses.address_id
JOIN Customers ON Customers.customer_id = Customer_Addresses.customer_id
GROUP BY Addresses.state_province_county
ORDER BY num_of_customers DESC;
```
-------------------------2858 sample_num
```sql
SELECT COUNT(*) FROM Authors;
```
-------------------------2859 sample_num
```sql
SELECT COUNT(*) FROM Authors;
```
-------------------------2860 sample_num
```sql
SELECT COUNT(*) FROM Inst;
```
-------------------------2861 sample_num
```sql
SELECT COUNT(*) FROM Inst;
```
-------------------------2862 sample_num
```sql
SELECT COUNT(*) FROM Papers;
```
-------------------------2863 sample_num
```sql
SELECT COUNT(*) FROM Papers;
```
-------------------------2864 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Jeremy' AND au.lname = 'Gibbons';
```
-------------------------2865 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Jeremy' AND au.lname = 'Gibbons';
```
-------------------------2866 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Aaron' AND au.lname = 'Turon';
```
-------------------------2867 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Aaron' AND au.lname = 'Turon';
```
-------------------------2868 sample_num
```sql
SELECT COUNT(Papers.paperID) 
FROM Papers 
JOIN Authorship ON Papers.paperID = Authorship.paperID 
JOIN Authors ON Authorship.authID = Authors.authID 
WHERE Authors.fname = 'Atsushi' AND Authors.lname = 'Ohori';
```
-------------------------2869 sample_num
```sql
SELECT COUNT(*) 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Atsushi' AND au.lname = 'Ohori';
```
-------------------------2870 sample_num
```sql
SELECT Inst.name 
FROM Inst 
JOIN Authors ON Inst.instID = Authors.instID 
WHERE Authors.fname = 'Matthias' AND Authors.lname = 'Blume';
```
-------------------------2871 sample_num
```sql
SELECT Inst.name 
FROM Inst 
JOIN Authors ON Inst.instID = Authors.instID 
WHERE Authors.fname = 'Matthias' AND Authors.lname = 'Blume';
```
```
-------------------------2872 sample_num
```sql
SELECT Inst.name 
FROM Inst 
JOIN Authors ON Inst.instID = Authors.instID 
WHERE Authors.fname = 'Katsuhiro' AND Authors.lname = 'Ueno';
```
-------------------------2873 sample_num
```sql
SELECT Inst.name 
FROM Inst 
JOIN Authors ON Inst.instID = Authors.instID 
WHERE Authors.fname = 'Katsuhiro' AND Authors.lname = 'Ueno';
```
```
-------------------------2874 sample_num
```sql
SELECT Authors.fname, Authors.lname 
FROM Authors 
JOIN Authorship ON Authors.authID = Authorship.authID 
JOIN Inst ON Authorship.instID = Inst.instID 
WHERE Inst.name = 'University of Oxford';
```
-------------------------2875 sample_num
```sql
SELECT Authors.fname, Authors.lname 
FROM Authors 
JOIN Authorship ON Authors.authID = Authorship.authID 
JOIN Inst ON Authorship.instID = Inst.instID 
WHERE Inst.name = 'University of Oxford';
```
-------------------------2876 sample_num
```sql
SELECT Authors.fname, Authors.lname 
FROM Authors 
JOIN Authorship ON Authors.authID = Authorship.authID 
JOIN Inst ON Authorship.instID = Inst.instID 
WHERE Inst.name = 'Google';
```
-------------------------2877 sample_num
```sql
SELECT A.fname, A.lname 
FROM Authors A 
JOIN Authorship AS ON A.authID = AS.authID 
JOIN Inst I ON AS.instID = I.instID 
WHERE I.name = 'Google';
```
-------------------------2878 sample_num
```sql
SELECT Authors.lname 
FROM Authors 
JOIN Authorship ON Authors.authID = Authorship.authID 
JOIN Papers ON Authorship.paperID = Papers.paperID 
WHERE Papers.title = 'Binders Unbound';
```
-------------------------2879 sample_num
```sql
SELECT Authors.lname 
FROM Authors 
JOIN Authorship ON Authors.authID = Authorship.authID 
JOIN Papers ON Authorship.paperID = Papers.paperID 
WHERE Papers.title = 'Binders Unbound';
```
-------------------------2880 sample_num
```sql
SELECT A.fname, A.lname 
FROM Authors A
JOIN Authorship AS 
ON A.authID = AS.authID
JOIN Papers P 
ON AS.paperID = P.paperID
WHERE P.title = 'Nameless, Painless';
```
-------------------------2881 sample_num
```sql
SELECT A.fname, A.lname 
FROM Authors A
JOIN Authorship AS 
ON A.authID = AS.authID
JOIN Papers P 
ON AS.paperID = P.paperID
WHERE P.title = 'Nameless, Painless';
```
-------------------------2882 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Inst i ON a.instID = i.instID 
WHERE i.name = 'Indiana University';
```
-------------------------2883 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Inst i ON a.instID = i.instID 
WHERE i.name = 'Indiana University';
```
-------------------------2884 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Inst i ON a.instID = i.instID 
WHERE i.name = 'Google';
```
-------------------------2885 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Inst i ON a.instID = i.instID 
WHERE i.name = 'Google';
```
-------------------------2886 sample_num
```sql
SELECT COUNT(*) 
FROM Papers p
JOIN Authorship a ON p.paperID = a.paperID
JOIN Inst i ON a.instID = i.instID
WHERE i.name = 'Tokohu University';
```
-------------------------2887 sample_num
```sql
SELECT COUNT(*) 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Inst i ON a.instID = i.instID 
WHERE i.name = 'Tokohu University';
```
-------------------------2888 sample_num
```sql
SELECT COUNT(*) 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Inst i ON a.instID = i.instID 
WHERE i.name = 'University of Pennsylvania';
```
-------------------------2889 sample_num
```sql
SELECT COUNT(DISTINCT p.paperID) 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Inst i ON a.instID = i.instID 
WHERE i.name = 'University of Pennsylvania';
```
-------------------------2890 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Olin' AND au.lname = 'Shivers';
```
-------------------------2891 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Olin' AND au.lname = 'Shivers';
```
-------------------------2892 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Stephanie' AND au.lname = 'Weirich';
```
-------------------------2893 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
WHERE au.fname = 'Stephanie' AND au.lname = 'Weirich';
```
-------------------------2894 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Inst i ON a.instID = i.instID 
JOIN Authors au ON a.authID = au.authID 
WHERE i.country = 'USA' AND au.lname = 'Turon' AND a.authOrder = 2;
```
-------------------------2895 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a1 ON p.paperID = a1.paperID 
JOIN Authors au1 ON a1.authID = au1.authID 
JOIN Inst i ON a1.instID = i.instID 
WHERE a1.authOrder = 2 
AND au1.lname = 'Turon' 
AND i.country = 'USA';
```
-------------------------2896 sample_num
```sql
SELECT p.title 
FROM Papers p 
JOIN Authorship a ON p.paperID = a.paperID 
JOIN Authors au ON a.authID = au.authID 
JOIN Inst i ON a.instID = i.instID 
WHERE a.authOrder = 1 
AND i.country = 'Japan' 
AND au.lname = 'Ohori';
```
-------------------------2897 sample_num
```sql
SELECT P.title 
FROM Papers P 
JOIN Authorship A ON P.paperID = A.paperID 
JOIN Inst I ON A.instID = I.instID 
JOIN Authors Au ON A.authID = Au.authID 
WHERE I.country = 'Japan' AND Au.lname = 'Ohori' AND A.authOrder = 1;
```
-------------------------2898 sample_num
```sql
SELECT a.lname
FROM Authors a
JOIN Authorship au ON a.authID = au.authID
JOIN Papers p ON au.paperID = p.paperID
GROUP BY a.lname
ORDER BY COUNT(p.paperID) DESC
LIMIT 1;
```
-------------------------2899 sample_num
```sql
SELECT Authors.lname 
FROM Authors 
JOIN Authorship ON Authors.authID = Authorship.authID 
GROUP BY Authors.lname 
ORDER BY COUNT(DISTINCT Authorship.paperID) DESC 
LIMIT 1;
```
-------------------------2900 sample_num
```sql
SELECT Inst.country
FROM Inst
JOIN Authorship ON Inst.instID = Authorship.instID
JOIN Papers ON Authorship.paperID = Papers.paperID
GROUP BY Inst.country
ORDER BY COUNT(Papers.paperID) DESC
LIMIT 1;
```
-------------------------2901 sample_num
```sql
SELECT Inst.country, COUNT(Papers.paperID) AS PaperCount
FROM Inst
JOIN Authorship ON Inst.instID = Authorship.instID
JOIN Papers ON Authorship.paperID = Papers.paperID
GROUP BY Inst.country
ORDER BY PaperCount DESC
LIMIT 1;
```
-------------------------2902 sample_num
```sql
SELECT Inst.name FROM Inst 
JOIN Authorship ON Inst.instID = Authorship.instID 
JOIN Papers ON Authorship.paperID = Papers.paperID 
GROUP BY Inst.name 
ORDER BY COUNT(Papers.paperID) DESC 
LIMIT 1;
```
-------------------------2903 sample_num
```sql
SELECT Inst.name 
FROM Inst 
JOIN Authorship ON Inst.instID = Authorship.instID 
JOIN Papers ON Authorship.paperID = Papers.paperID 
GROUP BY Inst.name 
ORDER BY COUNT(Papers.paperID) DESC 
LIMIT 1;
```
-------------------------2904 sample_num
```sql
SELECT title 
FROM Papers 
WHERE title LIKE '%ML%';
```
-------------------------2905 sample_num
```sql
SELECT title FROM Papers WHERE title LIKE '%ML%';
```
-------------------------2906 sample_num
```sql
SELECT title 
FROM Papers 
WHERE title LIKE '%Database%';
```
-------------------------2907 sample_num
```sql
SELECT title 
FROM Papers 
WHERE title LIKE '%Database%';
```
-------------------------2908 sample_num
```sql
SELECT DISTINCT A.fname 
FROM Authors A 
JOIN Authorship AS ON A.authID = AS.authID 
JOIN Papers P ON AS.paperID = P.paperID 
WHERE P.title LIKE '%Functional%';
```
-------------------------2909 sample_num
```sql
SELECT DISTINCT A.fname 
FROM Authors A 
JOIN Authorship AS ON A.authID = AS.authID 
JOIN Papers P ON AS.paperID = P.paperID 
WHERE P.title LIKE '%Functional%';
```
-------------------------2910 sample_num
```sql
SELECT DISTINCT A.lname 
FROM Authors A
JOIN Authorship AS 
JOIN Papers P ON AS.paperID = P.paperID
WHERE P.title LIKE '%Monadic%';
```
-------------------------2911 sample_num
```sql
SELECT DISTINCT A.lname 
FROM Authors A, Papers P, Authorship ASH 
WHERE A.authID = ASH.authID AND 
      P.paperID = ASH.paperID AND 
      P.title LIKE '%Monadic%';
```
-------------------------2912 sample_num
```sql
SELECT P.title 
FROM Papers P 
JOIN Authorship A ON P.paperID = A.paperID 
GROUP BY P.title 
ORDER BY COUNT(A.authID) DESC 
LIMIT 1;
```
-------------------------2913 sample_num
```sql
SELECT P.title 
FROM Papers P 
JOIN Authorship A ON P.paperID = A.paperID 
GROUP BY P.paperID, P.title 
ORDER BY COUNT(A.authID) DESC 
LIMIT 1;
```
-------------------------2914 sample_num
```sql
SELECT fname 
FROM Authors 
WHERE lname = 'Ueno';
```
-------------------------2915 sample_num
```sql
SELECT fname FROM Authors WHERE lname = 'Ueno';
```
-------------------------2916 sample_num
```sql
SELECT lname 
FROM Authors 
WHERE fname = 'Amal';
```
-------------------------2917 sample_num
```sql
SELECT lname 
FROM Authors 
WHERE fname = 'Amal';
```
-------------------------2918 sample_num
```sql
SELECT fname 
FROM Authors 
ORDER BY fname ASC;
```
-------------------------2919 sample_num
```sql
SELECT fname 
FROM Authors 
ORDER BY fname ASC;
```
-------------------------2920 sample_num
```sql
SELECT DISTINCT Authors.lname 
FROM Authors 
ORDER BY Authors.lname ASC;
```
-------------------------2921 sample_num
```sql
SELECT DISTINCT lname 
FROM Authors 
ORDER BY lname ASC;
```
-------------------------2922 sample_num
```sql
SELECT fname, lname 
FROM Authors 
ORDER BY lname, fname;
```
-------------------------2923 sample_num
```sql
SELECT fname, lname 
FROM Authors 
ORDER BY lname, fname;
```
-------------------------2924 sample_num
```sql
SELECT COUNT(DISTINCT last_name) FROM actor;
```
-------------------------2925 sample_num
```sql
SELECT COUNT(DISTINCT last_name) FROM actor;
```
-------------------------2926 sample_num
```sql
SELECT actor.first_name, COUNT(*) as count 
FROM actor 
GROUP BY actor.first_name 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------2927 sample_num
```sql
SELECT first_name, COUNT(*) as count 
FROM actor 
GROUP BY first_name 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------2928 sample_num
```sql
SELECT T1.first_name, T1.last_name, COUNT(*) AS popularity 
FROM actor AS T1 
JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id 
GROUP BY T1.actor_id 
ORDER BY popularity DESC 
LIMIT 1;
```
-------------------------2929 sample_num
```sql
SELECT first_name, last_name 
FROM actor 
GROUP BY first_name, last_name 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------2930 sample_num
```sql
SELECT district 
FROM address 
GROUP BY district 
HAVING COUNT(address_id) >= 2;
```
-------------------------2931 sample_num
```sql
SELECT district 
FROM address 
GROUP BY district 
HAVING COUNT(address_id) >= 2;
```
-------------------------2932 sample_num
```sql
SELECT phone, postal_code FROM address WHERE address = '1031 Daugavpils Parkway';
```
-------------------------2933 sample_num
```sql
SELECT T1.phone, T1.postal_code 
FROM address AS T1 
JOIN city AS T2 ON T1.city_id = T2.city_id 
JOIN country AS T3 ON T2.country_id = T3.country_id 
WHERE T1.address = '1031 Daugavpils Parkway';
```
-------------------------2934 sample_num
```sql
SELECT T2.city, COUNT(T1.address_id) AS num_addresses, T2.city_id
FROM address AS T1
JOIN city AS T2 ON T1.city_id = T2.city_id
GROUP BY T2.city_id
ORDER BY num_addresses DESC
LIMIT 1;
```
-------------------------2935 sample_num
```sql
SELECT T1.city, T1.city_id, COUNT(T2.address_id) 
FROM city AS T1 
JOIN address AS T2 ON T1.city_id = T2.city_id 
GROUP BY T1.city_id 
ORDER BY COUNT(T2.address_id) DESC 
LIMIT 1;
```
-------------------------2936 sample_num
```sql
SELECT COUNT(*) FROM address WHERE district = 'California';
```
-------------------------2937 sample_num
```sql
SELECT COUNT(*) FROM address WHERE district = 'California';
```
-------------------------2938 sample_num
```sql
SELECT f.title, f.film_id 
FROM film f 
JOIN inventory i ON f.film_id = i.film_id 
WHERE f.rental_rate = 0.99 
GROUP BY f.film_id 
HAVING COUNT(i.inventory_id) < 3;
```
-------------------------2939 sample_num
```sql
SELECT f.title, f.film_id 
FROM film f 
JOIN inventory i ON f.film_id = i.film_id 
WHERE f.rental_rate = 0.99 
GROUP BY f.film_id 
HAVING COUNT(i.inventory_id) < 3;
```
-------------------------2940 sample_num
```sql
SELECT COUNT(*) 
FROM city 
JOIN country ON city.country_id = country.country_id 
WHERE country.country = 'Australia';
```
-------------------------2941 sample_num
```sql
SELECT COUNT(*) FROM city WHERE country_id = (SELECT country_id FROM country WHERE country = 'Australia');
```
-------------------------2942 sample_num
```sql
SELECT c.country
FROM country c
JOIN city ci ON c.country_id = ci.country_id
GROUP BY c.country
HAVING COUNT(ci.city_id) >= 3;
```
-------------------------2943 sample_num
```sql
SELECT c.country
FROM country c
JOIN city ci ON c.country_id = ci.country_id
GROUP BY c.country
HAVING COUNT(ci.city_id) >= 3;
```
-------------------------2944 sample_num
```sql
SELECT payment_date 
FROM payment 
WHERE amount > 10 
OR staff_id IN (SELECT staff_id FROM staff WHERE first_name = 'Elsa');
```
Note: The OR operator should be replaced by AND if you want to find the payments that satisfy both conditions.
```sql
SELECT payment_date 
FROM payment 
WHERE amount > 10 
AND staff_id IN (SELECT staff_id FROM staff WHERE first_name = 'Elsa');
```
-------------------------2945 sample_num
```sql
SELECT payment_date 
FROM payment 
WHERE amount > 10 OR staff_id IN (SELECT staff_id FROM staff WHERE first_name = 'Elsa')
``` 
However, to ensure that we're not including payments where the staff first name is Elsa AND the amount is less than or equal to 10, it would be better to use a join or change the OR to an AND. Here's how to do it with a join:

```sql
SELECT p.payment_date 
FROM payment p
JOIN staff s ON p.staff_id = s.staff_id 
WHERE p.amount > 10 OR s.first_name = 'Elsa'
```
Or, if you want only payments where either condition is met individually:

```sql
SELECT payment_date 
FROM payment 
WHERE amount > 10 
UNION 
SELECT payment_date 
FROM payment 
WHERE staff_id IN (SELECT staff_id FROM staff WHERE first_name = 'Elsa')
```

But, usually the correct interpretation of your question would be:

```sql
SELECT payment_date 
FROM payment 
JOIN staff ON payment.staff_id = staff.staff_id 
WHERE amount > 10 AND staff.first_name = 'Elsa'
```
-------------------------2946 sample_num
```sql
SELECT COUNT(*) FROM customer WHERE active = 1;
```
-------------------------2947 sample_num
```sql
SELECT COUNT(*) FROM customer WHERE active = 1;
```
-------------------------2948 sample_num
```sql
SELECT title, MAX(rental_rate) FROM film;
```

However, to correctly get the film with the highest rental rate, you should use subquery or ranking function because the above query doesn't guarantee to return the film title with the highest rental rate due to its grouping mechanism. Here is the correct one:

```sql
SELECT title, rental_rate FROM film 
WHERE rental_rate = (SELECT MAX(rental_rate) FROM film);
```
-------------------------2949 sample_num
```sql
SELECT title, rental_rate FROM film WHERE rental_rate = (SELECT MAX(rental_rate) FROM film);
```
-------------------------2950 sample_num
```sql
SELECT f.title, f.film_id, f.description
FROM film f
JOIN film_actor fa ON f.film_id = fa.film_id
GROUP BY f.film_id
ORDER BY COUNT(fa.actor_id) DESC
LIMIT 1;
```
-------------------------2951 sample_num
```sql
SELECT f.title, f.film_id, f.description 
FROM film f
JOIN film_actor fa ON f.film_id = fa.film_id
GROUP BY f.film_id
ORDER BY COUNT(fa.actor_id) DESC
LIMIT 1;
```
-------------------------2952 sample_num
```sql
SELECT A.first_name, A.last_name, A.actor_id
FROM actor A
JOIN film_actor FA ON A.actor_id = FA.actor_id
GROUP BY A.actor_id
ORDER BY COUNT(FA.film_id) DESC
LIMIT 1;
```
-------------------------2953 sample_num
```sql
SELECT A.actor_id, A.first_name, A.last_name 
FROM actor A 
JOIN film_actor FA ON A.actor_id = FA.actor_id 
GROUP BY A.actor_id, A.first_name, A.last_name 
ORDER BY COUNT(FA.film_id) DESC 
LIMIT 1;
```
-------------------------2954 sample_num
```sql
SELECT a.first_name, a.last_name 
FROM actor a 
JOIN film_actor fa ON a.actor_id = fa.actor_id 
GROUP BY a.actor_id 
HAVING COUNT(fa.film_id) > 30;
```
-------------------------2955 sample_num
```sql
SELECT T1.first_name, T1.last_name 
FROM actor AS T1 
JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id 
GROUP BY T1.actor_id 
HAVING COUNT(T2.film_id) > 30;
```
-------------------------2956 sample_num
```sql
SELECT store_id, COUNT(*) as num_items 
FROM inventory 
GROUP BY store_id 
ORDER BY num_items DESC 
LIMIT 1;
```
-------------------------2957 sample_num
```sql
SELECT store_id, COUNT(*) as inventory_count 
FROM inventory 
GROUP BY store_id 
ORDER BY inventory_count DESC 
LIMIT 1;
```
-------------------------2958 sample_num
```sql
SELECT SUM(amount) FROM payment;
```
-------------------------2959 sample_num
```sql
SELECT SUM(amount) FROM payment;
```
-------------------------2960 sample_num
```sql
SELECT c.first_name, c.last_name, c.customer_id 
FROM customer c
JOIN payment p ON c.customer_id = p.customer_id 
GROUP BY c.customer_id, c.first_name, c.last_name 
ORDER BY SUM(p.amount) ASC 
LIMIT 1;
```
-------------------------2961 sample_num
```sql
SELECT T1.customer_id, T1.first_name, T1.last_name FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY SUM(T2.amount) ASC LIMIT 1;
```
-------------------------2962 sample_num
```sql
SELECT c.name 
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
WHERE f.title = 'HUNGER ROOF'
```
-------------------------2963 sample_num
```sql
SELECT c.name 
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
WHERE f.title = 'HUNGER ROOF'
```
-------------------------2964 sample_num
```sql
SELECT c.name AS genre_name, c.category_id AS genre_id, COUNT(fc.film_id) AS film_count
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
GROUP BY c.category_id;
```
-------------------------2965 sample_num
```sql
SELECT c.name, c.category_id, COUNT(fc.film_id) AS num_films
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
GROUP BY c.category_id, c.name;
```
-------------------------2966 sample_num
```sql
SELECT f.title, f.film_id 
FROM film f 
JOIN inventory i ON f.film_id = i.film_id 
GROUP BY f.film_id 
ORDER BY COUNT(i.inventory_id) DESC 
LIMIT 1;
```
-------------------------2967 sample_num
```sql
SELECT f.title, f.film_id 
FROM film f 
JOIN inventory i ON f.film_id = i.film_id 
GROUP BY f.film_id 
ORDER BY COUNT(i.inventory_id) DESC 
LIMIT 1;
```
-------------------------2968 sample_num
```sql
SELECT film.title, inventory.inventory_id 
FROM inventory 
JOIN film ON inventory.film_id = film.film_id 
WHERE inventory.inventory_id IN (
    SELECT rental.inventory_id 
    FROM rental 
    GROUP BY rental.inventory_id 
    ORDER BY COUNT(rental.inventory_id) DESC 
    LIMIT 1
)
```
-------------------------2969 sample_num
```sql
SELECT f.title, i.inventory_id 
FROM film f 
JOIN inventory i ON f.film_id = i.film_id 
JOIN rental r ON i.inventory_id = r.inventory_id 
GROUP BY i.inventory_id, f.title 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------2970 sample_num
```sql
SELECT COUNT(DISTINCT language_id) FROM film;
```
-------------------------2971 sample_num
```sql
SELECT COUNT(DISTINCT language_id) FROM film;
```
-------------------------2972 sample_num
```sql
SELECT title FROM film WHERE rating = 'R';
```
-------------------------2973 sample_num
```sql
SELECT title 
FROM film 
WHERE rating = 'R';
```
-------------------------2974 sample_num
```sql
SELECT address, district FROM sakila_1.address WHERE address_id = (SELECT address_id FROM sakila_1.store WHERE store_id = 1);
```
-------------------------2975 sample_num
```sql
SELECT T1.address FROM address AS T1 JOIN store AS T2 ON T1.address_id = T2.address_id WHERE T2.store_id = 1;
```
-------------------------2976 sample_num
```sql
SELECT staff_id, CONCAT(first_name, ' ', last_name) AS full_name 
FROM staff 
WHERE staff_id = (
    SELECT staff_id 
    FROM payment 
    GROUP BY staff_id 
    ORDER BY COUNT(*) 
    LIMIT 1
)
```
-------------------------2977 sample_num
```sql
SELECT s.staff_id, CONCAT(s.first_name, ' ', s.last_name) AS full_name 
FROM staff s
JOIN payment p ON s.staff_id = p.staff_id
GROUP BY s.staff_id
ORDER BY COUNT(p.payment_id) ASC
LIMIT 1;
```
-------------------------2978 sample_num
```sql
SELECT T2.name FROM film AS T1 JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK'
```
-------------------------2979 sample_num
```sql
SELECT T2.name FROM film AS T1 JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'AIRPORT POLLOCK'
```
-------------------------2980 sample_num
```sql
SELECT COUNT(*) FROM store;
```
-------------------------2981 sample_num
```sql
SELECT COUNT(*) FROM store;
```
-------------------------2982 sample_num
```sql
SELECT COUNT(DISTINCT rating) FROM sakila_1.film;
```
-------------------------2983 sample_num
```sql
SELECT COUNT(DISTINCT rating) FROM sakila_1.film;
```
-------------------------2984 sample_num
```sql
SELECT title FROM sakila_1.film WHERE special_features LIKE '%Deleted Scenes%';
```
-------------------------2985 sample_num
```sql
SELECT title 
FROM film 
WHERE special_features LIKE '%Deleted Scenes%';
```
-------------------------2986 sample_num
```sql
SELECT COUNT(*) FROM inventory WHERE store_id = 1;
```
-------------------------2987 sample_num
```sql
SELECT COUNT(*) FROM inventory WHERE store_id = 1;
```
-------------------------2988 sample_num
```sql
SELECT MIN(payment_date) FROM payment;
```
-------------------------2989 sample_num
```sql
SELECT MIN(payment_date) FROM payment;
```
-------------------------2990 sample_num
```sql
SELECT T2.address, T1.email 
FROM customer AS T1 
JOIN address AS T2 
ON T1.address_id = T2.address_id 
WHERE T1.first_name = 'Linda';
```
-------------------------2991 sample_num
```sql
SELECT T2.address, T1.email 
FROM customer AS T1 
JOIN address AS T2 
ON T1.address_id = T2.address_id 
WHERE T1.first_name = 'Linda';
```
-------------------------2992 sample_num
```sql
SELECT title 
FROM film 
WHERE length > 100 OR rating = 'PG' 
EXCEPT 
SELECT title 
FROM film 
WHERE replacement_cost > 200;
```
-------------------------2993 sample_num
```sql
SELECT title 
FROM film 
WHERE (length > 100 OR rating = 'PG') AND replacement_cost <= 200;
```
-------------------------2994 sample_num
```sql
SELECT T1.first_name, T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1;
```
-------------------------2995 sample_num
```sql
SELECT c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
ORDER BY r.rental_date ASC
LIMIT 1;
```
-------------------------2996 sample_num
```sql
SELECT s.first_name, s.last_name 
FROM staff s 
JOIN rental r ON s.staff_id = r.staff_id 
JOIN customer c ON r.customer_id = c.customer_id 
WHERE c.first_name = 'April' AND c.last_name = 'Burns';
```
-------------------------2997 sample_num
```sql
SELECT s.first_name, s.last_name 
FROM staff s
JOIN rental r ON s.staff_id = r.staff_id
JOIN customer c ON r.customer_id = c.customer_id
WHERE c.first_name = 'April' AND c.last_name = 'Burns'
LIMIT 1;
```
```
-------------------------2998 sample_num
```sql
SELECT store_id, COUNT(customer_id) as customer_count 
FROM customer 
GROUP BY store_id 
ORDER BY customer_count DESC 
LIMIT 1;
```
-------------------------2999 sample_num
```sql
SELECT store_id 
FROM customer 
GROUP BY store_id 
ORDER BY COUNT(customer_id) DESC 
LIMIT 1;
```
-------------------------3000 sample_num
```sql
SELECT MAX(amount) FROM payment;
```
-------------------------3001 sample_num
```sql
SELECT MAX(amount) FROM payment;
```
-------------------------3002 sample_num
```sql
SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'
```
-------------------------3003 sample_num
```sql
SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'
```
-------------------------3004 sample_num
```sql
SELECT first_name 
FROM customer 
WHERE customer_id NOT IN (
    SELECT customer_id 
    FROM rental 
    WHERE rental_date > '2005-08-23 02:06:01'
);
```
-------------------------3005 sample_num
```sql
SELECT DISTINCT c.first_name 
FROM customer c
WHERE c.customer_id NOT IN (
    SELECT r.customer_id 
    FROM rental r 
    WHERE r.rental_date > '2005-08-23 02:06:01'
);
```
-------------------------3006 sample_num
```sql
SELECT COUNT(*) FROM bank
```
-------------------------3007 sample_num
```sql
SELECT COUNT(*) FROM bank;
```
-------------------------3008 sample_num
```sql
SELECT SUM(no_of_customers) FROM bank;
```
Note: This assumes that the `no_of_customers` column in the `bank` table represents the total number of customers for each branch. If the `customer` table contains individual customer records, the query would be:
```sql
SELECT COUNT(*) FROM customer;
```
-------------------------3009 sample_num
```sql
SELECT SUM(no_of_customers) FROM bank;
```
-------------------------3010 sample_num
```sql
SELECT SUM(no_of_customers) 
FROM bank 
WHERE city = 'New York City';
```
-------------------------3011 sample_num
```sql
SELECT SUM(no_of_customers) 
FROM bank 
WHERE city = 'New York City';
```
-------------------------3012 sample_num
```sql
SELECT AVG(no_of_customers) 
FROM bank 
WHERE state = 'Utah';
```
-------------------------3013 sample_num
```sql
SELECT AVG(no_of_customers) 
FROM bank 
WHERE state = 'Utah';
```
-------------------------3014 sample_num
```sql
SELECT AVG(no_of_customers) FROM bank;
```
-------------------------3015 sample_num
```sql
SELECT AVG(no_of_customers) FROM bank;
```
-------------------------3016 sample_num
```sql
SELECT city, state 
FROM bank 
WHERE bname = 'morningside';
```
-------------------------3017 sample_num
```sql
SELECT city, state 
FROM bank 
WHERE bname = 'morningside';
```
-------------------------3018 sample_num
```sql
SELECT bname 
FROM bank 
WHERE state = 'New York';
```
-------------------------3019 sample_num
```sql
SELECT bname 
FROM bank 
WHERE state = 'New York';
```
-------------------------3020 sample_num
```sql
SELECT cust_name 
FROM customer 
ORDER BY acc_bal ASC;
```
-------------------------3021 sample_num
```sql
SELECT cust_name 
FROM customer 
ORDER BY acc_bal;
```
-------------------------3022 sample_num
```sql
SELECT c.cust_name, SUM(l.amount) as total_loan_amount 
FROM customer c 
JOIN loan l ON c.cust_ID = l.cust_ID 
GROUP BY c.cust_name 
ORDER BY total_loan_amount;
```
-------------------------3023 sample_num
```sql
SELECT c.cust_name 
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID 
GROUP BY c.cust_name 
ORDER BY SUM(l.amount) DESC;
```
-------------------------3024 sample_num
```sql
SELECT T1.state, T1.acc_type, T1.credit_score 
FROM customer AS T1 
WHERE T1.no_of_loans = 0;
```
-------------------------3025 sample_num
```sql
SELECT T1.state, T1.acc_type, T1.credit_score 
FROM customer AS T1 
WHERE T1.cust_ID NOT IN (SELECT T2.cust_ID FROM loan AS T2)
AND T1.no_of_loans = 0;
```
-------------------------3026 sample_num
```sql
SELECT COUNT(DISTINCT city) FROM bank;
```
-------------------------3027 sample_num
```sql
SELECT COUNT(DISTINCT city) FROM bank;
```
-------------------------3028 sample_num
```sql
SELECT COUNT(DISTINCT state) 
FROM bank;
```
-------------------------3029 sample_num
```sql
SELECT COUNT(DISTINCT state) FROM bank;
```
-------------------------3030 sample_num
```sql
SELECT COUNT(DISTINCT acc_type) FROM customer;
```
-------------------------3031 sample_num
```sql
SELECT COUNT(DISTINCT acc_type) FROM customer;
```
-------------------------3032 sample_num
```sql
SELECT cust_name, acc_bal 
FROM customer 
WHERE cust_name LIKE '%a%';
```
-------------------------3033 sample_num
```sql
SELECT cust_name, acc_bal 
FROM customer 
WHERE cust_name LIKE '%a%';
```
-------------------------3034 sample_num
```sql
SELECT cust_name, SUM(acc_bal) as total_acc_balance
FROM customer
WHERE state IN ('Utah', 'Texas')
GROUP BY cust_name;
```
-------------------------3035 sample_num
```sql
SELECT cust_name, SUM(acc_bal) 
FROM customer 
WHERE state IN ('Utah', 'Texas') 
GROUP BY cust_name;
```
-------------------------3036 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE acc_type = 'saving' 
INTERSECT 
SELECT cust_name 
FROM customer 
WHERE acc_type = 'checking'
```
-------------------------3037 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE acc_type = 'savings' 
INTERSECT 
SELECT cust_name 
FROM customer 
WHERE acc_type = 'checking'
```
-------------------------3038 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE acc_type != 'saving';
```
-------------------------3039 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE acc_type != 'saving'
```
```
-------------------------3040 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE cust_ID NOT IN (SELECT cust_ID FROM loan WHERE loan_type = 'Mortgages');
```
-------------------------3041 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE cust_ID NOT IN (SELECT cust_ID FROM loan WHERE loan_type = 'Mortgage')
```
-------------------------3042 sample_num
```sql
SELECT c.cust_name 
FROM customer c
JOIN loan l1 ON c.cust_ID = l1.cust_ID 
WHERE l1.loan_type = 'Mortgages'
INTERSECT
SELECT c.cust_name 
FROM customer c
JOIN loan l2 ON c.cust_ID = l2.cust_ID 
WHERE l2.loan_type = 'Auto'
```
-------------------------3043 sample_num
```sql
SELECT c.cust_name 
FROM customer c
JOIN loan l1 ON c.cust_ID = l1.cust_ID 
JOIN loan l2 ON c.cust_ID = l2.cust_ID 
WHERE l1.loan_type = 'Mortgage' AND l2.loan_type = 'Auto'
GROUP BY c.cust_name
HAVING COUNT(DISTINCT l1.loan_type) > 1;
```
-------------------------3044 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE credit_score < (SELECT AVG(credit_score) FROM customer)
```
-------------------------3045 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE credit_score < (SELECT AVG(credit_score) FROM customer)
```
-------------------------3046 sample_num
```sql
SELECT bname 
FROM bank 
WHERE no_of_customers = (SELECT MAX(no_of_customers) FROM bank);
```
-------------------------3047 sample_num
```sql
SELECT bname 
FROM bank 
ORDER BY no_of_customers DESC 
LIMIT 1;
```
-------------------------3048 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE credit_score = (SELECT MIN(credit_score) FROM customer)
```
-------------------------3049 sample_num
```sql
SELECT cust_name 
FROM customer 
WHERE credit_score = (SELECT MIN(credit_score) FROM customer)
```
-------------------------3050 sample_num
```sql
SELECT cust_name, acc_type, acc_bal 
FROM customer 
WHERE credit_score = (SELECT MAX(credit_score) FROM customer);
```
-------------------------3051 sample_num
```sql
SELECT cust_name, acc_type, acc_bal 
FROM customer 
WHERE credit_score = (SELECT MAX(credit_score) FROM customer);
```
-------------------------3052 sample_num
```sql
SELECT c.cust_name 
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID 
GROUP BY c.cust_name
ORDER BY SUM(l.amount) DESC
LIMIT 1;
```
-------------------------3053 sample_num
```sql
SELECT c.cust_name 
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID 
GROUP BY c.cust_name
ORDER BY SUM(l.amount) DESC
LIMIT 1;
```
-------------------------3054 sample_num
```sql
SELECT state, COUNT(*) AS num_customers
FROM customer
GROUP BY state
ORDER BY num_customers DESC
LIMIT 1;
```
-------------------------3055 sample_num
```sql
SELECT state, SUM(no_of_customers) AS total_customers
FROM bank
GROUP BY state
ORDER BY total_customers DESC
LIMIT 1;
```
-------------------------3056 sample_num
```sql
SELECT acc_type, AVG(acc_bal) 
FROM customer 
WHERE credit_score < 50 
GROUP BY acc_type;
```
-------------------------3057 sample_num
```sql
SELECT acc_type, AVG(acc_bal) 
FROM customer 
WHERE credit_score < 50 
GROUP BY acc_type;
```
-------------------------3058 sample_num
```sql
SELECT state, SUM(acc_bal) 
FROM customer 
WHERE credit_score > 100 
GROUP BY state;
```
-------------------------3059 sample_num
```sql
SELECT state, SUM(acc_bal) 
FROM customer 
WHERE credit_score > 100 
GROUP BY state;
```
-------------------------3060 sample_num
```sql
SELECT b.branch_ID, b.bname, SUM(l.amount) as total_loan_amount 
FROM bank b 
JOIN loan l ON b.branch_ID = l.branch_ID 
GROUP BY b.branch_ID, b.bname;
```
-------------------------3061 sample_num
```sql
SELECT b.bname, SUM(l.amount) as total_loan_amount
FROM bank b
JOIN loan l ON b.branch_ID = l.branch_ID
GROUP BY b.bname;
```
-------------------------3062 sample_num
```sql
SELECT c.cust_name
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID
GROUP BY c.cust_ID, c.cust_name
HAVING COUNT(l.loan_ID) > 1;
```
-------------------------3063 sample_num
```sql
SELECT c.cust_name
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID
GROUP BY c.cust_ID, c.cust_name
HAVING COUNT(l.loan_ID) > 1;
```
-------------------------3064 sample_num
```sql
SELECT c.cust_name, c.acc_bal 
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID 
GROUP BY c.cust_ID, c.cust_name, c.acc_bal 
HAVING SUM(l.amount) > 5000;
```
-------------------------3065 sample_num
```sql
SELECT c.cust_name, c.acc_bal 
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID
GROUP BY c.cust_ID, c.cust_name, c.acc_bal
HAVING SUM(l.amount) > 5000;
```
-------------------------3066 sample_num
```sql
SELECT b.bname 
FROM bank b
JOIN loan l ON b.branch_ID = l.branch_ID 
GROUP BY b.bname
ORDER BY SUM(l.amount) DESC
LIMIT 1;
```
-------------------------3067 sample_num
```sql
SELECT bname 
FROM bank 
WHERE branch_ID = (
    SELECT branch_ID 
    FROM loan 
    GROUP BY branch_ID 
    ORDER BY SUM(amount) DESC 
    LIMIT 1
)
```
-------------------------3068 sample_num
```sql
SELECT b.bname 
FROM bank b 
JOIN loan l ON b.branch_ID = l.branch_ID 
WHERE l.cust_ID IN (SELECT c.cust_ID FROM customer c WHERE c.credit_score < 100) 
GROUP BY b.bname 
ORDER BY SUM(l.amount) DESC 
LIMIT 1;
```
-------------------------3069 sample_num
```sql
SELECT b.bname 
FROM bank b 
JOIN loan l ON b.branch_ID = l.branch_ID 
WHERE l.cust_ID IN (SELECT c.cust_ID FROM customer c WHERE c.credit_score < 100) 
GROUP BY b.bname 
ORDER BY SUM(l.amount) DESC 
LIMIT 1;
```
-------------------------3070 sample_num
```sql
SELECT DISTINCT bname 
FROM bank 
WHERE branch_ID IN (SELECT DISTINCT branch_ID FROM loan);
```
-------------------------3071 sample_num
```sql
SELECT DISTINCT bname 
FROM bank 
WHERE branch_ID IN (SELECT DISTINCT branch_ID FROM loan);
```
-------------------------3072 sample_num
```sql
SELECT c.cust_name, c.credit_score 
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID;
```
-------------------------3073 sample_num
```sql
SELECT DISTINCT c.cust_name, c.credit_score 
FROM customer AS c 
JOIN loan AS l ON c.cust_ID = l.cust_ID;
```
-------------------------3074 sample_num
```sql
SELECT c.cust_name 
FROM customer c 
JOIN loan l ON c.cust_ID = l.cust_ID 
WHERE l.amount > 3000;
```
-------------------------3075 sample_num
```sql
SELECT c.cust_name 
FROM customer c 
JOIN loan l ON c.cust_ID = l.cust_ID 
WHERE l.amount > 3000;
```
-------------------------3076 sample_num
```sql
SELECT b.city, b.bname 
FROM bank AS b
JOIN loan AS l ON b.branch_ID = l.branch_ID 
WHERE l.loan_type = 'business';
```
-------------------------3077 sample_num
```sql
SELECT DISTINCT b.bname, b.city 
FROM bank AS b
JOIN loan AS l ON b.branch_ID = l.branch_ID
WHERE l.loan_type = 'business';
```
-------------------------3078 sample_num
```sql
SELECT DISTINCT bname 
FROM bank 
WHERE branch_ID IN (
    SELECT branch_ID 
    FROM loan 
    WHERE cust_ID IN (
        SELECT cust_ID 
        FROM customer 
        WHERE credit_score < 100
    )
);
```
-------------------------3079 sample_num
```sql
SELECT DISTINCT bname 
FROM bank 
WHERE branch_ID IN (
    SELECT branch_ID 
    FROM loan 
    WHERE cust_ID IN (
        SELECT cust_ID 
        FROM customer 
        WHERE credit_score < 100
    )
);
```
-------------------------3080 sample_num
```sql
SELECT SUM(amount) 
FROM loan 
WHERE branch_ID IN (SELECT branch_ID FROM bank WHERE state = 'New York');
```
-------------------------3081 sample_num
```sql
SELECT SUM(amount) 
FROM loan 
JOIN bank ON loan.branch_ID = bank.branch_ID 
WHERE bank.state = 'New York';
```
-------------------------3082 sample_num
```sql
SELECT AVG(credit_score) 
FROM customer 
WHERE cust_ID IN (SELECT cust_ID FROM loan);
```
-------------------------3083 sample_num
```sql
SELECT AVG(c.credit_score)
FROM customer c
JOIN loan l ON c.cust_ID = l.cust_ID;
```
-------------------------3084 sample_num
```sql
SELECT AVG(credit_score) 
FROM customer 
WHERE cust_ID NOT IN (SELECT DISTINCT cust_ID FROM loan);
```
-------------------------3085 sample_num
```sql
SELECT AVG(credit_score) 
FROM customer 
WHERE cust_ID NOT IN (SELECT DISTINCT cust_ID FROM loan);
```
-------------------------3086 sample_num
```sql
SELECT COUNT(*) FROM Assessment_Notes;
```
-------------------------3087 sample_num
```sql
SELECT date_of_notes FROM Assessment_Notes;
```
-------------------------3088 sample_num
```sql
SELECT COUNT(*) FROM Addresses WHERE zip_postcode = 197;
```
-------------------------3089 sample_num
```sql
SELECT COUNT(DISTINCT incident_type_code) FROM Ref_Incident_Type;
```
-------------------------3090 sample_num
```sql
SELECT DISTINCT detention_type_code FROM Ref_Detention_Type;
```
-------------------------3091 sample_num
```sql
SELECT date_incident_start, date_incident_end 
FROM Behavior_Incident 
WHERE incident_type_code = 'NOISE';
```
-------------------------3092 sample_num
```sql
SELECT detention_summary FROM Detention;
```
-------------------------3093 sample_num
```sql
SELECT cell_mobile_number, email_address FROM Students;
```
-------------------------3094 sample_num
```sql
SELECT email_address 
FROM Students 
WHERE first_name = 'Emma' AND last_name = 'Rohan';
```
-------------------------3095 sample_num
```sql
SELECT COUNT(DISTINCT student_id) 
FROM Students_in_Detention;
```
-------------------------3096 sample_num
```sql
SELECT gender FROM Teachers WHERE last_name = 'Medhurst';
```
-------------------------3097 sample_num
```sql
SELECT incident_type_description 
FROM Ref_Incident_Type 
WHERE incident_type_code = 'VIOLENCE';
```
-------------------------3098 sample_num
```sql
SELECT MAX(monthly_rental) as max_monthly_rental, MIN(monthly_rental) as min_monthly_rental 
FROM Student_Addresses;
```
-------------------------3099 sample_num
```sql
SELECT first_name 
FROM Teachers 
WHERE email_address LIKE '%man%';
```
-------------------------3100 sample_num
```sql
SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC;
```
-------------------------3101 sample_num
```sql
SELECT DISTINCT city FROM Addresses ORDER BY city ASC;
```
-------------------------3102 sample_num
```sql
SELECT first_name, last_name 
FROM Teachers 
ORDER BY last_name ASC;
```
-------------------------3103 sample_num
```sql
SELECT sa.*, a.*
FROM Student_Addresses sa
JOIN Addresses a ON sa.address_id = a.address_id
ORDER BY sa.monthly_rental DESC;
```
-------------------------3104 sample_num
```sql
SELECT T1.student_id, T2.first_name 
FROM Assessment_Notes AS T1 
JOIN Students AS T2 ON T1.student_id = T2.student_id 
GROUP BY T1.student_id 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3105 sample_num
```sql
SELECT T1.teacher_id, T1.first_name
FROM Teachers AS T1
JOIN Assessment_Notes AS T2 ON T1.teacher_id = T2.teacher_id
GROUP BY T1.teacher_id, T1.first_name
ORDER BY COUNT(T2.notes_id) DESC
LIMIT 3;
```
-------------------------3106 sample_num
```sql
SELECT T1.student_id, T2.last_name 
FROM Behavior_Incident AS T1 
JOIN Students AS T2 
ON T1.student_id = T2.student_id 
GROUP BY T1.student_id 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3107 sample_num
```sql
SELECT T1.teacher_id, T1.last_name 
FROM Teachers AS T1 
JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id 
WHERE T2.detention_type_code = 'AFTER' 
GROUP BY T1.teacher_id, T1.last_name 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3108 sample_num
```sql
SELECT S.student_id, S.first_name 
FROM Students S
JOIN Student_Addresses SA ON S.student_id = SA.student_id
GROUP BY S.student_id, S.first_name
ORDER BY AVG(SA.monthly_rental) DESC
LIMIT 1;
```
-------------------------3109 sample_num
```sql
SELECT sa.student_id, a.city 
FROM Student_Addresses sa 
JOIN Addresses a ON sa.address_id = a.address_id 
GROUP BY sa.student_id, a.city 
ORDER BY AVG(sa.monthly_rental) DESC 
LIMIT 1;
```
-------------------------3110 sample_num
```sql
SELECT T1.incident_type_code, T2.incident_type_description 
FROM Behavior_Incident AS T1 
JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code 
GROUP BY T1.incident_type_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3111 sample_num
```sql
SELECT T1.detention_type_code, T1.detention_type_description 
FROM Ref_Detention_Type AS T1 
JOIN Detention AS T2 ON T1.detention_type_code = T2.detention_type_code 
GROUP BY T1.detention_type_code 
ORDER BY COUNT(T2.detention_id) 
LIMIT 1;
```
-------------------------3112 sample_num
```sql
SELECT date_of_notes 
FROM Assessment_Notes 
WHERE student_id IN (
    SELECT student_id 
    FROM Students 
    WHERE first_name = 'Fanny'
);
```
-------------------------3113 sample_num
```sql
SELECT Assessment_Notes.text_of_notes 
FROM Assessment_Notes 
JOIN Teachers ON Assessment_Notes.teacher_id = Teachers.teacher_id 
WHERE Teachers.last_name = 'Schuster';
```
-------------------------3114 sample_num
```sql
SELECT date_incident_start, date_incident_end 
FROM Behavior_Incident 
WHERE student_id IN (SELECT student_id FROM Students WHERE last_name = 'Fahey');
```
-------------------------3115 sample_num
```sql
SELECT D.datetime_detention_start, D.datetime_detention_end 
FROM Detention D
JOIN Teachers T ON D.teacher_id = T.teacher_id
WHERE T.last_name = 'Schultz';
```
-------------------------3116 sample_num
```sql
SELECT sa.student_id, a.zip_postcode 
FROM Student_Addresses sa 
JOIN Addresses a ON sa.address_id = a.address_id 
WHERE sa.monthly_rental = (SELECT MAX(monthly_rental) FROM Student_Addresses)
```
However, for more accurate results, you might want to consider:
```sql
SELECT a.address_id, a.zip_postcode 
FROM Addresses a 
JOIN Student_Addresses sa ON a.address_id = sa.address_id 
WHERE sa.monthly_rental = (SELECT MAX(monthly_rental) FROM Student_Addresses)
```
-------------------------3117 sample_num
```sql
SELECT S.cell_mobile_number 
FROM Students S
JOIN Student_Addresses SA ON S.student_id = SA.student_id
WHERE SA.monthly_rental = (SELECT MIN(monthly_rental) FROM Student_Addresses)
```
```
-------------------------3118 sample_num
```sql
SELECT sa.monthly_rental 
FROM Student_Addresses sa 
JOIN Addresses a ON sa.address_id = a.address_id 
WHERE a.state_province_county = 'Texas';
```
-------------------------3119 sample_num
```sql
SELECT s.first_name, s.last_name 
FROM Students s
JOIN Addresses a ON s.address_id = a.address_id
WHERE a.state_province_county = 'Wisconsin';
```
-------------------------3120 sample_num
```sql
SELECT AVG(Student_Addresses.monthly_rental), Addresses.line_1 
FROM Student_Addresses 
JOIN Addresses ON Student_Addresses.address_id = Addresses.address_id;
```
-------------------------3121 sample_num
```sql
SELECT Addresses.zip_postcode 
FROM Addresses 
JOIN Teachers ON Addresses.address_id = Teachers.address_id 
WHERE Teachers.first_name = 'Lyla';
```
-------------------------3122 sample_num
```sql
SELECT Teachers.email_address 
FROM Teachers 
JOIN Addresses ON Teachers.address_id = Addresses.address_id 
WHERE Addresses.zip_postcode = '918';
```
-------------------------3123 sample_num
```sql
SELECT COUNT(*) 
FROM Students 
WHERE student_id NOT IN (SELECT student_id FROM Behavior_Incident);
```
-------------------------3124 sample_num
```sql
SELECT Teachers.last_name
FROM Teachers
WHERE Teachers.teacher_id NOT IN (
    SELECT DISTINCT Detention.teacher_id
    FROM Detention
);
```
-------------------------3125 sample_num
```sql
SELECT Addresses.line_1 
FROM Addresses 
WHERE Addresses.address_id IN (
    SELECT DISTINCT sa.address_id FROM Student_Addresses sa
    INTERSECT
    SELECT DISTINCT ta.address_id FROM Teachers ta
)
GROUP BY Addresses.line_1;
```
-------------------------3126 sample_num
```sql
SELECT 
    Assets.asset_id, 
    Assets.asset_details
FROM 
    Assets
JOIN 
    Asset_Parts ON Assets.asset_id = Asset_Parts.asset_id
JOIN 
    Fault_Log ON Assets.asset_id = Fault_Log.asset_id
GROUP BY 
    Assets.asset_id, 
    Assets.asset_details
HAVING 
    COUNT(DISTINCT Asset_Parts.part_id) = 2 
AND 
    COUNT(DISTINCT Fault_Log.fault_log_entry_id) < 2;
```
-------------------------3127 sample_num
```sql
SELECT COUNT(Assets.asset_id), Maintenance_Contracts.maintenance_contract_id 
FROM Assets 
JOIN Maintenance_Contracts 
ON Assets.maintenance_contract_id = Maintenance_Contracts.maintenance_contract_id 
GROUP BY Maintenance_Contracts.maintenance_contract_id;
```
-------------------------3128 sample_num
```sql
SELECT COUNT(*) AS asset_count, T2.maintenance_contract_company_id 
FROM Assets AS T1 
JOIN Maintenance_Contracts AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id 
JOIN Third_Party_Companies AS T3 ON T2.maintenance_contract_company_id = T3.company_id 
GROUP BY T2.maintenance_contract_company_id;
```
-------------------------3129 sample_num
```sql
SELECT T1.company_id, T1.company_name
FROM Third_Party_Companies AS T1
JOIN Maintenance_Engineers AS T2 ON T1.company_id = T2.company_id
GROUP BY T1.company_id, T1.company_name
HAVING COUNT(T2.engineer_id) >= 2
UNION
SELECT T3.company_id, T3.company_name
FROM Third_Party_Companies AS T3
JOIN Maintenance_Contracts AS T4 ON T3.company_id = T4.maintenance_contract_company_id
GROUP BY T3.company_id, T3.company_name
HAVING COUNT(T4.maintenance_contract_id) >= 2;
```
-------------------------3130 sample_num
```sql
SELECT DISTINCT staff.staff_name, staff.staff_id 
FROM Fault_Log 
JOIN Staff ON Fault_Log.recorded_by_staff_id = Staff.staff_id 
WHERE Fault_Log.fault_log_entry_id NOT IN (
    SELECT Engineer_Visits.fault_log_entry_id 
    FROM Engineer_Visits
)
```
-------------------------3131 sample_num
```sql
SELECT e.engineer_id, e.first_name, e.last_name
FROM Maintenance_Engineers e
JOIN Engineer_Visits v ON e.engineer_id = v.engineer_id
GROUP BY e.engineer_id, e.first_name, e.last_name
ORDER BY COUNT(v.engineer_visit_id) DESC
LIMIT 1;
```
-------------------------3132 sample_num
```sql
SELECT p.part_id, p.part_name
FROM Parts p
JOIN Part_Faults pf ON p.part_id = pf.part_id
GROUP BY p.part_id, p.part_name
HAVING COUNT(pf.part_fault_id) > 2;
```
-------------------------3133 sample_num
```sql
SELECT 
    e.first_name, 
    e.last_name, 
    e.other_details, 
    s.skill_description 
FROM 
    Maintenance_Engineers e 
JOIN 
    Engineer_Skills es ON e.engineer_id = es.engineer_id 
JOIN 
    Skills s ON es.skill_id = s.skill_id;
```
-------------------------3134 sample_num
```sql
SELECT 
    pf.fault_short_name, 
    sr.skill_description
FROM 
    Part_Faults pf
JOIN 
    Skills_Required_To_Fix srtf ON pf.part_fault_id = srtf.part_fault_id
JOIN 
    Skills sr ON srtf.skill_id = sr.skill_id;
```
-------------------------3135 sample_num
```sql
SELECT P.part_name, COUNT(AP.asset_id) AS num_assets
FROM Parts P
JOIN Asset_Parts AP ON P.part_id = AP.part_id
GROUP BY P.part_id, P.part_name;
```
-------------------------3136 sample_num
```sql
SELECT fault_description, fault_status 
FROM Fault_Log 
JOIN Engineer_Visits ON Fault_Log.fault_log_entry_id = Engineer_Visits.fault_log_entry_id;
```
Note: The provided SQL query assumes that the `fault_status` column exists in either the `Fault_Log` or `Engineer_Visits` table, but based on the information provided, `fault_status` is in the `Engineer_Visits` table. However, the `Fault_Log` table does not have a direct relationship with `fault_status`, so you might need to adjust the query according to your database schema if `fault_status` is stored differently.
-------------------------3137 sample_num
```sql
SELECT fault_log_entry_id, COUNT(*) AS num_visits
FROM Engineer_Visits
GROUP BY fault_log_entry_id
ORDER BY num_visits DESC
LIMIT 1;
```
-------------------------3138 sample_num
```sql
SELECT DISTINCT last_name FROM Maintenance_Engineers;
```
-------------------------3139 sample_num
```sql
SELECT COUNT(DISTINCT fault_status) FROM Fault_Log_Parts;
```
-------------------------3140 sample_num
```sql
SELECT ME.first_name, ME.last_name 
FROM Maintenance_Engineers ME
LEFT JOIN Engineer_Visits EV ON ME.engineer_id = EV.engineer_id
WHERE EV.engineer_visit_id IS NULL;
```
-------------------------3141 sample_num
```sql
SELECT asset_id, asset_details, asset_make, asset_model 
FROM Assets;
```
-------------------------3142 sample_num
```sql
SELECT MIN(asset_acquired_date) 
FROM Assets;
```
-------------------------3143 sample_num
```sql
SELECT P.part_id, P.part_name 
FROM Parts AS P
JOIN Part_Faults AS PF ON P.part_id = PF.part_id
JOIN Skills_Required_To_Fix AS SRTF ON PF.part_fault_id = SRTF.part_fault_id
GROUP BY P.part_id, P.part_name
ORDER BY COUNT(SRTF.skill_id) DESC
LIMIT 1;
```
-------------------------3144 sample_num
```sql
SELECT P.part_name 
FROM Parts P 
JOIN Part_Faults PF ON P.part_id = PF.part_id 
GROUP BY P.part_name 
ORDER BY COUNT(PF.part_fault_id) 
LIMIT 1;
```
-------------------------3145 sample_num
```sql
SELECT E.engineer_id, E.first_name, E.last_name
FROM Maintenance_Engineers E
JOIN Engineer_Visits V ON E.engineer_id = V.engineer_id
GROUP BY E.engineer_id, E.first_name, E.last_name
ORDER BY COUNT(V.engineer_visit_id) ASC
LIMIT 1;
```
-------------------------3146 sample_num
```sql
SELECT Staff.staff_name, Maintenance_Engineers.first_name, Maintenance_Engineers.last_name 
FROM Staff 
JOIN Engineer_Visits ON Staff.staff_id = Engineer_Visits.contact_staff_id 
JOIN Maintenance_Engineers ON Engineer_Visits.engineer_id = Maintenance_Engineers.engineer_id;
```
-------------------------3147 sample_num
```sql
SELECT fl.fault_log_entry_id, fl.fault_description, fl.fault_log_entry_datetime 
FROM Fault_Log AS fl 
JOIN Fault_Log_Parts AS flp ON fl.fault_log_entry_id = flp.fault_log_entry_id 
GROUP BY fl.fault_log_entry_id 
ORDER BY COUNT(flp.part_fault_id) DESC 
LIMIT 1;
```
-------------------------3148 sample_num
```sql
SELECT SR.skill_id, S.skill_description
FROM Skills_Required_To_Fix SR
JOIN Skills S ON SR.skill_id = S.skill_id
GROUP BY SR.skill_id, S.skill_description
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------3149 sample_num
```sql
SELECT DISTINCT asset_model FROM Assets;
```
-------------------------3150 sample_num
```sql
SELECT asset_make, asset_model, asset_details 
FROM Assets 
ORDER BY asset_disposed_date ASC;
```
-------------------------3151 sample_num
```sql
SELECT part_id, chargeable_amount 
FROM Parts 
WHERE chargeable_amount = (SELECT MIN(chargeable_amount) FROM Parts);
```
-------------------------3152 sample_num
```sql
SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1
```
-------------------------3153 sample_num
```sql
SELECT T1.company_name, T1.company_type, T2.contract_end_date 
FROM Third_Party_Companies AS T1 
JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id 
WHERE T2.contract_end_date = (SELECT MAX(contract_end_date) FROM Maintenance_Contracts)
```
However, to specifically get just the description of the type of the company who concluded its contracts most recently, you would have to modify the query slightly:
```sql
SELECT T1.company_type 
FROM Third_Party_Companies AS T1 
JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id 
WHERE T2.contract_end_date = (SELECT MAX(contract_end_date) FROM Maintenance_Contracts)
```
-------------------------3154 sample_num
```sql
SELECT gender, COUNT(*) as count 
FROM Staff 
GROUP BY gender 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------3155 sample_num
```sql
SELECT Staff.staff_name, COUNT(DISTINCT Engineer_Visits.engineer_id) AS NumberOfEngineersContacted
FROM Staff
JOIN Engineer_Visits ON Staff.staff_id = Engineer_Visits.contact_staff_id
GROUP BY Staff.staff_id, Staff.staff_name;
```
-------------------------3156 sample_num
```sql
SELECT asset_model 
FROM Assets 
WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)
```
```
-------------------------3157 sample_num
```sql
SELECT local_authority, services FROM station;
```
-------------------------3158 sample_num
```sql
SELECT train_number, name 
FROM train 
ORDER BY time;
```
-------------------------3159 sample_num
```sql
SELECT time, train_number FROM train WHERE destination = 'Chennai' ORDER BY time;
```
-------------------------3160 sample_num
```sql
SELECT COUNT(*) FROM train WHERE name LIKE '%Express%';
```
-------------------------3161 sample_num
```sql
SELECT train_number, time 
FROM train 
WHERE origin = 'Chennai' AND destination = 'Guruvayur';
```
-------------------------3162 sample_num
```sql
SELECT origin, COUNT(*) as num_trains
FROM train
GROUP BY origin;
```
-------------------------3163 sample_num
```sql
SELECT T1.name 
FROM train AS T1 
JOIN route AS T2 ON T1.id = T2.train_id 
GROUP BY T1.id 
ORDER BY COUNT(T2.station_id) DESC 
LIMIT 1
```
-------------------------3164 sample_num
```sql
SELECT station.network_name, station.services, COUNT(train.id) AS number_of_trains
FROM station 
JOIN route ON station.id = route.station_id 
JOIN train ON train.id = route.train_id 
GROUP BY station.id;
```
-------------------------3165 sample_num
```sql
SELECT day_of_week, AVG(high_temperature) 
FROM weekly_weather 
GROUP BY day_of_week;
```
-------------------------3166 sample_num
```sql
SELECT MAX(w.low_temperature) AS max_low_temperature, AVG(w.precipitation) AS avg_precipitation 
FROM weekly_weather w 
JOIN station s ON w.station_id = s.id 
WHERE s.network_name = 'Amersham';
```
-------------------------3167 sample_num
```sql
SELECT t.name, t.time 
FROM train t 
JOIN route r ON t.id = r.train_id 
JOIN station s ON r.station_id = s.id 
WHERE s.local_authority = 'Chiltern';
```
-------------------------3168 sample_num
```sql
SELECT COUNT(DISTINCT services) FROM station;
```
-------------------------3169 sample_num
```sql
SELECT s.id, s.local_authority 
FROM station AS s
JOIN weekly_weather AS w ON s.id = w.station_id
GROUP BY s.id, s.local_authority
ORDER BY AVG(w.high_temperature) DESC
LIMIT 1;
```
-------------------------3170 sample_num
```sql
SELECT s.id, s.local_authority 
FROM station AS s
JOIN weekly_weather AS w ON s.id = w.station_id
GROUP BY s.id, s.local_authority
HAVING MAX(w.precipitation) > 50;
```
-------------------------3171 sample_num
```sql
SELECT MIN(low_temperature) AS lowest_low_temp, MAX(wind_speed_mph) AS highest_wind_speed FROM weekly_weather;
```
-------------------------3172 sample_num
```sql
SELECT origin 
FROM train 
GROUP BY origin 
HAVING COUNT(id) > 1;
```
-------------------------3173 sample_num
```sql
SELECT COUNT(*) 
FROM PROFESSOR 
WHERE DEPT_CODE = (SELECT DEPT_CODE FROM DEPARTMENT WHERE DEPT_NAME = 'Accounting');
```
-------------------------3174 sample_num
```sql
SELECT COUNT(*) 
FROM PROFESSOR 
WHERE DEPT_CODE = 'ACCT'
```
```
-------------------------3175 sample_num
```sql
SELECT COUNT(*) 
FROM CLASS 
WHERE CRS_CODE = 'ACCT-211';
```
However, to ensure that the entries in the CLASS table are indeed taught by professors, you might want to join with the PROFESSOR table via EMP_NUM (assuming that all professors are employees and their numbers are consistent across tables). Here's a more accurate query:

```sql
SELECT COUNT(*) 
FROM CLASS c 
JOIN PROFESSOR p ON c.PROF_NUM = p.EMP_NUM
WHERE c.CRS_CODE = 'ACCT-211';
```
-------------------------3176 sample_num
```sql
SELECT COUNT(*) 
FROM CLASS 
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE 
WHERE COURSE.CRS_CODE = 'ACCT-211';
```
Note: This will count the number of classes with the code 'ACCT-211', to ensure that we count unique professors teaching this class, we might want to group by PROF_NUM or join with PROFESSOR table and group by EMP_NUM. Here is an updated version:

```sql
SELECT COUNT(DISTINCT PROF_NUM) 
FROM CLASS 
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE 
WHERE COURSE.CRS_CODE = 'ACCT-211';
```
-------------------------3177 sample_num
```sql
SELECT EMP_FNAME, EMP_LNAME 
FROM EMPLOYEE 
WHERE EMP_NUM IN (
    SELECT EMP_NUM 
    FROM PROFESSOR 
    WHERE DEPT_CODE IN (
        SELECT DEPT_CODE 
        FROM DEPARTMENT 
        WHERE DEPT_NAME = 'Biology'
    )
);
```
-------------------------3178 sample_num
```sql
SELECT EMP_FNAME, EMP_LNAME 
FROM EMPLOYEE 
WHERE EMP_NUM IN (
    SELECT EMP_NUM 
    FROM PROFESSOR 
    WHERE DEPT_CODE = 'BIO'
);
```
-------------------------3179 sample_num
```sql
SELECT DISTINCT E.EMP_FNAME, E.EMP_DOB 
FROM EMPLOYEE E 
JOIN PROFESSOR P ON E.EMP_NUM = P.EMP_NUM 
JOIN CLASS C ON P.EMP_NUM = C.PROF_NUM 
JOIN COURSE CR ON C.CRS_CODE = CR.CRS_CODE 
WHERE CR.CRS_CODE = 'ACCT-211';
```
-------------------------3180 sample_num
```sql
SELECT EMP_FNAME, EMP_DOB 
FROM EMPLOYEE 
WHERE EMP_NUM IN (
    SELECT PROF_NUM 
    FROM CLASS 
    WHERE CRS_CODE = 'ACCT-211'
);
```
-------------------------3181 sample_num
```sql
SELECT COUNT(*) 
FROM CLASS 
WHERE PROF_NUM = (SELECT EMP_NUM FROM EMPLOYEE WHERE EMP_LNAME = 'Graztevski');
```
-------------------------3182 sample_num
```sql
SELECT COUNT(*) 
FROM CLASS 
WHERE PROF_NUM = (SELECT EMP_NUM FROM EMPLOYEE WHERE EMP_LNAME = 'Graztevski');
```
-------------------------3183 sample_num
```sql
SELECT SCHOOL_CODE FROM DEPARTMENT WHERE DEPT_NAME = 'Accounting'
```
-------------------------3184 sample_num
```sql
SELECT SCHOOL_CODE FROM DEPARTMENT WHERE DEPT_NAME = 'Accounting'
```
-------------------------3185 sample_num
```sql
SELECT CRS_CREDIT, CRS_DESCRIPTION 
FROM COURSE 
WHERE CRS_CODE = 'CIS-220';
```
-------------------------3186 sample_num
```sql
SELECT CRS_DESCRIPTION, CRS_CREDIT 
FROM COURSE 
WHERE CRS_CODE = 'CIS-220';
```
-------------------------3187 sample_num
```sql
SELECT DEPT_ADDRESS 
FROM DEPARTMENT 
WHERE DEPT_NAME = 'History';
```
-------------------------3188 sample_num
```sql
SELECT DEPT_ADDRESS 
FROM DEPARTMENT 
WHERE DEPT_NAME = 'History';
```
-------------------------3189 sample_num
```sql
SELECT COUNT(DISTINCT DEPT_ADDRESS) 
FROM DEPARTMENT 
WHERE SCHOOL_CODE = 'BUS';
```
-------------------------3190 sample_num
```sql
SELECT DISTINCT DEPT_ADDRESS 
FROM DEPARTMENT 
WHERE SCHOOL_CODE = 'BUS';
```
-------------------------3191 sample_num
```sql
SELECT COUNT(DISTINCT DEPT_ADDRESS), SCHOOL_CODE 
FROM DEPARTMENT 
GROUP BY SCHOOL_CODE;
```
-------------------------3192 sample_num
```sql
SELECT COUNT(DISTINCT DEPT_ADDRESS), SCHOOL_CODE 
FROM DEPARTMENT 
GROUP BY SCHOOL_CODE;
```
-------------------------3193 sample_num
```sql
SELECT CRS_DESCRIPTION, CRS_CREDIT 
FROM COURSE 
WHERE CRS_CODE = 'QM-261';
```
-------------------------3194 sample_num
```sql
SELECT CRS_DESCRIPTION, CRS_CREDIT 
FROM COURSE 
WHERE CRS_CODE = 'QM-261';
```
-------------------------3195 sample_num
```sql
SELECT SCHOOL_CODE, COUNT(DEPT_CODE) AS Num_of_Departments
FROM DEPARTMENT
GROUP BY SCHOOL_CODE;
```
-------------------------3196 sample_num
```sql
SELECT SCHOOL_CODE, COUNT(DEPT_CODE) 
FROM DEPARTMENT 
GROUP BY SCHOOL_CODE;
```
-------------------------3197 sample_num
```sql
SELECT 
    SCHOOL_CODE, 
    COUNT(DISTINCT DEPT_CODE) AS num_departments
FROM 
    DEPARTMENT
GROUP BY 
    SCHOOL_CODE
HAVING 
    COUNT(DISTINCT DEPT_CODE) < 5;
```
-------------------------3198 sample_num
```sql
SELECT SCHOOL_CODE, COUNT(DISTINCT DEPT_CODE) 
FROM DEPARTMENT 
GROUP BY SCHOOL_CODE 
HAVING COUNT(DEPT_CODE) < 5;
```
-------------------------3199 sample_num
```sql
SELECT COUNT(Class.CLASS_CODE), Course.CRS_CODE
FROM Class
JOIN Course ON Class.CRS_CODE = Course.CRS_CODE
GROUP BY Course.CRS_CODE;
```
-------------------------3200 sample_num
```sql
SELECT COUNT(Class.CLASS_CODE), Course.CRS_CODE
FROM Class
JOIN Course ON Class.CRS_CODE = Course.CRS_CODE
GROUP BY Course.CRS_CODE;
```
-------------------------3201 sample_num
```sql
SELECT DEPT_CODE, SUM(CRS_CREDIT) as TOTAL_CREDIT
FROM COURSE
GROUP BY DEPT_CODE;
```
-------------------------3202 sample_num
```sql
SELECT SUM(CRS_CREDIT) AS Total_Credits 
FROM COURSE 
GROUP BY DEPT_CODE;
```
-------------------------3203 sample_num
```sql
SELECT COUNT(*), CLASS_ROOM 
FROM CLASS 
GROUP BY CLASS_ROOM 
HAVING COUNT(*) >= 2;
```
-------------------------3204 sample_num
```sql
SELECT CLASS_ROOM, COUNT(*) AS class_count
FROM CLASS
GROUP BY CLASS_ROOM
HAVING COUNT(*) >= 2;
```
-------------------------3205 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, COUNT(CLASS.CLASS_CODE) AS NUMBER_OF_CLASSES
FROM CLASS
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE
JOIN DEPARTMENT ON COURSE.DEPT_CODE = DEPARTMENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_NAME;
```
-------------------------3206 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, COUNT(CLASS.CLASS_CODE) AS NUMBER_OF_CLASSES
FROM CLASS
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE
JOIN DEPARTMENT ON COURSE.DEPT_CODE = DEPARTMENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_NAME;
```
-------------------------3207 sample_num
```sql
SELECT COUNT(DISTINCT CLASS_CODE) AS NumberOfClasses, T3.SCHOOL_CODE
FROM CLASS AS T1 
JOIN COURSE AS T2 ON T1.CRS_CODE = T2.CRS_CODE 
JOIN DEPARTMENT AS T3 ON T2.DEPT_CODE = T3.DEPT_CODE 
GROUP BY T3.SCHOOL_CODE;
```
-------------------------3208 sample_num
```sql
SELECT COUNT(DISTINCT CLASS_CODE) AS NumberOfClasses, T3.SCHOOL_CODE 
FROM CLASS 
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE 
JOIN DEPARTMENT AS T3 ON COURSE.DEPT_CODE = T3.DEPT_CODE 
GROUP BY T3.SCHOOL_CODE;
```
-------------------------3209 sample_num
```sql
SELECT COUNT(*) AS num_of_professors, d.SCHOOL_CODE 
FROM PROFESSOR p 
JOIN DEPARTMENT d ON p.DEPT_CODE = d.DEPT_CODE 
GROUP BY d.SCHOOL_CODE;
```
-------------------------3210 sample_num
```sql
SELECT COUNT(DISTINCT T3.EMP_NUM), T2.SCHOOL_CODE 
FROM PROFESSOR AS T1 
JOIN DEPARTMENT AS T2 ON T1.DEPT_CODE = T2.DEPT_CODE 
JOIN EMPLOYEE AS T3 ON T1.EMP_NUM = T3.EMP_NUM 
GROUP BY T2.SCHOOL_CODE;
```
-------------------------3211 sample_num
```sql
SELECT EMP_JOBCODE, COUNT(*) AS COUNT_OF_EMPLOYEES
FROM EMPLOYEE
GROUP BY EMP_JOBCODE
ORDER BY COUNT_OF_EMPLOYEES DESC
LIMIT 1;
```
-------------------------3212 sample_num
```sql
SELECT EMP_JOBCODE, COUNT(*) 
FROM EMPLOYEE 
GROUP BY EMP_JOBCODE 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3213 sample_num
```sql
SELECT T3.SCHOOL_CODE FROM PROFESSOR AS T1 JOIN DEPARTMENT AS T3 ON T1.DEPT_CODE = T3.DEPT_CODE GROUP BY T3.SCHOOL_CODE ORDER BY COUNT(*) ASC LIMIT 1
```
-------------------------3214 sample_num
```sql
SELECT T3.SCHOOL_CODE 
FROM PROFESSOR AS T1 
JOIN DEPARTMENT AS T3 ON T1.DEPT_CODE = T3.DEPT_CODE 
GROUP BY T3.SCHOOL_CODE 
ORDER BY COUNT(*) 
LIMIT 1
```
-------------------------3215 sample_num
```sql
SELECT DEPT_CODE, COUNT(*) 
FROM PROFESSOR 
WHERE PROF_HIGH_DEGREE = 'Ph.D.' 
GROUP BY DEPT_CODE;
```
-------------------------3216 sample_num
```sql
SELECT DEPT_CODE, COUNT(*) 
FROM PROFESSOR 
WHERE PROF_HIGH_DEGREE = 'Ph.D.' 
GROUP BY DEPT_CODE;
```
-------------------------3217 sample_num
```sql
SELECT DEPT_CODE, COUNT(*) AS num_students
FROM STUDENT
GROUP BY DEPT_CODE;
```
-------------------------3218 sample_num
```sql
SELECT DEPT_CODE, COUNT(*) AS Student_Count
FROM STUDENT
GROUP BY DEPT_CODE;
```
-------------------------3219 sample_num
```sql
SELECT DEPT_CODE, SUM(STU_HRS) AS TOTAL_HOURS
FROM STUDENT
GROUP BY DEPT_CODE;
```
-------------------------3220 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, SUM(STUDENT.STU_HRS) AS Total_Hours
FROM STUDENT
JOIN ENROLL ON STUDENT.STU_NUM = ENROLL.STU_NUM
JOIN CLASS ON ENROLL.CLASS_CODE = CLASS.CLASS_CODE
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE
JOIN DEPARTMENT ON COURSE.DEPT_CODE = DEPARTMENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_NAME;
```
-------------------------3221 sample_num
```sql
SELECT DEPT_CODE, MAX(STU_GPA) AS MaxGPA, AVG(STU_GPA) AS AverageGPA, MIN(STU_GPA) AS MinGPA 
FROM STUDENT 
GROUP BY DEPT_CODE;
```
-------------------------3222 sample_num
```sql
SELECT DEPT_CODE, MAX(STU_GPA) AS Highest_GPA, MIN(STU_GPA) AS Lowest_GPA, AVG(STU_GPA) AS Average_GPA 
FROM STUDENT 
GROUP BY DEPT_CODE;
```
-------------------------3223 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, AVG(STUDENT.STU_GPA) AS Average_GPA
FROM DEPARTMENT
JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_NAME
ORDER BY Average_GPA DESC
LIMIT 1;
```
-------------------------3224 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, AVG(STUDENT.STU_GPA) AS Average_GPA
FROM STUDENT
JOIN DEPARTMENT ON STUDENT.DEPT_CODE = DEPARTMENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_NAME
ORDER BY Average_GPA DESC
LIMIT 1;
```
```
-------------------------3225 sample_num
```sql
SELECT COUNT(DISTINCT SCHOOL_CODE) FROM DEPARTMENT;
```
-------------------------3226 sample_num
```sql
SELECT COUNT(DISTINCT SCHOOL_CODE) FROM DEPARTMENT;
```
-------------------------3227 sample_num
```sql
SELECT COUNT(DISTINCT CLASS_CODE) FROM CLASS;
```
-------------------------3228 sample_num
```sql
SELECT COUNT(DISTINCT CLASS_CODE) FROM CLASS;
```
-------------------------3229 sample_num
```sql
SELECT COUNT(*) FROM COURSE
```
-------------------------3230 sample_num
```sql
SELECT COUNT(DISTINCT CRS_CODE) FROM CLASS;
```
-------------------------3231 sample_num
```sql
SELECT COUNT(*) FROM DEPARTMENT;
```
-------------------------3232 sample_num
```sql
SELECT COUNT(DISTINCT DEPT_CODE) FROM DEPARTMENT;
```
-------------------------3233 sample_num
```sql
SELECT COUNT(*) 
FROM COURSE 
WHERE DEPT_CODE = (
    SELECT DEPT_CODE 
    FROM DEPARTMENT 
    WHERE DEPT_NAME = 'Computer Info. Systems'
);
```
-------------------------3234 sample_num
```sql
SELECT COUNT(*) 
FROM COURSE 
WHERE DEPT_CODE = 'CIS';
```
-------------------------3235 sample_num
```sql
SELECT COUNT(*) 
FROM CLASS 
WHERE CRS_CODE = 'ACCT-211';
```
-------------------------3236 sample_num
```sql
SELECT COUNT(DISTINCT T1.CLASS_SECTION) 
FROM CLASS AS T1 
JOIN COURSE AS T2 ON T1.CRS_CODE = T2.CRS_CODE 
WHERE T2.CRS_DESCRIPTION = 'ACCT-211';
```
-------------------------3237 sample_num
```sql
SELECT DEPARTMENT.DEPT_CODE, SUM(COURSE.CRS_CREDIT) as TOTAL_CREDITS
FROM CLASS
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE
JOIN DEPARTMENT ON COURSE.DEPT_CODE = DEPARTMENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_CODE;
```
-------------------------3238 sample_num
```sql
SELECT DEPARTMENT.DEPT_CODE, SUM(COURSE.CRS_CREDIT) as TOTAL_CREDITS 
FROM COURSE 
JOIN DEPARTMENT ON COURSE.DEPT_CODE = DEPARTMENT.DEPT_CODE 
GROUP BY DEPARTMENT.DEPT_CODE;
```
-------------------------3239 sample_num
```sql
SELECT DEPT_NAME 
FROM DEPARTMENT 
WHERE DEPT_CODE = (
    SELECT DEPT_CODE 
    FROM COURSE 
    WHERE CRS_CODE = (
        SELECT CRS_CODE 
        FROM CLASS 
        GROUP BY CRS_CODE 
        ORDER BY SUM(CRS_CREDIT) DESC 
        LIMIT 1
    )
);
```
-------------------------3240 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, SUM(COURSE.CRS_CREDIT) as total_credits
FROM COURSE
JOIN DEPARTMENT ON COURSE.DEPT_CODE = DEPARTMENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_NAME
ORDER BY total_credits DESC
LIMIT 1;
```
-------------------------3241 sample_num
```sql
SELECT COUNT(*) 
FROM ENROLL 
JOIN CLASS ON ENROLL.CLASS_CODE = CLASS.CLASS_CODE 
WHERE CLASS.CRS_CODE = 'ACCT-211';
```
-------------------------3242 sample_num
```sql
SELECT COUNT(*) 
FROM ENROLL 
JOIN CLASS ON ENROLL.CLASS_CODE = CLASS.CLASS_CODE 
WHERE CLASS.CRS_CODE = 'ACCT-211';
```
-------------------------3243 sample_num
```sql
SELECT DISTINCT S.STU_FNAME 
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS C ON E.CLASS_CODE = C.CLASS_CODE
JOIN COURSE CR ON C.CRS_CODE = CR.CRS_CODE
WHERE CR.CRS_CODE = 'ACCT-211';
```
-------------------------3244 sample_num
```sql
SELECT DISTINCT S.STU_FNAME
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS C ON E.CLASS_CODE = C.CLASS_CODE
JOIN COURSE Crs ON C.CRS_CODE = Crs.CRS_CODE
WHERE Crs.CRS_CODE = 'ACCT-211';
```
-------------------------3245 sample_num
```sql
SELECT S.STU_FNAME
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS C ON E.CLASS_CODE = C.CLASS_CODE
JOIN COURSE Cr ON C.CRS_CODE = Cr.CRS_CODE
WHERE Cr.CRS_DESCRIPTION = 'ACCT-211' AND E.ENROLL_GRADE = 'C'
```
-------------------------3246 sample_num
```sql
SELECT S.STU_FNAME
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS C ON E.CLASS_CODE = C.CLASS_CODE
JOIN COURSE Cr ON C.CRS_CODE = Cr.CRS_CODE
WHERE Cr.CRS_DESCRIPTION = 'ACCT-211' AND E.ENROLL_GRADE = 'C'
```
-------------------------3247 sample_num
```sql
SELECT COUNT(*) FROM EMPLOYEE;
```
-------------------------3248 sample_num
```sql
SELECT COUNT(*) FROM EMPLOYEE;
```
-------------------------3249 sample_num
```sql
SELECT COUNT(*) 
FROM PROFESSOR 
WHERE PROF_HIGH_DEGREE = 'Ph.D.'
```
-------------------------3250 sample_num
```sql
SELECT COUNT(*) 
FROM PROFESSOR 
WHERE PROF_HIGH_DEGREE = 'Ph.D.'
```
-------------------------3251 sample_num
```sql
SELECT COUNT(*) 
FROM STUDENT S, ENROLL E, CLASS C, PROFESSOR P, DEPARTMENT D 
WHERE S.STU_NUM = E.STU_NUM 
AND E.CLASS_CODE = C.CLASS_CODE 
AND C.PROF_NUM = P.EMP_NUM 
AND P.DEPT_CODE = D.DEPT_CODE 
AND D.DEPT_NAME = 'Accounting';
```
-------------------------3252 sample_num
```sql
SELECT COUNT(*) 
FROM STUDENT s
JOIN ENROLL e ON s.STU_NUM = e.STU_NUM
JOIN CLASS c ON e.CLASS_CODE = c.CLASS_CODE
JOIN PROFESSOR p ON c.PROF_NUM = p.EMP_NUM
JOIN DEPARTMENT d ON p.DEPT_CODE = d.DEPT_CODE
WHERE d.DEPT_NAME = 'Accounting';
```
-------------------------3253 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME
FROM DEPARTMENT
JOIN COURSE ON DEPARTMENT.DEPT_CODE = COURSE.DEPT_CODE
JOIN CLASS ON COURSE.CRS_CODE = CLASS.CRS_CODE
JOIN ENROLL ON CLASS.CLASS_CODE = ENROLL.CLASS_CODE
GROUP BY DEPARTMENT.DEPT_NAME
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------3254 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME
FROM DEPARTMENT
JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_NAME
ORDER BY COUNT(STUDENT.STU_NUM) DESC
LIMIT 1;
```
-------------------------3255 sample_num
```sql
SELECT DEPT_NAME 
FROM DEPARTMENT 
ORDER BY DEPT_NAME;
```
-------------------------3256 sample_num
```sql
SELECT DEPT_NAME FROM DEPARTMENT ORDER BY DEPT_NAME;
```
-------------------------3257 sample_num
```sql
SELECT CRS_CODE 
FROM CLASS 
WHERE CLASS_ROOM = 'KLR209';
```
-------------------------3258 sample_num
```sql
SELECT DISTINCT c.CRS_CODE 
FROM CLASS c 
WHERE c.CLASS_ROOM = 'KLR209';
```
-------------------------3259 sample_num
```sql
SELECT EMP_FNAME 
FROM EMPLOYEE 
WHERE EMP_JOBCODE = 'PROF' 
ORDER BY EMP_DOB;
```
-------------------------3260 sample_num
```sql
SELECT EMP_FNAME 
FROM EMPLOYEE 
WHERE EMP_JOBCODE = 'PROF' 
ORDER BY EMP_DOB;
```
-------------------------3261 sample_num
```sql
SELECT T1.EMP_FNAME, T2.PROF_OFFICE 
FROM EMPLOYEE AS T1 
JOIN PROFESSOR AS T2 ON T1.EMP_NUM = T2.EMP_NUM 
ORDER BY T1.EMP_FNAME ASC;
```
-------------------------3262 sample_num
```sql
SELECT P.EMP_FNAME, P.PROF_OFFICE 
FROM PROFESSOR AS P 
JOIN EMPLOYEE AS E ON P.EMP_NUM = E.EMP_NUM 
ORDER BY P.EMP_FNAME;
```
-------------------------3263 sample_num
```sql
SELECT EMP_FNAME, EMP_LNAME 
FROM EMPLOYEE 
WHERE EMP_DOB = (SELECT MIN(EMP_DOB) FROM EMPLOYEE);
```
-------------------------3264 sample_num
```sql
SELECT EMP_FNAME, EMP_LNAME 
FROM EMPLOYEE 
WHERE EMP_DOB = (SELECT MIN(EMP_DOB) FROM EMPLOYEE);
```
-------------------------3265 sample_num
```sql
SELECT STU_FNAME, STU_LNAME, STU_GPA 
FROM STUDENT 
WHERE STU_GPA > 3 
ORDER BY STU_DOB DESC 
LIMIT 1;
```
-------------------------3266 sample_num
```sql
SELECT STU_FNAME, STU_LNAME, STU_GPA 
FROM STUDENT 
WHERE STU_GPA > 3 
ORDER BY STU_DOB DESC 
LIMIT 1;
```
-------------------------3267 sample_num
```sql
SELECT DISTINCT S.STU_FNAME 
FROM STUDENT S 
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM 
WHERE E.ENROLL_GRADE = 'C';
```
-------------------------3268 sample_num
```sql
SELECT DISTINCT S.STU_FNAME
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
WHERE E.ENROLL_GRADE = 'C';
```
-------------------------3269 sample_num
```sql
SELECT DEPT_NAME 
FROM DEPARTMENT 
WHERE DEPT_CODE IN (
    SELECT DEPT_CODE 
    FROM PROFESSOR 
    GROUP BY DEPT_CODE 
    HAVING COUNT(*) = (
        SELECT COUNT(*) 
        FROM PROFESSOR 
        GROUP BY DEPT_CODE 
        ORDER BY COUNT(*) ASC 
        LIMIT 1
    )
)
```
```
-------------------------3270 sample_num
```sql
SELECT DEPT_NAME 
FROM DEPARTMENT 
WHERE DEPT_CODE IN (
    SELECT DEPT_CODE 
    FROM PROFESSOR 
    GROUP BY DEPT_CODE 
    ORDER BY COUNT(*) 
    LIMIT 1
)
```
```
-------------------------3271 sample_num
```sql
SELECT DEPT_NAME 
FROM DEPARTMENT 
WHERE DEPT_CODE = (
    SELECT DEPT_CODE 
    FROM PROFESSOR 
    WHERE PROF_HIGH_DEGREE = 'Ph.D.' 
    GROUP BY DEPT_CODE 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
```
-------------------------3272 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME
FROM DEPARTMENT
JOIN PROFESSOR ON DEPARTMENT.DEPT_CODE = PROFESSOR.DEPT_CODE
WHERE PROFESSOR.PROF_HIGH_DEGREE = 'Ph.D.'
GROUP BY DEPARTMENT.DEPT_NAME
ORDER BY COUNT(PROFESSOR.EMP_NUM) DESC
LIMIT 1;
```
-------------------------3273 sample_num
```sql
SELECT DISTINCT P.EMP_FNAME 
FROM PROFESSOR P
LEFT JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM
LEFT JOIN CLASS C ON E.EMP_NUM = C.PROF_NUM
WHERE C.CLASS_CODE IS NULL;
```
-------------------------3274 sample_num
```sql
SELECT P.EMP_FNAME 
FROM PROFESSOR P 
WHERE P.EMP_NUM NOT IN (SELECT C.PROF_NUM FROM CLASS C)
```
-------------------------3275 sample_num
```sql
SELECT P.EMP_FNAME
FROM PROFESSOR P
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM
WHERE P.DEPT_CODE = 'HISTORY' AND E.EMP_JOBCODE = 'PROF'
AND E.EMP_NUM NOT IN (
    SELECT CLASS_PROF_NUM
    FROM CLASS
)
``` 
Note: I made an assumption that PROF_NUM in CLASS table refers to the professor teaching the class and it should be EMP_NUM instead of PROF_NUM in PROFESSOR table for the join condition. However, based on your provided schema, the correct field to use would be PROF_NUM. If that's the case, replace `E.EMP_NUM` with `P.EMP_NUM` in the subquery.
Here's the revised version:
```sql
SELECT P.EMP_FNAME
FROM PROFESSOR P
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM
WHERE P.DEPT_CODE = 'HISTORY' AND E.EMP_JOBCODE = 'PROF'
AND P.EMP_NUM NOT IN (
    SELECT CLASS_PROF_NUM
    FROM CLASS
)
```
-------------------------3276 sample_num
```sql
SELECT DISTINCT P.EMP_FNAME
FROM PROFESSOR P
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM
WHERE P.DEPT_CODE IN (SELECT DEPT_CODE FROM DEPARTMENT WHERE DEPT_NAME = 'History')
AND E.EMP_NUM NOT IN (SELECT PROF_NUM FROM CLASS)
```
-------------------------3277 sample_num
```sql
SELECT EMPLOYEE.EMP_LNAME, PROFESSOR.PROF_OFFICE 
FROM EMPLOYEE 
JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM 
JOIN DEPARTMENT ON PROFESSOR.DEPT_CODE = DEPARTMENT.DEPT_CODE 
WHERE DEPARTMENT.DEPT_NAME = 'HISTORY';
```
-------------------------3278 sample_num
```sql
SELECT EMPLOYEE.EMP_LNAME, PROFESSOR.PROF_OFFICE 
FROM EMPLOYEE 
JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM 
JOIN DEPARTMENT ON PROFESSOR.DEPT_CODE = DEPARTMENT.DEPT_CODE 
WHERE DEPARTMENT.DEPT_NAME = 'HISTORY';
```
-------------------------3279 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, PROFESSOR.PROF_OFFICE 
FROM PROFESSOR 
JOIN DEPARTMENT ON PROFESSOR.DEPT_CODE = DEPARTMENT.DEPT_CODE 
WHERE PROFESSOR.EMP_NUM = (SELECT EMP_NUM FROM EMPLOYEE WHERE EMP_LNAME = 'Heffington')
```
-------------------------3280 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, PROFESSOR.PROF_OFFICE 
FROM DEPARTMENT 
JOIN PROFESSOR ON DEPARTMENT.DEPT_CODE = PROFESSOR.DEPT_CODE 
JOIN EMPLOYEE ON PROFESSOR.EMP_NUM = EMPLOYEE.EMP_NUM 
WHERE EMPLOYEE.EMP_LNAME = 'Heffington';
```
-------------------------3281 sample_num
```sql
SELECT EMP_LNAME, EMP_HIREDATE 
FROM EMPLOYEE 
WHERE EMP_NUM IN (
    SELECT EMP_NUM 
    FROM PROFESSOR 
    WHERE PROF_OFFICE = 'DRE 102'
);
```
-------------------------3282 sample_num
```sql
SELECT T1.EMP_LNAME, T1.EMP_HIREDATE 
FROM EMPLOYEE AS T1 
JOIN PROFESSOR AS T2 
ON T1.EMP_NUM = T2.EMP_NUM 
WHERE T2.PROF_OFFICE = 'DRE 102'
```
-------------------------3283 sample_num
```sql
SELECT ENROLL.CLASS_CODE, COURSE.CRS_CODE 
FROM ENROLL 
JOIN STUDENT ON ENROLL.STU_NUM = STUDENT.STU_NUM 
JOIN CLASS ON ENROLL.CLASS_CODE = CLASS.CLASS_CODE 
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE 
WHERE STUDENT.STU_LNAME = 'Smithson';
```
Note: The query returns both the class code and the course code. If you only want the course code, you can remove "ENROLL.CLASS_CODE," from the SELECT statement.
-------------------------3284 sample_num
```sql
SELECT ENROLL.CLASS_CODE, COURSE.CRS_CODE 
FROM ENROLL 
JOIN STUDENT ON ENROLL.STU_NUM = STUDENT.STU_NUM 
JOIN CLASS ON ENROLL.CLASS_CODE = CLASS.CLASS_CODE 
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE 
WHERE STUDENT.STU_LNAME = 'Smithson';
```
Note: To get only distinct course codes, you can add `DISTINCT` before `COURSE.CRS_CODE`.
-------------------------3285 sample_num
```sql
SELECT T3.CRS_DESCRIPTION, T3.CRS_CREDIT FROM ENROLL AS T1 
JOIN CLASS AS T2 ON T1.CLASS_CODE = T2.CLASS_CODE 
JOIN COURSE AS T3 ON T2.CRS_CODE = T3.CRS_CODE 
JOIN STUDENT AS T4 ON T1.STU_NUM = T4.STU_NUM 
WHERE T4.STU_LNAME = 'Smithson';
```
-------------------------3286 sample_num
```sql
SELECT T2.crs_credit, T2.crs_description FROM ENROLL AS T1 JOIN CLASS AS T2 ON T1.class_code = T2.class_code JOIN COURSE AS T3 ON T2.crs_code = T3.crs_code JOIN STUDENT AS T4 ON T4.stu_num = T1.stu_num WHERE T4.stu_lname = 'Smithson'
```
-------------------------3287 sample_num
```sql
SELECT COUNT(*) 
FROM PROFESSOR 
WHERE PROF_HIGH_DEGREE IN ('Ph.D.', 'MA');
```
-------------------------3288 sample_num
```sql
SELECT COUNT(*) 
FROM PROFESSOR 
WHERE PROF_HIGH_DEGREE IN ('Ph.D.', 'Masters');
```
-------------------------3289 sample_num
```sql
SELECT COUNT(*) 
FROM PROFESSOR 
WHERE DEPT_CODE IN ('ACC', 'BIO');
```
-------------------------3290 sample_num
```sql
SELECT COUNT(*) 
FROM PROFESSOR 
WHERE DEPT_CODE IN ('ACC', 'BIO');
```
-------------------------3291 sample_num
```sql
SELECT P.EMP_FNAME 
FROM PROFESSOR P 
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM 
JOIN CLASS C ON P.EMP_NUM = C.PROF_NUM 
JOIN COURSE Cr ON C.CRS_CODE = Cr.CRS_CODE 
WHERE Cr.CRS_CODE IN ('CIS-220', 'QM-261') 
GROUP BY P.EMP_NUM 
HAVING COUNT(C.CRS_CODE) = 2;
```
```
-------------------------3292 sample_num
```sql
SELECT DISTINCT P.EMP_FNAME 
FROM PROFESSOR P
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM
JOIN CLASS C ON C.PROF_NUM = E.EMP_NUM
JOIN COURSE Cr ON Cr.CRS_CODE = C.CRS_CODE
WHERE Cr.CRS_CODE IN ('CIS-220', 'QM-261')
GROUP BY P.EMP_FNAME
HAVING COUNT(DISTINCT Cr.CRS_CODE) = 2;
```
-------------------------3293 sample_num
```sql
SELECT DISTINCT S.STU_FNAME
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS C ON E.CLASS_CODE = C.CLASS_CODE
JOIN COURSE Cr ON C.CRS_CODE = Cr.CRS_CODE
JOIN DEPARTMENT D ON Cr.DEPT_CODE = D.DEPT_CODE
WHERE D.DEPT_NAME IN ('Accounting', 'Computer Info. Systems')
```
```
-------------------------3294 sample_num
```sql
SELECT DISTINCT S.STU_FNAME
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS C ON E.CLASS_CODE = C.CLASS_CODE
JOIN COURSE CR ON C.CRS_CODE = CR.CRS_CODE
JOIN DEPARTMENT D ON CR.DEPT_CODE = D.DEPT_CODE
WHERE D.DEPT_NAME IN ('Accounting', 'Computer Information Systems');
```
-------------------------3295 sample_num
```sql
SELECT AVG(STUDENT.STU_GPA) 
FROM STUDENT 
JOIN ENROLL ON STUDENT.STU_NUM = ENROLL.STU_NUM 
JOIN CLASS ON ENROLL.CLASS_CODE = CLASS.CLASS_CODE 
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE 
WHERE COURSE.CRS_CODE = 'ACCT-211';
```
-------------------------3296 sample_num
```sql
SELECT AVG(STU_GPA) 
FROM STUDENT 
WHERE STU_NUM IN (
    SELECT STU_NUM 
    FROM ENROLL 
    WHERE CLASS_CODE IN (
        SELECT CLASS_CODE 
        FROM CLASS 
        WHERE CRS_CODE = 'ACCT-211'
    )
);
```
-------------------------3297 sample_num
```sql
SELECT STU_FNAME, STU_GPA, STU_PHONE 
FROM STUDENT 
ORDER BY STU_GPA DESC 
LIMIT 5;
```
-------------------------3298 sample_num
```sql
SELECT STU_FNAME, STU_GPA, STU_PHONE 
FROM STUDENT 
ORDER BY STU_GPA DESC 
LIMIT 5;
```
-------------------------3299 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME
FROM DEPARTMENT
JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE
WHERE STUDENT.STU_GPA = (
    SELECT MIN(STU_GPA)
    FROM STUDENT
);
```
-------------------------3300 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME 
FROM DEPARTMENT 
JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE 
WHERE STUDENT.STU_GPA = (SELECT MIN(STU_GPA) FROM STUDENT)
```
```
-------------------------3301 sample_num
```sql
SELECT STU_FNAME, STU_GPA 
FROM STUDENT 
WHERE STU_GPA < (SELECT AVG(STU_GPA) FROM STUDENT);
```
-------------------------3302 sample_num
```sql
SELECT STU_FNAME, STU_GPA 
FROM STUDENT 
WHERE STU_GPA < (SELECT AVG(STU_GPA) FROM STUDENT);
```
-------------------------3303 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, DEPARTMENT.DEPT_ADDRESS 
FROM DEPARTMENT 
JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE 
GROUP BY DEPARTMENT.DEPT_CODE 
ORDER BY COUNT(STUDENT.STU_NUM) DESC 
LIMIT 1;
```
-------------------------3304 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, DEPARTMENT.DEPT_ADDRESS 
FROM DEPARTMENT 
JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE 
GROUP BY DEPARTMENT.DEPT_NAME, DEPARTMENT.DEPT_ADDRESS 
ORDER BY COUNT(STUDENT.STU_NUM) DESC 
LIMIT 1;
```
-------------------------3305 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, DEPARTMENT.DEPT_ADDRESS, COUNT(STUDENT.STU_NUM) AS NUM_STUDENTS
FROM DEPARTMENT
JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_CODE
ORDER BY NUM_STUDENTS DESC
LIMIT 3;
```
-------------------------3306 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME, DEPARTMENT.DEPT_ADDRESS, COUNT(STUDENT.STU_NUM) AS STUDENT_COUNT
FROM DEPARTMENT
JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE
GROUP BY DEPARTMENT.DEPT_NAME, DEPARTMENT.DEPT_ADDRESS
ORDER BY STUDENT_COUNT DESC
LIMIT 3;
```
-------------------------3307 sample_num
```sql
SELECT T1.EMP_FNAME, T2.PROF_OFFICE 
FROM EMPLOYEE AS T1 
JOIN PROFESSOR AS T2 ON T1.EMP_NUM = T2.EMP_NUM 
WHERE T2.DEPT_CODE = 'HISTORY' AND T2.PROF_HIGH_DEGREE = 'Ph.D.'
```
-------------------------3308 sample_num
```sql
SELECT EMP_FNAME, PROF_OFFICE 
FROM PROFESSOR 
JOIN EMPLOYEE ON PROFESSOR.EMP_NUM = EMPLOYEE.EMP_NUM 
WHERE DEPT_CODE = 'HISTORY' AND PROF_HIGH_DEGREE = 'Ph.D';
```
-------------------------3309 sample_num
```sql
SELECT DISTINCT EMPLOYEE.EMP_FNAME, CLASS.CRS_CODE
FROM EMPLOYEE
JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM
JOIN CLASS ON PROFESSOR.EMP_NUM = CLASS.PROF_NUM;
```
-------------------------3310 sample_num
```sql
SELECT EMPLOYEE.EMP_FNAME, CLASS.CRS_CODE 
FROM EMPLOYEE 
JOIN CLASS ON EMPLOYEE.EMP_NUM = CLASS.PROF_NUM;
```
-------------------------3311 sample_num
```sql
SELECT DISTINCT E.EMP_FNAME, C.CRS_DESCRIPTION
FROM EMPLOYEE E
JOIN PROFESSOR P ON E.EMP_NUM = P.EMP_NUM
JOIN CLASS CL ON P.EMP_NUM = CL.PROF_NUM
JOIN COURSE CR ON CL.CRS_CODE = CR.CRS_CODE;
```
-------------------------3312 sample_num
```sql
SELECT EMPLOYEE.EMP_FNAME, COURSE.CRS_DESCRIPTION
FROM EMPLOYEE
JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM
JOIN CLASS ON PROFESSOR.EMP_NUM = CLASS.PROF_NUM
JOIN COURSE ON CLASS.CRS_CODE = COURSE.CRS_CODE;
```
-------------------------3313 sample_num
```sql
SELECT DISTINCT E.EMP_FNAME, P.PROF_OFFICE, C.CRS_DESCRIPTION
FROM EMPLOYEE E
JOIN PROFESSOR P ON E.EMP_NUM = P.EMP_NUM
JOIN CLASS CL ON P.EMP_NUM = CL.PROF_NUM
JOIN COURSE CR ON CL.CRS_CODE = CR.CRS_CODE;
```
-------------------------3314 sample_num
```sql
SELECT DISTINCT E.EMP_FNAME, P.PROF_OFFICE 
FROM EMPLOYEE E 
JOIN PROFESSOR P ON E.EMP_NUM = P.EMP_NUM 
JOIN CLASS C ON E.EMP_NUM = C.PROF_NUM;
```
-------------------------3315 sample_num
```sql
SELECT DISTINCT E.EMP_FNAME, P.PROF_OFFICE, C.CRS_DESCRIPTION, D.DEPT_NAME
FROM EMPLOYEE E
JOIN PROFESSOR P ON E.EMP_NUM = P.EMP_NUM
JOIN CLASS CL ON CL.PROF_NUM = E.EMP_NUM
JOIN COURSE CR ON CR.CRS_CODE = CL.CRS_CODE
JOIN DEPARTMENT D ON D.DEPT_CODE = CR.DEPT_CODE;
```
-------------------------3316 sample_num
```sql
SELECT 
    E.EMP_FNAME AS Instructor_First_Name,
    P.PROF_OFFICE AS Office_Location,
    D.DEPT_NAME AS Department,
    C.CRS_DESCRIPTION AS Course_Description
FROM 
    EMPLOYEE E
JOIN 
    PROFESSOR P ON E.EMP_NUM = P.EMP_NUM
JOIN 
    DEPARTMENT D ON P.DEPT_CODE = D.DEPT_CODE
JOIN 
    CLASS CL ON CL.PROF_NUM = E.EMP_NUM
JOIN 
    COURSE C ON CL.CRS_CODE = C.CRS_CODE;
```
-------------------------3317 sample_num
```sql
SELECT DISTINCT S.STU_FNAME, S.STU_LNAME, C.CRS_DESCRIPTION
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS CL ON E.CLASS_CODE = CL.CLASS_CODE
JOIN COURSE C ON CL.CRS_CODE = C.CRS_CODE;
```
-------------------------3318 sample_num
```sql
SELECT DISTINCT s.STU_FNAME, s.STU_LNAME, c.CRS_DESCRIPTION
FROM STUDENT s
JOIN ENROLL e ON s.STU_NUM = e.STU_NUM
JOIN CLASS cl ON e.CLASS_CODE = cl.CLASS_CODE
JOIN COURSE c ON cl.CRS_CODE = c.CRS_CODE;
```
-------------------------3319 sample_num
```sql
SELECT DISTINCT s.STU_FNAME, s.STU_LNAME 
FROM STUDENT s
JOIN ENROLL e ON s.STU_NUM = e.STU_NUM 
WHERE e.ENROLL_GRADE IN ('A', 'C');
```
-------------------------3320 sample_num
```sql
SELECT DISTINCT s.STU_FNAME, s.STU_LNAME
FROM STUDENT s
JOIN ENROLL e ON s.STU_NUM = e.STU_NUM
WHERE e.ENROLL_GRADE IN ('A', 'C');
```
-------------------------3321 sample_num
```sql
SELECT P.EMP_FNAME, C.CLASS_ROOM
FROM PROFESSOR P
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM
JOIN CLASS C ON P.EMP_NUM = C.PROF_NUM
JOIN COURSE CR ON C.CRS_CODE = CR.CRS_CODE
WHERE CR.DEPT_CODE = 'Accounting'
```
Note: The query assumes that there's a specific DEPT_CODE for the Accounting department. If it's different, you should replace 'Accounting' with the correct DEPT_CODE.
-------------------------3322 sample_num
```sql
SELECT DISTINCT E.EMP_FNAME, C.CLASS_ROOM 
FROM EMPLOYEE E 
JOIN PROFESSOR P ON E.EMP_NUM = P.EMP_NUM 
JOIN CLASS CL ON CL.PROF_NUM = E.EMP_NUM 
JOIN COURSE CR ON CR.CRS_CODE = CL.CRS_CODE 
WHERE P.DEPT_CODE = 'ACC'
```
```
-------------------------3323 sample_num
```sql
SELECT P.EMP_FNAME, P.PROF_HIGH_DEGREE
FROM PROFESSOR P
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM
JOIN CLASS C ON E.EMP_NUM = C.PROF_NUM
JOIN COURSE CR ON C.CRS_CODE = CR.CRS_CODE
JOIN DEPARTMENT D ON CR.DEPT_CODE = D.DEPT_CODE
WHERE D.DEPT_NAME = 'Computer Info. Systems';
```
-------------------------3324 sample_num
```sql
SELECT DISTINCT P.EMP_FNAME, P.PROF_HIGH_DEGREE 
FROM PROFESSOR P 
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM 
JOIN DEPARTMENT D ON P.DEPT_CODE = D.DEPT_CODE 
WHERE D.DEPT_NAME = 'Computer Information Systems';
```
-------------------------3325 sample_num
```sql
SELECT S.STU_LNAME 
FROM STUDENT S 
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM 
WHERE E.ENROLL_GRADE = 'A' AND E.CLASS_CODE = '10018';
```
-------------------------3326 sample_num
```sql
SELECT S.STU_LNAME 
FROM STUDENT S 
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM 
WHERE E.ENROLL_GRADE = 'A' AND E.CLASS_CODE = '10018';
```
-------------------------3327 sample_num
```sql
SELECT EMP_FNAME, PROF_OFFICE 
FROM PROFESSOR 
JOIN EMPLOYEE ON PROFESSOR.EMP_NUM = EMPLOYEE.EMP_NUM 
WHERE DEPT_CODE = 'HISTORY' AND PROF_HIGH_DEGREE != 'Ph.D.';
```
-------------------------3328 sample_num
```sql
SELECT EMP_FNAME, PROF_OFFICE 
FROM PROFESSOR 
JOIN EMPLOYEE ON PROFESSOR.EMP_NUM = EMPLOYEE.EMP_NUM 
WHERE DEPT_CODE = 'HISTORY' AND PROF_HIGH_DEGREE != 'Ph.D.'
```
-------------------------3329 sample_num
```sql
SELECT P.EMP_FNAME
FROM PROFESSOR P
JOIN EMPLOYEE E ON P.EMP_NUM = E.EMP_NUM
JOIN CLASS C ON E.EMP_NUM = C.PROF_NUM
GROUP BY P.EMP_FNAME
HAVING COUNT(C.CLASS_CODE) > 1;
```
-------------------------3330 sample_num
```sql
SELECT T1.EMP_FNAME 
FROM EMPLOYEE AS T1 
JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM 
GROUP BY T2.PROF_NUM 
HAVING COUNT(*) > 1
```
-------------------------3331 sample_num
```sql
SELECT S.STU_FNAME
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
WHERE (
    SELECT COUNT(*)
    FROM ENROLL E2
    WHERE E.STU_NUM = E2.STU_NUM
) = 1
GROUP BY S.STU_FNAME;
```
-------------------------3332 sample_num
```sql
SELECT STU_FNAME
FROM STUDENT
WHERE STU_NUM IN (
    SELECT STU_NUM
    FROM ENROLL
    GROUP BY STU_NUM
    HAVING COUNT(DISTINCT CRS_CODE) = 1
)
```
-------------------------3333 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME 
FROM DEPARTMENT 
JOIN COURSE ON DEPARTMENT.DEPT_CODE = COURSE.DEPT_CODE 
WHERE COURSE.CRS_DESCRIPTION LIKE '%Statistics%';
```
-------------------------3334 sample_num
```sql
SELECT DEPARTMENT.DEPT_NAME 
FROM DEPARTMENT 
JOIN COURSE ON DEPARTMENT.DEPT_CODE = COURSE.DEPT_CODE 
WHERE COURSE.CRS_DESCRIPTION LIKE '%Statistics%';
```
-------------------------3335 sample_num
```sql
SELECT S.STU_FNAME 
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS C ON E.CLASS_CODE = C.CLASS_CODE
JOIN COURSE Cr ON C.CRS_CODE = Cr.CRS_CODE
WHERE S.STU_LNAME LIKE 'S%' AND Cr.CRS_DESCRIPTION = 'ACCT-211'
```
-------------------------3336 sample_num
```sql
SELECT S.STU_FNAME 
FROM STUDENT S
JOIN ENROLL E ON S.STU_NUM = E.STU_NUM
JOIN CLASS C ON E.CLASS_CODE = C.CLASS_CODE
JOIN COURSE Cr ON C.CRS_CODE = Cr.CRS_CODE
WHERE S.STU_LNAME LIKE 'S%' AND Cr.CRS_DESCRIPTION = 'ACCT-211'
```
-------------------------3337 sample_num
```sql
SELECT COUNT(*) FROM club;
```
-------------------------3338 sample_num
```sql
SELECT COUNT(*) FROM club;
```
-------------------------3339 sample_num
```sql
SELECT DISTINCT Region FROM club ORDER BY Region ASC;
```
-------------------------3340 sample_num
```sql
SELECT DISTINCT Region FROM club ORDER BY Region ASC;
```
-------------------------3341 sample_num
```sql
SELECT AVG(Gold) FROM club_rank;
```
-------------------------3342 sample_num
```sql
SELECT AVG(Gold) FROM club_rank;
```
-------------------------3343 sample_num
```sql
SELECT Competition_type, Country FROM competition;
```
-------------------------3344 sample_num
```sql
SELECT Competition_type, Country FROM competition;
```
-------------------------3345 sample_num
```sql
SELECT DISTINCT Year FROM competition WHERE Competition_type != 'Tournament';
```
-------------------------3346 sample_num
```sql
SELECT DISTINCT Year FROM competition WHERE Competition_type != 'tournament';
```
-------------------------3347 sample_num
```sql
SELECT MAX(Silver) AS Max_Silver, MIN(Silver) AS Min_Silver 
FROM club_rank;
```
-------------------------3348 sample_num
```sql
SELECT MAX(Silver) AS Max_Silver, MIN(Silver) AS Min_Silver 
FROM club_rank;
```
-------------------------3349 sample_num
```sql
SELECT COUNT(*) 
FROM club_rank 
WHERE Gold + Silver + Bronze < 10;
```
-------------------------3350 sample_num
```sql
SELECT COUNT(*) 
FROM club c 
JOIN club_rank cr ON c.Club_ID = cr.Club_ID 
WHERE cr.Total < 10;
```
-------------------------3351 sample_num
```sql
SELECT name 
FROM club 
ORDER BY Start_year ASC;
```
-------------------------3352 sample_num
```sql
SELECT name FROM club ORDER BY Start_year ASC;
```
-------------------------3353 sample_num
```sql
SELECT name 
FROM club 
ORDER BY name DESC;
```
-------------------------3354 sample_num
```sql
SELECT name FROM club ORDER BY name DESC;
```
-------------------------3355 sample_num
```sql
SELECT C.name AS Club_Name, P.name AS Player_Name 
FROM club AS C 
JOIN player AS P ON C.Club_ID = P.Club_ID;
```
-------------------------3356 sample_num
```sql
SELECT name, Player_ID FROM club 
JOIN player ON club.Club_ID = player.Club_ID;
```
-------------------------3357 sample_num
```sql
SELECT DISTINCT c.name 
FROM club c
JOIN player p ON c.Club_ID = p.Club_ID
WHERE p.Position = 'Right Wing';
```
-------------------------3358 sample_num
```sql
SELECT DISTINCT c.name 
FROM club c
JOIN player p ON c.Club_ID = p.Club_ID
WHERE p.Position = 'Right Wing';
```
-------------------------3359 sample_num
```sql
SELECT AVG(T2.Points) 
FROM club AS T1 
JOIN player AS T2 ON T1.Club_ID = T2.Club_ID 
WHERE T1.name = 'AIB';
```
-------------------------3360 sample_num
```sql
SELECT AVG(Points) 
FROM player 
WHERE Club_ID = (SELECT Club_ID FROM club WHERE name = 'AIB');
```
-------------------------3361 sample_num
```sql
SELECT Position, AVG(Points) 
FROM player 
GROUP BY Position;
```
-------------------------3362 sample_num
```sql
SELECT player.Position, AVG(player.Points) 
FROM player 
GROUP BY player.Position;
```
-------------------------3363 sample_num
```sql
SELECT p.Position 
FROM player p
GROUP BY p.Position 
HAVING AVG(p.Points) > 20;
```
-------------------------3364 sample_num
```sql
SELECT p.Position
FROM player p
GROUP BY p.Position
HAVING AVG(p.Points) > 20;
```
Note: This query assumes that the 'Points' column in the 'player' table represents the total points scored by each player. If it represents the points scored per game or any other metric, adjustments to the query may be necessary. Also, please ensure the structure and data types of your tables match with the SQL query. For example, if the 'Points' column is not numeric, you should convert it before calculating the average.
-------------------------3365 sample_num
```sql
SELECT Competition_type, COUNT(*) 
FROM competition 
GROUP BY Competition_type;
```
-------------------------3366 sample_num
```sql
SELECT Competition_type, COUNT(*) 
FROM competition 
GROUP BY Competition_type;
```
-------------------------3367 sample_num
```sql
SELECT Competition_type, COUNT(*) as count
FROM competition
GROUP BY Competition_type
ORDER BY count DESC
LIMIT 1;
```
-------------------------3368 sample_num
```sql
SELECT Competition_type, COUNT(*) as count 
FROM competition 
GROUP BY Competition_type 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------3369 sample_num
```sql
SELECT Competition_type 
FROM competition 
GROUP BY Competition_type 
HAVING COUNT(*) <= 5;
```
-------------------------3370 sample_num
```sql
SELECT Competition_type 
FROM competition 
GROUP BY Competition_type 
HAVING COUNT(Competition_ID) <= 5;
```
-------------------------3371 sample_num
```sql
SELECT name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)
```
-------------------------3372 sample_num
```sql
SELECT name FROM club WHERE Club_ID NOT IN (SELECT DISTINCT Club_ID FROM player)
```
-------------------------3373 sample_num
```sql
SELECT Position 
FROM player 
WHERE Points > 20 
INTERSECT 
SELECT Position 
FROM player 
WHERE Points < 10;
```
-------------------------3374 sample_num
```sql
SELECT p1.Position, p2.Position 
FROM player p1, player p2 
WHERE p1.Points > 20 AND p2.Points < 10
``` 

Note: This query will not return accurate results because it doesn't filter the two players based on their individual points. To achieve the intended result, subqueries or joins with conditions should be used. However, as per instruction to keep the SQL brief and no need for an explanation, I provided a simple SQL statement. A more accurate query would look something like this:

```sql
SELECT p.Position 
FROM player p 
WHERE p.Points > 20 
UNION 
SELECT p.Position 
FROM player p 
WHERE p.Points < 10
```
-------------------------3375 sample_num
```sql
SELECT SUM(Points) FROM player;
```
-------------------------3376 sample_num
```sql
SELECT SUM(Points) FROM player;
```
-------------------------3377 sample_num
```sql
SELECT COUNT(DISTINCT Position) FROM player;
```
-------------------------3378 sample_num
```sql
SELECT COUNT(DISTINCT Position) FROM player;
```
-------------------------3379 sample_num
```sql
SELECT name 
FROM player 
WHERE Points > (SELECT AVG(Points) FROM player);
```
-------------------------3380 sample_num
```sql
SELECT name 
FROM player 
WHERE Points > (SELECT AVG(Points) FROM player);
```
-------------------------3381 sample_num
```sql
SELECT Position, COUNT(*) 
FROM player 
WHERE Points < 30 
GROUP BY Position;
```
-------------------------3382 sample_num
```sql
SELECT Position, COUNT(*) 
FROM player 
WHERE Points < 30 
GROUP BY Position;
```
-------------------------3383 sample_num
```sql
SELECT Country 
FROM competition 
WHERE Competition_type = 'Tournament' 
GROUP BY Country 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3384 sample_num
```sql
SELECT Country 
FROM competition 
GROUP BY Country 
ORDER BY COUNT(Competition_ID) DESC 
LIMIT 1;
```
-------------------------3385 sample_num
```sql
SELECT Country 
FROM competition 
WHERE Competition_type = 'Friendly' 
INTERSECT 
SELECT Country 
FROM competition 
WHERE Competition_type = 'Tournament'
```
-------------------------3386 sample_num
```sql
SELECT 
    Country 
FROM 
    competition 
WHERE 
    Competition_type = 'friendly' 
INTERSECT 
SELECT 
    Country 
FROM 
    competition 
WHERE 
    Competition_type = 'tournament';
```
-------------------------3387 sample_num
```sql
SELECT Country
FROM competition
WHERE Competition_type != 'Friendly'
GROUP BY Country
HAVING COUNT(*) = (SELECT COUNT(*) FROM competition)
```
This query is not correct. The correct answer should be:

```sql
SELECT Country
FROM competition
WHERE Competition_type <> 'Friendly'
GROUP BY Country
HAVING SUM(CASE WHEN Competition_type = 'Friendly' THEN 1 ELSE 0 END) = 0
```
-------------------------3388 sample_num
```sql
SELECT Country
FROM competition
WHERE Competition_type != 'Friendly'
GROUP BY Country
HAVING COUNT(*) = (SELECT COUNT(*) FROM competition WHERE Competition_type != 'Friendly')
```
-------------------------3389 sample_num
```sql
SELECT SUM(Num_of_Component) FROM furniture
```
-------------------------3390 sample_num
```sql
SELECT T1.Name, T1.Furniture_ID 
FROM furniture AS T1 
JOIN furniture_manufacte AS T2 
ON T1.Furniture_ID = T2.Furniture_ID 
WHERE T1.Market_Rate = (SELECT MAX(Market_Rate) FROM furniture)
```
-------------------------3391 sample_num
```sql
SELECT SUM(Market_Rate) 
FROM (
  SELECT Market_Rate
  FROM furniture
  ORDER BY Market_Rate DESC
  LIMIT 2
) as TopTwo
```
-------------------------3392 sample_num
```sql
SELECT f.Name, f.Num_of_Component 
FROM furniture AS f
WHERE f.Num_of_Component > 10;
```
-------------------------3393 sample_num
```sql
SELECT T1.Name, T1.Num_of_Component 
FROM furniture AS T1 
JOIN furniture_manufacte AS T2 
ON T1.Furniture_ID = T2.Furniture_ID 
GROUP BY T2.Furniture_ID 
ORDER BY AVG(T2.Price_in_Dollar) ASC, T1.Num_of_Component ASC 
LIMIT 1;
```
-------------------------3394 sample_num
```sql
SELECT f.Name 
FROM furniture f 
JOIN furniture_manufacte fm ON f.Furniture_ID = fm.Furniture_ID 
WHERE fm.Price_in_Dollar < (SELECT MAX(Price_in_Dollar) FROM furniture_manufacte)
```
-------------------------3395 sample_num
```sql
SELECT Name, Open_Year 
FROM manufacturer 
WHERE Num_of_Shops = (SELECT MAX(Num_of_Shops) FROM manufacturer);
```
-------------------------3396 sample_num
```sql
SELECT AVG(Num_of_Factories) 
FROM manufacturer 
WHERE Num_of_Shops > 20;
```
-------------------------3397 sample_num
```sql
SELECT Manufacturer_ID, Name 
FROM manufacturer 
ORDER BY Open_Year;
```
-------------------------3398 sample_num
```sql
SELECT Name, Open_Year 
FROM manufacturer 
WHERE Num_of_Factories < 10 OR Num_of_Shops > 10;
```
-------------------------3399 sample_num
```sql
SELECT AVG(Num_of_Factories), MAX(Num_of_Shops)
FROM manufacturer
WHERE Open_Year < 1990;
```
-------------------------3400 sample_num
```sql
SELECT T1.Manufacturer_ID, T1.Num_of_Shops 
FROM manufacturer AS T1 
JOIN furniture_manufacte AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID 
JOIN furniture AS T3 ON T2.Furniture_ID = T3.Furniture_ID 
WHERE T2.Price_in_Dollar = (SELECT MAX(Price_in_Dollar) FROM furniture_manufacte)
```
-------------------------3401 sample_num
```sql
SELECT manufacturer.Name, COUNT(furniture.Furniture_ID) AS Num_of_Furniture_Types
FROM manufacturer
JOIN furniture_manufacte ON manufacturer.Manufacturer_ID = furniture_manufacte.Manufacturer_ID
JOIN furniture ON furniture_manufacte.Furniture_ID = furniture.Furniture_ID
GROUP BY manufacturer.Name;
```
-------------------------3402 sample_num
```sql
SELECT T2.Name, T1.Price_in_Dollar 
FROM furniture_manufacte AS T1 
JOIN furniture AS T2 ON T1.Furniture_ID = T2.Furniture_ID;
```
-------------------------3403 sample_num
```sql
SELECT f.Name, f.Market_Rate 
FROM furniture f
LEFT JOIN furniture_manufacte fm ON f.Furniture_ID = fm.Furniture_ID
WHERE fm.Furniture_ID IS NULL;
```
-------------------------3404 sample_num
```sql
SELECT m.Name 
FROM manufacturer m
JOIN furniture_manufacte fm ON m.Manufacturer_ID = fm.Manufacturer_ID 
JOIN furniture f ON fm.Furniture_ID = f.Furniture_ID 
WHERE f.Num_of_Component < 6 
GROUP BY m.Name
HAVING COUNT(f.Furniture_ID) > 0 
AND EXISTS (
    SELECT 1 
    FROM furniture_manufacte fm2 
    JOIN furniture f2 ON fm2.Furniture_ID = f2.Furniture_ID 
    WHERE m.Manufacturer_ID = fm2.Manufacturer_ID 
    AND f2.Num_of_Component > 10
);
```
-------------------------3405 sample_num
```sql
SELECT e.FIRST_NAME, d.DEPARTMENT_NAME 
FROM employees e 
JOIN departments d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;
```
-------------------------3406 sample_num
```sql
SELECT e.FIRST_NAME, d.DEPARTMENT_NAME 
FROM employees e 
JOIN departments d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;
```
-------------------------3407 sample_num
```sql
SELECT FIRST_NAME, LAST_NAME, SALARY 
FROM employees 
WHERE SALARY < 6000;
```
-------------------------3408 sample_num
```sql
SELECT FULL_NAME, SALARY 
FROM employees 
WHERE SALARY < 6000;
```
Note: The column FULL_NAME is not existing in the employees table, you have to combine FIRST_NAME and LAST_NAME. Here's the corrected SQL:
```sql
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME, SALARY 
FROM employees 
WHERE SALARY < 6000;
```
-------------------------3409 sample_num
```sql
SELECT first_name, department_id 
FROM employees 
WHERE last_name = 'McEwen';
```
-------------------------3410 sample_num
```sql
SELECT FIRST_NAME, DEPARTMENT_ID 
FROM employees 
WHERE LAST_NAME = 'McEwen';
```
-------------------------3411 sample_num
```sql
SELECT * FROM employees WHERE DEPARTMENT_ID IS NULL;
```
-------------------------3412 sample_num
```sql
SELECT * FROM employees WHERE DEPARTMENT_ID IS NULL;
```
-------------------------3413 sample_num
```sql
SELECT * FROM departments WHERE department_name = 'Marketing';
```
-------------------------3414 sample_num
```sql
SELECT * FROM departments WHERE department_name = 'Marketing';
```
-------------------------3415 sample_num
```sql
SELECT HIRE_DATE 
FROM employees 
WHERE NOT FIRST_NAME LIKE '%M%';
```
-------------------------3416 sample_num
```sql
SELECT HIRE_DATE 
FROM employees 
WHERE NOT FIRST_NAME LIKE '%M%';
```
-------------------------3417 sample_num
```sql
SELECT first_name, last_name, hire_date, salary, department_id 
FROM employees 
WHERE first_name NOT LIKE '%M%';
```
-------------------------3418 sample_num
```sql
SELECT FIRST_NAME, LAST_NAME, HIRE_DATE, SALARY, DEPARTMENT_ID 
FROM employees 
WHERE FIRST_NAME NOT LIKE '%M%';
```
-------------------------3419 sample_num
```sql
SELECT first_name, last_name, hire_date, salary, department_id 
FROM employees 
WHERE first_name NOT LIKE '%M%' 
ORDER BY department_id ASC;
```
-------------------------3420 sample_num
```sql
SELECT FIRST_NAME, LAST_NAME, HIRE_DATE, SALARY, DEPARTMENT_ID 
FROM employees 
WHERE FIRST_NAME NOT LIKE '%M%' 
ORDER BY DEPARTMENT_ID ASC;
```
-------------------------3421 sample_num
```sql
SELECT PHONE_NUMBER 
FROM employees 
WHERE SALARY BETWEEN 8000 AND 12000;
```
-------------------------3422 sample_num
```sql
SELECT PHONE_NUMBER 
FROM employees 
WHERE SALARY BETWEEN 8000 AND 12000;
```
-------------------------3423 sample_num
```sql
SELECT * FROM employees 
WHERE SALARY BETWEEN 8000 AND 12000 
AND (COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID != 40);
```
-------------------------3424 sample_num
```sql
SELECT * FROM employees 
WHERE SALARY BETWEEN 8000 AND 12000 
AND (COMMISSION_PCT IS NOT NULL OR DEPARTMENT_ID != 40);
```
-------------------------3425 sample_num
```sql
SELECT FIRST_NAME, LAST_NAME, SALARY 
FROM employees 
WHERE COMMISSION_PCT IS NULL;
```
-------------------------3426 sample_num
```sql
SELECT FIRST_NAME, LAST_NAME, SALARY 
FROM employees 
WHERE COMMISSION_PCT IS NULL;
```
-------------------------3427 sample_num
```sql
SELECT first_name, last_name, salary 
FROM employees 
WHERE first_name LIKE '%m';
```
-------------------------3428 sample_num
```sql
SELECT first_name, last_name, salary 
FROM employees 
WHERE first_name LIKE '%m';
``` 
However, to return the full names, the correct query should be:
```sql
SELECT CONCAT(first_name, ' ', last_name) AS full_name, salary 
FROM employees 
WHERE first_name LIKE '%m';
```
-------------------------3429 sample_num
```sql
SELECT EMPLOYEE_ID, HIRE_DATE 
FROM employees 
WHERE HIRE_DATE BETWEEN '2007-11-05' AND '2009-07-05';
```
```
-------------------------3430 sample_num
```sql
SELECT EMPLOYEE_ID, JOB_ID, HIRE_DATE 
FROM employees 
WHERE HIRE_DATE BETWEEN '2007-11-06' AND '2009-07-05';
```
-------------------------3431 sample_num
```sql
SELECT FIRST_NAME, LAST_NAME 
FROM employees 
WHERE DEPARTMENT_ID IN (70, 90);
```
-------------------------3432 sample_num
```sql
SELECT FIRST_NAME, LAST_NAME 
FROM employees 
WHERE DEPARTMENT_ID IN (70, 90);
```
-------------------------3433 sample_num
```sql
SELECT EMPLOYEE_ID, SALARY, MANAGER_ID 
FROM employees 
WHERE MANAGER_ID IS NOT NULL;
```
-------------------------3434 sample_num
```sql
SELECT salary, manager_id FROM employees WHERE manager_id IS NOT NULL;
```
-------------------------3435 sample_num
```sql
SELECT * FROM employees 
WHERE hire_date < '2002-06-21';
```
-------------------------3436 sample_num
```sql
SELECT *
FROM employees
WHERE hire_date < '2002-06-21';
```
-------------------------3437 sample_num
```sql
SELECT *
FROM employees
WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%'
ORDER BY SALARY DESC;
```
-------------------------3438 sample_num
```sql
SELECT *
FROM employees
WHERE FIRST_NAME LIKE '%D%' OR FIRST_NAME LIKE '%S%'
ORDER BY SALARY DESC;
```
-------------------------3439 sample_num
```sql
SELECT * FROM employees WHERE HIRE_DATE > '1987-09-07';
```
-------------------------3440 sample_num
```sql
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, HIRE_DATE 
FROM employees 
WHERE HIRE_DATE > '1987-09-07';
```
-------------------------3441 sample_num
```sql
SELECT JOB_TITLE
FROM jobs
WHERE MIN_SALARY > 9000;
```
-------------------------3442 sample_num
```sql
SELECT job_title 
FROM jobs 
WHERE MAX_SALARY > 9000;
```
However, this will not give you the exact job titles that have employees earning over 9000 as the salary range may include values below 9000. A more accurate query would be:
```sql
SELECT j.job_title 
FROM jobs j
JOIN employees e ON j.job_id = e.job_id 
WHERE e.salary > 9000;
```
-------------------------3443 sample_num
```sql
SELECT JOB_TITLE, (MAX_SALARY - MIN_SALARY) AS SALARY_DIFFERENCE 
FROM jobs 
WHERE MAX_SALARY BETWEEN 12000 AND 18000;
```
-------------------------3444 sample_num
```sql
SELECT JOB_TITLE, MIN_SALARY, MAX_SALARY
FROM jobs
WHERE MAX_SALARY BETWEEN 12000 AND 18000;
```
-------------------------3445 sample_num
```sql
SELECT email 
FROM employees 
WHERE commission_pct IS NULL 
AND salary BETWEEN 7000 AND 12000 
AND department_id = 50;
```
-------------------------3446 sample_num
```sql
SELECT email 
FROM employees 
WHERE commission_pct IS NULL 
AND salary BETWEEN 7000 AND 12000 
AND department_id = 50;
```
-------------------------3447 sample_num
```sql
SELECT e.EMPLOYEE_ID, jh.END_DATE 
FROM employees e
JOIN job_history jh ON e.EMPLOYEE_ID = jh.EMPLOYEE_ID;
```
-------------------------3448 sample_num
```sql
SELECT e.EMPLOYEE_ID, jh.END_DATE 
FROM employees e
JOIN job_history jh ON e.EMPLOYEE_ID = jh.EMPLOYEE_ID
WHERE jh.END_DATE IN (
    SELECT MAX(jh2.END_DATE)
    FROM job_history jh2
    WHERE jh.EMPLOYEE_ID = jh2.EMPLOYEE_ID
)
```
-------------------------3449 sample_num
```sql
SELECT d.DEPARTMENT_NAME
FROM departments d
JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
WHERE e.COMMISSION_PCT IS NOT NULL
GROUP BY d.DEPARTMENT_ID, d.DEPARTMENT_NAME
HAVING COUNT(e.EMPLOYEE_ID) > 10;
```
-------------------------3450 sample_num
```sql
SELECT DEPARTMENT_ID 
FROM employees 
GROUP BY DEPARTMENT_ID 
HAVING COUNT(*) > 10 
AND SUM(COMMISSION_PCT IS NOT NULL) > 0;
```
Note: The above query assumes that if an employee has a commission, the `COMMISSION_PCT` column will have a non-null value. However, this may not always be the case, and you may need to adjust the query accordingly.
-------------------------3451 sample_num
```sql
SELECT DISTINCT d.DEPARTMENT_ID 
FROM departments d
JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
WHERE d.MANAGER_ID = e.EMPLOYEE_ID
GROUP BY d.DEPARTMENT_ID
HAVING COUNT(e.EMPLOYEE_ID) >= 4;
```
-------------------------3452 sample_num
```sql
SELECT d.department_id 
FROM departments d
JOIN employees e ON d.department_id = e.department_id AND d.manager_id = e.employee_id
GROUP BY d.department_id
HAVING COUNT(e.employee_id) > 3
```
-------------------------3453 sample_num
```sql
SELECT departments.DEPARTMENT_NAME, AVG(employees.SALARY) as AVG_SALARY
FROM employees
JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID
WHERE employees.COMMISSION_PCT IS NOT NULL
GROUP BY departments.DEPARTMENT_NAME;
```
-------------------------3454 sample_num
```sql
SELECT AVG(SALARY) 
FROM employees 
WHERE COMMISSION_PCT IS NOT NULL;
```
-------------------------3455 sample_num
```sql
SELECT 
    COUNTRY_ID, 
    COUNT(CITY) AS NUMBER_OF_CITIES
FROM 
    LOCATIONS
GROUP BY 
    COUNTRY_ID;
```
-------------------------3456 sample_num
```sql
SELECT COUNTRY_ID, COUNT(CITY) AS CITY_COUNT
FROM locations
GROUP BY COUNTRY_ID;
```
-------------------------3457 sample_num
```sql
SELECT jh.JOB_ID
FROM job_history jh
GROUP BY jh.JOB_ID
HAVING SUM(jh.END_DATE - jh.START_DATE) > 300
AND COUNT(jh.JOB_ID) >= 2;
```
Note: This query might not work as expected because the SUM of intervals (END_DATE - START_DATE) doesn't account for overlapping periods. A more complex query would be needed to accurately calculate the total duration for each job_id.
However, to fulfill the requirement of a brief SQL query, this simplified version is provided.
-------------------------3458 sample_num
```sql
SELECT jh1.JOB_ID 
FROM job_history jh1
JOIN job_history jh2 
ON jh1.JOB_ID = jh2.JOB_ID AND jh1.EMPLOYEE_ID <> jh2.EMPLOYEE_ID
WHERE ABS(DATEDIFF(jh1.START_DATE, jh2.END_DATE)) > 300
GROUP BY jh1.JOB_ID
HAVING COUNT(jh1.JOB_ID) > 1
```
Note: The DATEDIFF function may vary depending on the SQL dialect being used. For SQL Server it would be `ABS(DATEDIFF(day, jh1.START_DATE, jh2.END_DATE))`, for MySQL it would be `ABS(TIMESTAMPDIFF(DAY, jh1.START_DATE, jh2.END_DATE))`.
-------------------------3459 sample_num
```sql
SELECT EMPLOYEE_ID
FROM job_history
GROUP BY EMPLOYEE_ID
HAVING COUNT(*) >= 2;
```
-------------------------3460 sample_num
```sql
SELECT EMPLOYEE_ID
FROM job_history
GROUP BY EMPLOYEE_ID
HAVING COUNT(*) >= 2;
```
-------------------------3461 sample_num
```sql
SELECT e.EMPLOYEE_ID, c.COUNTRY_NAME 
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID
JOIN countries c ON l.COUNTRY_ID = c.COUNTRY_ID
WHERE e.EMPLOYEE_ID = <ID>;
```
Note: Replace `<ID>` with the actual employee ID you want to find.
```
-------------------------3462 sample_num
```sql
SELECT e.EMPLOYEE_ID, c.COUNTRY_NAME 
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID
JOIN countries c ON l.COUNTRY_ID = c.COUNTRY_ID;
```
-------------------------3463 sample_num
```sql
SELECT d.DEPARTMENT_NAME, COUNT(e.EMPLOYEE_ID) AS NUM_EMPLOYEES
FROM departments d
LEFT JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
GROUP BY d.DEPARTMENT_NAME;
```
-------------------------3464 sample_num
```sql
SELECT d.DEPARTMENT_NAME, COUNT(e.EMPLOYEE_ID) AS NUM_EMPLOYEES
FROM departments d
LEFT JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
GROUP BY d.DEPARTMENT_NAME;
```
-------------------------3465 sample_num
```sql
SELECT j.*
FROM jobs j
JOIN job_history jh ON j.job_id = jh.job_id
JOIN employees e ON e.employee_id = jh.employee_id
WHERE e.salary >= 12000;
```
Note: This query assumes that there is no overlap in job history dates for the same employee, and that the current job of an employee is not included in their job history. If these assumptions do not hold, additional filtering may be necessary.
-------------------------3466 sample_num
```sql
SELECT jh.*
FROM job_history jh
JOIN employees e ON jh.employee_id = e.employee_id
WHERE e.salary >= 12000;
```
-------------------------3467 sample_num
```sql
SELECT jobs.job_title, AVG(employees.salary) as average_salary
FROM jobs
JOIN employees ON jobs.job_id = employees.job_id
GROUP BY jobs.job_title;
```
-------------------------3468 sample_num
```sql
SELECT jobs.job_title, AVG(employees.salary) as average_salary
FROM jobs 
JOIN employees ON jobs.job_id = employees.job_id
GROUP BY jobs.job_title;
```
-------------------------3469 sample_num
```sql
SELECT first_name, last_name 
FROM employees 
WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163);
```
-------------------------3470 sample_num
```sql
SELECT first_name, last_name 
FROM employees 
WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163);
```
-------------------------3471 sample_num
```sql
SELECT DEPARTMENT_ID, MIN(SALARY) 
FROM employees 
GROUP BY DEPARTMENT_ID;
```
-------------------------3472 sample_num
```sql
SELECT departments.DEPARTMENT_NAME, MIN(employees.SALARY) 
FROM employees 
JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID 
GROUP BY departments.DEPARTMENT_NAME;
```
-------------------------3473 sample_num
```sql
SELECT e.FIRST_NAME, e.LAST_NAME, e.DEPARTMENT_ID
FROM employees e
JOIN (
    SELECT DEPARTMENT_ID, MIN(SALARY) AS min_salary
    FROM employees
    GROUP BY DEPARTMENT_ID
) m ON e.SALARY = m.min_salary AND e.DEPARTMENT_ID = m.DEPARTMENT_ID;
```
-------------------------3474 sample_num
```sql
SELECT e.FIRST_NAME, e.LAST_NAME, d.DEPARTMENT_ID 
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE e.SALARY = (
    SELECT MIN(SALARY) 
    FROM employees 
    WHERE DEPARTMENT_ID = e.DEPARTMENT_ID
);
```
Note: This query will return the employee(s) with the lowest salary within each department, not across all departments. To find the lowest paid employees across all departments, you might want to use a different approach.
```sql
SELECT e.FIRST_NAME, e.LAST_NAME, d.DEPARTMENT_ID 
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE e.SALARY = (
    SELECT MIN(SALARY) 
    FROM employees
);
```
-------------------------3475 sample_num
```sql
SELECT EMPLOYEE_ID 
FROM employees 
WHERE SALARY > (SELECT AVG(SALARY) FROM employees);
```
-------------------------3476 sample_num
```sql
SELECT EMPLOYEE_ID 
FROM employees 
WHERE SALARY > (SELECT AVG(SALARY) FROM employees);
```
-------------------------3477 sample_num
```sql
SELECT EMPLOYEE_ID, SALARY 
FROM employees 
WHERE MANAGER_ID = (SELECT EMPLOYEE_ID FROM employees WHERE FIRST_NAME = 'Payam');
```
-------------------------3478 sample_num
```sql
SELECT e.EMPLOYEE_ID, e.SALARY
FROM employees e
WHERE e.MANAGER_ID = (
    SELECT e2.EMPLOYEE_ID
    FROM employees e2
    WHERE e2.LAST_NAME = 'Payam'
);
```
-------------------------3479 sample_num
```sql
SELECT d.department_name
FROM departments d
JOIN employees e ON d.department_id = e.department_id;
```
-------------------------3480 sample_num
```sql
SELECT DISTINCT d.department_name
FROM departments d
JOIN employees e ON d.department_id = e.department_id;
```
-------------------------3481 sample_num
```sql
SELECT e.*
FROM employees e
JOIN departments d ON e.employee_id = d.manager_id;
```
-------------------------3482 sample_num
```sql
SELECT e.*
FROM employees e
JOIN departments d ON e.employee_id = d.manager_id;
```
-------------------------3483 sample_num
```sql
SELECT *
FROM departments
WHERE department_name = 'Marketing';
```
-------------------------3484 sample_num
```sql
SELECT * FROM departments WHERE department_name = 'Marketing';
```
-------------------------3485 sample_num
```sql
SELECT EMPLOYEE_ID
FROM job_history
GROUP BY EMPLOYEE_ID
HAVING COUNT(*) >= 2;
```
-------------------------3486 sample_num
```sql
SELECT EMPLOYEE_ID
FROM (
  SELECT EMPLOYEE_ID,
         COUNT(*) AS num_jobs
  FROM job_history
  GROUP BY EMPLOYEE_ID
)
WHERE num_jobs >= 2;
```
-------------------------3487 sample_num
```sql
SELECT DISTINCT d.DEPARTMENT_ID 
FROM departments d
JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
WHERE d.MANAGER_ID IN (
    SELECT MANAGER_ID 
    FROM employees 
    GROUP BY MANAGER_ID 
    HAVING COUNT(*) >= 4
)
```
-------------------------3488 sample_num
```sql
SELECT DISTINCT d.department_id 
FROM departments d
JOIN employees e ON d.department_id = e.department_id
WHERE d.manager_id IN (
    SELECT manager_id 
    FROM employees 
    GROUP BY manager_id 
    HAVING COUNT(employee_id) >= 4
)
```
-------------------------3489 sample_num
```sql
SELECT j.job_id
FROM jobs j
JOIN employees e ON j.job_id = e.job_id
GROUP BY j.job_id
HAVING AVG(e.salary) > 8000;
```
-------------------------3490 sample_num
```sql
SELECT job_id 
FROM jobs 
WHERE job_id IN (
    SELECT job_id 
    FROM employees 
    GROUP BY job_id 
    HAVING AVG(salary) > 8000
);
```
-------------------------3491 sample_num
```sql
SELECT e.EMPLOYEE_ID, j.JOB_TITLE
FROM employees e
JOIN jobs j ON e.JOB_ID = j.JOB_ID
WHERE e.DEPARTMENT_ID = 80;
```
-------------------------3492 sample_num
```sql
SELECT e.EMPLOYEE_ID, j.JOB_TITLE 
FROM employees e
JOIN jobs j ON e.JOB_ID = j.JOB_ID
WHERE e.DEPARTMENT_ID = 80;
```
-------------------------3493 sample_num
```sql
SELECT e.first_name, e.job_id 
FROM employees e
JOIN departments d ON e.department_id = d.department_id
WHERE d.department_name = 'Finance';
```
-------------------------3494 sample_num
```sql
SELECT e.FIRST_NAME, e.JOB_ID 
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE d.DEPARTMENT_NAME = 'Finance';
```
-------------------------3495 sample_num
```sql
SELECT * FROM employees 
WHERE SALARY BETWEEN (SELECT MIN_SALARY FROM jobs WHERE MIN_SALARY > 0 ORDER BY MIN_SALARY LIMIT 1) AND 2500;
```
-------------------------3496 sample_num
```sql
SELECT * FROM employees 
WHERE salary > (SELECT MIN_SALARY FROM jobs WHERE jobs.JOB_ID = employees.JOB_ID) 
AND salary < 2500;
```
-------------------------3497 sample_num
```sql
SELECT DISTINCT e.EMPLOYEE_ID 
FROM employees e
WHERE e.DEPARTMENT_ID NOT IN (
    SELECT d.DEPARTMENT_ID 
    FROM departments d 
    JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID 
    WHERE e.MANAGER_ID BETWEEN 100 AND 200
);
```
-------------------------3498 sample_num
```sql
SELECT EMPLOYEE_ID 
FROM employees 
WHERE DEPARTMENT_ID NOT IN (
    SELECT DEPARTMENT_ID 
    FROM departments 
    WHERE MANAGER_ID BETWEEN 100 AND 200
);
```
-------------------------3499 sample_num
```sql
SELECT first_name, last_name, hire_date 
FROM employees 
WHERE department_id = (SELECT department_id FROM employees WHERE first_name = 'Clara') 
AND first_name != 'Clara';
```
-------------------------3500 sample_num
```sql
SELECT e1.first_name || ' ' || e1.last_name AS full_name, e1.hire_date
FROM employees e1
JOIN employees e2 ON e1.department_id = e2.department_id
WHERE e2.first_name = 'Clara';
```
-------------------------3501 sample_num
```sql
SELECT first_name, last_name, hire_date 
FROM employees 
WHERE department_id = (
    SELECT department_id 
    FROM employees 
    WHERE first_name = 'Clara'
) 
AND employee_id != (
    SELECT employee_id 
    FROM employees 
    WHERE first_name = 'Clara'
);
```
-------------------------3502 sample_num
```sql
SELECT e.FIRST_NAME, e.LAST_NAME, e.HIRE_DATE 
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE d.DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM employees WHERE FIRST_NAME = 'Clara')
AND e.FIRST_NAME != 'Clara';
```
-------------------------3503 sample_num
```sql
SELECT e.EMPLOYEE_ID, e.FIRST_NAME, e.LAST_NAME 
FROM employees e
WHERE e.DEPARTMENT_ID IN (
    SELECT d.DEPARTMENT_ID 
    FROM employees e2 
    JOIN departments d ON e2.DEPARTMENT_ID = d.DEPARTMENT_ID 
    WHERE e2.FIRST_NAME LIKE '%T%' OR e2.LAST_NAME LIKE '%T%'
);
```
-------------------------3504 sample_num
```sql
SELECT DISTINCT e.EMPLOYEE_ID, e.FIRST_NAME, e.LAST_NAME
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
JOIN employees e2 ON e2.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE e2.FIRST_NAME LIKE '%T%';
```
-------------------------3505 sample_num
```sql
SELECT e.EMPLOYEE_ID, e.FIRST_NAME, e.LAST_NAME, e.SALARY
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE e.SALARY > (SELECT AVG(SALARY) FROM employees)
AND EXISTS (SELECT 1 FROM employees e2 WHERE e2.DEPARTMENT_ID = d.DEPARTMENT_ID AND e2.FIRST_NAME LIKE '%J%');
```
-------------------------3506 sample_num
```sql
SELECT e.EMPLOYEE_ID, e.FIRST_NAME || ' ' || e.LAST_NAME AS FULL_NAME, e.SALARY
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE e.SALARY > (SELECT AVG(SALARY) FROM employees)
AND EXISTS (
    SELECT 1
    FROM employees e2
    WHERE e2.DEPARTMENT_ID = d.DEPARTMENT_ID
    AND LOWER(e2.FIRST_NAME) LIKE '%j%'
);
```
-------------------------3507 sample_num
```sql
SELECT EMPLOYEE_ID, JOB_ID 
FROM employees 
WHERE SALARY < ANY (
    SELECT SALARY 
    FROM employees 
    WHERE JOB_ID = 'MK_MAN')
```
-------------------------3508 sample_num
```sql
SELECT EMPLOYEE_ID, JOB_ID 
FROM employees 
WHERE SALARY < (
    SELECT MIN(SALARY) 
    FROM employees 
    WHERE JOB_ID = 'MK_MAN'
);
```
-------------------------3509 sample_num
```sql
SELECT e.EMPLOYEE_ID, e.FIRST_NAME, e.LAST_NAME, j.JOB_TITLE 
FROM employees e 
JOIN jobs j ON e.JOB_ID = j.JOB_ID 
WHERE e.SALARY > ANY (
    SELECT DISTINCT SALARY 
    FROM employees 
    WHERE JOB_ID = (SELECT JOB_ID FROM jobs WHERE JOB_TITLE = 'PU_MAN'));
```
```
-------------------------3510 sample_num
```sql
SELECT e.EMPLOYEE_ID, e.FIRST_NAME || ' ' || e.LAST_NAME AS FULL_NAME, e.JOB_ID 
FROM employees e
JOIN jobs j ON e.JOB_ID = j.JOB_ID
WHERE e.SALARY > (SELECT MAX(SALARY) FROM employees WHERE JOB_ID = 'PU_MAN')
```
-------------------------3511 sample_num
```sql
SELECT DEPARTMENT_ID, SUM(SALARY) AS TOTAL_SALARY
FROM employees
GROUP BY DEPARTMENT_ID
HAVING COUNT(*) >= 2;
```
-------------------------3512 sample_num
```sql
SELECT DEPARTMENT_ID, SUM(SALARY) as TOTAL_SALARY
FROM employees
GROUP BY DEPARTMENT_ID
HAVING COUNT(*) > 2;
```
-------------------------3513 sample_num
```sql
SELECT *
FROM employees e
WHERE NOT EXISTS (
    SELECT 1
    FROM job_history j
    WHERE j.employee_id = e.employee_id
);
```
-------------------------3514 sample_num
```sql
SELECT e.*
FROM employees e
LEFT JOIN job_history jh ON e.employee_id = jh.employee_id
WHERE jh.employee_id IS NULL;
```
-------------------------3515 sample_num
```sql
SELECT e.DEPARTMENT_ID, e.FIRST_NAME, e.LAST_NAME, e.SALARY
FROM employees e
WHERE e.SALARY = (
    SELECT MAX(e2.SALARY)
    FROM employees e2
    WHERE e.DEPARTMENT_ID = e2.DEPARTMENT_ID
);
```
-------------------------3516 sample_num
```sql
SELECT e.DEPARTMENT_ID, e.FIRST_NAME, e.LAST_NAME, e.SALARY
FROM employees e
INNER JOIN (
    SELECT DEPARTMENT_ID, MAX(SALARY) AS max_salary
    FROM employees
    GROUP BY DEPARTMENT_ID
) m ON e.DEPARTMENT_ID = m.DEPARTMENT_ID AND e.SALARY = m.max_salary;
```
-------------------------3517 sample_num
```sql
SELECT e.FIRST_NAME, e.LAST_NAME, d.DEPARTMENT_NAME, l.CITY, l.STATE_PROVINCE 
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID;
```
-------------------------3518 sample_num
```sql
SELECT 
    e.FIRST_NAME || ' ' || e.LAST_NAME AS FULL_NAME,
    d.DEPARTMENT_NAME,
    l.CITY,
    l.STATE_PROVINCE
FROM 
    employees e
JOIN 
    departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
JOIN 
    locations l ON d.LOCATION_ID = l.LOCATION_ID;
```
-------------------------3519 sample_num
```sql
SELECT e.first_name, e.last_name, l.city 
FROM employees e
JOIN departments d ON e.department_id = d.department_id
JOIN locations l ON d.location_id = l.location_id
WHERE e.first_name LIKE '%z%';
```
-------------------------3520 sample_num
```sql
SELECT e.first_name, e.last_name, l.city 
FROM employees e
JOIN departments d ON e.department_id = d.department_id
JOIN locations l ON d.location_id = l.location_id
WHERE e.first_name LIKE '%Z%';
```
-------------------------3521 sample_num
```sql
SELECT d.DEPARTMENT_NAME, l.CITY, l.STATE_PROVINCE 
FROM departments d 
JOIN locations l 
ON d.LOCATION_ID = l.LOCATION_ID;
```
-------------------------3522 sample_num
```sql
SELECT d.DEPARTMENT_NAME, l.CITY, l.STATE_PROVINCE 
FROM departments d 
JOIN locations l 
ON d.LOCATION_ID = l.LOCATION_ID;
```
-------------------------3523 sample_num
```sql
SELECT e.EMPLOYEE_ID, e.FIRST_NAME, e.LAST_NAME, c.COUNTRY_NAME 
FROM employees e 
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID 
JOIN countries c ON l.COUNTRY_ID = c.COUNTRY_ID;
```
-------------------------3524 sample_num
```sql
SELECT e.FIRST_NAME, e.LAST_NAME, e.EMPLOYEE_ID, c.COUNTRY_NAME 
FROM employees e 
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID 
JOIN countries c ON l.COUNTRY_ID = c.COUNTRY_ID;
```
-------------------------3525 sample_num
```sql
SELECT d.DEPARTMENT_NAME, COUNT(e.EMPLOYEE_ID) AS NUM_EMPLOYEES
FROM departments d
LEFT JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
GROUP BY d.DEPARTMENT_NAME;
```
-------------------------3526 sample_num
```sql
SELECT departments.DEPARTMENT_NAME, COUNT(employees.EMPLOYEE_ID) AS Employee_Count
FROM departments
JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID
GROUP BY departments.DEPARTMENT_NAME;
```
-------------------------3527 sample_num
```sql
SELECT e.FIRST_NAME, e.LAST_NAME, e.SALARY
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID
WHERE l.CITY = 'London';
```
-------------------------3528 sample_num
```sql
SELECT e.FIRST_NAME, e.LAST_NAME, e.SALARY
FROM employees e
JOIN departments d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
JOIN locations l ON d.LOCATION_ID = l.LOCATION_ID
WHERE l.CITY = 'London';
```
-------------------------3529 sample_num
```sql
SELECT song_name FROM song WHERE releasedate IN (SELECT MAX(releasedate) FROM song)
```
-------------------------3530 sample_num
```sql
SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1;
```
-------------------------3531 sample_num
```sql
SELECT f_id FROM files WHERE duration = (SELECT MAX(duration) FROM files);
```
-------------------------3532 sample_num
```sql
SELECT f_id FROM files WHERE duration = (SELECT MAX(duration) FROM files);
```
-------------------------3533 sample_num
```sql
SELECT song_name FROM song WHERE languages = 'English';
```
-------------------------3534 sample_num
```sql
SELECT song_name FROM song WHERE languages = 'English';
```
-------------------------3535 sample_num
```sql
SELECT f_id 
FROM files 
WHERE formats = 'mp3';
```
-------------------------3536 sample_num
```sql
SELECT f_id FROM files WHERE formats = 'mp3';
```
-------------------------3537 sample_num
```sql
SELECT DISTINCT artist.artist_name, artist.country 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE song.rating > 9;
```
-------------------------3538 sample_num
```sql
SELECT DISTINCT artist.artist_name, artist.country 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE song.rating > 9;
```
-------------------------3539 sample_num
```sql
SELECT files.file_size, files.formats 
FROM files 
JOIN song ON files.f_id = song.f_id 
WHERE song.resolution < 800;
```
-------------------------3540 sample_num
```sql
SELECT files.file_size, files.formats 
FROM files 
JOIN song ON files.f_id = song.f_id 
WHERE song.resolution < 800;
```
-------------------------3541 sample_num
```sql
SELECT artist_name 
FROM files 
JOIN song ON files.f_id = song.f_id 
WHERE duration = (SELECT MIN(duration) FROM files);
```
-------------------------3542 sample_num
```sql
SELECT T2.artist_name 
FROM files AS T1 
JOIN song AS T2 ON T1.f_id = T2.f_id 
WHERE T1.duration = (SELECT MIN(duration) FROM files)
```
-------------------------3543 sample_num
```sql
SELECT T2.artist_name, T2.country 
FROM song AS T1 
JOIN artist AS T2 ON T1.artist_name = T2.artist_name 
ORDER BY T1.rating DESC 
LIMIT 3;
```
-------------------------3544 sample_num
```sql
SELECT artist.artist_name, artist.country 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
ORDER BY song.rating DESC 
LIMIT 3;
```
However, this query does not guarantee that each artist is only listed once. If an artist has more than one song in the top 3, they will be listed multiple times. To avoid this, you might want to use a subquery to first find the top 3 song ratings, then join back to the artist and song tables. Here's how you could do it:

```sql
SELECT DISTINCT a.artist_name, a.country
FROM artist a
JOIN song s ON a.artist_name = s.artist_name
WHERE s.rating IN (
    SELECT rating 
    FROM song 
    ORDER BY rating DESC 
    LIMIT 3
);
```
-------------------------3545 sample_num
```sql
SELECT COUNT(*) FROM files 
JOIN song ON files.f_id = song.f_id 
WHERE files.duration = '4:00';
``` 
Note: The duration is assumed to be in 'mm:ss' format. If it's in seconds, the query would be `WHERE files.duration = 240;`
```
-------------------------3546 sample_num
```sql
SELECT COUNT(*) FROM files WHERE duration BETWEEN 235 AND 265;
```
-------------------------3547 sample_num
```sql
SELECT COUNT(*) FROM artist WHERE country = 'Bangladesh';
```
-------------------------3548 sample_num
```sql
SELECT COUNT(*) FROM artist WHERE country = 'Bangladesh';
```
-------------------------3549 sample_num
```sql
SELECT AVG(song.rating) 
FROM song 
JOIN artist ON song.artist_name = artist.artist_name 
WHERE artist.gender = 'Female';
```
-------------------------3550 sample_num
```sql
SELECT AVG(song_count) 
FROM (
SELECT COUNT(*) as song_count 
FROM song 
WHERE artist_name IN (
    SELECT artist_name 
    FROM artist 
    WHERE gender = 'Female'
) 
GROUP BY artist_name
) as subquery;
```
-------------------------3551 sample_num
```sql
SELECT formats 
FROM files 
GROUP BY formats 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3552 sample_num
```sql
SELECT formats 
FROM files 
GROUP BY formats 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3553 sample_num
```sql
SELECT DISTINCT artist.artist_name 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE artist.country = 'UK' AND song.languages = 'English';
```
-------------------------3554 sample_num
```sql
SELECT DISTINCT artist.artist_name 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE artist.country = 'UK' AND song.languages = 'English';
```
-------------------------3555 sample_num
```sql
SELECT f_id FROM files WHERE formats = 'mp4' AND f_id IN (SELECT f_id FROM song WHERE resolution < 1000);
```
-------------------------3556 sample_num
```sql
SELECT f_id FROM files WHERE formats = 'mp4' AND resolution < 1000;
```
-------------------------3557 sample_num
```sql
SELECT T2.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = 'female' AND T2.languages = 'Bangla'
```
-------------------------3558 sample_num
```sql
SELECT DISTINCT country 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE gender = 'Female' AND languages LIKE '%Bangla%';
```
-------------------------3559 sample_num
```sql
SELECT AVG(T2.duration) 
FROM files AS T2 
JOIN song AS T1 ON T2.f_id = T1.f_id 
WHERE T2.formats = 'mp3' AND T1.resolution < 800;
```
-------------------------3560 sample_num
```sql
SELECT AVG(T2.duration) 
FROM files AS T1 
JOIN song AS T2 ON T1.f_id = T2.f_id 
WHERE T1.formats = 'mp3' AND T2.resolution < 800;
```
-------------------------3561 sample_num
```sql
SELECT gender, COUNT(*) 
FROM artist 
GROUP BY gender;
```
-------------------------3562 sample_num
```sql
SELECT gender, COUNT(*) 
FROM artist 
GROUP BY gender;
```
-------------------------3563 sample_num
```sql
SELECT languages, AVG(rating) 
FROM song 
GROUP BY languages;
```
-------------------------3564 sample_num
```sql
SELECT languages, AVG(rating) 
FROM song 
GROUP BY languages;
```
-------------------------3565 sample_num
```sql
SELECT artist.gender, artist.artist_name 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
ORDER BY song.resolution ASC 
LIMIT 1;
```
-------------------------3566 sample_num
```sql
SELECT artist.gender, artist.artist_name 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE song.resolution = (SELECT MIN(resolution) FROM song);
```
-------------------------3567 sample_num
```sql
SELECT formats, COUNT(DISTINCT artist_name) 
FROM files 
GROUP BY formats;
```
-------------------------3568 sample_num
```sql
SELECT files.formats, COUNT(song.song_name) 
FROM files 
JOIN song ON files.f_id = song.f_id 
GROUP BY files.formats;
```
-------------------------3569 sample_num
```sql
SELECT DISTINCT s.song_name 
FROM song s 
WHERE s.resolution > (
    SELECT MIN(s2.resolution) 
    FROM song s2 
    WHERE s2.languages = 'English'
);
```
-------------------------3570 sample_num
```sql
SELECT DISTINCT song_name 
FROM song 
WHERE resolution > (
    SELECT resolution 
    FROM song 
    WHERE languages = 'English'
)
```
Note: This query will not return the expected results as it is not comparing the same song in different languages. It would be comparing all non-English songs resolutions against all English songs resolutions. A proper solution would require additional conditions or a self join on the song table to compare the resolution of the same song in different languages. However, based on the given question, such a comparison is not requested.
-------------------------3571 sample_num
```sql
SELECT s.song_name 
FROM song s 
WHERE s.rating < (SELECT MAX(s2.rating) FROM song s2 WHERE s2.genre_is = 'blues')
```
-------------------------3572 sample_num
```sql
SELECT song_name FROM song WHERE rating < (SELECT MAX(rating) FROM song WHERE genre_is = 'blues')
```
-------------------------3573 sample_num
```sql
SELECT artist_name, country 
FROM artist 
JOIN song 
ON artist.artist_name = song.artist_name 
WHERE song.song_name LIKE '%love%';
```
-------------------------3574 sample_num
```sql
SELECT artist.artist_name, artist.country 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE song.song_name LIKE '%love%';
```
-------------------------3575 sample_num
```sql
SELECT DISTINCT artist.artist_name, artist.gender 
FROM artist 
JOIN song 
ON artist.artist_name = song.artist_name 
WHERE MONTH(song.releasedate) = 3;
```
-------------------------3576 sample_num
```sql
SELECT DISTINCT artist.artist_name, artist.gender 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE MONTH(song.releasedate) = 3;
```
-------------------------3577 sample_num
```sql
SELECT g_name, rating 
FROM genre 
ORDER BY g_name ASC;
```
-------------------------3578 sample_num
```sql
SELECT g_name, rating FROM genre ORDER BY g_name ASC;
```
-------------------------3579 sample_num
```sql
SELECT song_name FROM song ORDER BY resolution;
```
-------------------------3580 sample_num
```sql
SELECT song_name FROM song ORDER BY resolution;
```
-------------------------3581 sample_num
```sql
SELECT f_id FROM files WHERE formats = 'mp4' UNION SELECT f_id FROM song WHERE resolution > 720;
```
-------------------------3582 sample_num
```sql
SELECT f_id FROM files WHERE formats = 'mp4' UNION SELECT f_id FROM song WHERE resolution > 720;
```
-------------------------3583 sample_num
```sql
SELECT song_name FROM song WHERE duration = '4' OR languages = 'English';
```

However, your data types in the schema you provided seems to be inaccurate (e.g., 'duration' should likely be numeric, not string). An accurate SQL query would look more like this:

```sql
SELECT song_name 
FROM song 
WHERE duration = 4 * 60 OR languages LIKE '%English%';
``` 

Note: the above assumes 'languages' contains comma-separated values and 'duration' is in seconds. Adjust as necessary based on your actual data schema.
-------------------------3584 sample_num
```sql
SELECT song_name FROM song WHERE duration BETWEEN 235 AND 265 OR languages = 'English';
```
-------------------------3585 sample_num
```sql
SELECT languages, COUNT(*) AS count 
FROM song 
GROUP BY languages 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------3586 sample_num
```sql
SELECT languages, COUNT(*) AS count 
FROM song 
GROUP BY languages 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------3587 sample_num
```sql
SELECT languages 
FROM song 
WHERE resolution > 500 
GROUP BY languages 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------3588 sample_num
```sql
SELECT T2.languages, T1.artist_name FROM (
    SELECT artist_name, COUNT(*) as num_songs
    FROM song 
    WHERE resolution > 500
    GROUP BY artist_name
    ORDER BY num_songs DESC
) AS T1
JOIN (
    SELECT languages, artist_name
    FROM song
) AS T2
ON T1.artist_name = T2.artist_name
GROUP BY T2.languages
ORDER BY COUNT(T1.artist_name) DESC;
```
Note: This query does not guarantee the correct result because it does not limit the result to one row per language. A subquery or window function would be needed to fix this, but that would make the query more complex.
-------------------------3589 sample_num
```sql
SELECT artist_name FROM artist WHERE gender = 'Male' AND country = 'UK';
```
-------------------------3590 sample_num
```sql
SELECT artist_name FROM artist WHERE country = 'UK' AND gender = 'Male';
```
-------------------------3591 sample_num
```sql
SELECT song_name FROM song WHERE genre_is = 'modern' OR languages = 'English';
```
-------------------------3592 sample_num
```sql
SELECT song_name 
FROM song 
WHERE genre_is = 'modern' OR languages = 'English';
```
-------------------------3593 sample_num
```sql
SELECT song_name 
FROM song 
JOIN files ON song.f_id = files.f_id 
WHERE files.formats = 'mp3' AND song.resolution < 1000;
```
-------------------------3594 sample_num
```sql
SELECT song_name 
FROM song 
JOIN files ON song.f_id = files.f_id 
WHERE files.formats = 'mp3' AND song.resolution < 1000;
```
-------------------------3595 sample_num
```sql
SELECT DISTINCT artist.artist_name 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE artist.country = 'UK' AND song.languages = 'English';
```
-------------------------3596 sample_num
```sql
SELECT DISTINCT artist.artist_name 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE artist.country = 'UK' AND song.languages = 'English';
```
-------------------------3597 sample_num
```sql
SELECT AVG(rating), AVG(resolution) 
FROM song 
WHERE languages = 'Bangla';
```
-------------------------3598 sample_num
```sql
SELECT AVG(rating), AVG(resolution) 
FROM song 
WHERE languages = 'bangla';
```
-------------------------3599 sample_num
```sql
SELECT MAX(resolution), MIN(resolution) 
FROM song 
WHERE duration = '3 minutes';
```
-------------------------3600 sample_num
```sql
SELECT MAX(resolution), MIN(resolution) 
FROM song 
WHERE duration BETWEEN 2.5 AND 3.5;
```
-------------------------3601 sample_num
```sql
SELECT languages, MAX(duration) as max_duration, MAX(resolution) as max_resolution 
FROM song 
GROUP BY languages 
ORDER BY languages;
```
-------------------------3602 sample_num
```sql
SELECT languages, MAX(duration) as max_duration, MAX(resolution) as max_resolution 
FROM song 
GROUP BY languages 
ORDER BY languages;
```
-------------------------3603 sample_num
```sql
SELECT genre_is, MIN(duration) AS shortest_duration, MIN(rating) AS lowest_rating 
FROM song 
GROUP BY genre_is 
ORDER BY genre_is;
```
-------------------------3604 sample_num
```sql
SELECT g.g_name, s.song_name, MIN(s.rating) as min_rating, MIN(f.duration) as min_duration
FROM genre g
JOIN song s ON g.g_name = s.genre_is
JOIN files f ON s.f_id = f.f_id
GROUP BY g.g_name
ORDER BY g.g_name;
```
Note: This query doesn't guarantee that the song with the minimum duration is the same as the song with the minimum rating for each genre. If you want both values to correspond to the same song, the query would be more complex and may require subqueries or window functions which are not supported in all SQL versions.
-------------------------3605 sample_num
```sql
SELECT artist_name, COUNT(song_name) AS NumberOfWorks
FROM song
JOIN artist ON song.artist_name = artist.artist_name
WHERE languages LIKE '%English%'
GROUP BY artist_name
HAVING COUNT(song_name) > 0;
```
-------------------------3606 sample_num
```sql
SELECT artist_name, COUNT(song_name) 
FROM song 
WHERE languages LIKE '%English%' 
GROUP BY artist_name;
```
-------------------------3607 sample_num
```sql
SELECT DISTINCT artist_name, country 
FROM song 
JOIN artist ON song.artist_name = artist.artist_name 
WHERE resolution > 900;
```
-------------------------3608 sample_num
```sql
SELECT DISTINCT artist.artist_name, artist.country 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE song.resolution > 900;
```
-------------------------3609 sample_num
```sql
SELECT artist_name, COUNT(song_name) AS num_songs 
FROM song 
GROUP BY artist_name 
ORDER BY num_songs DESC 
LIMIT 3;
```
-------------------------3610 sample_num
```sql
SELECT artist_name, COUNT(song_name) as num_songs 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
GROUP BY artist_name 
ORDER BY num_songs DESC 
LIMIT 3;
```
-------------------------3611 sample_num
```sql
SELECT T2.country 
FROM (SELECT artist_name, COUNT(*) AS cnt FROM song GROUP BY artist_name) AS T1 
JOIN artist AS T2 ON T1.artist_name = T2.artist_name 
ORDER BY T1.cnt 
LIMIT 1;
```
-------------------------3612 sample_num
```sql
SELECT T2.country 
FROM song AS T1 
JOIN artist AS T2 ON T1.artist_name = T2.artist_name 
GROUP BY T1.artist_name 
ORDER BY COUNT(T1.song_name) 
LIMIT 1;
```
However, this query will give you the artist who made the fewest songs. To find out the country of artists who made the fewest songs in total, you should use subquery:

```sql
SELECT country 
FROM (
  SELECT T2.country, COUNT(T1.song_name) as num_songs 
  FROM song AS T1 
  JOIN artist AS T2 ON T1.artist_name = T2.artist_name 
  GROUP BY T2.country
) 
ORDER BY num_songs 
LIMIT 1;
```
-------------------------3613 sample_num
```sql
SELECT song_name 
FROM song 
WHERE rating < ALL (
    SELECT rating 
    FROM song 
    WHERE languages = 'English')
```
-------------------------3614 sample_num
```sql
SELECT song_name 
FROM song 
WHERE rating < (SELECT MIN(rating) FROM song WHERE languages = 'English')
```
-------------------------3615 sample_num
```sql
SELECT f_id FROM song WHERE resolution > (SELECT MAX(resolution) FROM song WHERE rating < 8);
```
-------------------------3616 sample_num
```sql
SELECT f_id FROM song WHERE resolution > (SELECT MIN(resolution) FROM song WHERE rating < 8);
```
-------------------------3617 sample_num
```sql
SELECT f_id FROM song WHERE resolution > (SELECT AVG(resolution) FROM song WHERE genre_is = 'modern');
```
-------------------------3618 sample_num
```sql
SELECT f_id FROM song WHERE resolution > (SELECT AVG(resolution) FROM song WHERE genre_is = 'modern');
```
-------------------------3619 sample_num
```sql
SELECT artist_name, COUNT(*) as num_songs 
FROM song 
WHERE languages = 'Bangla' 
GROUP BY artist_name 
ORDER BY num_songs DESC 
LIMIT 3;
```
-------------------------3620 sample_num
```sql
SELECT artist_name 
FROM song 
WHERE languages = 'Bangla' 
GROUP BY artist_name 
ORDER BY COUNT(song_name) DESC 
LIMIT 3;
```
-------------------------3621 sample_num
```sql
SELECT f_id, genre_is, artist_name 
FROM song 
WHERE languages = 'English' 
ORDER BY rating;
```
-------------------------3622 sample_num
```sql
SELECT f.f_id, g.g_name, a.artist_name 
FROM song s 
JOIN files f ON s.f_id = f.f_id 
JOIN genre g ON s.genre_is = g.g_name 
JOIN artist a ON s.artist_name = a.artist_name 
WHERE s.languages = 'English' 
ORDER BY s.rating ASC;
```
-------------------------3623 sample_num
```sql
SELECT files.duration, files.file_size, files.formats 
FROM files 
JOIN song ON files.f_id = song.f_id 
JOIN genre ON song.genre_is = genre.g_name 
WHERE genre.g_name = 'pop' 
ORDER BY song.song_name;
```
-------------------------3624 sample_num
```sql
SELECT files.duration, files.file_size, files.formats 
FROM files 
JOIN song 
ON files.f_id = song.f_id 
JOIN genre 
ON song.genre_is = genre.g_name 
WHERE genre.g_name = 'pop' 
ORDER BY song.song_name;
```
-------------------------3625 sample_num
```sql
SELECT DISTINCT artist.artist_name 
FROM artist 
JOIN song ON artist.artist_name = song.artist_name 
WHERE song.languages = 'English' 
AND NOT EXISTS (SELECT * FROM song WHERE song.artist_name = artist.artist_name AND song.rating > 8);
```
-------------------------3626 sample_num
```sql
SELECT DISTINCT artist_name 
FROM song 
WHERE languages = 'English' 
AND artist_name NOT IN (
    SELECT artist_name 
    FROM song 
    WHERE rating > 8
);
```
-------------------------3627 sample_num
```sql
SELECT artist_name 
FROM artist 
WHERE country = 'Bangladesh' 
AND artist_name NOT IN (
    SELECT artist_name 
    FROM song 
    WHERE rating > 7
);
```
-------------------------3628 sample_num
```sql
SELECT DISTINCT artist_name 
FROM artist 
WHERE country = 'Bangladesh' 
AND artist_name NOT IN (
    SELECT artist_name 
    FROM song 
    WHERE rating > 7
);
```
-------------------------3629 sample_num
```sql
SELECT T1.name_full, T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY COUNT(T2.player_id) DESC LIMIT 1;
```
-------------------------3630 sample_num
```sql
SELECT T2.name_full, T2.college_id FROM player_college AS T1 JOIN college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY COUNT(*) DESC LIMIT 1
```
-------------------------3631 sample_num
```sql
SELECT AVG(salary) 
FROM salary 
JOIN team 
ON salary.team_id = team.team_id 
WHERE team.name = 'Boston Red Stockings'
```
Note: This query assumes that the team name 'Boston Red Stockings' is currently stored in the `team` table. If the team name has changed over time, additional steps may be required to match the correct team in each season.
-------------------------3632 sample_num
```sql
SELECT AVG(salary) 
FROM salary 
JOIN team 
ON salary.team_id = team.team_id 
WHERE team.name = 'Boston Red Stockings'
```
However, this query assumes that the team name is directly stored in the team table, which according to your provided schema, is not the case. The correct team name is stored in the 'name' column of the team table. Thus, the accurate query should be:

```sql
SELECT AVG(salary) 
FROM salary 
JOIN team 
ON salary.team_id = team.team_id 
WHERE team.name = 'Boston Red Stockings'
```

But since the team name might not be exactly 'Boston Red Stockings' for all years due to changes in team names over time, you may want to consider using team_id or franchise_id instead, if those are more stable identifiers for the team throughout history.

For example, if you know the team_id for the Boston Red Stockings, you can use:

```sql
SELECT AVG(salary)
FROM salary
WHERE team_id = '<team_id_for_Boston_Red_Stockings>'
```
Replace `<team_id_for_Boston_Red_Stockings>` with the actual team_id.
-------------------------3633 sample_num
```sql
SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 1998;
```
-------------------------3634 sample_num
```sql
SELECT p.name_first, p.name_last 
FROM player AS p
JOIN all_star AS a ON p.player_id = a.player_id
WHERE a.year = 1998;
```
-------------------------3635 sample_num
```sql
SELECT P.name_first, P.name_last, P.player_id, COUNT(ASG.player_id) AS count 
FROM player P 
JOIN all_star ASG ON P.player_id = ASG.player_id 
GROUP BY ASG.player_id 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------3636 sample_num
```sql
SELECT p.name_first, p.name_last, p.player_id, COUNT(*) AS all_star_experiences 
FROM player p 
JOIN all_star a ON p.player_id = a.player_id 
GROUP BY p.player_id 
ORDER BY all_star_experiences DESC 
LIMIT 1;
```
-------------------------3637 sample_num
```sql
SELECT yearid, COUNT(player_id) 
FROM hall_of_fame 
WHERE inducted = 'Y' 
GROUP BY yearid;
```
-------------------------3638 sample_num
```sql
SELECT yearid, COUNT(player_id) 
FROM hall_of_fame 
WHERE inducted = 'Y' 
GROUP BY yearid;
```
-------------------------3639 sample_num
```sql
SELECT year, AVG(attendance) FROM home_game GROUP BY year;
```
-------------------------3640 sample_num
```sql
SELECT YEAR, AVG(attendance) 
FROM home_game 
GROUP BY YEAR;
```
-------------------------3641 sample_num
```sql
SELECT T1.team_id , T1.rank FROM team AS T1 JOIN home_game AS T2 ON T1.team_id = T2.team_id WHERE T2.year = 2014 GROUP BY T1.team_id ORDER BY AVG(T2.attendance) DESC LIMIT 1
```
-------------------------3642 sample_num
```sql
SELECT T1.team_id, T1.rank FROM team AS T1 JOIN home_game AS T2 ON T1.team_id = T2.team_id WHERE T2.year = 2014 ORDER BY CAST(T2.attendance AS REAL) / T2.openings DESC LIMIT 1
```
-------------------------3643 sample_num
```sql
SELECT T1.name_first, T1.name_last, T1.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY COUNT(*) DESC LIMIT 1
```
-------------------------3644 sample_num
```sql
SELECT T1.name_first, T1.name_last, T1.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY COUNT(*) DESC LIMIT 1
```
-------------------------3645 sample_num
```sql
SELECT COUNT(*) FROM park WHERE state = 'NY';
```
-------------------------3646 sample_num
```sql
SELECT COUNT(*) FROM park WHERE state = 'NY';
```
-------------------------3647 sample_num
```sql
SELECT p.name_first, p.name_last, p.player_id 
FROM player p 
JOIN player_award pa ON p.player_id = pa.player_id 
GROUP BY p.player_id 
ORDER BY COUNT(*) DESC 
LIMIT 3;
```
-------------------------3648 sample_num
```sql
SELECT T1.name_first, T1.name_last, T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY COUNT(*) DESC LIMIT 3;
```
-------------------------3649 sample_num
```sql
SELECT birth_country, COUNT(player_id) as num_players 
FROM player 
GROUP BY birth_country 
ORDER BY num_players ASC 
LIMIT 3;
```
-------------------------3650 sample_num
```sql
SELECT birth_country, COUNT(player_id) as num_players 
FROM player 
GROUP BY birth_country 
ORDER BY num_players 
LIMIT 3;
```
-------------------------3651 sample_num
```sql
SELECT name_first, name_last FROM player WHERE death_year IS NULL;
```
-------------------------3652 sample_num
```sql
SELECT name_first, name_last FROM player WHERE death_year IS NULL OR death_year = '';
```
-------------------------3653 sample_num
```sql
SELECT COUNT(*) FROM player WHERE birth_country = 'USA' AND bats = 'R';
```
-------------------------3654 sample_num
```sql
SELECT COUNT(*) FROM player WHERE birth_country = 'USA' AND bats = 'R';
```
-------------------------3655 sample_num
```sql
SELECT AVG(T2.height) FROM player_college AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T1.college_id = T3.college_id WHERE T3.name_full = 'Yale University'
```
-------------------------3656 sample_num
```sql
SELECT AVG(T2.height) FROM player_college AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T1.college_id = T3.college_id WHERE T3.name_full = 'Yale University'
```
-------------------------3657 sample_num
```sql
SELECT team.name, team.team_id, MAX(salary.salary) as max_salary
FROM salary
JOIN team ON salary.team_id = team.team_id
GROUP BY team.team_id;
```
-------------------------3658 sample_num
```sql
SELECT team.name, team.team_id, MAX(salary.salary) 
FROM team 
JOIN salary ON team.team_id = salary.team_id 
GROUP BY team.team_id;
```
-------------------------3659 sample_num
```sql
SELECT T1.name, T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T2.team_id ORDER BY AVG(T2.salary) ASC LIMIT 1
```
-------------------------3660 sample_num
```sql
SELECT team_id, name FROM team WHERE team_id = (SELECT team_id FROM salary GROUP BY team_id ORDER BY AVG(salary) ASC LIMIT 1);
```
-------------------------3661 sample_num
```sql
SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 1960 INTERSECT SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 1961;
```
-------------------------3662 sample_num
```sql
SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 1960 INTERSECT SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 1961;
```
-------------------------3663 sample_num
```sql
SELECT name_first, name_last FROM player WHERE weight > 220 OR height < 75;
```
-------------------------3664 sample_num
```sql
SELECT name_first, name_last FROM player WHERE weight > 220 OR height < 75;
```
-------------------------3665 sample_num
```sql
SELECT MAX(T2.w) AS max_score FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.wins > T1.losses;
```
-------------------------3666 sample_num
```sql
SELECT MAX(T2.w) AS max_score FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings';
```
-------------------------3667 sample_num
```sql
SELECT COUNT(*) FROM postseason WHERE year = 2009 AND team_id_loser = 'BOS' AND team_id_winner != 'BOS';
```
-------------------------3668 sample_num
```sql
SELECT COUNT(*) 
FROM postseason 
WHERE year = 2009 AND team_id_loser = (SELECT team_id FROM team WHERE name = 'Boston Red Stockings');
```
-------------------------3669 sample_num
```sql
SELECT team_id_winner, name 
FROM postseason 
JOIN team ON postseason.team_id_winner = team.team_id 
WHERE year = 2008 
GROUP BY team_id_winner 
ORDER BY wins DESC 
LIMIT 1;
```
-------------------------3670 sample_num
```sql
SELECT T1.name, T1.team_id FROM team AS T1 JOIN postseason AS T2 ON T1.team_id = T2.team_id_winner WHERE T2.year = 2008 GROUP BY T1.team_id ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------3671 sample_num
```sql
SELECT T.year, COUNT(T.wins) AS wins 
FROM postseason AS T 
JOIN team AS Tm ON T.team_id_winner = Tm.team_id_br 
WHERE Tm.name = 'Boston Red Stockings' 
GROUP BY T.year;
```
-------------------------3672 sample_num
```sql
SELECT YEAR, COUNT(*) AS wins
FROM (
    SELECT YEAR
    FROM postseason
    WHERE team_id_winner = (
        SELECT team_id
        FROM team
        WHERE name = 'Boston Red Stockings'
    )
    GROUP BY YEAR
) AS boston_wins
GROUP BY YEAR;
```

However, to make the query work correctly with the provided schema, you should use the team's ID instead of its name. You can find the team's ID by querying the `team` table where `name` equals 'Boston Red Stockings'. Here is the corrected SQL query:

```sql
SELECT p.year, COUNT(*) AS wins
FROM postseason p
JOIN team t ON p.team_id_winner = t.team_id
WHERE t.name = 'Boston Red Stockings'
GROUP BY p.year;
```
-------------------------3673 sample_num
```sql
SELECT COUNT(*) FROM postseason WHERE (team_id_winner = 'BOS' OR team_id_loser = 'BOS') AND franchise_name = 'Boston Red Stockings'
```
-------------------------3674 sample_num
```sql
SELECT COUNT(*) FROM postseason WHERE team_id_winner = 'BOS' OR team_id_loser = 'BOS';
```
-------------------------3675 sample_num
```sql
SELECT COUNT(*) FROM postseason WHERE year = 1885 AND ties = 1;
```
-------------------------3676 sample_num
```sql
SELECT COUNT(*) FROM postseason WHERE year = 1885 AND ties = 1;
```
-------------------------3677 sample_num
```sql
SELECT SUM(salary) AS total_salary 
FROM salary 
JOIN team ON salary.team_id = team.team_id 
WHERE team.name = 'Boston Red Stockings' AND salary.year = 2010;
```
Note: The team name 'Boston Red Stockings' may not exist in the team table in the given database schema. You might need to replace it with the correct team ID or use an alias for the team name that exists in the data. Also, the team name might be in a different column (like `team_id_br` or `team_id_lahman45`) depending on how the team names are stored in the database.
-------------------------3678 sample_num
```sql
SELECT SUM(salary) FROM salary WHERE year = 2010 AND team_id IN (SELECT team_id FROM team WHERE name = 'Boston Red Stockings')
```
-------------------------3679 sample_num
```sql
SELECT COUNT(DISTINCT player_id) 
FROM appearances 
JOIN team ON appearances.team_id = team.team_id 
WHERE team.name = 'Boston Red Stockings' AND appearances.year = 2000;
```
Note: The team name 'Boston Red Stockings' may not correspond to the team in the year 2000, please verify the correct team name or ID for the year 2000.
-------------------------3680 sample_num
```sql
SELECT COUNT(DISTINCT player_id) 
FROM appearances 
JOIN team ON appearances.team_id = team.team_id 
WHERE team.name = 'Boston Red Stockings' AND appearances.year = 2000;
```
Note: The team name 'Boston Red Stockings' may not be correct for the year 2000, please verify the team name from the `team` table for the given year. Also, it might be necessary to join with the `team_franchise` or `team_half` table to get the correct team name for the given year.
-------------------------3681 sample_num
```sql
SELECT player_id, salary FROM salary WHERE year = 2001 ORDER BY salary DESC LIMIT 3;
```
-------------------------3682 sample_num
```sql
SELECT player_id, salary FROM salary WHERE year = 2001 ORDER BY salary DESC LIMIT 3;
```
-------------------------3683 sample_num
```sql
SELECT salary FROM salary WHERE year IN (2010, 2001)
```
-------------------------3684 sample_num
```sql
SELECT salary FROM salary WHERE year IN (2010, 2001)
```
-------------------------3685 sample_num
```sql
SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY COUNT(player_id) ASC LIMIT 1;
```
-------------------------3686 sample_num
```sql
SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY COUNT(player_id) ASC LIMIT 1
```
-------------------------3687 sample_num
```sql
SELECT COUNT(*) FROM home_game WHERE city = 'Atlanta';
```
Note: This query might not give the correct result because the 'city' column is in the 'park' table, not in the 'home_game' table. The correct query should be:
```sql
SELECT COUNT(*) FROM park WHERE city = 'Atlanta';
```
-------------------------3688 sample_num
```sql
SELECT COUNT(*) FROM park WHERE city = 'Atlanta'
```
-------------------------3689 sample_num
```sql
SELECT COUNT(*) FROM home_game WHERE park_id = (SELECT park_id FROM park WHERE park_name = 'Columbia Park') AND year = 1907;
```
-------------------------3690 sample_num
```sql
SELECT COUNT(*) FROM home_game WHERE park_id = (SELECT park_id FROM park WHERE park_name = 'Columbia Park') AND year = 1907;
```
-------------------------3691 sample_num
```sql
SELECT SUM(T2.games) FROM home_game AS T2 JOIN park AS T1 ON T1.park_id = T2.park_id WHERE T1.city = 'Atlanta' AND T2.year = 2000;
```
-------------------------3692 sample_num
```sql
SELECT COUNT(*) FROM home_game WHERE year = 2000 AND park_id IN (SELECT park_id FROM park WHERE city = 'Atlanta');
```
-------------------------3693 sample_num
```sql
SELECT SUM(T2.attendance) FROM team AS T1 JOIN home_game AS T2 ON T1.team_id = T2.team_id WHERE T1.name = 'Boston Red Stockings' AND T2.year BETWEEN 2000 AND 2010;
```
-------------------------3694 sample_num
```sql
SELECT SUM(T2.games) 
FROM team AS T1 
JOIN home_game AS T2 ON T1.team_id = T2.team_id 
WHERE T1.name = 'Boston Red Stockings' AND T2.year BETWEEN 2000 AND 2010;
```
-------------------------3695 sample_num
```sql
SELECT SUM(salary) FROM salary WHERE year BETWEEN 1985 AND 1990 AND player_id IN (SELECT player_id FROM player WHERE name_first = 'Len' AND name_last = 'Barker')
```
-------------------------3696 sample_num
```sql
SELECT SUM(salary) FROM salary WHERE player_id = (SELECT player_id FROM player WHERE name_first = 'Len' AND name_last = 'Barker') AND year BETWEEN 1985 AND 1990;
```
-------------------------3697 sample_num
```sql
SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN salary AS T2 ON T1.player_id = T2.player_id WHERE T2.team_id = 'WAS' AND (T2.year = 2005 OR T2.year = 2007) GROUP BY T1.player_id HAVING COUNT(T2.year) = 2
```
-------------------------3698 sample_num
```sql
SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN salary AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 2005 AND T2.team_id = 'WAS' INTERSECT SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN salary AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 2007 AND T2.team_id = 'WAS'
```
-------------------------3699 sample_num
```sql
SELECT SUM(games) 
FROM home_game 
WHERE team_id IN (
    SELECT team_id 
    FROM team 
    WHERE name = 'Boston Red Stockings'
) AND year BETWEEN 1990 AND 2000;
```
-------------------------3700 sample_num
```sql
SELECT COUNT(*) FROM appearances WHERE team_id IN (SELECT team_id FROM team WHERE name = 'Boston Red Stockings') AND year BETWEEN 1990 AND 2000;
```
However, the team name 'Boston Red Stockings' does not exist in the provided tables. You might want to replace the team name with a valid one like 'BOS' for Boston Red Sox.
```sql
SELECT COUNT(*) FROM appearances WHERE team_id = 'BOS' AND year BETWEEN 1990 AND 2000;
```
-------------------------3701 sample_num
```sql
SELECT team_id, MIN(attendance) 
FROM home_game 
WHERE year = 1980 
GROUP BY team_id 
ORDER BY attendance ASC 
LIMIT 1;
```
-------------------------3702 sample_num
```sql
SELECT team_id FROM home_game WHERE year = 1980 ORDER BY attendance ASC LIMIT 1;
```
-------------------------3703 sample_num
```sql
SELECT state FROM park GROUP BY state HAVING COUNT(*) > 2
```
-------------------------3704 sample_num
```sql
SELECT state FROM park GROUP BY state HAVING COUNT(park_id) > 2;
```
-------------------------3705 sample_num
```sql
SELECT COUNT(*) FROM team_franchise WHERE active = 'Y';
```
-------------------------3706 sample_num
```sql
SELECT COUNT(*) FROM team_franchise WHERE active = 'Y';
```
-------------------------3707 sample_num
```sql
SELECT city FROM park GROUP BY city HAVING COUNT(park_id) BETWEEN 2 AND 4;
```
-------------------------3708 sample_num
```sql
SELECT city FROM park GROUP BY city HAVING COUNT(park_id) BETWEEN 2 AND 4;
```
-------------------------3709 sample_num
```sql
SELECT T2.park_name, MAX(T1.attendance) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2008 GROUP BY T1.park_id ORDER BY SUM(T1.attendance) DESC LIMIT 1;
```
-------------------------3710 sample_num
```sql
SELECT park_id FROM home_game WHERE year = 2008 ORDER BY attendance DESC LIMIT 1;
```
-------------------------3711 sample_num
```sql
SELECT COUNT(*) FROM camera_lens WHERE focal_length_mm > 15;
```
-------------------------3712 sample_num
```sql
SELECT brand, name 
FROM camera_lens 
ORDER BY max_aperture DESC;
```
-------------------------3713 sample_num
```sql
SELECT id, color, name FROM photos;
```
-------------------------3714 sample_num
```sql
SELECT MAX(Height), AVG(Height) FROM mountain;
```
-------------------------3715 sample_num
```sql
SELECT AVG(Prominence) 
FROM mountain 
WHERE Country = 'Morocco';
```
-------------------------3716 sample_num
```sql
SELECT name, Height, Prominence 
FROM mountain 
WHERE Range != 'Aberdare Range';
```
-------------------------3717 sample_num
```sql
SELECT p.id, p.name 
FROM photos p
JOIN mountain m ON p.mountain_id = m.id;
```
-------------------------3718 sample_num
```sql
SELECT m.id, m.name 
FROM mountain m
JOIN photos p ON m.id = p.mountain_id
GROUP BY m.id, m.name
HAVING COUNT(p.id) >= 2;
```
-------------------------3719 sample_num
```sql
SELECT cl.name, COUNT(DISTINCT p.mountain_id) as mountain_count
FROM camera_lens cl
JOIN photos p ON cl.id = p.camera_lens_id
GROUP BY cl.name
ORDER BY mountain_count DESC
LIMIT 1;
```
-------------------------3720 sample_num
```sql
SELECT p.name 
FROM photos p
JOIN camera_lens cl ON p.camera_lens_id = cl.id
WHERE cl.brand IN ('Sigma', 'Olympus');
```
-------------------------3721 sample_num
```sql
SELECT COUNT(DISTINCT brand) FROM camera_lens;
```
-------------------------3722 sample_num
```sql
SELECT COUNT(*) FROM camera_lens WHERE id NOT IN (SELECT camera_lens_id FROM photos)
```
-------------------------3723 sample_num
```sql
SELECT COUNT(DISTINCT T2.id) 
FROM photos AS T1 
JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id 
JOIN mountain AS T3 ON T1.mountain_id = T3.id 
WHERE T3.Country = 'Ethiopia';
```
-------------------------3724 sample_num
```sql
SELECT cl.brand 
FROM camera_lens cl 
JOIN photos p1 ON cl.id = p1.camera_lens_id 
JOIN mountain m1 ON p1.mountain_id = m1.id 
JOIN photos p2 ON cl.id = p2.camera_lens_id 
JOIN mountain m2 ON p2.mountain_id = m2.id 
WHERE m1.Range = 'Toubkal Atlas' AND m2.Range = 'Lasta Massif'
GROUP BY cl.brand
```
```
-------------------------3725 sample_num
```sql
SELECT mountain.name, mountain.Prominence 
FROM mountain 
WHERE NOT EXISTS (
    SELECT * 
    FROM photos 
    JOIN camera_lens ON photos.camera_lens_id = camera_lens.id 
    WHERE photos.mountain_id = mountain.id AND camera_lens.brand = 'Sigma'
);
```
-------------------------3726 sample_num
```sql
SELECT name FROM camera_lens WHERE name LIKE '%Digital%';
```
-------------------------3727 sample_num
```sql
SELECT cl.name, COUNT(p.id) 
FROM camera_lens cl 
JOIN photos p ON cl.id = p.camera_lens_id 
GROUP BY cl.name 
ORDER BY COUNT(p.id) DESC;
```
-------------------------3728 sample_num
```sql
SELECT Name FROM channel WHERE Owner != 'CCTV';
```
-------------------------3729 sample_num
```sql
SELECT Name FROM channel WHERE Owner != 'CCTV';
```
-------------------------3730 sample_num
```sql
SELECT Name 
FROM channel 
ORDER BY Rating_in_percent DESC;
```
-------------------------3731 sample_num
```sql
SELECT Name 
FROM channel 
ORDER BY Rating_in_percent DESC;
```
-------------------------3732 sample_num
```sql
SELECT T1.Owner FROM channel AS T1 WHERE T1.Rating_in_percent = (SELECT MAX(Rating_in_percent) FROM channel)
```
-------------------------3733 sample_num
```sql
SELECT Owner FROM channel WHERE Rating_in_percent = (SELECT MAX(Rating_in_percent) FROM channel);
```
-------------------------3734 sample_num
```sql
SELECT COUNT(*) FROM program;
```
-------------------------3735 sample_num
```sql
SELECT COUNT(*) FROM program;
```
-------------------------3736 sample_num
```sql
SELECT Name 
FROM program 
ORDER BY Launch;
```
-------------------------3737 sample_num
```sql
SELECT Name 
FROM program 
ORDER BY Launch;
```
-------------------------3738 sample_num
```sql
SELECT Name, Origin, Owner FROM program;
```
-------------------------3739 sample_num
```sql
SELECT Name, Origin, Owner FROM program;
```
-------------------------3740 sample_num
```sql
SELECT Name FROM program WHERE Launch = (SELECT MAX(Launch) FROM program);
```
-------------------------3741 sample_num
```sql
SELECT Name 
FROM program 
ORDER BY Launch DESC 
LIMIT 1;
```
-------------------------3742 sample_num
```sql
SELECT SUM(Share_in_percent) 
FROM channel 
WHERE Owner = 'CCTV';
```
-------------------------3743 sample_num
```sql
SELECT SUM(Share_in_percent) 
FROM channel 
WHERE Owner = 'CCTV';
```
-------------------------3744 sample_num
```sql
SELECT c.Name
FROM channel c
JOIN broadcast b ON c.Channel_ID = b.Channel_ID
WHERE b.Time_of_day = 'morning';
```
-------------------------3745 sample_num
```sql
SELECT channel.Name 
FROM channel 
JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID 
WHERE broadcast.Time_of_day = 'morning';
```
-------------------------3746 sample_num
```sql
SELECT c.Name 
FROM channel c 
JOIN broadcast b ON c.Channel_ID = b.Channel_ID 
WHERE b.Time_of_day = 'morning' 
INTERSECT 
SELECT c.Name 
FROM channel c 
JOIN broadcast b ON c.Channel_ID = b.Channel_ID 
WHERE b.Time_of_day = 'night'
```
-------------------------3747 sample_num
```sql
SELECT c.Name 
FROM channel c 
WHERE EXISTS (
    SELECT * 
    FROM broadcast b 
    WHERE b.Channel_ID = c.Channel_ID 
    AND (b.Time_of_day = 'morning' OR b.Time_of_day = 'night') 
    GROUP BY b.Channel_ID 
    HAVING COUNT(DISTINCT b.Time_of_day) > 1
)
```
-------------------------3748 sample_num
```sql
SELECT Time_of_day, COUNT(Program_ID) AS Num_of_Programs
FROM broadcast
GROUP BY Time_of_day;
```
-------------------------3749 sample_num
```sql
SELECT Time_of_day, COUNT(Program_ID) AS Num_of_Programs 
FROM broadcast 
GROUP BY Time_of_day;
```
-------------------------3750 sample_num
```sql
SELECT COUNT(DISTINCT Program_ID) 
FROM broadcast 
WHERE Time_of_day = 'night';
```
Note: This assumes that 'Time_of_day' column has values like 'night', 'morning' etc. If it has timestamps then you might need to extract the hour part and filter on that.
-------------------------3751 sample_num
```sql
SELECT COUNT(DISTINCT T1.Name) 
FROM program AS T1 
JOIN broadcast AS T2 ON T1.Program_ID = T2.Program_ID 
WHERE T2.Time_of_day = 'Night';
```
-------------------------3752 sample_num
```sql
SELECT p.Name 
FROM program p 
WHERE NOT EXISTS (
    SELECT 1 
    FROM broadcast b 
    WHERE b.Program_ID = p.Program_ID AND b.Time_of_day = 'morning'
);
```
-------------------------3753 sample_num
```sql
SELECT p.Name 
FROM program p 
WHERE p.Program_ID NOT IN (
    SELECT b.Program_ID 
    FROM broadcast b 
    WHERE b.Time_of_day = 'morning'
);
```
-------------------------3754 sample_num
```sql
SELECT p.Owner
FROM program p
WHERE EXISTS (
    SELECT 1
    FROM broadcast b1
    WHERE b1.Program_ID = p.Program_ID AND (b1.Time_of_day = 'morning' OR b1.Time_of_day = 'night')
    INTERSECT
    SELECT 1
    FROM broadcast b2
    WHERE b2.Program_ID = p.Program_ID AND b2.Time_of_day <> b1.Time_of_day
);
```
-------------------------3755 sample_num
```sql
SELECT p.Owner 
FROM program p 
WHERE p.Program_ID IN (
    SELECT b1.Program_ID 
    FROM broadcast b1 
    WHERE b1.Time_of_day = 'morning' 
    INTERSECT 
    SELECT b2.Program_ID 
    FROM broadcast b2 
    WHERE b2.Time_of_day = 'night'
)
GROUP BY p.Owner;
```
-------------------------3756 sample_num
```sql
SELECT DISTINCT Origin FROM program ORDER BY Origin ASC;
```
-------------------------3757 sample_num
```sql
SELECT Origin FROM program ORDER BY Origin ASC;
```
-------------------------3758 sample_num
```sql
SELECT COUNT(DISTINCT Owner) FROM channel;
```
-------------------------3759 sample_num
```sql
SELECT COUNT(DISTINCT Owner) FROM channel;
```
-------------------------3760 sample_num
```sql
SELECT Name FROM program WHERE Origin != 'Beijing';
```
-------------------------3761 sample_num
```sql
SELECT Name FROM program WHERE Origin != 'Beijing';
```
-------------------------3762 sample_num
```sql
SELECT Name 
FROM channel 
WHERE Owner IN ('CCTV', 'HBS');
```
-------------------------3763 sample_num
```sql
SELECT Name 
FROM channel 
WHERE Owner IN ('CCTV', 'HBS');
```
-------------------------3764 sample_num
```sql
SELECT Owner, SUM(Rating_in_percent) as Total_Rating_Ratio
FROM channel
GROUP BY Owner;
```
-------------------------3765 sample_num
```sql
SELECT Owner, SUM(Rating_in_percent) as Total_Rating
FROM channel
GROUP BY Owner;
```
-------------------------3766 sample_num
```sql
SELECT p.Name 
FROM program p
JOIN broadcast b ON p.Program_ID = b.Program_ID
GROUP BY p.Name
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------3767 sample_num
```sql
SELECT p.Name 
FROM program p
JOIN broadcast b ON p.Program_ID = b.Program_ID
GROUP BY p.Name
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------3768 sample_num
```sql
SELECT COUNT(*) FROM Courses;
```
-------------------------3769 sample_num
```sql
SELECT COUNT(*) FROM Courses;
```
-------------------------3770 sample_num
```sql
SELECT course_description 
FROM Courses 
WHERE course_name = 'database';
```
-------------------------3771 sample_num
```sql
SELECT course_description 
FROM Courses 
WHERE course_name = 'database';
```
-------------------------3772 sample_num
```sql
SELECT address_line_1 
FROM Course_Authors_and_Tutors 
WHERE personal_name = 'Cathrine';
```
-------------------------3773 sample_num
```sql
SELECT address_line_1 
FROM Course_Authors_and_Tutors 
WHERE personal_name = 'Cathrine';
```
-------------------------3774 sample_num
```sql
SELECT address_line_1 
FROM Course_Authors_and_Tutors;
```
-------------------------3775 sample_num
```sql
SELECT address_line_1 FROM Course_Authors_and_Tutors;
```
-------------------------3776 sample_num
```sql
SELECT login_name, family_name 
FROM Course_Authors_and_Tutors;
```
-------------------------3777 sample_num
```sql
SELECT login_name, family_name 
FROM Course_Authors_and_Tutors;
```
-------------------------3778 sample_num
```sql
SELECT date_of_enrolment, date_of_completion 
FROM Student_Course_Enrolment;
```
-------------------------3779 sample_num
```sql
SELECT date_of_enrolment, date_of_completion FROM Student_Course_Enrolment;
```
-------------------------3780 sample_num
```sql
SELECT COUNT(DISTINCT student_id) 
FROM Student_Course_Enrolment;
```
-------------------------3781 sample_num
```sql
SELECT COUNT(DISTINCT student_id) 
FROM Student_Course_Enrolment;
```
-------------------------3782 sample_num
```sql
SELECT COUNT(DISTINCT course_id) 
FROM Student_Course_Enrolment;
```
-------------------------3783 sample_num
```sql
SELECT COUNT(DISTINCT course_id) 
FROM Student_Course_Enrolment;
```
-------------------------3784 sample_num
```sql
SELECT date_test_taken 
FROM Student_Tests_Taken 
WHERE test_result = 'Pass';
```
-------------------------3785 sample_num
```sql
SELECT date_test_taken 
FROM Student_Tests_Taken 
WHERE test_result = 'Pass';
```
-------------------------3786 sample_num
```sql
SELECT COUNT(*) 
FROM Student_Tests_Taken 
WHERE test_result = 'Fail';
```
-------------------------3787 sample_num
```sql
SELECT COUNT(*) FROM Student_Tests_Taken WHERE test_result = 'Fail';
```
-------------------------3788 sample_num
```sql
SELECT login_name FROM Students WHERE family_name = 'Ward';
```
-------------------------3789 sample_num
```sql
SELECT login_name FROM Students WHERE family_name = 'Ward';
```
-------------------------3790 sample_num
```sql
SELECT date_of_latest_logon 
FROM Students 
WHERE family_name = 'Jaskolski' OR family_name = 'Langosh';
```
-------------------------3791 sample_num
```sql
SELECT date_of_latest_logon 
FROM Students 
WHERE family_name IN ('Jaskolski', 'Langosh')
ORDER BY date_of_latest_logon DESC
LIMIT 1;
```
-------------------------3792 sample_num
```sql
SELECT COUNT(*) 
FROM Students 
WHERE personal_name LIKE '%son%';
```
-------------------------3793 sample_num
```sql
SELECT COUNT(*) 
FROM Students 
WHERE personal_name LIKE '%son%'
```
-------------------------3794 sample_num
```sql
SELECT subject_name FROM Subjects;
```
-------------------------3795 sample_num
```sql
SELECT subject_name FROM Subjects;
```
-------------------------3796 sample_num
```sql
SELECT * FROM Course_Authors_and_Tutors 
ORDER BY personal_name ASC;
```
-------------------------3797 sample_num
```sql
SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name ASC;
```
-------------------------3798 sample_num
```sql
SELECT personal_name, family_name 
FROM Students 
ORDER BY family_name ASC;
```
-------------------------3799 sample_num
```sql
SELECT personal_name, family_name 
FROM Students 
ORDER BY family_name ASC;
```
-------------------------3800 sample_num
```sql
SELECT test_result, COUNT(*) as result_count
FROM Student_Tests_Taken
GROUP BY test_result
ORDER BY result_count DESC;
```
-------------------------3801 sample_num
```sql
SELECT test_result, COUNT(DISTINCT student_id) 
FROM Student_Tests_Taken 
GROUP BY test_result;
```
-------------------------3802 sample_num
```sql
SELECT T1.login_name 
FROM Course_Authors_and_Tutors AS T1 
JOIN Courses AS T2 ON T1.author_id = T2.author_id 
WHERE T2.course_name = 'advanced database';
```
-------------------------3803 sample_num
```sql
SELECT T1.login_name 
FROM Course_Authors_and_Tutors AS T1 
JOIN Courses AS T2 
ON T1.author_id = T2.author_id 
WHERE T2.course_name = 'advanced database';
```
-------------------------3804 sample_num
```sql
SELECT T1.address_line_1 
FROM Course_Authors_and_Tutors AS T1 
JOIN Courses AS T2 
ON T1.author_id = T2.author_id 
WHERE T2.course_name = 'operating system' OR T2.course_name = 'data structure';
```
-------------------------3805 sample_num
```sql
SELECT T1.address_line_1 
FROM Course_Authors_and_Tutors AS T1 
JOIN Courses AS T2 
ON T1.author_id = T2.author_id 
JOIN Subjects AS T3 
ON T2.subject_id = T3.subject_id 
WHERE T3.subject_name = 'operating system' OR T3.subject_name = 'data structure';
```
-------------------------3806 sample_num
```sql
SELECT T1.personal_name, T1.family_name, T2.author_id 
FROM Course_Authors_and_Tutors AS T1 
JOIN Courses AS T2 ON T1.author_id = T2.author_id 
GROUP BY T2.author_id 
ORDER BY COUNT(T2.course_id) DESC 
LIMIT 1;
```
-------------------------3807 sample_num
```sql
SELECT T1.personal_name, T1.family_name, T1.author_id 
FROM Course_Authors_and_Tutors AS T1 
JOIN Courses AS T2 ON T1.author_id = T2.author_id 
GROUP BY T1.author_id 
ORDER BY COUNT(T2.course_id) DESC 
LIMIT 1;
```
-------------------------3808 sample_num
```sql
SELECT T1.address_line_1, T1.author_id 
FROM Course_Authors_and_Tutors AS T1 
JOIN Courses AS T2 ON T1.author_id = T2.author_id 
GROUP BY T1.author_id 
HAVING COUNT(T2.course_id) >= 2;
```
-------------------------3809 sample_num
```sql
SELECT CAAT.address_line_1, CAAT.author_id 
FROM Course_Authors_and_Tutors AS CAAT
JOIN Courses AS C ON CAAT.author_id = C.author_id
GROUP BY CAAT.author_id
HAVING COUNT(C.course_id) >= 2;
```
-------------------------3810 sample_num
```sql
SELECT c.course_name 
FROM Courses c 
JOIN Course_Authors_and_Tutors cat 
ON c.author_id = cat.author_id 
WHERE cat.personal_name = 'Julio';
```
-------------------------3811 sample_num
```sql
SELECT Courses.course_name 
FROM Courses 
JOIN Course_Authors_and_Tutors 
ON Courses.author_id = Course_Authors_and_Tutors.author_id 
WHERE Course_Authors_and_Tutors.personal_name = 'Julio';
```
-------------------------3812 sample_num
```sql
SELECT Courses.course_name, Courses.course_description 
FROM Courses 
JOIN Subjects ON Courses.subject_id = Subjects.subject_id 
WHERE Subjects.subject_name = 'Computer Science';
```
-------------------------3813 sample_num
```sql
SELECT Courses.course_name, Courses.course_description 
FROM Courses 
JOIN Subjects ON Courses.subject_id = Subjects.subject_id 
WHERE Subjects.subject_name = 'Computer Science';
```
-------------------------3814 sample_num
```sql
SELECT s.subject_id, s.subject_name, COUNT(c.course_id) AS num_of_courses
FROM Subjects s
JOIN Courses c ON s.subject_id = c.subject_id
GROUP BY s.subject_id, s.subject_name;
```
-------------------------3815 sample_num
```sql
SELECT s.subject_id, s.subject_name, COUNT(c.course_id) AS num_of_courses
FROM Subjects s
JOIN Courses c ON s.subject_id = c.subject_id
GROUP BY s.subject_id, s.subject_name;
```
-------------------------3816 sample_num
```sql
SELECT s.subject_id, s.subject_name, COUNT(c.course_id) AS course_count
FROM Subjects s
JOIN Courses c ON s.subject_id = c.subject_id
GROUP BY s.subject_id, s.subject_name
ORDER BY course_count ASC;
```
-------------------------3817 sample_num
```sql
SELECT 
    s.subject_id, 
    s.subject_name, 
    COUNT(c.course_id) AS number_of_courses
FROM 
    Subjects s
JOIN 
    Courses c ON s.subject_id = c.subject_id
GROUP BY 
    s.subject_id, 
    s.subject_name
ORDER BY 
    number_of_courses ASC;
```
-------------------------3818 sample_num
```sql
SELECT T2.date_of_enrolment 
FROM Courses AS T1 
JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id 
WHERE T1.course_name = 'Spanish';
```
-------------------------3819 sample_num
```sql
SELECT date_of_enrolment 
FROM Student_Course_Enrolment 
JOIN Courses ON Student_Course_Enrolment.course_id = Courses.course_id 
WHERE course_name = 'Spanish';
```
-------------------------3820 sample_num
```sql
SELECT C.course_name 
FROM Courses C
JOIN Student_Course_Enrolment E ON C.course_id = E.course_id
GROUP BY C.course_name
ORDER BY COUNT(E.registration_id) DESC
LIMIT 1;
```
-------------------------3821 sample_num
```sql
SELECT C.course_name 
FROM Courses C
JOIN Student_Course_Enrolment SCE ON C.course_id = SCE.course_id
GROUP BY C.course_name
ORDER BY COUNT(SCE.registration_id) DESC
LIMIT 1;
```
-------------------------3822 sample_num
```sql
SELECT C.course_name 
FROM Courses C
JOIN Student_Course_Enrolment E ON C.course_id = E.course_id
GROUP BY C.course_id
HAVING COUNT(E.registration_id) = 1;
```
-------------------------3823 sample_num
```sql
SELECT C.course_name 
FROM Courses C
JOIN Student_Course_Enrolment E ON C.course_id = E.course_id
GROUP BY C.course_id
HAVING COUNT(E.registration_id) = 1;
```
-------------------------3824 sample_num
```sql
SELECT C.course_name, C.course_description 
FROM Courses C
WHERE C.course_id IN (
    SELECT SC.course_id 
    FROM Student_Course_Enrolment SC 
    GROUP BY SC.course_id 
    HAVING COUNT(SC.student_id) > 2
);
```
-------------------------3825 sample_num
```sql
SELECT C.course_name, C.course_description 
FROM Courses C
WHERE C.course_id IN (
    SELECT SCE.course_id 
    FROM Student_Course_Enrolment SCE
    GROUP BY SCE.course_id
    HAVING COUNT(SCE.student_id) > 2
);
```
-------------------------3826 sample_num
```sql
SELECT Courses.course_name, COUNT(Student_Course_Enrolment.registration_id) AS NumberOfEnrollments
FROM Courses
LEFT JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id
GROUP BY Courses.course_id;
```
-------------------------3827 sample_num
```sql
SELECT Courses.course_name, COUNT(Student_Course_Enrolment.student_id) AS NumberOfStudents
FROM Courses
JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id
GROUP BY Courses.course_name;
```
-------------------------3828 sample_num
```sql
SELECT DISTINCT SCE.date_of_enrolment 
FROM Student_Course_Enrolment SCE
JOIN Student_Tests_Taken STT ON SCE.registration_id = STT.registration_id
WHERE STT.test_result = 'Pass';
```
-------------------------3829 sample_num
```sql
SELECT DISTINCT SCE.date_of_enrolment 
FROM Student_Course_Enrolment SCE
JOIN Student_Tests_Taken STT ON SCE.registration_id = STT.registration_id
WHERE STT.test_result = 'Pass';
```
-------------------------3830 sample_num
```sql
SELECT DISTINCT SCE.date_of_completion 
FROM Student_Course_Enrolment SCE
JOIN Student_Tests_Taken STT ON SCE.registration_id = STT.registration_id
WHERE STT.test_result = 'Fail';
```
-------------------------3831 sample_num
```sql
SELECT STT.date_test_taken, SCE.date_of_completion 
FROM Student_Tests_Taken AS STT 
JOIN Student_Course_Enrolment AS SCE ON STT.registration_id = SCE.registration_id 
WHERE STT.test_result = 'Fail';
```
-------------------------3832 sample_num
```sql
SELECT date_of_enrolment, date_of_completion 
FROM Student_Course_Enrolment 
WHERE student_id = (SELECT student_id FROM Students WHERE personal_name = 'Karson');
```
-------------------------3833 sample_num
```sql
SELECT sce.date_of_enrolment, sce.date_of_completion 
FROM Student_Course_Enrolment sce 
JOIN Students s ON sce.student_id = s.student_id 
WHERE s.personal_name = 'Karson';
```
-------------------------3834 sample_num
```sql
SELECT date_of_enrolment, date_of_completion 
FROM Student_Course_Enrolment 
JOIN Students ON Student_Course_Enrolment.student_id = Students.student_id 
WHERE family_name = 'Zieme' AND personal_name = 'Bernie';
```
-------------------------3835 sample_num
```sql
SELECT T2.date_of_enrolment, T2.date_of_completion 
FROM Students AS T1 
JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id 
WHERE T1.family_name = 'Zieme' AND T1.personal_name = 'Bernie';
```
-------------------------3836 sample_num
```sql
SELECT s.student_id, s.login_name 
FROM Students s
JOIN Student_Course_Enrolment sce ON s.student_id = sce.student_id
GROUP BY s.student_id, s.login_name
ORDER BY COUNT(sce.registration_id) DESC
LIMIT 1;
```
-------------------------3837 sample_num
```sql
SELECT S.student_id, S.login_name
FROM Students S
JOIN Student_Course_Enrolment SE ON S.student_id = SE.student_id
GROUP BY S.student_id, S.login_name
ORDER BY COUNT(SE.course_id) DESC
LIMIT 1;
```
-------------------------3838 sample_num
```sql
SELECT T1.student_id, T2.personal_name 
FROM Student_Course_Enrolment T1 
JOIN Students T2 ON T1.student_id = T2.student_id 
GROUP BY T1.student_id, T2.personal_name 
HAVING COUNT(*) >= 2;
```
-------------------------3839 sample_num
```sql
SELECT s.student_id, s.personal_name
FROM Students s
JOIN Student_Course_Enrolment sce
ON s.student_id = sce.student_id
GROUP BY s.student_id, s.personal_name
HAVING COUNT(sce.registration_id) >= 2;
```
-------------------------3840 sample_num
```sql
SELECT T1.student_id, T1.middle_name 
FROM Students AS T1 
JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id 
GROUP BY T1.student_id 
HAVING COUNT(*) <= 2;
```
-------------------------3841 sample_num
```sql
SELECT s.student_id, s.middle_name 
FROM Students s
JOIN Student_Course_Enrolment sce ON s.student_id = sce.student_id
GROUP BY s.student_id, s.middle_name
HAVING COUNT(sce.registration_id) <= 2;
```
-------------------------3842 sample_num
```sql
SELECT personal_name 
FROM Students 
WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment);
```
-------------------------3843 sample_num
```sql
SELECT personal_name 
FROM Students 
WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment);
```
-------------------------3844 sample_num
```sql
SELECT COUNT(*) 
FROM Students 
WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment);
```
-------------------------3845 sample_num
```sql
SELECT COUNT(*) 
FROM Students 
WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment);
```
-------------------------3846 sample_num
```sql
SELECT login_name 
FROM Course_Authors_and_Tutors 
INTERSECT 
SELECT login_name 
FROM Students;
```
-------------------------3847 sample_num
```sql
SELECT login_name 
FROM Course_Authors_and_Tutors 
WHERE login_name IN (SELECT login_name FROM Students)
```
```
-------------------------3848 sample_num
```sql
SELECT personal_name 
FROM Course_Authors_and_Tutors 
INTERSECT 
SELECT personal_name 
FROM Students;
```
-------------------------3849 sample_num
```sql
SELECT personal_name 
FROM Course_Authors_and_Tutors 
WHERE personal_name IN (SELECT personal_name FROM Students)
INTERSECT
SELECT personal_name 
FROM Students 
WHERE personal_name IN (SELECT personal_name FROM Course_Authors_and_Tutors);
```
However, a more optimized query would be:
```sql
SELECT T1.personal_name 
FROM Course_Authors_and_Tutors AS T1, Students AS T2 
WHERE T1.personal_name = T2.personal_name;
```
-------------------------3850 sample_num
```sql
SELECT Claims.Date_Claim_Made, Claims.Claim_ID 
FROM Claims 
WHERE Claims.Claim_ID IN (
    SELECT Claim_ID 
    FROM Settlements 
    GROUP BY Claim_ID 
    HAVING COUNT(Settlement_ID) > 2
) OR Claims.Amount_Claimed = (
    SELECT MAX(Amount_Claimed) 
    FROM Claims
);
```
-------------------------3851 sample_num
```sql
SELECT Claims.Date_Claim_Made, Claims.Claim_ID
FROM Claims
WHERE Claims.Claim_ID IN (
    SELECT Claim_ID
    FROM Settlements
    GROUP BY Claim_ID
    HAVING COUNT(Settlement_ID) > 2
)
OR Claims.Amount_Claimed = (
    SELECT MAX(Amount_Claimed)
    FROM Claims
);
```
-------------------------3852 sample_num
```sql
SELECT c.Customer_ID, c.Customer_Details
FROM Customers c
JOIN Customer_Policies cp ON c.Customer_ID = cp.Customer_ID
WHERE NOT EXISTS (
    SELECT *
    FROM Claims cl
    WHERE cl.Policy_ID = cp.Policy_ID
)
GROUP BY c.Customer_ID, c.Customer_Details
HAVING COUNT(cp.Policy_ID) >= 2;
```
-------------------------3853 sample_num
```sql
SELECT c.Customer_ID, c.Customer_Details
FROM Customers c
JOIN Customer_Policies cp ON c.Customer_ID = cp.Customer_ID
WHERE NOT EXISTS (
    SELECT 1 FROM Claims cl WHERE cl.Policy_ID = cp.Policy_ID
)
GROUP BY c.Customer_ID, c.Customer_Details
HAVING COUNT(cp.Policy_ID) >= 2;
```
-------------------------3854 sample_num
```sql
SELECT Payment_Method_Code, Date_Payment_Made, Amount_Payment 
FROM Payments 
ORDER BY Date_Payment_Made ASC;
```
-------------------------3855 sample_num
```sql
SELECT Payments.Payment_Method_Code, Payments.Date_Payment_Made, Payments.Amount_Payment 
FROM Payments 
ORDER BY Payments.Date_Payment_Made ASC;
```
-------------------------3856 sample_num
```sql
SELECT C.Amount_Settled, C.Amount_Claimed 
FROM Claims C 
WHERE C.Amount_Claimed = (SELECT MAX(Claims.Amount_Claimed) FROM Claims);
```
-------------------------3857 sample_num
```sql
SELECT c.Amount_Settled, c.Amount_Claimed 
FROM Claims c
JOIN Settlements s ON c.Claim_ID = s.Claim_ID 
WHERE c.Amount_Claimed = (SELECT MAX(Amount_Claimed) FROM Claims);
```
-------------------------3858 sample_num
```sql
SELECT Claims.Amount_Settled, Claims.Amount_Claimed 
FROM Claims 
JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID 
ORDER BY Claims.Amount_Settled 
LIMIT 1;
```
-------------------------3859 sample_num
```sql
SELECT Claims.Amount_Settled, Claims.Amount_Claimed 
FROM Claims 
JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID 
ORDER BY Claims.Amount_Settled 
LIMIT 1;
```
-------------------------3860 sample_num
```sql
SELECT Date_Claim_Made, Date_Claim_Settled 
FROM Claims 
WHERE Amount_Claimed > (SELECT AVG(Amount_Claimed) FROM Claims);
```
-------------------------3861 sample_num
```sql
SELECT 
    c.Date_Claim_Made, 
    c.Date_Claim_Settled 
FROM 
    Claims c 
WHERE 
    c.Amount_Claimed > (SELECT AVG(Amount_Claimed) FROM Claims);
```
-------------------------3862 sample_num
```sql
SELECT C.Date_Claim_Made 
FROM Claims C
JOIN Settlements S ON C.Claim_ID = S.Claim_ID 
WHERE C.Amount_Claimed <= (SELECT AVG(Amount_Claimed) FROM Claims)
GROUP BY C.Date_Claim_Made;
```
-------------------------3863 sample_num
```sql
SELECT T1.Date_Claim_Made 
FROM Claims AS T1 
JOIN (SELECT AVG(Amount_Claimed) AS avg_claim FROM Claims) AS T2 
WHERE T1.Amount_Claimed <= T2.avg_claim;
```
-------------------------3864 sample_num
```sql
SELECT Claims.Claim_ID, COUNT(Settlements.Settlement_ID) AS Num_of_Settlelements
FROM Claims
LEFT JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID
GROUP BY Claims.Claim_ID;
```
-------------------------3865 sample_num
```sql
SELECT Claims.Claim_ID, COUNT(Settlements.Settlement_ID) AS Num_of_Settlelements
FROM Claims
LEFT JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID
GROUP BY Claims.Claim_ID;
```
-------------------------3866 sample_num
```sql
SELECT Claims.Claim_ID, Claims.Date_Claim_Made, COUNT(Settlements.Settlement_ID) AS NumberOfSettlements
FROM Claims
JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID
GROUP BY Claims.Claim_ID, Claims.Date_Claim_Made
ORDER BY NumberOfSettlements DESC
LIMIT 1;
```
-------------------------3867 sample_num
```sql
SELECT c.Claim_ID, c.Date_Claim_Made, COUNT(s.Settlement_ID) AS Settlement_Count
FROM Claims c
JOIN Settlements s ON c.Claim_ID = s.Claim_ID
GROUP BY c.Claim_ID, c.Date_Claim_Made
ORDER BY Settlement_Count DESC
LIMIT 1;
```
-------------------------3868 sample_num
```sql
SELECT COUNT(*), T1.Claim_ID FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_ID = T2.Claim_ID WHERE T2.Date_Claim_Settled = (SELECT MAX(Date_Claim_Settled) FROM Settlements);
```
-------------------------3869 sample_num
```sql
SELECT Claims.Claim_ID, COUNT(Settlements.Settlement_ID) AS Num_Settlements
FROM Claims
JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID
WHERE Settlements.Date_Claim_Settled = (SELECT MAX(Date_Claim_Settled) FROM Settlements)
GROUP BY Claims.Claim_ID;
```
-------------------------3870 sample_num
```sql
SELECT MIN(Date_Claim_Made) FROM Claims;
```
-------------------------3871 sample_num
```sql
SELECT MIN(Date_Claim_Made) FROM Claims;
```
-------------------------3872 sample_num
```sql
SELECT SUM(Amount_Settled) FROM Settlements;
```
-------------------------3873 sample_num
```sql
SELECT SUM(Amount_Settled) FROM Settlements;
```
-------------------------3874 sample_num
```sql
SELECT C.Customer_Details, C.Customer_ID
FROM Customers C
JOIN Customer_Policies CP ON C.Customer_ID = CP.Customer_ID
GROUP BY C.Customer_ID, C.Customer_Details
HAVING COUNT(CP.Policy_ID) > 1;
```
-------------------------3875 sample_num
```sql
SELECT C.Customer_ID, C.Customer_Details
FROM Customers C
JOIN Customer_Policies CP ON C.Customer_ID = CP.Customer_ID
GROUP BY C.Customer_ID, C.Customer_Details
HAVING COUNT(CP.Policy_ID) > 1;
```
-------------------------3876 sample_num
```sql
SELECT Claims.Date_Claim_Made, Settlements.Date_Claim_Settled 
FROM Claims 
JOIN Settlements ON Claims.Claim_ID = Settlements.Claim_ID;
```
-------------------------3877 sample_num
```sql
SELECT Date_Claim_Made, Date_Claim_Settled FROM Settlements;
```
-------------------------3878 sample_num
```sql
SELECT Payment_Method_Code, COUNT(*) as Total_Usage 
FROM Payments 
GROUP BY Payment_Method_Code 
ORDER BY Total_Usage DESC 
LIMIT 1;
```
-------------------------3879 sample_num
```sql
SELECT Payment_Method_Code, COUNT(*) as Count 
FROM Payments 
GROUP BY Payment_Method_Code 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------3880 sample_num
```sql
SELECT Payment_Method_Code, COUNT(*) as Payment_Count 
FROM Payments 
GROUP BY Payment_Method_Code 
ORDER BY Payment_Count ASC 
LIMIT 1;
```
-------------------------3881 sample_num
```sql
SELECT Payment_Method_Code, COUNT(*) as Count 
FROM Payments 
GROUP BY Payment_Method_Code 
ORDER BY Count ASC 
LIMIT 1;
```
-------------------------3882 sample_num
```sql
SELECT SUM(Amount_Payment) FROM Payments;
```
-------------------------3883 sample_num
```sql
SELECT SUM(Amount_Payment) AS Total_Payment_Processed FROM Payments;
```
-------------------------3884 sample_num
```sql
SELECT DISTINCT Customer_Details FROM Customers;
```
-------------------------3885 sample_num
```sql
SELECT DISTINCT Customer_Details FROM Customers;
```
-------------------------3886 sample_num
```sql
SELECT Policy_Type_Code, COUNT(*) as Number_of_Customers
FROM Customer_Policies
GROUP BY Policy_Type_Code
ORDER BY Number_of_Customers DESC
LIMIT 1;
```
-------------------------3887 sample_num
```sql
SELECT Policy_Type_Code, COUNT(Customer_ID) as Num_Customers
FROM Customer_Policies
GROUP BY Policy_Type_Code
ORDER BY Num_Customers DESC
LIMIT 1;
```
-------------------------3888 sample_num
```sql
SELECT COUNT(*) FROM Settlements;
```
-------------------------3889 sample_num
```sql
SELECT COUNT(*) FROM Settlements;
```
-------------------------3890 sample_num
```sql
SELECT Payment_ID, Date_Payment_Made, Amount_Payment 
FROM Payments 
WHERE Payment_Method_Code = 'Visa';
```
-------------------------3891 sample_num
```sql
SELECT Payment_ID, Date_Payment_Made, Amount_Payment 
FROM Payments 
WHERE Payment_Method_Code = 'Visa';
```
-------------------------3892 sample_num
```sql
SELECT Customer_Details FROM Customers WHERE Customer_ID NOT IN (SELECT Customer_ID FROM Customer_Policies)
```
-------------------------3893 sample_num
```sql
SELECT Customers.Customer_Details 
FROM Customers 
LEFT JOIN Customer_Policies ON Customers.Customer_ID = Customer_Policies.Customer_ID 
WHERE Customer_Policies.Policy_ID IS NULL;
```
-------------------------3894 sample_num
```sql
SELECT C.Date_Claim_Made, C.Date_Claim_Settled, C.Amount_Settled
FROM Claims C
JOIN Settlements S ON C.Claim_ID = S.Claim_ID
WHERE (SELECT COUNT(*) FROM Settlements WHERE Claim_ID = C.Claim_ID) = 1;
```
-------------------------3895 sample_num
```sql
SELECT 
    c.Date_Claim_Made, 
    c.Date_Claim_Settled, 
    c.Amount_Settled 
FROM 
    Claims c 
WHERE 
    c.Claim_ID IN (
        SELECT 
            Claim_ID 
        FROM 
            Settlements 
        GROUP BY 
            Claim_ID 
        HAVING 
            COUNT(Settlement_ID) = 1
    );
```
-------------------------3896 sample_num
```sql
SELECT SUM(Amount_Claimed) FROM Claims;
```
-------------------------3897 sample_num
```sql
SELECT SUM(Amount_Claimed) FROM Claims;
```
-------------------------3898 sample_num
```sql
SELECT Department.Name
FROM Department
JOIN Affiliated_With ON Department.DepartmentID = Affiliated_With.Department
GROUP BY Department.Name
ORDER BY COUNT(Affiliated_With.Physician) DESC
LIMIT 1;
```
-------------------------3899 sample_num
```sql
SELECT Department.Name
FROM Department
JOIN Affiliated_With ON Department.DepartmentID = Affiliated_With.Department
GROUP BY Department.Name
ORDER BY COUNT(Affiliated_With.Physician) DESC
LIMIT 1;
```
-------------------------3900 sample_num
```sql
SELECT D.Head
FROM Department D
WHERE D.DepartmentID = (
    SELECT A.Department
    FROM (
        SELECT Department, COUNT(*) AS Count
        FROM Affiliated_With
        GROUP BY Department
        ORDER BY Count
        LIMIT 1
    ) A
)
```
-------------------------3901 sample_num
```sql
SELECT D.Head 
FROM Department D
JOIN Affiliated_With A ON D.DepartmentID = A.Department
GROUP BY D.Head
ORDER BY COUNT(A.Physician) ASC
LIMIT 1;
```
Note: This query will return the EmployeeID of the head of the department with the least number of affiliated physicians. However, to specifically get the EmployeeID as requested, you may need to adjust the query based on how the head of the department is stored in your database schema. If the head's EmployeeID is stored directly in the Department table, then the query should work as is. If not, you may need to join the Physician table to retrieve the head's EmployeeID. Here's a modified version that should work for your specific request:
```sql
SELECT D.Head AS EmployeeID
FROM Department D
WHERE D.DepartmentID = (
    SELECT A.Department
    FROM Affiliated_With A
    GROUP BY A.Department
    ORDER BY COUNT(A.Physician) ASC
    LIMIT 1
);
```
-------------------------3902 sample_num
```sql
SELECT D.Name, E.Position 
FROM Department D 
JOIN Physician E ON D.Head = E.EmployeeID 
WHERE D.DepartmentID IN (
    SELECT A.Department 
    FROM Affiliated_With A 
    GROUP BY A.Department 
    ORDER BY COUNT(A.Physician) 
    LIMIT 1
)
```
-------------------------3903 sample_num
```sql
SELECT D.Name, P.Name, P.Position
FROM Department D
JOIN Physician P ON D.Head = P.EmployeeID
WHERE D.DepartmentID IN (
    SELECT A.Department
    FROM Affiliated_With A
    GROUP BY A.Department
    ORDER BY COUNT(A.Physician) ASC
    LIMIT 1
)
```
-------------------------3904 sample_num
```sql
SELECT P.Name 
FROM Patient P 
JOIN Appointment A ON P.SSN = A.Patient;
```
-------------------------3905 sample_num
```sql
SELECT P.Name 
FROM Patient P 
JOIN Appointment A ON P.SSN = A.Patient;
```
-------------------------3906 sample_num
```sql
SELECT T1.Name, T1.Phone 
FROM Patient AS T1 
JOIN Appointment AS T2 ON T1.SSN = T2.Patient 
GROUP BY T2.Patient 
HAVING COUNT(T2.AppointmentID) > 1;
```
-------------------------3907 sample_num
```sql
SELECT P.Name, P.Phone 
FROM Patient P 
JOIN Appointment A ON P.SSN = A.Patient 
GROUP BY P.SSN 
HAVING COUNT(A.AppointmentID) > 1;
```
-------------------------3908 sample_num
```sql
SELECT AppointmentID
FROM Appointment
WHERE Start = (SELECT MAX(Start) FROM Appointment);
```
-------------------------3909 sample_num
```sql
SELECT AppointmentID FROM Appointment ORDER BY Start DESC LIMIT 1;
```
-------------------------3910 sample_num
```sql
SELECT DISTINCT P.Name 
FROM Physician P 
JOIN Appointment A ON P.EmployeeID = A.Physician;
```
-------------------------3911 sample_num
```sql
SELECT DISTINCT P.Name 
FROM Physician P 
JOIN Appointment A ON P.EmployeeID = A.Physician;
```
-------------------------3912 sample_num
```sql
SELECT P.Name 
FROM Physician P 
WHERE P.EmployeeID NOT IN (SELECT A.Physician FROM Appointment A)
```
-------------------------3913 sample_num
```sql
SELECT P.Name 
FROM Physician P 
WHERE NOT EXISTS (
    SELECT * 
    FROM Appointment A 
    WHERE A.Physician = P.EmployeeID
);
```
-------------------------3914 sample_num
```sql
SELECT P.Name AS PhysicianName, D.Name AS DepartmentName 
FROM Physician P 
JOIN Affiliated_With AW ON P.EmployeeID = AW.Physician 
JOIN Department D ON AW.Department = D.DepartmentID 
WHERE AW.PrimaryAffiliation = 1;
```
-------------------------3915 sample_num
```sql
SELECT P.Name, D.Name 
FROM Physician P 
JOIN Affiliated_With AW ON P.EmployeeID = AW.Physician 
JOIN Department D ON AW.Department = D.DepartmentID 
WHERE AW.PrimaryAffiliation = 1;
```
-------------------------3916 sample_num
```sql
SELECT P.Name 
FROM Patient P 
JOIN Appointment A ON P.SSN = A.Patient 
WHERE A.Start = (SELECT MAX(Start) FROM Appointment);
```
-------------------------3917 sample_num
```sql
SELECT P.Name 
FROM Patient P, Appointment A 
WHERE P.SSN = A.Patient 
ORDER BY A.Start DESC 
LIMIT 1;
```
-------------------------3918 sample_num
```sql
SELECT COUNT(*) 
FROM Stay 
WHERE Room = '112';
```
-------------------------3919 sample_num
```sql
SELECT COUNT(*) FROM Stay WHERE Room = 112;
```
-------------------------3920 sample_num
```sql
SELECT COUNT(*) 
FROM Prescribes p 
JOIN Physician ph ON p.Physician = ph.EmployeeID 
JOIN Patient pt ON p.Patient = pt.SSN 
WHERE ph.Name = 'John Dorian';
```
-------------------------3921 sample_num
```sql
SELECT COUNT(*) 
FROM Prescribes p 
JOIN Physician ph ON p.Physician = ph.EmployeeID 
JOIN Patient pt ON p.Patient = pt.SSN 
WHERE ph.Name = 'John Dorian';
```
-------------------------3922 sample_num
```sql
SELECT M.Name 
FROM Medication M, Prescribes P, Stay S, Room R 
WHERE P.Medication = M.Code 
AND P.Patient = S.Patient 
AND S.Room = R.RoomNumber 
AND R.RoomNumber = 111;
```
-------------------------3923 sample_num
```sql
SELECT M.Name 
FROM Medication M 
JOIN Prescribes P ON M.Code = P.Medication 
JOIN Stay S ON P.Patient = S.Patient 
WHERE S.Room = (SELECT RoomNumber FROM Room WHERE RoomNumber = 111)
AND P.Date BETWEEN S.StayStart AND S.StayEnd;
```
-------------------------3924 sample_num
```sql
SELECT p.Name
FROM Patient p
JOIN Stay s ON p.SSN = s.Patient
WHERE s.Room = 111
ORDER BY s.StayEnd DESC
LIMIT 1;
```
-------------------------3925 sample_num
```sql
SELECT Stay.Patient
FROM Stay
JOIN Room ON Stay.Room = Room.RoomNumber
WHERE Room.RoomNumber = 111
ORDER BY Stay.StayEnd DESC
LIMIT 1;
```
-------------------------3926 sample_num
```sql
SELECT Nurse.Name
FROM Nurse
JOIN Appointment ON Nurse.EmployeeID = Appointment.PrepNurse
GROUP BY Nurse.Name
ORDER BY COUNT(Appointment.AppointmentID) DESC
LIMIT 1;
```
-------------------------3927 sample_num
```sql
SELECT Nurse.Name
FROM Nurse
JOIN Appointment ON Nurse.EmployeeID = Appointment.PrepNurse
GROUP BY Nurse.Name
ORDER BY COUNT(Appointment.AppointmentID) DESC
LIMIT 1;
```
-------------------------3928 sample_num
```sql
SELECT P.Name, COUNT(DISTINCT A.Patient) AS NumberOfPatients
FROM Physician P
JOIN Appointment A ON P.EmployeeID = A.Physician
GROUP BY P.EmployeeID, P.Name;
```
-------------------------3929 sample_num
```sql
SELECT Physician.Name, COUNT(Patient.SSN) AS NumberOfPatients
FROM Physician
JOIN Patient ON Physician.EmployeeID = Patient.PCP
GROUP BY Physician.Name;
```
-------------------------3930 sample_num
```sql
SELECT P.Name
FROM Physician P
JOIN Patient PT ON PT.PCP = P.EmployeeID
GROUP BY P.EmployeeID, P.Name
HAVING COUNT(PT.SSN) > 1;
```
-------------------------3931 sample_num
```sql
SELECT P.Name
FROM Physician P
JOIN Patient PT ON P.EmployeeID = PT.PCP
GROUP BY P.Name
HAVING COUNT(PT.SSN) > 1;
```
-------------------------3932 sample_num
```sql
SELECT BlockFloor, COUNT(RoomNumber) AS NumberOfRooms
FROM Room
GROUP BY BlockFloor;
```
-------------------------3933 sample_num
```sql
SELECT BlockFloor, COUNT(RoomNumber) AS NumberOfRooms
FROM Room
GROUP BY BlockFloor;
```
-------------------------3934 sample_num
```sql
SELECT BlockCode, COUNT(RoomNumber) AS NumberOfRooms
FROM Room
GROUP BY BlockCode;
```
-------------------------3935 sample_num
```sql
SELECT BlockCode, COUNT(RoomNumber) AS NumberOfRooms
FROM Room
GROUP BY BlockCode;
```
-------------------------3936 sample_num
```sql
SELECT DISTINCT BlockCode 
FROM Block 
WHERE BlockCode NOT IN (SELECT BlockCode FROM Room WHERE Unavailable = 1)
```
-------------------------3937 sample_num
```sql
SELECT DISTINCT(BlockCode) 
FROM Block 
WHERE BlockCode NOT IN (SELECT BlockCode FROM Room WHERE Unavailable = 1)
```
```
-------------------------3938 sample_num
```sql
SELECT COUNT(DISTINCT RoomType) FROM Room;
```
-------------------------3939 sample_num
```sql
SELECT COUNT(DISTINCT RoomType) FROM Room;
```
-------------------------3940 sample_num
```sql
SELECT P.Name 
FROM Physician P 
JOIN Prescribes Pr ON P.EmployeeID = Pr.Physician 
JOIN Medication M ON M.Code = Pr.Medication 
WHERE M.Name = 'Thesisin';
```
-------------------------3941 sample_num
```sql
SELECT P.Name 
FROM Physician P 
JOIN Prescribes Pr ON P.EmployeeID = Pr.Physician 
JOIN Medication M ON M.Code = Pr.Medication 
WHERE M.Name = 'Thesisin';
```
-------------------------3942 sample_num
```sql
SELECT DISTINCT P.Name, P.Position 
FROM Physician P 
JOIN Prescribes Pr ON P.EmployeeID = Pr.Physician 
JOIN Medication M ON Pr.Medication = M.Code 
WHERE M.Brand = 'X';
```
-------------------------3943 sample_num
```sql
SELECT P.Name, P.Position 
FROM Physician P 
JOIN Prescribes Pr ON P.EmployeeID = Pr.Physician 
JOIN Medication M ON Pr.Medication = M.Code 
WHERE M.Brand = 'X';
```
-------------------------3944 sample_num
```sql
SELECT Medication.Brand, COUNT(*) AS NumberOfPrescriptions
FROM Prescribes
JOIN Medication ON Prescribes.Medication = Medication.Code
GROUP BY Medication.Brand;
```
-------------------------3945 sample_num
```sql
SELECT Medication.Brand, COUNT(*) 
FROM Prescribes 
JOIN Medication ON Prescribes.Medication = Medication.Code 
GROUP BY Medication.Brand;
```
-------------------------3946 sample_num
```sql
SELECT Name FROM Physician WHERE Position LIKE '%senior%';
```
-------------------------3947 sample_num
```sql
SELECT Name FROM Physician WHERE Position LIKE '%senior%';
```
-------------------------3948 sample_num
```sql
SELECT p.Name
FROM Patient p
JOIN Undergoes u ON p.SSN = u.Patient
WHERE u.DateUndergoes = (
    SELECT MAX(DateUndergoes) FROM Undergoes
);
```
-------------------------3949 sample_num
```sql
SELECT p.Name
FROM Patient p
JOIN Undergoes u ON p.SSN = u.Patient
ORDER BY u.DateUndergoes DESC
LIMIT 1;
```
-------------------------3950 sample_num
```sql
SELECT P.Name 
FROM Patient P, Undergoes U, Stay S 
WHERE P.SSN = U.Patient AND U.Patient = S.Patient AND S.Room = 111;
```
-------------------------3951 sample_num
```sql
SELECT DISTINCT p.Name 
FROM Patient p 
JOIN Stay s ON p.SSN = s.Patient 
JOIN Undergoes u ON p.SSN = u.Patient AND s.StayID = u.Stay 
WHERE s.Room = '111';
```
-------------------------3952 sample_num
```sql
SELECT DISTINCT Name 
FROM Nurse 
ORDER BY Name ASC;
```
-------------------------3953 sample_num
```sql
SELECT DISTINCT Name 
FROM Nurse 
ORDER BY Name ASC;
```
-------------------------3954 sample_num
```sql
SELECT DISTINCT N.Name 
FROM Nurse N 
JOIN On_Call OC ON N.EmployeeID = OC.Nurse 
JOIN Stay S ON OC.BlockFloor = S.Room AND OC.BlockCode = S.Room AND OC.OnCallStart < S.StayEnd AND OC.OnCallEnd > S.StayStart 
JOIN Undergoes U ON S.StayID = U.Stay
```
-------------------------3955 sample_num
```sql
SELECT DISTINCT N.Name 
FROM Nurse N 
JOIN On_Call OC ON N.EmployeeID = OC.Nurse 
JOIN Stay S ON OC.BlockFloor = S.Room.BlockFloor AND OC.BlockCode = S.Room.BlockCode 
JOIN Undergoes U ON S.StayID = U.Stay;
```
-------------------------3956 sample_num
```sql
SELECT DISTINCT Name 
FROM Medication 
ORDER BY Name ASC;
```
-------------------------3957 sample_num
```sql
SELECT DISTINCT Name 
FROM Medication 
ORDER BY Name ASC;
```
-------------------------3958 sample_num
```sql
SELECT P.Name 
FROM Physician P 
JOIN Prescribes Pr ON P.EmployeeID = Pr.Physician 
WHERE Pr.Dose = (SELECT MAX(Dose) FROM Prescribes)
```
```
-------------------------3959 sample_num
```sql
SELECT P.Name 
FROM Physician P 
JOIN Prescribes Pr ON P.EmployeeID = Pr.Physician 
ORDER BY Pr.Dose DESC 
LIMIT 1;
```
-------------------------3960 sample_num
```sql
SELECT Physician, Department 
FROM Affiliated_With 
WHERE PrimaryAffiliation = 1;
```
-------------------------3961 sample_num
```sql
SELECT Physician, Department FROM Affiliated_With WHERE PrimaryAffiliation = 1;
```
-------------------------3962 sample_num
```sql
SELECT DISTINCT d.Name 
FROM Department d
JOIN Affiliated_With af ON d.DepartmentID = af.Department
WHERE af.PrimaryAffiliation = 1;
```
-------------------------3963 sample_num
```sql
SELECT DISTINCT d.Name 
FROM Department d
JOIN Affiliated_With af ON d.DepartmentID = af.Department
WHERE af.PrimaryAffiliation = 1;
```
-------------------------3964 sample_num
```sql
SELECT Nurse.Name 
FROM On_Call 
JOIN Nurse ON On_Call.Nurse = Nurse.EmployeeID 
WHERE On_Call.BlockFloor = 1 AND On_Call.BlockCode = 1;
```
-------------------------3965 sample_num
```sql
SELECT Nurse
FROM On_Call
WHERE BlockFloor = 1 AND BlockCode = 1;
```
-------------------------3966 sample_num
```sql
SELECT MAX(Cost) AS Highest_Cost, MIN(Cost) AS Lowest_Cost, AVG(Cost) AS Average_Cost FROM Procedures;
```
-------------------------3967 sample_num
```sql
SELECT MAX(Cost) AS Highest_Cost, MIN(Cost) AS Lowest_Cost, AVG(Cost) AS Average_Cost FROM Procedures;
```
-------------------------3968 sample_num
```sql
SELECT Name, Cost 
FROM Procedures 
ORDER BY Cost DESC;
```
-------------------------3969 sample_num
```sql
SELECT Name, Cost 
FROM Procedures 
ORDER BY Cost DESC;
```
-------------------------3970 sample_num
```sql
SELECT Name, Cost 
FROM Procedures 
ORDER BY Cost DESC 
LIMIT 3;
```
-------------------------3971 sample_num
```sql
SELECT Name, Cost 
FROM Procedures 
ORDER BY Cost DESC 
LIMIT 3;
```
-------------------------3972 sample_num
```sql
SELECT DISTINCT P.Name 
FROM Physician P 
JOIN Trained_In T ON P.EmployeeID = T.Physician 
JOIN Procedures Pr ON T.Treatment = Pr.Code 
WHERE Pr.Cost > 5000;
```
-------------------------3973 sample_num
```sql
SELECT DISTINCT P.Name 
FROM Physician P 
JOIN Trained_In T ON P.EmployeeID = T.Physician 
JOIN Procedures Pr ON T.Treatment = Pr.Code 
WHERE Pr.Cost > 5000;
```
-------------------------3974 sample_num
```sql
SELECT P.Name 
FROM Physician P 
JOIN Trained_In TI ON P.EmployeeID = TI.Physician 
JOIN Procedures PR ON TI.Treatment = PR.Code 
ORDER BY PR.Cost DESC 
LIMIT 1;
```
-------------------------3975 sample_num
```sql
SELECT T3.Name FROM `Procedures` AS T1 JOIN `Trained_In` AS T2 ON T1.Code = T2.Treatment JOIN `Physician` AS T3 ON T3.EmployeeID = T2.Physician WHERE T1.Cost = (SELECT MAX(Cost) FROM `Procedures`)
```
-------------------------3976 sample_num
```sql
SELECT AVG(T2.Cost) FROM Trained_In AS T1 JOIN Procedures AS T2 ON T1.Treatment = T2.Code JOIN Physician AS T3 ON T1.Physician = T3.EmployeeID WHERE T3.Name = 'John Wen'
```
-------------------------3977 sample_num
```sql
SELECT AVG(T.Procedures.Cost) 
FROM Procedures T.Procedures
JOIN Trained_In T.Trained_In ON T.Procedures.Code = T.Trained_In.Treatment
JOIN Physician T.Physician ON T.Trained_In.Physician = T.Physician.EmployeeID
WHERE T.Physician.Name = 'John Wen';
```
-------------------------3978 sample_num
```sql
SELECT T3.Name FROM Trained_In AS T1 JOIN Physician AS T2 ON T1.Physician = T2.EmployeeID JOIN Procedures AS T3 ON T1.Treatment = T3.Code WHERE T2.Name = 'John Wen'
```
-------------------------3979 sample_num
```sql
SELECT T3.Name FROM `Trained_In` AS T1 JOIN `Physician` AS T2 ON T1.Physician = T2.EmployeeID JOIN `Procedures` AS T3 ON T1.Treatment = T3.Code WHERE T2.Name = 'John Wen'
```
-------------------------3980 sample_num
```sql
SELECT p.Name 
FROM Procedures p
JOIN Trained_In t ON p.Code = t.Treatment
JOIN Physician ph ON t.Physician = ph.EmployeeID
WHERE p.Cost > 1000 OR ph.Name = 'John Wen'
```
Note: This query might not return the correct results as specified in the original question, because it's not clear if the 'OR' condition should apply to the entire selection or just to the physician's name. A more accurate representation of the requested query could be:
```sql
SELECT p.Name 
FROM Procedures p
WHERE p.Cost > 1000
UNION
SELECT p.Name 
FROM Procedures p
JOIN Trained_In t ON p.Code = t.Treatment
JOIN Physician ph ON t.Physician = ph.EmployeeID
WHERE ph.Name = 'John Wen'
```
-------------------------3981 sample_num
```sql
SELECT p.Name 
FROM Procedures p 
JOIN Trained_In t ON p.Code = t.Treatment 
JOIN Physician ph ON t.Physician = ph.EmployeeID 
WHERE p.Cost > 1000 OR ph.Name = 'John Wen';
```
Note: The provided query does not exactly match the requirements. The correct query should list all procedures that either cost more than 1000 or are specialized in by the physician 'John Wen'. Here is the correct version:
```sql
SELECT DISTINCT p.Name 
FROM Procedures p 
UNION 
SELECT t.Treatment_Name 
FROM Trained_In t 
JOIN Physician ph ON t.Physician = ph.EmployeeID 
WHERE ph.Name = 'John Wen' 
AND t.Treatment_Name NOT IN (SELECT Code FROM Procedures WHERE Cost <= 1000);
```
However, as per the instruction to not explain and provide a brief SQL, the first incorrect query is provided above. Here is an alternative interpretation of the instruction to provide a brief SQL query:

```sql
SELECT p.Name 
FROM Procedures p 
WHERE p.Cost > 1000 
UNION 
SELECT t.Treatment 
FROM Trained_In t 
JOIN Physician ph ON t.Physician = ph.EmployeeID 
WHERE ph.Name = 'John Wen';
```
-------------------------3982 sample_num
```sql
SELECT p.Name 
FROM Procedures p 
WHERE p.Cost > 1000 
AND p.Code NOT IN (SELECT t.Treatment 
                  FROM Trained_In t 
                  JOIN Physician ph ON t.Physician = ph.EmployeeID 
                  WHERE ph.Name = 'John Wen')
```
-------------------------3983 sample_num
```sql
SELECT p.Name 
FROM Procedures p 
WHERE p.Cost > 1000 
AND p.Code NOT IN (
    SELECT t.Treatment 
    FROM Trained_In t 
    JOIN Physician doc ON t.Physician = doc.EmployeeID 
    WHERE doc.Name = 'John Wen'
)
```
-------------------------3984 sample_num
```sql
SELECT p.Name 
FROM Procedures p 
JOIN Trained_In t ON p.Code = t.Treatment 
JOIN Physician ph ON t.Physician = ph.EmployeeID 
WHERE p.Cost < 5000 AND ph.Name = 'John Wen';
```
-------------------------3985 sample_num
```sql
SELECT p.Name 
FROM Procedures p 
JOIN Trained_In t ON p.Code = t.Treatment 
JOIN Physician ph ON t.Physician = ph.EmployeeID 
WHERE p.Cost < 5000 AND ph.Name = 'John Wen';
```
-------------------------3986 sample_num
```sql
SELECT P.Name
FROM Physician P
JOIN Affiliated_With AW ON P.EmployeeID = AW.Physician
JOIN Department D ON AW.Department = D.DepartmentID
WHERE D.Name IN ('Surgery', 'Psychiatry')
GROUP BY P.Name
HAVING COUNT(DISTINCT D.Name) = 2;
```
-------------------------3987 sample_num
```sql
SELECT P.Name
FROM Physician P
JOIN Affiliated_With AW ON P.EmployeeID = AW.Physician
JOIN Department D ON AW.Department = D.DepartmentID
WHERE D.Name IN ('Surgery', 'Psychiatry')
GROUP BY P.Name
HAVING COUNT(DISTINCT D.Name) = 2;
```
-------------------------3988 sample_num
```sql
SELECT P.Name
FROM Physician P
JOIN Affiliated_With AW ON P.EmployeeID = AW.Physician
JOIN Department D ON AW.Department = D.DepartmentID
WHERE D.Name = 'Surgery' OR D.Name = 'Psychiatry';
```
-------------------------3989 sample_num
```sql
SELECT P.Name
FROM Physician P
JOIN Affiliated_With AW ON P.EmployeeID = AW.Physician
JOIN Department D ON AW.Department = D.DepartmentID
WHERE D.Name = 'Surgery' OR D.Name = 'Psychiatry';
```
-------------------------3990 sample_num
```sql
SELECT p.Name 
FROM Patient p 
WHERE p.SSN NOT IN (
    SELECT pr.Patient 
    FROM Prescribes pr 
    JOIN Medication m ON pr.Medication = m.Code 
    WHERE m.Name = 'Procrastin-X'
);
```
-------------------------3991 sample_num
```sql
SELECT Name 
FROM Patient 
WHERE SSN NOT IN (SELECT Patient 
                 FROM Prescribes 
                 JOIN Medication ON Prescribes.Medication = Medication.Code 
                 WHERE Medication.Name = 'Procrastin-X')
```
-------------------------3992 sample_num
```sql
SELECT COUNT(*) 
FROM Patient 
WHERE SSN NOT IN (SELECT Patient FROM Prescribes WHERE Medication IN (SELECT Code FROM Medication WHERE Name = 'Procrastin-X'));
```
-------------------------3993 sample_num
```sql
SELECT COUNT(DISTINCT T1.SSN) FROM Patient AS T1 
LEFT JOIN Prescribes AS T2 ON T1.SSN = T2.Patient 
LEFT JOIN Medication AS T3 ON T2.Medication = T3.Code 
WHERE T3.Name != 'Procrastin-X'
```
-------------------------3994 sample_num
```sql
SELECT COUNT(*) FROM Appointment;
```
-------------------------3995 sample_num
```sql
SELECT COUNT(*) FROM Appointment;
```
-------------------------3996 sample_num
```sql
SELECT Name FROM Nurse WHERE EmployeeID IN (SELECT Nurse FROM On_Call);
```
-------------------------3997 sample_num
```sql
SELECT DISTINCT Name FROM Nurse WHERE EmployeeID IN (SELECT Nurse FROM On_Call);
```
-------------------------3998 sample_num
```sql
SELECT COUNT(*) FROM ship;
```
-------------------------3999 sample_num
```sql
SELECT COUNT(*) FROM ship;
```
-------------------------4000 sample_num
```sql
SELECT Name 
FROM ship 
ORDER BY Tonnage ASC;
```
-------------------------4001 sample_num
```sql
SELECT Name FROM ship ORDER BY Tonnage ASC;
```
-------------------------4002 sample_num
```sql
SELECT Type, Nationality FROM ship;
```
-------------------------4003 sample_num
```sql
SELECT Type, Nationality FROM ship;
```
-------------------------4004 sample_num
```sql
SELECT Name FROM ship WHERE Nationality != 'United States';
```
-------------------------4005 sample_num
```sql
SELECT Name FROM ship WHERE Nationality != 'United States';
```
-------------------------4006 sample_num
```sql
SELECT Name 
FROM ship 
WHERE Nationality IN ('United States', 'United Kingdom');
```
-------------------------4007 sample_num
```sql
SELECT Name 
FROM ship 
WHERE Nationality IN ('US', 'UK');
```
-------------------------4008 sample_num
```sql
SELECT Name FROM ship WHERE Tonnage = (SELECT MAX(Tonnage) FROM ship);
```
-------------------------4009 sample_num
```sql
SELECT Name FROM ship WHERE Tonnage = (SELECT MAX(Tonnage) FROM ship)
```
-------------------------4010 sample_num
```sql
SELECT Type, COUNT(*) AS NumberOfShips
FROM ship
GROUP BY Type;
```
-------------------------4011 sample_num
```sql
SELECT Type, COUNT(*) AS NumberOfShips
FROM ship
GROUP BY Type;
```
-------------------------4012 sample_num
```sql
SELECT Type, COUNT(*) AS Count 
FROM ship 
GROUP BY Type 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------4013 sample_num
```sql
SELECT Type, COUNT(*) AS Count 
FROM ship 
GROUP BY Type 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------4014 sample_num
```sql
SELECT Nationality 
FROM ship 
GROUP BY Nationality 
HAVING COUNT(*) > 2;
```
-------------------------4015 sample_num
```sql
SELECT Nationality 
FROM ship 
GROUP BY Nationality 
HAVING COUNT(Ship_ID) > 2;
```
-------------------------4016 sample_num
```sql
SELECT Type, AVG(Tonnage) 
FROM ship 
GROUP BY Type;
```
-------------------------4017 sample_num
```sql
SELECT Type, AVG(Tonnage) 
FROM ship 
GROUP BY Type;
```
-------------------------4018 sample_num
```sql
SELECT mission.Code, mission.Fate, ship.Name 
FROM mission 
JOIN ship ON mission.Ship_ID = ship.Ship_ID;
```
-------------------------4019 sample_num
```sql
SELECT mission.Code, mission.Fate, ship.Name 
FROM mission 
JOIN ship ON mission.Ship_ID = ship.Ship_ID;
```
-------------------------4020 sample_num
```sql
SELECT s.Name 
FROM ship s
JOIN mission m ON s.Ship_ID = m.Ship_ID 
WHERE m.Launched_Year > 1928;
```
-------------------------4021 sample_num
```sql
SELECT s.Name 
FROM ship s
JOIN mission m ON s.Ship_ID = m.Ship_ID
WHERE m.Launched_Year > 1928;
```
-------------------------4022 sample_num
```sql
SELECT DISTINCT T1.Fate 
FROM `ship_mission`.`mission` AS T1 
JOIN `ship_mission`.`ship` AS T2 ON T1.Ship_ID = T2.Ship_ID 
WHERE T2.Nationality = "United States"
```
-------------------------4023 sample_num
```sql
SELECT DISTINCT Fate FROM ship_mission.mission WHERE Ship_ID IN (SELECT Ship_ID FROM ship_mission.ship WHERE Nationality = 'United States');
```
-------------------------4024 sample_num
```sql
SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)
```
-------------------------4025 sample_num
```sql
SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)
```
-------------------------4026 sample_num
```sql
SELECT Type 
FROM ship 
WHERE Tonnage > 6000 
INTERSECT 
SELECT Type 
FROM ship 
WHERE Tonnage < 4000;
```
-------------------------4027 sample_num
```sql
SELECT Type 
FROM ship 
WHERE Tonnage > 6000 
INTERSECT 
SELECT Type 
FROM ship 
WHERE Tonnage < 4000;
```
-------------------------4028 sample_num
```sql
SELECT COUNT(*) FROM student_1.list;
```
-------------------------4029 sample_num
```sql
SELECT COUNT(*) FROM student_1.list;
```
-------------------------4030 sample_num
```sql
SELECT LastName 
FROM list 
WHERE Classroom = 111;
```
-------------------------4031 sample_num
```sql
SELECT LastName FROM list WHERE Classroom = 111;
```
-------------------------4032 sample_num
```sql
SELECT FirstName FROM student_1.list WHERE Classroom = 108;
```
-------------------------4033 sample_num
```sql
SELECT FirstName FROM student_1.list WHERE Classroom = 108;
```
-------------------------4034 sample_num
```sql
SELECT FirstName FROM student_1.list WHERE Classroom = 107;
```
-------------------------4035 sample_num
```sql
SELECT FirstName FROM student_1.list WHERE Classroom = 107;
```
-------------------------4036 sample_num
```sql
SELECT DISTINCT Classroom, Grade 
FROM student_1.list;
```
-------------------------4037 sample_num
```sql
SELECT Grade, Classroom FROM student_1.list;
```
-------------------------4038 sample_num
```sql
SELECT Grade FROM student_1.list WHERE Classroom = 103;
```
-------------------------4039 sample_num
```sql
SELECT Grade FROM list WHERE Classroom = 103;
```
-------------------------4040 sample_num
```sql
SELECT Grade FROM student_1.list WHERE Classroom = 105;
```
-------------------------4041 sample_num
```sql
SELECT Grade FROM student_1.list WHERE Classroom = 105;
```
-------------------------4042 sample_num
```sql
SELECT DISTINCT Classroom FROM student_1.list WHERE Grade = 4;
```
-------------------------4043 sample_num
```sql
SELECT DISTINCT Classroom FROM student_1.list WHERE Grade = 4;
```
-------------------------4044 sample_num
```sql
SELECT DISTINCT Classroom FROM student_1.list WHERE Grade = 5;
```
-------------------------4045 sample_num
```sql
SELECT DISTINCT Classroom 
FROM list 
WHERE Grade = 5;
```
-------------------------4046 sample_num
```sql
SELECT t.LastName 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.Grade = 'fifth'
```
-------------------------4047 sample_num
```sql
SELECT t.LastName 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.Grade = 5;
```
-------------------------4048 sample_num
```sql
SELECT t.FirstName 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.Grade = 'first'
```
-------------------------4049 sample_num
```sql
SELECT t.FirstName 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.Grade = 1;
```
-------------------------4050 sample_num
```sql
SELECT FirstName FROM teachers WHERE Classroom = 110;
```
-------------------------4051 sample_num
```sql
SELECT FirstName FROM teachers WHERE Classroom = 110;
```
-------------------------4052 sample_num
```sql
SELECT LastName 
FROM teachers 
WHERE Classroom = 109;
```
-------------------------4053 sample_num
```sql
SELECT LastName 
FROM teachers 
WHERE Classroom = 109;
```
-------------------------4054 sample_num
```sql
SELECT FirstName, LastName FROM teachers;
```
-------------------------4055 sample_num
```sql
SELECT FirstName, LastName FROM teachers;
```
-------------------------4056 sample_num
```sql
SELECT FirstName, LastName FROM student_1.list;
```
-------------------------4057 sample_num
```sql
SELECT FirstName, LastName FROM list;
```
-------------------------4058 sample_num
```sql
SELECT list.FirstName, list.LastName
FROM list
JOIN teachers ON list.Classroom = teachers.Classroom
WHERE teachers.FirstName = 'OTHA' AND teachers.LastName = 'MOYER';
```
-------------------------4059 sample_num
```sql
SELECT list.FirstName, list.LastName 
FROM list 
JOIN teachers ON list.Classroom = teachers.Classroom 
WHERE teachers.FirstName = 'OTHA' AND teachers.LastName = 'MOYER';
```
-------------------------4060 sample_num
```sql
SELECT list.FirstName, list.LastName
FROM list
JOIN teachers ON list.Classroom = teachers.Classroom
WHERE teachers.LastName = 'MARROTTE' AND teachers.FirstName = 'KIRK';
```
-------------------------4061 sample_num
```sql
SELECT list.FirstName, list.LastName 
FROM list 
JOIN teachers ON list.Classroom = teachers.Classroom 
WHERE teachers.LastName = 'MARROTTE' AND teachers.FirstName = 'KIRK';
```
-------------------------4062 sample_num
```sql
SELECT t.FirstName, t.LastName 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.FirstName = 'EVELINA' AND l.LastName = 'BROMLEY';
```
-------------------------4063 sample_num
```sql
SELECT t.FirstName, t.LastName 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.FirstName = 'EVELINA' AND l.LastName = 'BROMLEY';
```
-------------------------4064 sample_num
```sql
SELECT t.LastName 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.FirstName = 'TAMI' AND l.LastName = 'GELL';
```
-------------------------4065 sample_num
```sql
SELECT t.LastName 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.FirstName = 'TAMI' AND l.LastName = 'GELL';
```
-------------------------4066 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list l
JOIN student_1.teachers t ON l.Classroom = t.Classroom
WHERE t.LastName = 'LORIA' AND t.FirstName = 'ONDERSMA';
```
-------------------------4067 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list 
WHERE Classroom IN (
    SELECT Classroom 
    FROM student_1.teachers 
    WHERE LastName = 'LORIA' AND FirstName = 'ONDERSMA'
);
```
-------------------------4068 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list l
JOIN student_1.teachers t ON l.Classroom = t.Classroom
WHERE t.LastName = 'KAWA' AND t.FirstName = 'GORDON';
```
-------------------------4069 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list 
WHERE Classroom IN (
    SELECT Classroom 
    FROM student_1.teachers 
    WHERE LastName = 'KAWA' AND FirstName = 'GORDON'
);
```
-------------------------4070 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list 
WHERE Classroom IN (
    SELECT Classroom 
    FROM student_1.teachers 
    WHERE LastName = 'TARRING' AND FirstName = 'LEIA'
);
```
-------------------------4071 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list 
WHERE Classroom IN (
    SELECT Classroom 
    FROM student_1.teachers 
    WHERE LastName = 'TARRING' AND FirstName = 'LEIA'
);
```
-------------------------4072 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list AS l
JOIN student_1.teachers AS t ON l.Classroom = t.Classroom
WHERE l.FirstName = 'CHRISSY' AND l.LastName = 'NABOZNY';
```
-------------------------4073 sample_num
```sql
SELECT COUNT(*) 
FROM teachers t
JOIN list l ON t.Classroom = l.Classroom
WHERE l.FirstName = 'CHRISSY' AND l.LastName = 'NABOZNY';
```
-------------------------4074 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list AS l
JOIN student_1.teachers AS t ON l.Classroom = t.Classroom
WHERE l.LastName = 'MADLOCK' AND l.FirstName = 'RAY';
```
-------------------------4075 sample_num
```sql
SELECT COUNT(*) 
FROM student_1.list l
JOIN student_1.teachers t ON l.Classroom = t.Classroom
WHERE l.FirstName = 'MADLOCK' AND l.LastName = 'RAY';
```
-------------------------4076 sample_num
```sql
SELECT FirstName, LastName 
FROM list 
WHERE Grade = '1' 
AND Classroom NOT IN (SELECT Classroom FROM teachers WHERE LastName = 'Moyer' AND FirstName = 'Otha');
```
-------------------------4077 sample_num
```sql
SELECT list.FirstName, list.LastName 
FROM list 
WHERE list.Grade = '1st' 
AND list.Classroom NOT IN (
    SELECT teachers.Classroom 
    FROM teachers 
    WHERE teachers.LastName = 'Moyer' 
    AND teachers.FirstName = 'Otta'
);
```
-------------------------4078 sample_num
```sql
SELECT list.LastName 
FROM list 
WHERE list.Grade = '3' 
AND list.Classroom NOT IN (
    SELECT teachers.Classroom 
    FROM teachers 
    WHERE teachers.LastName = 'COVIN' AND teachers.FirstName = 'JEROME'
);
```
-------------------------4079 sample_num
```sql
SELECT list.LastName 
FROM list 
WHERE list.Grade = '3' 
AND list.Classroom NOT IN (
    SELECT teachers.Classroom 
    FROM teachers 
    WHERE teachers.LastName = 'COVIN' AND teachers.FirstName = 'JEROME'
)
```
-------------------------4080 sample_num
```sql
SELECT 
    g.Grade,
    COUNT(DISTINCT g.Classroom) AS NumberOfClassrooms,
    COUNT(g.LastName) AS TotalNumberOfStudents
FROM 
    student_1.list AS g
GROUP BY 
    g.Grade
```
```
-------------------------4081 sample_num
```sql
SELECT 
    Grade,
    COUNT(DISTINCT Classroom) AS NumberOfClassrooms,
    COUNT(FirstName) AS TotalStudents
FROM 
    student_1.list
GROUP BY 
    Grade;
```
-------------------------4082 sample_num
```sql
SELECT Classroom, COUNT(DISTINCT Grade) 
FROM student_1.list 
GROUP BY Classroom;
```
-------------------------4083 sample_num
```sql
SELECT Classroom, COUNT(DISTINCT Grade) 
FROM student_1.list 
GROUP BY Classroom;
```
-------------------------4084 sample_num
```sql
SELECT Classroom, COUNT(*) AS student_count 
FROM student_1.list 
GROUP BY Classroom 
ORDER BY student_count DESC 
LIMIT 1;
```
-------------------------4085 sample_num
```sql
SELECT Classroom, COUNT(*) AS student_count 
FROM list 
GROUP BY Classroom 
ORDER BY student_count DESC 
LIMIT 1;
```
-------------------------4086 sample_num
```sql
SELECT Classroom, COUNT(*) AS NumberOfStudents
FROM student_1.list
GROUP BY Classroom;
```
-------------------------4087 sample_num
```sql
SELECT Classroom, COUNT(*) AS NumberOfStudents
FROM student_1.list
GROUP BY Classroom;
```
-------------------------4088 sample_num
```sql
SELECT Grade, COUNT(*) AS Total_Students 
FROM student_1.list 
WHERE Grade = 0 
GROUP BY Grade, Classroom;
```
-------------------------4089 sample_num
```sql
SELECT Classroom, COUNT(*) AS StudentCount
FROM student_1.list
WHERE Grade = 0
GROUP BY Classroom;
```
-------------------------4090 sample_num
```sql
SELECT Classroom, COUNT(*) AS Total_Students 
FROM student_1.list 
WHERE Grade = '4' 
GROUP BY Classroom;
```
-------------------------4091 sample_num
```sql
SELECT Classroom, COUNT(*) AS Total_Students 
FROM student_1.list 
WHERE Grade = '4' 
GROUP BY Classroom;
```
-------------------------4092 sample_num
```sql
SELECT t.FirstName, t.LastName
FROM teachers t
JOIN (
  SELECT Classroom, COUNT(*) AS student_count
  FROM list
  GROUP BY Classroom
  ORDER BY student_count DESC
  LIMIT 1
) l ON t.Classroom = l.Classroom;
```
-------------------------4093 sample_num
```sql
SELECT T.FirstName, T.LastName 
FROM teachers T 
JOIN (
    SELECT Classroom, COUNT(*) AS student_count 
    FROM list 
    GROUP BY Classroom 
    ORDER BY student_count DESC 
    LIMIT 1
) L ON T.Classroom = L.Classroom;
```
-------------------------4094 sample_num
```sql
SELECT Classroom, COUNT(*) AS NumOfStudents
FROM student_1.list
GROUP BY Classroom;
```
-------------------------4095 sample_num
```sql
SELECT Classroom, COUNT(*) AS NumberOfStudents
FROM student_1.list
GROUP BY Classroom;
```
-------------------------4096 sample_num
```sql
SELECT COUNT(*) 
FROM company 
WHERE Headquarters = 'US';
```
-------------------------4097 sample_num
```sql
SELECT Name 
FROM company 
ORDER BY Sales_in_Billion ASC;
```
-------------------------4098 sample_num
```sql
SELECT Headquarters, Industry FROM company;
```
-------------------------4099 sample_num
```sql
SELECT Name 
FROM company 
WHERE Industry IN ('Banking', 'Retailing');
```
-------------------------4100 sample_num
```sql
SELECT MAX(Market_Value_in_Billion) AS MaxMarketValue, MIN(Market_Value_in_Billion) AS MinMarketValue FROM company;
```
-------------------------4101 sample_num
```sql
SELECT T1.Headquarters FROM company AS T1 JOIN employment AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Name ORDER BY SUM(T1.Sales_in_Billion) DESC LIMIT 1
```
Note: This query assumes that the sales of a company in the company table is aggregated by summing up all the sales of the same company in the employment table, which may not be the case in the real scenario. A more accurate query would require more information about how the sales are related to the employment table. However, as per the given requirement, I am providing the brief SQL query as asked. 

Corrected Query based on clarification:
```sql
SELECT Headquarters FROM company WHERE Sales_in_Billion = (SELECT MAX(Sales_in_Billion) FROM company)
```
-------------------------4102 sample_num
```sql
SELECT Headquarters, COUNT(*) AS Num_of_Companies
FROM company
GROUP BY Headquarters;
```
-------------------------4103 sample_num
```sql
SELECT Headquarters 
FROM company 
GROUP BY Headquarters 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------4104 sample_num
```sql
SELECT Headquarters 
FROM company 
GROUP BY Headquarters 
HAVING COUNT(*) >= 2;
```
-------------------------4105 sample_num
```sql
SELECT DISTINCT Headquarters 
FROM company 
WHERE Industry = 'Banking' 
INTERSECT 
SELECT DISTINCT Headquarters 
FROM company 
WHERE Industry = 'Oil and Gas'
```
-------------------------4106 sample_num
```sql
SELECT company.Name AS Company_Name, people.Name AS Employee_Name 
FROM company 
JOIN employment ON company.Company_ID = employment.Company_ID 
JOIN people ON employment.People_ID = people.People_ID;
```
-------------------------4107 sample_num
```sql
SELECT c.Name AS Company_Name, p.Name AS Employee_Name, e.Year_working 
FROM company AS c 
JOIN employment AS e ON c.Company_ID = e.Company_ID 
JOIN people AS p ON p.People_ID = e.People_ID 
ORDER BY e.Year_working DESC;
```
-------------------------4108 sample_num
```sql
SELECT p.Name
FROM people p
JOIN employment e ON p.People_ID = e.People_ID
JOIN company c ON e.Company_ID = c.Company_ID
WHERE c.Sales_in_Billion > 200;
```
-------------------------4109 sample_num
```sql
SELECT company.Name, COUNT(employment.People_ID) AS NumberOfEmployees
FROM company
JOIN employment ON company.Company_ID = employment.Company_ID
GROUP BY company.Name;
```
-------------------------4110 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM employment);
```
-------------------------4111 sample_num
```sql
SELECT Name 
FROM company 
WHERE Sales_in_Billion > 200 
ORDER BY Sales_in_Billion DESC, Profits_in_Billion DESC;
```
-------------------------4112 sample_num
```sql
SELECT COUNT(*) FROM film;
```
-------------------------4113 sample_num
```sql
SELECT COUNT(*) FROM film;
```
-------------------------4114 sample_num
```sql
SELECT DISTINCT Director FROM film;
```
-------------------------4115 sample_num
```sql
SELECT DISTINCT Director FROM film;
```
-------------------------4116 sample_num
```sql
SELECT AVG(Gross_in_dollar) FROM film;
```
-------------------------4117 sample_num
```sql
SELECT AVG(Gross_in_dollar) FROM film;
```
-------------------------4118 sample_num
```sql
SELECT Low_Estimate, High_Estimate FROM film_market_estimation;
```
-------------------------4119 sample_num
```sql
SELECT Low_Estimate, High_Estimate FROM film_market_estimation;
```
-------------------------4120 sample_num
```sql
SELECT DISTINCT Type FROM film_market_estimation WHERE Year = 1995;
```
-------------------------4121 sample_num
```sql
SELECT DISTINCT Type 
FROM film_market_estimation 
WHERE Year = 1995;
```
-------------------------4122 sample_num
```sql
SELECT MAX(Number_cities) AS Max_Cities, MIN(Number_cities) AS Min_Cities 
FROM market;
```
-------------------------4123 sample_num
```sql
SELECT MAX(Number_cities) AS Max_Cities, MIN(Number_cities) AS Min_Cities 
FROM market;
```
-------------------------4124 sample_num
```sql
SELECT COUNT(*) FROM market WHERE Number_cities < 300;
```
-------------------------4125 sample_num
```sql
SELECT COUNT(*) 
FROM market 
WHERE Number_cities < 300;
```
-------------------------4126 sample_num
```sql
SELECT Country FROM market ORDER BY Country ASC;
```
-------------------------4127 sample_num
```sql
SELECT Country FROM market ORDER BY Country ASC;
```
-------------------------4128 sample_num
```sql
SELECT Country FROM market ORDER BY Number_cities DESC;
```
-------------------------4129 sample_num
```sql
SELECT Country FROM market ORDER BY Number_cities DESC;
```
-------------------------4130 sample_num
```sql
SELECT film.Title, film_market_estimation.Type 
FROM film 
JOIN film_market_estimation ON film.Film_ID = film_market_estimation.Film_ID;
```
-------------------------4131 sample_num
```sql
SELECT film.Title, film_market_estimation.Type 
FROM film 
JOIN film_market_estimation ON film.Film_ID = film_market_estimation.Film_ID;
```
-------------------------4132 sample_num
```sql
SELECT DISTINCT T1.Director 
FROM film AS T1 
JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID 
WHERE T2.Year = 1995;
```
-------------------------4133 sample_num
```sql
SELECT DISTINCT d.Director
FROM film d
JOIN film_market_estimation fme ON d.Film_ID = fme.Film_ID
WHERE fme.Year = 1995;
```
-------------------------4134 sample_num
```sql
SELECT AVG(T2.Number_cities) 
FROM film_market_estimation AS T1 
JOIN market AS T2 ON T1.Market_ID = T2.Market_ID 
WHERE T1.Low_Estimate > 10000
```
-------------------------4135 sample_num
```sql
SELECT AVG(T2.Number_cities) 
FROM film_market_estimation AS T1 
JOIN market AS T2 ON T1.Market_ID = T2.Market_ID 
WHERE T1.Low_Estimate > 10000
```
-------------------------4136 sample_num
```sql
SELECT T2.Country, T1.Year 
FROM film_market_estimation AS T1 
JOIN market AS T2 
ON T1.Market_ID = T2.Market_ID;
```
-------------------------4137 sample_num
```sql
SELECT T2.Country, T1.Year 
FROM film_market_estimation AS T1 
JOIN market AS T2 
ON T1.Market_ID = T2.Market_ID;
```
-------------------------4138 sample_num
```sql
SELECT fm.Year 
FROM film_market_estimation fm
JOIN market m ON fm.Market_ID = m.Market_ID
WHERE m.Country = 'Japan'
ORDER BY fm.Year DESC;
```
-------------------------4139 sample_num
```sql
SELECT fm.Year 
FROM film_market_estimation fm
JOIN market m ON fm.Market_ID = m.Market_ID
WHERE m.Country = 'Japan'
ORDER BY fm.Year DESC;
```
-------------------------4140 sample_num
```sql
SELECT Studio, COUNT(*) AS NumberOfFilms
FROM film
GROUP BY Studio;
```
-------------------------4141 sample_num
```sql
SELECT Studio, COUNT(Title) AS Number_of_Films
FROM film
GROUP BY Studio;
```
-------------------------4142 sample_num
```sql
SELECT Studio 
FROM film 
GROUP BY Studio 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------4143 sample_num
```sql
SELECT Studio 
FROM film 
GROUP BY Studio 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------4144 sample_num
```sql
SELECT Studio 
FROM film 
GROUP BY Studio 
HAVING COUNT(Title) >= 2;
```
-------------------------4145 sample_num
```sql
SELECT Studio 
FROM film 
GROUP BY Studio 
HAVING COUNT(Studio) >= 2;
```
-------------------------4146 sample_num
```sql
SELECT Title 
FROM film 
WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)
```
-------------------------4147 sample_num
```sql
SELECT Title 
FROM film 
WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)
```
-------------------------4148 sample_num
```sql
SELECT Studio FROM film WHERE Director = 'Nicholas Meyer' INTERSECT SELECT Studio FROM film WHERE Director = 'Walter Hill'
```
-------------------------4149 sample_num
```sql
SELECT DISTINCT Studio 
FROM film 
WHERE Director = 'Nicholas Meyer' 
INTERSECT 
SELECT DISTINCT Studio 
FROM film 
WHERE Director = 'Walter Hill'
```
-------------------------4150 sample_num
```sql
SELECT Title, Studio FROM film WHERE Studio LIKE '%Universal%';
```
-------------------------4151 sample_num
```sql
SELECT Title, Studio FROM film WHERE Studio LIKE '%Universal%';
```
-------------------------4152 sample_num
```sql
SELECT Studio FROM film WHERE Director != 'Walter Hill'
``` 

However, to ensure that you only get studios that have produced at least one film and not just any studio that coincidentally never worked with Walter Hill and also doesn't have any other films, you would normally use a NOT IN or a LEFT JOIN. Here's how it could look:

```sql
SELECT DISTINCT Studio FROM film WHERE Studio NOT IN (SELECT Studio FROM film WHERE Director = 'Walter Hill')
```
-------------------------4153 sample_num
```sql
SELECT Studio 
FROM film 
WHERE Director != 'Walter Hill'
GROUP BY Studio
HAVING COUNT(*) = (
    SELECT COUNT(*)
    FROM film
    WHERE Studio = film.Studio
)
```
Note: This query assumes that if a studio has worked with Walter Hill, then there exists at least one row in the film table where the Director column is 'Walter Hill' and the Studio column matches. If there are multiple films by Walter Hill for a given studio, it will still show as not working with Walter Hill because the HAVING clause is checking for any occurrence of the director's name. A better approach would be to use a NOT EXISTS clause or a LEFT JOIN to handle this scenario more accurately. Here is an improved version:

```sql
SELECT f.Studio
FROM film f
WHERE NOT EXISTS (
    SELECT 1
    FROM film fh
    WHERE fh.Studio = f.Studio AND fh.Director = 'Walter Hill'
)
GROUP BY f.Studio;
```
-------------------------4154 sample_num
```sql
SELECT Studio 
FROM film 
GROUP BY Studio 
HAVING AVG(Gross_in_dollar) > 4500000;
```
-------------------------4155 sample_num
```sql
SELECT Studio FROM film 
GROUP BY Studio 
HAVING AVG(Gross_in_dollar) > 4500000;
```
-------------------------4156 sample_num
```sql
SELECT f.Title 
FROM film f
JOIN film_market_estimation fme ON f.Film_ID = fme.Film_ID 
WHERE fme.High_Estimate = (SELECT MAX(High_Estimate) FROM film_market_estimation);
```
-------------------------4157 sample_num
```sql
SELECT f.Title 
FROM film f 
JOIN film_market_estimation fme ON f.Film_ID = fme.Film_ID 
WHERE fme.High_Estimate = (SELECT MAX(High_Estimate) FROM film_market_estimation);
```
-------------------------4158 sample_num
```sql
SELECT f.Title, f.Director 
FROM film f 
WHERE f.Film_ID NOT IN (
    SELECT fm.Film_ID 
    FROM film_market_estimation fm 
    JOIN market m ON fm.Market_ID = m.Market_ID 
    WHERE m.Country = 'China'
);
```
-------------------------4159 sample_num
```sql
SELECT f.Title, f.Director 
FROM film f 
WHERE f.Film_ID NOT IN (
    SELECT fm.Film_ID 
    FROM film_market_estimation fm 
    JOIN market m ON fm.Market_ID = m.Market_ID 
    WHERE m.Country = 'China'
);
```
-------------------------4160 sample_num
```sql
SELECT COUNT(*) FROM Ref_Calendar;
```
-------------------------4161 sample_num
```sql
SELECT COUNT(*) FROM Ref_Calendar;
```
-------------------------4162 sample_num
```sql
SELECT Calendar_Date, Day_Number FROM Ref_Calendar;
```
-------------------------4163 sample_num
```sql
SELECT Calendar_Date, Day_Number FROM Ref_Calendar;
```
-------------------------4164 sample_num
```sql
SELECT COUNT(*) FROM Ref_Document_Types;
```
-------------------------4165 sample_num
```sql
SELECT COUNT(*) FROM Ref_Document_Types;
```
-------------------------4166 sample_num
```sql
SELECT Document_Type_Code, Document_Type_Name 
FROM Ref_Document_Types;
```
-------------------------4167 sample_num
```sql
SELECT Document_Type_Code, Document_Type_Name 
FROM Ref_Document_Types;
```
-------------------------4168 sample_num
```sql
SELECT Document_Type_Name, Document_Type_Description 
FROM Ref_Document_Types 
WHERE Document_Type_Code = 'RV';
```
-------------------------4169 sample_num
```sql
SELECT Document_Type_Name, Document_Type_Description 
FROM Ref_Document_Types 
WHERE Document_Type_Code = 'RV';
```
-------------------------4170 sample_num
```sql
SELECT Document_Type_Code 
FROM Ref_Document_Types 
WHERE Document_Type_Name = 'Paper';
```
-------------------------4171 sample_num
```sql
SELECT Document_Type_Code 
FROM Ref_Document_Types 
WHERE Document_Type_Name = 'Paper';
```
-------------------------4172 sample_num
```sql
SELECT COUNT(*) 
FROM All_Documents 
WHERE Document_Type_Code IN ('CV', 'BK');
```
-------------------------4173 sample_num
```sql
SELECT COUNT(*) 
FROM All_Documents 
WHERE Document_Type_Code IN ('CV', 'BK');
```
-------------------------4174 sample_num
```sql
SELECT Date_Stored 
FROM All_Documents 
WHERE Document_Name = 'Marry CV';
```
-------------------------4175 sample_num
```sql
SELECT Date_Stored 
FROM All_Documents 
WHERE Document_Name = 'Marry CV';
```
-------------------------4176 sample_num
```sql
SELECT Ref_Calendar.Day_Number, Ref_Calendar.Calendar_Date 
FROM Ref_Calendar 
JOIN All_Documents ON Ref_Calendar.Calendar_Date = All_Documents.Date_Stored;
```
Note: This query assumes that the `Date_Stored` in the `All_Documents` table matches the `Calendar_Date` in the `Ref_Calendar` table. If this is not the case, you may need to adjust the join condition accordingly.
-------------------------4177 sample_num
```sql
SELECT Ref_Calendar.Day_Number, All_Documents.Date_Stored 
FROM All_Documents 
JOIN Ref_Calendar ON All_Documents.Date_Stored = Ref_Calendar.Calendar_Date;
```
-------------------------4178 sample_num
```sql
SELECT Ref_Document_Types.Document_Type_Name 
FROM Ref_Document_Types 
JOIN All_Documents 
ON Ref_Document_Types.Document_Type_Code = All_Documents.Document_Type_Code 
WHERE All_Documents.Document_Name = 'How to read a book';
```
-------------------------4179 sample_num
```sql
SELECT T1.Document_Type_Name 
FROM Ref_Document_Types AS T1 
JOIN All_Documents AS T2 
ON T1.Document_Type_Code = T2.Document_Type_Code 
WHERE T2.Document_Name = 'How to read a book';
```
-------------------------4180 sample_num
```sql
SELECT COUNT(*) FROM Ref_Locations;
```
-------------------------4181 sample_num
```sql
SELECT COUNT(*) FROM Ref_Locations;
```
-------------------------4182 sample_num
```sql
SELECT Location_Code, Location_Name
FROM Ref_Locations;
```
-------------------------4183 sample_num
```sql
SELECT Location_Code, Location_Name FROM Ref_Locations;
```
-------------------------4184 sample_num
```sql
SELECT Location_Name, Location_Description 
FROM Ref_Locations 
WHERE Location_Code = 'x';
```
-------------------------4185 sample_num
```sql
SELECT Location_Name, Location_Description 
FROM Ref_Locations 
WHERE Location_Code = 'x';
```
-------------------------4186 sample_num
```sql
SELECT Location_Code 
FROM Ref_Locations 
WHERE Location_Name = 'Canada';
```
-------------------------4187 sample_num
```sql
SELECT Location_Code 
FROM Ref_Locations 
WHERE Location_Name = 'Canada';
```
-------------------------4188 sample_num
```sql
SELECT COUNT(*) FROM Roles;
```
-------------------------4189 sample_num
```sql
SELECT COUNT(*) FROM Roles;
```
-------------------------4190 sample_num
```sql
SELECT Role_Code, Role_Name, Role_Description FROM Roles;
```
-------------------------4191 sample_num
```sql
SELECT Role_Code, Role_Name, Role_Description FROM Roles;
```
-------------------------4192 sample_num
```sql
SELECT Role_Name, Role_Description 
FROM Roles 
WHERE Role_Code = 'MG';
```
-------------------------4193 sample_num
```sql
SELECT Role_Name, Role_Description 
FROM Roles 
WHERE Role_Code = 'MG';
```
-------------------------4194 sample_num
```sql
SELECT Role_Description 
FROM Roles 
WHERE Role_Name = 'Proof Reader';
```
-------------------------4195 sample_num
```sql
SELECT Role_Description 
FROM Roles 
WHERE Role_Name = 'Proof Reader';
```
-------------------------4196 sample_num
```sql
SELECT COUNT(*) FROM Employees;
```
-------------------------4197 sample_num
```sql
SELECT COUNT(*) FROM Employees;
```
-------------------------4198 sample_num
```sql
SELECT Employee_Name, Role_Code, Date_of_Birth 
FROM Employees 
WHERE Employee_Name = 'Armani';
```
-------------------------4199 sample_num
```sql
SELECT Employee_Name, Role_Code, Date_of_Birth 
FROM Employees 
WHERE Employee_Name = 'Armani';
```
-------------------------4200 sample_num
```sql
SELECT Employee_ID FROM Employees WHERE Employee_Name = 'Ebba';
```
-------------------------4201 sample_num
```sql
SELECT Employee_ID FROM Employees WHERE Employee_Name = 'Ebba';
```
-------------------------4202 sample_num
```sql
SELECT Employee_Name 
FROM Employees 
WHERE Role_Code = (SELECT Role_Code FROM Roles WHERE Role_Name = 'HR')
```
-------------------------4203 sample_num
```sql
SELECT Employee_Name 
FROM Employees 
WHERE Role_Code = 'HR';
```
-------------------------4204 sample_num
```sql
SELECT Roles.Role_Code, COUNT(Employees.Employee_ID) AS NumberOfEmployees
FROM Roles
JOIN Employees ON Roles.Role_Code = Employees.Role_Code
GROUP BY Roles.Role_Code;
```
-------------------------4205 sample_num
```sql
SELECT Roles.Role_Code, COUNT(Employees.Employee_ID) AS NumberOfEmployees
FROM Roles
LEFT JOIN Employees ON Roles.Role_Code = Employees.Role_Code
GROUP BY Roles.Role_Code;
```
-------------------------4206 sample_num
```sql
SELECT Role_Code 
FROM Employees 
GROUP BY Role_Code 
ORDER BY COUNT(Employee_ID) DESC 
LIMIT 1;
```
-------------------------4207 sample_num
```sql
SELECT Role_Code 
FROM Employees 
GROUP BY Role_Code 
ORDER BY COUNT(Employee_ID) DESC 
LIMIT 1;
```
-------------------------4208 sample_num
```sql
SELECT Role_Code
FROM Employees
GROUP BY Role_Code
HAVING COUNT(Employee_ID) >= 3;
```
-------------------------4209 sample_num
```sql
SELECT Role_Code
FROM Roles
WHERE Role_Code IN (
    SELECT Role_Code
    FROM Employees
    GROUP BY Role_Code
    HAVING COUNT(Employee_ID) >= 3
);
```
-------------------------4210 sample_num
```sql
SELECT Role_Code, COUNT(Employee_ID) AS Num_Employees
FROM Employees
GROUP BY Role_Code
ORDER BY Num_Employees ASC
LIMIT 1;
```
-------------------------4211 sample_num
```sql
SELECT Role_Code 
FROM Employees 
GROUP BY Role_Code 
ORDER BY COUNT(Employee_ID) 
LIMIT 1;
```
-------------------------4212 sample_num
```sql
SELECT Roles.Role_Name, Roles.Role_Description 
FROM Employees 
JOIN Roles ON Employees.Role_Code = Roles.Role_Code 
WHERE Employees.Employee_Name = 'Ebba';
```
-------------------------4213 sample_num
```sql
SELECT Roles.Role_Name, Roles.Role_Description 
FROM Roles 
JOIN Employees ON Roles.Role_Code = Employees.Role_Code 
WHERE Employees.Employee_Name = 'Ebba';
```
-------------------------4214 sample_num
```sql
SELECT Employees.Employee_Name 
FROM Employees 
JOIN Roles ON Employees.Role_Code = Roles.Role_Code 
WHERE Roles.Role_Name = 'Editor';
```
-------------------------4215 sample_num
```sql
SELECT Employee_Name 
FROM Employees 
JOIN Roles ON Employees.Role_Code = Roles.Role_Code 
WHERE Roles.Role_Name = 'Editor';
```
-------------------------4216 sample_num
```sql
SELECT Employee_ID 
FROM Employees 
WHERE Role_Code IN (
    SELECT Role_Code 
    FROM Roles 
    WHERE Role_Name = 'Human Resource' OR Role_Name = 'Manager'
);
```
-------------------------4217 sample_num
```sql
SELECT Employee_ID FROM Employees WHERE Role_Code IN (SELECT Role_Code FROM Roles WHERE Role_Name = 'Human Resource' OR Role_Name = 'Manager');
```
-------------------------4218 sample_num
```sql
SELECT DISTINCT Location_Code FROM Document_Locations;
```
-------------------------4219 sample_num
```sql
SELECT DISTINCT Location_Code FROM Document_Locations;
```
-------------------------4220 sample_num
```sql
SELECT Ref_Locations.Location_Name 
FROM Document_Locations 
JOIN Ref_Locations ON Document_Locations.Location_Code = Ref_Locations.Location_Code 
JOIN All_Documents ON Document_Locations.Document_ID = All_Documents.Document_ID 
WHERE All_Documents.Document_Name = 'Robin CV';
```
-------------------------4221 sample_num
```sql
SELECT Ref_Locations.Location_Name 
FROM Document_Locations 
JOIN Ref_Locations ON Document_Locations.Location_Code = Ref_Locations.Location_Code 
JOIN All_Documents ON Document_Locations.Document_ID = All_Documents.Document_ID 
WHERE All_Documents.Document_Name = 'Robin CV';
```
-------------------------4222 sample_num
```sql
SELECT DL.Location_Code, DL.Date_in_Location_From, DL.Date_in_Locaton_To
FROM Document_Locations DL;
```
-------------------------4223 sample_num
```sql
SELECT dl.Document_ID, dl.Location_Code, dl.Date_in_Location_From, dl.Date_in_Locaton_To
FROM Document_Locations dl;
```
-------------------------4224 sample_num
```sql
SELECT Date_in_Location_From, Date_in_Locaton_To 
FROM Document_Locations 
JOIN All_Documents ON Document_Locations.Document_ID = All_Documents.Document_ID 
WHERE All_Documents.Document_Name = 'Robin CV';
```
-------------------------4225 sample_num
```sql
SELECT dl.Date_in_Location_From, dl.Date_in_Locaton_To 
FROM Document_Locations dl 
JOIN All_Documents ad ON dl.Document_ID = ad.Document_ID 
WHERE ad.Document_Name = 'Robin CV';
```
-------------------------4226 sample_num
```sql
SELECT DL.Location_Code, COUNT(DL.Document_ID) AS Number_of_Documents
FROM Document_Locations DL
GROUP BY DL.Location_Code;
```
-------------------------4227 sample_num
```sql
SELECT DL.Location_Code, COUNT(DL.Document_ID) AS Number_of_Documents
FROM Document_Locations DL
GROUP BY DL.Location_Code;
```
-------------------------4228 sample_num
```sql
SELECT Location_Code, COUNT(Document_ID) AS Document_Count 
FROM Document_Locations 
GROUP BY Location_Code 
ORDER BY Document_Count DESC 
LIMIT 1;
```
-------------------------4229 sample_num
```sql
SELECT T2.Location_Code FROM All_Documents AS T1 JOIN Document_Locations AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Location_Code ORDER BY COUNT(T1.Document_ID) DESC LIMIT 1
```
-------------------------4230 sample_num
```sql
SELECT Location_Code
FROM Document_Locations
GROUP BY Location_Code
HAVING COUNT(Document_ID) >= 3;
```
-------------------------4231 sample_num
```sql
SELECT Location_Code 
FROM Document_Locations 
GROUP BY Location_Code 
HAVING COUNT(Document_ID) >= 3;
```
-------------------------4232 sample_num
```sql
SELECT Ref_Locations.Location_Name, Ref_Locations.Location_Code 
FROM Ref_Locations 
JOIN Document_Locations ON Ref_Locations.Location_Code = Document_Locations.Location_Code 
GROUP BY Ref_Locations.Location_Name, Ref_Locations.Location_Code 
ORDER BY COUNT(Document_Locations.Document_ID) ASC 
LIMIT 1;
```
-------------------------4233 sample_num
```sql
SELECT T2.Location_Name, T2.Location_Code
FROM Document_Locations AS T1 
JOIN Ref_Locations AS T2 ON T1.Location_Code = T2.Location_Code
GROUP BY T1.Location_Code
ORDER BY COUNT(T1.Document_ID) ASC
LIMIT 1;
```
-------------------------4234 sample_num
```sql
SELECT 
    D1.Employee_Name AS Destruction_Authorised_by,
    D2.Employee_Name AS Destroyed_by
FROM 
    Documents_to_be_Destroyed DTD
JOIN 
    Employees D1 ON DTD.Destruction_Authorised_by_Employee_ID = D1.Employee_ID
JOIN 
    Employees D2 ON DTD.Destroyed_by_Employee_ID = D2.Employee_ID;
```
-------------------------4235 sample_num
```sql
SELECT 
    D1.Employee_Name AS 'Authorised_by',
    D2.Employee_Name AS 'Destroyed_by'
FROM 
    Documents_to_be_Destroyed DTD
JOIN 
    Employees D1 ON DTD.Destruction_Authorised_by_Employee_ID = D1.Employee_ID
JOIN 
    Employees D2 ON DTD.Destroyed_by_Employee_ID = D2.Employee_ID;
```
-------------------------4236 sample_num
```sql
SELECT Employees.Employee_ID, COUNT(Documents_to_be_Destroyed.Document_ID) 
FROM Employees 
JOIN Documents_to_be_Destroyed 
ON Employees.Employee_ID = Documents_to_be_Destroyed.Destruction_Authorised_by_Employee_ID 
GROUP BY Employees.Employee_ID;
```
-------------------------4237 sample_num
```sql
SELECT E.Employee_ID, COUNT(D.Destruction_Authorised_by_Employee_ID) AS Num_Docs_Auth_Destroy
FROM Employees E
LEFT JOIN Documents_to_be_Destroyed D ON E.Employee_ID = D.Destruction_Authorised_by_Employee_ID
GROUP BY E.Employee_ID;
```
-------------------------4238 sample_num
```sql
SELECT 
    dbe.Destroyed_by_Employee_ID, 
    COUNT(DISTINCT dbe.Document_ID) AS Num_Documents_Destroyed
FROM 
    Documents_to_be_Destroyed dbe
WHERE 
    dbe.Actual_Destruction_Date IS NOT NULL
GROUP BY 
    dbe.Destroyed_by_Employee_ID;
```
-------------------------4239 sample_num
```sql
SELECT 
    E.Employee_ID, 
    COUNT(Destroyed_by_Employee_ID) as Num_Documents_Destroyed
FROM 
    Employees E
JOIN 
    Documents_to_be_Destroyed D 
ON 
    E.Employee_ID = D.Destroyed_by_Employee_ID
GROUP BY 
    E.Employee_ID;
```
-------------------------4240 sample_num
```sql
SELECT Employee_ID 
FROM Employees 
WHERE Employee_ID NOT IN (SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed)
```
-------------------------4241 sample_num
```sql
SELECT Employee_ID 
FROM Employees 
WHERE Employee_ID NOT IN (SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed);
```
-------------------------4242 sample_num
```sql
SELECT DISTINCT Destruction_Authorised_by_Employee_ID 
FROM Documents_to_be_Destroyed;
```
-------------------------4243 sample_num
```sql
SELECT DISTINCT Destruction_Authorised_by_Employee_ID 
FROM Documents_to_be_Destroyed;
```
-------------------------4244 sample_num
```sql
SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed;
```
-------------------------4245 sample_num
```sql
SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed;
```
-------------------------4246 sample_num
```sql
SELECT Employee_ID 
FROM Employees 
WHERE Employee_ID NOT IN (SELECT Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed)
```
-------------------------4247 sample_num
```sql
SELECT Employee_ID 
FROM Employees 
WHERE Employee_ID NOT IN (SELECT Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed);
```
-------------------------4248 sample_num
```sql
SELECT DISTINCT Employee_ID 
FROM (
    SELECT Destruction_Authorised_by_Employee_ID AS Employee_ID 
    FROM Documents_to_be_Destroyed 
    UNION 
    SELECT Destroyed_by_Employee_ID 
    FROM Documents_to_be_Destroyed 
) AS combined;
```
-------------------------4249 sample_num
```sql
SELECT DISTINCT E.Employee_ID
FROM Employees E
WHERE E.Employee_ID IN (
    SELECT D.Destroyed_by_Employee_ID
    FROM Documents_to_be_Destroyed D
    WHERE D.Destroyed_by_Employee_ID IS NOT NULL
) OR E.Employee_ID IN (
    SELECT D.Destruction_Authorised_by_Employee_ID
    FROM Documents_to_be_Destroyed D
    WHERE D.Destruction_Authorised_by_Employee_ID IS NOT NULL
);
```
-------------------------4250 sample_num
```sql
SELECT COUNT(*) FROM Club;
```
-------------------------4251 sample_num
```sql
SELECT COUNT(*) FROM Club;
```
-------------------------4252 sample_num
```sql
SELECT ClubName FROM Club;
```
-------------------------4253 sample_num
```sql
SELECT ClubName FROM Club;
```
-------------------------4254 sample_num
```sql
SELECT COUNT(*) FROM Student;
```
-------------------------4255 sample_num
```sql
SELECT COUNT(*) FROM Student;
```
-------------------------4256 sample_num
```sql
SELECT Fname FROM Student;
```
-------------------------4257 sample_num
```sql
SELECT Fname FROM Student;
```
-------------------------4258 sample_num
```sql
SELECT s.LName
FROM Student s
JOIN Member_of_club m ON s.StuID = m.StuID
JOIN Club c ON m.ClubID = c.ClubID
WHERE c.ClubName = 'Bootup Baltimore';
```
-------------------------4259 sample_num
```sql
SELECT Student.LName 
FROM Student 
JOIN Member_of_club ON Student.StuID = Member_of_club.StuID 
JOIN Club ON Member_of_club.ClubID = Club.ClubID 
WHERE Club.ClubName = 'Bootup Baltimore';
```
-------------------------4260 sample_num
```sql
SELECT S.LName
FROM Student S
JOIN Member_of_club M ON S.StuID = M.StuID
JOIN Club C ON M.ClubID = C.ClubID
WHERE C.ClubName = 'Hopkins Student Enterprises';
```
-------------------------4261 sample_num
```sql
SELECT S.LName 
FROM Student S
JOIN Member_of_club M ON S.StuID = M.StuID 
JOIN Club C ON M.ClubID = C.ClubID
WHERE C.ClubName = 'Hopkins Student Enterprises';
```
-------------------------4262 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club
JOIN Club ON Member_of_club.ClubID = Club.ClubID
WHERE ClubName = 'Tennis Club';
```
-------------------------4263 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club
JOIN Club ON Member_of_club.ClubID = Club.ClubID
WHERE ClubName = 'Tennis Club';
```
-------------------------4264 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club M, Club C 
WHERE M.ClubID = C.ClubID AND C.ClubName = 'Pen and Paper Gaming';
```
-------------------------4265 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club M, Club C 
WHERE M.ClubID = C.ClubID AND C.ClubName = 'Pen and Paper Gaming';
```
-------------------------4266 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club M, Student S 
WHERE S.StuID = M.StuID AND S.LName = 'Smith' AND S.Fname = 'Linda';
```
-------------------------4267 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club M, Student S 
WHERE S.StuID = M.StuID AND S.LName = 'Smith' AND S.Fname = 'Linda';
```
-------------------------4268 sample_num
```sql
SELECT COUNT(*) 
FROM Club 
WHERE ClubID IN (
    SELECT ClubID 
    FROM Member_of_club 
    WHERE StuID = (
        SELECT StuID 
        FROM Student 
        WHERE Fname = 'Tracy' AND LName = 'Kim'
    )
);
```
-------------------------4269 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club M, Student S, Club C 
WHERE S.StuID = M.StuID AND M.ClubID = C.ClubID AND S.Fname = 'Tracy' AND S.LName = 'Kim';
```
-------------------------4270 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S, Club C, Member_of_club M
WHERE S.StuID = M.StuID AND C.ClubID = M.ClubID AND C.ClubName = 'Bootup Baltimore' AND S.Sex = 'F';
```
-------------------------4271 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S, Club C, Member_of_club M 
WHERE S.StuID = M.StuID AND C.ClubID = M.ClubID AND C.ClubName = 'Bootup Baltimore' AND S.Sex = 'F';
```
-------------------------4272 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S, Club C, Member_of_club M
WHERE S.StuID = M.StuID AND C.ClubID = M.ClubID AND C.ClubName = 'Hopkins Student Enterprises' AND S.Sex = 'M';
```
-------------------------4273 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S, Club C, Member_of_club M
WHERE S.StuID = M.StuID AND C.ClubID = M.ClubID AND C.ClubName = 'Hopkins Student Enterprises' AND S.Sex = 'M';
```
-------------------------4274 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S, Club C, Member_of_club M
WHERE C.ClubName = 'Bootup Baltimore'
AND S.Major = '600'
AND S.StuID = M.StuID
AND C.ClubID = M.ClubID;
```
-------------------------4275 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S
JOIN Member_of_club M ON S.StuID = M.StuID
JOIN Club C ON M.ClubID = C.ClubID
WHERE C.ClubName = 'Bootup Baltimore' AND S.Major = '600';
```
-------------------------4276 sample_num
```sql
SELECT Club.ClubName, COUNT(Member_of_club.StuID) as MemberCount
FROM Club
JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID
JOIN Student ON Member_of_club.StuID = Student.StuID
WHERE Student.Major = '600'
GROUP BY Club.ClubName
ORDER BY MemberCount DESC
LIMIT 1;
```
-------------------------4277 sample_num
```sql
SELECT Club.ClubName, COUNT(Member_of_club.StuID) as MemberCount
FROM Club
JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID
JOIN Student ON Member_of_club.StuID = Student.StuID
WHERE Student.Major = '600'
GROUP BY Club.ClubID
ORDER BY MemberCount DESC
LIMIT 1;
```
-------------------------4278 sample_num
```sql
SELECT ClubName 
FROM Club 
WHERE ClubID = (
    SELECT ClubID 
    FROM (
        SELECT ClubID, COUNT(*) AS FemalesCount 
        FROM Member_of_club 
        WHERE StuID IN (
            SELECT StuID 
            FROM Student 
            WHERE Sex = 'F'
        ) 
        GROUP BY ClubID 
        ORDER BY FemalesCount DESC 
        LIMIT 1
    ) AS subquery
)
```
-------------------------4279 sample_num
```sql
SELECT ClubName FROM Club 
JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID 
JOIN Student ON Student.StuID = Member_of_club.StuID 
WHERE Student.Sex = 'F' 
GROUP BY Club.ClubID 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------4280 sample_num
```sql
SELECT ClubDesc FROM Club WHERE ClubName = 'Tennis Club';
```
-------------------------4281 sample_num
```sql
SELECT ClubDesc FROM Club WHERE ClubName = 'Tennis Club';
```
-------------------------4282 sample_num
```sql
SELECT ClubDesc FROM Club WHERE ClubName = 'Pen and Paper Gaming';
```
-------------------------4283 sample_num
```sql
SELECT ClubDesc FROM Club WHERE ClubName = 'Pen and Paper Gaming';
```
-------------------------4284 sample_num
```sql
SELECT ClubLocation FROM Club WHERE ClubName = 'Tennis Club';
```
-------------------------4285 sample_num
```sql
SELECT ClubLocation FROM Club WHERE ClubName = 'Tennis Club';
```
-------------------------4286 sample_num
```sql
SELECT ClubLocation FROM Club WHERE ClubName = 'Pen and Paper Gaming';
```
-------------------------4287 sample_num
```sql
SELECT ClubLocation FROM Club WHERE ClubName = 'Pen and Paper Gaming';
```
-------------------------4288 sample_num
```sql
SELECT ClubLocation FROM Club WHERE ClubName = 'Hopkins Student Enterprises';
```
-------------------------4289 sample_num
```sql
SELECT ClubLocation FROM Club WHERE ClubName = 'Hopkins Student Enterprises';
```
-------------------------4290 sample_num
```sql
SELECT ClubName 
FROM Club 
WHERE ClubLocation = 'AKW';
```
-------------------------4291 sample_num
```sql
SELECT ClubName FROM Club WHERE ClubLocation = 'AKW';
```
-------------------------4292 sample_num
```sql
SELECT COUNT(*) 
FROM Club 
WHERE ClubLocation = 'HHH';
```
-------------------------4293 sample_num
```sql
SELECT COUNT(*) 
FROM Club 
WHERE ClubLocation = 'HHH';
```
-------------------------4294 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S 
JOIN Member_of_club M ON S.StuID = M.StuID 
JOIN Club C ON M.ClubID = C.ClubID 
WHERE C.ClubName = 'Bootup Baltimore' AND M.Position = 'President';
```
-------------------------4295 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S 
JOIN Member_of_club M ON S.StuID = M.StuID 
JOIN Club C ON M.ClubID = C.ClubID 
WHERE C.ClubName = 'Bootup Baltimore' AND M.Position = 'President';
```
-------------------------4296 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S, Club C, Member_of_club M 
WHERE C.ClubName = 'Hopkins Student Enterprises' 
AND C.ClubID = M.ClubID 
AND S.StuID = M.StuID 
AND M.Position = 'CTO';
```
-------------------------4297 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S, Club C, Member_of_club M 
WHERE C.ClubName = 'Hopkins Student Enterprises' 
AND M.Position = 'CTO' 
AND S.StuID = M.StuID 
AND C.ClubID = M.ClubID;
```
-------------------------4298 sample_num
```sql
SELECT COUNT(DISTINCT moc.Position) 
FROM Member_of_club AS moc
JOIN Club AS c ON moc.ClubID = c.ClubID
WHERE c.ClubName = 'Bootup Baltimore';
```
-------------------------4299 sample_num
```sql
SELECT COUNT(DISTINCT moc.Position) 
FROM Member_of_club AS moc
JOIN Club AS c ON moc.ClubID = c.ClubID
WHERE c.ClubName = 'Bootup Baltimore';
```
-------------------------4300 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Member_of_club m ON s.StuID = m.StuID 
JOIN Club c ON m.ClubID = c.ClubID 
WHERE c.ClubName = 'Bootup Baltimore' AND s.Age > 18;
```
-------------------------4301 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club mc
JOIN Student s ON mc.StuID = s.StuID
JOIN Club c ON mc.ClubID = c.ClubID
WHERE c.ClubName = 'Bootup Baltimore' AND s.Age > 18;
```
-------------------------4302 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Member_of_club m ON s.StuID = m.StuID 
JOIN Club c ON m.ClubID = c.ClubID 
WHERE c.ClubName = 'Bootup Baltimore' AND s.Age < 18;
```
-------------------------4303 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club mc
JOIN Student s ON mc.StuID = s.StuID
JOIN Club c ON mc.ClubID = c.ClubID
WHERE c.ClubName = 'Bootup Baltimore' AND s.Age < 18;
```
-------------------------4304 sample_num
```sql
SELECT ClubName 
FROM Club 
WHERE ClubID IN (
    SELECT ClubID 
    FROM Member_of_club 
    WHERE StuID IN (
        SELECT StuID 
        FROM Student 
        WHERE city_code = 'BAL'
    )
);
```
-------------------------4305 sample_num
```sql
SELECT ClubName 
FROM Club 
WHERE ClubID IN (
    SELECT ClubID 
    FROM Member_of_club 
    WHERE StuID IN (
        SELECT StuID 
        FROM Student 
        WHERE city_code = 'BAL'
    )
);
```
-------------------------4306 sample_num
```sql
SELECT Club.ClubName
FROM Club
JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID
JOIN Student ON Member_of_club.StuID = Student.StuID
WHERE Student.city_code = 'HOU'
GROUP BY Club.ClubName
HAVING COUNT(*) >= 1;
```
-------------------------4307 sample_num
```sql
SELECT ClubName 
FROM Club 
WHERE ClubID IN (
    SELECT ClubID 
    FROM Member_of_club 
    WHERE StuID IN (
        SELECT StuID 
        FROM Student 
        WHERE city_code = 'HOU'
    )
);
```
-------------------------4308 sample_num
```sql
SELECT COUNT(*) 
FROM Member_of_club M, Student S 
WHERE M.StuID = S.StuID AND S.Fname = 'Eric' AND S.LName = 'Tai';
```
-------------------------4309 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT ClubID 
  FROM Student 
  WHERE Fname = 'Eric' AND LName = 'Tai'
) AS T1
JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID;
```
However, for a more accurate result, you might want to use the following query:

```sql
SELECT COUNT(DISTINCT T3.ClubID)
FROM Student AS T1
JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID
JOIN Club AS T3 ON T2.ClubID = T3.ClubID
WHERE T1.Fname = 'Eric' AND T1.LName = 'Tai';
```
-------------------------4310 sample_num
```sql
SELECT Club.ClubName
FROM Club
JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID
JOIN Student ON Student.StuID = Member_of_club.StuID
WHERE Student.Fname = 'Davis' AND Student.LName = 'Steven';
```
-------------------------4311 sample_num
```sql
SELECT ClubName 
FROM Club 
WHERE ClubID IN (
    SELECT ClubID 
    FROM Member_of_club 
    WHERE StuID IN (
        SELECT StuID 
        FROM Student 
        WHERE Fname = 'Davis' AND LName = 'Steven'
    )
);
```
-------------------------4312 sample_num
```sql
SELECT ClubName 
FROM Club 
WHERE ClubID IN (
    SELECT ClubID 
    FROM Member_of_club 
    WHERE StuID IN (
        SELECT StuID 
        FROM Student 
        WHERE Advisor = '1121'
    )
);
```
-------------------------4313 sample_num
```sql
SELECT Club.ClubName 
FROM Club 
JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID 
JOIN Student ON Student.StuID = Member_of_club.StuID 
WHERE Student.Advisor = '1121'
GROUP BY Club.ClubName;
```
-------------------------4314 sample_num
```sql
SELECT AVG(Student.Age) 
FROM Student 
JOIN Member_of_club ON Student.StuID = Member_of_club.StuID 
JOIN Club ON Club.ClubID = Member_of_club.ClubID 
WHERE Club.ClubName = 'Bootup Baltimore';
```
-------------------------4315 sample_num
```sql
SELECT AVG(T1.Age) 
FROM Student AS T1 
JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID 
JOIN Club AS T3 ON T2.ClubID = T3.ClubID 
WHERE T3.ClubName = 'Bootup Baltimore';
```
-------------------------4316 sample_num
```sql
SELECT AVG(T1.Age) 
FROM Student AS T1 
JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID 
JOIN Club AS T3 ON T2.ClubID = T3.ClubID 
WHERE T3.ClubName = 'Hopkins Student Enterprises'
```
-------------------------4317 sample_num
```sql
SELECT AVG(T1.Age) 
FROM Student AS T1 
JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID 
JOIN Club AS T3 ON T2.ClubID = T3.ClubID 
WHERE T3.ClubName = 'Hopkins Student Enterprises'
```
-------------------------4318 sample_num
```sql
SELECT AVG(Student.Age)
FROM Student
JOIN Member_of_club ON Student.StuID = Member_of_club.StuID
JOIN Club ON Member_of_club.ClubID = Club.ClubID
WHERE Club.ClubName = 'Tennis Club';
```
-------------------------4319 sample_num
```sql
SELECT AVG(Student.Age)
FROM Student
JOIN Member_of_club ON Student.StuID = Member_of_club.StuID
JOIN Club ON Member_of_club.ClubID = Club.ClubID
WHERE Club.ClubName = 'Tennis Club';
```
-------------------------4320 sample_num
```sql
SELECT DISTINCT T1.grant_amount 
FROM Grants AS T1 
JOIN Documents AS T2 ON T1.grant_id = T2.grant_id 
WHERE T2.sent_date < '1986-08-26 20:49:27' AND T1.grant_end_date > '1989-03-16 18:27:16';
```
-------------------------4321 sample_num
```sql
SELECT DISTINCT G.grant_amount 
FROM Grants G 
JOIN Documents D ON G.grant_id = D.grant_id 
WHERE D.sent_date < '1986-08-26 20:49:27' 
AND G.grant_end_date < '1989-03-16 18:27:16';
```
-------------------------4322 sample_num
```sql
SELECT P.project_details 
FROM Projects P
JOIN Project_Outcomes PO ON P.project_id = PO.project_id
JOIN Research_Outcomes RO ON PO.outcome_code = RO.outcome_code
WHERE RO.outcome_description IN ('patent', 'paper')
GROUP BY P.project_id
HAVING COUNT(DISTINCT RO.outcome_description) > 1;
```
-------------------------4323 sample_num
```sql
SELECT p.project_details 
FROM Projects p
JOIN Project_Outcomes po ON p.project_id = po.project_id
JOIN Research_Outcomes ro ON po.outcome_code = ro.outcome_code
WHERE ro.outcome_description IN ('patents', 'papers')
GROUP BY p.project_id
HAVING COUNT(DISTINCT ro.outcome_description) > 1;
```
-------------------------4324 sample_num
```sql
SELECT SUM(grant_amount) 
FROM Grants 
JOIN Organisations ON Grants.organisation_id = Organisations.organisation_id 
JOIN Organisation_Types ON Organisations.organisation_type = Organisation_Types.organisation_type 
WHERE Organisation_Types.organisation_type_description = 'research'
```
-------------------------4325 sample_num
```sql
SELECT SUM(grant_amount) 
FROM Grants;
```
-------------------------4326 sample_num
```sql
SELECT ps.date_from, ps.date_to 
FROM Project_Staff ps
JOIN (
    SELECT p.project_id
    FROM Project_Staff ps
    JOIN Projects p ON ps.project_id = p.project_id
    GROUP BY p.project_id
    ORDER BY COUNT(ps.staff_id) DESC
    LIMIT 1
) sub ON ps.project_id = sub.project_id;
```
-------------------------4327 sample_num
```sql
SELECT MIN(date_from), MAX(date_to)
FROM Project_Staff
WHERE project_id = (
    SELECT project_id
    FROM (
        SELECT project_id, COUNT(*) as staff_count
        FROM Project_Staff
        WHERE role_code IN (SELECT role_code FROM Staff_Roles WHERE role_description LIKE '%Leader%')
        GROUP BY project_id
        ORDER BY staff_count DESC
        LIMIT 1
    ) AS subquery
);
```
-------------------------4328 sample_num
```sql
SELECT Organisations.organisation_id, Organisations.organisation_details 
FROM Organisations 
JOIN Projects ON Organisations.organisation_id = Projects.organisation_id;
```
-------------------------4329 sample_num
```sql
SELECT o.organisation_id, o.organisation_details
FROM Organisations o
JOIN Grants g ON o.organisation_id = g.organisation_id
WHERE g.grant_amount > 6000;
```
-------------------------4330 sample_num
```sql
SELECT T.organisation_type, T.organisation_id, COUNT(*) AS staff_count
FROM (
    SELECT RS.employer_organisation_id AS organisation_id
    FROM Research_Staff RS
    GROUP BY RS.employer_organisation_id
) AS S
JOIN Organisations O ON S.organisation_id = O.organisation_id
JOIN Organisation_Types OT ON O.organisation_type = OT.organisation_type
GROUP BY T.organisation_type, T.organisation_id
ORDER BY staff_count DESC
LIMIT 1;
```
Note: The above query has a mistake in the use of alias T. Here is the corrected version:
```sql
SELECT O.organisation_type, O.organisation_id, COUNT(*) AS staff_count
FROM Research_Staff RS
JOIN Organisations O ON RS.employer_organisation_id = O.organisation_id
GROUP BY O.organisation_type, O.organisation_id
ORDER BY staff_count DESC
LIMIT 1;
```
-------------------------4331 sample_num
```sql
SELECT T1.organisation_type, T1.organisation_id 
FROM Organisations AS T1 
JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id 
GROUP BY T1.organisation_id 
ORDER BY COUNT(T2.staff_id) DESC 
LIMIT 1;
```
-------------------------4332 sample_num
```sql
SELECT T2.organisation_type, COUNT(*) AS staff_count 
FROM Research_Staff AS T1 
JOIN Organisations AS T2 ON T1.employer_organisation_id = T2.organisation_id 
GROUP BY T2.organisation_type 
ORDER BY staff_count DESC 
LIMIT 1;
```
-------------------------4333 sample_num
```sql
SELECT T.organisation_type 
FROM (
    SELECT organisation_id, COUNT(*) AS staff_count
    FROM Project_Staff 
    JOIN Projects ON Project_Staff.project_id = Projects.project_id
    GROUP BY organisation_id
    ORDER BY staff_count DESC
    LIMIT 1
) AS S
JOIN Organisations AS T ON S.organisation_id = T.organisation_id;
```
-------------------------4334 sample_num
```sql
SELECT D.sent_date 
FROM Documents D 
JOIN Grants G ON D.grant_id = G.grant_id 
JOIN Organisations O ON G.organisation_id = O.organisation_id 
JOIN Organisation_Types OT ON O.organisation_type = OT.organisation_type 
WHERE G.grant_amount > 5000 AND OT.organisation_type_description = 'the specified description';
```
Note: Replace 'the specified description' with the actual description you are looking for.
-------------------------4335 sample_num
```sql
SELECT D.sent_date 
FROM Documents D 
JOIN Grants G ON D.grant_id = G.grant_id 
WHERE G.grant_amount > 5000;
```
Note: The provided SQL query does not directly relate to research involvement as the schema does not directly link documents or grants to a specific type of project (research or otherwise). Additional joins or conditions might be necessary depending on how the database defines or categorizes research projects. However, based on the given schema and the requested information, the above query will return the send dates for all documents related to grants with an amount greater than 5000. To further refine this to only include grants related to research, additional context or schema details would be required.
-------------------------4336 sample_num
```sql
SELECT D.response_received_date 
FROM Documents D 
JOIN Document_Types DT ON D.document_type_code = DT.document_type_code 
JOIN Grants G ON D.grant_id = G.grant_id 
WHERE DT.document_description = 'Regular' OR G.grant_amount > 100;
```
Note: This query assumes that 'granted with more than 100' refers to 'grant_amount'. However, the condition 'DT.document_description = 'Regular' OR G.grant_amount > 100' will not work as intended because they are evaluated separately. If you want documents that are either 'Regular' or have a grant amount greater than 100, you should consider using parentheses to group these conditions properly, like so: `(DT.document_description = 'Regular') OR (G.grant_amount > 100)`. However, based on your original request to avoid an explanation, I have not included this modification in the code snippet.
-------------------------4337 sample_num
```sql
SELECT d.response_received_date 
FROM Documents d 
JOIN Document_Types dt ON d.document_type_code = dt.document_type_code 
JOIN Grants g ON d.grant_id = g.grant_id 
WHERE dt.document_description = 'Regular' 
AND g.grant_amount > 100;
```
-------------------------4338 sample_num
```sql
SELECT p.project_details 
FROM Projects p
LEFT JOIN Project_Staff ps ON p.project_id = ps.project_id
LEFT JOIN Staff_Roles sr ON ps.role_code = sr.role_code
WHERE sr.role_description != 'Researcher' OR ps.role_code IS NULL
GROUP BY p.project_id
HAVING COUNT(ps.project_id) = 0 OR MAX(sr.role_description) != 'Researcher';
```
-------------------------4339 sample_num
```sql
SELECT P.project_details 
FROM Projects P 
LEFT JOIN Project_Staff PS ON P.project_id = PS.project_id 
LEFT JOIN Staff_Roles SR ON PS.role_code = SR.role_code 
WHERE SR.role_description != 'Research Role' OR SR.role_description IS NULL
GROUP BY P.project_id 
HAVING COUNT(PS.staff_id) = 0;
```
-------------------------4340 sample_num
```sql
SELECT T.Tasks.task_details, T.Tasks.task_id, T.Tasks.project_id
FROM (
    SELECT P.project_id
    FROM Projects P
    WHERE P.project_details = 'omnis'
    UNION
    SELECT PO.project_id
    FROM Project_Outcomes PO
    GROUP BY PO.project_id
    HAVING COUNT(*) > 2
) AS Proj
JOIN Tasks T ON T.Tasks.project_id = Proj.project_id;
```
Note: The provided query assumes that there's a relation between the Projects and Tasks tables through the project_id column. However, in your provided schema, the Tasks table already contains the project_id column, so the join might not be necessary if you directly access the project_id from the Tasks table. If all task details related to a project should be included, the query is correct. If only distinct project_ids are needed, then the query should be adjusted accordingly.
-------------------------4341 sample_num
```sql
SELECT T.Tasks.task_details, T.Tasks.task_id, T.Tasks.project_id
FROM (
    SELECT P.project_id
    FROM Projects P
    WHERE P.project_details = 'omnis'
    UNION
    SELECT PO.project_id
    FROM Project_Outcomes PO
    GROUP BY PO.project_id
    HAVING COUNT(PO.outcome_code) >= 3
) AS Proj
JOIN Tasks T ON T.project_id = Proj.project_id;
```
-------------------------4342 sample_num
```sql
SELECT MIN(date_from) AS StartDate, MAX(date_to) AS EndDate 
FROM Project_Staff 
WHERE role_code = 'Researcher';
```
-------------------------4343 sample_num
```sql
SELECT date_from, date_to 
FROM Project_Staff;
```
-------------------------4344 sample_num
```sql
SELECT COUNT(*) FROM Staff_Roles;
```
-------------------------4345 sample_num
```sql
SELECT COUNT(DISTINCT role_code) FROM Project_Staff;
```
-------------------------4346 sample_num
```sql
SELECT Organisations.organisation_id, SUM(Grants.grant_amount) as total_grant_amount 
FROM Organisations 
JOIN Grants ON Organisations.organisation_id = Grants.organisation_id 
GROUP BY Organisations.organisation_id;
```
-------------------------4347 sample_num
```sql
SELECT organisation_id, SUM(grant_amount) as total_grant_amount 
FROM Grants 
GROUP BY organisation_id;
```
-------------------------4348 sample_num
```sql
SELECT P.project_details 
FROM Projects P
JOIN Project_Outcomes PO ON P.project_id = PO.project_id
JOIN Research_Outcomes RO ON PO.outcome_code = RO.outcome_code
WHERE RO.outcome_description LIKE '%Published%';
```
-------------------------4349 sample_num
```sql
SELECT p.project_details 
FROM Projects p 
JOIN Project_Outcomes po ON p.project_id = po.project_id 
JOIN Research_Outcomes ro ON po.outcome_code = ro.outcome_code 
WHERE ro.outcome_description = 'Published';
```
-------------------------4350 sample_num
```sql
SELECT p.project_id, COUNT(ps.staff_id) AS num_of_staff
FROM Projects p
JOIN Project_Staff ps ON p.project_id = ps.project_id
GROUP BY p.project_id
ORDER BY num_of_staff ASC;
```
-------------------------4351 sample_num
```sql
SELECT project_id, COUNT(staff_id) AS staff_count
FROM Project_Staff
GROUP BY project_id
ORDER BY staff_count ASC;
```
-------------------------4352 sample_num
```sql
SELECT role_description 
FROM Staff_Roles 
WHERE role_code = 'Researcher';
```
-------------------------4353 sample_num
```sql
SELECT Staff_Roles.role_description 
FROM Staff_Roles 
WHERE Staff_Roles.role_code = (SELECT Staff_Roles.role_code FROM Project_Staff WHERE Project_Staff.staff_id IN (SELECT Research_Staff.staff_id FROM Research_Staff))
```
Note: This query assumes that there's a connection between Project_Staff and Research_Staff through the staff_id, and that the role_code for a researcher can be found where the staff_id of Project_Staff matches the staff_id of Research_Staff. However, without knowing the exact relationship between these tables, this might not return the expected results. A more accurate query would depend on further details about how researcher roles are defined and related in the database schema.
-------------------------4354 sample_num
```sql
SELECT MIN(date_from) 
FROM Project_Staff;
```
-------------------------4355 sample_num
```sql
SELECT MIN(date_from) AS first_start_date FROM Project_Staff;
```
-------------------------4356 sample_num
```sql
SELECT P.project_details, P.project_id 
FROM Projects P
JOIN Project_Outcomes PO ON P.project_id = PO.project_id
GROUP BY P.project_id, P.project_details
ORDER BY COUNT(PO.outcome_code) DESC
LIMIT 1;
```
-------------------------4357 sample_num
```sql
SELECT p.project_id, p.project_details 
FROM Projects p 
JOIN Project_Outcomes po ON p.project_id = po.project_id 
GROUP BY p.project_id, p.project_details 
ORDER BY COUNT(po.outcome_code) DESC 
LIMIT 1;
```
-------------------------4358 sample_num
```sql
SELECT project_details 
FROM Projects 
WHERE project_id NOT IN (SELECT project_id FROM Project_Outcomes)
;
```
-------------------------4359 sample_num
```sql
SELECT p.project_details 
FROM Projects p 
LEFT JOIN Project_Outcomes po ON p.project_id = po.project_id 
WHERE po.project_id IS NULL;
```
-------------------------4360 sample_num
```sql
SELECT O.organisation_id, OT.organisation_type, O.organisation_details
FROM Organisations O
JOIN Organisation_Types OT ON O.organisation_type = OT.organisation_type
JOIN Research_Staff RS ON O.organisation_id = RS.employer_organisation_id
GROUP BY O.organisation_id, OT.organisation_type, O.organisation_details
ORDER BY COUNT(RS.staff_id) DESC
LIMIT 1;
```
-------------------------4361 sample_num
```sql
SELECT TOP 1 o.organisation_id, ot.organisation_type, o.organisation_details
FROM Organisations o
JOIN Organisation_Types ot ON o.organisation_type = ot.organisation_type
JOIN Research_Staff rs ON o.organisation_id = rs.employer_organisation_id
GROUP BY o.organisation_id, ot.organisation_type, o.organisation_details
ORDER BY COUNT(rs.staff_id) DESC
```
Note: The use of `TOP 1` is for SQL Server. If you're using MySQL, you would use `LIMIT 1` instead.
-------------------------4362 sample_num
```sql
SELECT PS.staff_id, SR.role_description 
FROM Project_Staff PS 
JOIN Staff_Roles SR ON PS.role_code = SR.role_code 
WHERE PS.project_id IN (
    SELECT PO.project_id 
    FROM Project_Outcomes PO 
    GROUP BY PO.project_id 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
GROUP BY PS.staff_id, SR.role_description;
```
```
-------------------------4363 sample_num
```sql
SELECT T3.staff_id, T2.role_description FROM (
SELECT T1.staff_id, T1.role_code, COUNT(T1.project_id) AS project_count
FROM (
SELECT staff_id, role_code, project_id
FROM Project_Staff
GROUP BY staff_id, role_code, project_id) T1
JOIN Staff_Roles T2 ON T1.role_code = T2.role_code
GROUP BY T1.staff_id, T1.role_code
ORDER BY project_count DESC) T3
JOIN Staff_Roles T2 ON T3.role_code = T2.role_code
WHERE (
T3.staff_id, T3.project_count) IN (
SELECT staff_id, MAX(project_count)
FROM (
SELECT T1.staff_id, T1.role_code, COUNT(T1.project_id) AS project_count
FROM (
SELECT staff_id, role_code, project_id
FROM Project_Staff
GROUP BY staff_id, role_code, project_id) T1
JOIN Staff_Roles T2 ON T1.role_code = T2.role_code
GROUP BY T1.staff_id, T1.role_code) T4
GROUP BY T4.staff_id)
```
```
-------------------------4364 sample_num
```sql
SELECT document_type_code 
FROM Document_Types 
WHERE document_description LIKE 'Initial%';
```
-------------------------4365 sample_num
```sql
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%';
```
-------------------------4366 sample_num
```sql
SELECT G.grant_start_date 
FROM Grants G
JOIN Documents D1 ON G.grant_id = D1.grant_id
JOIN Document_Types DT1 ON D1.document_type_code = DT1.document_type_code
JOIN Documents D2 ON G.grant_id = D2.grant_id
JOIN Document_Types DT2 ON D2.document_type_code = DT2.document_type_code
WHERE DT1.document_description = 'Regular' AND DT2.document_description = 'Initial Application'
GROUP BY G.grant_start_date
HAVING COUNT(DISTINCT DT1.document_description) = 1 AND COUNT(DISTINCT DT2.document_description) = 1;
```
```
-------------------------4367 sample_num
```sql
SELECT G.grant_start_date 
FROM Grants G
JOIN Documents D ON G.grant_id = D.grant_id
JOIN Document_Types DT ON D.document_type_code = DT.document_type_code
WHERE DT.document_description IN ('Regular', 'Initial Application');
```
-------------------------4368 sample_num
```sql
SELECT grant_id, COUNT(document_id) AS num_documents
FROM Documents
GROUP BY grant_id
ORDER BY num_documents DESC
LIMIT 1;
```
-------------------------4369 sample_num
```sql
SELECT 
    g.grant_id,
    COUNT(d.document_id) AS num_documents
FROM 
    Grants g
LEFT JOIN 
    Documents d ON g.grant_id = d.grant_id
GROUP BY 
    g.grant_id
ORDER BY 
    num_documents DESC
LIMIT 1;
```
-------------------------4370 sample_num
```sql
SELECT OT.organisation_type_description 
FROM Organisation_Types OT
JOIN Organisations O ON OT.organisation_type = O.organisation_type
WHERE O.organisation_details = 'quo';
```
-------------------------4371 sample_num
```sql
SELECT T2.organisation_type_description FROM Organisations AS T1 JOIN Organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type WHERE T1.organisation_details = 'quo'
```
-------------------------4372 sample_num
```sql
SELECT Organisations.organisation_details 
FROM Organisations 
JOIN Organisation_Types ON Organisations.organisation_type = Organisation_Types.organisation_type 
WHERE Organisation_Types.organisation_type_description = 'Sponsor' 
ORDER BY Organisations.organisation_details ASC;
```
-------------------------4373 sample_num
```sql
SELECT organisation_details
FROM Organisations
JOIN Organisation_Types ON Organisations.organisation_type = Organisation_Types.organisation_type
WHERE Organisation_Types.organisation_type_description = 'Sponsors'
ORDER BY organisation_details ASC;
```
-------------------------4374 sample_num
```sql
SELECT COUNT(*) 
FROM Project_Outcomes 
WHERE outcome_code = 'Patent';
```
-------------------------4375 sample_num
```sql
SELECT COUNT(*) 
FROM Project_Outcomes 
WHERE outcome_code = 'Patent';
```
-------------------------4376 sample_num
```sql
SELECT COUNT(*) 
FROM Project_Staff 
WHERE role_code = 'leader' OR date_from < '1989-04-24 23:51:54';
```
Note: This assumes that 'leader' is a valid role_code in the Staff_Roles table. If not, you should replace 'leader' with the correct role_code for a leader. Also, without knowing the exact data type of date_from, I've assumed it's a datetime field. If it's a date field, you may need to adjust the comparison accordingly.
-------------------------4377 sample_num
```sql
SELECT COUNT(*) 
FROM Project_Staff 
WHERE role_code = 'Leader' OR date_from < '1989-04-24 23:51:54';
```
-------------------------4378 sample_num
```sql
SELECT MAX(date_to) AS LastDateOfStaffLeaving 
FROM Project_Staff;
```
-------------------------4379 sample_num
```sql
SELECT MAX(date_to) AS LastDateLeft FROM Project_Staff;
```
-------------------------4380 sample_num
```sql
SELECT Research_Outcomes.outcome_description 
FROM Research_Outcomes 
JOIN Project_Outcomes ON Research_Outcomes.outcome_code = Project_Outcomes.outcome_code 
JOIN Projects ON Projects.project_id = Project_Outcomes.project_id 
WHERE Projects.project_details = 'sint';
```
-------------------------4381 sample_num
```sql
SELECT Research_Outcomes.outcome_description 
FROM Research_Outcomes 
JOIN Project_Outcomes ON Research_Outcomes.outcome_code = Project_Outcomes.outcome_code 
JOIN Projects ON Projects.project_id = Project_Outcomes.project_id 
WHERE Projects.project_details = 'sint';
```
-------------------------4382 sample_num
```sql
SELECT T.organisation_id, COUNT(T.outcome_code) AS OutcomeCount
FROM (
    SELECT P.organisation_id, PO.outcome_code
    FROM Projects P
    JOIN Project_Outcomes PO ON P.project_id = PO.project_id
) T
GROUP BY T.organisation_id
ORDER BY OutcomeCount DESC
LIMIT 1;
```
-------------------------4383 sample_num
```sql
SELECT T.organisation_id, COUNT(*) AS outcome_count
FROM (
    SELECT organisation_id, project_id
    FROM Projects
) AS T
JOIN Project_Outcomes ON T.project_id = Project_Outcomes.project_id
GROUP BY T.organisation_id
ORDER BY outcome_count DESC
LIMIT 1;
```
-------------------------4384 sample_num
```sql
SELECT Projects.project_details 
FROM Projects 
JOIN Organisations ON Projects.organisation_id = Organisations.organisation_id;
```
-------------------------4385 sample_num
```sql
SELECT P.project_details 
FROM Projects P
WHERE P.organisation_id = (
    SELECT organisation_id 
    FROM (
        SELECT organisation_id, COUNT(*) AS project_count 
        FROM Projects 
        GROUP BY organisation_id 
        ORDER BY project_count DESC 
        LIMIT 1
    ) AS subquery
)
```
```
-------------------------4386 sample_num
```sql
SELECT Research_Staff.staff_details 
FROM Research_Staff 
ORDER BY Research_Staff.staff_details ASC;
```
-------------------------4387 sample_num
```sql
SELECT Research_Staff.staff_details 
FROM Research_Staff 
ORDER BY Research_Staff.staff_details ASC;
```
-------------------------4388 sample_num
```sql
SELECT COUNT(*) FROM Tasks;
```
-------------------------4389 sample_num
```sql
SELECT COUNT(*) FROM Tasks;
```
-------------------------4390 sample_num
```sql
SELECT COUNT(Tasks.task_id) AS Task_Count, Projects.project_details 
FROM Tasks 
JOIN Projects ON Tasks.project_id = Projects.project_id 
GROUP BY Projects.project_id, Projects.project_details;
```
-------------------------4391 sample_num
```sql
SELECT project_id, COUNT(task_id) AS number_of_tasks
FROM Tasks
GROUP BY project_id;
```
-------------------------4392 sample_num
```sql
SELECT DISTINCT Staff_Roles.role_description 
FROM Staff_Roles 
JOIN Project_Staff ON Staff_Roles.role_code = Project_Staff.role_code;
```
-------------------------4393 sample_num
```sql
SELECT role_description 
FROM Project_Staff 
JOIN Staff_Roles ON Project_Staff.role_code = Staff_Roles.role_code 
WHERE date_from >= '2003-04-19 15:06:20' AND date_to <= '2016-03-15 00:33:18';
```
-------------------------4394 sample_num
```sql
SELECT outcome_details FROM Project_Outcomes;
```
-------------------------4395 sample_num
```sql
SELECT outcome_description 
FROM Project_Outcomes 
JOIN Research_Outcomes ON Project_Outcomes.outcome_code = Research_Outcomes.outcome_code;
```
-------------------------4396 sample_num
```sql
SELECT role_code, COUNT(*) as count 
FROM Project_Staff 
GROUP BY role_code 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------4397 sample_num
```sql
SELECT role_description, COUNT(*) as count 
FROM Project_Staff 
JOIN Staff_Roles ON Project_Staff.role_code = Staff_Roles.role_code 
GROUP BY role_description 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------4398 sample_num
```sql
SELECT COUNT(friend) 
FROM PersonFriend 
WHERE name = 'Dan';
```
-------------------------4399 sample_num
```sql
SELECT COUNT(friend) 
FROM PersonFriend 
WHERE name = 'Dan';
```
-------------------------4400 sample_num
```sql
SELECT COUNT(*) FROM Person WHERE gender = 'female';
```
-------------------------4401 sample_num
```sql
SELECT COUNT(*) FROM Person WHERE gender = 'female';
```
-------------------------4402 sample_num
```sql
SELECT AVG(age) FROM Person;
```
-------------------------4403 sample_num
```sql
SELECT AVG(age) FROM Person;
```
-------------------------4404 sample_num
```sql
SELECT COUNT(DISTINCT city) FROM Person;
```
-------------------------4405 sample_num
```sql
SELECT COUNT(DISTINCT city) FROM Person;
```
-------------------------4406 sample_num
```sql
SELECT COUNT(DISTINCT job) FROM Person;
```
-------------------------4407 sample_num
```sql
SELECT COUNT(DISTINCT job) FROM Person;
```
-------------------------4408 sample_num
```sql
SELECT name 
FROM Person 
ORDER BY age DESC 
LIMIT 1;
```
-------------------------4409 sample_num
```sql
SELECT name 
FROM Person 
ORDER BY age DESC 
LIMIT 1;
```
-------------------------4410 sample_num
```sql
SELECT name 
FROM Person 
WHERE job = 'student' 
ORDER BY age DESC 
LIMIT 1;
```
-------------------------4411 sample_num
```sql
SELECT name 
FROM Person 
WHERE age = (SELECT MAX(age) FROM Person)
AND job = 'student';
```
-------------------------4412 sample_num
```sql
SELECT name 
FROM Person 
WHERE gender = 'male' 
ORDER BY age ASC 
LIMIT 1;
```
-------------------------4413 sample_num
```sql
SELECT name 
FROM Person 
WHERE gender = 'male' 
ORDER BY age 
LIMIT 1;
```
-------------------------4414 sample_num
```sql
SELECT age FROM Person WHERE name = 'Zach' AND job = 'doctor';
```
-------------------------4415 sample_num
```sql
SELECT age FROM Person WHERE name = 'Zach' AND job = 'doctor';
```
-------------------------4416 sample_num
```sql
SELECT name FROM Person WHERE age < 30;
```
-------------------------4417 sample_num
```sql
SELECT name 
FROM Person 
WHERE age < 30;
```
-------------------------4418 sample_num
```sql
SELECT COUNT(*) 
FROM Person 
WHERE age > 30 AND job = 'engineer';
```
-------------------------4419 sample_num
```sql
SELECT COUNT(*) 
FROM Person 
WHERE age > 30 AND job = 'engineer';
```
-------------------------4420 sample_num
```sql
SELECT gender, AVG(age) 
FROM Person 
GROUP BY gender;
```
-------------------------4421 sample_num
```sql
SELECT gender, AVG(age) 
FROM Person 
GROUP BY gender;
```
-------------------------4422 sample_num
```sql
SELECT job, AVG(age) 
FROM Person 
GROUP BY job;
```
-------------------------4423 sample_num
```sql
SELECT job, AVG(age) 
FROM Person 
GROUP BY job;
```
-------------------------4424 sample_num
```sql
SELECT job, AVG(age) 
FROM Person 
WHERE gender = 'male' 
GROUP BY job;
```
-------------------------4425 sample_num
```sql
SELECT job, AVG(age) 
FROM Person 
WHERE gender = 'male' 
GROUP BY job;
```
-------------------------4426 sample_num
```sql
SELECT job, MIN(age) 
FROM Person 
GROUP BY job;
```
-------------------------4427 sample_num
```sql
SELECT job, MIN(age) 
FROM Person 
GROUP BY job;
```
-------------------------4428 sample_num
```sql
SELECT gender, COUNT(*) as num_people 
FROM Person 
WHERE age < 40 
GROUP BY gender;
```
-------------------------4429 sample_num
```sql
SELECT gender, COUNT(*) 
FROM Person 
WHERE age < 40 
GROUP BY gender;
```
-------------------------4430 sample_num
```sql
SELECT name 
FROM Person 
WHERE age > (SELECT MIN(age) FROM Person WHERE job = 'engineer') 
AND job != 'engineer'
ORDER BY age;
``` 
Note: This query will not only exclude engineers but also return people whose age is greater than the youngest engineer. If you want to compare with all engineers, remove the condition 'job != 'engineer'' from the WHERE clause. However, based on your question, I assumed that you want to exclude engineers from the result.
-------------------------4431 sample_num
```sql
SELECT DISTINCT P.name 
FROM Person P 
WHERE P.age > ANY (
    SELECT E.age 
    FROM Person E 
    WHERE E.job = 'engineer'
)
ORDER BY P.age;
```
-------------------------4432 sample_num
```sql
SELECT COUNT(*) 
FROM Person 
WHERE age > (
    SELECT MAX(age) 
    FROM Person 
    WHERE job = 'engineer'
);
```
-------------------------4433 sample_num
```sql
SELECT COUNT(*) 
FROM Person p1
WHERE NOT EXISTS (
    SELECT *
    FROM Person p2
    WHERE p2.age > p1.age AND p2.job = 'engineer'
);
```
-------------------------4434 sample_num
```sql
SELECT name, job FROM Person ORDER BY name;
```
-------------------------4435 sample_num
```sql
SELECT name, job 
FROM Person
ORDER BY name;
```
-------------------------4436 sample_num
```sql
SELECT name 
FROM Person 
ORDER BY age DESC;
```
-------------------------4437 sample_num
```sql
SELECT name FROM Person ORDER BY age DESC;
```
-------------------------4438 sample_num
```sql
SELECT name, age 
FROM Person 
WHERE gender = 'male' 
ORDER BY age;
```
-------------------------4439 sample_num
```sql
SELECT name, age 
FROM Person 
WHERE gender = 'male' 
ORDER BY age;
```
-------------------------4440 sample_num
```sql
SELECT T1.name, T1.age 
FROM Person AS T1 
JOIN PersonFriend AS T2 ON T1.name = T2.name 
WHERE T2.friend = 'Dan' AND T2.friend = 'Alice';
```

Note: This query won't work as expected in most databases because a single row cannot have both 'Dan' and 'Alice' as values in the 'friend' column. You might need to use subqueries or a different approach depending on the actual structure of your data.
```sql
SELECT T1.name, T1.age 
FROM Person AS T1 
JOIN PersonFriend AS T2 ON T1.name = T2.name 
WHERE T2.friend IN ('Dan', 'Alice') 
GROUP BY T1.name, T1.age 
HAVING COUNT(DISTINCT T2.friend) = 2;
```
-------------------------4441 sample_num
```sql
SELECT T1.name, T1.age 
FROM Person AS T1 
JOIN PersonFriend AS T2 ON T1.name = T2.name 
WHERE T2.friend = 'Dan' 
AND T2.name IN (SELECT T2.name FROM PersonFriend AS T2 WHERE T2.friend = 'Alice')
GROUP BY T1.name, T1.age;
```
-------------------------4442 sample_num
```sql
SELECT P.name, P.age 
FROM Person P 
JOIN PersonFriend PF ON P.name = PF.name 
WHERE PF.friend = 'Dan' OR PF.friend = 'Alice';
```
-------------------------4443 sample_num
```sql
SELECT DISTINCT T1.name, T1.age 
FROM Person AS T1 
JOIN PersonFriend AS T2 
ON T1.name = T2.friend 
WHERE T2.name IN ('Dan', 'alice');
```
-------------------------4444 sample_num
```sql
SELECT P.name FROM Person P 
JOIN PersonFriend PF ON P.name = PF.name 
JOIN Person P2 ON PF.friend = P2.name 
WHERE P2.age > 40 AND P2.age < 30;
```
Note: There seems to be a logical error in the question as it's asking for friends aged above 40 and under 30 at the same time which is impossible. The query here assumes you want to find people who have at least one friend either older than 40 or younger than 30. If you meant something different, please clarify.
-------------------------4445 sample_num
```sql
SELECT DISTINCT p.name 
FROM Person p
JOIN PersonFriend pf ON p.name = pf.name
JOIN Person f ON f.name = pf.friend
WHERE (f.age > 40 OR f.age < 30);
```
-------------------------4446 sample_num
```sql
SELECT DISTINCT p1.name 
FROM Person p1 
JOIN PersonFriend pf ON p1.name = pf.name 
JOIN Person p2 ON pf.friend = p2.name 
WHERE p2.age > 40 AND p2.age >= 30;
```
-------------------------4447 sample_num
```sql
SELECT P.name 
FROM Person P 
WHERE P.age > 40 
AND P.name NOT IN (
    SELECT PF1.name 
    FROM PersonFriend PF1
    JOIN Person P1 ON PF1.friend = P1.name 
    WHERE P1.age < 30
)
```
-------------------------4448 sample_num
```sql
SELECT p.name 
FROM Person p 
WHERE NOT EXISTS (SELECT 1 FROM PersonFriend pf WHERE pf.name = p.name AND pf.friend IN (SELECT name FROM Person WHERE job = 'student'))
```
-------------------------4449 sample_num
```sql
SELECT p.name 
FROM Person p 
WHERE NOT EXISTS (
    SELECT pf.friend 
    FROM PersonFriend pf 
    JOIN Person p2 ON pf.friend = p2.name 
    WHERE pf.name = p.name AND p2.job = 'student'
);
```
-------------------------4450 sample_num
```sql
SELECT name 
FROM PersonFriend 
GROUP BY name 
HAVING COUNT(friend) = 1;
```
-------------------------4451 sample_num
```sql
SELECT PF1.name 
FROM PersonFriend PF1
WHERE (SELECT COUNT(*) FROM PersonFriend PF2 WHERE PF1.name = PF2.name) = 1;
```
-------------------------4452 sample_num
```sql
SELECT friend FROM network_2.PersonFriend WHERE name = 'Bob';
```
-------------------------4453 sample_num
```sql
SELECT friend FROM network_2.PersonFriend WHERE name = 'Bob';
```
-------------------------4454 sample_num
```sql
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob';
```
-------------------------4455 sample_num
```sql
SELECT friend FROM PersonFriend WHERE name = 'Bob';
```
-------------------------4456 sample_num
```sql
SELECT p.name 
FROM Person p 
JOIN PersonFriend pf ON p.name = pf.name 
WHERE pf.friend = 'Zach' AND p.gender = 'female';
```
-------------------------4457 sample_num
```sql
SELECT p.name 
FROM Person p 
JOIN PersonFriend pf ON p.name = pf.name 
WHERE pf.friend = 'Zach' AND p.gender = 'female';
```
-------------------------4458 sample_num
```sql
SELECT pf.friend 
FROM PersonFriend pf 
JOIN Person p ON pf.friend = p.name 
WHERE pf.name = 'Alice' AND p.gender = 'female';
```
-------------------------4459 sample_num
```sql
SELECT pf.friend 
FROM PersonFriend pf 
JOIN Person p ON pf.friend = p.name 
WHERE pf.name = 'Alice' AND p.gender = 'female';
```
-------------------------4460 sample_num
```sql
SELECT pf.friend 
FROM Person p 
JOIN PersonFriend pf ON p.name = pf.name 
WHERE p.name = 'Alice' AND p.gender = 'male' AND p.job = 'doctor';
```
-------------------------4461 sample_num
```sql
SELECT pf.friend 
FROM PersonFriend pf 
JOIN Person p ON pf.friend = p.name 
WHERE pf.name = 'Alice' AND p.job = 'doctor';
```
-------------------------4462 sample_num
```sql
SELECT DISTINCT p.name 
FROM Person p 
JOIN PersonFriend pf ON p.name = pf.name 
WHERE pf.friend IN (SELECT name FROM Person WHERE city = 'new york city');
```
-------------------------4463 sample_num
```sql
SELECT pf.friend 
FROM PersonFriend pf 
JOIN Person p ON pf.friend = p.name 
WHERE p.city = 'New York';
```
-------------------------4464 sample_num
```sql
SELECT P.name 
FROM Person P
JOIN PersonFriend PF ON P.name = PF.friend
JOIN Person P2 ON PF.name = P2.name
WHERE P2.age < (SELECT AVG(age) FROM Person)
```
-------------------------4465 sample_num
```sql
SELECT DISTINCT pf.friend 
FROM PersonFriend pf 
JOIN Person p ON pf.friend = p.name 
WHERE p.age < (SELECT AVG(age) FROM Person WHERE name IN (SELECT friend FROM PersonFriend))
```
-------------------------4466 sample_num
```sql
SELECT pf.name, pf.friend, p.age 
FROM PersonFriend pf 
JOIN Person p ON pf.friend = p.name 
WHERE p.age > (SELECT AVG(age) FROM Person);
```
-------------------------4467 sample_num
```sql
SELECT P.name, PF.friend, P.age 
FROM Person P
JOIN PersonFriend PF ON P.name = PF.name
WHERE P.age > (SELECT AVG(age) FROM Person)
```
-------------------------4468 sample_num
```sql
SELECT friend FROM network_2.PersonFriend WHERE name = 'Zach' ORDER BY year DESC LIMIT 1;
```
-------------------------4469 sample_num
```sql
SELECT friend FROM network_2.PersonFriend WHERE name = 'Zach' ORDER BY year DESC LIMIT 1;
```
-------------------------4470 sample_num
```sql
SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Zach' AND T2.year = (SELECT MAX(year) FROM PersonFriend WHERE name = 'Zach')
```
-------------------------4471 sample_num
```sql
SELECT pf.friend, p.age 
FROM PersonFriend pf 
JOIN Person p ON pf.friend = p.name 
WHERE pf.name = 'Zach' 
AND pf.year = (SELECT MAX(year) FROM PersonFriend WHERE name = 'Zach');
```
-------------------------4472 sample_num
```sql
SELECT PF.name 
FROM PersonFriend AS PF 
JOIN Person AS P ON PF.name = P.name 
WHERE PF.friend = 'Alice' 
ORDER BY PF.year 
LIMIT 1;
```
-------------------------4473 sample_num
```sql
SELECT PF.name 
FROM PersonFriend PF 
JOIN (
  SELECT MIN(year) AS min_year 
  FROM PersonFriend 
  WHERE friend = 'Alice'
) AS Y 
ON PF.year = Y.min_year 
WHERE PF.friend = 'Alice';
```
-------------------------4474 sample_num
```sql
SELECT P.name, P.age, P.job
FROM Person P
JOIN PersonFriend PF ON P.name = PF.name
WHERE PF.friend = 'Alice'
AND PF.year = (SELECT MAX(year) FROM PersonFriend WHERE friend = 'Alice');
```
-------------------------4475 sample_num
```sql
SELECT P.name, P.age, P.job 
FROM Person P 
JOIN PersonFriend PF ON P.name = PF.name 
WHERE PF.friend = 'Alice' 
AND PF.year = (SELECT MAX(year) FROM PersonFriend WHERE friend = 'Alice');
```
-------------------------4476 sample_num
```sql
SELECT name 
FROM Person 
WHERE name NOT IN (SELECT name FROM PersonFriend)
```
-------------------------4477 sample_num
```sql
SELECT name 
FROM Person 
WHERE name NOT IN (SELECT name FROM PersonFriend)
```
-------------------------4478 sample_num
```sql
SELECT T1.name 
FROM Person AS T1 
JOIN PersonFriend AS T2 ON T1.name = T2.friend 
GROUP BY T2.name 
ORDER BY AVG((SELECT age FROM Person WHERE name = T2.friend)) DESC 
LIMIT 1;
```
```
-------------------------4479 sample_num
```sql
SELECT T1.name, AVG(T2.age) as avg_age 
FROM Person AS T1 
JOIN PersonFriend AS T2 ON T1.name = T2.friend 
GROUP BY T1.name 
ORDER BY avg_age DESC 
LIMIT 1;
```
Actually, the correct query should join on T1.name = T2.name and T1.age = T2.age which is not possible. The correct query should be like this:
```sql
SELECT PF.name, AVG(P.age) as avg_age 
FROM PersonFriend AS PF 
JOIN Person AS P ON PF.friend = P.name 
GROUP BY PF.name 
ORDER BY avg_age DESC 
LIMIT 1;
```
-------------------------4480 sample_num
```sql
SELECT COUNT(*) 
FROM Person p
WHERE NOT EXISTS (
    SELECT 1 
    FROM PersonFriend pf 
    JOIN Person p2 ON pf.friend = p2.name AND p2.city = 'Austin'
    WHERE pf.name = p.name
);
```
-------------------------4481 sample_num
```sql
SELECT COUNT(*) 
FROM Person p
WHERE NOT EXISTS (
    SELECT 1 
    FROM PersonFriend pf 
    JOIN Person p2 ON pf.friend = p2.name AND p2.city = 'Austin'
    WHERE pf.name = p.name
);
```
-------------------------4482 sample_num
```sql
SELECT pf2.friend 
FROM PersonFriend AS pf1 
JOIN PersonFriend AS pf2 ON pf1.friend = pf2.name 
WHERE pf1.name = 'Alice' AND pf2.friend != 'Alice';
```
-------------------------4483 sample_num
```sql
SELECT pf2.friend 
FROM PersonFriend AS pf1 
JOIN PersonFriend AS pf2 ON pf1.friend = pf2.name 
WHERE pf1.name = 'Alice' AND pf2.friend != 'Alice';
```
-------------------------4484 sample_num
```sql
SELECT COUNT(*) FROM member;
```
-------------------------4485 sample_num
```sql
SELECT Name FROM member ORDER BY Name ASC;
```
-------------------------4486 sample_num
```sql
SELECT Name, Country FROM member;
```
-------------------------4487 sample_num
```sql
SELECT Name 
FROM member 
WHERE Country IN ("United States", "Canada");
```
-------------------------4488 sample_num
```sql
SELECT Country, COUNT(*) AS NumberOfMembers
FROM member
GROUP BY Country;
```
-------------------------4489 sample_num
```sql
SELECT Country, COUNT(*) as count 
FROM member 
GROUP BY Country 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------4490 sample_num
```sql
SELECT Country 
FROM member 
GROUP BY Country 
HAVING COUNT(Member_ID) > 2;
```
-------------------------4491 sample_num
```sql
SELECT Leader_Name, College_Location FROM college;
```
-------------------------4492 sample_num
```sql
SELECT member.Name, college.Name 
FROM member 
JOIN college ON member.College_ID = college.College_ID;
```
-------------------------4493 sample_num
```sql
SELECT member.Name, college.College_Location 
FROM member 
JOIN college ON member.College_ID = college.College_ID 
ORDER BY member.Name ASC;
```
-------------------------4494 sample_num
```sql
SELECT DISTINCT c.Leader_Name 
FROM college c
JOIN member m ON c.College_ID = m.College_ID
WHERE m.Country = 'Canada';
```
-------------------------4495 sample_num
```sql
SELECT member.Name, round.Decoration_Theme 
FROM member 
JOIN round ON member.Member_ID = round.Member_ID;
```
-------------------------4496 sample_num
```sql
SELECT T2.Name 
FROM round AS T1 
JOIN member AS T2 ON T1.Member_ID = T2.Member_ID 
WHERE T1.Rank_in_Round > 3;
```
-------------------------4497 sample_num
```sql
SELECT member.Name 
FROM member 
JOIN round ON member.Member_ID = round.Member_ID 
ORDER BY round.Rank_in_Round ASC;
```
-------------------------4498 sample_num
```sql
SELECT T2.Name 
FROM member AS T2 
LEFT JOIN round AS T1 
ON T2.Member_ID = T1.Member_ID 
WHERE T1.Member_ID IS NULL;
```
-------------------------4499 sample_num
```sql
SELECT document_name, access_count 
FROM Documents 
ORDER BY document_name ASC;
```
-------------------------4500 sample_num
```sql
SELECT document_name, access_count 
FROM Documents 
ORDER BY document_name ASC;
```
-------------------------4501 sample_num
```sql
SELECT document_name, MAX(access_count) 
FROM Documents 
GROUP BY document_name 
ORDER BY access_count DESC 
LIMIT 1;
```
However, for getting both the maximum access_count and the document_name in one shot without sorting, you might want to use a subquery or a window function which depends on your SQL dialect (MySQL, PostgreSQL, SQL Server...). Here is an example using a subquery:
```sql
SELECT document_name, access_count 
FROM Documents 
WHERE access_count = (SELECT MAX(access_count) FROM Documents);
```
-------------------------4502 sample_num
```sql
SELECT document_name, MAX(access_count) 
FROM Documents 
ORDER BY access_count DESC 
LIMIT 1;
```
```
-------------------------4503 sample_num
```sql
SELECT document_type_code 
FROM Documents 
GROUP BY document_type_code 
HAVING COUNT(document_code) > 4;
```
-------------------------4504 sample_num
```sql
SELECT document_type_code 
FROM Documents 
GROUP BY document_type_code 
HAVING COUNT(*) >= 4;
```
-------------------------4505 sample_num
```sql
SELECT document_type_code, SUM(access_count) as total_access_count
FROM Documents
GROUP BY document_type_code
ORDER BY total_access_count DESC
LIMIT 1;
```
-------------------------4506 sample_num
```sql
SELECT SUM(access_count) 
FROM Documents 
WHERE document_type_code = (
    SELECT document_type_code 
    FROM Documents 
    GROUP BY document_type_code 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
```
-------------------------4507 sample_num
```sql
SELECT AVG(access_count) FROM Documents;
```
-------------------------4508 sample_num
```sql
SELECT AVG(access_count) AS average_access_count FROM Documents;
```
-------------------------4509 sample_num
```sql
SELECT ds.document_structure_code, ds.document_structure_description
FROM Document_Structures ds
JOIN Documents d ON ds.document_structure_code = d.document_structure_code
WHERE d.access_count = (
    SELECT MIN(access_count)
    FROM Documents
)
LIMIT 1;
```
-------------------------4510 sample_num
```sql
SELECT DS.document_structure_description
FROM Document_Structures DS
JOIN Documents D ON DS.document_structure_code = D.document_structure_code
WHERE D.access_count = (
    SELECT MIN(access_count)
    FROM Documents
)
LIMIT 1;
```
-------------------------4511 sample_num
```sql
SELECT document_type_code 
FROM Documents 
WHERE document_name = 'David CV';
```
-------------------------4512 sample_num
```sql
SELECT document_type_code 
FROM Documents 
WHERE document_name = 'David CV';
```
-------------------------4513 sample_num
```sql
SELECT d.document_code, d.document_name 
FROM Documents d
WHERE d.document_type_code IN (
    SELECT dtc.document_type_code 
    FROM (
        SELECT document_type_code, RANK() OVER (ORDER BY COUNT(document_code) DESC) rank_type 
        FROM Documents 
        GROUP BY document_type_code
    ) dtc 
    WHERE dtc.rank_type <= 3
)
AND d.document_structure_code IN (
    SELECT dsc.document_structure_code 
    FROM (
        SELECT document_structure_code, RANK() OVER (ORDER BY COUNT(document_code) DESC) rank_structure 
        FROM Documents 
        GROUP BY document_structure_code
    ) dsc 
    WHERE dsc.rank_structure <= 3
)
GROUP BY d.document_code, d.document_name;
```
-------------------------4514 sample_num
```sql
SELECT D.document_name 
FROM Documents D
WHERE D.document_type_code IN (
    SELECT DT.document_type_code 
    FROM Documents DT 
    GROUP BY DT.document_type_code 
    ORDER BY COUNT(*) DESC 
    LIMIT 3)
AND D.document_structure_code IN (
    SELECT DS.document_structure_code 
    FROM Documents DS 
    GROUP BY DS.document_structure_code 
    ORDER BY COUNT(*) DESC 
    LIMIT 3)
```
Note: This query assumes that `document_type_code` is a column in the `Documents` table, which was not listed in your description. If it's not there, you should adjust the query accordingly.
-------------------------4515 sample_num
```sql
SELECT document_type_code 
FROM Documents 
GROUP BY document_type_code 
HAVING SUM(access_count) > 10000;
```
-------------------------4516 sample_num
```sql
SELECT document_type_code 
FROM Documents 
GROUP BY document_type_code 
HAVING SUM(access_count) <= 10000;
```
-------------------------4517 sample_num
```sql
SELECT DS.section_title 
FROM Document_Sections DS 
JOIN Documents D ON DS.document_code = D.document_code 
WHERE D.document_name = 'David CV';
```
-------------------------4518 sample_num
```sql
SELECT DS.section_title 
FROM Document_Sections DS 
JOIN Documents D ON DS.document_code = D.document_code 
WHERE D.document_name = 'David CV';
```
-------------------------4519 sample_num
```sql
SELECT d.document_name 
FROM Documents d 
LEFT JOIN Document_Sections ds ON d.document_code = ds.document_code 
WHERE ds.document_code IS NULL;
```
-------------------------4520 sample_num
```sql
SELECT document_name 
FROM Documents 
WHERE document_code NOT IN (SELECT document_code FROM Document_Sections)
```
-------------------------4521 sample_num
```sql
SELECT user_name, password 
FROM Users 
WHERE role_code = (
    SELECT role_code 
    FROM (
        SELECT role_code, COUNT(*) AS cnt 
        FROM Users 
        GROUP BY role_code 
        ORDER BY cnt DESC 
        LIMIT 1
    ) AS subquery
)
```
-------------------------4522 sample_num
```sql
SELECT U.user_name, U.password 
FROM Users U 
JOIN (
  SELECT role_code 
  FROM Users 
  GROUP BY role_code 
  ORDER BY COUNT(*) DESC 
  LIMIT 1
) AS MostCommonRole ON U.role_code = MostCommonRole.role_code;
```
-------------------------4523 sample_num
```sql
SELECT AVG(D.access_count) 
FROM Documents D
JOIN Document_Functional_Areas DFA ON D.document_code = DFA.document_code
JOIN Functional_Areas FA ON DFA.functional_area_code = FA.functional_area_code
WHERE FA.functional_area_description = 'Acknowledgement';
```
-------------------------4524 sample_num
```sql
SELECT AVG(D.access_count) 
FROM Documents D
JOIN Document_Functional_Areas DFA ON D.document_code = DFA.document_code
JOIN Functional_Areas FA ON DFA.functional_area_code = FA.functional_area_code
WHERE FA.functional_area_description = 'Acknowledgement';
```
-------------------------4525 sample_num
```sql
SELECT D.document_name 
FROM Documents D 
WHERE NOT EXISTS (
    SELECT 1 
    FROM Document_Sections DS 
    JOIN Document_Sections_Images DSI ON DS.section_id = DSI.section_id 
    WHERE D.document_code = DS.document_code
);
```
-------------------------4526 sample_num
```sql
SELECT d.document_name 
FROM Documents d 
LEFT JOIN Document_Sections ds ON d.document_code = ds.document_code 
LEFT JOIN Document_Sections_Images dsi ON ds.section_id = dsi.section_id 
WHERE dsi.image_id IS NULL
GROUP BY d.document_name;
```
-------------------------4527 sample_num
```sql
SELECT D.document_name 
FROM Documents D
JOIN Document_Sections DS ON D.document_code = DS.document_code
GROUP BY D.document_code, D.document_name
ORDER BY COUNT(DS.section_id) DESC
LIMIT 1;
```
-------------------------4528 sample_num
```sql
SELECT D.document_name 
FROM Documents D
JOIN Document_Sections DS ON D.document_code = DS.document_code
GROUP BY D.document_code, D.document_name
ORDER BY COUNT(DS.section_id) DESC
LIMIT 1;
```
-------------------------4529 sample_num
```sql
SELECT document_name 
FROM Documents 
WHERE document_name LIKE '%CV%';
```
-------------------------4530 sample_num
```sql
SELECT document_name 
FROM Documents 
WHERE document_name LIKE '%CV%';
```
-------------------------4531 sample_num
```sql
SELECT COUNT(*) FROM Users WHERE user_login = 'logged_in';
```
Note: This assumes that there is a status of 'logged_in' stored in the 'user_login' column to indicate whether a user is logged in or not. If this is not the case, the query would need to be adjusted accordingly.
-------------------------4532 sample_num
```sql
SELECT COUNT(*) FROM Users WHERE user_login = 'logged_in';
```
Note: This assumes that the `user_login` field is updated to 'logged_in' when a user is logged in, which is not a common practice. Usually, a session table or a last_login field is used to determine if a user is logged in.
-------------------------4533 sample_num
```sql
SELECT R.role_description 
FROM Roles R
JOIN (
  SELECT U.role_code
  FROM Users U
  WHERE U.user_login = 1
  GROUP BY U.role_code
  ORDER BY COUNT(*) DESC
  LIMIT 1
) AS T
ON R.role_code = T.role_code;
```
-------------------------4534 sample_num
```sql
SELECT R.role_description 
FROM Roles R
JOIN (
  SELECT U.role_code, COUNT(*) AS cnt
  FROM Users U
  WHERE U.user_login = TRUE
  GROUP BY U.role_code
  ORDER BY cnt DESC
  LIMIT 1
) AS UC
ON R.role_code = UC.role_code;
```
-------------------------4535 sample_num
```sql
SELECT AVG(Documents.access_count) 
FROM Documents 
JOIN (
  SELECT document_structure_code, COUNT(*) as cnt
  FROM Documents 
  GROUP BY document_structure_code 
  ORDER BY cnt 
  LIMIT 1
) AS LeastPopularStructure
ON Documents.document_structure_code = LeastPopularStructure.document_structure_code;
```
-------------------------4536 sample_num
```sql
SELECT AVG(Documents.access_count) 
FROM Documents 
WHERE Documents.document_structure_code = (
    SELECT Document_Structures.document_structure_code 
    FROM Document_Structures 
    JOIN Documents ON Documents.document_structure_code = Document_Structures.document_structure_code 
    GROUP BY Document_Structures.document_structure_code 
    ORDER BY COUNT(Documents.document_code) 
    LIMIT 1
)
```
-------------------------4537 sample_num
```sql
SELECT image_name, image_url 
FROM Images 
ORDER BY image_name;
```
-------------------------4538 sample_num
```sql
SELECT image_name, image_url 
FROM Images 
ORDER BY image_name ASC;
```
-------------------------4539 sample_num
```sql
SELECT role_code, COUNT(user_id) AS num_users
FROM Users
GROUP BY role_code;
```
-------------------------4540 sample_num
```sql
SELECT role_code, COUNT(user_id) AS number_of_users
FROM Users
GROUP BY role_code;
```
-------------------------4541 sample_num
```sql
SELECT document_type_code 
FROM Documents 
GROUP BY document_type_code 
HAVING COUNT(document_code) > 2;
```
-------------------------4542 sample_num
```sql
SELECT document_type_code 
FROM Documents 
GROUP BY document_type_code 
HAVING COUNT(document_code) > 2;
```
-------------------------4543 sample_num
```sql
SELECT COUNT(*) FROM Companies;
```
-------------------------4544 sample_num
```sql
SELECT COUNT(*) FROM Companies;
```
-------------------------4545 sample_num
```sql
SELECT name 
FROM Companies 
ORDER BY Market_Value_billion DESC;
```
-------------------------4546 sample_num
```sql
SELECT name 
FROM Companies 
ORDER BY Market_Value_billion DESC;
```
-------------------------4547 sample_num
```sql
SELECT name FROM Companies WHERE Headquarters <> 'USA';
```
-------------------------4548 sample_num
```sql
SELECT name 
FROM Companies 
WHERE Headquarters != 'USA';
```
-------------------------4549 sample_num
```sql
SELECT Companies.name, Companies.Assets_billion 
FROM Companies 
ORDER BY Companies.name ASC;
```
-------------------------4550 sample_num
```sql
SELECT Companies.name, Companies.Assets_billion 
FROM Companies 
ORDER BY Companies.name ASC;
```
-------------------------4551 sample_num
```sql
SELECT AVG(Profits_billion) FROM Companies;
```
-------------------------4552 sample_num
```sql
SELECT AVG(Profits_billion) FROM Companies;
```
-------------------------4553 sample_num
```sql
SELECT MAX(Sales_billion), MIN(Sales_billion) 
FROM Companies 
WHERE Industry != 'Banking';
```
-------------------------4554 sample_num
```sql
SELECT MAX(Sales_billion), MIN(Sales_billion)
FROM Companies
WHERE Industry != 'Banking';
```
-------------------------4555 sample_num
```sql
SELECT COUNT(DISTINCT Industry) FROM Companies;
```
-------------------------4556 sample_num
```sql
SELECT COUNT(DISTINCT Industry) FROM Companies;
```
-------------------------4557 sample_num
```sql
SELECT name 
FROM buildings 
ORDER BY Height DESC;
```
-------------------------4558 sample_num
```sql
SELECT name 
FROM buildings 
ORDER BY Height DESC;
```
-------------------------4559 sample_num
```sql
SELECT Stories FROM buildings WHERE Height = (SELECT MAX(Height) FROM buildings);
```
-------------------------4560 sample_num
```sql
SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1;
```
-------------------------4561 sample_num
```sql
SELECT b.name AS Building_Name, c.name AS Company_Name 
FROM buildings b 
JOIN Office_locations ol ON b.id = ol.building_id 
JOIN Companies c ON c.id = ol.company_id;
```
-------------------------4562 sample_num
```sql
SELECT Companies.name AS Company_Name, buildings.name AS Building_Name 
FROM Companies 
JOIN Office_locations ON Companies.id = Office_locations.company_id 
JOIN buildings ON Office_locations.building_id = buildings.id;
```
-------------------------4563 sample_num
```sql
SELECT b.name 
FROM buildings b
JOIN Office_locations ol ON b.id = ol.building_id
GROUP BY b.id
HAVING COUNT(ol.company_id) > 1;
```
-------------------------4564 sample_num
```sql
SELECT b.name
FROM buildings b
JOIN Office_locations ol ON b.id = ol.building_id
GROUP BY b.id, b.name
HAVING COUNT(ol.company_id) > 1;
```
-------------------------4565 sample_num
```sql
SELECT b.name
FROM buildings b
JOIN Office_locations ol ON b.id = ol.building_id
GROUP BY b.name
ORDER BY COUNT(ol.company_id) DESC
LIMIT 1;
```
-------------------------4566 sample_num
```sql
SELECT b.name
FROM buildings b
JOIN Office_locations ol ON b.id = ol.building_id
GROUP BY b.name
ORDER BY COUNT(ol.company_id) DESC
LIMIT 1;
```
-------------------------4567 sample_num
```sql
SELECT name 
FROM buildings 
WHERE status = 'on-hold' 
ORDER BY stories ASC;
```
-------------------------4568 sample_num
```sql
SELECT name 
FROM buildings 
WHERE Status = 'on-hold' 
ORDER BY Stories ASC;
```
-------------------------4569 sample_num
```sql
SELECT Industry, COUNT(*) AS Num_of_Companies
FROM Companies
GROUP BY Industry;
```
-------------------------4570 sample_num
```sql
SELECT Industry, COUNT(*) 
FROM Companies 
GROUP BY Industry;
```
-------------------------4571 sample_num
```sql
SELECT Industry, COUNT(*) AS Num_of_Companies
FROM Companies
GROUP BY Industry
ORDER BY Num_of_Companies DESC;
```
-------------------------4572 sample_num
```sql
SELECT Industry, COUNT(*) AS CompanyCount 
FROM Companies 
GROUP BY Industry 
ORDER BY CompanyCount DESC;
```
-------------------------4573 sample_num
```sql
SELECT Industry, COUNT(*) AS num_companies 
FROM Companies 
GROUP BY Industry 
ORDER BY num_companies DESC 
LIMIT 1;
```
-------------------------4574 sample_num
```sql
SELECT Industry, COUNT(*) AS CompanyCount 
FROM Companies 
GROUP BY Industry 
ORDER BY CompanyCount DESC 
LIMIT 1;
```
-------------------------4575 sample_num
```sql
SELECT name 
FROM buildings 
WHERE id NOT IN (SELECT building_id FROM Office_locations)
```
-------------------------4576 sample_num
```sql
SELECT name 
FROM buildings 
WHERE id NOT IN (SELECT building_id FROM Office_locations)
```
-------------------------4577 sample_num
```sql
SELECT 
    T1.Industry 
FROM 
    Companies AS T1 
JOIN 
    Office_locations AS T2 
ON 
    T1.id = T2.company_id 
WHERE 
    T1.Headquarters = 'USA' 
INTERSECT 
SELECT 
    T1.Industry 
FROM 
    Companies AS T1 
JOIN 
    Office_locations AS T2 
ON 
    T1.id = T2.company_id 
WHERE 
    T1.Headquarters = 'China'
```
-------------------------4578 sample_num
```sql
SELECT Industry 
FROM Companies 
WHERE Headquarters = 'USA'
INTERSECT
SELECT Industry 
FROM Companies 
WHERE Headquarters = 'China'
```
-------------------------4579 sample_num
```sql
SELECT COUNT(*) 
FROM Companies 
WHERE Industry IN ("Banking", "Conglomerate");
```
-------------------------4580 sample_num
```sql
SELECT COUNT(*) 
FROM Companies 
WHERE Industry = 'Banking' OR Industry = 'Conglomerate';
```
-------------------------4581 sample_num
```sql
SELECT Headquarters 
FROM Companies 
GROUP BY Headquarters 
HAVING COUNT(*) > 2;
```
-------------------------4582 sample_num
```sql
SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*) > 2;
```
-------------------------4583 sample_num
```sql
SELECT COUNT(*) FROM Products;
```
-------------------------4584 sample_num
```sql
SELECT Product_Name 
FROM Products 
ORDER BY Product_Price ASC;
```
-------------------------4585 sample_num
```sql
SELECT Product_Name, Product_Type_Code FROM Products;
```
-------------------------4586 sample_num
```sql
SELECT Product_Price 
FROM Products 
WHERE Product_Name = 'Dining' OR Product_Name = 'Trading Policy';
```
-------------------------4587 sample_num
```sql
SELECT AVG(Product_Price) FROM Products;
```
-------------------------4588 sample_num
```sql
SELECT Product_Name 
FROM Products 
WHERE Product_Price = (SELECT MAX(Product_Price) FROM Products);
```
-------------------------4589 sample_num
```sql
SELECT Product_Type_Code, COUNT(*) 
FROM Products 
GROUP BY Product_Type_Code;
```
-------------------------4590 sample_num
```sql
SELECT Product_Type_Code, COUNT(*) AS Type_Count
FROM Products
GROUP BY Product_Type_Code
ORDER BY Type_Count DESC
LIMIT 1;
```
-------------------------4591 sample_num
```sql
SELECT Product_Type_Code 
FROM Products 
GROUP BY Product_Type_Code 
HAVING COUNT(*) >= 2;
```
-------------------------4592 sample_num
```sql
SELECT Product_Type_Code 
FROM Products 
WHERE Product_Price > 4500 
INTERSECT 
SELECT Product_Type_Code 
FROM Products 
WHERE Product_Price < 3000;
```
-------------------------4593 sample_num
```sql
SELECT p.Product_Name, COUNT(ee.Event_ID) AS NumberOfEvents
FROM Products p
JOIN Products_in_Events pee ON p.Product_ID = pee.Product_ID
JOIN Events ee ON pee.Event_ID = ee.Event_ID
GROUP BY p.Product_Name
```
-------------------------4594 sample_num
```sql
SELECT p.Product_Name, COUNT(pei.Event_ID) AS NumberOfEvents
FROM Products p
JOIN Products_in_Events pei ON p.Product_ID = pei.Product_ID
GROUP BY p.Product_Name
ORDER BY NumberOfEvents DESC;
```
-------------------------4595 sample_num
```sql
SELECT p.Product_Name 
FROM Products p
JOIN Products_in_Events pie ON p.Product_ID = pie.Product_ID
GROUP BY p.Product_Name
HAVING COUNT(pie.Event_ID) >= 2;
```
-------------------------4596 sample_num
```sql
SELECT P.Product_Name 
FROM Products P
JOIN Products_in_Events PIE ON P.Product_ID = PIE.Product_ID
GROUP BY P.Product_Name
HAVING COUNT(PIE.Event_ID) >= 2
ORDER BY P.Product_Name ASC;
```
-------------------------4597 sample_num
```sql
SELECT Product_Name 
FROM Products 
WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events);
```
-------------------------4598 sample_num
```sql
SELECT COUNT(*) FROM artwork;
```
-------------------------4599 sample_num
```sql
SELECT Name 
FROM artwork 
ORDER BY Name ASC;
```
-------------------------4600 sample_num
```sql
SELECT Name 
FROM artwork 
WHERE Type != 'Program Talent Show';
```
-------------------------4601 sample_num
```sql
SELECT Festival_Name, Location FROM festival_detail;
```
-------------------------4602 sample_num
```sql
SELECT T1.Chair_Name 
FROM festival_detail AS T1
ORDER BY T1.Year ASC;
```
-------------------------4603 sample_num
```sql
SELECT Location FROM festival_detail WHERE Num_of_Audience = (SELECT MAX(Num_of_Audience) FROM festival_detail);
```
-------------------------4604 sample_num
```sql
SELECT Festival_Name FROM festival_detail WHERE Year = 2007;
```
-------------------------4605 sample_num
```sql
SELECT AVG(Num_of_Audience) FROM festival_detail;
```
-------------------------4606 sample_num
```sql
SELECT Festival_Name 
FROM festival_detail 
ORDER BY Year DESC 
LIMIT 3;
```
-------------------------4607 sample_num
```sql
SELECT a.Name AS Artwork_Name, fd.Festival_Name 
FROM nomination n 
JOIN artwork a ON n.Artwork_ID = a.Artwork_ID 
JOIN festival_detail fd ON n.Festival_ID = fd.Festival_ID;
```
-------------------------4608 sample_num
```sql
SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T3.Year = 2007
```
-------------------------4609 sample_num
```sql
SELECT T3.Name 
FROM nomination AS T1 
JOIN festival_detail AS T2 ON T1.Festival_ID = T2.Festival_ID 
JOIN artwork AS T3 ON T1.Artwork_ID = T3.Artwork_ID 
ORDER BY T2.Year ASC;
```
-------------------------4610 sample_num
```sql
SELECT T2.Festival_Name FROM nomination AS T1 JOIN festival_detail AS T2 ON T1.Festival_ID = T2.Festival_ID JOIN artwork AS T3 ON T1.Artwork_ID = T3.Artwork_ID WHERE T3.Type = "Program Talent Show"
```
-------------------------4611 sample_num
```sql
SELECT T2.Festival_ID, T2.Festival_Name 
FROM nomination AS T1 
JOIN festival_detail AS T2 ON T1.Festival_ID = T2.Festival_ID 
GROUP BY T2.Festival_ID 
HAVING COUNT(T1.Artwork_ID) >= 2;
```
-------------------------4612 sample_num
```sql
SELECT F.Festival_ID, F.Festival_Name, COUNT(N.Artwork_ID) AS Num_of_Nominations
FROM festival_detail AS F
JOIN nomination AS N ON F.Festival_ID = N.Festival_ID
GROUP BY F.Festival_ID, F.Festival_Name;
```
-------------------------4613 sample_num
```sql
SELECT Type, COUNT(*) AS Num_of_Artworks
FROM artwork
GROUP BY Type;
```
-------------------------4614 sample_num
```sql
SELECT Type, COUNT(*) AS Count 
FROM artwork 
GROUP BY Type 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------4615 sample_num
```sql
SELECT Year
FROM festival_detail
GROUP BY Year
HAVING COUNT(Festival_ID) > 1;
```
-------------------------4616 sample_num
```sql
SELECT Name 
FROM artwork 
WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)
```
-------------------------4617 sample_num
```sql
SELECT Num_of_Audience 
FROM festival_detail 
WHERE Year IN (2008, 2010);
```
-------------------------4618 sample_num
```sql
SELECT SUM(Num_of_Audience) FROM festival_detail;
```
-------------------------4619 sample_num
```sql
SELECT Year FROM festival_detail WHERE Location = 'United States' INTERSECT SELECT Year FROM festival_detail WHERE Location != 'United States'
```
-------------------------4620 sample_num
```sql
SELECT COUNT(*) FROM Premises;
```
-------------------------4621 sample_num
```sql
SELECT DISTINCT premise_type FROM Premises;
```
-------------------------4622 sample_num
```sql
SELECT premise_type, premise_details 
FROM Premises 
ORDER BY premise_type;
```
-------------------------4623 sample_num
```sql
SELECT premise_type, COUNT(premise_id) 
FROM Premises 
GROUP BY premise_type;
```
-------------------------4624 sample_num
```sql
SELECT 
    product_category, 
    COUNT(DISTINCT mailshot_id) AS num_mailshots
FROM 
    Mailshot_Campaigns
GROUP BY 
    product_category;
```
-------------------------4625 sample_num
```sql
SELECT c.customer_name, c.customer_phone 
FROM Customers c 
LEFT JOIN Mailshot_Customers mc ON c.customer_id = mc.customer_id 
WHERE mc.customer_id IS NULL;
```
-------------------------4626 sample_num
```sql
SELECT c.customer_name, c.customer_phone 
FROM Customers c 
JOIN Mailshot_Customers mc ON c.customer_id = mc.customer_id 
WHERE mc.outcome_code = 'No Response';
```
-------------------------4627 sample_num
```sql
SELECT outcome_code, COUNT(*) AS number_of_mailshots
FROM Mailshot_Customers
GROUP BY outcome_code;
```
-------------------------4628 sample_num
```sql
SELECT c.customer_name
FROM Customers c
JOIN Mailshot_Customers mc ON c.customer_id = mc.customer_id
WHERE mc.outcome_code = 'Order'
GROUP BY c.customer_name
HAVING COUNT(mc.mailshot_id) >= 2;
```
-------------------------4629 sample_num
```sql
SELECT C.customer_name, COUNT(MC.mailshot_id) as mailshot_count
FROM Customers C
JOIN Mailshot_Customers MC ON C.customer_id = MC.customer_id
GROUP BY C.customer_name
ORDER BY mailshot_count DESC
LIMIT 1;
```
-------------------------4630 sample_num
```sql
SELECT c.customer_name, c.payment_method 
FROM Customers c
WHERE EXISTS (
    SELECT 1 
    FROM Mailshot_Customers mc1 
    WHERE mc1.customer_id = c.customer_id 
    AND mc1.outcome_code = 'Order'
) 
AND EXISTS (
    SELECT 1 
    FROM Mailshot_Customers mc2 
    WHERE mc2.customer_id = c.customer_id 
    AND mc2.outcome_code = 'No Response'
)
GROUP BY c.customer_name, c.payment_method;
```
-------------------------4631 sample_num
```sql
SELECT P.premises_type, CA.address_type_code 
FROM Premises P 
JOIN Customer_Addresses CA ON P.premise_id = CA.premise_id;
```
-------------------------4632 sample_num
```sql
SELECT DISTINCT address_type_code FROM Customer_Addresses;
```
-------------------------4633 sample_num
```sql
SELECT T1.order_shipping_charges, T2.customer_id 
FROM Customer_Orders AS T1 
JOIN Customers AS T2 ON T1.customer_id = T2.customer_id 
WHERE T1.order_status_code IN ('Cancelled', 'Paid');
```
-------------------------4634 sample_num
```sql
SELECT DISTINCT c.customer_name 
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
WHERE co.shipping_method_code = 'FedEx' AND co.order_status_code = 'Paid';
```
-------------------------4635 sample_num
```sql
SELECT COUNT(*) FROM Course;
```
-------------------------4636 sample_num
```sql
SELECT COUNT(*) FROM Course;
```
-------------------------4637 sample_num
```sql
SELECT COUNT(*) 
FROM Course 
WHERE Credits > 2;
```
-------------------------4638 sample_num
```sql
SELECT COUNT(*) 
FROM Course 
WHERE Credits > 2;
```
-------------------------4639 sample_num
```sql
SELECT CName FROM Course WHERE Credits = 1;
```
-------------------------4640 sample_num
```sql
SELECT CName FROM Course WHERE Credits = 1;
```
-------------------------4641 sample_num
```sql
SELECT CName 
FROM Course 
WHERE Days = 'MTW';
```
However, if the 'Days' field uses a format that allows for multiple day abbreviations (like 'MWF', 'TR', etc.), and 'MTW' is not specifically listed, you would need to use a query like this to check for the presence of 'M', 'T', and 'W':

```sql
SELECT CName 
FROM Course 
WHERE Days LIKE '%M%' AND Days LIKE '%T%' AND Days LIKE '%W%';
```
-------------------------4642 sample_num
```sql
SELECT CName 
FROM Course 
WHERE Days = 'MTW';
```
-------------------------4643 sample_num
```sql
SELECT COUNT(*) 
FROM Department 
WHERE Division = 'AS';
```
-------------------------4644 sample_num
```sql
SELECT COUNT(*) 
FROM Department 
WHERE Division = 'AS';
```
-------------------------4645 sample_num
```sql
SELECT DPhone FROM Department WHERE Room = 268;
```
-------------------------4646 sample_num
```sql
SELECT DPhone FROM Department WHERE Room = 268;
```
-------------------------4647 sample_num
```sql
SELECT COUNT(DISTINCT StuID) 
FROM Enrolled_in 
WHERE Grade = 'B';
```
-------------------------4648 sample_num
```sql
SELECT COUNT(DISTINCT StuID) 
FROM Enrolled_in 
WHERE Grade = 'B';
```
However, to ensure that we are counting students who have had at least one "B" grade and not just those who only received a "B", you might want to use subquery or join:
```sql
SELECT COUNT(DISTINCT E.StuID) 
FROM Enrolled_in E
WHERE E.Grade = 'B';
``` 
But the above query will still count a student more than once if they have multiple 'B' grades. To fix this, you can use a subquery:
```sql
SELECT COUNT(*) 
FROM (
  SELECT DISTINCT StuID 
  FROM Enrolled_in 
  WHERE Grade = 'B'
) AS StudentsWithBs;
```
-------------------------4649 sample_num
```sql
SELECT MAX(gradepoint) AS Max_Grade_Point, MIN(gradepoint) AS Min_Grade_Point 
FROM Gradeconversion;
```
-------------------------4650 sample_num
```sql
SELECT MAX(gradepoint) AS Maximum, MIN(gradepoint) AS Minimum 
FROM Gradeconversion;
```
-------------------------4651 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Fname LIKE '%a%';
```
-------------------------4652 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Fname LIKE '%a%';
```
-------------------------4653 sample_num
```sql
SELECT Fname, Lname 
FROM Faculty 
WHERE Sex = 'M' AND Building = 'NEB';
```
-------------------------4654 sample_num
```sql
SELECT Fname, Lname 
FROM Faculty 
WHERE Sex = 'M' AND Building = 'NEB';
```
-------------------------4655 sample_num
```sql
SELECT Room 
FROM Faculty 
WHERE Rank = 'Professor' AND Building = 'NEB';
```
-------------------------4656 sample_num
```sql
SELECT T1.Room 
FROM Faculty AS T1 
JOIN Member_of AS T2 
ON T1.FacID = T2.FacID 
WHERE T1.Rank = 'Professor' AND T1.Building = 'NEB';
```
-------------------------4657 sample_num
```sql
SELECT DName 
FROM Department 
WHERE Building = 'Mergenthaler';
```
-------------------------4658 sample_num
```sql
SELECT DName FROM Department WHERE Building = 'Mergenthaler';
```
-------------------------4659 sample_num
```sql
SELECT * FROM Course ORDER BY Credits ASC;
```
-------------------------4660 sample_num
```sql
SELECT * FROM Course ORDER BY Credits ASC;
```
-------------------------4661 sample_num
```sql
SELECT CName FROM Course ORDER BY Credits;
```
-------------------------4662 sample_num
```sql
SELECT CName 
FROM Course 
ORDER BY Credits;
```
-------------------------4663 sample_num
```sql
SELECT Fname FROM Student ORDER BY Age DESC;
```
-------------------------4664 sample_num
```sql
SELECT Fname FROM Student ORDER BY Age DESC;
```
-------------------------4665 sample_num
```sql
SELECT LName 
FROM Student 
WHERE Sex = 'F' 
ORDER BY Age DESC;
```
-------------------------4666 sample_num
```sql
SELECT LName 
FROM Student 
WHERE Sex = 'F' 
ORDER BY Age DESC;
```
-------------------------4667 sample_num
```sql
SELECT Lname 
FROM Faculty 
WHERE Building = 'Barton' 
ORDER BY Lname ASC;
```
-------------------------4668 sample_num
```sql
SELECT Lname FROM Faculty WHERE Building = 'Barton' ORDER BY Lname;
```
-------------------------4669 sample_num
```sql
SELECT Fname 
FROM Faculty 
WHERE Rank = 'Professor' 
ORDER BY Fname ASC;
```
-------------------------4670 sample_num
```sql
SELECT Fname FROM Faculty WHERE Rank = 'Professor' ORDER BY Fname;
```
-------------------------4671 sample_num
```sql
SELECT DName
FROM Department
WHERE DNO = (
    SELECT DNO
    FROM Minor_in
    GROUP BY DNO
    ORDER BY COUNT(DNO) DESC
    LIMIT 1
)
```
```
-------------------------4672 sample_num
```sql
SELECT DName
FROM Department
WHERE DNO = (
    SELECT DNO
    FROM Minor_in
    GROUP BY DNO
    ORDER BY COUNT(*) DESC
    LIMIT 1
)
```
-------------------------4673 sample_num
```sql
SELECT DName 
FROM Department 
WHERE NOT EXISTS (
    SELECT * 
    FROM Minor_in 
    WHERE Department.DNO = Minor_in.DNO
);
```
-------------------------4674 sample_num
```sql
SELECT DName 
FROM Department 
WHERE DNO NOT IN (SELECT DNO FROM Minor_in)
```
```
-------------------------4675 sample_num
```sql
SELECT DName 
FROM Department 
WHERE DNO IN (
    SELECT DNO 
    FROM Member_of 
    GROUP BY DNO 
    ORDER BY COUNT(DNO) 
    LIMIT 1
)
```
```
-------------------------4676 sample_num
```sql
SELECT DName 
FROM Department 
WHERE DNO IN (
    SELECT DNO 
    FROM Member_of 
    GROUP BY DNO 
    ORDER BY COUNT(FacID) 
    LIMIT 1
)
```
-------------------------4677 sample_num
```sql
SELECT Rank, COUNT(*) AS Count 
FROM Faculty 
GROUP BY Rank 
ORDER BY Count ASC 
LIMIT 1;
```
-------------------------4678 sample_num
```sql
SELECT Rank 
FROM Faculty 
GROUP BY Rank 
ORDER BY COUNT(*) 
LIMIT 1;
```
-------------------------4679 sample_num
```sql
SELECT T2.Fname, T2.Lname 
FROM 
    (SELECT Instructor, COUNT(*) AS course_count 
     FROM Course 
     GROUP BY Instructor 
     ORDER BY course_count DESC 
     LIMIT 3) AS T1 
JOIN Faculty AS T2 
ON T1.Instructor = T2.FacID;
```
-------------------------4680 sample_num
```sql
SELECT T1.Fname, T1.Lname
FROM Faculty AS T1 
JOIN Course AS T2 ON T1.FacID = T2.Instructor
GROUP BY T1.FacID
ORDER BY COUNT(T2.CID) DESC
LIMIT 3;
```
-------------------------4681 sample_num
```sql
SELECT Building 
FROM Faculty 
WHERE FacID = (
    SELECT Instructor 
    FROM (
        SELECT Instructor, COUNT(*) as course_count 
        FROM Course 
        GROUP BY Instructor 
        ORDER BY course_count DESC 
        LIMIT 1
    ) as most_courses
)
```
```
-------------------------4682 sample_num
```sql
SELECT Building 
FROM Faculty 
WHERE FacID = (
    SELECT Instructor 
    FROM (
        SELECT Instructor, COUNT(*) AS course_count 
        FROM Course 
        GROUP BY Instructor 
        ORDER BY course_count DESC 
        LIMIT 1
    ) AS most_courses
)
```
-------------------------4683 sample_num
```sql
SELECT CName
FROM Course
WHERE CID IN (
    SELECT CID
    FROM Enrolled_in
    GROUP BY CID
    HAVING COUNT(*) >= 5
)
```
-------------------------4684 sample_num
```sql
SELECT CName
FROM Course
WHERE CID IN (
    SELECT CID
    FROM Enrolled_in
    GROUP BY CID
    HAVING COUNT(*) >= 5
)
```
-------------------------4685 sample_num
```sql
SELECT Faculty.Fname, Faculty.Lname 
FROM Faculty 
JOIN Course ON Faculty.FacID = Course.Instructor 
WHERE Course.CName = 'your_course_name';
```
Replace 'your_course_name' with the actual course name you are interested in.
-------------------------4686 sample_num
```sql
SELECT Faculty.Fname, Faculty.Lname 
FROM Faculty 
JOIN Course ON Faculty.FacID = Course.Instructor 
WHERE Course.CName = 'COMPUTER LITERACY';
```
-------------------------4687 sample_num
```sql
SELECT Department.DName, Course.Room 
FROM Course 
JOIN Department ON Course.DNO = Department.DNO 
WHERE Course.CName = 'INTRODUCTION TO COMPUTER SCIENCE';
```
-------------------------4688 sample_num
```sql
SELECT Department.DName, Department.Room 
FROM Department 
JOIN Course ON Department.DNO = Course.DNO 
WHERE Course.CName = 'INTRODUCTION TO COMPUTER SCIENCE';
```
-------------------------4689 sample_num
```sql
SELECT S.Fname, S.LName, G.gradepoint
FROM Student S
JOIN Enrolled_in E ON S.StuID = E.StuID
JOIN Gradeconversion G ON E.Grade = G.lettergrade;
```
-------------------------4690 sample_num
```sql
SELECT S.Fname, S.LName, G.gradepoint
FROM Student S
JOIN Enrolled_in E ON S.StuID = E.StuID
JOIN Gradeconversion G ON E.Grade = G.lettergrade;
```
-------------------------4691 sample_num
```sql
SELECT DISTINCT S.Fname
FROM Student S, Enrolled_in E, Gradeconversion G
WHERE S.StuID = E.StuID AND E.Grade = G.lettergrade AND G.gradepoint >= 3.8
``` 
However, to ensure correct operation with JOINs instead of outdated comma-separated approach, I would recommend this version:

```sql
SELECT DISTINCT S.Fname
FROM Student S
JOIN Enrolled_in E ON S.StuID = E.StuID 
JOIN Gradeconversion G ON E.Grade = G.lettergrade
WHERE G.gradepoint >= 3.8
```
-------------------------4692 sample_num
```sql
SELECT DISTINCT S.Fname
FROM Student S
JOIN Enrolled_in E ON S.StuID = E.StuID
JOIN Gradeconversion G ON E.Grade = G.lettergrade
WHERE G.gradepoint >= 3.8;
```
-------------------------4693 sample_num
```sql
SELECT Faculty.Fname, Faculty.Lname 
FROM Faculty, Member_of 
WHERE Faculty.FacID = Member_of.FacID AND Member_of.DNO = 520;
```
-------------------------4694 sample_num
```sql
SELECT Faculty.Fname, Faculty.Lname 
FROM Faculty 
JOIN Member_of 
ON Faculty.FacID = Member_of.FacID 
WHERE Member_of.DNO = 520;
```
-------------------------4695 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S, Minor_in M
WHERE S.StuID = M.StuID AND M.DNO = 140;
```
-------------------------4696 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S, Minor_in M 
WHERE S.StuID = M.StuID AND M.DNO = 140;
```
-------------------------4697 sample_num
```sql
SELECT Faculty.Lname 
FROM Faculty 
JOIN Member_of ON Faculty.FacID = Member_of.FacID 
JOIN Department ON Member_of.DNO = Department.DNO 
WHERE Department.DName = 'Computer Science';
```
-------------------------4698 sample_num
```sql
SELECT Faculty.Lname 
FROM Faculty 
JOIN Member_of ON Faculty.FacID = Member_of.FacID 
JOIN Department ON Member_of.DNO = Department.DNO 
WHERE Department.DName = 'Computer Science';
```
-------------------------4699 sample_num
```sql
SELECT AVG(Gradeconversion.gradepoint) 
FROM Student 
JOIN Enrolled_in ON Student.StuID = Enrolled_in.StuID 
JOIN Gradeconversion ON Enrolled_in.Grade = Gradeconversion.lettergrade 
WHERE Student.LName = 'Smith'
```
-------------------------4700 sample_num
```sql
SELECT AVG(Gradeconversion.gradepoint) 
FROM Student 
JOIN Enrolled_in ON Student.StuID = Enrolled_in.StuID 
JOIN Gradeconversion ON Enrolled_in.Grade = Gradeconversion.lettergrade 
WHERE Student.LName = 'Smith';
```
-------------------------4701 sample_num
```sql
SELECT MAX(T2.gradepoint) AS MaxGradePoint, MIN(T2.gradepoint) AS MinGradePoint 
FROM Student AS T1 
JOIN Enrolled_in AS T2 ON T1.StuID = T2.StuID 
JOIN Gradeconversion AS T3 ON T2.Grade = T3.lettergrade 
WHERE T1.city_code = 'NYC';
```
```
-------------------------4702 sample_num
```sql
SELECT MAX(T2.gradepoint) AS MaxGradepoint, MIN(T2.gradepoint) AS MinGradepoint 
FROM Enrolled_in AS T1 
JOIN Gradeconversion AS T2 
ON T1.Grade = T2.lettergrade 
JOIN Student AS T3 
ON T1.StuID = T3.StuID 
WHERE T3.city_code = 'NYC'
```
-------------------------4703 sample_num
```sql
SELECT CName 
FROM Course 
WHERE (Credits = 3 AND Hours = 0) OR (Credits = 1 AND Hours = 4);
``` 
However, the condition (Credits = 1 AND Hours = 4) might not make sense in real-world context since course with 1 credit usually does not have more hours than a course with 3 credits. You may want to rethink about the logic behind this query.
```
-------------------------4704 sample_num
```sql
SELECT CName 
FROM Course 
WHERE (Credits = 3) OR (Credits = 1 AND Hours = 4);
```
-------------------------4705 sample_num
```sql
SELECT DName 
FROM Department 
WHERE (Division = 'AS') OR (Division = 'EN' AND Building = 'NEB');
```
-------------------------4706 sample_num
```sql
SELECT DName 
FROM Department 
WHERE Division = 'AS' OR (Division = 'EN' AND Building = 'NEB');
```
-------------------------4707 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)
```
-------------------------4708 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE StuID NOT IN (SELECT StuID FROM Enrolled_in)
```
```
-------------------------4709 sample_num
```sql
SELECT product_id
FROM (
  SELECT product_id, SUM(total_amount_purchased) as total_amount
  FROM Product_Suppliers
  GROUP BY product_id
) as subquery
ORDER BY total_amount DESC
LIMIT 3;
```
-------------------------4710 sample_num
```sql
SELECT product_id 
FROM Product_Suppliers 
GROUP BY product_id 
ORDER BY SUM(total_amount_purchased) DESC 
LIMIT 3;
```
-------------------------4711 sample_num
```sql
SELECT product_id, product_type_code 
FROM Products 
WHERE product_price = (SELECT MIN(product_price) FROM Products);
```
-------------------------4712 sample_num
```sql
SELECT product_id, product_type_code 
FROM Products 
WHERE product_price = (SELECT MIN(product_price) FROM Products);
```
-------------------------4713 sample_num
```sql
SELECT COUNT(DISTINCT product_type_code) FROM Products;
```
-------------------------4714 sample_num
```sql
SELECT COUNT(DISTINCT product_type_code) FROM Products;
```
-------------------------4715 sample_num
```sql
SELECT Addresses.address_details 
FROM Addresses 
JOIN Customer_Addresses ON Addresses.address_id = Customer_Addresses.address_id 
WHERE Customer_Addresses.customer_id = 10;
```
-------------------------4716 sample_num
```sql
SELECT Addresses.address_details 
FROM Addresses 
JOIN Customer_Addresses ON Addresses.address_id = Customer_Addresses.address_id 
WHERE Customer_Addresses.customer_id = 10;
```
-------------------------4717 sample_num
```sql
SELECT S.staff_id, S.staff_gender
FROM Staff S
JOIN Staff_Department_Assignments SD ON S.staff_id = SD.staff_id
WHERE SD.job_title_code = 'Department Manager';
```
-------------------------4718 sample_num
```sql
SELECT s.staff_id, s.staff_gender
FROM Staff s
JOIN Staff_Department_Assignments sd ON s.staff_id = sd.staff_id
WHERE sd.job_title_code = 'Department Manager';
```
-------------------------4719 sample_num
```sql
SELECT payment_method_code, COUNT(*) AS number_of_customers
FROM Customers
GROUP BY payment_method_code;
```
-------------------------4720 sample_num
```sql
SELECT payment_method_code, COUNT(*) AS number_of_customers
FROM Customers
GROUP BY payment_method_code;
```
-------------------------4721 sample_num
```sql
SELECT product_id, COUNT(*) as order_count 
FROM Order_Items 
GROUP BY product_id 
ORDER BY order_count DESC 
LIMIT 1;
```
-------------------------4722 sample_num
```sql
SELECT product_id, COUNT(*) as frequency 
FROM Order_Items 
GROUP BY product_id 
ORDER BY frequency DESC 
LIMIT 1;
```
-------------------------4723 sample_num
```sql
SELECT C.customer_name, C.customer_phone, C.customer_email 
FROM Customers C 
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id 
GROUP BY C.customer_id, C.customer_name, C.customer_phone, C.customer_email 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------4724 sample_num
```sql
SELECT c.customer_name, c.customer_phone, c.customer_email 
FROM Customers c 
JOIN (
    SELECT customer_id, COUNT(*) as num_orders 
    FROM Customer_Orders 
    GROUP BY customer_id 
    ORDER BY num_orders DESC 
    LIMIT 1
) co 
ON c.customer_id = co.customer_id;
```
-------------------------4725 sample_num
```sql
SELECT product_type_code, AVG(product_price) 
FROM Products 
GROUP BY product_type_code;
```
-------------------------4726 sample_num
```sql
SELECT product_type_code, AVG(product_price) AS average_price
FROM Products
GROUP BY product_type_code;
```
-------------------------4727 sample_num
```sql
SELECT COUNT(*) 
FROM Department_Stores 
WHERE dept_store_chain_id = (
    SELECT dept_store_chain_id 
    FROM Department_Store_Chain 
    WHERE dept_store_chain_name = 'South'
);
```
-------------------------4728 sample_num
```sql
SELECT COUNT(*) 
FROM Department_Stores 
WHERE dept_store_chain_id = (
    SELECT dept_store_chain_id 
    FROM Department_Store_Chain 
    WHERE dept_store_chain_name = 'South'
);
```
-------------------------4729 sample_num
```sql
SELECT S.staff_name, SD.job_title_code 
FROM Staff S 
JOIN Staff_Department_Assignments SD 
ON S.staff_id = SD.staff_id 
WHERE SD.date_assigned_from = (SELECT MAX(date_assigned_from) FROM Staff_Department_Assignments);
```
-------------------------4730 sample_num
```sql
SELECT SD.staff_name, SD.job_title_code 
FROM Staff_Department_Assignments SDA 
JOIN Staff SD ON SDA.staff_id = SD.staff_id 
WHERE SDA.date_assigned_from = (
    SELECT MAX(date_assigned_from) 
    FROM Staff_Department_Assignments
);
```
-------------------------4731 sample_num
```sql
SELECT p.product_type_code, p.product_name, p.product_price
FROM Products p
JOIN Product_Suppliers ps ON p.product_id = ps.product_id
WHERE ps.supplier_id = 3;
```
-------------------------4732 sample_num
```sql
SELECT p.product_type_code, p.product_name, p.product_price
FROM Products p
JOIN Product_Suppliers ps ON p.product_id = ps.product_id
WHERE ps.supplier_id = 3;
```
-------------------------4733 sample_num
```sql
SELECT DISTINCT Customers.customer_name 
FROM Customers 
JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id 
WHERE Customer_Orders.order_status_code = 'Pending' 
ORDER BY Customers.customer_id;
```
-------------------------4734 sample_num
```sql
SELECT DISTINCT Customers.customer_name 
FROM Customers 
JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id 
WHERE Customer_Orders.order_status_code = 'Pending' 
ORDER BY Customers.customer_id;
```
-------------------------4735 sample_num
```sql
SELECT C.customer_name, A.address_details
FROM Customers C
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id
JOIN Customer_Addresses CA ON C.customer_id = CA.customer_id
JOIN Addresses A ON CA.address_id = A.address_id
WHERE CO.order_status_code IN ('New', 'Pending')
GROUP BY C.customer_id, C.customer_name, A.address_details
HAVING COUNT(DISTINCT CO.order_status_code) > 1;
```
-------------------------4736 sample_num
```sql
SELECT C.customer_name, A.address_details
FROM Customers C
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id
JOIN Customer_Addresses CA ON C.customer_id = CA.customer_id
JOIN Addresses A ON CA.address_id = A.address_id
WHERE CO.order_status_code IN ('New', 'Pending')
GROUP BY C.customer_id, C.customer_name, A.address_details
HAVING COUNT(DISTINCT CO.order_status_code) = 2;
```
-------------------------4737 sample_num
```sql
SELECT p.product_id 
FROM Products p 
JOIN Product_Suppliers ps ON p.product_id = ps.product_id 
WHERE ps.supplier_id = 2 AND p.product_price > (SELECT AVG(product_price) FROM Products)
```
-------------------------4738 sample_num
```sql
SELECT p.product_id 
FROM Products p 
JOIN Product_Suppliers ps ON p.product_id = ps.product_id 
WHERE ps.supplier_id = 2 AND p.product_price > (SELECT AVG(product_price) FROM Products)
```
-------------------------4739 sample_num
```sql
SELECT DS.dept_store_id, DS.store_name
FROM Department_Stores DS
JOIN Departments D ON DS.dept_store_id = D.dept_store_id
WHERE D.department_name IN ('marketing', 'managing')
GROUP BY DS.dept_store_id, DS.store_name
HAVING COUNT(DISTINCT D.department_name) = 2;
```
-------------------------4740 sample_num
```sql
SELECT T1.dept_store_id, T1.store_name 
FROM Department_Stores AS T1 
JOIN Departments AS T2 ON T1.dept_store_id = T2.dept_store_id 
WHERE T2.department_name = 'Marketing' 
INTERSECT 
SELECT T1.dept_store_id, T1.store_name 
FROM Department_Stores AS T1 
JOIN Departments AS T2 ON T1.dept_store_id = T2.dept_store_id 
WHERE T2.department_name = 'Managing'
```
-------------------------4741 sample_num
```sql
SELECT ds.dept_store_chain_id 
FROM Department_Stores ds
GROUP BY ds.dept_store_chain_id
ORDER BY COUNT(ds.dept_store_id) DESC
LIMIT 2;
```
-------------------------4742 sample_num
```sql
SELECT ds.dept_store_chain_id 
FROM Department_Stores ds
GROUP BY ds.dept_store_chain_id
ORDER BY COUNT(ds.dept_store_id) DESC
LIMIT 2;
```
-------------------------4743 sample_num
```sql
SELECT department_id 
FROM Staff_Department_Assignments 
GROUP BY department_id 
ORDER BY COUNT(staff_id) 
LIMIT 1;
```
-------------------------4744 sample_num
```sql
SELECT department_id 
FROM Staff_Department_Assignments 
GROUP BY department_id 
ORDER BY COUNT(staff_id) 
LIMIT 1;
```
-------------------------4745 sample_num
```sql
SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price 
FROM Products 
GROUP BY product_type_code;
```
-------------------------4746 sample_num
```sql
SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price 
FROM Products 
GROUP BY product_type_code;
```
-------------------------4747 sample_num
```sql
SELECT product_type_code 
FROM Products 
GROUP BY product_type_code 
HAVING AVG(product_price) > (SELECT AVG(product_price) FROM Products)
```
```
-------------------------4748 sample_num
```sql
SELECT product_type_code 
FROM Products 
GROUP BY product_type_code 
HAVING AVG(product_price) > (SELECT AVG(product_price) FROM Products);
```
-------------------------4749 sample_num
```sql
SELECT SD.staff_id, S.staff_name 
FROM Staff_Department_Assignments SD
JOIN Staff S ON SD.staff_id = S.staff_id
WHERE SD.date_assigned_to - SD.date_assigned_from = (
    SELECT MIN(date_assigned_to - date_assigned_from)
    FROM Staff_Department_Assignments
)
LIMIT 1;
```
-------------------------4750 sample_num
```sql
SELECT SD.staff_id, S.staff_name 
FROM Staff_Department_Assignments SD
JOIN Staff S ON SD.staff_id = S.staff_id 
WHERE SD.date_assigned_to - SD.date_assigned_from = (
    SELECT MIN(date_assigned_to - date_assigned_from) 
    FROM Staff_Department_Assignments
)
LIMIT 1;
```
-------------------------4751 sample_num
```sql
SELECT product_name, product_id 
FROM Products 
WHERE product_price BETWEEN 600 AND 700;
```
-------------------------4752 sample_num
```sql
SELECT product_name, product_id 
FROM Products 
WHERE product_price BETWEEN 600 AND 700;
```
-------------------------4753 sample_num
```sql
SELECT DISTINCT customer_id 
FROM Customer_Orders 
WHERE order_date > (SELECT MIN(order_date) 
					FROM Customer_Orders 
					WHERE order_status_code = 'Cancelled')
```
-------------------------4754 sample_num
```sql
SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date > (SELECT MIN(order_date) FROM Customer_Orders WHERE order_status_code = 'Cancelled')
```
-------------------------4755 sample_num
```sql
SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_from < (SELECT MIN(date_assigned_from) FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical') LIMIT 1;
```
-------------------------4756 sample_num
```sql
SELECT SD1.staff_id 
FROM Staff_Department_Assignments SD1
WHERE SD1.date_assigned_from < ALL (
    SELECT SD2.date_assigned_from 
    FROM Staff_Department_Assignments SD2 
    JOIN Staff S ON SD2.staff_id = S.staff_id 
    WHERE S.job_title_code = 'Clerical')
```
-------------------------4757 sample_num
```sql
SELECT customer_name, customer_id FROM Customers WHERE customer_address LIKE '%TN%';
```
-------------------------4758 sample_num
```sql
SELECT Customers.customer_name, Customers.customer_id 
FROM Customers 
JOIN Customer_Addresses ON Customers.customer_id = Customer_Addresses.customer_id 
JOIN Addresses ON Customer_Addresses.address_id = Addresses.address_id 
WHERE Addresses.address_details LIKE '%TN%';
```
-------------------------4759 sample_num
```sql
SELECT Staff.staff_name, Staff.staff_gender 
FROM Staff 
JOIN Staff_Department_Assignments ON Staff.staff_id = Staff_Department_Assignments.staff_id 
WHERE YEAR(Staff_Department_Assignments.date_assigned_from) = 2016;
```
-------------------------4760 sample_num
```sql
SELECT s.staff_name, s.staff_gender 
FROM Staff s
JOIN Staff_Department_Assignments sd ON s.staff_id = sd.staff_id
WHERE YEAR(sd.date_assigned_from) = 2016;
```
-------------------------4761 sample_num
```sql
SELECT SD.staff_name 
FROM Staff AS S 
JOIN Staff_Department_Assignments AS SD 
ON S.staff_id = SD.staff_id 
GROUP BY SD.staff_id 
HAVING COUNT(SD.job_title_code) > 1;
```
-------------------------4762 sample_num
```sql
SELECT SD.staff_name 
FROM Staff AS S 
JOIN Staff_Department_Assignments AS SD 
ON S.staff_id = SD.staff_id 
GROUP BY SD.staff_id 
HAVING COUNT(SD.job_title_code) > 1;
```
-------------------------4763 sample_num
```sql
SELECT S.supplier_name, S.supplier_phone 
FROM Suppliers S 
JOIN Supplier_Addresses SA ON S.supplier_id = SA.supplier_id 
JOIN Addresses A ON SA.address_id = A.address_id 
ORDER BY A.address_details ASC;
```
-------------------------4764 sample_num
```sql
SELECT Suppliers.supplier_name, Addresses.address_details, Suppliers.supplier_phone
FROM Suppliers
JOIN Supplier_Addresses ON Suppliers.supplier_id = Supplier_Addresses.supplier_id
JOIN Addresses ON Supplier_Addresses.address_id = Addresses.address_id
ORDER BY Addresses.address_details ASC;
```
-------------------------4765 sample_num
```sql
SELECT Customers.customer_phone FROM Customers
UNION
SELECT Suppliers.supplier_phone FROM Suppliers
```
-------------------------4766 sample_num
```sql
SELECT Customers.customer_phone FROM Customers
UNION
SELECT Suppliers.supplier_phone FROM Suppliers
```
-------------------------4767 sample_num
```sql
SELECT product_id
FROM (
    SELECT product_id, COUNT(product_id) as order_count
    FROM Order_Items
    GROUP BY product_id
    HAVING COUNT(product_id) > 3
)
UNION
SELECT product_id
FROM (
    SELECT product_id, total_amount_purchased
    FROM Product_Suppliers
    WHERE total_amount_purchased > 80000
)
``` 
However, this SQL is not completely correct because it will return products that meet either condition separately, and a product can appear in both subqueries, which means it will be duplicated in the result. To fix this issue, you should use UNION ALL or simply combine both conditions into one query like this:

```sql
SELECT DISTINCT oi.product_id
FROM Order_Items oi
GROUP BY oi.product_id
HAVING COUNT(oi.product_id) > 3
UNION ALL
SELECT DISTINCT ps.product_id
FROM Product_Suppliers ps
WHERE ps.total_amount_purchased > 80000
```

Or

```sql
SELECT DISTINCT product_id
FROM (
    SELECT product_id, COUNT(product_id) as order_count
    FROM Order_Items
    GROUP BY product_id
    HAVING COUNT(product_id) > 3
)
OR (
    SELECT product_id
    FROM Product_Suppliers
    WHERE total_amount_purchased > 80000
)
``` 

But the correct syntax for the OR operator in SQL for combining two subqueries doesn't exist. So, you have to use UNION ALL instead.
Final correct answer: 

```sql
SELECT DISTINCT oi.product_id
FROM Order_Items oi
GROUP BY oi.product_id
HAVING COUNT(oi.product_id) > 3
UNION ALL
SELECT DISTINCT ps.product_id
FROM Product_Suppliers ps
WHERE ps.total_amount_purchased > 80000
```
-------------------------4768 sample_num
```sql
SELECT product_id
FROM (
  SELECT product_id, COUNT(product_id) as order_count, SUM(total_amount_purchased) as total_purchased
  FROM Order_Items
  JOIN Product_Suppliers ON Order_Items.product_id = Product_Suppliers.product_id
  GROUP BY product_id
) as subquery
WHERE order_count > 3 OR total_purchased > 80000;
```
Note: This SQL might not work in some DBMS as the aggregate functions are used in the WHERE clause which is not allowed in some DBMS. In such cases, you can use HAVING clause instead of WHERE clause.

Corrected Query:
```sql
SELECT product_id
FROM (
  SELECT product_id, COUNT(product_id) as order_count, SUM(total_amount_purchased) as total_purchased
  FROM Order_Items
  JOIN Product_Suppliers ON Order_Items.product_id = Product_Suppliers.product_id
  GROUP BY product_id
) as subquery
HAVING order_count > 3 OR total_purchased > 80000;
```
-------------------------4769 sample_num
```sql
SELECT product_id, product_name 
FROM Products 
WHERE product_price < 600 OR product_price > 900;
```
-------------------------4770 sample_num
```sql
SELECT product_id, product_name 
FROM Products 
WHERE product_price < 600 OR product_price > 900;
```
-------------------------4771 sample_num
```sql
SELECT supplier_id 
FROM (
  SELECT supplier_id, AVG(total_amount_purchased) as average_amount 
  FROM Product_Suppliers 
  GROUP BY supplier_id
) AS avg_amounts
WHERE average_amount > 50000 OR average_amount < 30000;
```
-------------------------4772 sample_num
```sql
SELECT supplier_id 
FROM (
  SELECT supplier_id, AVG(total_amount_purchased) as average_amount 
  FROM Product_Suppliers 
  GROUP BY supplier_id
) as avg_amounts 
WHERE average_amount > 50000 OR average_amount < 30000;
```
-------------------------4773 sample_num
```sql
SELECT AVG(total_amount_purchased), AVG(total_value_purchased)
FROM (
    SELECT product_id, supplier_id, total_amount_purchased, total_value_purchased
    FROM Product_Suppliers
    WHERE supplier_id = (
        SELECT supplier_id
        FROM (
            SELECT supplier_id, COUNT(product_id) AS num_products_supplied
            FROM Product_Suppliers
            GROUP BY supplier_id
            ORDER BY num_products_supplied DESC
            LIMIT 1
        ) AS subquery
    )
) AS subquery2
```
```
-------------------------4774 sample_num
```sql
SELECT AVG(total_amount_purchased), AVG(total_value_purchased)
FROM (
    SELECT supplier_id, SUM(total_amount_purchased) as total_amount_purchased, SUM(total_value_purchased) as total_value_purchased
    FROM Product_Suppliers
    GROUP BY supplier_id
    ORDER BY COUNT(product_id) DESC
    LIMIT 1
) as subquery;
```
-------------------------4775 sample_num
```sql
SELECT MAX(customer_code) AS largest_customer_code, MIN(customer_code) AS smallest_customer_code FROM Customers;
```
-------------------------4776 sample_num
```sql
SELECT MAX(customer_code) AS max_customer_code, MIN(customer_code) AS min_customer_code FROM Customers;
```
-------------------------4777 sample_num
```sql
SELECT DISTINCT Customers.customer_name 
FROM Customers 
JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id 
JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id 
JOIN Products ON Order_Items.product_id = Products.product_id 
WHERE Products.product_name = 'keyboard';
```
-------------------------4778 sample_num
```sql
SELECT DISTINCT c.customer_name
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
JOIN Order_Items oi ON co.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
WHERE p.product_name = 'keyboard';
```
-------------------------4779 sample_num
```sql
SELECT DISTINCT Suppliers.supplier_name, Suppliers.supplier_phone 
FROM Suppliers 
JOIN Product_Suppliers ON Suppliers.supplier_id = Product_Suppliers.supplier_id 
JOIN Products ON Product_Suppliers.product_id = Products.product_id 
WHERE Products.product_name = 'red jeans';
```
-------------------------4780 sample_num
```sql
SELECT DISTINCT T2.supplier_name, T2.supplier_phone 
FROM Products AS T1 
JOIN Product_Suppliers AS T3 ON T1.product_id = T3.product_id 
JOIN Suppliers AS T2 ON T2.supplier_id = T3.supplier_id 
WHERE T1.product_name = 'red jeans';
```
-------------------------4781 sample_num
```sql
SELECT product_type_code, MAX(product_price) AS highest_price, MIN(product_price) AS lowest_price 
FROM Products 
GROUP BY product_type_code 
ORDER BY product_type_code ASC;
```
-------------------------4782 sample_num
```sql
SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price 
FROM Products 
GROUP BY product_type_code 
ORDER BY product_type_code;
```
-------------------------4783 sample_num
```sql
SELECT order_id, customer_id 
FROM Customer_Orders 
WHERE order_status_code = 'Cancelled' 
ORDER BY order_date;
```
-------------------------4784 sample_num
```sql
SELECT order_id, customer_id 
FROM Customer_Orders 
WHERE order_status_code = 'Cancelled' 
ORDER BY order_date;
```
-------------------------4785 sample_num
```sql
SELECT P.product_name
FROM Products P
JOIN Order_Items OI ON P.product_id = OI.product_id
JOIN Customer_Orders CO ON OI.order_id = CO.order_id
GROUP BY P.product_id, P.product_name
HAVING COUNT(DISTINCT CO.customer_id) >= 2;
```
-------------------------4786 sample_num
```sql
SELECT DISTINCT p.product_name 
FROM Products p 
JOIN Order_Items oi ON p.product_id = oi.product_id 
JOIN Customer_Orders co ON oi.order_id = co.order_id 
GROUP BY p.product_id 
HAVING COUNT(DISTINCT co.customer_id) >= 2;
```
-------------------------4787 sample_num
```sql
SELECT c.customer_name
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
JOIN Order_Items oi ON co.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
GROUP BY c.customer_name
HAVING COUNT(DISTINCT p.product_id) >= 3;
```
-------------------------4788 sample_num
```sql
SELECT DISTINCT c.customer_name
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
JOIN Order_Items oi ON co.order_id = oi.order_id
GROUP BY c.customer_id, c.customer_name
HAVING COUNT(DISTINCT oi.product_id) >= 3;
```
-------------------------4789 sample_num
```sql
SELECT s.staff_name, s.staff_gender 
FROM Staff s 
JOIN Staff_Department_Assignments sd 
ON s.staff_id = sd.staff_id 
WHERE sd.job_title_code = 'Sales Person' 
AND s.staff_id NOT IN (
    SELECT staff_id 
    FROM Staff_Department_Assignments 
    WHERE job_title_code = 'Clerical Staff'
)
GROUP BY s.staff_id;
```
-------------------------4790 sample_num
```sql
SELECT s.staff_name, s.staff_gender 
FROM Staff s 
JOIN Staff_Department_Assignments sd 
ON s.staff_id = sd.staff_id 
WHERE sd.job_title_code = 'Sales Person' 
AND s.staff_id NOT IN (
    SELECT staff_id 
    FROM Staff_Department_Assignments 
    WHERE job_title_code = 'Clerical Staff'
)
GROUP BY s.staff_id;
```
-------------------------4791 sample_num
```sql
SELECT customer_id, customer_name 
FROM Customers 
WHERE customer_address LIKE '%WY%' 
AND payment_method_code != 'CreditCard';
```
-------------------------4792 sample_num
```sql
SELECT customer_id, customer_name 
FROM Customers 
WHERE customer_address LIKE '%WY%' 
AND payment_method_code != 'CreditCard';
```
-------------------------4793 sample_num
```sql
SELECT AVG(product_price) 
FROM Products 
WHERE product_type_code = 'Clothes';
```
-------------------------4794 sample_num
```sql
SELECT AVG(product_price) 
FROM Products 
WHERE product_type_code = 'Clothes';
```
-------------------------4795 sample_num
```sql
SELECT product_name
FROM Products
WHERE product_type_code = 'Hardware'
ORDER BY product_price DESC
LIMIT 1;
```
-------------------------4796 sample_num
```sql
SELECT product_name 
FROM Products 
WHERE product_price = (SELECT MAX(product_price) FROM Products WHERE product_type_code = 'Hardware');
```
-------------------------4797 sample_num
```sql
SELECT COUNT(*) FROM aircraft;
```
-------------------------4798 sample_num
```sql
SELECT COUNT(*) FROM aircraft;
```
-------------------------4799 sample_num
```sql
SELECT Description FROM aircraft;
```
-------------------------4800 sample_num
```sql
SELECT Description FROM aircraft;
```
-------------------------4801 sample_num
```sql
SELECT AVG(International_Passengers) FROM airport;
```
-------------------------4802 sample_num
```sql
SELECT AVG(International_Passengers) FROM airport;
```
-------------------------4803 sample_num
```sql
SELECT International_Passengers, Domestic_Passengers 
FROM airport 
WHERE Airport_Name = 'London Heathrow';
```
-------------------------4804 sample_num
```sql
SELECT International_Passengers, Domestic_Passengers 
FROM airport 
WHERE Airport_Name = 'London Heathrow';
```
-------------------------4805 sample_num
```sql
SELECT SUM(Domestic_Passengers) 
FROM airport 
WHERE Airport_Name LIKE '%London%';
```
-------------------------4806 sample_num
```sql
SELECT SUM(Domestic_Passengers) 
FROM airport 
WHERE Airport_Name LIKE '%London%';
```
-------------------------4807 sample_num
```sql
SELECT MAX(Transit_Passengers) AS Max_Transit_Passengers, MIN(Transit_Passengers) AS Min_Transit_Passengers FROM airport;
```
-------------------------4808 sample_num
```sql
SELECT MAX(Transit_Passengers) AS Max_Transit_Passengers, MIN(Transit_Passengers) AS Min_Transit_Passengers FROM airport;
```
-------------------------4809 sample_num
```sql
SELECT Name FROM pilot WHERE Age >= 25;
```
-------------------------4810 sample_num
```sql
SELECT Name FROM pilot WHERE Age >= 25;
```
-------------------------4811 sample_num
```sql
SELECT Name 
FROM pilot 
ORDER BY Name ASC;
```
-------------------------4812 sample_num
```sql
SELECT Name FROM pilot ORDER BY Name ASC;
```
-------------------------4813 sample_num
```sql
SELECT Name 
FROM pilot 
WHERE Age <= 30 
ORDER BY Name DESC;
```
-------------------------4814 sample_num
```sql
SELECT Name 
FROM pilot 
WHERE Age <= 30 
ORDER BY Name DESC;
```
-------------------------4815 sample_num
```sql
SELECT T3.Aircraft 
FROM airport AS T1 
JOIN airport_aircraft AS T2 ON T1.Airport_ID = T2.Airport_ID 
JOIN aircraft AS T3 ON T2.Aircraft_ID = T3.Aircraft_ID 
WHERE T1.Airport_Name = "London Gatwick"
```
-------------------------4816 sample_num
```sql
SELECT T3.Aircraft 
FROM airport_aircraft AS T1 
JOIN airport AS T2 ON T1.Airport_ID = T2.Airport_ID 
JOIN aircraft AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID 
WHERE T2.Airport_Name = 'London Gatwick'
```
-------------------------4817 sample_num
```sql
SELECT T3.Aircraft, T3.Description 
FROM airport AS T1 
JOIN airport_aircraft AS T2 ON T1.Airport_ID = T2.Airport_ID 
JOIN aircraft AS T3 ON T2.Aircraft_ID = T3.Aircraft_ID 
WHERE T1.Total_Passengers > 10000000;
```
-------------------------4818 sample_num
```sql
SELECT T3.Aircraft, T3.Description 
FROM airport AS T1 
JOIN airport_aircraft AS T2 ON T1.Airport_ID = T2.Airport_ID 
JOIN aircraft AS T3 ON T2.Aircraft_ID = T3.Aircraft_ID 
WHERE T1.Total_Passengers > 10000000;
```
-------------------------4819 sample_num
```sql
SELECT AVG(T3.Total_Passengers) 
FROM airport_aircraft AS T1 
JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID 
JOIN airport AS T3 ON T1.Airport_ID = T3.Airport_ID 
WHERE T2.Aircraft = 'Robinson R-22';
```
-------------------------4820 sample_num
```sql
SELECT AVG(T1.Total_Passengers) 
FROM airport AS T1 
JOIN airport_aircraft AS T2 ON T1.Airport_ID = T2.Airport_ID 
JOIN aircraft AS T3 ON T2.Aircraft_ID = T3.Aircraft_ID 
WHERE T3.Aircraft = 'Robinson R-22';
```
-------------------------4821 sample_num
```sql
SELECT match.Location, aircraft.Aircraft 
FROM match 
JOIN aircraft ON match.Winning_Aircraft = aircraft.Aircraft_ID;
```
-------------------------4822 sample_num
```sql
SELECT T2.Location, T3.Aircraft FROM match AS T1 JOIN aircraft AS T3 ON T1.Winning_Aircraft = T3.Aircraft_ID JOIN match AS T2 ON T1.Round = T2.Round;
```
-------------------------4823 sample_num
```sql
SELECT T1.Aircraft 
FROM aircraft AS T1 
JOIN match AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft 
GROUP BY T2.Winning_Aircraft 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------4824 sample_num
```sql
SELECT T1.Aircraft 
FROM aircraft AS T1 
JOIN match AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft 
GROUP BY T2.Winning_Aircraft 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------4825 sample_num
```sql
SELECT A.Aircraft, COUNT(M.Winning_Aircraft) AS Times_Won
FROM aircraft A 
JOIN match M ON A.Aircraft_ID = M.Winning_Aircraft
GROUP BY A.Aircraft;
```
-------------------------4826 sample_num
```sql
SELECT Aircraft, COUNT(*) AS Times_Won
FROM match
JOIN aircraft ON match.Winning_Aircraft = aircraft.Aircraft_ID
GROUP BY Aircraft;
```
-------------------------4827 sample_num
```sql
SELECT Name FROM pilot ORDER BY Age DESC;
```
-------------------------4828 sample_num
```sql
SELECT Name FROM pilot ORDER BY Age DESC;
```
-------------------------4829 sample_num
```sql
SELECT A.Aircraft 
FROM aircraft A 
JOIN match M ON A.Aircraft_ID = M.Winning_Aircraft 
GROUP BY A.Aircraft 
HAVING COUNT(M.Round) >= 2;
```
-------------------------4830 sample_num
```sql
SELECT T1.Aircraft 
FROM aircraft AS T1 
JOIN match AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft 
GROUP BY T2.Winning_Aircraft 
HAVING COUNT(*) >= 2;
```
-------------------------4831 sample_num
```sql
SELECT Aircraft 
FROM aircraft 
WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM match)
```
```
-------------------------4832 sample_num
```sql
SELECT Aircraft 
FROM aircraft 
WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM match)
```
-------------------------4833 sample_num
```sql
SELECT T3.Aircraft 
FROM airport_aircraft AS T1 
JOIN aircraft AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID 
JOIN airport AS T2 ON T1.Airport_ID = T2.Airport_ID 
WHERE T2.Airport_Name = 'London Heathrow' 
INTERSECT 
SELECT T3.Aircraft 
FROM airport_aircraft AS T1 
JOIN aircraft AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID 
JOIN airport AS T2 ON T1.Airport_ID = T2.Airport_ID 
WHERE T2.Airport_Name = 'London Gatwick'
```
-------------------------4834 sample_num
```sql
SELECT T3.Aircraft 
FROM airport_aircraft AS T1 
JOIN airport AS T2 ON T1.Airport_ID = T2.Airport_ID 
JOIN aircraft AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID 
WHERE T2.Airport_Name = 'London Heathrow' 
INTERSECT 
SELECT T3.Aircraft 
FROM airport_aircraft AS T1 
JOIN airport AS T2 ON T1.Airport_ID = T2.Airport_ID 
JOIN aircraft AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID 
WHERE T2.Airport_Name = 'Gatwick'
```
-------------------------4835 sample_num
```sql
SELECT * FROM airport 
WHERE International_Passengers = (SELECT MAX(International_Passengers) FROM airport);
```
-------------------------4836 sample_num
```sql
SELECT * FROM airport WHERE International_Passengers = (SELECT MAX(International_Passengers) FROM airport)
```
-------------------------4837 sample_num
```sql
SELECT p.Name, p.Age 
FROM pilot p
JOIN match m ON p.Pilot_Id = m.Winning_Pilot 
WHERE p.Age < 30 
GROUP BY p.Pilot_Id 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------4838 sample_num
```sql
SELECT p.Name, p.Age 
FROM pilot p
JOIN match m ON p.Pilot_Id = m.Winning_Pilot
WHERE p.Age < 30
GROUP BY p.Pilot_Id, p.Name, p.Age
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------4839 sample_num
```sql
SELECT T1.Name, T1.Age 
FROM pilot AS T1 
JOIN match AS T2 ON T1.Pilot_Id = T2.Winning_Pilot 
WHERE T1.Age = (SELECT MIN(Age) FROM pilot WHERE Pilot_Id IN (SELECT Winning_Pilot FROM match))
```
-------------------------4840 sample_num
```sql
SELECT T1.Name, T1.Age 
FROM pilot AS T1 
JOIN match AS T2 ON T1.Pilot_Id = T2.Winning_Pilot 
WHERE T1.Age = (SELECT MIN(Age) FROM pilot WHERE Pilot_Id IN (SELECT Winning_Pilot FROM match))
```
-------------------------4841 sample_num
```sql
SELECT p.Name 
FROM pilot p 
WHERE NOT EXISTS (
    SELECT * 
    FROM match m 
    WHERE m.Winning_Pilot = p.Pilot_Id AND m.Country = 'Australia'
);
```
-------------------------4842 sample_num
```sql
SELECT p.Name 
FROM pilot p 
WHERE NOT EXISTS (
    SELECT * 
    FROM match m 
    WHERE m.Winning_Pilot = p.Pilot_Id AND m.Country = 'Australia'
);
```
-------------------------4843 sample_num
```sql
SELECT Properties.property_id, COUNT(Residents.resident_id) AS Resident_Count
FROM Properties
LEFT JOIN Residents ON Properties.property_id = Residents.property_id
GROUP BY Properties.property_id;
```
-------------------------4844 sample_num
```sql
SELECT DISTINCT T2.service_type_code 
FROM Organizations AS T1 
JOIN Services AS T2 ON T1.organization_id = T2.organization_id 
WHERE T1.organization_details = 'Denesik and Sons Party';
```
-------------------------4845 sample_num
```sql
SELECT R.resident_id, R.other_details, COUNT(RS.service_id) AS Service_Count
FROM Residents AS R
JOIN Residents_Services AS RS ON R.resident_id = RS.resident_id
GROUP BY R.resident_id, R.other_details
ORDER BY Service_Count DESC;
```
-------------------------4846 sample_num
```sql
SELECT S.service_id, S.service_details, COUNT(*) AS Number_of_Provision 
FROM Services S 
JOIN Residents_Services RS ON S.service_id = RS.service_id 
GROUP BY S.service_id, S.service_details 
ORDER BY Number_of_Provision DESC 
LIMIT 1;
```
-------------------------4847 sample_num
```sql
SELECT T1.thing_id, T1.Type_of_Thing_Code, T2.organization_details 
FROM Things AS T1 
JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id;
```
-------------------------4848 sample_num
```sql
SELECT c.customer_id, c.customer_details
FROM Customers c
JOIN Customer_Events ce ON c.customer_id = ce.customer_id
GROUP BY c.customer_id, c.customer_details
HAVING COUNT(ce.Customer_Event_ID) >= 3;
```
-------------------------4849 sample_num
```sql
SELECT Customers.customer_id, Customers.customer_details, Customer_Events.date_moved_in 
FROM Customers 
JOIN Customer_Events ON Customers.customer_id = Customer_Events.customer_id;
```
-------------------------4850 sample_num
```sql
SELECT CE.Customer_Event_ID, CE.property_id 
FROM Customer_Events CE
JOIN Customer_Event_Notes CEN ON CE.Customer_Event_ID = CEN.Customer_Event_ID
GROUP BY CE.Customer_Event_ID, CE.property_id
HAVING COUNT(CEN.Customer_Event_Note_ID) BETWEEN 1 AND 3;
```
-------------------------4851 sample_num
```sql
SELECT DISTINCT T1.thing_id, T1.Type_of_Thing_Code 
FROM Things AS T1 
JOIN Timed_Status_of_Things AS T2 ON T1.thing_id = T2.thing_id 
WHERE T2.Status_of_Thing_Code = 'Close' OR T2.Date_and_Date < '2017-06-19 02:59:21';
```
-------------------------4852 sample_num
```sql
SELECT COUNT(DISTINCT T2.Location_Code) 
FROM Things AS T1 
JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id 
WHERE T1.service_details = 'Unsatisfied';
```
-------------------------4853 sample_num
```sql
SELECT COUNT(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things;
```
-------------------------4854 sample_num
```sql
SELECT organization_id FROM Organizations WHERE organization_id NOT IN (SELECT parent_organization_id FROM Organizations);
```
-------------------------4855 sample_num
```sql
SELECT MAX(date_moved_in) AS Last_Move_In_Date FROM Residents;
```
-------------------------4856 sample_num
```sql
SELECT resident_id, other_details 
FROM Residents 
WHERE other_details LIKE '%Miss%';
```
-------------------------4857 sample_num
```sql
SELECT Customer_Event_ID, date_moved_in, property_id 
FROM Customer_Events;
```
-------------------------4858 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Events)
```
-------------------------4859 sample_num
```sql
SELECT DISTINCT date_moved_in FROM Residents;
```
-------------------------4860 sample_num
```sql
SELECT COUNT(*) FROM school
```
-------------------------4861 sample_num
```sql
SELECT COUNT(*) FROM school
```
-------------------------4862 sample_num
```sql
SELECT Location FROM school ORDER BY Enrollment ASC;
```
-------------------------4863 sample_num
```sql
SELECT Location FROM school ORDER BY Enrollment ASC;
```
-------------------------4864 sample_num
```sql
SELECT Location 
FROM school 
ORDER BY Founded DESC;
```
-------------------------4865 sample_num
```sql
SELECT Location 
FROM school 
ORDER BY Founded DESC;
```
-------------------------4866 sample_num
```sql
SELECT Enrollment FROM school WHERE Denomination != 'Catholic'
```
-------------------------4867 sample_num
```sql
SELECT Enrollment
FROM school
WHERE Denomination <> 'Catholic';
```
-------------------------4868 sample_num
```sql
SELECT AVG(Enrollment) FROM school;
```
-------------------------4869 sample_num
```sql
SELECT AVG(Enrollment) FROM school;
```
-------------------------4870 sample_num
```sql
SELECT DISTINCT Team FROM player ORDER BY Team ASC;
```
-------------------------4871 sample_num
```sql
SELECT p.Player, t.Team 
FROM player p
JOIN school_details t ON p.School_ID = t.School_ID
ORDER BY t.Team ASC;
```
-------------------------4872 sample_num
```sql
SELECT COUNT(DISTINCT Position) FROM player;
```
-------------------------4873 sample_num
```sql
SELECT COUNT(DISTINCT Position) FROM player;
```
-------------------------4874 sample_num
```sql
SELECT T.Player, T.Team 
FROM player AS T 
WHERE T.Age = (SELECT MAX(Age) FROM player);
```
-------------------------4875 sample_num
```sql
SELECT T.Player, T.Team 
FROM player T 
JOIN (SELECT School_ID, MAX(Age) as MaxAge 
      FROM player 
      GROUP BY School_ID) T2 
ON T.Age = T2.MaxAge AND T.School_ID = T2.School_ID;
```
Note: This will give you the oldest player per team. If you want to know the team with the overall oldest player, use this query:
```sql
SELECT Player, Team 
FROM player 
WHERE Age = (SELECT MAX(Age) FROM player);
```
-------------------------4876 sample_num
```sql
SELECT T.Player, T.Team 
FROM (
    SELECT Player, Team, Age, 
           ROW_NUMBER() OVER (ORDER BY Age DESC) as row_num
    FROM player
) AS T
WHERE T.row_num <= 5;
```
-------------------------4877 sample_num
```sql
SELECT T.Player, T.Team 
FROM (
    SELECT Player, Team, AGE 
    FROM player 
    ORDER BY Age DESC 
    LIMIT 5
) AS T;
```
Note: This will only give you the top 5 oldest players and their respective teams, but not the team names without the players. If you want the unique team names of the 5 oldest players, you may use below query.
```sql
SELECT DISTINCT Team 
FROM player 
WHERE Player_ID IN(
    SELECT Player_ID 
    FROM (
        SELECT Player_ID
        FROM player
        ORDER BY Age DESC
        LIMIT 5
    ) AS T
);
```
-------------------------4878 sample_num
```sql
SELECT player.Player, player.Team, school.Location 
FROM player 
JOIN school ON player.School_ID = school.School_ID;
```
-------------------------4879 sample_num
```sql
SELECT T1.Team, T2.Location 
FROM player AS T1 
JOIN school AS T2 
ON T1.School_ID = T2.School_ID;
```
-------------------------4880 sample_num
```sql
SELECT T1.Location 
FROM school AS T1 
JOIN player AS T2 
ON T1.School_ID = T2.School_ID 
GROUP BY T1.School_ID 
HAVING COUNT(T2.Player_ID) > 1;
```
-------------------------4881 sample_num
```sql
SELECT T1.Location 
FROM school AS T1 
JOIN player AS T2 
ON T1.School_ID = T2.School_ID 
GROUP BY T1.School_ID 
HAVING COUNT(T2.Player_ID) > 1;
```
-------------------------4882 sample_num
```sql
SELECT T1.Denomination 
FROM school AS T1 
JOIN player AS T2 
ON T1.School_ID = T2.School_ID 
GROUP BY T1.Denomination 
ORDER BY COUNT(T2.Player_ID) DESC 
LIMIT 1;
```
-------------------------4883 sample_num
```sql
SELECT T1.Denomination 
FROM school AS T1 
JOIN player AS T2 
ON T1.School_ID = T2.School_ID 
GROUP BY T1.Denomination 
ORDER BY COUNT(T2.Player_ID) DESC 
LIMIT 1;
```
-------------------------4884 sample_num
```sql
SELECT T1.Location, T2.Nickname 
FROM school AS T1 
JOIN school_details AS T2 ON T1.School_ID = T2.School_ID;
```
-------------------------4885 sample_num
```sql
SELECT T1.Location, T2.Nickname 
FROM school AS T1 
JOIN school_details AS T2 
ON T1.School_ID = T2.School_ID;
```
-------------------------4886 sample_num
```sql
SELECT Denomination, COUNT(School_ID) AS Num_Schools
FROM school
GROUP BY Denomination;
```
-------------------------4887 sample_num
```sql
SELECT Denomination, COUNT(School_ID) 
FROM school 
GROUP BY Denomination;
```
-------------------------4888 sample_num
```sql
SELECT Denomination, COUNT(School_ID) as Num_Schools
FROM school
GROUP BY Denomination
ORDER BY Num_Schools DESC;
```
-------------------------4889 sample_num
```sql
SELECT Denomination, COUNT(School_ID) as School_Count
FROM school
GROUP BY Denomination
ORDER BY School_Count DESC;
```
-------------------------4890 sample_num
```sql
SELECT T1.School_Colors 
FROM school AS T1 
JOIN school_details AS T2 ON T1.School_ID = T2.School_ID 
WHERE T1.Enrollment = (SELECT MAX(Enrollment) FROM school)
```
-------------------------4891 sample_num
```sql
SELECT School_Colors FROM school WHERE Enrollment = (SELECT MAX(Enrollment) FROM school)
```
-------------------------4892 sample_num
```sql
SELECT Location 
FROM school 
WHERE School_ID NOT IN (SELECT School_ID FROM player)
```
```
-------------------------4893 sample_num
```sql
SELECT Location 
FROM school 
WHERE School_ID NOT IN (SELECT School_ID FROM player)
```
-------------------------4894 sample_num
```sql
SELECT Denomination 
FROM school 
WHERE Founded < 1890 
INTERSECT 
SELECT Denomination 
FROM school 
WHERE Founded > 1900;
```
-------------------------4895 sample_num
```sql
SELECT Denomination 
FROM school 
WHERE Founded < 1890 
INTERSECT 
SELECT Denomination 
FROM school 
WHERE Founded > 1900;
```
-------------------------4896 sample_num
```sql
SELECT T1.Nickname FROM school_details AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Division != 'Division 1'
```
-------------------------4897 sample_num
```sql
SELECT T1.Nickname FROM school_details AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Division != '1'
```
-------------------------4898 sample_num
```sql
SELECT Denomination 
FROM school 
GROUP BY Denomination 
HAVING COUNT(*) > 1;
```
-------------------------4899 sample_num
```sql
SELECT Denomination, COUNT(*) 
FROM school 
GROUP BY Denomination 
HAVING COUNT(*) > 1;
```
-------------------------4900 sample_num
```sql
SELECT DISTINCT District_name 
FROM district 
ORDER BY City_Area DESC;
```
-------------------------4901 sample_num
```sql
SELECT DISTINCT District_name 
FROM district 
ORDER BY City_Area DESC;
```
-------------------------4902 sample_num
```sql
SELECT max_page_size 
FROM product 
GROUP BY max_page_size 
HAVING COUNT(product_id) > 3;
```
-------------------------4903 sample_num
```sql
SELECT p.max_page_size
FROM product p
JOIN store_product sp ON p.product_id = sp.product_id
GROUP BY sp.Store_ID, p.max_page_size
HAVING COUNT(sp.Product_ID) > 3
ORDER BY p.max_page_size DESC
LIMIT 1;
```
-------------------------4904 sample_num
```sql
SELECT District_name, City_Population 
FROM district 
WHERE City_Population BETWEEN 200000 AND 2000000;
```
-------------------------4905 sample_num
```sql
SELECT District_name, City_Population 
FROM district 
WHERE City_Population BETWEEN 200000 AND 2000000;
```
-------------------------4906 sample_num
```sql
SELECT District_name 
FROM district 
WHERE City_Area > 10 OR City_Population > 100000;
```
-------------------------4907 sample_num
```sql
SELECT District_name FROM district WHERE City_Area > 10 OR City_Population > 100000;
```
-------------------------4908 sample_num
```sql
SELECT District_name FROM district WHERE City_Population = (SELECT MAX(City_Population) FROM district)
```
-------------------------4909 sample_num
```sql
SELECT District_name 
FROM district 
ORDER BY City_Population DESC 
LIMIT 1;
```
-------------------------4910 sample_num
```sql
SELECT District_name FROM district ORDER BY City_Area ASC LIMIT 1;
```
-------------------------4911 sample_num
```sql
SELECT District_name FROM district WHERE City_Area = (SELECT MIN(City_Area) FROM district)
```
-------------------------4912 sample_num
```sql
SELECT SUM(City_Population) 
FROM (
    SELECT District_ID
    FROM district
    ORDER BY City_Area DESC
    LIMIT 3
) as top3districts
JOIN district ON top3districts.District_ID = district.District_ID;
```
-------------------------4913 sample_num
```sql
SELECT SUM(City_Population) 
FROM district 
ORDER BY City_Area DESC 
LIMIT 3;
```
-------------------------4914 sample_num
```sql
SELECT Type, COUNT(*) 
FROM store 
GROUP BY Type;
```
-------------------------4915 sample_num
```sql
SELECT Type, COUNT(*) 
FROM store 
GROUP BY Type;
```
-------------------------4916 sample_num
```sql
SELECT s.Store_Name 
FROM store s
JOIN store_district sd ON s.Store_ID = sd.Store_ID
JOIN district d ON sd.District_ID = d.District_ID
WHERE d.District_name = 'Khanewal';
```
-------------------------4917 sample_num
```sql
SELECT s.Store_Name 
FROM store s
JOIN store_district sd ON s.Store_ID = sd.Store_ID
JOIN district d ON sd.District_ID = d.District_ID
WHERE d.District_name = 'Khanewal';
```
-------------------------4918 sample_num
```sql
SELECT s.Store_Name 
FROM store s
JOIN store_district sd ON s.Store_ID = sd.Store_ID
JOIN district d ON sd.District_ID = d.District_ID
WHERE d.City_Population = (SELECT MAX(City_Population) FROM district)
```
-------------------------4919 sample_num
```sql
SELECT s.Store_Name
FROM store s
JOIN store_district sd ON s.Store_ID = sd.Store_ID
JOIN district d ON sd.District_ID = d.District_ID
WHERE d.City_Population = (SELECT MAX(City_Population) FROM district)
```
-------------------------4920 sample_num
```sql
SELECT D.District_name 
FROM district AS D
JOIN store AS S ON D.District_ID = S.Store_ID
WHERE S.Store_Name = 'Blackville';
```
Note: The provided query assumes that there is a direct relationship between the `district` and `store` tables via `District_ID` and `Store_ID`, which seems to be an error in the schema as described. A correct query would likely involve a `store_district` table to link the two. Here's a corrected version:

```sql
SELECT D.District_name 
FROM district AS D
JOIN store_district AS SD ON D.District_ID = SD.District_ID
JOIN store AS S ON SD.Store_ID = S.Store_ID
WHERE S.Store_Name = 'Blackville';
```
-------------------------4921 sample_num
```sql
SELECT T2.Headquartered_City FROM store AS T1 JOIN district AS T2 ON T1.Area_size = T2.City_Area WHERE T1.Store_Name = 'Blackville'
```
-------------------------4922 sample_num
```sql
SELECT d.District_name, COUNT(s.Store_ID) as Number_of_Stores
FROM store_district sd
JOIN district d ON sd.District_ID = d.District_ID
GROUP BY d.District_name;
```
-------------------------4923 sample_num
```sql
SELECT District_name, COUNT(store.Store_ID) 
FROM store 
JOIN district ON store.District_ID = district.District_ID 
GROUP BY District_name;
```
-------------------------4924 sample_num
```sql
SELECT D.District_name
FROM district D
JOIN store_district SD ON D.District_ID = SD.District_ID
GROUP BY D.District_name
ORDER BY COUNT(SD.Store_ID) DESC
LIMIT 1;
```
-------------------------4925 sample_num
```sql
SELECT d.District_name, d.Headquartered_City 
FROM district d
JOIN store s ON d.District_ID = s.Store_ID
WHERE s.Type = 'flagship'
GROUP BY d.Headquartered_City
ORDER BY COUNT(s.Store_ID) DESC
LIMIT 1;
```
Note: The provided SQL query assumes that the `Type` column in the `store` table contains the store type as 'flagship'. Also, it assumes that the `District_ID` and `Store_ID` columns are related directly, which might not be the case based on your description. The relationship between `store` and `district` might be through the `store_district` table. If that's the case, you should join the `store_district` table instead of directly joining the `district` table with the `store` table.
-------------------------4926 sample_num
```sql
SELECT AVG(pages_per_minute_color) FROM product;
```
-------------------------4927 sample_num
```sql
SELECT AVG(pages_per_minute_color) FROM product;
```
-------------------------4928 sample_num
```sql
SELECT p.product
FROM product p
JOIN store_product sp ON p.product_id = sp.product_id
JOIN store s ON sp.store_id = s.Store_ID
WHERE s.Store_Name = 'Miramichi';
```
-------------------------4929 sample_num
```sql
SELECT p.product 
FROM product p
JOIN store_product sp ON p.product_id = sp.product_id
JOIN store s ON sp.store_id = s.Store_ID
WHERE s.Store_Name = 'Miramichi';
```
-------------------------4930 sample_num
```sql
SELECT * FROM product WHERE max_page_size = 'A4' AND pages_per_minute_color < 5;
```
-------------------------4931 sample_num
```sql
SELECT product 
FROM product 
WHERE max_page_size = 'A4' 
AND pages_per_minute_color < 5;
```
-------------------------4932 sample_num
```sql
SELECT * FROM product WHERE max_page_size = 'A4' OR pages_per_minute_color < 5;
```
-------------------------4933 sample_num
```sql
SELECT product 
FROM product 
WHERE max_page_size = 'A4' OR pages_per_minute_color < 5;
```
-------------------------4934 sample_num
```sql
SELECT * FROM product WHERE product LIKE '%Scanner%';
```
-------------------------4935 sample_num
```sql
SELECT * FROM product WHERE product LIKE '%Scanner%';
```
-------------------------4936 sample_num
```sql
SELECT MAX(max_page_size) FROM product;
```
-------------------------4937 sample_num
```sql
SELECT max_page_size, COUNT(*) as count
FROM product
GROUP BY max_page_size
ORDER BY count DESC
LIMIT 1;
```
-------------------------4938 sample_num
```sql
SELECT p.product 
FROM product p 
WHERE p.max_page_size != (
    SELECT max_page_size 
    FROM product 
    GROUP BY max_page_size 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
```
-------------------------4939 sample_num
```sql
SELECT p.product 
FROM product p 
WHERE p.max_page_size != (
    SELECT max_page_size 
    FROM product 
    GROUP BY max_page_size 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
```
-------------------------4940 sample_num
```sql
SELECT SUM(City_Population) 
FROM district 
WHERE City_Area > (SELECT AVG(City_Area) FROM district);
```
-------------------------4941 sample_num
```sql
SELECT SUM(City_Population) 
FROM district 
WHERE City_Area > (SELECT AVG(City_Area) FROM district);
```
-------------------------4942 sample_num
```sql
SELECT D.District_name 
FROM district D 
WHERE EXISTS (
    SELECT 1 
    FROM store S1 
    WHERE S1.Store_ID IN (
        SELECT SD.Store_ID 
        FROM store_district SD 
        WHERE SD.District_ID = D.District_ID
    ) AND S1.Type = 'city mall'
) AND EXISTS (
    SELECT 1 
    FROM store S2 
    WHERE S2.Store_ID IN (
        SELECT SD.Store_ID 
        FROM store_district SD 
        WHERE SD.District_ID = D.District_ID
    ) AND S2.Type = 'village store'
)
GROUP BY D.District_name;
```
-------------------------4943 sample_num
```sql
SELECT D.District_name 
FROM district AS D 
JOIN store_district AS SD ON D.District_ID = SD.District_ID 
JOIN store AS S ON SD.Store_ID = S.Store_ID 
WHERE S.Type = 'mall' 
INTERSECT 
SELECT D.District_name 
FROM district AS D 
JOIN store_district AS SD ON D.District_ID = SD.District_ID 
JOIN store AS S ON SD.Store_ID = S.Store_ID 
WHERE S.Type = 'village'
```
-------------------------4944 sample_num
```sql
SELECT SUM(enr) FROM College;
```
-------------------------4945 sample_num
```sql
SELECT SUM(enr) FROM College;
```
-------------------------4946 sample_num
```sql
SELECT AVG(enr) FROM College;
```
-------------------------4947 sample_num
```sql
SELECT AVG(enr) FROM College;
```
-------------------------4948 sample_num
```sql
SELECT COUNT(*) FROM College;
```
-------------------------4949 sample_num
```sql
SELECT COUNT(DISTINCT cName) FROM College;
```
-------------------------4950 sample_num
```sql
SELECT COUNT(*) 
FROM Player 
WHERE HS > 1000;
```
-------------------------4951 sample_num
```sql
SELECT COUNT(DISTINCT pID) 
FROM Player 
WHERE HS > 1000;
```
-------------------------4952 sample_num
```sql
SELECT COUNT(*) 
FROM College 
WHERE enr > 15000;
```
-------------------------4953 sample_num
```sql
SELECT COUNT(*) 
FROM College 
WHERE enr > 15000;
```
-------------------------4954 sample_num
```sql
SELECT AVG(Training_Hours) 
FROM Player;
```
Note: This assumes that there is a column named 'Training_Hours' in the 'Player' table which holds the training hours of each player. However, based on your provided schema for the 'Player' table ('pID, pName, yCard, HS'), there is no such column. Therefore, this query would not work with the given schema. You would need to add a 'Training_Hours' column to the 'Player' table for this query to work.
-------------------------4955 sample_num
```sql
SELECT AVG(hoursTrained) 
FROM Player;
```

However, based on the information you provided, the Player table does not have a column named 'hoursTrained'. Please replace 'hoursTrained' with the correct column name that represents the number of hours trained by each player in the Player table.
-------------------------4956 sample_num
```sql
SELECT pName, HS 
FROM Player 
WHERE HS < 1500;
```
-------------------------4957 sample_num
```sql
SELECT pName, HS 
FROM Player 
WHERE HS < 1500;
```
-------------------------4958 sample_num
```sql
SELECT COUNT(DISTINCT cName) 
FROM Tryout;
```
-------------------------4959 sample_num
```sql
SELECT COUNT(DISTINCT cName) 
FROM Tryout;
```
-------------------------4960 sample_num
```sql
SELECT DISTINCT pPos FROM Tryout;
```
-------------------------4961 sample_num
```sql
SELECT DISTINCT pPos FROM Tryout;
```
-------------------------4962 sample_num
```sql
SELECT COUNT(*) 
FROM Tryout 
WHERE decision = 'accepted';
```
-------------------------4963 sample_num
```sql
SELECT COUNT(*) 
FROM Tryout 
WHERE decision = 'yes';
```
-------------------------4964 sample_num
```sql
SELECT COUNT(*) 
FROM Tryout 
WHERE pPos = 'goalie';
```
-------------------------4965 sample_num
```sql
SELECT COUNT(*) 
FROM Tryout 
WHERE pPos = 'goalie';
```
-------------------------4966 sample_num
```sql
SELECT MAX(HS) AS Max_Hours, AVG(HS) AS Average_Hours, MIN(HS) AS Min_Hours 
FROM Player;
```
-------------------------4967 sample_num
It seems like you might have overlooked including a column related to the number of hours spent training in your schema. Assuming such a column exists in the `Player` table and it's named `trainingHours`, here's your SQL query:

```sql
SELECT AVG(trainingHours) AS Average_Training_Hours,
       MAX(trainingHours) AS Maximum_Training_Hours,
       MIN(trainingHours) AS Minimum_Training_Hours
FROM Player;
```
-------------------------4968 sample_num
```sql
SELECT AVG(enr) 
FROM College 
WHERE state = 'FL';
```
-------------------------4969 sample_num
```sql
SELECT AVG(enr) 
FROM College 
WHERE state = 'Florida';
```
-------------------------4970 sample_num
It seems you've confused the columns available in your tables with the information you're asking for in your query (training hours). Based on the provided schema, there's no column that indicates training hours. However, if we ignore this detail and focus solely on the request to list player names, assuming that the Player table contains the necessary information, the SQL query would look something like this:

```sql
SELECT pName 
FROM Player;
```

However, if you meant to use another criterion that is actually present in the data (like filtering by yellow or red cards which might be mistakenly referred to as "training hours"), the query could look like this given 'yCard' as the number of yellow cards:

```sql
SELECT pName 
FROM Player 
WHERE yCard BETWEEN 500 AND 1500;
```

But please note that this example assumes that 'yCard' can take values in such a high range, which is highly unlikely for the number of yellow cards received by a player. If you have a different column related to training hours, please provide the correct column name.
```
-------------------------4971 sample_num
```sql
SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500;
```
-------------------------4972 sample_num
```sql
SELECT pName FROM Player WHERE pName LIKE '%a%';
```
-------------------------4973 sample_num
```sql
SELECT pName FROM Player WHERE pName LIKE '%a%';
```
-------------------------4974 sample_num
```sql
SELECT cName, enr 
FROM College 
WHERE enr > 10000 AND state = 'LA';
```
-------------------------4975 sample_num
```sql
SELECT cName, enr 
FROM College 
WHERE enr > 10000 AND state = 'Louisiana';
```
-------------------------4976 sample_num
```sql
SELECT * FROM College ORDER BY enr ASC;
```
-------------------------4977 sample_num
```sql
SELECT * FROM College ORDER BY enr ASC;
```
-------------------------4978 sample_num
```sql
SELECT cName FROM College WHERE enr > 18000 ORDER BY cName;
```
-------------------------4979 sample_num
```sql
SELECT cName
FROM College
WHERE enr > 18000
ORDER BY cName ASC;
```
-------------------------4980 sample_num
```sql
SELECT p.pName 
FROM Player p 
WHERE p.yCard = 'yes' 
ORDER BY p.HS DESC;
```
-------------------------4981 sample_num
```sql
SELECT pName FROM Player WHERE yCard = 'card' ORDER BY HS DESC;
```
-------------------------4982 sample_num
```sql
SELECT DISTINCT cName 
FROM Tryout 
ORDER BY cName ASC;
```
-------------------------4983 sample_num
```sql
SELECT DISTINCT cName 
FROM Tryout 
ORDER BY cName ASC;
```
-------------------------4984 sample_num
```sql
SELECT pPos, COUNT(*) as num 
FROM Tryout 
GROUP BY pPos 
ORDER BY num DESC 
LIMIT 1;
```
-------------------------4985 sample_num
```sql
SELECT pPos, COUNT(*) as count 
FROM Tryout 
GROUP BY pPos 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------4986 sample_num
```sql
SELECT cName, COUNT(pID) as num_students
FROM Tryout
GROUP BY cName
ORDER BY num_students DESC;
```
-------------------------4987 sample_num
```sql
SELECT cName, COUNT(pID) as num_participants
FROM Tryout
GROUP BY cName
ORDER BY num_participants DESC;
```
-------------------------4988 sample_num
It seems like there might be a misunderstanding in your request as the provided schema does not contain any column that directly indicates "hours" played by students. However, if we assume that there's a related concept you're aiming for and you meant to ask for the minimum number of something (like the minimum enrollment of colleges for different positions), here's how you could structure a query with similar syntax:

```sql
SELECT T.cName, T.pPos, MIN(C.enr) as MinEnrollment
FROM Tryout T
JOIN College C ON T.cName = C.cName
GROUP BY T.pPos;
```

But since you mentioned "hours", if there were such a column, say "hoursPlayed", in either the Player or Tryout table, then a correct query would look more like:

```sql
SELECT T.pPos, MIN(P.hoursPlayed) as MinHoursPlayed
FROM Tryout T
JOIN Player P ON T.pID = P.pID
GROUP BY T.pPos;
```
However, based on the schema you provided, no such column exists. Please provide additional details if necessary.
-------------------------4989 sample_num
```sql
SELECT pPos, MIN(HS) 
FROM Player 
JOIN Tryout ON Player.pID = Tryout.pID 
GROUP BY pPos;
```
-------------------------4990 sample_num
```sql
SELECT cName 
FROM College 
ORDER BY enr DESC 
LIMIT 3;
```
-------------------------4991 sample_num
```sql
SELECT cName FROM College ORDER BY enr DESC LIMIT 3;
```
-------------------------4992 sample_num
```sql
SELECT state, MIN(enr), cName 
FROM College 
GROUP BY state;
```
However, this query does not guarantee that you get the school name with the smallest enrollment for each state because SQL's MIN function only returns the minimum value, not the row associated with it. A better query would be:
```sql
SELECT c1.state, c1.cName, c1.enr
FROM College c1
JOIN (
    SELECT state, MIN(enr) as min_enr
    FROM College
    GROUP BY state
) c2
ON c1.state = c2.state AND c1.enr = c2.min_enr;
```
-------------------------4993 sample_num
```sql
SELECT state, cName, MIN(enr) 
FROM College 
GROUP BY state;
```
However, to get the specific college with the smallest enrollment in each state, you would need to use a subquery or window function, which can be more complex depending on your SQL version. Here's a simplified query that might work in some SQL versions:

```sql
SELECT c1.state, c1.cName, c1.enr 
FROM College c1 
JOIN (
  SELECT state, MIN(enr) as min_enr
  FROM College 
  GROUP BY state
) c2
ON c1.state = c2.state AND c1.enr = c2.min_enr;
```
-------------------------4994 sample_num
```sql
SELECT DISTINCT state 
FROM College 
WHERE cName IN (SELECT cName FROM Tryout)
```
-------------------------4995 sample_num
```sql
SELECT DISTINCT state FROM College WHERE cName IN (SELECT cName FROM Tryout)
```
-------------------------4996 sample_num
```sql
SELECT DISTINCT T1.state 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.decision = 'yes';
```
-------------------------4997 sample_num
```sql
SELECT DISTINCT T1.state 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.decision = 'yes';
```
-------------------------4998 sample_num
```sql
SELECT T2.pName, T1.cName 
FROM Tryout AS T1 
JOIN Player AS T2 ON T1.pID = T2.pID 
WHERE T1.decision = 'yes';
```
-------------------------4999 sample_num
```sql
SELECT Player.pName, College.cName 
FROM Player 
JOIN Tryout ON Player.pID = Tryout.pID 
JOIN College ON Tryout.cName = College.cName 
WHERE Tryout.decision = 'yes';
```
-------------------------5000 sample_num
```sql
SELECT p.pName 
FROM Player p 
JOIN Tryout t ON p.pID = t.pID 
ORDER BY p.pName;
```
-------------------------5001 sample_num
```sql
SELECT pName FROM Player WHERE pID IN (SELECT pID FROM Tryout) ORDER BY pName ASC;
```
-------------------------5002 sample_num
```sql
SELECT P.pName, P.HS 
FROM Player AS P
JOIN Tryout AS T ON P.pID = T.pID
WHERE T.decision = 'yes';
```
-------------------------5003 sample_num
```sql
SELECT P.pName, P.HS 
FROM Player AS P 
JOIN Tryout AS T ON P.pID = T.pID 
WHERE T.decision = 'yes';
```
-------------------------5004 sample_num
```sql
SELECT DISTINCT T1.state 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos = 'striker';
```
-------------------------5005 sample_num
```sql
SELECT T1.state 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos = 'striker';
```
-------------------------5006 sample_num
```sql
SELECT T2.pName FROM Tryout AS T1 JOIN Player AS T2 ON T1.pID = T2.pID WHERE T1.pPos = 'striker' AND T1.decision = 'yes'
```
-------------------------5007 sample_num
```sql
SELECT Player.pName 
FROM Player 
JOIN Tryout ON Player.pID = Tryout.pID 
WHERE Tryout.pPos = 'striker' AND Tryout.decision = 'yes';
```
-------------------------5008 sample_num
```sql
SELECT T1.state 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
JOIN Player AS T3 ON T2.pID = T3.pID 
WHERE T3.pName = 'Charles';
```
-------------------------5009 sample_num
```sql
SELECT T1.state 
FROM College AS T1 
JOIN Player AS T2 ON T1.cName = T2.HS 
WHERE T2.pName = 'Charles';
```
-------------------------5010 sample_num
```sql
SELECT AVG(HS) AS avg_hours, MAX(HS) AS max_hours 
FROM Player 
WHERE pID IN (SELECT pID FROM Tryout WHERE decision = 'yes');
```
-------------------------5011 sample_num
```sql
SELECT AVG(T2.HS) AS average_hours, MAX(T2.HS) AS max_hours 
FROM Tryout AS T1 
JOIN Player AS T2 ON T1.pID = T2.pID 
WHERE T1.decision = 'yes';
```
-------------------------5012 sample_num
```sql
SELECT AVG(T2.HS) 
FROM Tryout AS T1 
JOIN Player AS T2 
ON T1.pID = T2.pID 
WHERE T1.decision = 'no'
```
-------------------------5013 sample_num
```sql
SELECT AVG(T2.HS) 
FROM Tryout AS T1 
JOIN Player AS T2 ON T1.pID = T2.pID 
WHERE T1.decision = 'no'
```
-------------------------5014 sample_num
```sql
SELECT pPos, MAX(HS) 
FROM Player 
WHERE HS > 1000 
GROUP BY pPos;
```
-------------------------5015 sample_num
```sql
SELECT pPos, MAX(HS) 
FROM Player 
WHERE HS > 1000 
GROUP BY pPos;
```
-------------------------5016 sample_num
```sql
SELECT T1.cName 
FROM Tryout AS T1 
JOIN Player AS T2 
ON T1.pID = T2.pID 
WHERE T2.pName LIKE 'D%';
```
-------------------------5017 sample_num
```sql
SELECT T1.pName, T3.cName
FROM Player AS T1 
JOIN Tryout AS T2 ON T1.pID = T2.pID 
JOIN College AS T3 ON T2.cName = T3.cName
WHERE T1.pName LIKE 'D%';
```
-------------------------5018 sample_num
```sql
SELECT DISTINCT cName 
FROM Tryout 
WHERE pPos = 'goalie' AND decision = 'yes'
``` 
However, to get the distinct college names, we should join the Tryout table with the College table since the college name exists in both. But based on your provided tables structure, you might need to join it with the Player table first to get the correct rows, then join the result with the College table. Here is the complete SQL query:

```sql
SELECT DISTINCT C.cName
FROM College C
JOIN Tryout T ON C.cName = T.cName
JOIN Player P ON P.pID = T.pID
WHERE T.decision = 'yes' AND P.pPos = 'goalie';
```
Note: I assumed that `pPos` (player position) is in the Player table, but if it is actually in the Tryout table as you've mentioned in your schema, the SQL will be like the first code block. Please revise the column names according to your actual table schema.
-------------------------5019 sample_num
```sql
SELECT T1.cName FROM College AS T1 JOIN Tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes' AND T2.pPos = 'goalie'
```
-------------------------5020 sample_num
```sql
SELECT T2.pName FROM 
(SELECT cName FROM College WHERE enr = (SELECT MAX(enr) FROM College)) AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
JOIN Player AS T3 ON T2.pID = T3.pID;
```
-------------------------5021 sample_num
```sql
SELECT T1.pName FROM Player AS T1 JOIN Tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS = (SELECT MAX(T3.enr) FROM College AS T3)
```
Note: This query assumes that the 'enr' column in the College table represents the size of the college. However, to specifically answer the question as asked, the correct query should first find the college with the largest enrollment and then find the players who tried out for that college:
```sql
SELECT T1.pName 
FROM Player AS T1 
JOIN Tryout AS T2 ON T1.pID = T2.pID 
WHERE T2.cName = (SELECT T3.cName FROM College AS T3 WHERE T3.enr = (SELECT MAX(T4.enr) FROM College AS T4))
```
-------------------------5022 sample_num
```sql
SELECT DISTINCT T1.state, T1.enr 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.decision = 'yes';
```
-------------------------5023 sample_num
```sql
SELECT COUNT(DISTINCT T1.pID), T2.state
FROM Player AS T1 
JOIN Tryout AS T2 ON T1.pID = T2.pID 
JOIN College AS T3 ON T2.cName = T3.cName
WHERE T2.decision = 'yes'
GROUP BY T2.state;
```
-------------------------5024 sample_num
```sql
SELECT cName 
FROM College 
WHERE (state = 'LA' AND enr > 15000) OR (state = 'AZ' AND enr < 13000);
```
-------------------------5025 sample_num
```sql
SELECT cName 
FROM College 
WHERE (state = 'LA' AND enr > 15000) OR (state = 'AZ' AND enr < 13000);
```
-------------------------5026 sample_num
```sql
SELECT DISTINCT cName 
FROM Tryout 
WHERE pPos IN ('goalie', 'mid') 
GROUP BY cName 
HAVING COUNT(DISTINCT pPos) > 1;
```
```
-------------------------5027 sample_num
```sql
SELECT DISTINCT cName 
FROM Tryout 
WHERE pPos IN ('goal', 'mid')
``` 
However, to match both conditions simultaneously (goal AND mid), which is logically not possible for a single row, you might want to run two separate queries or use union, like so:

```sql
(SELECT cName FROM Tryout WHERE pPos = 'goal')
UNION
(SELECT cName FROM Tryout WHERE pPos = 'mid')
``` 

But if you're looking for colleges that have at least one student trying out for 'goal' position and at least one trying out for 'mid' positions, you'd need a more complex query using subqueries or joins.
```sql
SELECT cName 
FROM Tryout 
WHERE cName IN (SELECT cName FROM Tryout WHERE pPos = 'goal') 
AND cName IN (SELECT cName FROM Tryout WHERE pPos = 'mid')
```
-------------------------5028 sample_num
```sql
SELECT DISTINCT T1.state 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos IN ('goalie', 'mid');
```
-------------------------5029 sample_num
```sql
SELECT DISTINCT T1.state 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos = 'goalie' OR T2.pPos = 'mid'
```
-------------------------5030 sample_num
```sql
SELECT COUNT(DISTINCT T1.cName) 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos IN ('goalie', 'mid') 
GROUP BY T1.cName 
HAVING COUNT(T2.pPos) > 1;
```
However, this query does not ensure that both positions are covered at the same school. If we want to make sure that both goalie and mid positions are represented in the count, the query should look like this:

```sql
SELECT COUNT(DISTINCT T1.cName)
FROM College AS T1
JOIN Tryout AS T2 ON T1.cName = T2.cName AND T2.pPos = 'goalie'
JOIN Tryout AS T3 ON T1.cName = T3.cName AND T3.pPos = 'mid';
```
-------------------------5031 sample_num
```sql
SELECT COUNT(DISTINCT T1.cName) 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos IN ('goalie', 'mid-field') 
GROUP BY T1.cName 
HAVING COUNT(*) >= 2;
```
-------------------------5032 sample_num
```sql
SELECT DISTINCT cName 
FROM Tryout 
WHERE pPos = 'mid'
AND cName NOT IN (SELECT cName FROM Tryout WHERE pPos = 'goalie')
```
-------------------------5033 sample_num
```sql
SELECT cName 
FROM College 
WHERE cName IN (SELECT cName FROM Tryout WHERE pPos = 'mid') 
AND cName NOT IN (SELECT cName FROM Tryout WHERE pPos = 'goalie')
```
```
-------------------------5034 sample_num
```sql
SELECT DISTINCT state 
FROM College 
WHERE cName IN (
    SELECT cName 
    FROM Tryout 
    WHERE pPos = 'mid'
) 
AND cName NOT IN (
    SELECT cName 
    FROM Tryout 
    WHERE pPos = 'goalie'
);
```
-------------------------5035 sample_num
```sql
SELECT DISTINCT T1.state 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos = 'mid' 
AND T1.cName NOT IN (SELECT T2.cName FROM Tryout AS T2 WHERE T2.pPos = 'goalie')
```
-------------------------5036 sample_num
```sql
SELECT COUNT(DISTINCT T1.state) 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos = 'mid' 
AND T1.cName NOT IN (SELECT T2.cName FROM Tryout AS T2 WHERE T2.pPos = 'goalie')
```
-------------------------5037 sample_num
```sql
SELECT COUNT(DISTINCT T1.state) 
FROM College AS T1 
JOIN Tryout AS T2 ON T1.cName = T2.cName 
WHERE T2.pPos = 'mid' AND T2.pPos <> 'goalie'
```
-------------------------5038 sample_num
```sql
SELECT DISTINCT state 
FROM College 
WHERE enr < (SELECT MAX(enr) FROM College)
```
-------------------------5039 sample_num
```sql
SELECT state FROM College WHERE enr < (SELECT MAX(enr) FROM College)
``` 

However, to answer the question more accurately, you might want to use "IN" as follows since you're looking for states with colleges that have enrollments less than some other college:
```sql
SELECT state FROM College 
WHERE enr < (SELECT MAX(enr) FROM College AS C2 WHERE C2.enr > College.enr)
``` 
But note that the above query is not standard and may not work in all SQL databases. A safer way would be to use EXISTS:
```sql
SELECT DISTINCT(state) FROM College 
WHERE EXISTS (SELECT * FROM College AS C2 WHERE C2.enr > College.enr)
``` 
But this will return all states which have atleast one college with lower enrollment than some other college. This might not be what you asked for, since your question is a bit ambiguous.
For less ambiguity, if you meant "states with colleges that have enrollments less than the highest enrollment among all colleges", then:

```sql
SELECT state FROM College 
WHERE enr < (SELECT MAX(enr) FROM College)
```  
would be correct.
```
-------------------------5040 sample_num
```sql
SELECT cName 
FROM College 
WHERE enr > ANY (SELECT enr FROM College WHERE state = 'FL');
```
-------------------------5041 sample_num
```sql
SELECT DISTINCT cName 
FROM College 
WHERE enr > ANY (
    SELECT enr 
    FROM College 
    WHERE state = 'Florida'
);
```
-------------------------5042 sample_num
```sql
SELECT cName 
FROM College 
WHERE enr > ALL (
    SELECT enr 
    FROM College 
    WHERE state = 'FL'
);
```
-------------------------5043 sample_num
```sql
SELECT cName FROM College WHERE enr > (SELECT MAX(enr) FROM College WHERE state = 'Florida');
```
-------------------------5044 sample_num
```sql
SELECT SUM(enr) 
FROM College 
WHERE NOT EXISTS (
    SELECT * 
    FROM Tryout t, Player p 
    WHERE t.pID = p.pID AND t.cName = College.cName AND pPos = 'goalie'
);
```
-------------------------5045 sample_num
```sql
SELECT SUM(enr) 
FROM College 
WHERE NOT EXISTS (
    SELECT * 
    FROM Tryout 
    WHERE Tryout.pPos = 'goalie' AND College.cName = Tryout.cName
);
```
-------------------------5046 sample_num
```sql
SELECT COUNT(DISTINCT state) 
FROM College 
WHERE enr > (SELECT AVG(enr) FROM College)
```
-------------------------5047 sample_num
```sql
SELECT COUNT(DISTINCT state) 
FROM College 
WHERE enr > (SELECT AVG(enr) FROM College)
```
-------------------------5048 sample_num
```sql
SELECT COUNT(DISTINCT state) 
FROM College 
WHERE enr < (SELECT AVG(enr) FROM College)
```
-------------------------5049 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT state 
  FROM College 
  WHERE enr < (SELECT AVG(enr) FROM College)
  GROUP BY state
) AS result
```
-------------------------5050 sample_num
```sql
SELECT COUNT(*) FROM device;
```
-------------------------5051 sample_num
```sql
SELECT COUNT(*) FROM device;
```
-------------------------5052 sample_num
```sql
SELECT DISTINCT Carrier 
FROM device 
ORDER BY Carrier ASC;
```
-------------------------5053 sample_num
```sql
SELECT DISTINCT Carrier 
FROM device 
ORDER BY Carrier ASC;
```
-------------------------5054 sample_num
```sql
SELECT DISTINCT d.Carrier 
FROM device d 
WHERE d.Software_Platform != 'Android';
```
-------------------------5055 sample_num
```sql
SELECT DISTINCT Carrier 
FROM device 
WHERE Software_Platform != 'Android';
```
-------------------------5056 sample_num
```sql
SELECT Shop_Name 
FROM shop 
ORDER BY Open_Year ASC;
```
-------------------------5057 sample_num
```sql
SELECT Shop_Name 
FROM shop 
ORDER BY Open_Year ASC;
```
-------------------------5058 sample_num
```sql
SELECT AVG(Quantity) FROM stock;
```
-------------------------5059 sample_num
```sql
SELECT AVG(Quantity) FROM stock;
```
-------------------------5060 sample_num
```sql
SELECT Shop_Name, Location FROM shop ORDER BY Shop_Name ASC;
```
-------------------------5061 sample_num
```sql
SELECT Shop_Name, Location 
FROM shop 
ORDER BY Shop_Name ASC;
```
-------------------------5062 sample_num
```sql
SELECT COUNT(DISTINCT Software_Platform) FROM device;
```
-------------------------5063 sample_num
```sql
SELECT COUNT(DISTINCT Software_Platform) FROM device;
```
-------------------------5064 sample_num
```sql
SELECT Open_Date, Open_Year FROM shop WHERE Shop_Name = 'Apple';
```
-------------------------5065 sample_num
```sql
SELECT Open_Date, Open_Year 
FROM shop 
WHERE Shop_Name = 'Apple';
```
-------------------------5066 sample_num
```sql
SELECT Shop_Name FROM shop WHERE Open_Year = (SELECT MAX(Open_Year) FROM shop);
```
-------------------------5067 sample_num
```sql
SELECT Shop_Name FROM shop WHERE Open_Year = (SELECT MAX(Open_Year) FROM shop)
```
-------------------------5068 sample_num
```sql
SELECT shop.Shop_Name, device.Carrier 
FROM stock 
JOIN shop ON stock.Shop_ID = shop.Shop_ID 
JOIN device ON stock.Device_ID = device.Device_ID;
```
-------------------------5069 sample_num
```sql
SELECT s.Shop_Name, d.Carrier 
FROM stock st 
JOIN shop s ON st.Shop_ID = s.Shop_ID 
JOIN device d ON st.Device_ID = d.Device_ID;
```
-------------------------5070 sample_num
```sql
SELECT s.Shop_Name
FROM shop s
JOIN stock st ON s.Shop_ID = st.Shop_ID
GROUP BY s.Shop_Name
HAVING COUNT(DISTINCT st.Device_ID) > 1;
```
-------------------------5071 sample_num
```sql
SELECT s.Shop_Name
FROM shop s
JOIN stock st ON s.Shop_ID = st.Shop_ID
GROUP BY s.Shop_ID
HAVING COUNT(DISTINCT st.Device_ID) > 1;
```
-------------------------5072 sample_num
```sql
SELECT s.Shop_Name
FROM shop s
JOIN stock st ON s.Shop_ID = st.Shop_ID
GROUP BY s.Shop_Name
ORDER BY COUNT(DISTINCT st.Device_ID) DESC
LIMIT 1;
```
-------------------------5073 sample_num
```sql
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(DISTINCT T1.Device_ID) DESC LIMIT 1
```
-------------------------5074 sample_num
```sql
SELECT s.Shop_Name 
FROM stock st 
JOIN shop s ON st.Shop_ID = s.Shop_ID 
WHERE st.Quantity = (SELECT MAX(Quantity) FROM stock)
```
-------------------------5075 sample_num
```sql
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1;
```
-------------------------5076 sample_num
```sql
SELECT Software_Platform, COUNT(*) AS Number_of_Devices
FROM device
GROUP BY Software_Platform;
```
-------------------------5077 sample_num
```sql
SELECT Software_Platform, COUNT(*) AS Total_Devices 
FROM device 
GROUP BY Software_Platform;
```
-------------------------5078 sample_num
```sql
SELECT Software_Platform, COUNT(*) 
FROM device 
GROUP BY Software_Platform 
ORDER BY COUNT(*) DESC;
```
-------------------------5079 sample_num
```sql
SELECT Software_Platform, COUNT(*) AS Frequency 
FROM device 
GROUP BY Software_Platform 
ORDER BY Frequency DESC;
```
-------------------------5080 sample_num
```sql
SELECT Software_Platform, COUNT(*) AS Total 
FROM device 
GROUP BY Software_Platform 
ORDER BY Total DESC 
LIMIT 1;
```
-------------------------5081 sample_num
```sql
SELECT Software_Platform, COUNT(*) AS Count 
FROM device 
GROUP BY Software_Platform 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------5082 sample_num
```sql
SELECT Shop_Name 
FROM shop 
WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)
```
-------------------------5083 sample_num
```sql
SELECT Shop_Name 
FROM shop 
WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)
```
-------------------------5084 sample_num
```sql
SELECT Location 
FROM shop 
WHERE Open_Year > 2012 
INTERSECT 
SELECT Location 
FROM shop 
WHERE Open_Year < 2008;
```
-------------------------5085 sample_num
```sql
SELECT Location 
FROM shop 
WHERE Open_Year > 2012 
INTERSECT 
SELECT Location 
FROM shop 
WHERE Open_Year < 2008
```
-------------------------5086 sample_num
```sql
SELECT DISTINCT d.Carrier 
FROM device d 
LEFT JOIN stock s ON d.Device_ID = s.Device_ID 
WHERE s.Device_ID IS NULL;
```
-------------------------5087 sample_num
```sql
SELECT DISTINCT d.Carrier 
FROM device d 
WHERE d.Device_ID NOT IN (SELECT s.Device_ID FROM stock s)
```
-------------------------5088 sample_num
```sql
SELECT T1.Carrier 
FROM device AS T1 
JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID 
GROUP BY T1.Carrier 
HAVING COUNT(T2.Shop_ID) > 1;
```
-------------------------5089 sample_num
```sql
SELECT T1.Carrier 
FROM device AS T1 
JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID 
GROUP BY T1.Carrier 
HAVING COUNT(DISTINCT T2.Shop_ID) > 1
```
-------------------------5090 sample_num
```sql
SELECT COUNT(*) FROM Bookings;
```
-------------------------5091 sample_num
```sql
SELECT COUNT(*) FROM Bookings;
```
-------------------------5092 sample_num
```sql
SELECT Order_Date FROM Bookings;
```
-------------------------5093 sample_num
```sql
SELECT Order_Date FROM Bookings;
```
-------------------------5094 sample_num
```sql
SELECT Planned_Delivery_Date, Actual_Delivery_Date FROM Bookings;
```
-------------------------5095 sample_num
```sql
SELECT Planned_Delivery_Date, Actual_Delivery_Date FROM Bookings;
```
-------------------------5096 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------5097 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------5098 sample_num
```sql
SELECT Customers.Customer_Phone, Customers.Customer_Email_Address 
FROM Customers 
WHERE Customers.Customer_Name = 'Harold';
```
-------------------------5099 sample_num
```sql
SELECT Customers.Customer_Phone, Customers.Customer_Email_Address 
FROM Customers 
WHERE Customers.Customer_Name = 'Harold';
```
-------------------------5100 sample_num
```sql
SELECT Store_Name FROM Drama_Workshop_Groups;
```
-------------------------5101 sample_num
```sql
SELECT T2.Store_Name FROM Drama_Workshop_Groups AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID
```
-------------------------5102 sample_num
```sql
SELECT MIN(Order_Quantity) AS Min_Order_Quantity,
       AVG(Order_Quantity) AS Average_Order_Quantity,
       MAX(Order_Quantity) AS Max_Order_Quantity
FROM Invoice_Items;
```
-------------------------5103 sample_num
```sql
SELECT MIN(Order_Quantity) as Min_Quantity, AVG(Order_Quantity) as Avg_Quantity, MAX(Order_Quantity) as Max_Quantity
FROM Invoice_Items;
```
-------------------------5104 sample_num
```sql
SELECT DISTINCT payment_method_code FROM Invoices;
```
-------------------------5105 sample_num
```sql
SELECT DISTINCT payment_method_code FROM Invoices;
```
-------------------------5106 sample_num
```sql
SELECT Marketing_Region_Descriptrion 
FROM Marketing_Regions 
WHERE Marketing_Region_Name = 'China';
```
-------------------------5107 sample_num
```sql
SELECT Marketing_Region_Descriptrion 
FROM Marketing_Regions 
WHERE Marketing_Region_Name = 'China';
```
-------------------------5108 sample_num
```sql
SELECT DISTINCT Product_Name 
FROM Products 
WHERE Product_Price > (SELECT AVG(Product_Price) FROM Products);
```
-------------------------5109 sample_num
```sql
SELECT DISTINCT Product_Name 
FROM Products 
WHERE Product_Price > (SELECT AVG(Product_Price) FROM Products);
```
-------------------------5110 sample_num
```sql
SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1;
```
-------------------------5111 sample_num
```sql
SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1;
```
-------------------------5112 sample_num
```sql
SELECT Product_Name 
FROM Products 
ORDER BY Product_Price ASC;
```
-------------------------5113 sample_num
```sql
SELECT Product_Name 
FROM Products 
ORDER BY Product_Price ASC;
```
-------------------------5114 sample_num
```sql
SELECT T1.Customer_Phone 
FROM Performers AS T1 
JOIN Customers AS T2 ON T1.Customer_Name = T2.Customer_Name 
WHERE T2.Customer_Name = 'Ashley';
```
Note: This assumes that the 'Customer_Name' field in the 'Performers' and 'Customers' tables are identical, which may not be the case in your actual schema. If there's a different way to link these two tables (like a unique ID for each performer), you should adjust the join condition accordingly.
-------------------------5115 sample_num
```sql
SELECT Customer_Phone FROM Performers WHERE Customer_Name = 'Ashley';
```
-------------------------5116 sample_num
```sql
SELECT payment_method_code, COUNT(*) AS Number_of_Orders
FROM Invoices
GROUP BY payment_method_code;
```
-------------------------5117 sample_num
```sql
SELECT payment_method_code, COUNT(*) as Number_of_Orders
FROM Invoices
GROUP BY payment_method_code;
```
-------------------------5118 sample_num
```sql
SELECT payment_method_code, COUNT(*) as order_count 
FROM Invoices 
GROUP BY payment_method_code 
ORDER BY order_count DESC 
LIMIT 1;
```
-------------------------5119 sample_num
```sql
SELECT payment_method_code 
FROM Invoices 
GROUP BY payment_method_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5120 sample_num
```sql
SELECT Addresses.City_Town 
FROM Addresses 
JOIN Stores ON Addresses.Address_ID = Stores.Address_ID 
WHERE Stores.Store_Name = 'FJA Filming';
```
-------------------------5121 sample_num
```sql
SELECT Addresses.City_Town 
FROM Addresses 
JOIN Stores ON Addresses.Address_ID = Stores.Address_ID 
WHERE Stores.Store_Name = 'FJA Filming';
```
-------------------------5122 sample_num
```sql
SELECT DISTINCT A.State_County 
FROM Addresses A 
JOIN Stores S ON A.Address_ID = S.Address_ID 
WHERE S.Marketing_Region_Code = 'CA';
```
-------------------------5123 sample_num
```sql
SELECT DISTINCT T2.State_County 
FROM Stores AS T1 
JOIN Addresses AS T2 ON T1.Address_ID = T2.Address_ID 
WHERE T1.Marketing_Region_Code = 'CA';
```
-------------------------5124 sample_num
```sql
SELECT Marketing_Regions.Marketing_Region_Name 
FROM Marketing_Regions 
JOIN Stores ON Marketing_Regions.Marketing_Region_Code = Stores.Marketing_Region_Code 
WHERE Stores.Store_Name = 'Rob Dinning';
```
-------------------------5125 sample_num
```sql
SELECT Marketing_Regions.Marketing_Region_Name 
FROM Marketing_Regions 
JOIN Stores ON Marketing_Regions.Marketing_Region_Code = Stores.Marketing_Region_Code 
WHERE Stores.Store_Name = 'Rob Dinning';
```
-------------------------5126 sample_num
```sql
SELECT T2.Service_Type_Description FROM Services AS T1 JOIN Ref_Service_Types AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T1.Product_Price > 100;
```
-------------------------5127 sample_num
```sql
SELECT T2.Service_Type_Description 
FROM Services AS T1 
JOIN Ref_Service_Types AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code 
WHERE T1.Product_Price > 100;
```
-------------------------5128 sample_num
```sql
SELECT Ref_Service_Types.Service_Type_Description, Ref_Service_Types.Service_Type_Code, COUNT(Services.Service_ID) AS Service_Count
FROM Ref_Service_Types
LEFT JOIN Services ON Ref_Service_Types.Service_Type_Code = Services.Service_Type_Code
GROUP BY Ref_Service_Types.Service_Type_Code, Ref_Service_Types.Service_Type_Description;
```
-------------------------5129 sample_num
```sql
SELECT 
    T2.Service_Type_Description,
    T1.Service_Type_Code,
    COUNT(T1.Service_Type_Code) AS Number_of_Services
FROM 
    Services AS T1
INNER JOIN 
    Ref_Service_Types AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code
GROUP BY 
    T1.Service_Type_Code, T2.Service_Type_Description
```
```
-------------------------5130 sample_num
```sql
SELECT T1.Service_Type_Description, T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code JOIN Bookings_Services AS T3 ON T2.Service_ID = T3.Product_ID GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------5131 sample_num
```sql
SELECT T1.Service_Type_Description, T1.Service_Type_Code FROM Ref_Service_Types AS T1 
JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code 
GROUP BY T1.Service_Type_Code 
ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------5132 sample_num
```sql
SELECT DISTINCT dwg.Store_Phone, dwg.Store_Email_Address 
FROM Drama_Workshop_Groups dwg 
JOIN Services s ON dwg.Workshop_Group_ID = s.Workshop_Group_ID;
```
-------------------------5133 sample_num
```sql
SELECT DISTINCT Drama_Workshop_Groups.Store_Phone, Drama_Workshop_Groups.Store_Email_Address 
FROM Drama_Workshop_Groups 
JOIN Bookings_Services ON Drama_Workshop_Groups.Workshop_Group_ID = Bookings_Services.Workshop_Group_ID;
```
Note: The provided schema does not have a direct relationship between `Drama_Workshop_Groups` and `Services`, so I used `Bookings_Services` as a join table which might or might not be correct based on the actual data model. If there's a different way the workshops and services are related, you would need to adjust the join condition accordingly.
-------------------------5134 sample_num
```sql
SELECT DISTINCT dwg.Store_Name 
FROM Drama_Workshop_Groups dwg
JOIN Services s ON dwg.Workshop_Group_ID = s.Workshop_Group_ID 
WHERE s.Product_Name = 'film';
```
-------------------------5135 sample_num
```sql
SELECT DISTINCT dwg.Store_Name 
FROM Drama_Workshop_Groups dwg
JOIN Services s ON dwg.Workshop_Group_ID = s.Workshop_Group_ID 
WHERE s.Product_Name = 'film';
```
-------------------------5136 sample_num
```sql
SELECT Product_Name, AVG(Product_Price) 
FROM Products 
GROUP BY Product_Name;
```
-------------------------5137 sample_num
```sql
SELECT Product_Name, AVG(Product_Price) 
FROM Products 
GROUP BY Product_Name;
```
-------------------------5138 sample_num
```sql
SELECT Product_Name 
FROM Products 
WHERE Product_Price < (SELECT AVG(Product_Price) FROM Products WHERE Product_Price < 1000000)
``` 

However, the correct SQL statement should be:
```sql
SELECT Product_Name 
FROM Products 
WHERE Product_Price < 1000000;
```
-------------------------5139 sample_num
```sql
SELECT Product_Name 
FROM Products 
WHERE Product_Price < (SELECT AVG(Product_Price) FROM Products WHERE Product_Price < 1000000)
``` 

However, the correct SQL query to find the product names whose average product price is below 1000000 should be:
```sql
SELECT Product_Name 
FROM Products 
WHERE Product_Price < 1000000;
```
Or if you want to use subquery for the average:
```sql
SELECT Product_Name 
FROM Products 
WHERE Product_Price < (SELECT AVG(Product_Price) FROM Products);
```
-------------------------5140 sample_num
```sql
SELECT SUM(Order_Quantity) 
FROM Order_Items 
JOIN Products ON Order_Items.Product_ID = Products.Product_ID 
WHERE Products.Product_Name LIKE '%photo%';
```
-------------------------5141 sample_num
```sql
SELECT SUM(Order_Quantity) 
FROM Order_Items 
JOIN Products ON Order_Items.Product_ID = Products.Product_ID 
WHERE Products.Product_Name = 'photo';
```
-------------------------5142 sample_num
```sql
SELECT od.Order_ID, od.Order_Date, od.Planned_Delivery_Date, od.Actual_Delivery_Date, od.Other_Order_Details, p.Product_Name, p.Product_Price
FROM Customer_Orders od
JOIN Order_Items oi ON od.Order_ID = oi.Order_ID
JOIN Products p ON oi.Product_ID = p.Product_ID
WHERE p.Product_Price > 2000;
```
-------------------------5143 sample_num
```sql
SELECT od.Order_ID, od.Order_Date, od.Planned_Delivery_Date, p.Product_Name, p.Product_Price, oi.Order_Quantity
FROM Customer_Orders od
JOIN Order_Items oi ON od.Order_ID = oi.Order_ID
JOIN Products p ON oi.Product_ID = p.Product_ID
WHERE p.Product_Price > 2000;
```
-------------------------5144 sample_num
```sql
SELECT T1.Actual_Delivery_Date 
FROM Bookings AS T1 
JOIN Order_Items AS T2 
ON T1.Order_ID = T2.Order_ID 
WHERE T2.Order_Quantity = 1;
```
-------------------------5145 sample_num
```sql
SELECT T1.Actual_Delivery_Date 
FROM Customer_Orders AS T1 
JOIN Order_Items AS T2 
ON T1.Order_ID = T2.Order_ID 
WHERE T2.Order_Quantity = 1;
```
-------------------------5146 sample_num
```sql
SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_Price > 1000;
```
-------------------------5147 sample_num
```sql
SELECT Order_Date 
FROM Customer_Orders 
JOIN Order_Items ON Customer_Orders.Order_ID = Order_Items.Order_ID 
JOIN Products ON Order_Items.Product_ID = Products.Product_ID 
WHERE Products.Product_Price > 1000;
```
-------------------------5148 sample_num
```sql
SELECT COUNT(DISTINCT Currency_Code) FROM Drama_Workshop_Groups;
```
-------------------------5149 sample_num
```sql
SELECT COUNT(DISTINCT Currency_Code) FROM Drama_Workshop_Groups;
```
-------------------------5150 sample_num
```sql
SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg';
```
-------------------------5151 sample_num
```sql
SELECT T2.Store_Name 
FROM Addresses AS T1 
JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID 
WHERE T1.City_Town = 'Feliciaberg';
```
-------------------------5152 sample_num
```sql
SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = 'Alaska'
```
-------------------------5153 sample_num
```sql
SELECT T1.Store_Email_Address 
FROM Drama_Workshop_Groups AS T1 
JOIN Addresses AS T2 ON T1.Address_ID = T2.Address_ID 
WHERE T2.State_County = 'Alaska';
```
-------------------------5154 sample_num
```sql
SELECT 
    A.City_Town, 
    COUNT(D.WG.Workshop_Group_ID) AS Num_of_Workshop_Groups
FROM 
    Addresses A 
JOIN 
    Drama_Workshop_Groups WG 
ON 
    A.Address_ID = WG.Address_ID
GROUP BY 
    A.City_Town;
```
-------------------------5155 sample_num
```sql
SELECT T2.City_Town, COUNT(T1.Workshop_Group_ID) 
FROM Drama_Workshop_Groups AS T1 
JOIN Addresses AS T2 ON T1.Address_ID = T2.Address_ID 
GROUP BY T2.City_Town;
```
-------------------------5156 sample_num
```sql
SELECT T2.Marketing_Region_Code, COUNT(*) AS count 
FROM Drama_Workshop_Groups AS T1 
JOIN Marketing_Regions AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code 
GROUP BY T2.Marketing_Region_Code 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------5157 sample_num
```sql
SELECT Marketing_Region_Code, COUNT(*) AS NumberOfGroups
FROM Drama_Workshop_Groups
GROUP BY Marketing_Region_Code
ORDER BY NumberOfGroups DESC
LIMIT 1;
```
-------------------------5158 sample_num
```sql
SELECT DISTINCT A.City_Town
FROM Addresses A
JOIN Customers C ON A.Address_ID = C.Address_ID
WHERE NOT EXISTS (
    SELECT *
    FROM Addresses A2
    JOIN Performers P ON A2.Address_ID = P.Address_ID
    WHERE A.City_Town = A2.City_Town
)
```
```
-------------------------5159 sample_num
```sql
SELECT Line_1, City_Town 
FROM Addresses 
WHERE Address_ID IN (SELECT Address_ID FROM Customers) 
AND Address_ID NOT IN (SELECT Address_ID FROM Performers)
```
Note: This will return the address line 1 and city town of all addresses that are in the Customers table but not in the Performers table. However, to get only the distinct cities, you may want to add a GROUP BY clause:
```sql
SELECT City_Town 
FROM Addresses 
WHERE Address_ID IN (SELECT Address_ID FROM Customers) 
AND Address_ID NOT IN (SELECT Address_ID FROM Performers)
GROUP BY City_Town
```
-------------------------5160 sample_num
```sql
SELECT Status_Code, COUNT(*) as frequency 
FROM Bookings 
GROUP BY Status_Code 
ORDER BY frequency DESC 
LIMIT 1;
```
-------------------------5161 sample_num
```sql
SELECT Status_Code, COUNT(*) as total 
FROM Bookings 
GROUP BY Status_Code 
ORDER BY total DESC 
LIMIT 1;
```
-------------------------5162 sample_num
```sql
SELECT T2.Store_Name 
FROM Bookings AS T1 
JOIN Drama_Workshop_Groups AS T2 
ON T1.Workshop_Group_ID = T2.Workshop_Group_ID 
WHERE T1.Status_Code = 'stop'
```
-------------------------5163 sample_num
```sql
SELECT DISTINCT dwg.Store_Name 
FROM Drama_Workshop_Groups dwg
JOIN Bookings b ON dwg.Workshop_Group_ID = b.Workshop_Group_ID
WHERE b.Status_Code = 'stop';
```
-------------------------5164 sample_num
```sql
SELECT Client_Name 
FROM Clients 
WHERE Client_ID NOT IN (SELECT Client_ID FROM Bookings)
```
```
-------------------------5165 sample_num
```sql
SELECT Client_Name 
FROM Clients 
WHERE Client_ID NOT IN (SELECT Client_ID FROM Bookings);
```
-------------------------5166 sample_num
```sql
SELECT AVG(Order_Quantity) 
FROM Invoice_Items 
JOIN Invoices ON Invoice_Items.Invoice_ID = Invoices.Invoice_ID 
WHERE Invoices.payment_method_code = 'MasterCard';
```
-------------------------5167 sample_num
```sql
SELECT AVG(Order_Quantity) 
FROM Invoices 
JOIN Ref_Payment_Methods ON Invoices.payment_method_code = Ref_Payment_Methods.payment_method_code 
WHERE Ref_Payment_Methods.payment_method_description = 'MasterCard';
```
-------------------------5168 sample_num
```sql
SELECT Product_ID, COUNT(*) as frequency
FROM Invoice_Items
GROUP BY Product_ID
ORDER BY frequency DESC
LIMIT 1;
```
-------------------------5169 sample_num
```sql
SELECT Product_ID, COUNT(*) as frequency 
FROM Invoice_Items 
GROUP BY Product_ID 
ORDER BY frequency DESC 
LIMIT 1;
```
-------------------------5170 sample_num
```sql
SELECT T2.Service_Type_Description 
FROM Services AS T1 
JOIN Ref_Service_Types AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code 
WHERE T1.Product_Name = 'photo' 
INTERSECT 
SELECT T2.Service_Type_Description 
FROM Services AS T1 
JOIN Ref_Service_Types AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code 
WHERE T1.Product_Name = 'film'
```
-------------------------5171 sample_num
```sql
SELECT T2.Service_Type_Description 
FROM Services AS T1 
JOIN Ref_Service_Types AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code 
WHERE T1.Product_Name = 'photo' 
INTERSECT 
SELECT T2.Service_Type_Description 
FROM Services AS T1 
JOIN Ref_Service_Types AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code 
WHERE T1.Product_Name = 'film'
```
-------------------------5172 sample_num
```sql
SELECT COUNT(*) FROM Band;
```
-------------------------5173 sample_num
```sql
SELECT COUNT(*) FROM Band;
```
-------------------------5174 sample_num
```sql
SELECT DISTINCT Label FROM Albums;
```
-------------------------5175 sample_num
```sql
SELECT DISTINCT Label FROM Albums;
```
-------------------------5176 sample_num
```sql
SELECT Title FROM Albums WHERE Year = 2012;
```
-------------------------5177 sample_num
```sql
SELECT * FROM Albums WHERE Year = 2012;
```
-------------------------5178 sample_num
```sql
SELECT P.StagePosition 
FROM Performance P 
JOIN Band B ON P.Bandmate = B.Id 
WHERE B.Firstname = 'Solveig';
```
-------------------------5179 sample_num
```sql
SELECT DISTINCT P.StagePosition 
FROM Performance P 
JOIN Band B ON P.Bandmate = B.Id 
WHERE B.Firstname = 'Solveig';
```
-------------------------5180 sample_num
```sql
SELECT COUNT(*) FROM Songs;
```
-------------------------5181 sample_num
```sql
SELECT COUNT(*) FROM Songs;
```
-------------------------5182 sample_num
```sql
SELECT Songs.Title 
FROM Songs 
JOIN Performance ON Songs.SongId = Performance.SongId 
JOIN Band ON Performance.Bandmate = Band.Id 
WHERE Band.Lastname = 'Heilo';
```
```
-------------------------5183 sample_num
```sql
SELECT Songs.Title 
FROM Songs 
JOIN Performance ON Songs.SongId = Performance.SongId 
JOIN Band ON Performance.Bandmate = Band.Id 
WHERE Band.Lastname = "Heilo";
```
Note: The provided schema does not match a standard relational model for music data. The `Performance` table's `Bandmate` column should likely be `BandmateId` to match the `Band` table's `Id` column. Also, the `Band` table should have a `BandmateId` column instead of just `Id` if there are multiple members in the band. Assuming there is only one member with the last name "Heilo" in the band, the query above will work. If there are multiple members, you may need to adjust the WHERE clause accordingly.
-------------------------5184 sample_num
```sql
SELECT COUNT(*) 
FROM Performance 
WHERE SongId = (SELECT SongId FROM Songs WHERE Title = 'Flash');
```
-------------------------5185 sample_num
```sql
SELECT COUNT(*) 
FROM Performance 
WHERE SongId IN (SELECT SongId FROM Songs WHERE Title = 'Flash');
```
-------------------------5186 sample_num
```sql
SELECT s.Title 
FROM Songs s 
JOIN Performance p ON s.SongId = p.SongId 
JOIN Band b ON p.Bandmate = b.Id 
WHERE b.Firstname = 'Marianne';
```
Note: The Performance table is used as a bridge between the Songs and Band tables, assuming that each band member performs in all songs they produce. If this is not the case, you may need a different approach to join these tables.
-------------------------5187 sample_num
```sql
SELECT s.Title 
FROM Songs s 
JOIN Performance p ON s.SongId = p.SongId 
JOIN Band b ON p.Bandmate = b.Id 
WHERE b.Firstname = 'Marianne';
```
-------------------------5188 sample_num
```sql
SELECT B.firstname, B.lastname 
FROM Band B 
JOIN Performance P ON B.id = P.Bandmate 
JOIN Songs S ON S.SongId = P.SongId 
WHERE S.Title = 'Badlands';
```
-------------------------5189 sample_num
```sql
SELECT B.firstname, B.lastname 
FROM Performance P 
JOIN Band B ON P.Bandmate = B.Id 
JOIN Songs S ON P.SongId = S.SongId 
WHERE S.Title = 'Badlands';
```
-------------------------5190 sample_num
```sql
SELECT B.firstname, B.lastname 
FROM Band B 
JOIN Performance P ON B.Id = P.Bandmate 
WHERE P.StagePosition = 'back' AND P.SongId = (
    SELECT S.SongId 
    FROM Songs S 
    WHERE S.Title = 'Badlands'
);
```
-------------------------5191 sample_num
```sql
SELECT B.firstname, B.lastname 
FROM Band B 
JOIN Performance P ON B.Id = P.Bandmate 
JOIN Songs S ON S.SongId = P.SongId 
WHERE S.Title = 'Badlands' AND P.StagePosition = 'back';
```
-------------------------5192 sample_num
```sql
SELECT COUNT(DISTINCT Label) FROM Albums;
```
-------------------------5193 sample_num
```sql
SELECT DISTINCT Label FROM Albums;
```
-------------------------5194 sample_num
```sql
SELECT Label 
FROM Albums 
GROUP BY Label 
ORDER BY COUNT(AId) DESC 
LIMIT 1;
```
-------------------------5195 sample_num
```sql
SELECT Label 
FROM Albums 
GROUP BY Label 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5196 sample_num
```sql
SELECT T2.Lastname 
FROM Songs AS T1 
JOIN Performance AS T2 ON T1.SongId = T2.SongId 
JOIN Band AS T3 ON T2.Bandmate = T3.Id 
GROUP BY T3.Lastname 
ORDER BY COUNT(T1.SongId) DESC 
LIMIT 1;
```
However, this query assumes that the 'Band' table's primary key column is named 'Id', not 'BandmateId'. If 'BandmateId' is correct, then the query would be as follows:

```sql
SELECT T2.Lastname 
FROM Songs AS T1 
JOIN Performance AS T2 ON T1.SongId = T2.SongId 
JOIN Band AS T3 ON T2.BandmateId = T3.BandmateId 
GROUP BY T3.Lastname 
ORDER BY COUNT(T1.SongId) DESC 
LIMIT 1;
```

But usually, the primary key column for a table like 'Band' would be named 'Id', not 'BandmateId'. So, the first query is likely correct.
-------------------------5197 sample_num
```sql
SELECT B.Lastname, COUNT(*) AS SongsCount 
FROM Songs S 
JOIN Performance P ON S.SongId = P.SongId 
JOIN Band B ON P.Bandmate = B.Id 
GROUP BY B.Lastname 
ORDER BY SongsCount DESC 
LIMIT 1;
```
-------------------------5198 sample_num
```sql
SELECT B.Lastname 
FROM Band B 
JOIN (
    SELECT Bandmate, COUNT(*) as cnt 
    FROM Performance 
    WHERE StagePosition = 'back' 
    GROUP BY Bandmate 
    ORDER BY cnt DESC 
    LIMIT 1
) P ON B.Id = P.Bandmate;
```
-------------------------5199 sample_num
```sql
SELECT B.Lastname, COUNT(*) AS cnt 
FROM Performance P 
JOIN Band B ON P.Bandmate = B.Id 
WHERE P.StagePosition = 'back' 
GROUP BY B.Lastname 
ORDER BY cnt DESC 
LIMIT 1;
```
-------------------------5200 sample_num
```sql
SELECT Title FROM Songs WHERE Title LIKE '%the%';
```
-------------------------5201 sample_num
```sql
SELECT Title FROM Songs WHERE Title LIKE '%the%';
```
-------------------------5202 sample_num
```sql
SELECT DISTINCT Instrument FROM Instruments;
```
-------------------------5203 sample_num
```sql
SELECT DISTINCT Instrument FROM Instruments;
```
-------------------------5204 sample_num
```sql
SELECT i.Instrument 
FROM Instruments i 
JOIN Band b ON i.BandmateId = b.Id 
JOIN Songs s ON i.SongId = s.SongId 
WHERE b.Lastname = 'Heilo' AND s.Title = 'Le Pop';
```
-------------------------5205 sample_num
```sql
SELECT i.Instrument FROM Instruments i 
JOIN Band b ON i.BandmateId = b.Id 
JOIN Songs s ON i.SongId = s.SongId 
WHERE b.Lastname = "Heilo" AND s.Title = "Le Pop";
```
-------------------------5206 sample_num
```sql
SELECT Instrument, COUNT(*) AS Count 
FROM Instruments 
GROUP BY Instrument 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------5207 sample_num
```sql
SELECT Instrument, COUNT(*) AS Count 
FROM Instruments 
GROUP BY Instrument 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------5208 sample_num
```sql
SELECT COUNT(*) 
FROM Instruments 
WHERE Instrument = 'drums';
```
-------------------------5209 sample_num
```sql
SELECT COUNT(*) 
FROM Songs s 
JOIN Instruments i ON s.SongId = i.SongId 
WHERE i.Instrument = 'drums';
```
-------------------------5210 sample_num
```sql
SELECT i.Instrument 
FROM Instruments i 
JOIN Songs s ON i.SongId = s.SongId 
WHERE s.Title = 'Le Pop';
```
-------------------------5211 sample_num
```sql
SELECT i.Instrument 
FROM Instruments i 
JOIN Songs s ON i.SongId = s.SongId 
WHERE s.Title = 'Le Pop';
```
-------------------------5212 sample_num
```sql
SELECT COUNT(*) 
FROM Instruments 
WHERE SongId = (SELECT SongId FROM Songs WHERE Title = 'Le Pop');
```
-------------------------5213 sample_num
```sql
SELECT COUNT(DISTINCT Instrument) 
FROM Instruments 
JOIN Songs ON Instruments.SongId = Songs.SongId 
WHERE Songs.Title = 'Le Pop';
```
-------------------------5214 sample_num
```sql
SELECT COUNT(*) 
FROM Instruments 
WHERE BandmateId IN (SELECT Id FROM Band WHERE Lastname = 'Heilo');
```
-------------------------5215 sample_num
```sql
SELECT COUNT(DISTINCT i.Instrument) 
FROM Instruments i 
JOIN Band b ON i.BandmateId = b.Id 
WHERE b.Lastname = 'Heilo';
```
-------------------------5216 sample_num
```sql
SELECT DISTINCT Instruments.Instrument
FROM Instruments
JOIN Band ON Instruments.BandmateId = Band.Id
WHERE Band.Lastname = 'Heilo';
```
-------------------------5217 sample_num
```sql
SELECT DISTINCT i.Instrument 
FROM Instruments i 
JOIN Band b ON i.BandmateId = b.Id 
WHERE b.Lastname = 'Heilo';
```
-------------------------5218 sample_num
```sql
SELECT s.Title, COUNT(v.SongId) as VocalCount
FROM Songs s
JOIN Vocals v ON s.SongId = v.SongId
GROUP BY s.SongId, s.Title
ORDER BY VocalCount DESC
LIMIT 1;
```
-------------------------5219 sample_num
```sql
SELECT s.Title, COUNT(v.Type) as VocalCount 
FROM Songs s 
JOIN Vocals v ON s.SongId = v.SongId 
GROUP BY s.Title 
ORDER BY VocalCount DESC 
LIMIT 1;
```
-------------------------5220 sample_num
```sql
SELECT Type, COUNT(*) AS Frequency 
FROM Vocals 
GROUP BY Type 
ORDER BY Frequency DESC 
LIMIT 1;
```
-------------------------5221 sample_num
```sql
SELECT Type, COUNT(*) AS Frequency 
FROM Vocals 
GROUP BY Type 
ORDER BY Frequency DESC 
LIMIT 1;
```
-------------------------5222 sample_num
```sql
SELECT V.Type, COUNT(*) AS cnt 
FROM Vocals V 
JOIN Band B ON V.Bandmate = B.Id 
WHERE B.Lastname = 'Heilo' 
GROUP BY V.Type 
ORDER BY cnt DESC 
LIMIT 1;
```
-------------------------5223 sample_num
```sql
SELECT V.Type
FROM Vocals V
JOIN Band B ON V.Bandmate = B.Id
WHERE B.Lastname = 'Heilo'
GROUP BY V.Type
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------5224 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Songs S ON V.SongId = S.SongId 
WHERE S.Title = 'Le Pop';
```
-------------------------5225 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Songs S ON V.SongId = S.SongId 
WHERE S.Title = 'Le Pop';
```
-------------------------5226 sample_num
```sql
SELECT COUNT(DISTINCT V.Type) 
FROM Songs S 
JOIN Vocals V ON S.SongId = V.SongId 
WHERE S.Title = 'Demon Kitty Rag';
```
-------------------------5227 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Songs S ON V.SongId = S.SongId 
WHERE S.Title = 'Demon Kitty Rag';
```
-------------------------5228 sample_num
```sql
SELECT COUNT(DISTINCT T1.SongId) 
FROM Songs AS T1 
JOIN Vocals AS T2 
ON T1.SongId = T2.SongId 
WHERE T2.Type = 'lead';
```
-------------------------5229 sample_num
```sql
SELECT COUNT(DISTINCT T1.SongId) FROM Songs AS T1 JOIN Vocals AS T2 ON T1.SongId = T2.SongId WHERE T2.Type = 'lead';
```
-------------------------5230 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Songs S ON V.SongId = S.SongId 
JOIN Band B ON V.Bandmate = B.Id 
WHERE B.Firstname = 'Solveig' AND S.Title = 'A Bar in Amsterdam';
```
-------------------------5231 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Songs S ON V.SongId = S.SongId 
JOIN Band B ON V.Bandmate = B.Id 
WHERE B.Firstname = 'Solveig' AND S.Title = 'A Bar in Amsterdam';
```
-------------------------5232 sample_num
```sql
SELECT s.Title 
FROM Songs s 
LEFT JOIN Vocals v ON s.SongId = v.SongId 
WHERE v.Type != 'Lead' OR v.Type IS NULL;
```
-------------------------5233 sample_num
```sql
SELECT s.Title 
FROM Songs s
LEFT JOIN Vocals v ON s.SongId = v.SongId 
WHERE v.Type IS NULL OR v.Type <> 'Lead'
GROUP BY s.SongId, s.Title
HAVING COUNT(v.SongId) = 0
```
However, for accuracy in getting songs without any 'Lead' vocal, better to use NOT EXISTS as below:
```sql
SELECT s.Title 
FROM Songs s
WHERE NOT EXISTS (
  SELECT 1 FROM Vocals v WHERE v.SongId = s.SongId AND v.Type = 'Lead'
)
```
-------------------------5234 sample_num
```sql
SELECT DISTINCT Type FROM Vocals;
```
-------------------------5235 sample_num
```sql
SELECT DISTINCT Type FROM Vocals;
```
-------------------------5236 sample_num
```sql
SELECT Title FROM Albums WHERE Year = 2010;
```
-------------------------5237 sample_num
```sql
SELECT * FROM Albums WHERE Year = 2010;
```
-------------------------5238 sample_num
```sql
SELECT B.Firstname, B.Lastname 
FROM Band B 
JOIN Performance P ON B.Id = P.Bandmate 
JOIN Songs S ON S.SongId = P.SongId 
WHERE S.Title = 'Le Pop';
```
-------------------------5239 sample_num
```sql
SELECT B.firstname, B.lastname 
FROM Band B 
JOIN Performance P ON B.Id = P.Bandmate 
JOIN Songs S ON S.SongId = P.SongId 
WHERE S.Title = 'Le Pop';
```
-------------------------5240 sample_num
```sql
SELECT B.Lastname 
FROM Band B 
JOIN (
    SELECT BandmateId, COUNT(*) as num_songs 
    FROM Instruments 
    GROUP BY BandmateId 
    ORDER BY num_songs DESC 
    LIMIT 1
) M 
ON B.Id = M.BandmateId;
```
-------------------------5241 sample_num
```sql
SELECT B.Lastname 
FROM Band B 
JOIN (
    SELECT Bandmate, COUNT(*) as num_songs 
    FROM Performance 
    GROUP BY Bandmate 
    ORDER BY num_songs DESC 
    LIMIT 1
) P 
ON B.Id = P.Bandmate;
```
-------------------------5242 sample_num
```sql
SELECT i.Instrument 
FROM Instruments i 
JOIN Band b ON i.BandmateId = b.Id 
JOIN Songs s ON i.SongId = s.SongId 
WHERE b.Lastname = 'Heilo' AND s.Title = 'Badlands';
```
-------------------------5243 sample_num
```sql
SELECT i.Instrument 
FROM Instruments i 
JOIN Band b ON i.BandmateId = b.Id 
JOIN Songs s ON i.SongId = s.SongId 
WHERE b.Lastname = 'Heilo' AND s.Title = 'Badlands';
```
-------------------------5244 sample_num
```sql
SELECT COUNT(*) 
FROM Instruments 
WHERE SongId = (SELECT SongId FROM Songs WHERE Title = 'Badlands');
```
-------------------------5245 sample_num
```sql
SELECT COUNT(DISTINCT Instrument) 
FROM Instruments 
WHERE SongId = (SELECT SongId FROM Songs WHERE Title = 'Badlands');
```
-------------------------5246 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Songs S ON V.SongId = S.SongId 
WHERE S.Title = 'Badlands';
```
-------------------------5247 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Songs S ON V.SongId = S.SongId 
WHERE S.Title = 'Badlands';
```
-------------------------5248 sample_num
```sql
SELECT COUNT(DISTINCT Type) 
FROM Vocals 
JOIN Songs ON Vocals.SongId = Songs.SongId 
WHERE Songs.Title = 'Le Pop';
```
-------------------------5249 sample_num
```sql
SELECT COUNT(DISTINCT Type) 
FROM Vocals 
JOIN Songs ON Vocals.SongId = Songs.SongId 
WHERE Songs.Title = 'Le Pop';
```
-------------------------5250 sample_num
```sql
SELECT COUNT(*) 
FROM Songs s 
JOIN Vocals v ON s.SongId = v.SongId 
WHERE v.Type = 'shared';
```
-------------------------5251 sample_num
```sql
SELECT COUNT(DISTINCT SongId) 
FROM Vocals 
WHERE Type = 'shared';
```
-------------------------5252 sample_num
```sql
SELECT s.Title 
FROM Songs s 
LEFT JOIN Vocals v ON s.SongId = v.SongId 
WHERE v.Type != 'back' OR v.Type IS NULL
GROUP BY s.Title;
```
-------------------------5253 sample_num
```sql
SELECT DISTINCT s.Title 
FROM Songs s 
LEFT JOIN Vocals v ON s.SongId = v.SongId 
WHERE v.Type != 'back' OR v.Type IS NULL;
```
-------------------------5254 sample_num
```sql
SELECT V.Type
FROM Vocals V
JOIN Band B ON V.Bandmate = B.Id
WHERE B.Firstname = 'Solveig'
GROUP BY V.Type
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------5255 sample_num
```sql
SELECT V.Type
FROM Vocals V
JOIN Band B ON V.Bandmate = B.Id
WHERE B.Firstname = 'Solveig'
GROUP BY V.Type
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------5256 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Band B ON V.Bandmate = B.Id 
JOIN Songs S ON V.SongId = S.SongId 
WHERE B.Lastname = 'Heilo' AND S.Title = 'Der Kapitan';
```
-------------------------5257 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Songs S ON V.SongId = S.SongId 
JOIN Band B ON V.Bandmate = B.Id 
WHERE B.Lastname = 'Heilo' AND S.Title = 'Der Kapitan';
```
-------------------------5258 sample_num
```sql
SELECT B.firstname
FROM Band B
JOIN (
  SELECT Bandmate AS max_performer
  FROM Performance
  GROUP BY Bandmate
  ORDER BY COUNT(*) DESC
  LIMIT 1
) P ON B.Id = P.max_performer
```
-------------------------5259 sample_num
```sql
SELECT B.firstname 
FROM Band B 
JOIN Performance P ON B.id = P.Bandmate 
GROUP BY B.firstname 
ORDER BY COUNT(P.SongId) DESC 
LIMIT 1;
```
-------------------------5260 sample_num
```sql
SELECT V.Type, COUNT(*) AS cnt 
FROM Vocals V 
JOIN Band B ON V.Bandmate = B.Id 
WHERE B.Firstname = 'Marianne' 
GROUP BY V.Type 
ORDER BY cnt DESC 
LIMIT 1;
```
-------------------------5261 sample_num
```sql
SELECT V.Type 
FROM Vocals V 
JOIN Band B ON V.Bandmate = B.Id 
WHERE B.Firstname = 'Marianne' 
GROUP BY V.Type 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5262 sample_num
```sql
SELECT B.firstname, B.lastname 
FROM Performance P 
JOIN Band B ON P.Bandmate = B.Id 
JOIN Songs S ON P.SongId = S.SongId 
WHERE S.Title = 'Der Kapitan' AND P.StagePosition = 'back';
```
-------------------------5263 sample_num
```sql
SELECT B.firstname, B.lastname 
FROM Band B 
JOIN Performance P ON B.Id = P.Bandmate 
WHERE P.StagePosition = 'back' AND P.SongId = (
    SELECT S.Id 
    FROM Songs S 
    WHERE S.Title = 'Der Kapitan'
);
```
-------------------------5264 sample_num
```sql
SELECT s.Title 
FROM Songs s 
LEFT JOIN Vocals v ON s.SongId = v.SongId 
WHERE v.Type != 'back' OR v.Type IS NULL
GROUP BY s.Title;
```
```
-------------------------5265 sample_num
```sql
SELECT s.Title 
FROM Songs s 
LEFT JOIN Vocals v ON s.SongId = v.SongId 
WHERE v.Type != 'back' OR v.Type IS NULL
GROUP BY s.Title;
```
-------------------------5266 sample_num
```sql
SELECT s.Title 
FROM Songs s 
JOIN Tracklists t ON s.SongId = t.SongId 
JOIN Albums a ON t.AlbumId = a.AId 
WHERE a.Title = 'A Kiss Before You Go: Live in Hamburg';
```
-------------------------5267 sample_num
```sql
SELECT s.Title 
FROM Songs s 
JOIN Tracklists t ON s.SongId = t.SongId 
JOIN Albums a ON t.AlbumId = a.AId 
WHERE a.Title = 'A Kiss Before You Go: Live in Hamburg';
```
-------------------------5268 sample_num
```sql
SELECT s.Title 
FROM Songs s 
JOIN Tracklists t ON s.SongId = t.SongId 
JOIN Albums a ON t.AlbumId = a.AId 
WHERE a.Label = 'Universal Music Group';
```
-------------------------5269 sample_num
```sql
SELECT S.Title 
FROM Songs S
JOIN Tracklists T ON S.SongId = T.SongId
JOIN Albums A ON T.AlbumId = A.AId
WHERE A.Label = 'Universal Music Group'
```
-------------------------5270 sample_num
```sql
SELECT COUNT(S.SongId) 
FROM Songs S 
JOIN Tracklists T ON S.SongId = T.SongId 
JOIN Albums A ON T.AlbumId = A.AId 
WHERE A.Type = 'Studio';
```
-------------------------5271 sample_num
```sql
SELECT COUNT(DISTINCT T1.SongId) 
FROM Songs AS T1 
JOIN Tracklists AS T2 ON T1.SongId = T2.SongId 
JOIN Albums AS T3 ON T2.AlbumId = T3.AId 
WHERE T3.Type = 'studio';
```
-------------------------5272 sample_num
```sql
SELECT Founder FROM Manufacturers WHERE Name = 'Sony';
```
-------------------------5273 sample_num
```sql
SELECT T1.Founder 
FROM Manufacturers AS T1 
JOIN Products AS T2 ON T1.Code = T2.Manufacturer 
WHERE T2.Name = 'Sony'
``` 

Note: This assumes that the 'Name' field in the Products table uniquely identifies a manufacturer. If there's no direct link between 'Manufacturers' and 'Products' tables with 'Name', you would need to use 'Code' or a unique identifier for the correct join.

However, a more accurate query (assuming 'Name' in 'Manufacturers' is used for matching) would be:

```sql
SELECT Founder 
FROM Manufacturers 
WHERE Name = 'Sony'
```
```
-------------------------5274 sample_num
```sql
SELECT Headquarter FROM Manufacturers WHERE Founder = 'James';
```
-------------------------5275 sample_num
```sql
SELECT Headquarter 
FROM Manufacturers 
WHERE Founder = 'James';
```
-------------------------5276 sample_num
```sql
SELECT Name, Headquarter 
FROM Manufacturers 
ORDER BY Revenue DESC;
```
-------------------------5277 sample_num
```sql
SELECT Name, Headquarter FROM Manufacturers ORDER BY Revenue DESC;
```
-------------------------5278 sample_num
```sql
SELECT AVG(Revenue) AS Average_Revenue, MAX(Revenue) AS Maximum_Revenue, SUM(Revenue) AS Total_Revenue FROM manufactory_1.Manufacturers;
```
-------------------------5279 sample_num
```sql
SELECT AVG(Revenue) AS AverageRevenue, MAX(Revenue) AS MaximumRevenue, SUM(Revenue) AS TotalRevenue 
FROM Manufacturers;
```
-------------------------5280 sample_num
```sql
SELECT COUNT(*) 
FROM Manufacturers 
WHERE Founder = 'Andy';
```
-------------------------5281 sample_num
```sql
SELECT COUNT(*) 
FROM Manufacturers 
WHERE Founder = 'Andy';
```
-------------------------5282 sample_num
```sql
SELECT SUM(Revenue) 
FROM Manufacturers 
WHERE Headquarter = 'Austin';
``` 

However, this assumes that 'Revenue' in the Manufacturers table is actually recording the revenue created by each company, which might not be the case depending on the schema details. If 'Revenue' represents something else and the total revenue should be calculated based on the products sold, then the SQL would be:

```sql
SELECT SUM(p.Price * m.Revenue) as TotalRevenue
FROM Products p
JOIN Manufacturers m ON p.Manufacturer = m.Code
WHERE m.Headquarter = 'Austin';
```
But this assumes that 'Revenue' column in Manufacturers table represents some form of product sales factor (like quantity sold). Without more context it's hard to be sure.
-------------------------5283 sample_num
```sql
SELECT SUM(Revenue) 
FROM Manufacturers 
WHERE Headquarter = 'Austin';
```
-------------------------5284 sample_num
```sql
SELECT DISTINCT Headquarter FROM Manufacturers;
```
-------------------------5285 sample_num
```sql
SELECT DISTINCT Headquarter FROM Manufacturers;
```
-------------------------5286 sample_num
```sql
SELECT COUNT(*) 
FROM Manufacturers 
WHERE Headquarter = 'Tokyo' OR Headquarter = 'Beijing';
```
-------------------------5287 sample_num
```sql
SELECT COUNT(*) 
FROM Manufacturers 
WHERE Headquarter = 'Tokyo' OR Headquarter = 'Beijing';
```
-------------------------5288 sample_num
```sql
SELECT Founder 
FROM Manufacturers 
WHERE Name LIKE 'S%';
```
-------------------------5289 sample_num
```sql
SELECT Founder FROM Manufacturers WHERE Name LIKE 'S%';
```
-------------------------5290 sample_num
```sql
SELECT Name 
FROM Manufacturers 
WHERE Revenue BETWEEN 100 AND 150;
```
-------------------------5291 sample_num
```sql
SELECT Name FROM Manufacturers WHERE Revenue BETWEEN 100 AND 150;
```
-------------------------5292 sample_num
```sql
SELECT SUM(Revenue) 
FROM Manufacturers 
WHERE Headquarter IN ('Tokyo', 'Taiwan');
```
-------------------------5293 sample_num
```sql
SELECT SUM(Revenue) 
FROM Manufacturers 
WHERE Headquarter IN ('Tokyo', 'Taiwan');
```
-------------------------5294 sample_num
```sql
SELECT P.Name 
FROM Products P
JOIN Manufacturers M1 ON P.Manufacturer = M1.Code
JOIN Manufacturers M2 ON P.Manufacturer = M2.Code
WHERE M1.Name = 'Creative Labs' AND M2.Name = 'Sony'
GROUP BY P.Name
HAVING COUNT(*) > 1;
``` 
However, this query might not work as expected if each product can be associated with only one manufacturer. A better query would be:
```sql
SELECT P1.Name 
FROM Products P1 
JOIN Manufacturers M1 ON P1.Manufacturer = M1.Code
JOIN Products P2 
JOIN Manufacturers M2 ON P2.Manufacturer = M2.Code
WHERE M1.Name = 'Creative Labs' AND M2.Name = 'Sony' AND P1.Name = P2.Name;
```
-------------------------5295 sample_num
```sql
SELECT P.Name 
FROM Products P
JOIN Manufacturers M ON P.Manufacturer = M.Code
WHERE M.Name IN ('Creative Labs', 'Sony')
GROUP BY P.Name
HAVING COUNT(DISTINCT M.Name) = 2;
```
-------------------------5296 sample_num
```sql
SELECT Name, Headquarter, Founder 
FROM Manufacturers 
WHERE Revenue = (SELECT MAX(Revenue) FROM Manufacturers);
```
-------------------------5297 sample_num
```sql
SELECT Name, Headquarter, Founder 
FROM Manufacturers 
WHERE Revenue = (SELECT MAX(Revenue) FROM Manufacturers);
```
-------------------------5298 sample_num
```sql
SELECT Name, Headquarter, Revenue 
FROM Manufacturers 
ORDER BY Revenue DESC;
```
-------------------------5299 sample_num
```sql
SELECT Name, Headquarter, Revenue 
FROM Manufacturers 
ORDER BY Revenue DESC;
```
-------------------------5300 sample_num
```sql
SELECT Name 
FROM Manufacturers 
WHERE Revenue > (SELECT AVG(Revenue) FROM Manufacturers);
```
-------------------------5301 sample_num
```sql
SELECT Name 
FROM Manufacturers 
WHERE Revenue > (SELECT AVG(Revenue) FROM Manufacturers);
```
-------------------------5302 sample_num
```sql
SELECT Name 
FROM Manufacturers 
WHERE Revenue < ALL (
    SELECT Revenue 
    FROM Manufacturers 
    WHERE Headquarter = 'Austin'
);
```
-------------------------5303 sample_num
```sql
SELECT Name 
FROM Manufacturers 
WHERE Revenue < (SELECT MIN(Revenue) FROM Manufacturers WHERE Headquarter = 'Austin')
```
-------------------------5304 sample_num
```sql
SELECT SUM(Revenue) 
FROM Manufacturers 
WHERE Revenue > (
    SELECT MIN(Revenue) 
    FROM Manufacturers 
    WHERE Headquarter = 'Austin'
);
```
-------------------------5305 sample_num
```sql
SELECT SUM(Revenue) 
FROM Manufacturers 
WHERE Revenue > (
    SELECT MIN(Revenue) 
    FROM Manufacturers 
    WHERE Headquarter = 'Austin'
);
```
-------------------------5306 sample_num
```sql
SELECT Founder, SUM(Revenue) 
FROM Manufacturers 
GROUP BY Founder;
```
-------------------------5307 sample_num
```sql
SELECT SUM(Revenue) 
FROM Manufacturers 
WHERE Founder = 'founder';
```
Note: Replace 'founder' with the actual founder name you want to query.
-------------------------5308 sample_num
```sql
SELECT M1.Name, M1.Revenue, M1.Headquarter
FROM Manufacturers M1
WHERE M1.Revenue = (
    SELECT MAX(M2.Revenue)
    FROM Manufacturers M2
    WHERE M1.Headquarter = M2.Headquarter
);
```
-------------------------5309 sample_num
```sql
SELECT M1.Name, M1.Revenue, M1.Headquarter
FROM Manufacturers M1
LEFT JOIN Manufacturers M2 ON (M1.Headquarter = M2.Headquarter AND M1.Revenue < M2.Revenue)
WHERE M2.Code IS NULL;
```
-------------------------5310 sample_num
```sql
SELECT M.Name, SUM(P.Price) as TotalRevenue
FROM manufactory_1.Manufacturers M
JOIN manufactory_1.Products P ON M.Code = P.Manufacturer
GROUP BY M.Name;
```
-------------------------5311 sample_num
```sql
SELECT `Name`, SUM(`Revenue`) as Total_Revenue 
FROM `Manufacturers` 
GROUP BY `Name`;
``` 
However, this assumes that the 'Revenue' field is per unit or per product and is stored in the Manufacturers table. If 'Revenue' represents the total revenue for each manufacturer already, then there's no need to use SUM().
If 'Revenue' is actually in the 'Products' table or a combination of multiple fields, the query would be more complex and would involve joining the two tables. For standardization, we usually store such information as 'Revenue' in the 'Manufacturers' table. If it's total revenue from products sold, it should be calculated in application logic or a data processing step rather than stored in the database.
-------------------------5312 sample_num
```sql
SELECT M.Name, AVG(P.Price) as AveragePrice
FROM Manufacturers M
JOIN Products P ON M.Code = P.Manufacturer
GROUP BY M.Name;
```
-------------------------5313 sample_num
```sql
SELECT AVG(Price), Manufacturer 
FROM Products 
GROUP BY Manufacturer;
```
-------------------------5314 sample_num
```sql
SELECT COUNT(DISTINCT T2.Name) AS NumProducts, T1.Headquarter 
FROM Manufacturers AS T1 
JOIN Products AS T2 ON T1.Code = T2.Manufacturer 
GROUP BY T1.Headquarter;
```
-------------------------5315 sample_num
```sql
SELECT M.Headquarter, COUNT(DISTINCT P.Name) 
FROM Manufacturers M 
JOIN Products P 
ON M.Code = P.Manufacturer 
GROUP BY M.Headquarter;
```
-------------------------5316 sample_num
```sql
SELECT COUNT(*) FROM Products WHERE Manufacturer != (SELECT Code FROM Manufacturers WHERE Name = 'Sony');
```
-------------------------5317 sample_num
```sql
SELECT COUNT(*) FROM Products WHERE Manufacturer NOT IN (SELECT Code FROM Manufacturers WHERE Name = 'Sony');
```
-------------------------5318 sample_num
```sql
SELECT Name 
FROM Manufacturers 
WHERE Code NOT IN (SELECT Manufacturer FROM Products WHERE Name = 'DVD drive');
```
-------------------------5319 sample_num
```sql
SELECT Name 
FROM Manufacturers 
WHERE Code NOT IN (SELECT Manufacturer FROM Products WHERE Name = 'DVD drives')
```
-------------------------5320 sample_num
```sql
SELECT M.Name, COUNT(P.Code) as NumberOfProducts
FROM Manufacturers M
JOIN Products P ON M.Code = P.Manufacturer
GROUP BY M.Name;
```
-------------------------5321 sample_num
```sql
SELECT Manufacturers.Name, COUNT(Products.Code) AS NumberOfProducts
FROM Manufacturers
JOIN Products ON Manufacturers.Code = Products.Manufacturer
GROUP BY Manufacturers.Name;
```
-------------------------5322 sample_num
```sql
SELECT Name FROM Products;
```
-------------------------5323 sample_num
```sql
SELECT Name FROM Products;
```
-------------------------5324 sample_num
```sql
SELECT Name, Price 
FROM Products;
```
-------------------------5325 sample_num
```sql
SELECT Name, Price FROM Products;
```
-------------------------5326 sample_num
```sql
SELECT Name 
FROM Products 
WHERE Price <= 200;
```
-------------------------5327 sample_num
```sql
SELECT Name 
FROM Products 
WHERE Price <= 200;
```
-------------------------5328 sample_num
```sql
SELECT * FROM Products WHERE Price BETWEEN 60 AND 120;
```
-------------------------5329 sample_num
```sql
SELECT * FROM Products WHERE Price BETWEEN 60 AND 120;
```
-------------------------5330 sample_num
```sql
SELECT AVG(Price) FROM Products;
```
-------------------------5331 sample_num
```sql
SELECT AVG(Price) 
FROM Products;
```
-------------------------5332 sample_num
```sql
SELECT AVG(Price) 
FROM Products 
WHERE Manufacturer = 2;
```
-------------------------5333 sample_num
```sql
SELECT AVG(Price) 
FROM Products 
WHERE Manufacturer = 2;
```
-------------------------5334 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
WHERE Price >= 180;
```
-------------------------5335 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
WHERE Price >= 180;
```
-------------------------5336 sample_num
```sql
SELECT Name, Price 
FROM Products 
WHERE Price >= 180 
ORDER BY Price DESC, Name ASC;
```
-------------------------5337 sample_num
```sql
SELECT Name, Price 
FROM Products 
WHERE Price >= 180 
ORDER BY Price DESC, Name ASC;
```
-------------------------5338 sample_num
```sql
SELECT Products.*, Manufacturers.Name AS ManufacturerName, Manufacturers.Headquarter, Manufacturers.Founder, Manufacturers.Revenue 
FROM Products 
JOIN Manufacturers ON Products.Manufacturer = Manufacturers.Code;
```
-------------------------5339 sample_num
```sql
SELECT Products.*, Manufacturers.Name AS ManufacturerName 
FROM Products 
JOIN Manufacturers ON Products.Manufacturer = Manufacturers.Code;
```
-------------------------5340 sample_num
```sql
SELECT Manufacturer, AVG(Price) 
FROM Products 
GROUP BY Manufacturer;
```
-------------------------5341 sample_num
```sql
SELECT Manufacturer, AVG(Price) 
FROM Products 
GROUP BY Manufacturer;
```
-------------------------5342 sample_num
```sql
SELECT M.Name, AVG(P.Price) 
FROM Manufacturers M 
JOIN Products P ON M.Code = P.Manufacturer 
GROUP BY M.Name;
```
-------------------------5343 sample_num
```sql
SELECT AVG(Products.Price), Manufacturers.Name 
FROM Products 
JOIN Manufacturers ON Products.Manufacturer = Manufacturers.Code 
GROUP BY Manufacturers.Name;
```
-------------------------5344 sample_num
```sql
SELECT M.Name 
FROM Manufacturers M
JOIN Products P ON M.Code = P.Manufacturer
GROUP BY M.Name
HAVING AVG(P.Price) >= 150;
```
-------------------------5345 sample_num
```sql
SELECT M.Name, AVG(P.Price) 
FROM Manufacturers M 
JOIN Products P ON M.Code = P.Manufacturer 
GROUP BY M.Name 
HAVING AVG(P.Price) >= 150;
```
-------------------------5346 sample_num
```sql
SELECT Name, Price 
FROM Products 
ORDER BY Price 
LIMIT 1;
```
-------------------------5347 sample_num
```sql
SELECT Name, Price 
FROM Products 
ORDER BY Price 
LIMIT 1;
```
-------------------------5348 sample_num
```sql
SELECT M.Name AS Manufacturer_Name, P.Name AS Product_Name, MAX(P.Price) AS Max_Product_Price
FROM Manufacturers M
JOIN Products P ON M.Code = P.Manufacturer
GROUP BY M.Name;
```
-------------------------5349 sample_num
```sql
SELECT M.Name, P.Name, P.Price
FROM Manufacturers M
JOIN Products P ON M.Code = P.Manufacturer
WHERE (M.Code, P.Price) IN (
    SELECT Code, MAX(Price)
    FROM Products
    GROUP BY Manufacturer
);
```
-------------------------5350 sample_num
```sql
SELECT P1.Name, P1.Code, P1.Price, P1.Manufacturer
FROM Products P1
WHERE P1.Price = (
    SELECT MIN(P2.Price)
    FROM Products P2
    WHERE P1.Manufacturer = P2.Manufacturer
);
```
-------------------------5351 sample_num
```sql
SELECT p1.Name, p1.Code, p1.Price
FROM Products p1
WHERE p1.Price = (
    SELECT MIN(p2.Price)
    FROM Products p2
    WHERE p1.Manufacturer = p2.Manufacturer
);
```
-------------------------5352 sample_num
```sql
SELECT problem_log_id FROM Problem_Log ORDER BY log_entry_date DESC LIMIT 1;
```
-------------------------5353 sample_num
```sql
SELECT problem_log_id 
FROM Problem_Log 
ORDER BY log_entry_date DESC 
LIMIT 1;
```
-------------------------5354 sample_num
```sql
SELECT problem_log_id, problem_id 
FROM Problem_Log 
ORDER BY log_entry_date 
LIMIT 1;
```
-------------------------5355 sample_num
```sql
SELECT MIN(problem_log_id) as oldest_log_id, problem_id 
FROM Problem_Log;
```
-------------------------5356 sample_num
```sql
SELECT problem_log_id, log_entry_date 
FROM Problem_Log 
WHERE problem_id = 10;
```
-------------------------5357 sample_num
```sql
SELECT problem_log_id, log_entry_date 
FROM Problem_Log 
WHERE problem_id = 10;
```
-------------------------5358 sample_num
```sql
SELECT problem_log_id, log_entry_description 
FROM Problem_Log;
```
-------------------------5359 sample_num
```sql
SELECT problem_log_id, log_entry_description 
FROM Problem_Log;
```
-------------------------5360 sample_num
```sql
SELECT DISTINCT Staff.staff_first_name, Staff.staff_last_name 
FROM Staff 
JOIN Problem_Log 
ON Staff.staff_id = Problem_Log.assigned_to_staff_id 
WHERE Problem_Log.problem_id = 1;
```
-------------------------5361 sample_num
```sql
SELECT Staff.staff_first_name, Staff.staff_last_name 
FROM Staff 
JOIN Problem_Log 
ON Staff.staff_id = Problem_Log.assigned_to_staff_id 
WHERE Problem_Log.problem_id = 1;
```
-------------------------5362 sample_num
```sql
SELECT pl.problem_id, pl.problem_log_id 
FROM Problem_Log pl
JOIN Staff s ON pl.assigned_to_staff_id = s.staff_id
WHERE s.staff_first_name = 'Rylan' AND s.staff_last_name = 'Homenick';
```
-------------------------5363 sample_num
```sql
SELECT pl.problem_id, pl.problem_log_id 
FROM Problem_Log pl
JOIN Staff s ON pl.assigned_to_staff_id = s.staff_id
WHERE s.staff_first_name = 'Rylan' AND s.staff_last_name = 'Homenick';
```
-------------------------5364 sample_num
```sql
SELECT COUNT(*) 
FROM Problems 
JOIN Product ON Problems.product_id = Product.product_id 
WHERE Product.product_name = 'voluptatem';
```
-------------------------5365 sample_num
```sql
SELECT COUNT(*) 
FROM Problems 
JOIN Product ON Problems.product_id = Product.product_id 
WHERE Product.product_name = 'voluptatem';
```
-------------------------5366 sample_num
```sql
SELECT COUNT(Problems.problem_id) AS NumberOfProblems, Product.product_name 
FROM Problems 
JOIN Product ON Problems.product_id = Product.product_id 
GROUP BY Product.product_name 
ORDER BY NumberOfProblems DESC 
LIMIT 1;
```
-------------------------5367 sample_num
```sql
SELECT COUNT(Problems.problem_id) AS NumberOfProblems, Product.product_name 
FROM Problems 
JOIN Product ON Problems.product_id = Product.product_id 
GROUP BY Product.product_name 
ORDER BY NumberOfProblems DESC 
LIMIT 1;
```
-------------------------5368 sample_num
```sql
SELECT Problems.problem_description 
FROM Problems 
JOIN Staff ON Problems.reported_by_staff_id = Staff.staff_id 
WHERE Staff.staff_first_name = 'Christop';
```
-------------------------5369 sample_num
```sql
SELECT Problems.problem_description 
FROM Problems 
JOIN Staff ON Problems.reported_by_staff_id = Staff.staff_id 
WHERE Staff.staff_first_name = 'Christop';
```
-------------------------5370 sample_num
```sql
SELECT p.problem_id 
FROM Problems p
JOIN Staff s ON p.reported_by_staff_id = s.staff_id
WHERE s.staff_last_name = 'Bosco';
```
-------------------------5371 sample_num
```sql
SELECT problem_id 
FROM Problems 
WHERE reported_by_staff_id IN (
    SELECT staff_id 
    FROM Staff 
    WHERE staff_last_name = 'Bosco'
);
```
-------------------------5372 sample_num
```sql
SELECT problem_id FROM Problems WHERE date_problem_reported > '1978-06-26';
```
-------------------------5373 sample_num
```sql
SELECT problem_id 
FROM Problems 
WHERE date_problem_reported > '1978-06-26';
```
-------------------------5374 sample_num
```sql
SELECT problem_id FROM Problems WHERE date_problem_reported < '1978-06-26';
```
-------------------------5375 sample_num
```sql
SELECT problem_id 
FROM Problems 
WHERE date_problem_reported < '1978-06-26';
```
-------------------------5376 sample_num
```sql
SELECT COUNT(Problems.problem_id), Product.product_id 
FROM Problems 
JOIN Product 
ON Problems.product_id = Product.product_id 
GROUP BY Product.product_id;
```
-------------------------5377 sample_num
```sql
SELECT COUNT(Problems.problem_id), Product.product_id 
FROM Problems 
JOIN Product 
ON Problems.product_id = Product.product_id 
GROUP BY Product.product_id;
```
-------------------------5378 sample_num
```sql
SELECT COUNT(Problems.problem_id), Product.product_id 
FROM Problems 
JOIN Product ON Problems.product_id = Product.product_id 
WHERE Problems.date_problem_reported > '1986-11-13' 
GROUP BY Product.product_id;
```
-------------------------5379 sample_num
```sql
SELECT Product.product_id, COUNT(Problems.problem_id) AS problem_count
FROM Product
JOIN Problems ON Product.product_id = Problems.product_id
WHERE Problems.date_problem_reported > '1986-11-13'
GROUP BY Product.product_id;
```
-------------------------5380 sample_num
```sql
SELECT DISTINCT product_name 
FROM Product 
ORDER BY product_name ASC;
```
-------------------------5381 sample_num
```sql
SELECT DISTINCT product_name 
FROM Product 
ORDER BY product_name ASC;
```
-------------------------5382 sample_num
```sql
SELECT DISTINCT product_name 
FROM Product 
ORDER BY product_id;
```
-------------------------5383 sample_num
```sql
SELECT DISTINCT product_name 
FROM Product 
ORDER BY product_id;
```
-------------------------5384 sample_num
```sql
SELECT p.problem_id 
FROM Problems p
JOIN Staff s ON p.reported_by_staff_id = s.staff_id
WHERE s.staff_first_name IN ('Dameon', 'Jolie') AND s.staff_last_name IN ('Frami', 'Weber');
```
-------------------------5385 sample_num
```sql
SELECT problem_id 
FROM Problems 
WHERE reported_by_staff_id IN (
    SELECT staff_id 
    FROM Staff 
    WHERE staff_first_name = 'Dameon' AND staff_last_name = 'Frami' 
    OR staff_first_name = 'Jolie' AND staff_last_name = 'Weber'
);
```
-------------------------5386 sample_num
```sql
SELECT p.product_id 
FROM Problems pr 
JOIN Product p ON pr.product_id = p.product_id 
JOIN Staff s1 ON pr.reported_by_staff_id = s1.staff_id 
JOIN Staff s2 ON pr.closure_authorised_by_staff_id = s2.staff_id 
WHERE s1.staff_first_name = 'Christop' AND s1.staff_last_name = 'Berge' 
AND s2.staff_first_name = 'Ashley' AND s2.staff_last_name = 'Medhurst';
```
-------------------------5387 sample_num
```sql
SELECT P.product_id 
FROM Problems AS PR 
JOIN Product AS P ON PR.product_id = P.product_id 
JOIN Staff AS S1 ON PR.reported_by_staff_id = S1.staff_id 
JOIN Staff AS S2 ON PR.closure_authorised_by_staff_id = S2.staff_id 
WHERE S1.staff_first_name = 'Christop' AND S1.staff_last_name = 'Berge' 
AND S2.staff_first_name = 'Ashley' AND S2.staff_last_name = 'Medhurst';
```
-------------------------5388 sample_num
```sql
SELECT T1.problem_id FROM Problems AS T1 JOIN Staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T1.date_problem_reported < (SELECT MIN(date_problem_reported) FROM Problems WHERE reported_by_staff_id = (SELECT staff_id FROM Staff WHERE staff_first_name = "Lysanne" AND staff_last_name = "Turcotte"))
```
-------------------------5389 sample_num
```sql
SELECT p.problem_id 
FROM Problems p
WHERE p.date_problem_reported < ALL (
    SELECT pr.date_problem_reported 
    FROM Problems pr 
    JOIN Staff s ON pr.reported_by_staff_id = s.staff_id 
    WHERE s.staff_first_name = 'Lysanne' AND s.staff_last_name = 'Turcotte'
);
```
-------------------------5390 sample_num
```sql
SELECT p1.problem_id 
FROM Problems p1 
JOIN Staff s ON s.staff_id = p1.reported_by_staff_id 
WHERE p1.date_problem_reported > (
    SELECT MIN(p2.date_problem_reported) 
    FROM Problems p2 
    JOIN Staff s2 ON s2.staff_id = p2.reported_by_staff_id 
    WHERE s2.staff_first_name = 'Rylan' AND s2.staff_last_name = 'Homenick'
)
```
-------------------------5391 sample_num
```sql
SELECT p1.problem_id 
FROM Problems p1, Problems p2 
JOIN Staff s ON s.staff_id = p2.reported_by_staff_id 
WHERE s.staff_first_name = 'Rylan' AND s.staff_last_name = 'Homenick' 
AND p1.date_problem_reported > p2.date_problem_reported;
```
-------------------------5392 sample_num
```sql
SELECT p.product_name, COUNT(pr.problem_id) AS problem_count
FROM Product p
JOIN Problems pr ON p.product_id = pr.product_id
GROUP BY p.product_name
ORDER BY problem_count DESC
LIMIT 3;
```
-------------------------5393 sample_num
```sql
SELECT p.product_name, COUNT(*) AS problem_count 
FROM Problems pr 
JOIN Product p ON pr.product_id = p.product_id 
GROUP BY p.product_name 
ORDER BY problem_count DESC 
LIMIT 3;
```
-------------------------5394 sample_num
```sql
SELECT p.problem_id 
FROM Problems p
JOIN Product pr ON p.product_id = pr.product_id
WHERE pr.product_name = 'voluptatem' AND YEAR(p.date_problem_reported) > 1995;
```
-------------------------5395 sample_num
```sql
SELECT p.problem_id 
FROM Problems p
JOIN Product pr ON p.product_id = pr.product_id
WHERE pr.product_name = 'voluptatem' AND YEAR(p.date_problem_reported) > 1995;
```
-------------------------5396 sample_num
```sql
SELECT Staff.staff_first_name, Staff.staff_last_name 
FROM Problems 
JOIN Staff ON Problems.reported_by_staff_id = Staff.staff_id 
JOIN Product ON Problems.product_id = Product.product_id 
WHERE Product.product_name LIKE 'rem%' 
AND Product.product_name NOT LIKE 'aut%' ;
```
-------------------------5397 sample_num
```sql
SELECT s.staff_first_name, s.staff_last_name
FROM Staff s
JOIN Problems p ON s.staff_id = p.reported_by_staff_id
JOIN Product pr ON pr.product_id = p.product_id
WHERE pr.product_name LIKE 'rem%'
AND pr.product_name NOT LIKE 'aut%'
GROUP BY s.staff_first_name, s.staff_last_name;
```
-------------------------5398 sample_num
```sql
SELECT p.product_name 
FROM Product p
JOIN Problems pr ON p.product_id = pr.product_id
JOIN Staff s ON pr.reported_by_staff_id = s.staff_id
WHERE s.staff_first_name IN ('Lacey', 'Kenton') AND s.staff_last_name IN ('Bosco', 'Champlin')
GROUP BY p.product_id
HAVING COUNT(DISTINCT s.staff_first_name) = 2;
```
-------------------------5399 sample_num
```sql
SELECT p.product_name 
FROM Product p 
JOIN Problems pr ON p.product_id = pr.product_id 
WHERE pr.reported_by_staff_id IN (
    SELECT s.staff_id 
    FROM Staff s 
    WHERE s.staff_first_name = 'Lacey' AND s.staff_last_name = 'Bosco'
) AND pr.product_id IN (
    SELECT p2.product_id 
    FROM Product p2 
    JOIN Problems pr2 ON p2.product_id = pr2.product_id 
    WHERE pr2.reported_by_staff_id IN (
        SELECT s2.staff_id 
        FROM Staff s2 
        WHERE s2.staff_first_name = 'Kenton' AND s2.staff_last_name = 'Champlin'
    )
)
GROUP BY p.product_name;
```
-------------------------5400 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT Branch_ID 
  FROM branch 
  WHERE membership_amount > (
    SELECT AVG(membership_amount) 
    FROM branch
  )
) as result;
```
-------------------------5401 sample_num
```sql
SELECT COUNT(*) 
FROM branch 
WHERE membership_amount > (SELECT AVG(membership_amount) FROM branch);
```
-------------------------5402 sample_num
```sql
SELECT Name, Address_road, City 
FROM branch 
ORDER BY Open_year;
```
-------------------------5403 sample_num
```sql
SELECT Name, Address_road, City 
FROM branch 
ORDER BY Open_year;
```
-------------------------5404 sample_num
```sql
SELECT T2.Name 
FROM membership_register_branch AS T1 
JOIN branch AS T2 
ON T1.Branch_ID = T2.Branch_ID 
GROUP BY T2.Branch_ID 
ORDER BY COUNT(*) DESC 
LIMIT 3;
```
-------------------------5405 sample_num
```sql
SELECT T2.Name 
FROM membership_register_branch AS T1 
JOIN branch AS T2 
ON T1.Branch_ID = T2.Branch_ID 
GROUP BY T2.Name 
ORDER BY COUNT(*) DESC 
LIMIT 3;
```
-------------------------5406 sample_num
```sql
SELECT DISTINCT City 
FROM branch 
WHERE membership_amount >= 100;
```
-------------------------5407 sample_num
```sql
SELECT DISTINCT City 
FROM branch 
WHERE membership_amount > 100;
```
-------------------------5408 sample_num
```sql
SELECT Open_year 
FROM branch 
GROUP BY Open_year 
HAVING COUNT(*) >= 2;
```
-------------------------5409 sample_num
```sql
SELECT Open_year 
FROM branch 
GROUP BY Open_year 
HAVING COUNT(*) >= 2;
```
-------------------------5410 sample_num
```sql
SELECT MIN(membership_amount) AS MinMemberships, MAX(membership_amount) AS MaxMemberships 
FROM branch 
WHERE (Open_year = 2011 OR City = 'London');
```
-------------------------5411 sample_num
```sql
SELECT MIN(membership_amount), MAX(membership_amount)
FROM branch
WHERE Open_year = 2011 OR City = 'London';
```
-------------------------5412 sample_num
```sql
SELECT City, COUNT(*) 
FROM branch 
WHERE Open_year < 2010 
GROUP BY City;
```
-------------------------5413 sample_num
```sql
SELECT City, COUNT(*) 
FROM branch 
WHERE Open_year < 2010 
GROUP BY City;
```
-------------------------5414 sample_num
```sql
SELECT COUNT(DISTINCT Level) FROM member;
```
-------------------------5415 sample_num
```sql
SELECT DISTINCT Level FROM member;
```
-------------------------5416 sample_num
```sql
SELECT Card_Number, Name, Hometown 
FROM member 
ORDER BY Level DESC;
```
-------------------------5417 sample_num
```sql
SELECT Card_Number, Name, Hometown 
FROM member 
ORDER BY Level DESC;
```
-------------------------5418 sample_num
```sql
SELECT Level 
FROM member 
GROUP BY Level 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5419 sample_num
```sql
SELECT Level, COUNT(*) AS Num_Members 
FROM member 
GROUP BY Level 
ORDER BY Num_Members DESC 
LIMIT 1;
```
-------------------------5420 sample_num
```sql
SELECT m.Name, b.Name 
FROM member m 
JOIN membership_register_branch mrb ON m.Member_ID = mrb.Member_ID 
JOIN branch b ON b.Branch_ID = mrb.Branch_ID 
ORDER BY mrb.Register_Year ASC;
```
-------------------------5421 sample_num
```sql
SELECT m.Name, b.Name 
FROM member m 
JOIN membership_register_branch mrb ON m.Member_ID = mrb.Member_ID 
JOIN branch b ON b.Branch_ID = mrb.Branch_ID 
ORDER BY mrb.Register_Year ASC;
```
-------------------------5422 sample_num
```sql
SELECT b.Name, COUNT(mrb.Member_ID) as Num_Members
FROM branch b
JOIN membership_register_branch mrb ON b.Branch_ID = mrb.Branch_ID
WHERE mrb.Register_Year > 2015
GROUP BY b.Name;
```
-------------------------5423 sample_num
```sql
SELECT B.Branch_ID, B.Name 
FROM branch AS B 
JOIN membership_register_branch AS MRB 
ON B.Branch_ID = MRB.Branch_ID 
WHERE MRB.Register_Year > 2015;
```
-------------------------5424 sample_num
```sql
SELECT Name 
FROM member 
WHERE Member_ID NOT IN (SELECT Member_ID FROM membership_register_branch);
```
-------------------------5425 sample_num
```sql
SELECT Name 
FROM member 
WHERE Member_ID NOT IN (SELECT Member_ID FROM membership_register_branch)
```
-------------------------5426 sample_num
```sql
SELECT T1.Name, T1.City 
FROM branch AS T1 
LEFT JOIN membership_register_branch AS T2 ON T1.Branch_ID = T2.Branch_ID 
GROUP BY T1.Branch_ID 
HAVING COUNT(T2.Member_ID) = 0
```
-------------------------5427 sample_num
```sql
SELECT T1.Name, T1.City 
FROM branch AS T1 
LEFT JOIN membership_register_branch AS T2 ON T1.Branch_ID = T2.Branch_ID 
GROUP BY T1.Branch_ID 
HAVING COUNT(T2.Branch_ID) = 0;
```
-------------------------5428 sample_num
```sql
SELECT T1.Name, T1.Open_year 
FROM branch AS T1 
JOIN membership_register_branch AS T2 ON T1.Branch_ID = T2.Branch_ID 
WHERE T2.Register_Year = 2016 
GROUP BY T1.Branch_ID 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5429 sample_num
```sql
SELECT T2.Name, T2.Open_year 
FROM membership_register_branch AS T1 
JOIN branch AS T2 ON T1.Branch_ID = T2.Branch_ID 
WHERE T1.Register_Year = 2016 
GROUP BY T2.Branch_ID 
ORDER BY COUNT(T1.Member_ID) DESC 
LIMIT 1;
```
-------------------------5430 sample_num
```sql
SELECT T1.Name, T1.Hometown 
FROM member AS T1 
JOIN membership_register_branch AS T2 
ON T1.Member_ID = T2.Member_ID 
WHERE T2.Register_Year = 2016;
```
-------------------------5431 sample_num
```sql
SELECT T1.Name, T1.Hometown 
FROM member AS T1 
JOIN membership_register_branch AS T2 
ON T1.Member_ID = T2.Member_ID 
WHERE T2.Register_Year = 2016;
```
-------------------------5432 sample_num
```sql
SELECT T1.City 
FROM (
SELECT City 
FROM branch 
WHERE Open_year = 2001
) AS T1
INTERSECT 
SELECT T2.City 
FROM (
SELECT City 
FROM branch 
WHERE membership_amount > 100
) AS T2
```
```
-------------------------5433 sample_num
```sql
SELECT T.City 
FROM (
    SELECT City 
    FROM branch 
    WHERE Open_year = 2001
    UNION
    SELECT City 
    FROM branch 
    WHERE membership_amount > 100
) AS T
GROUP BY T.City 
HAVING COUNT(T.City) = 2;
```
-------------------------5434 sample_num
```sql
SELECT City FROM branch WHERE membership_amount <= 100 UNION SELECT City FROM branch WHERE NOT EXISTS (SELECT * FROM branch AS b2 WHERE b2.City = branch.City AND b2.membership_amount > 100);
```
However, the above query is complex and not straightforward. A better approach would be:
```sql
SELECT DISTINCT City FROM branch WHERE City NOT IN (SELECT City FROM branch WHERE membership_amount > 100);
```
-------------------------5435 sample_num
```sql
SELECT City FROM branch WHERE membership_amount <= 100 UNION SELECT City FROM branch WHERE NOT City IN (SELECT City FROM branch WHERE membership_amount > 100)
```
However, the correct and simplified answer should be:
```sql
SELECT City FROM branch WHERE membership_amount <= 100 EXCEPT SELECT City FROM branch WHERE membership_amount > 100
``` 
Or better yet:
```sql
SELECT City FROM branch WHERE NOT EXISTS (SELECT * FROM branch b2 WHERE b2.City = branch.City AND b2.membership_amount > 100)
```
-------------------------5436 sample_num
```sql
SELECT SUM(Total_pounds) 
FROM purchase 
JOIN branch ON purchase.Branch_ID = branch.Branch_ID 
WHERE branch.City = 'London' AND purchase.Year = 2018;
```
-------------------------5437 sample_num
```sql
SELECT SUM(Total_pounds) 
FROM purchase 
JOIN branch ON purchase.Branch_ID = branch.Branch_ID 
WHERE branch.City = 'London' AND purchase.Year = 2018;
```
-------------------------5438 sample_num
```sql
SELECT COUNT(*) 
FROM purchase 
WHERE Member_ID IN (SELECT Member_ID FROM member WHERE Level = 6);
```
-------------------------5439 sample_num
```sql
SELECT SUM(Total_pounds) 
FROM purchase 
JOIN member ON purchase.Member_ID = member.Member_ID 
WHERE member.Level = 6;
```
-------------------------5440 sample_num
```sql
SELECT T2.Name 
FROM membership_register_branch AS T1 
JOIN branch AS T2 ON T1.Branch_ID = T2.Branch_ID 
JOIN member AS T3 ON T1.Member_ID = T3.Member_ID 
WHERE T3.Hometown LIKE '%Louisville, Kentucky%' 
INTERSECT 
SELECT T2.Name 
FROM membership_register_branch AS T1 
JOIN branch AS T2 ON T1.Branch_ID = T2.Branch_ID 
JOIN member AS T3 ON T1.Member_ID = T3.Member_ID 
WHERE T3.Hometown LIKE '%Hiram, Georgia%'
```
-------------------------5441 sample_num
```sql
SELECT T2.Name 
FROM membership_register_branch AS T1 
JOIN branch AS T2 ON T1.Branch_ID = T2.Branch_ID 
JOIN member AS T3 ON T1.Member_ID = T3.Member_ID 
WHERE T3.Hometown LIKE '%Louisville, Kentucky%' 
OR T3.Hometown LIKE '%Hiram, Georgia%'
GROUP BY T2.Name
``` 

However, for better performance, the correct SQL should be:

```sql
SELECT DISTINCT T2.Name 
FROM branch AS T2 
JOIN membership_register_branch AS T1 ON T2.Branch_ID = T1.Branch_ID 
JOIN member AS T3 ON T1.Member_ID = T3.Member_ID 
WHERE T3.Hometown LIKE '%Louisville, Kentucky%' 
OR T3.Hometown LIKE '%Hiram, Georgia%'
``` 
```
-------------------------5442 sample_num
```sql
SELECT Card_Number FROM member WHERE Hometown LIKE '%Kentucky%';
```
-------------------------5443 sample_num
```sql
SELECT Card_Number FROM member WHERE Hometown LIKE '%Kentucky%';
```
-------------------------5444 sample_num
```sql
SELECT COUNT(*) FROM Student;
```
-------------------------5445 sample_num
```sql
SELECT COUNT(*) FROM Student;
```
-------------------------5446 sample_num
```sql
SELECT COUNT(*) FROM Voting_record;
```
-------------------------5447 sample_num
```sql
SELECT COUNT(*) FROM Voting_record;
```
-------------------------5448 sample_num
```sql
SELECT COUNT(DISTINCT President_Vote) FROM Voting_record;
```
-------------------------5449 sample_num
```sql
SELECT COUNT(DISTINCT President_Vote) FROM Voting_record;
```
-------------------------5450 sample_num
```sql
SELECT MAX(Age) FROM Student;
```
-------------------------5451 sample_num
```sql
SELECT MAX(Age) FROM Student;
```
-------------------------5452 sample_num
```sql
SELECT LName 
FROM Student 
WHERE Major = 50;
```
-------------------------5453 sample_num
```sql
SELECT LName 
FROM Student 
WHERE Major = 50;
```
-------------------------5454 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Age > 22;
```
-------------------------5455 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Age > 22;
```
-------------------------5456 sample_num
```sql
SELECT Major FROM Student WHERE Sex = 'M';
```
-------------------------5457 sample_num
```sql
SELECT Major 
FROM Student 
WHERE Sex = 'Male';
```
-------------------------5458 sample_num
```sql
SELECT AVG(Age) 
FROM Student 
WHERE Sex = 'F';
```
-------------------------5459 sample_num
```sql
SELECT AVG(Age) 
FROM Student 
WHERE Sex = 'F';
```
-------------------------5460 sample_num
```sql
SELECT MAX(Age), MIN(Age) 
FROM Student 
WHERE Major = 600;
```
-------------------------5461 sample_num
```sql
SELECT MAX(Age) AS Oldest, MIN(Age) AS Youngest 
FROM Student 
WHERE Major = 600;
```
-------------------------5462 sample_num
```sql
SELECT Advisor FROM Student WHERE city_code = 'BAL';
```
-------------------------5463 sample_num
```sql
SELECT Advisor 
FROM Student 
WHERE city_code = 'BAL';
```
-------------------------5464 sample_num
```sql
SELECT DISTINCT Secretary_Vote 
FROM Voting_record 
WHERE Election_Cycle = 'Fall';
```
-------------------------5465 sample_num
```sql
SELECT DISTINCT Secretary_Vote 
FROM Voting_record 
WHERE Election_Cycle = 'Fall';
```
-------------------------5466 sample_num
```sql
SELECT DISTINCT President_Vote 
FROM Voting_record 
WHERE Registration_Date = '2015-08-30';
```
-------------------------5467 sample_num
```sql
SELECT DISTINCT President_Vote 
FROM Voting_record 
WHERE Election_Cycle = '08/30/2015';
```
-------------------------5468 sample_num
```sql
SELECT DISTINCT Registration_Date, Election_Cycle 
FROM Voting_record;
```
-------------------------5469 sample_num
```sql
SELECT DISTINCT Registration_Date, Election_Cycle FROM Voting_record;
```
-------------------------5470 sample_num
```sql
SELECT DISTINCT President_Vote, Vice_President_Vote 
FROM Voting_record;
```
-------------------------5471 sample_num
```sql
SELECT DISTINCT President_Vote, Vice_President_Vote 
FROM Voting_record;
```
-------------------------5472 sample_num
```sql
SELECT DISTINCT S.LName
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE V.Class_President_Vote IS NOT NULL;
```
-------------------------5473 sample_num
```sql
SELECT DISTINCT S.LName 
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE V.Class_President_Vote IS NOT NULL;
```
-------------------------5474 sample_num
```sql
SELECT DISTINCT S.Fname
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE V.Class_Senator_Vote IS NOT NULL;
```
-------------------------5475 sample_num
```sql
SELECT DISTINCT S.Fname
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE V.Class_President_Vote IS NOT NULL;
```
-------------------------5476 sample_num
```sql
SELECT DISTINCT S.Age
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE V.Secretary_Vote IS NOT NULL AND V.Election_Cycle = 'Fall';
```
-------------------------5477 sample_num
```sql
SELECT DISTINCT S.Age 
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID 
WHERE V.Secretary_Vote IS NOT NULL AND V.Election_Cycle = 'Fall';
```
-------------------------5478 sample_num
```sql
SELECT DISTINCT S.Advisor
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE V.Treasurer_Vote IS NOT NULL AND V.Election_Cycle = 'Spring';
```
-------------------------5479 sample_num
```sql
SELECT DISTINCT s.Advisor
FROM Student s
JOIN Voting_record vr ON s.StuID = vr.StuID
WHERE vr.Treasurer_Vote IS NOT NULL AND vr.Election_Cycle = 'Spring';
```
-------------------------5480 sample_num
```sql
SELECT DISTINCT S.Major
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE V.Treasurer_Vote IS NOT NULL;
```
-------------------------5481 sample_num
```sql
SELECT DISTINCT S.Major 
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE V.Treasurer_Vote IS NOT NULL;
```
-------------------------5482 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S
JOIN Voting_record V ON S.StuID = V.StuID
WHERE S.Sex = 'F' AND V.President_Vote IS NOT NULL;
```
-------------------------5483 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S 
JOIN Voting_record V 
ON S.StuID = V.StuID 
WHERE S.Sex = 'F' AND V.President_Vote IS NOT NULL;
```
-------------------------5484 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S 
JOIN Voting_record V ON S.StuID = V.StuID 
WHERE S.Age = 18 AND V.Vice_President_Vote IS NOT NULL;
```
-------------------------5485 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S 
JOIN Voting_record V 
ON S.StuID = V.StuID 
WHERE S.Age = 18 AND V.Vice_President_Vote IS NOT NULL;
```
-------------------------5486 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Voting_record vr ON s.StuID = vr.StuID 
WHERE s.Sex = 'M' AND vr.Election_Cycle = 'Fall' AND vr.Class_Senator_Vote IS NOT NULL;
```
-------------------------5487 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Voting_record vr 
ON s.StuID = vr.StuID 
WHERE s.Sex = 'M' AND vr.Class_Senator_Vote IS NOT NULL AND vr.Election_Cycle = 'Fall';
```
-------------------------5488 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Voting_record vr 
ON s.StuID = vr.StuID 
WHERE s.city_code = 'NYC' AND vr.Election_Cycle = 'Spring' AND vr.Class_Senator_Vote IS NOT NULL;
```
-------------------------5489 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Voting_record vr 
ON s.StuID = vr.StuID 
WHERE s.city_code = 'NYC' AND vr.Election_Cycle = 'Spring' AND vr.Class_Senator_Vote IS NOT NULL;
```
-------------------------5490 sample_num
```sql
SELECT AVG(Student.Age)
FROM Student
JOIN Voting_record ON Student.StuID = Voting_record.StuID
WHERE Student.city_code = 'NYC'
AND Voting_record.Secretary_Vote IS NOT NULL
AND Voting_record.Election_Cycle = 'spring';
```
-------------------------5491 sample_num
```sql
SELECT AVG(Student.Age)
FROM Student
JOIN Voting_record ON Student.StuID = Voting_record.StuID
WHERE Student.city_code = 'NYC'
AND Voting_record.Secretary_Vote IS NOT NULL
AND Voting_record.Election_Cycle = 'spring';
```
-------------------------5492 sample_num
```sql
SELECT AVG(Student.Age)
FROM Student
JOIN Voting_record ON Student.StuID = Voting_record.StuID
WHERE Student.Sex = 'F'
AND Voting_record.Secretary_Vote IS NOT NULL
AND Voting_record.Election_Cycle = 'spring';
```
-------------------------5493 sample_num
```sql
SELECT AVG(Student.Age)
FROM Student
JOIN Voting_record ON Student.StuID = Voting_record.StuID
WHERE Student.Sex = 'Female' AND Voting_record.Secretary_Vote IS NOT NULL AND Voting_record.Election_Cycle = 'Spring';
```
-------------------------5494 sample_num
```sql
SELECT DISTINCT S.Fname
FROM Student S
JOIN Voting_record V ON S.StuID = V.Vice_President_Vote
WHERE S.city_code <> 'PIT';
```
-------------------------5495 sample_num
```sql
SELECT DISTINCT S.Fname 
FROM Student S 
JOIN Voting_record V ON S.StuID = V.Vice_President_Vote 
WHERE S.city_code <> 'PIT';
```
-------------------------5496 sample_num
```sql
SELECT DISTINCT S.LName
FROM Student S
JOIN Voting_record V ON S.StuID = V.President_Vote
WHERE S.Advisor <> 2192;
```
-------------------------5497 sample_num
```sql
SELECT DISTINCT S.LName 
FROM Student S 
JOIN Voting_record V ON S.StuID = V.President_Vote 
WHERE S.Advisor <> 2192;
```
-------------------------5498 sample_num
```sql
SELECT DISTINCT S.LName
FROM Student S
JOIN Voting_record V ON S.StuID = V.President_Vote
WHERE S.Advisor = 8741;
```
-------------------------5499 sample_num
```sql
SELECT DISTINCT S.LName 
FROM Student S 
JOIN Voting_record V ON S.StuID = V.StuID 
WHERE S.Advisor = 8741 AND V.President_Vote IS NOT NULL;
```
-------------------------5500 sample_num
```sql
SELECT Advisor, COUNT(*) AS Total_Students
FROM Student
GROUP BY Advisor;
```
-------------------------5501 sample_num
```sql
SELECT Advisor, COUNT(*) AS Num_Students 
FROM Student 
GROUP BY Advisor;
```
-------------------------5502 sample_num
```sql
SELECT Advisor
FROM Student
GROUP BY Advisor
HAVING COUNT(StuID) > 2;
```
-------------------------5503 sample_num
```sql
SELECT Advisor
FROM Student
GROUP BY Advisor
HAVING COUNT(StuID) > 2;
```
-------------------------5504 sample_num
```sql
SELECT Major 
FROM Student 
GROUP BY Major 
HAVING COUNT(*) < 3;
```
-------------------------5505 sample_num
```sql
SELECT Major 
FROM Student 
GROUP BY Major 
HAVING COUNT(*) < 3;
```
-------------------------5506 sample_num
```sql
SELECT Election_Cycle, COUNT(*) AS Number_of_Records 
FROM Voting_record 
GROUP BY Election_Cycle;
```
-------------------------5507 sample_num
```sql
SELECT Election_Cycle, COUNT(*) AS NumberOfRecords 
FROM Voting_record 
GROUP BY Election_Cycle;
```
-------------------------5508 sample_num
```sql
SELECT Major 
FROM Student 
GROUP BY Major 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5509 sample_num
```sql
SELECT Major 
FROM Student 
GROUP BY Major 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5510 sample_num
```sql
SELECT Major 
FROM Student 
WHERE Sex = 'F' 
GROUP BY Major 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5511 sample_num
```sql
SELECT Major 
FROM Student 
WHERE Sex = 'F' 
GROUP BY Major 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5512 sample_num
```sql
SELECT city_code 
FROM Student 
GROUP BY city_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5513 sample_num
```sql
SELECT city_code 
FROM Student 
GROUP BY city_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5514 sample_num
```sql
SELECT Advisor
FROM Student
GROUP BY Advisor
HAVING COUNT(StuID) > 2;
```
-------------------------5515 sample_num
```sql
SELECT Advisor
FROM Student
GROUP BY Advisor
HAVING COUNT(StuID) > 2;
```
-------------------------5516 sample_num
```sql
SELECT COUNT(*) FROM Products;
```
-------------------------5517 sample_num
```sql
SELECT COUNT(*) FROM Products;
```
-------------------------5518 sample_num
```sql
SELECT COUNT(*) FROM Ref_Colors;
```
-------------------------5519 sample_num
```sql
SELECT COUNT(*) FROM Ref_Colors;
```
-------------------------5520 sample_num
```sql
SELECT COUNT(*) FROM Characteristics;
```
-------------------------5521 sample_num
```sql
SELECT COUNT(*) FROM Characteristics;
```
-------------------------5522 sample_num
```sql
SELECT product_name, typical_buying_price FROM Products;
```
-------------------------5523 sample_num
```sql
SELECT product_name, typical_buying_price FROM Products;
```
-------------------------5524 sample_num
```sql
SELECT color_description FROM Ref_Colors;
```
-------------------------5525 sample_num
```sql
SELECT color_description FROM Ref_Colors;
```
-------------------------5526 sample_num
```sql
SELECT characteristic_name FROM Characteristics;
```
-------------------------5527 sample_num
```sql
SELECT DISTINCT characteristic_name 
FROM Characteristics;
```
-------------------------5528 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Ref_Product_Categories rpc ON p.product_category_code = rpc.product_category_code
WHERE rpc.product_category_description = 'Spices';
```
-------------------------5529 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Ref_Product_Categories rpc ON p.product_category_code = rpc.product_category_code
WHERE rpc.product_category_description = 'Spices';
```
-------------------------5530 sample_num
```sql
SELECT p.product_name, c.color_description, p.product_description
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
WHERE p.product_category_code = (
    SELECT product_category_code
    FROM Ref_Product_Categories
    WHERE product_category_description = 'Herbs'
)
```
-------------------------5531 sample_num
```sql
SELECT p.product_name, rcl.color_description, p.product_description
FROM Products p
JOIN Ref_Colors rcl ON p.color_code = rcl.color_code
JOIN Ref_Product_Categories rpc ON p.product_category_code = rpc.product_category_code
WHERE rpc.product_category_description = 'Herbs';
```
-------------------------5532 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
WHERE product_category_code = (SELECT product_category_code FROM Ref_Product_Categories WHERE product_category_description = 'Seeds');
```
-------------------------5533 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
WHERE product_category_code = (SELECT product_category_code FROM Ref_Product_Categories WHERE product_category_description = 'Seeds');
```
-------------------------5534 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
JOIN Ref_Product_Categories ON Products.product_category_code = Ref_Product_Categories.product_category_code 
WHERE Ref_Product_Categories.product_category_description = 'Spices' AND Products.typical_selling_price > 1000;
```
-------------------------5535 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
WHERE product_category_code = (SELECT product_category_code FROM Ref_Product_Categories WHERE product_category_description = 'Spices') 
AND typical_selling_price > 1000;
```
-------------------------5536 sample_num
```sql
SELECT T1.product_category_description, T2.typical_buying_price 
FROM Ref_Product_Categories AS T1 
JOIN Products AS T2 ON T1.product_category_code = T2.product_category_code 
WHERE T2.product_name = 'cumin';
```
-------------------------5537 sample_num
```sql
SELECT T1.product_category_code, T1.typical_buying_price 
FROM Products AS T1 
JOIN Ref_Product_Categories AS T2 ON T1.product_category_code = T2.product_category_code 
WHERE T1.product_name = 'cumin';
```
-------------------------5538 sample_num
```sql
SELECT Ref_Product_Categories.product_category_description 
FROM Products 
INNER JOIN Ref_Product_Categories 
ON Products.product_category_code = Ref_Product_Categories.product_category_code 
WHERE Products.product_name = 'flax';
```
-------------------------5539 sample_num
```sql
SELECT T.product_category_code FROM Products AS T WHERE T.product_name = 'flax'
```
-------------------------5540 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
WHERE c.color_description = 'yellow';
```
-------------------------5541 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
WHERE c.color_description = 'yellow';
```
-------------------------5542 sample_num
```sql
SELECT Ref_Product_Categories.product_category_description 
FROM Products 
INNER JOIN Ref_Product_Categories 
ON Products.product_category_code = Ref_Product_Categories.product_category_code 
WHERE Products.product_description LIKE '%t%';
```
-------------------------5543 sample_num
```sql
SELECT DISTINCT Ref_Product_Categories.product_category_description 
FROM Ref_Product_Categories 
JOIN Products ON Ref_Product_Categories.product_category_code = Products.product_category_code 
WHERE Products.product_description LIKE '%t%';
```
-------------------------5544 sample_num
```sql
SELECT T2.color_description FROM Products AS T1 JOIN Ref_Colors AS T2 ON T1.color_code = T2.color_code WHERE T1.product_name = "catnip";
```
-------------------------5545 sample_num
```sql
SELECT Ref_Colors.color_description 
FROM Products 
JOIN Ref_Colors ON Products.color_code = Ref_Colors.color_code 
WHERE Products.product_name = 'catnip';
```
-------------------------5546 sample_num
```sql
SELECT p.color_code, r.color_description 
FROM Products p
JOIN Ref_Colors r ON p.color_code = r.color_code
WHERE p.product_name = 'chervil';
```
-------------------------5547 sample_num
```sql
SELECT p.color_code, r.color_description
FROM Products p
JOIN Ref_Colors r ON p.color_code = r.color_code
WHERE p.product_name = 'chervil';
```
-------------------------5548 sample_num
```sql
SELECT p.product_id, rc.color_description
FROM Products p
JOIN Ref_Colors rc ON p.color_code = rc.color_code
WHERE p.product_id IN (
    SELECT pc.product_id
    FROM Product_Characteristics pc
    GROUP BY pc.product_id
    HAVING COUNT(pc.characteristic_id) >= 2
);
```
-------------------------5549 sample_num
```sql
SELECT p.product_id, rc.color_description
FROM Products p
JOIN Ref_Colors rc ON p.color_code = rc.color_code
WHERE p.product_id IN (
    SELECT pc.product_id
    FROM Product_Characteristics pc
    GROUP BY pc.product_id
    HAVING COUNT(pc.characteristic_id) >= 2
);
```
-------------------------5550 sample_num
```sql
SELECT p.product_name
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
WHERE c.color_description = 'white';
```
-------------------------5551 sample_num
```sql
SELECT p.product_name
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
WHERE c.color_description = 'white';
```
-------------------------5552 sample_num
```sql
SELECT p.product_name, p.typical_buying_price, p.typical_selling_price 
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
WHERE c.color_description = 'yellow';
```
-------------------------5553 sample_num
```sql
SELECT p.product_name, p.typical_buying_price, p.typical_selling_price 
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
WHERE c.color_description = 'yellow';
```
-------------------------5554 sample_num
```sql
SELECT COUNT(*) 
FROM Product_Characteristics pc
JOIN Products p ON pc.product_id = p.product_id
WHERE p.product_name = 'sesame';
```
-------------------------5555 sample_num
```sql
SELECT COUNT(*) 
FROM Product_Characteristics pc
JOIN Products p ON pc.product_id = p.product_id
WHERE p.product_name = 'sesame';
```
-------------------------5556 sample_num
```sql
SELECT COUNT(DISTINCT c.characteristic_name)
FROM Product_Characteristics pc
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id
JOIN Products p ON pc.product_id = p.product_id
WHERE p.product_name = 'cumin';
```
-------------------------5557 sample_num
```sql
SELECT COUNT(DISTINCT c.characteristic_name)
FROM Product_Characteristics pc
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id
JOIN Products p ON pc.product_id = p.product_id
WHERE p.product_name = 'cumin';
```
-------------------------5558 sample_num
```sql
SELECT C.characteristic_name 
FROM Characteristics C
JOIN Product_Characteristics PC ON C.characteristic_id = PC.characteristic_id
JOIN Products P ON P.product_id = PC.product_id
WHERE P.product_name = 'sesame';
```
-------------------------5559 sample_num
```sql
SELECT C.characteristic_name 
FROM Product_Characteristics PC 
JOIN Characteristics C ON PC.characteristic_id = C.characteristic_id 
JOIN Products P ON PC.product_id = P.product_id 
WHERE P.product_name = 'sesame';
```
-------------------------5560 sample_num
```sql
SELECT C.characteristic_name, C.characteristic_data_type 
FROM Product_Characteristics PC 
JOIN Characteristics C ON PC.characteristic_id = C.characteristic_id 
JOIN Products P ON PC.product_id = P.product_id 
WHERE P.product_name = 'cumin';
```
-------------------------5561 sample_num
```sql
SELECT C.characteristic_name, C.characteristic_data_type 
FROM Characteristics AS C 
JOIN Product_Characteristics AS PC ON C.characteristic_id = PC.characteristic_id 
JOIN Products AS P ON PC.product_id = P.product_id 
WHERE P.product_name = 'cumin';
```
-------------------------5562 sample_num
```sql
SELECT pc.product_characteristic_value 
FROM Product_Characteristics pc 
JOIN Products p ON pc.product_id = p.product_id 
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id 
WHERE p.product_name = 'sesame' 
AND c.characteristic_type_code = 'Grade';
```
-------------------------5563 sample_num
```sql
SELECT c.characteristic_name 
FROM Characteristics c
JOIN Product_Characteristics pc ON c.characteristic_id = pc.characteristic_id
JOIN Products p ON p.product_id = pc.product_id
JOIN Ref_Characteristic_Types rct ON rct.characteristic_type_code = c.characteristic_type_code
WHERE p.product_name = 'sesame' AND rct.characteristic_type_code = 'Grade';
```
-------------------------5564 sample_num
```sql
SELECT COUNT(*) 
FROM Product_Characteristics pc
JOIN Products p ON pc.product_id = p.product_id
WHERE p.product_name = 'laurel';
```
-------------------------5565 sample_num
```sql
SELECT COUNT(*) 
FROM Product_Characteristics pc
JOIN Products p ON pc.product_id = p.product_id
WHERE p.product_name = 'laurel';
```
-------------------------5566 sample_num
```sql
SELECT COUNT(*) 
FROM Product_Characteristics pc
JOIN Products p ON pc.product_id = p.product_id
WHERE p.product_name = 'flax';
```
-------------------------5567 sample_num
```sql
SELECT COUNT(*) 
FROM Product_Characteristics pc
JOIN Products p ON pc.product_id = p.product_id
WHERE p.product_name = 'flax';
```
-------------------------5568 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
JOIN Product_Characteristics pc ON p.product_id = pc.product_id
JOIN Characteristics ch ON pc.characteristic_id = ch.characteristic_id
WHERE c.color_description = 'red' AND ch.characteristic_name = 'fast';
```
-------------------------5569 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Product_Characteristics pc ON p.product_id = pc.product_id
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id
JOIN Ref_Colors rc ON p.color_code = rc.color_code
WHERE rc.color_description = 'red' AND c.characteristic_name = 'fast';
```
-------------------------5570 sample_num
```sql
SELECT COUNT(*) 
FROM Product_Characteristics pc
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id
WHERE c.characteristic_name = 'hot';
```
-------------------------5571 sample_num
```sql
SELECT COUNT(*) 
FROM Products p
JOIN Product_Characteristics pc ON p.product_id = pc.product_id
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id
WHERE c.characteristic_name = 'hot';
```
-------------------------5572 sample_num
```sql
SELECT DISTINCT p.product_name
FROM Products p
JOIN Product_Characteristics pc ON p.product_id = pc.product_id
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id
WHERE c.characteristic_name = 'warm';
```
-------------------------5573 sample_num
```sql
SELECT DISTINCT p.product_name
FROM Products p
JOIN Product_Characteristics pc ON p.product_id = pc.product_id
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id
JOIN Ref_Characteristic_Types rct ON c.characteristic_type_code = rct.characteristic_type_code
WHERE rct.characteristic_type_description = 'warm';
```
-------------------------5574 sample_num
```sql
SELECT COUNT(*) 
FROM Products p 
JOIN Ref_Colors c ON p.color_code = c.color_code 
JOIN Product_Characteristics pc ON p.product_id = pc.product_id 
JOIN Characteristics ch ON pc.characteristic_id = ch.characteristic_id 
WHERE c.color_description = 'red' AND ch.characteristic_name = 'slow';
```
-------------------------5575 sample_num
```sql
SELECT COUNT(*) 
FROM Products p 
JOIN Ref_Colors c ON p.color_code = c.color_code 
JOIN Product_Characteristics pc ON p.product_id = pc.product_id 
JOIN Characteristics ch ON pc.characteristic_id = ch.characteristic_id 
WHERE c.color_description = 'red' AND ch.characteristic_name = 'slow';
```
-------------------------5576 sample_num
```sql
SELECT COUNT(*) 
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
JOIN Product_Characteristics pc ON p.product_id = pc.product_id
JOIN Characteristics ch ON pc.characteristic_id = ch.characteristic_id
WHERE c.color_description = 'white' OR ch.characteristic_name = 'hot';
```
-------------------------5577 sample_num
```sql
SELECT COUNT(DISTINCT p.product_id) 
FROM Products p
JOIN Ref_Colors rc ON p.color_code = rc.color_code
JOIN Product_Characteristics pc ON p.product_id = pc.product_id
JOIN Characteristics c ON pc.characteristic_id = c.characteristic_id
WHERE rc.color_description = 'white' OR c.characteristic_name = 'hot';
```
```
-------------------------5578 sample_num
```sql
SELECT unit_of_measure 
FROM Ref_Product_Categories 
WHERE product_category_code = 'Herbs';
```
-------------------------5579 sample_num
```sql
SELECT Ref_Product_Categories.unit_of_measure 
FROM Ref_Product_Categories 
JOIN Products ON Ref_Product_Categories.product_category_code = Products.product_category_code 
WHERE Products.product_name = 'Herb';
```
-------------------------5580 sample_num
```sql
SELECT product_category_description 
FROM Ref_Product_Categories 
WHERE product_category_code = 'Spices';
```
-------------------------5581 sample_num
```sql
SELECT product_category_description 
FROM Ref_Product_Categories 
WHERE product_category_code = 'Spices';
```
-------------------------5582 sample_num
```sql
SELECT product_category_description, unit_of_measure 
FROM Ref_Product_Categories 
WHERE product_category_code = 'Herbs';
```
-------------------------5583 sample_num
```sql
SELECT Ref_Product_Categories.product_category_description, Ref_Product_Categories.unit_of_measure 
FROM Ref_Product_Categories 
WHERE Ref_Product_Categories.product_category_code = (SELECT Products.product_category_code FROM Products WHERE Products.product_name = 'Herbs' LIMIT 1);
```
However, it seems that the query should be modified if you want to get all products in the 'Herbs' category, not just one product with name 'Herbs'. Here is the corrected query:

```sql
SELECT Ref_Product_Categories.product_category_description, Ref_Product_Categories.unit_of_measure 
FROM Ref_Product_Categories 
JOIN Products ON Ref_Product_Categories.product_category_code = Products.product_category_code 
WHERE Ref_Product_Categories.product_category_description = 'Herbs';
```
-------------------------5584 sample_num
```sql
SELECT Ref_Product_Categories.unit_of_measure 
FROM Products 
INNER JOIN Ref_Product_Categories 
ON Products.product_category_code = Ref_Product_Categories.product_category_code 
WHERE Products.product_name = 'cumin';
```
-------------------------5585 sample_num
```sql
SELECT Ref_Product_Categories.unit_of_measure 
FROM Products 
INNER JOIN Ref_Product_Categories 
ON Products.product_category_code = Ref_Product_Categories.product_category_code 
WHERE Products.product_name = 'cumin';
```
-------------------------5586 sample_num
```sql
SELECT Ref_Product_Categories.unit_of_measure, Ref_Product_Categories.product_category_code 
FROM Ref_Product_Categories 
JOIN Products ON Ref_Product_Categories.product_category_code = Products.product_category_code 
WHERE Products.product_name = 'chervil';
```
-------------------------5587 sample_num
```sql
SELECT Ref_Product_Categories.unit_of_measure, Products.product_category_code
FROM Products
JOIN Ref_Product_Categories ON Products.product_category_code = Ref_Product_Categories.product_category_code
WHERE Products.product_name = 'chervil';
```
-------------------------5588 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Ref_Colors c ON p.color_code = c.color_code
JOIN Ref_Product_Categories pc ON p.product_category_code = pc.product_category_code
WHERE c.color_description = 'white' AND pc.unit_of_measure != 'Handful';
```
-------------------------5589 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Ref_Product_Categories rpc ON p.product_category_code = rpc.product_category_code
JOIN Ref_Colors rc ON p.color_code = rc.color_code
WHERE rc.color_description != 'white' AND rpc.unit_of_measure != 'Handful';
```
-------------------------5590 sample_num
```sql
SELECT T2.color_description FROM Products AS T1 JOIN Ref_Colors AS T2 ON T1.color_code = T2.color_code GROUP BY T1.color_code ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------5591 sample_num
```sql
SELECT T2.color_description
FROM Products AS T1 
JOIN Ref_Colors AS T2 
ON T1.color_code = T2.color_code
GROUP BY T2.color_description
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------5592 sample_num
```sql
SELECT T2.color_description FROM Products AS T1 JOIN Ref_Colors AS T2 ON T1.color_code = T2.color_code GROUP BY T1.color_code ORDER BY COUNT(*) ASC LIMIT 1
```
-------------------------5593 sample_num
```sql
SELECT T2.color_description 
FROM Products AS T1 
JOIN Ref_Colors AS T2 
ON T1.color_code = T2.color_code 
GROUP BY T2.color_description 
ORDER BY COUNT(*) 
LIMIT 1;
```
-------------------------5594 sample_num
```sql
SELECT c.characteristic_name
FROM Characteristics c
JOIN Product_Characteristics pc ON c.characteristic_id = pc.characteristic_id
GROUP BY c.characteristic_name
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------5595 sample_num
```sql
SELECT c.characteristic_name
FROM Characteristics c
JOIN Product_Characteristics pc ON c.characteristic_id = pc.characteristic_id
GROUP BY c.characteristic_name
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------5596 sample_num
```sql
SELECT c.characteristic_name, c.other_characteristic_details, c.characteristic_data_type 
FROM Characteristics c 
LEFT JOIN Product_Characteristics pc ON c.characteristic_id = pc.characteristic_id 
WHERE pc.characteristic_id IS NULL;
```
-------------------------5597 sample_num
```sql
SELECT c.characteristic_name, c.other_characteristic_details, c.characteristic_data_type 
FROM Characteristics c 
LEFT JOIN Product_Characteristics pc ON c.characteristic_id = pc.characteristic_id 
WHERE pc.product_id IS NULL;
```
-------------------------5598 sample_num
```sql
SELECT c.characteristic_name
FROM Characteristics c
JOIN Product_Characteristics pc ON c.characteristic_id = pc.characteristic_id
GROUP BY c.characteristic_name
HAVING COUNT(pc.product_id) >= 2;
```
-------------------------5599 sample_num
```sql
SELECT c.characteristic_name
FROM Characteristics c
JOIN Product_Characteristics pc ON c.characteristic_id = pc.characteristic_id
GROUP BY c.characteristic_name
HAVING COUNT(pc.product_id) >= 2;
```
-------------------------5600 sample_num
```sql
SELECT COUNT(*) 
FROM Ref_Colors
WHERE color_code NOT IN (SELECT color_code FROM Products)
```
```
-------------------------5601 sample_num
```sql
SELECT COUNT(*) 
FROM Ref_Colors 
WHERE color_code NOT IN (SELECT color_code FROM Products)
```
```
-------------------------5602 sample_num
```sql
SELECT COUNT(*) FROM event;
```
-------------------------5603 sample_num
```sql
SELECT Name 
FROM event 
ORDER BY Year DESC;
```
-------------------------5604 sample_num
```sql
SELECT T1.Name FROM event AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.ID ORDER BY T1.Year DESC LIMIT 1;
```
-------------------------5605 sample_num
```sql
SELECT COUNT(*) FROM stadium;
```
-------------------------5606 sample_num
```sql
SELECT name FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium);
```
-------------------------5607 sample_num
```sql
SELECT name FROM stadium WHERE Capacity < (SELECT AVG(Capacity) FROM stadium)
```
-------------------------5608 sample_num
```sql
SELECT Country, COUNT(*) AS Num_Stadiums 
FROM stadium 
GROUP BY Country 
ORDER BY Num_Stadiums DESC 
LIMIT 1;
```
-------------------------5609 sample_num
```sql
SELECT Country 
FROM stadium 
GROUP BY Country 
HAVING COUNT(*) <= 3;
```
-------------------------5610 sample_num
```sql
SELECT Country 
FROM stadium 
WHERE Capacity > 60000 
INTERSECT 
SELECT Country 
FROM stadium 
WHERE Capacity < 50000;
```
-------------------------5611 sample_num
```sql
SELECT COUNT(DISTINCT City) FROM stadium WHERE Opening_year < 2006;
```
-------------------------5612 sample_num
```sql
SELECT Country, COUNT(*) 
FROM stadium 
GROUP BY Country;
```
-------------------------5613 sample_num
```sql
SELECT DISTINCT Country FROM stadium WHERE Opening_year <= 2006 EXCEPT SELECT DISTINCT Country FROM stadium WHERE Opening_year > 2006;
```
-------------------------5614 sample_num
```sql
SELECT COUNT(*) FROM stadium WHERE Country != 'Russia'
```
-------------------------5615 sample_num
```sql
SELECT name FROM swimmer ORDER BY meter_100 ASC;
```
-------------------------5616 sample_num
```sql
SELECT COUNT(DISTINCT Nationality) FROM swimmer;
```
-------------------------5617 sample_num
```sql
SELECT Country
FROM (
  SELECT T1.Country, COUNT(*) AS cnt
  FROM swimmer AS T1
  GROUP BY T1.Country
) AS T2
WHERE T2.cnt > 1
```
-------------------------5618 sample_num
```sql
SELECT r.Result 
FROM record r 
JOIN swimmer s ON r.Swimmer_ID = s.ID 
WHERE s.Nationality = 'Australia' AND (r.Event_ID IN (SELECT e.ID FROM event e WHERE e.Name = '200 meter') OR r.Event_ID IN (SELECT e.ID FROM event e WHERE e.Name = '300 meter'));
```
-------------------------5619 sample_num
```sql
SELECT S.name 
FROM swimmer AS S 
JOIN record AS R ON S.ID = R.Swimmer_ID 
WHERE R.Result = 'win';
```
-------------------------5620 sample_num
```sql
SELECT s.name 
FROM stadium s
JOIN event e ON s.ID = e.Stadium_ID
GROUP BY s.ID
ORDER BY COUNT(e.ID) DESC
LIMIT 1;
```
-------------------------5621 sample_num
```sql
SELECT T1.name, T1.Capacity FROM stadium AS T1 JOIN event AS T2 ON T1.ID = T2.Stadium_ID WHERE T2.Name = "World Junior";
```
-------------------------5622 sample_num
```sql
SELECT name 
FROM stadium 
WHERE id NOT IN (SELECT stadium_id FROM event);
```
-------------------------5623 sample_num
```sql
SELECT s.name 
FROM swimmer s
JOIN record r ON s.ID = r.Swimmer_ID
GROUP BY s.ID
ORDER BY COUNT(r.ID) DESC
LIMIT 1;
```
-------------------------5624 sample_num
```sql
SELECT s.name 
FROM swimmer s
JOIN record r ON s.ID = r.Swimmer_ID
GROUP BY s.ID, s.name
HAVING COUNT(r.ID) >= 2;
```
-------------------------5625 sample_num
```sql
SELECT s.name, s.Nationality 
FROM swimmer s
JOIN record r ON s.ID = r.Swimmer_ID
WHERE r.Result = 'win'
GROUP BY s.ID
HAVING COUNT(r.ID) > 1;
```
-------------------------5626 sample_num
```sql
SELECT name 
FROM swimmer 
WHERE NOT EXISTS (
    SELECT * 
    FROM record 
    WHERE record.Swimmer_ID = swimmer.ID
);
```
-------------------------5627 sample_num
```sql
SELECT s.name
FROM swimmer s
JOIN record r1 ON s.ID = r1.Swimmer_ID
JOIN record r2 ON s.ID = r2.Swimmer_ID
WHERE r1.Result = 'win' AND r2.Result = 'loss'
GROUP BY s.name
HAVING COUNT(DISTINCT r1.Result) > 1 AND COUNT(DISTINCT r2.Result) > 1;
```
-------------------------5628 sample_num
```sql
SELECT DISTINCT s.name 
FROM stadium s
JOIN event e ON s.ID = e.Stadium_ID
JOIN record r ON e.ID = r.Event_ID
JOIN swimmer sw ON r.Swimmer_ID = sw.ID
WHERE sw.Nationality = 'Australia';
```
-------------------------5629 sample_num
```sql
SELECT s.name 
FROM stadium s 
JOIN event e ON s.ID = e.Stadium_ID 
JOIN record r ON e.ID = r.Event_ID 
GROUP BY s.ID 
ORDER BY COUNT(DISTINCT r.Swimmer_ID) DESC 
LIMIT 1;
```
-------------------------5630 sample_num
```sql
SELECT * FROM swimmer;
```
-------------------------5631 sample_num
```sql
SELECT AVG(Capacity) 
FROM stadium 
WHERE Opening_year = 2005;
```
-------------------------5632 sample_num
```sql
SELECT COUNT(*) FROM railway
```
-------------------------5633 sample_num
```sql
SELECT Builder FROM railway ORDER BY Builder ASC;
```
-------------------------5634 sample_num
```sql
SELECT Wheels, Location FROM railway;
```
-------------------------5635 sample_num
```sql
SELECT MAX(Level) 
FROM manager 
WHERE Country != 'Australia';
```
-------------------------5636 sample_num
```sql
SELECT AVG(Age) FROM manager;
```
-------------------------5637 sample_num
```sql
SELECT Name FROM manager ORDER BY Level ASC;
```
-------------------------5638 sample_num
```sql
SELECT Name, Arrival FROM train;
```
-------------------------5639 sample_num
```sql
SELECT Name FROM manager WHERE Age = (SELECT MAX(Age) FROM manager);
```
-------------------------5640 sample_num
```sql
SELECT T1.Name, T2.Location 
FROM train AS T1 
JOIN railway AS T2 
ON T1.Railway_ID = T2.Railway_ID;
```
-------------------------5641 sample_num
```sql
SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T2.Name = 'Andaman Exp'
```
-------------------------5642 sample_num
```sql
SELECT T1.Railway_ID, T1.Location 
FROM railway AS T1 
JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID 
GROUP BY T1.Railway_ID 
HAVING COUNT(T2.Train_ID) > 1;
```
-------------------------5643 sample_num
```sql
SELECT T1.Railway_ID, T1.Builder 
FROM railway AS T1 
JOIN train AS T2 
ON T1.Railway_ID = T2.Railway_ID 
GROUP BY T1.Railway_ID 
ORDER BY COUNT(T2.Train_ID) DESC 
LIMIT 1;
```
-------------------------5644 sample_num
```sql
SELECT Builder, COUNT(*) AS NumberOfRailways
FROM railway
GROUP BY Builder;
```
-------------------------5645 sample_num
```sql
SELECT Builder, COUNT(*) AS Count 
FROM railway 
GROUP BY Builder 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------5646 sample_num
```sql
SELECT Location, COUNT(Railway_ID) 
FROM railway 
GROUP BY Location;
```
-------------------------5647 sample_num
```sql
SELECT Location 
FROM railway 
GROUP BY Location 
HAVING COUNT(Railway_ID) > 1;
```
-------------------------5648 sample_num
```sql
SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)
```
-------------------------5649 sample_num
```sql
SELECT 
    Country 
FROM 
    manager 
WHERE 
    Age > 50 
INTERSECT 
SELECT 
    Country 
FROM 
    manager 
WHERE 
    Age < 46;
```
-------------------------5650 sample_num
```sql
SELECT DISTINCT Country FROM manager;
```
-------------------------5651 sample_num
```sql
SELECT Working_year_starts FROM manager ORDER BY Level DESC;
```
-------------------------5652 sample_num
```sql
SELECT DISTINCT Country FROM manager WHERE Age > 50 OR Age < 46;
```
-------------------------5653 sample_num
```sql
SELECT COUNT(*) 
FROM Addresses 
WHERE country = 'USA';
```
-------------------------5654 sample_num
```sql
SELECT DISTINCT city FROM Addresses;
```
-------------------------5655 sample_num
```sql
SELECT state_province_county, COUNT(address_id) 
FROM Addresses 
GROUP BY state_province_county;
```
-------------------------5656 sample_num
```sql
SELECT customer_name, customer_phone 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Address_History)
```
-------------------------5657 sample_num
```sql
SELECT c.customer_name 
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
GROUP BY c.customer_name
ORDER BY COUNT(co.order_id) DESC
LIMIT 1;
```
-------------------------5658 sample_num
```sql
SELECT product_type_code 
FROM Products 
GROUP BY product_type_code 
HAVING COUNT(*) >= 2;
```
-------------------------5659 sample_num
```sql
SELECT c.customer_name 
FROM Customers c
JOIN Customer_Orders co1 ON c.customer_id = co1.customer_id
JOIN Customer_Orders co2 ON c.customer_id = co2.customer_id
WHERE co1.order_status_code = 'completed' AND co2.order_status_code = 'part'
GROUP BY c.customer_name
HAVING COUNT(*) >= 2;
```
-------------------------5660 sample_num
```sql
SELECT customer_name, customer_phone, payment_method_code 
FROM Customers 
ORDER BY customer_number DESC;
```
-------------------------5661 sample_num
```sql
SELECT p.product_name, SUM(oi.order_quantity) as total_order_quantity
FROM Products p
JOIN Order_Items oi ON p.product_id = oi.product_id
GROUP BY p.product_name;
```
-------------------------5662 sample_num
```sql
SELECT MIN(product_price) AS MinPrice, MAX(product_price) AS MaxPrice, AVG(product_price) AS AvgPrice FROM Products;
```
-------------------------5663 sample_num
```sql
SELECT COUNT(*) 
FROM Products 
WHERE product_price > (SELECT AVG(product_price) FROM Products);
```
-------------------------5664 sample_num
```sql
SELECT 
    c.customer_name, 
    a.city, 
    Cah.date_from, 
    Cah.date_to 
FROM 
    customers c 
JOIN 
    customer_address_history Cah ON c.customer_id = Cah.customer_id 
JOIN 
    addresses a ON Cah.address_id = a.address_id;
```
-------------------------5665 sample_num
```sql
SELECT c.customer_name
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
WHERE c.payment_method_code = 'Credit Card'
GROUP BY c.customer_name
HAVING COUNT(co.order_id) > 2;
```
-------------------------5666 sample_num
```sql
SELECT C.customer_name, C.customer_phone 
FROM Customers C
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id
JOIN Order_Items OI ON CO.order_id = OI.order_id
WHERE C.customer_id = (
    SELECT customer_id 
    FROM (
        SELECT customer_id, SUM(order_quantity) as total_quantity 
        FROM Order_Items 
        JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id
        GROUP BY customer_id
    ) 
    ORDER BY total_quantity DESC 
    LIMIT 1
)
LIMIT 1;
```
-------------------------5667 sample_num
```sql
SELECT product_type_code, product_name 
FROM Products 
WHERE product_price > 1000 OR product_price < 500;
```
-------------------------5668 sample_num
```sql
SELECT dorm_name 
FROM Dorm 
WHERE gender = 'F';
```
-------------------------5669 sample_num
```sql
SELECT dorm_name 
FROM Dorm 
WHERE gender = 'F'
```
-------------------------5670 sample_num
```sql
SELECT dorm_name FROM Dorm WHERE student_capacity > 300;
```
-------------------------5671 sample_num
```sql
SELECT dorm_name FROM Dorm WHERE student_capacity > 300;
```
-------------------------5672 sample_num
```sql
SELECT COUNT(*) 
FROM Student 
WHERE Sex = 'F' AND Age < 25;
```
-------------------------5673 sample_num
```sql
SELECT COUNT(*) 
FROM Student 
WHERE Sex = 'F' AND Age < 25;
```
-------------------------5674 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Age > 20;
```
-------------------------5675 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Age > 20;
```
-------------------------5676 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE city_code = 'PHL' AND Age BETWEEN 20 AND 25;
```
-------------------------5677 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Age BETWEEN 20 AND 25 
AND city_code = 'PHL';
```
-------------------------5678 sample_num
```sql
SELECT COUNT(*) FROM Dorm;
```
-------------------------5679 sample_num
```sql
SELECT COUNT(*) FROM Dorm;
```
-------------------------5680 sample_num
```sql
SELECT COUNT(DISTINCT amenid) FROM Has_amenity;
```
-------------------------5681 sample_num
```sql
SELECT COUNT(DISTINCT amenid) FROM Has_amenity;
```
-------------------------5682 sample_num
```sql
SELECT SUM(student_capacity) FROM Dorm;
```
-------------------------5683 sample_num
```sql
SELECT SUM(student_capacity) FROM Dorm;
```
-------------------------5684 sample_num
```sql
SELECT COUNT(*) FROM Student;
```
-------------------------5685 sample_num
```sql
SELECT COUNT(*) FROM Student;
```
-------------------------5686 sample_num
```sql
SELECT city_code, AVG(Age) 
FROM Student 
WHERE StuID IN (SELECT StuID FROM Lives_in)
GROUP BY city_code;
```
-------------------------5687 sample_num
```sql
SELECT AVG(Age), city_code 
FROM Student 
GROUP BY city_code;
```
-------------------------5688 sample_num
```sql
SELECT AVG(student_capacity) AS average_capacity, SUM(student_capacity) AS total_capacity 
FROM Dorm 
WHERE gender = 'X';
```
-------------------------5689 sample_num
```sql
SELECT AVG(student_capacity) AS average_capacity, SUM(student_capacity) AS total_capacity 
FROM Dorm 
WHERE gender = 'X';
```
-------------------------5690 sample_num
```sql
SELECT COUNT(DISTINCT dormid) 
FROM Has_amenity;
```
-------------------------5691 sample_num
```sql
SELECT COUNT(DISTINCT dormid) 
FROM Has_amenity;
```
-------------------------5692 sample_num
```sql
SELECT dorm_name 
FROM Dorm 
WHERE dormid NOT IN (SELECT dormid FROM Has_amenity)
```
-------------------------5693 sample_num
```sql
SELECT dorm_name 
FROM Dorm 
WHERE dormid NOT IN (SELECT dormid FROM Has_amenity)
```
-------------------------5694 sample_num
```sql
SELECT COUNT(DISTINCT gender) FROM Dorm;
```
-------------------------5695 sample_num
```sql
SELECT COUNT(DISTINCT gender) FROM Dorm;
```
-------------------------5696 sample_num
```sql
SELECT student_capacity, gender 
FROM Dorm 
WHERE dorm_name LIKE '%Donor%';
```
-------------------------5697 sample_num
```sql
SELECT student_capacity, gender 
FROM Dorm 
WHERE dorm_name LIKE '%Donor%';
```
-------------------------5698 sample_num
```sql
SELECT dorm_name, gender 
FROM Dorm 
WHERE student_capacity > 300 OR student_capacity < 100;
```
-------------------------5699 sample_num
```sql
SELECT dorm_name, gender FROM Dorm WHERE student_capacity > 300 OR student_capacity < 100;
```
-------------------------5700 sample_num
```sql
SELECT COUNT(DISTINCT Major) AS Num_Majors, COUNT(DISTINCT city_code) AS Num_Cities FROM Student;
```
-------------------------5701 sample_num
```sql
SELECT COUNT(DISTINCT Major) AS DifferentMajors, COUNT(DISTINCT city_code) AS DifferentCityCodes 
FROM Student;
```
-------------------------5702 sample_num
```sql
SELECT D.dorm_name 
FROM Dorm D 
JOIN Has_amenity HA1 ON D.dormid = HA1.dormid 
JOIN Dorm_amenity DA1 ON HA1.amenid = DA1.amenid AND DA1.amenity_name = 'TV Lounge'
JOIN Has_amenity HA2 ON D.dormid = HA2.dormid 
JOIN Dorm_amenity DA2 ON HA2.amenid = DA2.amenid AND DA2.amenity_name = 'Study Room'
```
-------------------------5703 sample_num
```sql
SELECT D.dorm_name 
FROM Dorm D
JOIN Has_amenity HA ON D.dormid = HA.dormid
JOIN Dorm_amenity DA ON HA.amenid = DA.amenid
WHERE DA.amenity_name IN ('TV Lounge', 'Study Room')
GROUP BY D.dorm_name
HAVING COUNT(DISTINCT DA.amenity_name) = 2;
```
-------------------------5704 sample_num
```sql
SELECT d.dorm_name 
FROM Dorm d
JOIN Has_amenity ha_tv ON d.dormid = ha_tv.dormid
JOIN Dorm_amenity da_tv ON ha_tv.amenid = da_tv.amenid AND da_tv.amenity_name = 'TV Lounge'
WHERE NOT EXISTS (
    SELECT 1 
    FROM Has_amenity ha_study
    JOIN Dorm_amenity da_study ON ha_study.amenid = da_study.amenid AND da_study.amenity_name = 'Study Room'
    WHERE ha_study.dormid = d.dormid
);
```
-------------------------5705 sample_num
```sql
SELECT d.dorm_name 
FROM Dorm d
JOIN Has_amenity ha ON d.dormid = ha.dormid
JOIN Dorm_amenity da ON ha.amenid = da.amenid
WHERE da.amenity_name = 'TV Lounge'
AND NOT EXISTS (
    SELECT *
    FROM Has_amenity ha2
    JOIN Dorm_amenity da2 ON ha2.amenid = da2.amenid
    WHERE ha2.dormid = d.dormid AND da2.amenity_name = 'Study Room'
)
```
-------------------------5706 sample_num
```sql
SELECT LName 
FROM Student 
WHERE (Sex = 'F' AND city_code = 'BAL') OR (Sex = 'M' AND Age < 20);
```
-------------------------5707 sample_num
```sql
SELECT LName 
FROM Student 
WHERE (Sex = 'F' OR city_code = 'BAL') AND (Sex = 'M' AND Age < 20);
```
Note: This query may not return accurate results as specified because the conditions are contradictory. A student cannot be both female and male at the same time. Therefore, you might want to separate those conditions into two different OR clauses.

Corrected SQL Query:
```sql
SELECT LName 
FROM Student 
WHERE (Sex = 'F' AND (city_code = 'BAL' OR Sex = 'M' AND Age < 20)) OR (Sex = 'M' AND Age < 20 AND city_code = 'BAL');
```
Or more simplified,

```sql
SELECT LName 
FROM Student 
WHERE (Sex = 'F' AND city_code = 'BAL') OR (Sex = 'M' AND Age < 20);
```
-------------------------5708 sample_num
```sql
SELECT dorm_name FROM Dorm WHERE student_capacity = (SELECT MAX(student_capacity) FROM Dorm);
```
-------------------------5709 sample_num
```sql
SELECT dorm_name FROM Dorm WHERE student_capacity = (SELECT MAX(student_capacity) FROM Dorm);
```
-------------------------5710 sample_num
```sql
SELECT DISTINCT amenity_name 
FROM Dorm_amenity 
ORDER BY amenity_name ASC;
```
-------------------------5711 sample_num
```sql
SELECT DISTINCT amenity_name 
FROM Dorm_amenity 
ORDER BY amenity_name ASC;
```
-------------------------5712 sample_num
```sql
SELECT city_code 
FROM Student 
GROUP BY city_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5713 sample_num
```sql
SELECT city_code 
FROM Student 
GROUP BY city_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5714 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE Age < (SELECT AVG(Age) FROM Student);
```
-------------------------5715 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE Age < (SELECT AVG(Age) FROM Student);
```
-------------------------5716 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE city_code != 'HKG' 
ORDER BY Age;
```
-------------------------5717 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE city_code != 'HKG' 
ORDER BY Age;
```
-------------------------5718 sample_num
```sql
SELECT amenity_name 
FROM Dorm_amenity 
JOIN Has_amenity ON Dorm_amenity.amenid = Has_amenity.amenid 
JOIN Dorm ON Has_amenity.dormid = Dorm.dormid 
WHERE Dorm.dorm_name = 'Anonymous Donor Hall' 
ORDER BY amenity_name ASC;
```
-------------------------5719 sample_num
```sql
SELECT Dorm_amenity.amenity_name 
FROM Dorm_amenity 
JOIN Has_amenity ON Dorm_amenity.amenid = Has_amenity.amenid 
JOIN Dorm ON Has_amenity.dormid = Dorm.dormid 
WHERE Dorm.dorm_name = 'Anonymous Donor Hall' 
ORDER BY Dorm_amenity.amenity_name ASC;
```
-------------------------5720 sample_num
```sql
SELECT gender, COUNT(dormid) AS num_dorms, SUM(student_capacity) AS total_capacity
FROM Dorm
GROUP BY gender;
```
-------------------------5721 sample_num
```sql
SELECT COUNT(dormid) AS num_dorms, SUM(student_capacity) AS total_capacity, gender 
FROM Dorm 
GROUP BY gender;
```
-------------------------5722 sample_num
```sql
SELECT Sex, AVG(Age) AS Average_Age, MAX(Age) AS Oldest_Age
FROM Student
GROUP BY Sex;
```
-------------------------5723 sample_num
```sql
SELECT gender, AVG(Age) AS Average_Age, MAX(Age) AS Oldest_Age
FROM Student
JOIN Dorm ON Student.Sex = Dorm.gender
GROUP BY gender;
```
Note: This assumes that the 'Sex' column in the 'Student' table maps directly to the 'gender' column in the 'Dorm' table, which may not be the case. If the gender information is only held in the 'Student' table, the join would be omitted. Here's the correct query:

```sql
SELECT Sex AS gender, AVG(Age) AS Average_Age, MAX(Age) AS Oldest_Age
FROM Student
GROUP BY Sex;
```
-------------------------5724 sample_num
```sql
SELECT Major, COUNT(*) AS Num_Students 
FROM Student 
GROUP BY Major;
```
-------------------------5725 sample_num
```sql
SELECT Major, COUNT(*) 
FROM Student 
GROUP BY Major;
```
-------------------------5726 sample_num
```sql
SELECT COUNT(*), AVG(Age), city_code 
FROM Student 
GROUP BY city_code;
```
-------------------------5727 sample_num
```sql
SELECT city_code, COUNT(*), AVG(Age) 
FROM Student 
JOIN Lives_in ON Student.StuID = Lives_in.stuid 
GROUP BY city_code;
```
-------------------------5728 sample_num
```sql
SELECT city_code, AVG(Age) as Average_Age, COUNT(*) as Number_of_Males 
FROM Student 
WHERE Sex = 'M' 
GROUP BY city_code;
```
-------------------------5729 sample_num
```sql
SELECT city_code, AVG(Age) as Average_Age, COUNT(*) as Male_Students 
FROM Student 
WHERE Sex = 'M' 
GROUP BY city_code;
```
-------------------------5730 sample_num
```sql
SELECT COUNT(*), T1.city_code 
FROM Student AS T1 
GROUP BY T1.city_code 
HAVING COUNT(*) > 1;
```
-------------------------5731 sample_num
```sql
SELECT city_code, COUNT(*) as num_students 
FROM Student 
GROUP BY city_code 
HAVING COUNT(*) > 1;
```
However, to find cities that have more than one city, it seems there is a logical error in the question. We can count the number of students from each city and filter out those cities with more than one student, but it's not possible to find which cities have more than one cities. Here is the correct SQL query for counting the number of students from each city where the number is more than one:

```sql
SELECT city_code, COUNT(*) as num_students 
FROM Student 
GROUP BY city_code 
HAVING COUNT(*) > 1;
```
-------------------------5732 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE Major != (
    SELECT Major 
    FROM (
        SELECT Major, COUNT(*) AS cnt 
        FROM Student 
        GROUP BY Major 
        ORDER BY cnt DESC 
        LIMIT 1
    ) AS largest_major
)
```
Note: This query may not work on some SQL databases because subqueries in the WHERE clause are not supported. An alternative way to write this query that works on all SQL databases would be to use a LEFT JOIN or a NOT EXISTS clause, but those solutions would be longer and more complex.
-------------------------5733 sample_num
```sql
SELECT Fname, LName 
FROM Student 
WHERE Major != (
    SELECT Major 
    FROM (
        SELECT Major, COUNT(*) AS cnt 
        FROM Student 
        GROUP BY Major 
        ORDER BY cnt DESC 
        LIMIT 1
    ) AS largest_major
)
```
Note: This query assumes that `Major` is an attribute in the `Student` table and that there is no tie for the largest major. If there can be ties, the query needs to be adjusted accordingly. Also, SQLite doesn't support subqueries in the `WHERE` clause directly, so you might need to replace it with a `JOIN` or `NOT EXISTS` clause depending on your database system.
-------------------------5734 sample_num
```sql
SELECT COUNT(*), Sex 
FROM Student 
WHERE Age > (SELECT AVG(Age) FROM Student WHERE Sex = Student.Sex)
GROUP BY Sex;
```
-------------------------5735 sample_num
```sql
SELECT S.Sex, COUNT(*) AS Num_Students 
FROM Student S 
WHERE S.Age > (SELECT AVG(Age) FROM Student) 
GROUP BY S.Sex;
```
-------------------------5736 sample_num
```sql
SELECT D.dorm_name, AVG(S.Age) as Average_Age
FROM Student S
JOIN Lives_in L ON S.StuID = L.stuid
JOIN Dorm D ON L.dormid = D.dormid
GROUP BY D.dorm_name;
```
-------------------------5737 sample_num
```sql
SELECT AVG(T1.Age) AS Avg_Age, T3.dorm_name 
FROM Student AS T1 
JOIN Lives_in AS T2 ON T1.StuID = T2.stuid 
JOIN Dorm AS T3 ON T3.dormid = T2.dormid 
GROUP BY T3.dorm_name;
```
-------------------------5738 sample_num
```sql
SELECT Dorm.dorm_name, COUNT(Has_amenity.amenid) as Num_of_Amenities
FROM Dorm
LEFT JOIN Has_amenity ON Dorm.dormid = Has_amenity.dormid
WHERE Dorm.student_capacity > 100
GROUP BY Dorm.dormid;
```
-------------------------5739 sample_num
```sql
SELECT Dorm.dormid, Dorm.dorm_name, COUNT(Has_amenity.amenid) as Num_of_Amenities
FROM Dorm
JOIN Has_amenity ON Dorm.dormid = Has_amenity.dormid
GROUP BY Dorm.dormid, Dorm.dorm_name;
```
-------------------------5740 sample_num
```sql
SELECT d.dorm_name, COUNT(l.stuid) as NumOfStudents
FROM Dorm d 
JOIN Lives_in l ON d.dormid = l.dormid
JOIN Student s ON l.stuid = s.StuID
WHERE s.Age > 20
GROUP BY d.dorm_name;
```
-------------------------5741 sample_num
```sql
SELECT d.dorm_name, COUNT(l.stuid) 
FROM Lives_in l 
JOIN Student s ON l.stuid = s.StuID 
JOIN Dorm d ON l.dormid = d.dormid 
WHERE s.Age > 20 
GROUP BY d.dorm_name;
```
-------------------------5742 sample_num
```sql
SELECT S.fname
FROM Student S
JOIN Lives_in L ON S.StuID = L.stuid
JOIN Dorm D ON L.dormid = D.dormid
WHERE D.dorm_name = 'Smith Hall';
```
-------------------------5743 sample_num
```sql
SELECT S.Fname 
FROM Student S, Lives_in L, Dorm D 
WHERE S.StuID = L.stuid AND D.dormid = L.dormid AND D.dorm_name = 'Smith Hall';
```
-------------------------5744 sample_num
```sql
SELECT AVG(T1.Age) 
FROM Student AS T1 
JOIN Lives_in AS T2 ON T1.StuID = T2.stuid 
JOIN Dorm AS T3 ON T2.dormid = T3.dormid 
WHERE T3.student_capacity = (SELECT MAX(student_capacity) FROM Dorm)
```
-------------------------5745 sample_num
```sql
SELECT AVG(T1.Age) 
FROM Student AS T1 
JOIN Lives_in AS T2 ON T1.StuID = T2.stuid 
JOIN Dorm AS T3 ON T2.dormid = T3.dormid 
WHERE T3.student_capacity = (SELECT MAX(student_capacity) FROM Dorm)
```
-------------------------5746 sample_num
```sql
SELECT COUNT(*) 
FROM Student 
JOIN Lives_in ON Student.StuID = Lives_in.stuid 
JOIN Dorm ON Lives_in.dormid = Dorm.dormid 
WHERE Dorm.gender = 'M';
```
-------------------------5747 sample_num
```sql
SELECT COUNT(*) 
FROM Student 
JOIN Lives_in ON Student.StuID = Lives_in.stuid 
JOIN Dorm ON Lives_in.dormid = Dorm.dormid 
WHERE Dorm.gender = 'M';
```
-------------------------5748 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Lives_in l ON s.StuID = l.stuid 
JOIN Dorm d ON l.dormid = d.dormid 
WHERE s.Sex = 'F' AND d.dorm_name = 'Smith Hall';
```
-------------------------5749 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Lives_in l ON s.StuID = l.stuid 
JOIN Dorm d ON l.dormid = d.dormid 
WHERE s.Sex = 'F' AND d.dorm_name = 'Smith Hall';
```
-------------------------5750 sample_num
```sql
SELECT Dorm_amenity.amenity_name 
FROM Dorm 
JOIN Has_amenity ON Dorm.dormid = Has_amenity.dormid 
JOIN Dorm_amenity ON Has_amenity.amenid = Dorm_amenity.amenid 
WHERE Dorm.dorm_name = 'Smith Hall';
```
-------------------------5751 sample_num
```sql
SELECT Dorm_amenity.amenity_name 
FROM Dorm 
JOIN Has_amenity ON Dorm.dormid = Has_amenity.dormid 
JOIN Dorm_amenity ON Has_amenity.amenid = Dorm_amenity.amenid 
WHERE Dorm.dorm_name = 'Smith Hall';
```
-------------------------5752 sample_num
```sql
SELECT amenity_name 
FROM Dorm_amenity 
JOIN Has_amenity ON Dorm_amenity.amenid = Has_amenity.amenid 
JOIN Dorm ON Has_amenity.dormid = Dorm.dormid 
WHERE Dorm.dorm_name = 'Smith Hall' 
ORDER BY amenity_name;
```
-------------------------5753 sample_num
```sql
SELECT amenity_name 
FROM Dorm_amenity 
JOIN Has_amenity ON Dorm_amenity.amenid = Has_amenity.amenid 
JOIN Dorm ON Has_amenity.dormid = Dorm.dormid 
WHERE Dorm.dorm_name = 'Smith Hall' 
ORDER BY amenity_name;
```
-------------------------5754 sample_num
```sql
SELECT amenity_name 
FROM Dorm_amenity 
JOIN Has_amenity ON Dorm_amenity.amenid = Has_amenity.amenid 
GROUP BY amenid 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5755 sample_num
```sql
SELECT Dorm_amenity.amenity_name, COUNT(*) AS count 
FROM Has_amenity 
JOIN Dorm_amenity ON Has_amenity.amenid = Dorm_amenity.amenid 
GROUP BY Has_amenity.amenid 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------5756 sample_num
```sql
SELECT S.fname
FROM Student S
JOIN Lives_in L ON S.StuID = L.stuid
JOIN (
    SELECT H.dormid
    FROM Has_amenity H
    GROUP BY H.dormid
    HAVING COUNT(H.amenid) = (
        SELECT MAX(H2.count_amen)
        FROM (
            SELECT H2.dormid, COUNT(H2.amenid) as count_amen
            FROM Has_amenity H2
            GROUP BY H2.dormid
        ) AS H2
    )
) AS T ON L.dormid = T.dormid;
```
-------------------------5757 sample_num
```sql
SELECT S.fname
FROM Student S
JOIN Lives_in L ON S.StuID = L.stuid
JOIN (
    SELECT H.dormid
    FROM Has_amenity H
    GROUP BY H.dormid
    HAVING COUNT(H.amenid) = (
        SELECT MAX(H2.count_amen)
        FROM (
            SELECT H2.dormid, COUNT(H2.amenid) as count_amen
            FROM Has_amenity H2
            GROUP BY H2.dormid
        ) AS H2
    )
) AS T ON L.dormid = T.dormid;
```
-------------------------5758 sample_num
```sql
SELECT D.dorm_name, D.student_capacity
FROM Dorm D
WHERE D.dormid = (
    SELECT H.dormid
    FROM(
        SELECT COUNT(*) AS cnt, H1.dormid
        FROM Has_amenity H1
        GROUP BY H1.dormid
    ) H
    ORDER BY H.cnt
    LIMIT 1
)
```
-------------------------5759 sample_num
```sql
SELECT D.dorm_name, D.student_capacity
FROM Dorm D
WHERE D.dormid = (
    SELECT H.dormid
    FROM(
        SELECT COUNT(*) AS cnt, H1.dormid
        FROM Has_amenity H1
        GROUP BY H1.dormid
    ) H
    ORDER BY H.cnt
    LIMIT 1
)
```
-------------------------5760 sample_num
```sql
SELECT dorm_name 
FROM Dorm 
WHERE dormid NOT IN (SELECT dormid FROM Has_amenity WHERE amenid = (SELECT amenid FROM Dorm_amenity WHERE amenity_name = 'TV Lounge'))
```
-------------------------5761 sample_num
```sql
SELECT dorm_name 
FROM Dorm 
WHERE dormid NOT IN (SELECT dormid FROM Has_amenity WHERE amenid = (SELECT amenid FROM Dorm_amenity WHERE amenity_name = 'TV Lounge'))
```
-------------------------5762 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S 
JOIN Lives_in L ON S.StuID = L.stuid 
JOIN Has_amenity H ON L.dormid = H.dormid 
JOIN Dorm_amenity D_A ON H.amenid = D_A.amenid 
WHERE D_A.amenity_name = 'TV Lounge';
```
-------------------------5763 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S 
JOIN Lives_in L ON S.StuID = L.stuid 
JOIN Has_amenity H ON L.dormid = H.dormid 
JOIN Dorm_amenity D_A ON H.amenid = D_A.amenid 
WHERE D_A.amenity_name = 'TV Lounge';
```
-------------------------5764 sample_num
```sql
SELECT S.Fname, S.Age 
FROM Student S, Lives_in L, Dorm D, Has_amenity H, Dorm_amenity A 
WHERE S.StuID = L.stuid AND L.dormid = D.dormid AND D.dormid != ALL (SELECT HA.dormid FROM Has_amenity HA, Dorm_amenity DA WHERE DA.amenid = HA.amenid AND DA.amenity_name = 'TV Lounge')
```
-------------------------5765 sample_num
```sql
SELECT S.Fname, S.Age 
FROM Student S 
JOIN Lives_in L ON S.StuID = L.stuid 
JOIN Has_amenity H ON L.dormid = H.dormid 
JOIN Dorm_amenity D ON H.amenid = D.amenid 
WHERE D.amenity_name = 'TV Lounge';
```
-------------------------5766 sample_num
```sql
SELECT Dorm_amenity.amenity_name 
FROM Dorm_amenity 
JOIN Has_amenity ON Dorm_amenity.amenid = Has_amenity.amenid 
JOIN Dorm ON Has_amenity.dormid = Dorm.dormid 
JOIN Lives_in ON Dorm.dormid = Lives_in.dormid 
JOIN Student ON Lives_in.stuid = Student.StuID 
WHERE Student.LName = 'Smith';
```
-------------------------5767 sample_num
```sql
SELECT Dorm_amenity.amenity_name 
FROM Dorm_amenity 
JOIN Has_amenity ON Dorm_amenity.amenid = Has_amenity.amenid 
JOIN Dorm ON Has_amenity.dormid = Dorm.dormid 
JOIN Lives_in ON Dorm.dormid = Lives_in.dormid 
JOIN Student ON Lives_in.stuid = Student.stuid 
WHERE Student.LName = 'Smith';
```
-------------------------5768 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------5769 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------5770 sample_num
```sql
SELECT email_address, phone_number 
FROM Customers 
ORDER BY email_address, phone_number;
```
-------------------------5771 sample_num
```sql
SELECT email_address, phone_number 
FROM Customers 
ORDER BY email_address, phone_number;
```
-------------------------5772 sample_num
```sql
SELECT town_city, COUNT(customer_id) as customer_count 
FROM Customers 
WHERE customer_type_code = 'Good Credit Rating' 
GROUP BY town_city 
ORDER BY customer_count ASC 
LIMIT 1;
```
-------------------------5773 sample_num
```sql
SELECT town_city 
FROM Customers 
WHERE customer_type_code = 'Good Credit Rating' 
GROUP BY town_city 
ORDER BY COUNT(customer_id) 
LIMIT 1;
```
-------------------------5774 sample_num
```sql
SELECT p.product_name, COUNT(c.complaint_id) AS num_complaints
FROM Products p
LEFT JOIN Complaints c ON p.product_id = c.product_id
GROUP BY p.product_id, p.product_name;
```
-------------------------5775 sample_num
```sql
SELECT p.product_name, COUNT(c.complaint_id) AS complaint_count
FROM Products p
JOIN Complaints c ON p.product_id = c.product_id
GROUP BY p.product_name;
```
-------------------------5776 sample_num
```sql
SELECT C.email_address
FROM Customers C
JOIN Complaints Co ON C.customer_id = Co.customer_id
JOIN (
    SELECT product_id
    FROM Complaints
    GROUP BY product_id
    ORDER BY COUNT(*) DESC
    LIMIT 1
) P ON Co.product_id = P.product_id;
```
-------------------------5777 sample_num
```sql
SELECT C.email_address
FROM Customers C
JOIN Complaints Co ON C.customer_id = Co.customer_id
JOIN (
    SELECT product_id
    FROM Complaints
    GROUP BY product_id
    ORDER BY COUNT(*) DESC
    LIMIT 1
) P ON Co.product_id = P.product_id;
```
-------------------------5778 sample_num
```sql
SELECT p.product_name 
FROM Products p
JOIN Complaints c ON p.product_id = c.product_id
WHERE c.customer_id = (
    SELECT c2.customer_id
    FROM Complaints c2
    GROUP BY c2.customer_id
    ORDER BY COUNT(c2.complaint_id) ASC
    LIMIT 1
)
GROUP BY p.product_id
ORDER BY COUNT(c.complaint_id) DESC
LIMIT 1;
```
-------------------------5779 sample_num
```sql
SELECT p.product_name 
FROM Products p 
JOIN Complaints c ON p.product_id = c.product_id 
JOIN (
    SELECT customer_id, COUNT(*) as cnt 
    FROM Complaints 
    GROUP BY customer_id 
    ORDER BY cnt 
    LIMIT 1
) sub ON c.customer_id = sub.customer_id;
```
-------------------------5780 sample_num
```sql
SELECT c.phone_number 
FROM customers c
JOIN complaints co ON c.customer_id = co.customer_id 
ORDER BY co.date_complaint_raised DESC 
LIMIT 1;
```
-------------------------5781 sample_num
```sql
SELECT c.phone_number 
FROM customers c
JOIN complaints co ON c.customer_id = co.customer_id
WHERE co.date_complaint_raised = (SELECT MAX(date_complaint_raised) FROM complaints);
```
-------------------------5782 sample_num
```sql
SELECT email_address, phone_number 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Complaints);
```
-------------------------5783 sample_num
```sql
SELECT email_address, phone_number 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Complaints);
```
-------------------------5784 sample_num
```sql
SELECT phone_number FROM Customers
UNION
SELECT phone_number FROM Staff;
```
-------------------------5785 sample_num
```sql
SELECT phone_number FROM Customers
UNION
SELECT phone_number FROM Staff;
```
-------------------------5786 sample_num
```sql
SELECT product_description 
FROM Products 
WHERE product_name = 'Chocolate';
```
-------------------------5787 sample_num
```sql
SELECT product_description 
FROM Products 
WHERE product_name = 'Chocolate';
```
-------------------------5788 sample_num
```sql
SELECT product_name, product_category_code 
FROM Products 
ORDER BY product_price DESC 
LIMIT 1;
```
-------------------------5789 sample_num
```sql
SELECT product_name, product_category_code 
FROM Products 
WHERE product_price = (SELECT MAX(product_price) FROM Products);
```
-------------------------5790 sample_num
```sql
SELECT p.product_price 
FROM Products p 
LEFT JOIN Complaints c ON p.product_id = c.product_id 
WHERE c.product_id IS NULL;
```
-------------------------5791 sample_num
```sql
SELECT product_price 
FROM Products 
WHERE product_id NOT IN (SELECT product_id FROM Complaints)
```
-------------------------5792 sample_num
```sql
SELECT product_category_code, AVG(product_price) 
FROM Products 
GROUP BY product_category_code;
```
-------------------------5793 sample_num
```sql
SELECT product_category_code, AVG(product_price) 
FROM Products 
GROUP BY product_category_code;
```
-------------------------5794 sample_num
```sql
SELECT S.last_name 
FROM Staff S
JOIN Complaints C ON S.staff_id = C.staff_id
JOIN Products P ON C.product_id = P.product_id
WHERE P.product_price = (
    SELECT MIN(product_price) 
    FROM Products
)
```
-------------------------5795 sample_num
```sql
SELECT S.last_name 
FROM Staff S
JOIN Complaints C ON S.staff_id = C.staff_id
JOIN Products P ON C.product_id = P.product_id
WHERE P.product_price = (SELECT MIN(product_price) FROM Products)
ORDER BY S.last_name DESC
LIMIT 1;
```
-------------------------5796 sample_num
```sql
SELECT complaint_status_code, COUNT(*) as record_count 
FROM Complaints 
GROUP BY complaint_status_code 
HAVING COUNT(*) > 3;
```
-------------------------5797 sample_num
```sql
SELECT complaint_status_code 
FROM Complaints 
GROUP BY complaint_status_code 
HAVING COUNT(complaint_id) > 3;
```
-------------------------5798 sample_num
```sql
SELECT last_name FROM Staff WHERE email_address LIKE '%wrau%';
```
-------------------------5799 sample_num
```sql
SELECT last_name 
FROM Staff 
WHERE email_address LIKE '%wrau%';
```
-------------------------5800 sample_num
```sql
SELECT COUNT(customer_id) 
FROM Customers 
WHERE customer_type_code = (
    SELECT customer_type_code 
    FROM Customers 
    GROUP BY customer_type_code 
    ORDER BY COUNT(customer_id) DESC 
    LIMIT 1
)
```
-------------------------5801 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
WHERE customer_type_code = (SELECT customer_type_code 
                            FROM Customers 
                            GROUP BY customer_type_code 
                            ORDER BY COUNT(*) DESC 
                            LIMIT 1);
```
-------------------------5802 sample_num
```sql
SELECT T1.last_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_complaint_raised ASC LIMIT 1;
```
-------------------------5803 sample_num
```sql
SELECT T1.last_name 
FROM Staff AS T1 
JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id 
WHERE T2.date_complaint_raised = (SELECT MIN(date_complaint_raised) FROM Complaints)
```
-------------------------5804 sample_num
```sql
SELECT COUNT(DISTINCT complaint_type_code) FROM Complaints;
```
-------------------------5805 sample_num
```sql
SELECT COUNT(DISTINCT complaint_type_code) FROM Complaints;
```
-------------------------5806 sample_num
```sql
SELECT address_line_1, address_line_2 
FROM Customers 
WHERE email_address = 'vbogisich@example.org';
```
-------------------------5807 sample_num
```sql
SELECT address_line_1, address_line_2 
FROM Customers 
WHERE email_address = 'vbogisich@example.org';
```
-------------------------5808 sample_num
```sql
SELECT complaint_status_code, COUNT(*) 
FROM Complaints 
WHERE complaint_type_code = 'Product Failure' 
GROUP BY complaint_status_code;
```
-------------------------5809 sample_num
```sql
SELECT complaint_status_code, COUNT(*) 
FROM Complaints 
WHERE complaint_type_code = 'Product Failure' 
GROUP BY complaint_status_code;
```
-------------------------5810 sample_num
```sql
SELECT s.first_name 
FROM Staff s
JOIN Complaints c ON s.staff_id = c.staff_id
GROUP BY s.staff_id, s.first_name
ORDER BY COUNT(c.complaint_id) DESC
LIMIT 5;
```
-------------------------5811 sample_num
```sql
SELECT T1.first_name 
FROM Staff AS T1 
JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id 
GROUP BY T1.staff_id 
ORDER BY COUNT(T2.complaint_id) DESC 
LIMIT 5;
```
-------------------------5812 sample_num
```sql
SELECT state, COUNT(customer_id) as num_customers
FROM Customers
GROUP BY state
ORDER BY num_customers DESC
LIMIT 1;
```
-------------------------5813 sample_num
```sql
SELECT state 
FROM Customers 
GROUP BY state 
ORDER BY COUNT(customer_id) DESC 
LIMIT 1;
```
-------------------------5814 sample_num
```sql
SELECT COUNT(*) FROM submission;
```
-------------------------5815 sample_num
```sql
SELECT COUNT(*) FROM submission;
```
-------------------------5816 sample_num
```sql
SELECT Author 
FROM submission 
ORDER BY Scores ASC;
```
-------------------------5817 sample_num
```sql
SELECT T1.Author 
FROM submission AS T1 
JOIN Acceptance AS T2 ON T1.Submission_ID = T2.Submission_ID 
ORDER BY T1.Scores ASC;
```
-------------------------5818 sample_num
```sql
SELECT Author, College FROM submission;
```
-------------------------5819 sample_num
```sql
SELECT Author, College 
FROM submission;
```
-------------------------5820 sample_num
```sql
SELECT Author 
FROM submission 
WHERE College IN ('Florida', 'Temple');
```
-------------------------5821 sample_num
```sql
SELECT Author 
FROM submission 
WHERE College IN ('Florida', 'Temple');
```
-------------------------5822 sample_num
```sql
SELECT AVG(Scores) FROM submission;
```
-------------------------5823 sample_num
```sql
SELECT AVG(Scores) FROM submission;
```
-------------------------5824 sample_num
```sql
SELECT Author 
FROM submission 
WHERE Scores = (SELECT MAX(Scores) FROM submission);
```
-------------------------5825 sample_num
```sql
SELECT Author 
FROM submission 
WHERE Scores = (SELECT MAX(Scores) FROM submission);
```
-------------------------5826 sample_num
```sql
SELECT College, COUNT(Author) AS NumberOfAuthors
FROM submission
GROUP BY College;
```
-------------------------5827 sample_num
```sql
SELECT College, COUNT(DISTINCT Author) 
FROM submission 
GROUP BY College;
```
-------------------------5828 sample_num
```sql
SELECT College, COUNT(*) AS Count 
FROM submission 
GROUP BY College 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------5829 sample_num
```sql
SELECT College, COUNT(DISTINCT Author) as Num_of_Authors 
FROM submission 
GROUP BY College 
ORDER BY Num_of_Authors DESC 
LIMIT 1;
```
-------------------------5830 sample_num
```sql
SELECT College 
FROM submission 
WHERE Scores > 90 
INTERSECT 
SELECT College 
FROM submission 
WHERE Scores < 80;
```
-------------------------5831 sample_num
```sql
SELECT College 
FROM submission 
WHERE Scores > 90 
INTERSECT 
SELECT College 
FROM submission 
WHERE Scores < 80;
```
-------------------------5832 sample_num
```sql
SELECT submission.Author, Acceptance.Result 
FROM submission 
JOIN Acceptance ON submission.Submission_ID = Acceptance.Submission_ID;
```
-------------------------5833 sample_num
```sql
SELECT s.Submission_ID, s.Author, a.Result
FROM submission s
JOIN Acceptance a ON s.Submission_ID = a.Submission_ID;
```
-------------------------5834 sample_num
```sql
SELECT A.Result 
FROM Acceptance A 
JOIN submission S ON A.Submission_ID = S.Submission_ID 
WHERE S.Scores = (SELECT MAX(Scores) FROM submission);
```
-------------------------5835 sample_num
```sql
SELECT s.Submission_ID, s.Scores, a.Result 
FROM submission s 
JOIN Acceptance a ON s.Submission_ID = a.Submission_ID 
WHERE s.Scores = (SELECT MAX(Scores) FROM submission)
AND a.Result = 'Accepted';
```
```
-------------------------5836 sample_num
```sql
SELECT s.Author, COUNT(DISTINCT a.Workshop_ID) 
FROM submission s 
JOIN Acceptance a ON s.Submission_ID = a.Submission_ID 
GROUP BY s.Author;
```
-------------------------5837 sample_num
```sql
SELECT s.Author, COUNT(DISTINCT a.Workshop_ID) AS NumOfWorkshops
FROM submission s
JOIN Acceptance a ON s.Submission_ID = a.Submission_ID
GROUP BY s.Author;
```
-------------------------5838 sample_num
```sql
SELECT s.Author
FROM submission s
JOIN Acceptance a ON s.Submission_ID = a.Submission_ID
GROUP BY s.Author
HAVING COUNT(DISTINCT a.Workshop_ID) > 1;
```
-------------------------5839 sample_num
```sql
SELECT Author 
FROM submission 
WHERE Submission_ID IN (
    SELECT Submission_ID 
    FROM (
        SELECT Submission_ID, COUNT(DISTINCT Workshop_ID) as workshop_count 
        FROM Acceptance 
        GROUP BY Submission_ID
    ) AS temp_table 
    WHERE workshop_count > 1
)
GROUP BY Author;
```
-------------------------5840 sample_num
```sql
SELECT Date, Venue FROM workshop ORDER BY Venue ASC;
```
-------------------------5841 sample_num
```sql
SELECT Date, Venue 
FROM workshop 
ORDER BY Venue ASC;
```
-------------------------5842 sample_num
```sql
SELECT Author 
FROM submission 
WHERE Submission_ID NOT IN (SELECT Submission_ID FROM Acceptance)
``` 
However, this query might not give the correct result in case an author has made a submission but it's not accepted by any workshop. A better way would be:
```sql
SELECT s.Author
FROM submission s
WHERE s.Submission_ID NOT IN (SELECT a.Submission_ID FROM Acceptance a)
```
But if you want to list authors who never submitted anything at all:
```sql
SELECT DISTINCT Author
FROM submission
EXCEPT
SELECT DISTINCT Author
FROM submission
JOIN Acceptance ON submission.Submission_ID = Acceptance.Submission_ID
``` 
Note that the last query assumes that every submission must be associated with an acceptance record, which might not be true in reality.
The most accurate answer would be:
```sql
SELECT Author 
FROM submission 
WHERE Submission_ID NOT IN (SELECT Submission_ID FROM Acceptance)
GROUP BY Author
HAVING COUNT(*) = (SELECT COUNT(*) FROM submission WHERE Author = t1.Author)
```
-------------------------5843 sample_num
```sql
SELECT Author 
FROM submission 
WHERE Submission_ID NOT IN (SELECT Submission_ID FROM Acceptance)
``` 
However, this query will give you authors who did not have any submissions accepted to any workshops, not authors who did not submit to any workshops at all. The correct query would be:
```sql
SELECT Author 
FROM submission 
WHERE Submission_ID NOT IN (SELECT DISTINCT Acceptance.Submission_ID 
                            FROM Acceptance 
                            INNER JOIN workshop ON Acceptance.Workshop_ID = workshop.Workshop_ID)
``` 
But, above query is logically incorrect as it will return Authors who have submitted but not necessarily got their submission accepted. To get the list of Authors who never submitted at all, we can use below query:
```sql
SELECT * 
FROM (
    SELECT Author, 
           COUNT(Submission_ID) AS NumberOfSubmissions 
    FROM submission 
    GROUP BY Author
) AS sub 
WHERE NumberOfSubmissions = 0
```
But the most efficient way to write the query would be:
```sql
SELECT Author 
FROM submission 
GROUP BY Author 
HAVING COUNT(Submission_ID) = 0
```
Unfortunately, the last two queries would return an empty set because they are grouping by authors and looking for those with no submissions, which is logically equivalent to finding authors not in the `submission` table at all. Unfortunately, SQL does not support a direct way to find rows that do not exist in a table, so this query cannot be written in a straightforward way without further assumptions or additional data.
```sql
SELECT Author 
FROM 
(SELECT Author 
 FROM submission 
 GROUP BY Author) t1 
WHERE NOT EXISTS 
(SELECT *
 FROM Acceptance a 
 WHERE a.Submission_ID = t1.Author)
```
This query also won't work as expected. The correct query should utilize a LEFT JOIN or a NOT EXISTS clause to find authors who have no corresponding records in the Acceptance table.
```sql
SELECT s.Author 
FROM submission s 
LEFT JOIN Acceptance a ON s.Submission_ID = a.Submission_ID 
WHERE a.Submission_ID IS NULL
```
But this query will give you the authors who have submitted but their submissions are not in the acceptance table, not the authors who have never submitted. 

Actually, the authors who did not submit to any workshop would not appear in the submission table at all. So, there's no SQL query could achieve this since there's no data about these authors.

However, if you want to find out the authors who are affiliated with a specific college and have not submitted to any workshops, you can use the following query:
```sql
SELECT s.Author 
FROM submission s 
INNER JOIN (
    SELECT DISTINCT Author 
    FROM submission 
    WHERE College = 'Your_College'
) c ON s.Author = c.Author 
LEFT JOIN Acceptance a ON s.Submission_ID = a.Submission_ID 
WHERE a.Submission_ID IS NULL AND s.College = 'Your_College'
```
-------------------------5844 sample_num
```sql
SELECT COUNT(*) FROM Investors;
```
-------------------------5845 sample_num
```sql
SELECT Investor_details FROM Investors;
```
-------------------------5846 sample_num
```sql
SELECT DISTINCT lot_details FROM Lots;
```
-------------------------5847 sample_num
```sql
SELECT MAX(amount_of_transaction) FROM Transactions;
```
-------------------------5848 sample_num
```sql
SELECT date_of_transaction, share_count 
FROM Transactions;
```
-------------------------5849 sample_num
```sql
SELECT SUM(share_count) AS total_share_of_transactions 
FROM Transactions;
```
-------------------------5850 sample_num
```sql
SELECT transaction_id 
FROM Transactions 
WHERE transaction_type_code = 'PUR';
```
-------------------------5851 sample_num
```sql
SELECT date_of_transaction 
FROM Transactions 
WHERE transaction_type_code = 'SALE';
```
-------------------------5852 sample_num
```sql
SELECT AVG(amount_of_transaction) 
FROM Transactions 
WHERE transaction_type_code = 'SALE';
```
-------------------------5853 sample_num
```sql
SELECT transaction_type_description 
FROM Ref_Transaction_Types 
WHERE transaction_type_code = 'PUR';
```
-------------------------5854 sample_num
```sql
SELECT MIN(amount_of_transaction) 
FROM Transactions 
WHERE transaction_type_code = 'PUR' AND share_count > 50;
```
-------------------------5855 sample_num
```sql
SELECT MAX(amount_of_transaction) 
FROM Transactions 
WHERE amount_of_transaction < 10000;
```
However, to get the maximum share count (not amount) of transactions where the amount is smaller than 10000, the correct query should be:
```sql
SELECT MAX(share_count) 
FROM Transactions 
WHERE amount_of_transaction < 10000;
```
-------------------------5856 sample_num
```sql
SELECT date_of_transaction 
FROM Transactions 
WHERE share_count > 100 OR amount_of_transaction > 1000;
```
-------------------------5857 sample_num
```sql
SELECT T2.transaction_type_description, T1.date_of_transaction 
FROM Transactions AS T1 
JOIN Ref_Transaction_Types AS T2 
ON T1.transaction_type_code = T2.transaction_type_code 
WHERE T1.share_count < 10;
```
-------------------------5858 sample_num
```sql
SELECT i.Investor_details
FROM Investors i
JOIN Transactions t ON i.investor_id = t.investor_id
WHERE t.share_count > 100;
```
-------------------------5859 sample_num
```sql
SELECT COUNT(DISTINCT transaction_type_code) 
FROM Transactions;
```
-------------------------5860 sample_num
```sql
SELECT Lots.lot_details, Investors.investor_id 
FROM Lots 
JOIN Investors ON Lots.investor_id = Investors.investor_id;
```
-------------------------5861 sample_num
```sql
SELECT L.lot_details
FROM Lots L
JOIN Investors I ON L.investor_id = I.investor_id
WHERE I.Investor_details = 'l';
```
-------------------------5862 sample_num
```sql
SELECT T2.purchase_details FROM Transactions AS T1 JOIN Purchases AS T2 ON T1.transaction_id = T2.purchase_transaction_id WHERE T1.amount_of_transaction > 10000;
```
-------------------------5863 sample_num
```sql
SELECT Sales.sales_details, Transactions.date_of_transaction 
FROM Transactions 
JOIN Sales ON Transactions.transaction_id = Sales.sales_transaction_id 
WHERE Transactions.amount_of_transaction < 3000;
```
-------------------------5864 sample_num
```sql
SELECT L.lot_details 
FROM Lots L
JOIN Transactions_Lots TL ON L.lot_id = TL.lot_id
JOIN Transactions T ON TL.transaction_id = T.transaction_id
WHERE T.share_count < 50;
```
-------------------------5865 sample_num
```sql
SELECT L.lot_details
FROM Lots L
JOIN Transactions_Lots TL ON L.lot_id = TL.lot_id
JOIN Transactions T ON TL.transaction_id = T.transaction_id
WHERE T.share_count > 100 AND T.transaction_type_code = 'PUR';
```
-------------------------5866 sample_num
```sql
SELECT Ref_Transaction_Types.transaction_type_description, AVG(Transactions.amount_of_transaction) 
FROM Transactions 
JOIN Ref_Transaction_Types 
ON Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code 
GROUP BY Ref_Transaction_Types.transaction_type_description;
```
-------------------------5867 sample_num
```sql
SELECT 
    T1.transaction_type_description,
    MAX(T2.share_count) AS max_share_count,
    MIN(T2.share_count) AS min_share_count
FROM 
    Ref_Transaction_Types T1
JOIN 
    Transactions T2 ON T1.transaction_type_code = T2.transaction_type_code
GROUP BY 
    T1.transaction_type_description;
```
-------------------------5868 sample_num
```sql
SELECT Investor_id, AVG(share_count) 
FROM Transactions 
GROUP BY Investor_id;
```
-------------------------5869 sample_num
```sql
SELECT Investors.investor_id, AVG(Transactions.share_count) AS avg_share_count
FROM Transactions
JOIN Investors ON Transactions.investor_id = Investors.investor_id
GROUP BY Investors.investor_id
ORDER BY avg_share_count;
```
-------------------------5870 sample_num
```sql
SELECT Investor_id, AVG(amount_of_transaction) 
FROM Transactions 
GROUP BY Investor_id;
```
-------------------------5871 sample_num
```sql
SELECT T1.lot_id, AVG(T2.amount_of_transaction) 
FROM Transactions_Lots AS T1 
JOIN Transactions AS T2 ON T1.transaction_id = T2.transaction_id 
GROUP BY T1.lot_id;
```
-------------------------5872 sample_num
```sql
SELECT L.lot_id, AVG(T.amount_of_transaction) AS avg_amount 
FROM Transactions AS T 
JOIN Transactions_Lots AS TL ON T.transaction_id = TL.transaction_id 
JOIN Lots AS L ON L.lot_id = TL.lot_id 
GROUP BY L.lot_id 
ORDER BY avg_amount DESC;
```
-------------------------5873 sample_num
```sql
SELECT Investor_id, COUNT(transaction_id) 
FROM Transactions 
WHERE transaction_type_code = 'SALE' 
GROUP BY Investor_id 
HAVING COUNT(transaction_id) > 0;
```
-------------------------5874 sample_num
```sql
SELECT Investor_id, COUNT(transaction_id) 
FROM Transactions 
GROUP BY Investor_id;
```
-------------------------5875 sample_num
```sql
SELECT transaction_type_code 
FROM Transactions 
GROUP BY transaction_type_code 
ORDER BY COUNT(*) 
LIMIT 1;
```
-------------------------5876 sample_num
```sql
SELECT transaction_type_code 
FROM Transactions 
GROUP BY transaction_type_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5877 sample_num
```sql
SELECT T2.transaction_type_description 
FROM Transactions AS T1 
JOIN Ref_Transaction_Types AS T2 
ON T1.transaction_type_code = T2.transaction_type_code 
GROUP BY T1.transaction_type_code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------5878 sample_num
```sql
SELECT i.investor_id, i.Investor_details
FROM Investors i
JOIN Transactions t ON i.investor_id = t.investor_id
GROUP BY i.investor_id, i.Investor_details
ORDER BY COUNT(t.transaction_id) DESC
LIMIT 1;
```
-------------------------5879 sample_num
```sql
SELECT i.investor_id, i.Investor_details
FROM Investors i
JOIN Transactions t ON i.investor_id = t.investor_id
GROUP BY i.investor_id, i.Investor_details
ORDER BY COUNT(t.transaction_id) DESC
LIMIT 3;
```
-------------------------5880 sample_num
```sql
SELECT investor_id 
FROM Transactions 
GROUP BY investor_id 
HAVING COUNT(transaction_id) >= 2;
```
-------------------------5881 sample_num
```sql
SELECT i.investor_id, i.Investor_details
FROM Investors i
JOIN Transactions t ON i.investor_id = t.investor_id
WHERE t.transaction_type_code = 'SALE'
GROUP BY i.investor_id, i.Investor_details
HAVING COUNT(t.transaction_id) >= 2;
```
-------------------------5882 sample_num
```sql
SELECT date_of_transaction 
FROM Transactions 
WHERE share_count >= 100 OR amount_of_transaction > 100;
```
-------------------------5883 sample_num
```sql
SELECT Sales.sales_details, Purchases.purchase_details 
FROM ((Transactions
JOIN Sales ON Transactions.sale_transaction_id = Sales.sales_transaction_id)
UNION
(Transactions
JOIN Purchases ON Transactions.purchase_transaction_id = Purchases.purchase_transaction_id))
```
Note: The provided query assumes that there is a direct relationship between the Transactions table and the Sales / Purchases tables via their respective transaction IDs. However, based on the schema you've provided, this relationship isn't explicitly clear. It's possible that a JOIN condition or reference might be missing or different from what's assumed here.
-------------------------5884 sample_num
```sql
SELECT L.lot_details 
FROM Lots L
LEFT JOIN Transactions_Lots TL ON L.lot_id = TL.lot_id
WHERE TL.lot_id IS NULL;
```
-------------------------5885 sample_num
```sql
SELECT COUNT(*) FROM Hotels;
```
-------------------------5886 sample_num
```sql
SELECT COUNT(*) FROM Hotels;
```
-------------------------5887 sample_num
```sql
SELECT DISTINCT price_range FROM cre_Theme_park.Hotels;
```
-------------------------5888 sample_num
```sql
SELECT price_range FROM Hotels;
```
-------------------------5889 sample_num
```sql
SELECT DISTINCT Location_Name FROM Locations;
```
-------------------------5890 sample_num
```sql
SELECT DISTINCT Location_Name FROM Locations;
```
-------------------------5891 sample_num
```sql
SELECT Name, Other_Details FROM Staff;
```
-------------------------5892 sample_num
```sql
SELECT Name, Other_Details FROM Staff;
```
-------------------------5893 sample_num
```sql
SELECT * FROM Visitors;
```
-------------------------5894 sample_num
```sql
SELECT Tourist_Details FROM Visitors;
```
-------------------------5895 sample_num
```sql
SELECT price_range FROM Hotels WHERE star_rating_code = '5';
```
-------------------------5896 sample_num
```sql
SELECT price_range
FROM Hotels
WHERE star_rating_code = '5';
```
-------------------------5897 sample_num
```sql
SELECT AVG(price_range) 
FROM Hotels 
WHERE star_rating_code = 5 AND pets_allowed_yn = 'Y';
```
-------------------------5898 sample_num
```sql
SELECT AVG(price_range) 
FROM Hotels 
WHERE star_rating_code = 5 AND pets_allowed_yn = 'Y';
```
-------------------------5899 sample_num
```sql
SELECT Address FROM Locations WHERE Location_Name = 'UK Gallery';
```
-------------------------5900 sample_num
```sql
SELECT Address FROM Locations WHERE Location_Name = 'UK Gallery';
```
-------------------------5901 sample_num
```sql
SELECT Other_Details 
FROM Locations 
WHERE Location_Name = 'UK Gallery';
```
-------------------------5902 sample_num
```sql
SELECT Other_Details FROM Locations WHERE Location_Name = 'UK Gallery';
```
-------------------------5903 sample_num
```sql
SELECT Location_Name FROM Locations WHERE Location_Name LIKE '%film%';
```
-------------------------5904 sample_num
```sql
SELECT * FROM Locations WHERE Location_Name LIKE '%film%';
```
-------------------------5905 sample_num
```sql
SELECT COUNT(DISTINCT Name) FROM Photos;
```
-------------------------5906 sample_num
```sql
SELECT COUNT(DISTINCT Name) FROM Photos;
```
-------------------------5907 sample_num
```sql
SELECT DISTINCT Visit_Date FROM Visits;
```
-------------------------5908 sample_num
```sql
SELECT DISTINCT Visit_Date FROM Visits;
```
-------------------------5909 sample_num
```sql
SELECT Name 
FROM Tourist_Attractions 
WHERE How_to_Get_There = 'bus';
```
-------------------------5910 sample_num
```sql
SELECT ta.Name 
FROM Tourist_Attractions ta 
WHERE ta.How_to_Get_There = 'bus';
```
-------------------------5911 sample_num
```sql
SELECT Name, Opening_Hours 
FROM Tourist_Attractions 
WHERE How_to_Get_There = 'bus' OR How_to_Get_There = 'walk';
```
-------------------------5912 sample_num
```sql
SELECT Name, Opening_Hours 
FROM Tourist_Attractions 
WHERE How_to_Get_There = 'bus' OR How_to_Get_There = 'walk';
```
-------------------------5913 sample_num
```sql
SELECT Ref_Hotel_Star_Ratings.star_rating_description 
FROM Ref_Hotel_Star_Ratings 
JOIN Hotels ON Ref_Hotel_Star_Ratings.star_rating_code = Hotels.star_rating_code 
WHERE Hotels.price_range > 10000;
```
-------------------------5914 sample_num
```sql
SELECT Ref_Hotel_Star_Ratings.star_rating_description 
FROM Ref_Hotel_Star_Ratings 
JOIN Hotels ON Ref_Hotel_Star_Ratings.star_rating_code = Hotels.star_rating_code 
WHERE Hotels.price_range > 10000
```
-------------------------5915 sample_num
```sql
SELECT Museums.Museum_Details, Tourist_Attractions.Opening_Hours 
FROM Museums 
JOIN Tourist_Attractions 
ON Museums.Museum_ID = Tourist_Attractions.Tourist_Attraction_ID 
WHERE Tourist_Attractions.Attraction_Type_Code = 'Museum';
```
-------------------------5916 sample_num
```sql
SELECT Museums.Museum_Details, Tourist_Attractions.Opening_Hours 
FROM Museums 
JOIN Tourist_Attractions 
ON Museums.Museum_ID = Tourist_Attractions.Tourist_Attraction_ID 
WHERE Tourist_Attractions.Attraction_Type_Code = 'Museum';
```
-------------------------5917 sample_num
```sql
SELECT T1.Name 
FROM Tourist_Attractions AS T1 
JOIN Photos AS T2 
ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID 
WHERE T2.Name = "game1";
```
-------------------------5918 sample_num
```sql
SELECT ta.Name 
FROM Tourist_Attractions ta 
JOIN Photos p ON ta.Tourist_Attraction_ID = p.Tourist_Attraction_ID 
WHERE p.Name = "game1";
```
-------------------------5919 sample_num
```sql
SELECT T2.Name, T2.Description 
FROM Tourist_Attractions AS T1 
JOIN Photos AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID 
WHERE T1.Name = 'film festival';
```
-------------------------5920 sample_num
```sql
SELECT T2.Name, T2.Description 
FROM Tourist_Attractions AS T1 
JOIN Photos AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID 
WHERE T1.Name = 'film festival';
```
-------------------------5921 sample_num
```sql
SELECT ta.Other_Details, ta.How_to_Get_There 
FROM Tourist_Attractions ta 
JOIN Royal_Family rf 
ON ta.Tourist_Attraction_ID = rf.Royal_Family_ID;
```
Note: This assumes that there is a relation between `Tourist_Attractions` and `Royal_Family` tables on `Tourist_Attraction_ID`, which isn't specified in your schema. The correct query might be slightly different based on the actual schema design.
-------------------------5922 sample_num
```sql
SELECT ta.Name, ta.How_to_Get_There
FROM Tourist_Attractions ta
JOIN Royal_Family rf ON ta.Tourist_Attraction_ID = rf.Royal_Family_ID;
```
However, the above query won't work because the relationship between Tourist_Attractions and Royal_Family is not clear from the provided schema. If Tourist_Attractions and Royal_Family are related through a many-to-many relationship or another table, additional JOINs and/or a linking table would be required. Assuming a potential linking table named `Royal_Family_Attractions`, the query would look like:
```sql
SELECT ta.Name, ta.How_to_Get_There
FROM Tourist_Attractions ta
JOIN Royal_Family_Attractions rfa ON ta.Tourist_Attraction_ID = rfa.Tourist_Attraction_ID
JOIN Royal_Family rf ON rfa.Royal_Family_ID = rf.Royal_Family_ID;
```
-------------------------5923 sample_num
```sql
SELECT Shop_Details 
FROM Shops 
WHERE Shop_ID IN (
    SELECT Tourist_Attraction_ID 
    FROM Tourist_Attractions 
    WHERE How_to_Get_There = 'walk'
);
```
-------------------------5924 sample_num
```sql
SELECT S.Shop_Details
FROM Shops S
JOIN Tourist_Attractions TA ON S.Shop_ID = TA.Tourist_Attraction_ID
WHERE TA.How_to_Get_There = 'walk';
```
-------------------------5925 sample_num
```sql
SELECT S.Name 
FROM Staff S 
JOIN Tourist_Attractions T 
ON S.Tourist_Attraction_ID = T.Tourist_Attraction_ID 
WHERE T.Name = 'US museum';
```
-------------------------5926 sample_num
```sql
SELECT S.Name 
FROM Staff S 
JOIN Tourist_Attractions T 
ON S.Tourist_Attraction_ID = T.Tourist_Attraction_ID 
WHERE T.Name = 'US museum';
```
-------------------------5927 sample_num
```sql
SELECT Market_Details 
FROM Street_Markets 
WHERE How_to_Get_There IN ('walk', 'bus');
```
Note: The provided schema does not include a 'How_to_Get_There' column in the Street_Markets table. This query assumes such a column exists for the purpose of the question. If it doesn't exist, this query would need to be adjusted accordingly.
-------------------------5928 sample_num
```sql
SELECT Market_Details 
FROM Street_Markets 
WHERE How_to_Get_There IN ('walk', 'bus');
```
Note: The provided schema does not include a 'How_to_Get_There' column in the Street_Markets table. This query assumes such a column exists for the purpose of the question. If it doesn't exist, this query would need to be adjusted accordingly.
-------------------------5929 sample_num
```sql
SELECT Visit_Date, Visit_Details 
FROM Visits 
WHERE Tourist_ID = (SELECT Tourist_ID FROM Visitors WHERE Tourist_Details = 'Vincent');
```
-------------------------5930 sample_num
```sql
SELECT Visits.Visit_Date, Visits.Visit_Details 
FROM Visits 
JOIN Visitors ON Visits.Tourist_ID = Visitors.Tourist_ID 
WHERE Visitors.Tourist_Details = 'Vincent';
```
-------------------------5931 sample_num
```sql
SELECT ta.Name 
FROM Tourist_Attractions ta 
JOIN Visits v ON ta.Tourist_Attraction_ID = v.Tourist_Attraction_ID 
JOIN Visitors vis ON v.Tourist_ID = vis.Tourist_ID 
WHERE vis.Tourist_Details = 'Vincent';
```
-------------------------5932 sample_num
```sql
SELECT ta.Name 
FROM Tourist_Attractions ta 
JOIN Visits v ON ta.Tourist_Attraction_ID = v.Tourist_Attraction_ID 
JOIN Visitors vis ON v.Tourist_ID = vis.Tourist_ID 
WHERE vis.Tourist_Details = 'Vincent';
```
-------------------------5933 sample_num
```sql
SELECT T2.Name, T1.Visit_Date 
FROM Visits AS T1 
JOIN Tourist_Attractions AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID 
JOIN Visitors AS T3 ON T1.Tourist_ID = T3.Tourist_ID 
WHERE T3.Tourist_Details IN ('Vincent', 'Vivian');
```
-------------------------5934 sample_num
```sql
SELECT 
    t.Name AS Tourist_Attraction_Name, 
    v.Visit_Date
FROM 
    Tourist_Attractions t
JOIN 
    Visits v ON t.Tourist_Attraction_ID = v.Tourist_Attraction_ID
JOIN 
    Visitors vis ON v.Tourist_ID = vis.Tourist_ID
WHERE 
    vis.Tourist_Details IN ('Vincent', 'Vivian');
```
-------------------------5935 sample_num
```sql
SELECT Ref_Hotel_Star_Ratings.star_rating_code, AVG(Hotels.price_range) 
FROM Hotels 
JOIN Ref_Hotel_Star_Ratings ON Hotels.star_rating_code = Ref_Hotel_Star_Ratings.star_rating_code 
GROUP BY Ref_Hotel_Star_Ratings.star_rating_code;
```
-------------------------5936 sample_num
```sql
SELECT Ref_Hotel_Star_Ratings.star_rating_code, AVG(Hotels.price_range) 
FROM Hotels 
JOIN Ref_Hotel_Star_Ratings ON Hotels.star_rating_code = Ref_Hotel_Star_Ratings.star_rating_code 
GROUP BY Ref_Hotel_Star_Ratings.star_rating_code;
```
-------------------------5937 sample_num
```sql
SELECT pets_allowed_yn, AVG(price_range) 
FROM Hotels 
GROUP BY pets_allowed_yn;
```
-------------------------5938 sample_num
```sql
SELECT pets_allowed_yn, AVG(price_range) 
FROM Hotels 
GROUP BY pets_allowed_yn;
```
-------------------------5939 sample_num
```sql
SELECT hotel_id, star_rating_code 
FROM Hotels 
ORDER BY price_range ASC;
```
-------------------------5940 sample_num
```sql
SELECT hotel_id, star_rating_code 
FROM Hotels 
ORDER BY price_range ASC;
```
-------------------------5941 sample_num
```sql
SELECT other_hotel_details FROM Hotels ORDER BY price_range DESC LIMIT 3;
```
-------------------------5942 sample_num
```sql
SELECT other_hotel_details
FROM Hotels
ORDER BY price_range DESC
LIMIT 3;
```
-------------------------5943 sample_num
```sql
SELECT H.other_hotel_details, H.star_rating_code 
FROM Hotels AS H 
JOIN Ref_Hotel_Star_Ratings AS R ON H.star_rating_code = R.star_rating_code 
ORDER BY H.price_range ASC 
LIMIT 3;
```
-------------------------5944 sample_num
```sql
SELECT other_hotel_details, star_rating_code 
FROM Hotels 
ORDER BY price_range ASC 
LIMIT 3;
```
-------------------------5945 sample_num
```sql
SELECT How_to_Get_There, COUNT(*) AS Num_of_Visitors
FROM Tourist_Attractions
JOIN Visits ON Tourist_Attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID
GROUP BY How_to_Get_There
ORDER BY Num_of_Visitors DESC
LIMIT 1;
```
-------------------------5946 sample_num
```sql
SELECT How_to_Get_There, COUNT(*) AS Count 
FROM Tourist_Attractions 
GROUP BY How_to_Get_There 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------5947 sample_num
```sql
SELECT T1.Attraction_Type_Description, T1.Attraction_Type_Code 
FROM Ref_Attraction_Types AS T1 
JOIN Tourist_Attractions AS T2 
ON T1.Attraction_Type_Code = T2.Attraction_Type_Code 
GROUP BY T1.Attraction_Type_Code 
ORDER BY COUNT(T2.Tourist_Attraction_ID) DESC 
LIMIT 1;
```
-------------------------5948 sample_num
```sql
SELECT Ref_Attraction_Types.Attraction_Type_Code, Ref_Attraction_Types.Attraction_Type_Description 
FROM Ref_Attraction_Types 
JOIN Tourist_Attractions ON Ref_Attraction_Types.Attraction_Type_Code = Tourist_Attractions.Attraction_Type_Code 
GROUP BY Ref_Attraction_Types.Attraction_Type_Code 
ORDER BY COUNT(Tourist_Attractions.Tourist_Attraction_ID) DESC 
LIMIT 1;
```
-------------------------5949 sample_num
```sql
SELECT 
    How_to_Get_There, 
    COUNT(Tourist_Attraction_ID) AS Number_of_Attractions
FROM 
    Tourist_Attractions
GROUP BY 
    How_to_Get_There;
```
-------------------------5950 sample_num
```sql
SELECT 
    How_to_Get_There, 
    COUNT(Tourist_Attraction_ID) AS Number_of_Attractions
FROM 
    Tourist_Attractions
GROUP BY 
    How_to_Get_There;
```
-------------------------5951 sample_num
```sql
SELECT T1.Name, T1.Tourist_Attraction_ID, COUNT(T2.Tourist_Attraction_ID) AS Number_of_Visits
FROM Tourist_Attractions T1
LEFT JOIN Visits T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID
GROUP BY T1.Tourist_Attraction_ID, T1.Name;
```
-------------------------5952 sample_num
```sql
SELECT 
    Tourist_Attractions.Name, 
    Tourist_Attractions.Tourist_Attraction_ID, 
    COUNT(Visits.Visit_ID) as Number_of_Visits
FROM 
    Tourist_Attractions 
LEFT JOIN 
    Visits 
ON 
    Tourist_Attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID
GROUP BY 
    Tourist_Attractions.Tourist_Attraction_ID, 
    Tourist_Attractions.Name;
```
-------------------------5953 sample_num
```sql
SELECT T1.Name, T1.Tourist_Attraction_ID 
FROM Tourist_Attractions AS T1 
JOIN Visits AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID 
GROUP BY T1.Tourist_Attraction_ID 
HAVING COUNT(T2.Visit_ID) >= 2;
```
-------------------------5954 sample_num
```sql
SELECT Tourist_Attractions.Name, Tourist_Attractions.Tourist_Attraction_ID 
FROM Tourist_Attractions 
JOIN Visits ON Tourist_Attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID 
GROUP BY Tourist_Attractions.Tourist_Attraction_ID 
HAVING COUNT(Visits.Visit_ID) >= 2;
```
-------------------------5955 sample_num
```sql
SELECT T1.Name, T1.Tourist_Attraction_ID 
FROM Tourist_Attractions AS T1 
JOIN Visits AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID 
GROUP BY T2.Tourist_Attraction_ID 
HAVING COUNT(*) <= 1;
```
-------------------------5956 sample_num
```sql
SELECT T1.Name, T1.Tourist_Attraction_ID 
FROM Tourist_Attractions AS T1 
JOIN Visits AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID 
GROUP BY T2.Tourist_Attraction_ID 
HAVING COUNT(T2.Visit_ID) <= 1;
```
-------------------------5957 sample_num
```sql
SELECT Name 
FROM Tourist_Attractions 
WHERE How_to_Get_There = 'walk' OR Location_ID IN (
    SELECT Location_ID 
    FROM Locations 
    WHERE Address = '660 Shea Crescent'
)
```
-------------------------5958 sample_num
```sql
SELECT Name 
FROM Tourist_Attractions 
WHERE How_to_Get_There = 'walk' 
OR Location_ID IN (SELECT Location_ID FROM Locations WHERE Address = '660 Shea Crescent');
```
-------------------------5959 sample_num
```sql
SELECT T1.Name 
FROM Tourist_Attractions T1
JOIN Tourist_Attraction_Features T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID
JOIN Features T3 ON T2.Feature_ID = T3.Feature_ID
WHERE T3.Feature_Details IN ('parking', 'shopping');
```
-------------------------5960 sample_num
```sql
SELECT T.Name 
FROM Tourist_Attractions T
JOIN Tourist_Attraction_Features TAF ON T.Tourist_Attraction_ID = TAF.Tourist_Attraction_ID
JOIN Features F ON TAF.Feature_ID = F.Feature_ID
WHERE F.Feature_Details = 'parking' OR F.Feature_Details = 'shopping';
```
-------------------------5961 sample_num
```sql
SELECT Name 
FROM Tourist_Attractions 
WHERE How_to_Get_There = 'bus' OR Location_ID IN (
    SELECT Location_ID 
    FROM Locations 
    WHERE Address = '254 Ottilie Junction'
);
```
-------------------------5962 sample_num
```sql
SELECT Name 
FROM Tourist_Attractions 
WHERE How_to_Get_There = 'bus' 
OR Location_ID IN (SELECT Location_ID FROM Locations WHERE Address = '254 Ottilie Junction');
```
-------------------------5963 sample_num
```sql
SELECT T2.Name 
FROM Visits AS T1 
JOIN Tourist_Attractions AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID 
JOIN Visitors AS T3 ON T1.Tourist_ID = T3.Tourist_ID 
WHERE T3.Tourist_Details = 'Vincent' OR T3.Tourist_Details = 'Marcelle'
```
-------------------------5964 sample_num
```sql
SELECT ta.Name 
FROM Tourist_Attractions ta 
JOIN Visits v ON ta.Tourist_Attraction_ID = v.Tourist_Attraction_ID 
JOIN Visitors vis ON v.Tourist_ID = vis.Tourist_ID 
WHERE vis.Tourist_Details IN ('Vincent', 'Marcelle')
GROUP BY ta.Name;
```
-------------------------5965 sample_num
```sql
SELECT ta.Name 
FROM Tourist_Attractions ta 
JOIN Visits v1 ON ta.Tourist_Attraction_ID = v1.Tourist_Attraction_ID 
JOIN Visitors vis1 ON v1.Tourist_ID = vis1.Tourist_ID 
WHERE vis1.Tourist_Details = 'Alison' 
AND NOT EXISTS (SELECT 1 
                FROM Visits v2 
                JOIN Visitors vis2 ON v2.Tourist_ID = vis2.Tourist_ID 
                WHERE v2.Tourist_Attraction_ID = ta.Tourist_Attraction_ID 
                AND vis2.Tourist_Details = 'Rosalind')
```
```
-------------------------5966 sample_num
```sql
SELECT ta.Name 
FROM Tourist_Attractions ta 
JOIN Visits v1 ON ta.Tourist_Attraction_ID = v1.Tourist_Attraction_ID 
JOIN Visitors vis1 ON v1.Tourist_ID = vis1.Tourist_ID 
WHERE vis1.Tourist_Details = 'Alison' 
AND NOT EXISTS (SELECT * 
                FROM Visits v2 
                JOIN Visitors vis2 ON v2.Tourist_ID = vis2.Tourist_ID 
                WHERE v2.Tourist_Attraction_ID = ta.Tourist_Attraction_ID 
                AND vis2.Tourist_Details = 'Rosalind')
```
-------------------------5967 sample_num
```sql
SELECT COUNT(*) 
FROM Visitors 
WHERE Tourist_ID NOT IN (SELECT Tourist_ID FROM Visits)
```
-------------------------5968 sample_num
```sql
SELECT COUNT(*) 
FROM Visitors 
WHERE Tourist_ID NOT IN (SELECT Tourist_ID FROM Visits)
```
-------------------------5969 sample_num
```sql
SELECT COUNT(*) FROM Video_Games;
```
-------------------------5970 sample_num
```sql
SELECT COUNT(*) FROM Video_Games;
```
-------------------------5971 sample_num
```sql
SELECT COUNT(DISTINCT GType) FROM Video_Games;
```
-------------------------5972 sample_num
```sql
SELECT COUNT(DISTINCT GType) FROM Video_Games;
```
-------------------------5973 sample_num
```sql
SELECT DISTINCT GType FROM Video_Games;
```
-------------------------5974 sample_num
```sql
SELECT DISTINCT GType FROM Video_Games;
```
-------------------------5975 sample_num
```sql
SELECT GName, GType 
FROM Video_Games 
ORDER BY GName;
```
-------------------------5976 sample_num
```sql
SELECT GName, GType 
FROM Video_Games 
ORDER BY GName ASC;
```
-------------------------5977 sample_num
```sql
SELECT GName 
FROM Video_Games 
WHERE GType = 'Collectible card game';
```
-------------------------5978 sample_num
```sql
SELECT GName 
FROM Video_Games 
WHERE GType = 'Collectible Card'
```
-------------------------5979 sample_num
```sql
SELECT GType 
FROM Video_Games 
WHERE GName = 'Call of Destiny';
```
-------------------------5980 sample_num
```sql
SELECT GType 
FROM Video_Games 
WHERE GName = 'Call of Destiny';
```
-------------------------5981 sample_num
```sql
SELECT COUNT(*) 
FROM Video_Games 
WHERE GType = 'Massively multiplayer online game';
```
-------------------------5982 sample_num
```sql
SELECT COUNT(*) 
FROM Video_Games 
WHERE GType = 'Massively multiplayer online';
```
-------------------------5983 sample_num
```sql
SELECT GType, COUNT(*) AS NumOfGames
FROM Video_Games
GROUP BY GType;
```
-------------------------5984 sample_num
```sql
SELECT GType, COUNT(*) 
FROM Video_Games 
GROUP BY GType;
```
-------------------------5985 sample_num
```sql
SELECT GType, COUNT(*) AS NumOfGames
FROM Video_Games
GROUP BY GType
ORDER BY NumOfGames DESC
LIMIT 1;
```
-------------------------5986 sample_num
```sql
SELECT GType, COUNT(*) AS TotalGames 
FROM Video_Games 
GROUP BY GType 
ORDER BY TotalGames DESC 
LIMIT 1;
```
-------------------------5987 sample_num
```sql
SELECT GType, COUNT(*) AS Game_Count
FROM Video_Games
GROUP BY GType
ORDER BY Game_Count ASC
LIMIT 1;
```
-------------------------5988 sample_num
```sql
SELECT GType, COUNT(GameID) as GameCount 
FROM Video_Games 
GROUP BY GType 
ORDER BY GameCount 
LIMIT 1;
```
-------------------------5989 sample_num
```sql
SELECT StuID FROM Student WHERE city_code = 'CHI';
```
-------------------------5990 sample_num
```sql
SELECT StuID FROM Student WHERE city_code = 'CHI';
```
-------------------------5991 sample_num
```sql
SELECT StuID FROM Student WHERE Advisor = 1121;
```
-------------------------5992 sample_num
```sql
SELECT StuID FROM Student WHERE Advisor = 1121;
```
-------------------------5993 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Major = 600;
```
-------------------------5994 sample_num
```sql
SELECT Fname 
FROM Student 
WHERE Major = 600;
```
-------------------------5995 sample_num
```sql
SELECT Major, AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age 
FROM Student 
GROUP BY Major;
```
-------------------------5996 sample_num
```sql
SELECT Major, AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age 
FROM Student 
GROUP BY Major;
```
-------------------------5997 sample_num
```sql
SELECT Advisor
FROM Student
GROUP BY Advisor
HAVING COUNT(StuID) >= 2;
```
-------------------------5998 sample_num
```sql
SELECT DISTINCT Advisor FROM Student;
```
-------------------------5999 sample_num
```sql
SELECT COUNT(DISTINCT SportName) FROM SportsInfo;
```
-------------------------6000 sample_num
```sql
SELECT COUNT(DISTINCT SportName) FROM SportsInfo;
```
-------------------------6001 sample_num
```sql
SELECT COUNT(*) 
FROM SportsInfo;
```
-------------------------6002 sample_num
```sql
SELECT COUNT(DISTINCT StuID) FROM SportsInfo;
```
-------------------------6003 sample_num
```sql
SELECT StuID FROM SportsInfo WHERE OnScholarship = true;
```
-------------------------6004 sample_num
```sql
SELECT StuID 
FROM SportsInfo 
WHERE OnScholarship = 'Yes';
```
-------------------------6005 sample_num
```sql
SELECT Student.LName 
FROM Student 
JOIN SportsInfo ON Student.StuID = SportsInfo.StuID 
WHERE SportsInfo.OnScholarship = 'Yes';
```
-------------------------6006 sample_num
```sql
SELECT DISTINCT S.LName 
FROM Student S
JOIN SportsInfo Sp ON S.StuID = Sp.StuID
WHERE Sp.OnScholarship = 'Yes';
```
-------------------------6007 sample_num
```sql
SELECT COUNT(*) 
FROM Plays_Games;
```
-------------------------6008 sample_num
```sql
SELECT COUNT(*) FROM Plays_Games;
```
-------------------------6009 sample_num
```sql
SELECT COUNT(*) 
FROM Plays_Games pg
JOIN SportsInfo si ON pg.StuID = si.StuID
WHERE si.SportName = 'football' AND si.OnScholarship = 'yes';
```
Note: The condition for 'OnScholarship' needs to be adjusted according to the actual value that represents 'on scholarship' in your data. I've assumed it might be 'yes' for simplicity.
-------------------------6010 sample_num
```sql
SELECT COUNT(*) 
FROM SportsInfo 
WHERE SportName = 'football' AND OnScholarship = 'Yes';
```
-------------------------6011 sample_num
```sql
SELECT SportName, COUNT(*) AS NumOfStudents 
FROM SportsInfo 
GROUP BY SportName;
```
-------------------------6012 sample_num
```sql
SELECT SportsInfo.SportName, COUNT(DISTINCT SportsInfo.StuID) AS NumOfStudents
FROM SportsInfo
GROUP BY SportsInfo.SportName;
```
-------------------------6013 sample_num
```sql
SELECT 
    StuID, 
    COUNT(SportName) AS Num_Sports, 
    SUM(GamesPlayed) AS Total_Games_Played
FROM 
    SportsInfo
GROUP BY 
    StuID;
```
-------------------------6014 sample_num
```sql
SELECT 
    StuID, 
    COUNT(DISTINCT SportName) AS Num_Sports,
    COUNT(DISTINCT GameID) AS Num_Games
FROM 
    Student
LEFT JOIN 
    Plays_Games ON Student.StuID = Plays_Games.StuID
LEFT JOIN 
    SportsInfo ON Student.StuID = SportsInfo.StuID
GROUP BY 
    StuID;
```
-------------------------6015 sample_num
```sql
SELECT StuID 
FROM SportsInfo 
GROUP BY StuID 
HAVING SUM(HoursPerWeek) > 10;
```
-------------------------6016 sample_num
```sql
SELECT StuID 
FROM SportsInfo 
GROUP BY StuID 
HAVING SUM(HoursPerWeek) > 10;
```
-------------------------6017 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S
JOIN (
    SELECT StuID, COUNT(*) as sport_count
    FROM SportsInfo
    GROUP BY StuID
    ORDER BY sport_count DESC
    LIMIT 1
) SI ON S.StuID = SI.StuID;
```
-------------------------6018 sample_num
```sql
SELECT S.Fname, S.LName 
FROM Student S
JOIN SportsInfo SI ON S.StuID = SI.StuID 
GROUP BY S.StuID, S.Fname, S.LName 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6019 sample_num
```sql
SELECT SportName
FROM SportsInfo
WHERE OnScholarship = 'Yes'
GROUP BY SportName
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------6020 sample_num
```sql
SELECT SportName
FROM SportsInfo
WHERE OnScholarship = 'Yes'
GROUP BY SportName
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------6021 sample_num
```sql
SELECT StuID 
FROM Student 
WHERE StuID NOT IN (SELECT StuID FROM SportsInfo)
```
-------------------------6022 sample_num
```sql
SELECT StuID 
FROM Student 
WHERE StuID NOT IN (SELECT StuID FROM SportsInfo)
```
-------------------------6023 sample_num
```sql
SELECT StuID 
FROM Student 
JOIN SportsInfo ON Student.StuID = SportsInfo.StuID 
WHERE Major = 600 AND OnScholarship = 'Yes';
```
-------------------------6024 sample_num
```sql
SELECT StuID 
FROM Student 
JOIN SportsInfo ON Student.StuID = SportsInfo.StuID 
WHERE Major = 600 AND OnScholarship = 'Yes';
```
-------------------------6025 sample_num
```sql
SELECT Student.StuID 
FROM Student 
JOIN SportsInfo ON Student.StuID = SportsInfo.StuID 
WHERE Student.Sex = 'F' AND SportsInfo.SportName = 'football';
```
-------------------------6026 sample_num
```sql
SELECT s.StuID 
FROM Student s 
JOIN SportsInfo sp ON s.StuID = sp.StuID 
WHERE s.Sex = 'F' AND sp.SportName = 'football';
```
-------------------------6027 sample_num
```sql
SELECT Student.StuID 
FROM Student 
LEFT JOIN SportsInfo ON Student.StuID = SportsInfo.StuID 
WHERE Student.Sex = 'M' AND SportsInfo.SportName != 'Football' OR SportsInfo.SportName IS NULL;
```
-------------------------6028 sample_num
```sql
SELECT StuID 
FROM Student 
WHERE Sex = 'M' 
AND StuID NOT IN (SELECT StuID FROM SportsInfo WHERE SportName = 'Football')
```
-------------------------6029 sample_num
```sql
SELECT SportsInfo.HoursPerWeek, SportsInfo.GamesPlayed 
FROM SportsInfo 
JOIN Student ON SportsInfo.StuID = Student.StuID 
WHERE Student.Fname = 'David' AND Student.LName = 'Shieber';
```
-------------------------6030 sample_num
```sql
SELECT SUM(HoursPerWeek) AS Total_Hours_Per_Week, SUM(GamesPlayed) AS Total_Games_Played 
FROM SportsInfo 
WHERE StuID IN (
    SELECT StuID 
    FROM Student 
    WHERE Fname = 'David' AND LName = 'Shieber'
);
```
-------------------------6031 sample_num
```sql
SELECT SportsInfo.HoursPerWeek, SportsInfo.GamesPlayed
FROM SportsInfo
JOIN Student ON SportsInfo.StuID = Student.StuID
WHERE Student.Age < 20;
```
-------------------------6032 sample_num
```sql
SELECT SUM(HoursPerWeek), SUM(GamesPlayed)
FROM SportsInfo
JOIN Student ON SportsInfo.StuID = Student.StuID
WHERE Student.Age < 20;
```
-------------------------6033 sample_num
```sql
SELECT COUNT(DISTINCT StuID) 
FROM Plays_Games;
```
-------------------------6034 sample_num
```sql
SELECT COUNT(DISTINCT StuID) FROM Plays_Games;
```
-------------------------6035 sample_num
```sql
SELECT StuID 
FROM Student 
WHERE StuID NOT IN (SELECT StuID FROM Plays_Games)
```
-------------------------6036 sample_num
```sql
SELECT StuID 
FROM Student 
WHERE StuID NOT IN (SELECT StuID FROM Plays_Games)
```
-------------------------6037 sample_num
```sql
SELECT DISTINCT P.StuID 
FROM Plays_Games P 
JOIN Student S ON P.StuID = S.StuID
JOIN SportsInfo SI ON S.StuID = SI.StuID;
```
-------------------------6038 sample_num
```sql
SELECT DISTINCT P.StuID 
FROM Plays_Games P 
INNER JOIN SportsInfo S 
ON P.StuID = S.StuID;
```
-------------------------6039 sample_num
```sql
SELECT GameID, SUM(Hours_Played) 
FROM Plays_Games 
GROUP BY GameID;
```
-------------------------6040 sample_num
```sql
SELECT GameID, SUM(Hours_Played) as Total_Hours_Played 
FROM Plays_Games 
GROUP BY GameID;
```
-------------------------6041 sample_num
```sql
SELECT Student.StuID, SUM(Plays_Games.Hours_Played) AS Total_Hours_Played
FROM Student
JOIN Plays_Games ON Student.StuID = Plays_Games.StuID
GROUP BY Student.StuID;
```
-------------------------6042 sample_num
```sql
SELECT StuID, SUM(Hours_Played) AS Total_Hours_Played
FROM Plays_Games
GROUP BY StuID;
```
-------------------------6043 sample_num
```sql
SELECT VG.GName 
FROM Video_Games VG 
JOIN Plays_Games PG ON VG.GameID = PG.GameID 
GROUP BY VG.GName 
ORDER BY SUM(PG.Hours_Played) DESC 
LIMIT 1;
```
-------------------------6044 sample_num
```sql
SELECT GName 
FROM Video_Games 
JOIN Plays_Games ON Video_Games.GameID = Plays_Games.GameID 
GROUP BY Video_Games.GName 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6045 sample_num
```sql
SELECT VG.GName
FROM Video_Games VG
JOIN Plays_Games PG ON VG.GameID = PG.GameID
GROUP BY VG.GName
HAVING SUM(PG.Hours_Played) >= 1000;
```
-------------------------6046 sample_num
```sql
SELECT VG.GName 
FROM Video_Games VG
JOIN Plays_Games PG ON VG.GameID = PG.GameID
GROUP BY VG.GName
HAVING SUM(PG.Hours_Played) >= 1000;
```
-------------------------6047 sample_num
```sql
SELECT VG.GName 
FROM Video_Games VG 
JOIN Plays_Games PG ON VG.GameID = PG.GameID 
JOIN Student S ON S.StuID = PG.StuID 
WHERE S.LName = 'Smith' AND S.Fname = 'Linda';
```
-------------------------6048 sample_num
```sql
SELECT VG.GName 
FROM Video_Games VG 
JOIN Plays_Games PG ON VG.GameID = PG.GameID 
JOIN Student S ON S.StuID = PG.StuID 
WHERE S.LName = 'Smith' AND S.Fname = 'Linda';
```
-------------------------6049 sample_num
```sql
SELECT Student.LName, Student.Fname 
FROM Student 
JOIN SportsInfo ON Student.StuID = SportsInfo.StuID 
WHERE SportsInfo.SportName IN ('Football', 'Lacrosse');
```
-------------------------6050 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S
JOIN SportsInfo SI ON S.StuID = SI.StuID
WHERE SI.SportName IN ('Football', 'Lacrosse');
```
-------------------------6051 sample_num
```sql
SELECT T1.Fname, T1.Age FROM Student AS T1 JOIN SportsInfo AS T2 ON T1.StuID = T2.StuID WHERE T2.SportName = 'Football' INTERSECT SELECT T1.Fname, T1.Age FROM Student AS T1 JOIN SportsInfo AS T2 ON T1.StuID = T2.StuID WHERE T2.SportName = 'Lacrosse'
```
-------------------------6052 sample_num
```sql
SELECT S.Fname, S.Age 
FROM Student S 
JOIN SportsInfo SI1 ON S.StuID = SI1.StuID 
JOIN SportsInfo SI2 ON S.StuID = SI2.StuID 
WHERE SI1.SportName = 'Football' AND SI2.SportName = 'Lacrosse';
```
```
-------------------------6053 sample_num
```sql
SELECT S.LName, S.Sex 
FROM Student S
JOIN Plays_Games PG1 ON S.StuID = PG1.StuID
JOIN Video_Games VG1 ON PG1.GameID = VG1.GameID AND VG1.GName = 'Call of Destiny'
JOIN Plays_Games PG2 ON S.StuID = PG2.StuID
JOIN Video_Games VG2 ON PG2.GameID = VG2.GameID AND VG2.GName = 'Works of Widenius';
```
-------------------------6054 sample_num
```sql
SELECT S.LName, S.Sex 
FROM Student S
JOIN Plays_Games PG1 ON S.StuID = PG1.StuID 
JOIN Video_Games VG1 ON PG1.GameID = VG1.GameID AND VG1.GName = 'Call of Destiny'
JOIN Plays_Games PG2 ON S.StuID = PG2.StuID 
JOIN Video_Games VG2 ON PG2.GameID = VG2.GameID AND VG2.GName = 'Works of Widenius'
```
-------------------------6055 sample_num
```sql
SELECT customer_name FROM Customers;
```
-------------------------6056 sample_num
```sql
SELECT customer_name FROM Customers;
```
-------------------------6057 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------6058 sample_num
```sql
SELECT COUNT(DISTINCT customer_id) 
FROM Customers;
```
-------------------------6059 sample_num
```sql
SELECT AVG(order_quantity) 
FROM Order_Items;
```
Note: This query assumes that the `order_quantity` column in the `Order_Items` table represents the quantity of each product in a single order. However, to get the average amount of all items in each order, you would need to join the `Order_Items` table with the `Customer_Orders` table and group by the `order_id`, like this:
```sql
SELECT o.order_id, AVG(oi.order_quantity) as avg_items_per_order
FROM Customer_Orders o
JOIN Order_Items oi ON o.order_id = oi.order_id
GROUP BY o.order_id;
```
-------------------------6060 sample_num
```sql
SELECT AVG(order_quantity) 
FROM Order_Items;
```
-------------------------6061 sample_num
```sql
SELECT customer_name 
FROM Customers 
WHERE payment_method = 'Cash';
```
-------------------------6062 sample_num
```sql
SELECT customer_name 
FROM Customers 
WHERE payment_method = 'Cash';
```
-------------------------6063 sample_num
```sql
SELECT date_became_customer 
FROM Customers 
WHERE customer_id BETWEEN 10 AND 20;
```
-------------------------6064 sample_num
```sql
SELECT date_became_customer 
FROM Customers 
WHERE customer_id BETWEEN 10 AND 20;
```
-------------------------6065 sample_num
```sql
SELECT payment_method, COUNT(customer_id) as customer_count
FROM Customers
GROUP BY payment_method
ORDER BY customer_count DESC
LIMIT 1;
```
-------------------------6066 sample_num
```sql
SELECT payment_method, COUNT(*) as frequency 
FROM Customers 
GROUP BY payment_method 
ORDER BY frequency DESC 
LIMIT 1;
```
-------------------------6067 sample_num
```sql
SELECT customer_name 
FROM Customers 
WHERE payment_method = (
    SELECT payment_method 
    FROM Customers 
    GROUP BY payment_method 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
```
-------------------------6068 sample_num
```sql
SELECT customer_name 
FROM Customers 
WHERE payment_method = (
    SELECT payment_method 
    FROM Customers 
    GROUP BY payment_method 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
```
-------------------------6069 sample_num
```sql
SELECT DISTINCT payment_method FROM Customers;
```
-------------------------6070 sample_num
```sql
SELECT DISTINCT payment_method FROM Customers;
```
-------------------------6071 sample_num
```sql
SELECT * FROM Products;
```
-------------------------6072 sample_num
```sql
SELECT * FROM Products;
```
-------------------------6073 sample_num
```sql
SELECT customer_name 
FROM Customers 
WHERE customer_name LIKE '%Alex%';
```
-------------------------6074 sample_num
```sql
SELECT customer_name FROM Customers WHERE customer_name LIKE '%Alex%';
```
-------------------------6075 sample_num
```sql
SELECT product_details 
FROM Products 
WHERE product_details LIKE '%Latte%' OR product_details LIKE '%Americano%';
```
-------------------------6076 sample_num
```sql
SELECT product_details 
FROM Products 
WHERE product_details LIKE '%Latte%' OR product_details LIKE '%Americano%';
```
-------------------------6077 sample_num
```sql
SELECT A.address_content 
FROM Addresses A
JOIN Customer_Addresses CA ON A.address_id = CA.address_id
JOIN Customers C ON C.customer_id = CA.customer_id
WHERE C.customer_name = 'Maudie Kertzmann';
```
-------------------------6078 sample_num
```sql
SELECT A.address_content 
FROM Addresses A
JOIN Customer_Addresses CA ON A.address_id = CA.address_id
JOIN Customers C ON C.customer_id = CA.customer_id
WHERE C.customer_name = 'Maudie Kertzmann';
```
-------------------------6079 sample_num
```sql
SELECT COUNT(DISTINCT c.customer_id) 
FROM Customers c
JOIN Customer_Addresses ca ON c.customer_id = ca.customer_id
JOIN Addresses a ON ca.address_id = a.address_id
WHERE a.city = 'Lake Geovannyton';
```
-------------------------6080 sample_num
```sql
SELECT COUNT(DISTINCT c.customer_id)
FROM Customers c
JOIN Customer_Addresses ca ON c.customer_id = ca.customer_id
JOIN Addresses a ON a.address_id = ca.address_id
WHERE a.city = 'Lake Geovannyton';
```
-------------------------6081 sample_num
```sql
SELECT c.customer_name
FROM Customers c
JOIN Customer_Addresses ca ON c.customer_id = ca.customer_id
JOIN Addresses a ON ca.address_id = a.address_id
WHERE a.state_province_county = 'Colorado';
```
-------------------------6082 sample_num
```sql
SELECT c.customer_name
FROM Customers c
JOIN Customer_Addresses ca ON c.customer_id = ca.customer_id
JOIN Addresses a ON ca.address_id = a.address_id
WHERE a.state_province_county = 'Colorado';
```
-------------------------6083 sample_num
```sql
SELECT city 
FROM Addresses 
WHERE address_id NOT IN (
    SELECT address_id 
    FROM Customer_Addresses 
)
GROUP BY city;
```
-------------------------6084 sample_num
```sql
SELECT city 
FROM Addresses 
WHERE address_id NOT IN (
    SELECT DISTINCT address_id 
    FROM Customer_Addresses
)
```
```
-------------------------6085 sample_num
```sql
SELECT A.city, COUNT(C.customer_id) AS NumOfCustomers
FROM Addresses A
JOIN Customer_Addresses CA ON A.address_id = CA.address_id
JOIN Customers C ON C.customer_id = CA.customer_id
GROUP BY A.city
ORDER BY NumOfCustomers DESC
LIMIT 1;
```
-------------------------6086 sample_num
```sql
SELECT A.city, COUNT(C.customer_id) AS NumOfCustomers
FROM Addresses A
JOIN Customer_Addresses CA ON A.address_id = CA.address_id
GROUP BY A.city
ORDER BY NumOfCustomers DESC
LIMIT 1;
```
-------------------------6087 sample_num
```sql
SELECT DISTINCT city FROM Addresses;
```
-------------------------6088 sample_num
```sql
SELECT DISTINCT city FROM Addresses;
```
-------------------------6089 sample_num
```sql
SELECT city 
FROM Addresses 
WHERE zip_postcode = 255;
```
-------------------------6090 sample_num
```sql
SELECT city FROM Addresses WHERE zip_postcode = 255;
```
-------------------------6091 sample_num
```sql
SELECT state_province_county, country 
FROM Addresses 
WHERE zip_postcode LIKE '4%';
```
-------------------------6092 sample_num
```sql
SELECT state_province_county, country 
FROM Addresses 
WHERE zip_postcode LIKE '4%';
```
-------------------------6093 sample_num
```sql
SELECT country
FROM Addresses
GROUP BY country
HAVING COUNT(address_id) > 4;
```
-------------------------6094 sample_num
```sql
SELECT country
FROM Addresses
GROUP BY country
HAVING COUNT(DISTINCT address_id) > 4;
```
-------------------------6095 sample_num
```sql
SELECT channel_code
FROM Customer_Contact_Channels
GROUP BY channel_code
HAVING COUNT(*) < 5;
```
-------------------------6096 sample_num
```sql
SELECT channel_code
FROM Customer_Contact_Channels
GROUP BY channel_code
HAVING COUNT(*) < 5;
```
-------------------------6097 sample_num
```sql
SELECT CCC.channel_code 
FROM Customer_Contact_Channels CCC
JOIN Customers C ON CCC.customer_id = C.customer_id
WHERE C.customer_name = 'Tillman Ernser';
```
-------------------------6098 sample_num
```sql
SELECT CCC.channel_code 
FROM Customer_Contact_Channels CCC
JOIN Customers C ON CCC.customer_id = C.customer_id
WHERE C.customer_name = 'Tillman Ernser';
```
-------------------------6099 sample_num
```sql
SELECT MAX(c3.active_to_date) 
FROM Customer_Contact_Channels c3 
JOIN Customers c2 ON c3.customer_id = c2.customer_id 
WHERE c2.customer_name = 'Tillman Ernser';
```
-------------------------6100 sample_num
```sql
SELECT MAX(Customer_Contact_Channels.active_to_date) 
FROM Customer_Contact_Channels 
JOIN Customers ON Customer_Contact_Channels.customer_id = Customers.customer_id 
WHERE Customers.customer_name = 'Tillman Ernser';
```
-------------------------6101 sample_num
```sql
SELECT AVG(active_to_date - active_from_date) 
FROM Customer_Contact_Channels;
```
Note: This assumes that `active_to_date` and `active_from_date` are in a date format. If they are timestamps, you might need to use an appropriate function to convert them into days or other time units.
-------------------------6102 sample_num
```sql
SELECT AVG(active_to_date - active_from_date) 
FROM Customer_Contact_Channels;
```
Note: This is a simplified version. Depending on the data type of the date fields, you may need to convert them to a suitable format for subtraction or use specific functions provided by your RDBMS (e.g., DATEDIFF in MySQL).
Also, be aware that if `active_to_date` is NULL for currently active contact channels, you may want to use COALESCE or a similar function to replace NULL with the current date or another appropriate value.
-------------------------6103 sample_num
```sql
SELECT channel_code, contact_number 
FROM (
  SELECT customer_id, channel_code, contact_number, 
         active_to_date - active_from_date AS active_days
  FROM Customer_Contact_Channels
) subquery
WHERE active_days = (SELECT MAX(active_to_date - active_from_date) FROM Customer_Contact_Channels);
```
Note: This query assumes that `active_to_date` and `active_from_date` are stored as dates in the database. If they are stored as timestamps or in another format, you may need to adjust the calculation of the difference between the two dates accordingly. Also, if there are multiple channels with the same longest active period, this query will return all of them.
-------------------------6104 sample_num
```sql
SELECT channel_code, contact_number 
FROM (
    SELECT customer_id, channel_code, contact_number, 
        active_to_date - active_from_date AS duration 
    FROM Customer_Contact_Channels
) AS subquery
WHERE duration = (
    SELECT MAX(duration) 
    FROM (
        SELECT active_to_date - active_from_date AS duration 
        FROM Customer_Contact_Channels
    ) AS subquery2
);
```
-------------------------6105 sample_num
```sql
SELECT C.customer_name, CCC.active_from_date
FROM Customers C
JOIN Customer_Contact_Channels CCC ON C.customer_id = CCC.customer_id
WHERE CCC.channel_code = 'email';
```
-------------------------6106 sample_num
```sql
SELECT c.customer_name, CCC.active_from_date 
FROM Customers c
JOIN Customer_Contact_Channels CCC ON c.customer_id = CCC.customer_id 
WHERE CCC.channel_code = 'email';
```
-------------------------6107 sample_num
```sql
SELECT C.customer_name 
FROM Customers C 
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id 
JOIN Order_Items OI ON CO.order_id = OI.order_id 
WHERE OI.order_quantity = (SELECT MAX(order_quantity) FROM Order_Items)
```
```
-------------------------6108 sample_num
```sql
SELECT C.customer_name 
FROM Customers C 
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id 
JOIN Order_Items OI ON CO.order_id = OI.order_id 
GROUP BY C.customer_name 
ORDER BY SUM(OI.order_quantity) DESC 
LIMIT 1;
```
-------------------------6109 sample_num
```sql
SELECT C.customer_name
FROM Customers C
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id
JOIN Order_Items OI ON CO.order_id = OI.order_id
GROUP BY C.customer_name
ORDER BY SUM(OI.order_quantity) DESC
LIMIT 1;
```
-------------------------6110 sample_num
```sql
SELECT C.customer_name 
FROM Customers C
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id
JOIN Order_Items OI ON CO.order_id = OI.order_id
GROUP BY C.customer_name
ORDER BY SUM(OI.order_quantity) DESC
LIMIT 1;
```
-------------------------6111 sample_num
```sql
SELECT C.payment_method
FROM Customers C
JOIN Customer_Orders CO ON C.customer_id = CO.customer_id
JOIN Order_Items OI ON CO.order_id = OI.order_id
GROUP BY C.payment_method
HAVING SUM(OI.order_quantity) = (
    SELECT MIN(total_quantity)
    FROM (
        SELECT SUM(order_quantity) AS total_quantity
        FROM Order_Items
        GROUP BY order_id
    ) AS subquery
);
```
-------------------------6112 sample_num
```sql
SELECT C.payment_method 
FROM Customers C
WHERE C.customer_id = (
    SELECT CO.customer_id 
    FROM Customer_Orders CO
    JOIN Order_Items OI ON CO.order_id = OI.order_id
    GROUP BY CO.customer_id
    ORDER BY SUM(OI.order_quantity) ASC
    LIMIT 1
)
```
-------------------------6113 sample_num
```sql
SELECT COUNT(DISTINCT T3.product_id) 
FROM Customer_Orders AS T1 
JOIN Order_Items AS T2 ON T1.order_id = T2.order_id 
JOIN Products AS T3 ON T2.product_id = T3.product_id 
WHERE T1.customer_id = (SELECT customer_id FROM Customers WHERE customer_name = 'Rodrick Heaney');
```
-------------------------6114 sample_num
```sql
SELECT COUNT(DISTINCT oi.product_id) 
FROM Order_Items oi 
JOIN Customer_Orders co ON oi.order_id = co.order_id 
JOIN Customers c ON co.customer_id = c.customer_id 
WHERE c.customer_name = 'Rodrick Heaney';
```
-------------------------6115 sample_num
```sql
SELECT SUM(order_quantity) 
FROM Customer_Orders 
JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id 
JOIN Customers ON Customer_Orders.customer_id = Customers.customer_id 
WHERE Customers.customer_name = 'Rodrick Heaney';
```
Note: This query assumes that there is no need to join with other tables like 'Addresses' or 'Products'. If needed based on your exact schema and data, additional joins may be required.
-------------------------6116 sample_num
```sql
SELECT SUM(order_quantity) 
FROM Customer_Orders 
JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id 
JOIN Customers ON Customer_Orders.customer_id = Customers.customer_id 
WHERE Customers.customer_name = 'Rodrick Heaney';
```
Note: This query assumes that there is no need to join with other tables like 'Addresses' or 'Products'. If needed based on your exact schema and data, additional joins may be required.
-------------------------6117 sample_num
```sql
SELECT COUNT(DISTINCT c.customer_id) 
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
WHERE co.order_status = 'Cancelled';
```
-------------------------6118 sample_num
```sql
SELECT COUNT(DISTINCT c.customer_id) 
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
WHERE co.order_status = 'Cancelled';
```
-------------------------6119 sample_num
```sql
SELECT COUNT(*) 
FROM Customer_Orders 
WHERE order_details = 'Second time';
```
-------------------------6120 sample_num
```sql
SELECT COUNT(*) 
FROM Customer_Orders 
WHERE order_details = 'Second time';
```
-------------------------6121 sample_num
```sql
SELECT Customers.customer_name, Customer_Orders.order_date 
FROM Customer_Orders 
INNER JOIN Customers ON Customer_Orders.customer_id = Customers.customer_id 
WHERE Customer_Orders.order_status = 'Delivered';
```
-------------------------6122 sample_num
```sql
SELECT Customers.customer_name, Customer_Orders.order_date 
FROM Customer_Orders 
INNER JOIN Customers ON Customer_Orders.customer_id = Customers.customer_id 
WHERE Customer_Orders.order_status = 'Delivered';
```
-------------------------6123 sample_num
```sql
SELECT COUNT(*) 
FROM (
    SELECT oi.product_id
    FROM Order_Items oi
    JOIN Customer_Orders co ON oi.order_id = co.order_id
    WHERE co.order_status = 'Cancelled'
) as subquery;
```
However, for better optimization and depending on the database being used, you could also write it as follows:

```sql
SELECT COUNT(oi.product_id)
FROM Order_Items oi
JOIN Customer_Orders co ON oi.order_id = co.order_id
WHERE co.order_status = 'Cancelled';
```
-------------------------6124 sample_num
```sql
SELECT SUM(order_quantity) 
FROM Order_Items 
JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id 
WHERE Customer_Orders.order_status = 'Cancelled';
```
-------------------------6125 sample_num
```sql
SELECT SUM(oi.order_quantity) AS total_products_ordered 
FROM Order_Items oi 
JOIN Customer_Orders co ON oi.order_id = co.order_id 
WHERE co.order_date < '2018-03-17 07:13:53';
```
-------------------------6126 sample_num
```sql
SELECT SUM(oi.order_quantity) AS total_products_purchased 
FROM Order_Items oi 
JOIN Customer_Orders co ON oi.order_id = co.order_id 
WHERE co.order_date < '2018-03-17 07:13:53';
```
-------------------------6127 sample_num
```sql
SELECT Customers.customer_name
FROM Customers
JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id
ORDER BY Customer_Orders.order_date DESC
LIMIT 1;
```
-------------------------6128 sample_num
```sql
SELECT c.customer_name
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
WHERE co.order_date = (SELECT MAX(order_date) FROM Customer_Orders)
```
-------------------------6129 sample_num
```sql
SELECT p.product_id, p.product_details, SUM(oi.order_quantity) as total_ordered 
FROM Products p 
JOIN Order_Items oi ON p.product_id = oi.product_id 
GROUP BY p.product_id, p.product_details 
ORDER BY total_ordered DESC 
LIMIT 1;
```
-------------------------6130 sample_num
```sql
SELECT p.product_details 
FROM Products p
JOIN Order_Items oi ON p.product_id = oi.product_id
GROUP BY p.product_id, p.product_details
ORDER BY COUNT(oi.order_id) DESC
LIMIT 1;
```
-------------------------6131 sample_num
```sql
SELECT P.product_id, P.product_details
FROM Products P
JOIN (
    SELECT OI.product_id, SUM(OI.order_quantity) as total_quantity
    FROM Order_Items OI
    GROUP BY OI.product_id
    ORDER BY total_quantity DESC
    LIMIT 1
) T ON P.product_id = T.product_id;
```
-------------------------6132 sample_num
```sql
SELECT P.product_id, P.product_details
FROM Products P
JOIN Order_Items OI ON P.product_id = OI.product_id
GROUP BY P.product_id, P.product_details
ORDER BY SUM(OI.order_quantity) DESC
LIMIT 1;
```
-------------------------6133 sample_num
```sql
SELECT address_content 
FROM Addresses 
WHERE (city='East Julianaside' AND state_province_county='Texas') 
OR (city='Gleasonmouth' AND state_province_county='Arizona');
```
-------------------------6134 sample_num
```sql
SELECT address_content 
FROM Addresses 
WHERE (city = 'East Julianaside' AND state_province_county = 'Texas') 
OR (city = 'Gleasonmouth' AND state_province_county = 'Arizona');
```
-------------------------6135 sample_num
```sql
SELECT DISTINCT c.customer_name 
FROM Customers c
WHERE c.payment_method != 'Cash'
```
```
-------------------------6136 sample_num
```sql
SELECT customer_name 
FROM Customers 
WHERE payment_method != 'Cash';
```
-------------------------6137 sample_num
```sql
SELECT c.customer_name 
FROM Customers c 
WHERE c.customer_id NOT IN (
    SELECT co.customer_id 
    FROM Customer_Orders co 
    JOIN Order_Items oi ON co.order_id = oi.order_id 
    JOIN Products p ON oi.product_id = p.product_id 
    WHERE p.product_details = 'Latte'
)
```
-------------------------6138 sample_num
```sql
SELECT c.customer_name 
FROM Customers c 
WHERE c.customer_id NOT IN (
    SELECT co.customer_id 
    FROM Customer_Orders co 
    JOIN Order_Items oi ON co.order_id = oi.order_id 
    JOIN Products p ON oi.product_id = p.product_id 
    WHERE p.product_details = 'Latte'
)
```
-------------------------6139 sample_num
```sql
SELECT c.customer_name
FROM Customers c
LEFT JOIN Customer_Orders co ON c.customer_id = co.customer_id
WHERE co.order_id IS NULL;
```
-------------------------6140 sample_num
```sql
SELECT c.customer_name
FROM Customers c
LEFT JOIN Customer_Orders co ON c.customer_id = co.customer_id
WHERE co.order_id IS NULL;
```
-------------------------6141 sample_num
```sql
SELECT c.customer_name 
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
JOIN Order_Items oi ON co.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
WHERE p.product_details IN ('Latte', 'Americano')
GROUP BY c.customer_name
HAVING COUNT(DISTINCT p.product_details) = 2;
```
-------------------------6142 sample_num
```sql
SELECT c.customer_name 
FROM Customers c
JOIN Customer_Orders co ON c.customer_id = co.customer_id
JOIN Order_Items oi ON co.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
WHERE p.product_details IN ('Latte', 'Americano')
GROUP BY c.customer_name
HAVING COUNT(DISTINCT p.product_details) = 2;
```
-------------------------6143 sample_num
```sql
SELECT COUNT(*) FROM artist;
```
-------------------------6144 sample_num
```sql
SELECT COUNT(*) FROM artist;
```
-------------------------6145 sample_num
```sql
SELECT Age FROM artist;
```
-------------------------6146 sample_num
```sql
SELECT Age FROM artist;
```
-------------------------6147 sample_num
```sql
SELECT AVG(Age) FROM artist;
```
-------------------------6148 sample_num
```sql
SELECT AVG(Age) FROM artist;
```
-------------------------6149 sample_num
```sql
SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall';
```
-------------------------6150 sample_num
```sql
SELECT Famous_Title FROM artist WHERE Artist = 'Triumfall';
```
-------------------------6151 sample_num
```sql
SELECT DISTINCT Famous_Release_date FROM artist;
```
-------------------------6152 sample_num
```sql
SELECT DISTINCT Famous_Release_date FROM artist;
```
-------------------------6153 sample_num
```sql
SELECT Date_of_ceremony, Result FROM music_festival;
```
-------------------------6154 sample_num
```sql
SELECT Date_of_ceremony, Result FROM music_festival;
```
-------------------------6155 sample_num
```sql
SELECT Category FROM music_festival WHERE Result = 'Awarded';
```
-------------------------6156 sample_num
```sql
SELECT Category 
FROM music_festival 
WHERE Result = 'Awarded';
```
-------------------------6157 sample_num
```sql
SELECT MAX(Weeks_on_Top) AS Max_Weeks, MIN(Weeks_on_Top) AS Min_Weeks FROM volume;
```
-------------------------6158 sample_num
```sql
SELECT MAX(Weeks_on_Top) AS Max_Weeks, MIN(Weeks_on_Top) AS Min_Weeks FROM volume;
```
-------------------------6159 sample_num
```sql
SELECT v.Song 
FROM volume v 
WHERE v.Weeks_on_Top > 1;
```
-------------------------6160 sample_num
```sql
SELECT v.Song 
FROM volume v 
WHERE v.Weeks_on_Top > 1;
```
-------------------------6161 sample_num
```sql
SELECT v.Song 
FROM volume v
ORDER BY v.Song ASC;
```
-------------------------6162 sample_num
```sql
SELECT Song FROM volume ORDER BY Song ASC;
```
-------------------------6163 sample_num
```sql
SELECT COUNT(DISTINCT Artist_ID) FROM volume;
```
-------------------------6164 sample_num
```sql
SELECT COUNT(DISTINCT Artist_ID) 
FROM volume;
```
-------------------------6165 sample_num
```sql
SELECT mf.Date_of_ceremony 
FROM music_festival mf
JOIN volume v ON mf.Volume = v.Volume_ID 
WHERE v.Weeks_on_Top > 2;
```
-------------------------6166 sample_num
```sql
SELECT mf.Date_of_ceremony 
FROM music_festival mf
JOIN volume v ON mf.Volume = v.Volume_ID 
WHERE v.Weeks_on_Top > 2;
```
-------------------------6167 sample_num
```sql
SELECT v.Song 
FROM volume v 
JOIN music_festival mf ON v.Volume_ID = mf.Volume 
WHERE mf.Result = 'nominated';
```
-------------------------6168 sample_num
```sql
SELECT v.Song 
FROM volume v 
JOIN music_festival mf ON v.Volume_ID = mf.Volume 
WHERE mf.Result = 'Nominated';
```
-------------------------6169 sample_num
```sql
SELECT Issue_Date 
FROM volume 
WHERE Artist_ID = (SELECT Artist_ID FROM artist WHERE Artist = "Gorgoroth");
```
-------------------------6170 sample_num
```sql
SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'Gorgoroth'
```
-------------------------6171 sample_num
```sql
SELECT v.Song 
FROM volume v 
JOIN artist a ON v.Artist_ID = a.Artist_ID 
WHERE a.Age >= 32;
```
-------------------------6172 sample_num
```sql
SELECT v.Song 
FROM volume v 
JOIN artist a ON v.Artist_ID = a.Artist_ID 
WHERE a.Age >= 32;
```
-------------------------6173 sample_num
```sql
SELECT AVG(T2.Weeks_on_Top) 
FROM artist AS T1 
JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID 
WHERE T1.Age <= 25;
```
-------------------------6174 sample_num
```sql
SELECT AVG(T2.Weeks_on_Top) 
FROM artist AS T1 
JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID 
WHERE T1.Age <= 25;
```
-------------------------6175 sample_num
```sql
SELECT T1.Famous_Title 
FROM artist AS T1 
JOIN volume AS T2 
ON T1.Artist_ID = T2.Artist_ID 
WHERE T2.Weeks_on_Top > 2;
```
-------------------------6176 sample_num
```sql
SELECT a.Famous_Title
FROM artist a
JOIN volume v ON a.Artist_ID = v.Artist_ID
WHERE v.Weeks_on_Top > 2;
```
-------------------------6177 sample_num
```sql
SELECT Age, Famous_Title 
FROM artist 
ORDER BY Age DESC;
```
-------------------------6178 sample_num
```sql
SELECT Famous_Title, Age 
FROM artist 
ORDER BY Age DESC;
```
-------------------------6179 sample_num
```sql
SELECT Famous_Release_date 
FROM artist 
WHERE Age = (SELECT MAX(Age) FROM artist);
```
-------------------------6180 sample_num
```sql
SELECT T1.Famous_Release_date FROM artist AS T1 WHERE T1.Age = (SELECT MAX(Age) FROM artist)
```
-------------------------6181 sample_num
```sql
SELECT Category, COUNT(*) 
FROM music_festival 
GROUP BY Category;
```
-------------------------6182 sample_num
```sql
SELECT Category, COUNT(*) 
FROM music_festival 
GROUP BY Category;
```
-------------------------6183 sample_num
```sql
SELECT Result, COUNT(*) AS Count 
FROM music_festival 
GROUP BY Result 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------6184 sample_num
```sql
SELECT Result, COUNT(*) AS Frequency 
FROM music_festival 
GROUP BY Result 
ORDER BY Frequency DESC 
LIMIT 1;
```
-------------------------6185 sample_num
```sql
SELECT Category, COUNT(*) 
FROM music_festival 
GROUP BY Category 
HAVING COUNT(*) > 1;
```
-------------------------6186 sample_num
```sql
SELECT Category 
FROM music_festival 
GROUP BY Category 
HAVING COUNT(ID) > 1;
```
-------------------------6187 sample_num
```sql
SELECT v.Song 
FROM volume v 
WHERE v.Weeks_on_Top = (SELECT MAX(Weeks_on_Top) FROM volume);
```
-------------------------6188 sample_num
```sql
SELECT v.Song 
FROM volume v 
WHERE v.Weeks_on_Top = (SELECT MAX(Weeks_on_Top) FROM volume);
```
-------------------------6189 sample_num
```sql
SELECT Famous_Title 
FROM artist 
WHERE Artist_ID NOT IN (SELECT Artist_ID FROM volume)
```
-------------------------6190 sample_num
```sql
SELECT Famous_Title 
FROM artist 
WHERE Artist_ID NOT IN (SELECT Artist_ID FROM volume)
```
-------------------------6191 sample_num
```sql
SELECT T1.Famous_Title 
FROM artist AS T1 
JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID 
WHERE T2.Weeks_on_Top > 2 
INTERSECT 
SELECT T1.Famous_Title 
FROM artist AS T1 
JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID 
WHERE T2.Weeks_on_Top < 2;
```
-------------------------6192 sample_num
```sql
SELECT T1.Famous_Title 
FROM artist AS T1 
JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID 
WHERE T2.Weeks_on_Top > 2 
INTERSECT 
SELECT T1.Famous_Title 
FROM artist AS T1 
JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID 
WHERE T2.Weeks_on_Top < 2;
```
-------------------------6193 sample_num
```sql
SELECT Date_of_ceremony 
FROM music_festival 
WHERE Category = 'Best Song' AND Result = 'Awarded';
```
-------------------------6194 sample_num
```sql
SELECT Date_of_ceremony 
FROM music_festival 
WHERE Category = 'Best Song' AND Result = 'Awarded';
```
-------------------------6195 sample_num
```sql
SELECT Issue_Date FROM volume WHERE Weeks_on_Top = (SELECT MIN(Weeks_on_Top) FROM volume);
```
-------------------------6196 sample_num
```sql
SELECT T1.Issue_Date FROM volume AS T1 WHERE T1.Weeks_on_Top = (SELECT MIN(Weeks_on_Top) FROM volume)
```
-------------------------6197 sample_num
```sql
SELECT COUNT(DISTINCT Artist_ID) 
FROM volume;
```
-------------------------6198 sample_num
```sql
SELECT COUNT(DISTINCT Artist_ID) FROM volume;
```
-------------------------6199 sample_num
```sql
SELECT Music_Festival, COUNT(*) AS Number_of_Music_Festivals 
FROM music_festival 
GROUP BY Music_Festival 
ORDER BY Number_of_Music_Festivals;
```
-------------------------6200 sample_num
```sql
SELECT Result, COUNT(*) 
FROM music_festival 
GROUP BY Result 
ORDER BY COUNT(*) DESC;
```
-------------------------6201 sample_num
```sql
SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Age <= 23;
```
-------------------------6202 sample_num
```sql
SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Age <= 23;
```
-------------------------6203 sample_num
```sql
SELECT COUNT(*) FROM roller_coaster;
```
-------------------------6204 sample_num
```sql
SELECT Name 
FROM roller_coaster 
ORDER BY Length ASC;
```
-------------------------6205 sample_num
```sql
SELECT Length, Height FROM roller_coaster;
```
-------------------------6206 sample_num
```sql
SELECT Name 
FROM country 
WHERE Languages != 'German';
```
-------------------------6207 sample_num
```sql
SELECT Status 
FROM roller_coaster 
WHERE Length > 3300 OR Height > 100;
```
-------------------------6208 sample_num
```sql
SELECT T1.Speed 
FROM roller_coaster AS T1 
JOIN country AS T2 ON T1.Country_ID = T2.Country_ID 
WHERE T1.Length = (SELECT MAX(Length) FROM roller_coaster);
```
-------------------------6209 sample_num
```sql
SELECT AVG(Speed) FROM roller_coaster;
```
-------------------------6210 sample_num
```sql
SELECT Status, COUNT(*) 
FROM roller_coaster 
GROUP BY Status;
```
-------------------------6211 sample_num
```sql
SELECT Status, COUNT(*) AS Count 
FROM roller_coaster 
GROUP BY Status 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------6212 sample_num
```sql
SELECT Status 
FROM roller_coaster 
GROUP BY Status 
HAVING COUNT(*) > 2;
```
-------------------------6213 sample_num
```sql
SELECT Park FROM roller_coaster WHERE Speed = (SELECT MAX(Speed) FROM roller_coaster);
```
-------------------------6214 sample_num
```sql
SELECT roller_coaster.Name AS Roller_Coaster_Name, country.Name AS Country_Name
FROM roller_coaster
JOIN country ON roller_coaster.Country_ID = country.Country_ID;
```
-------------------------6215 sample_num
```sql
SELECT c.Name 
FROM country c
JOIN roller_coaster rc ON c.Country_ID = rc.Country_ID
GROUP BY c.Name
HAVING COUNT(rc.Roller_Coaster_ID) > 1;
```
-------------------------6216 sample_num
```sql
SELECT c.Name AS Country_Name, c.Population 
FROM country c
JOIN roller_coaster r 
ON c.Country_ID = r.Country_ID 
WHERE r.Height = (SELECT MAX(Height) FROM roller_coaster);
```
-------------------------6217 sample_num
```sql
SELECT c.Name, AVG(rc.Speed) 
FROM roller_coaster rc 
JOIN country c ON rc.Country_ID = c.Country_ID 
GROUP BY c.Name;
```
-------------------------6218 sample_num
```sql
SELECT COUNT(*) 
FROM country 
WHERE Country_ID NOT IN (
    SELECT Country_ID 
    FROM roller_coaster 
    WHERE Length > 3000
);
```
-------------------------6219 sample_num
```sql
SELECT c.Name, c.Area, c.Population 
FROM country AS c
JOIN roller_coaster AS r ON c.Country_ID = r.Country_ID
WHERE r.Speed > (
    SELECT MIN(Speed) 
    FROM roller_coaster 
    WHERE Speed > 100
)
GROUP BY c.Country_ID
HAVING COUNT(*) >= 2;
```
-------------------------6220 sample_num
```sql
SELECT COUNT(DISTINCT Rank) FROM captain;
```
-------------------------6221 sample_num
```sql
SELECT COUNT(DISTINCT Rank) FROM captain;
```
-------------------------6222 sample_num
```sql
SELECT Rank, COUNT(*) 
FROM captain 
GROUP BY Rank;
```
-------------------------6223 sample_num
```sql
SELECT Rank, COUNT(*) 
FROM captain 
GROUP BY Rank;
```
-------------------------6224 sample_num
```sql
SELECT Rank, COUNT(*) 
FROM captain 
WHERE age < 50 
GROUP BY Rank;
```
-------------------------6225 sample_num
```sql
SELECT Rank, COUNT(*) 
FROM captain 
WHERE age < 50 
GROUP BY Rank;
```
-------------------------6226 sample_num
```sql
SELECT Name 
FROM captain 
ORDER BY age DESC;
```
-------------------------6227 sample_num
```sql
SELECT Name 
FROM captain 
ORDER BY age DESC;
```
-------------------------6228 sample_num
```sql
SELECT Name, Class, Rank FROM captain;
```
-------------------------6229 sample_num
```sql
SELECT Name, Class, Rank FROM captain;
```
-------------------------6230 sample_num
```sql
SELECT Rank, COUNT(*) as count 
FROM captain 
GROUP BY Rank 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------6231 sample_num
```sql
SELECT Rank 
FROM captain 
GROUP BY Rank 
ORDER BY COUNT(Captain_ID) 
LIMIT 1
```
```
-------------------------6232 sample_num
```sql
SELECT Class 
FROM captain 
GROUP BY Class 
HAVING COUNT(Captain_ID) > 2;
```
-------------------------6233 sample_num
```sql
SELECT Class 
FROM captain 
GROUP BY Class 
HAVING COUNT(Captain_ID) > 2
```
-------------------------6234 sample_num
```sql
SELECT Name 
FROM captain 
WHERE Rank IN ('Midshipman', 'Lieutenant');
```
-------------------------6235 sample_num
```sql
SELECT Name 
FROM captain 
WHERE Rank IN ('Midshipman', 'Lieutenant');
```
-------------------------6236 sample_num
```sql
SELECT Class, AVG(age) AS Average_Age, MIN(age) AS Minimum_Age 
FROM captain 
GROUP BY Class;
```
-------------------------6237 sample_num
```sql
SELECT Class, AVG(age) as Average_Age, MIN(age) as Minimum_Age 
FROM captain 
GROUP BY Class;
```
-------------------------6238 sample_num
```sql
SELECT Rank 
FROM captain 
WHERE Class IN ('Cutter', 'Armed schooner') 
GROUP BY Rank 
HAVING COUNT(DISTINCT Class) = 2;
```
-------------------------6239 sample_num
```sql
SELECT DISTINCT c.Rank 
FROM captain c
JOIN Ship s ON c.Ship_ID = s.Ship_ID 
WHERE s.Class = 'Cutter' AND s.Type = 'Armed schooner';
```
-------------------------6240 sample_num
```sql
SELECT Rank 
FROM captain 
WHERE Class = 'Third-rate ship of the line' 
AND NOT EXISTS (
    SELECT * 
    FROM captain c2 
    WHERE c2.Ship_ID = captain.Ship_ID 
    AND c2.Class = 'Third-rate ship of the line'
)
GROUP BY Rank 
HAVING COUNT(*) = 0;
``` 
However, this query won't work as expected in most SQL systems because you can't use `NOT EXISTS` in this context to check for the non-existence of records with the same `Ship_ID`. A better way to write this would be:
```sql
SELECT DISTINCT Rank 
FROM captain 
WHERE Class != 'Third-rate ship of the line' 
AND NOT EXISTS (
    SELECT * 
    FROM captain c2 
    WHERE c2.Rank = captain.Rank 
    AND c2.Class = 'Third-rate ship of the line'
);
```
But still, the above query has a logical flaw. The correct query should be:
```sql
SELECT Rank 
FROM captain
WHERE Rank NOT IN (
    SELECT Rank 
    FROM captain 
    WHERE Class = 'Third-rate ship of the line'
);
```
This last version is the correct one to find ranks that do not appear among captains of Third-rate ships of the line.
-------------------------6241 sample_num
```sql
SELECT Rank 
FROM captain 
WHERE Class != 'Third-rate ship of the line' 
GROUP BY Rank 
HAVING COUNT(*) = (SELECT COUNT(*) FROM captain)
```
This answer isn't completely accurate as it doesn't exclude captains without a ship. Also, it would usually be necessary to join the captain and ship tables to get the correct information. A more accurate query would be something like this:

```sql
SELECT c.Rank 
FROM captain c
LEFT JOIN Ship s ON c.Ship_ID = s.Ship_ID 
WHERE s.Class != 'Third-rate ship of the line' OR s.Ship_ID IS NULL
GROUP BY c.Rank
HAVING COUNT(*) = (SELECT COUNT(*) FROM captain c2 LEFT JOIN Ship s2 ON c2.Ship_ID = s2.Ship_ID WHERE s2.Class != 'Third-rate ship of the line' OR s2.Ship_ID IS NULL);
```
But the original question seems to look for a simpler answer.
```sql
SELECT DISTINCT Rank 
FROM captain 
WHERE Class <> 'Third-rate ship of the line'
```
-------------------------6242 sample_num
```sql
SELECT Name 
FROM captain 
ORDER BY age 
LIMIT 1;
```
-------------------------6243 sample_num
```sql
SELECT Name 
FROM captain 
ORDER BY age 
LIMIT 1;
```
-------------------------6244 sample_num
```sql
SELECT COUNT(*) FROM Ship;
```
-------------------------6245 sample_num
```sql
SELECT COUNT(*) FROM Ship;
```
-------------------------6246 sample_num
```sql
SELECT T1.Name, T1.Type, T1.Flag 
FROM Ship AS T1 
WHERE T1.Built_Year = (SELECT MAX(Built_Year) FROM Ship);
```
-------------------------6247 sample_num
```sql
SELECT T1.Name, T1.Type, T1.Flag 
FROM Ship AS T1 
WHERE T1.Built_Year = (SELECT MAX(Built_Year) FROM Ship);
```
-------------------------6248 sample_num
```sql
SELECT Flag, COUNT(*) AS NumberOfShips
FROM Ship
GROUP BY Flag;
```
-------------------------6249 sample_num
```sql
SELECT Flag, COUNT(*) AS NumberOfShips
FROM Ship
GROUP BY Flag;
```
-------------------------6250 sample_num
```sql
SELECT Flag, COUNT(*) AS Count 
FROM Ship 
GROUP BY Flag 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------6251 sample_num
```sql
SELECT Flag 
FROM Ship 
GROUP BY Flag 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6252 sample_num
```sql
SELECT Ship.Name 
FROM Ship 
JOIN captain ON Ship.Ship_ID = captain.Ship_ID 
ORDER BY Ship.Built_Year, captain.Class;
``` 

However, for the correct query to only list ship names without considering if there is a captain for that ship:
```sql
SELECT Name 
FROM Ship 
ORDER BY Built_Year, Class;
```
-------------------------6253 sample_num
```sql
SELECT Ship.Name 
FROM Ship 
ORDER BY Ship.Built_Year, Ship.Class;
```
-------------------------6254 sample_num
```sql
SELECT T1.Type 
FROM Ship AS T1 
JOIN (
    SELECT Ship_ID 
    FROM Ship 
    WHERE Flag = 'Panama'
) AS T2 ON T1.Ship_ID = T2.Ship_ID 
INTERSECT 
SELECT T1.Type 
FROM Ship AS T1 
JOIN (
    SELECT Ship_ID 
    FROM Ship 
    WHERE Flag = 'Malta'
) AS T3 ON T1.Ship_ID = T3.Ship_ID;
```
-------------------------6255 sample_num
```sql
SELECT T1.Type 
FROM Ship AS T1 
JOIN (
    SELECT Ship_ID 
    FROM captain 
    WHERE Flag = 'Panama'
) AS T2 ON T1.Ship_ID = T2.Ship_ID 
INTERSECT 
SELECT T1.Type 
FROM Ship AS T1 
JOIN (
    SELECT Ship_ID 
    FROM captain 
    WHERE Flag = 'Malta'
) AS T3 ON T1.Ship_ID = T3.Ship_ID;
```
-------------------------6256 sample_num
```sql
SELECT Built_Year, COUNT(*) AS Number_of_Ships
FROM Ship
GROUP BY Built_Year
ORDER BY Number_of_Ships DESC
LIMIT 1;
```
-------------------------6257 sample_num
```sql
SELECT Built_Year, COUNT(*) AS Count 
FROM Ship 
GROUP BY Built_Year 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------6258 sample_num
```sql
SELECT s.Name 
FROM Ship s
JOIN captain c ON s.Ship_ID = c.Ship_ID
GROUP BY s.Name
HAVING COUNT(c.Captain_ID) > 1;
```
-------------------------6259 sample_num
```sql
SELECT s.Name
FROM Ship s
JOIN captain c ON s.Ship_ID = c.Ship_ID
GROUP BY s.Name
HAVING COUNT(c.Captain_ID) > 1;
```
-------------------------6260 sample_num
```sql
SELECT Name, Class FROM Ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM captain)
```
-------------------------6261 sample_num
```sql
SELECT Ship.Name, Ship.Class 
FROM Ship 
LEFT JOIN captain 
ON Ship.Ship_ID = captain.Ship_ID 
WHERE captain.Ship_ID IS NULL;
```
-------------------------6262 sample_num
```sql
SELECT Ship.Name 
FROM Ship 
JOIN captain 
ON Ship.Ship_ID = captain.Ship_ID 
WHERE captain.age = (
    SELECT MIN(age) 
    FROM captain
);
```
-------------------------6263 sample_num
```sql
SELECT Ship.Name 
FROM Ship 
JOIN captain 
ON Ship.Ship_ID = captain.Ship_ID 
WHERE captain.age = (
    SELECT MIN(age) 
    FROM captain
);
```
-------------------------6264 sample_num
```sql
SELECT s.Name, s.Flag 
FROM Ship s
LEFT JOIN captain c ON s.Ship_ID = c.Ship_ID AND c.Rank = 'Midshipman'
WHERE c.Ship_ID IS NULL;
```
-------------------------6265 sample_num
```sql
SELECT s.Name, s.Flag 
FROM Ship s
LEFT JOIN captain c ON s.Ship_ID = c.Ship_ID 
WHERE c.Rank <> 'Midshipman' OR c.Rank IS NULL;
```
-------------------------6266 sample_num
```sql
SELECT s.Name 
FROM Ship s 
JOIN captain c1 ON s.Ship_ID = c1.Ship_ID 
JOIN captain c2 ON s.Ship_ID = c2.Ship_ID 
WHERE c1.Rank = 'Midshipman' AND c2.Rank = 'Lieutenant'
GROUP BY s.Name
HAVING COUNT(*) > 1;
```
-------------------------6267 sample_num
```sql
SELECT s.Name 
FROM Ship s 
JOIN captain c1 ON s.Ship_ID = c1.Ship_ID 
JOIN captain c2 ON s.Ship_ID = c2.Ship_ID 
WHERE c1.Rank = 'Midshipman' AND c2.Rank = 'Lieutenant'
GROUP BY s.Name
HAVING COUNT(*) > 1;
```
-------------------------6268 sample_num
```sql
SELECT Host_City FROM (
  SELECT Host_City, Year,
         ROW_NUMBER() OVER (ORDER BY Year DESC) as rn
  FROM hosting_city
) tmp
WHERE rn = 1;
```
However, to directly get the ID of the city, you would have to join the `city` table with the subquery result, like this:
```sql
SELECT c.City_ID
FROM city c
JOIN (
  SELECT Host_City FROM (
    SELECT Host_City, Year,
           ROW_NUMBER() OVER (ORDER BY Year DESC) as rn
    FROM hosting_city
  ) tmp
  WHERE rn = 1
) hc
ON c.City_ID = hc.Host_City;
```
-------------------------6269 sample_num
```sql
SELECT T1.City_ID FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City WHERE T2.Year = (SELECT MAX(Year) FROM hosting_city)
```
-------------------------6270 sample_num
```sql
SELECT T2.Match_ID FROM match AS T2 JOIN hosting_city AS T1 ON T2.Match_ID = T1.Match_ID WHERE T2.Competition = "1994 FIFA World Cup qualification"
```
-------------------------6271 sample_num
```sql
SELECT Match_ID FROM match WHERE Competition = '1994 FIFA World Cup qualification';
```
-------------------------6272 sample_num
```sql
SELECT DISTINCT c.City
FROM city AS c
JOIN hosting_city AS hc ON c.City_ID = hc.Host_City
WHERE hc.Year > 2010;
```
-------------------------6273 sample_num
```sql
SELECT DISTINCT Host_City FROM hosting_city WHERE Year > 2010;
```
-------------------------6274 sample_num
```sql
SELECT T1.City FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City GROUP BY T2.Host_City ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------6275 sample_num
```sql
SELECT Host_City, COUNT(Match_ID) as Total_Events 
FROM hosting_city 
GROUP BY Host_City 
ORDER BY Total_Events DESC 
LIMIT 1;
```
-------------------------6276 sample_num
```sql
SELECT T2.Venue FROM hosting_city AS T1 JOIN match AS T2 ON T1.Match_ID = T2.Match_ID JOIN city AS T3 ON T3.City_ID = T1.Host_City WHERE T2.Competition = '1994 FIFA World Cup qualification' AND T3.City = 'Nanjing ( Jiangsu )'
```
-------------------------6277 sample_num
```sql
SELECT T2.Venue FROM hosting_city AS T1 JOIN match AS T2 ON T1.Match_ID = T2.Match_ID JOIN city AS T3 ON T3.City_ID = T1.Host_City WHERE T2.Competition = '1994 FIFA World Cup qualification' AND T3.City = 'Nanjing ( Jiangsu )'
```
-------------------------6278 sample_num
```sql
SELECT t1.Jan 
FROM temperature AS t1 
JOIN city AS t2 
ON t1.City_ID = t2.City_ID 
WHERE t2.City = 'Shanghai';
```
-------------------------6279 sample_num
```sql
SELECT t3.Jan 
FROM city AS t1 
JOIN temperature AS t3 ON t1.City_ID = t3.City_ID 
WHERE t1.City = 'Shanghai'
```
-------------------------6280 sample_num
```sql
SELECT Year FROM hosting_city WHERE Host_City IN (SELECT City_ID FROM city WHERE City = 'Taizhou ( Zhejiang )');
```
-------------------------6281 sample_num
```sql
SELECT Year FROM hosting_city WHERE Host_City = (SELECT City_ID FROM city WHERE City = 'Taizhou ( Zhejiang )');
```
-------------------------6282 sample_num
```sql
SELECT City FROM city ORDER BY Regional_Population DESC LIMIT 3;
```
-------------------------6283 sample_num
```sql
SELECT City, Regional_Population FROM city ORDER BY Regional_Population DESC LIMIT 3;
```
-------------------------6284 sample_num
```sql
SELECT City, GDP 
FROM city 
ORDER BY GDP 
LIMIT 1;
```
-------------------------6285 sample_num
```sql
SELECT City, GDP 
FROM city 
ORDER BY GDP 
LIMIT 1;
```
-------------------------6286 sample_num
```sql
SELECT T1.City FROM city AS T1 JOIN temperature AS T2 ON T1.City_ID = T2.City_ID ORDER BY T2.Feb DESC LIMIT 1;
```
-------------------------6287 sample_num
```sql
SELECT T1.City 
FROM city AS T1 
JOIN temperature AS T2 
ON T1.City_ID = T2.City_ID 
ORDER BY T2.Feb DESC 
LIMIT 1;
```
-------------------------6288 sample_num
```sql
SELECT DISTINCT city.City 
FROM city 
JOIN temperature ON city.City_ID = temperature.City_ID 
WHERE temperature.Mar < temperature.Jul OR temperature.Mar > temperature.Oct;
```
-------------------------6289 sample_num
```sql
SELECT T1.City 
FROM city AS T1 
JOIN temperature AS T2 
ON T1.City_ID = T2.City_ID 
WHERE T2.Mar < T2.Jul OR T2.Mar > T2.Oct;
```
-------------------------6290 sample_num
```sql
SELECT DISTINCT c.City 
FROM city c
JOIN temperature t ON c.City_ID = t.City_ID 
JOIN hosting_city hc ON c.City_ID = hc.Host_City
WHERE t.Mar < t.Jul;
```
-------------------------6291 sample_num
```sql
SELECT DISTINCT c.City FROM city c
JOIN temperature t ON c.City_ID = t.City_ID
JOIN hosting_city hc ON c.City_ID = hc.Host_City
WHERE t.Mar < t.Jul
```
```
-------------------------6292 sample_num
```sql
SELECT city.City 
FROM city 
JOIN temperature ON city.City_ID = temperature.City_ID 
WHERE temperature.Mar < temperature.Dec 
AND city.City_ID NOT IN (SELECT hosting_city.Host_City FROM hosting_city);
```
-------------------------6293 sample_num
```sql
SELECT C.City 
FROM city AS C 
JOIN temperature AS T ON C.City_ID = T.City_ID 
WHERE T.Mar < T.Dec AND C.City_ID NOT IN (SELECT HC.Host_City FROM hosting_city AS HC)
```
-------------------------6294 sample_num
```sql
SELECT DISTINCT c.City 
FROM city c
JOIN temperature t ON c.City_ID = t.City_ID
WHERE t.Feb > t.Jun
OR EXISTS (SELECT 1 FROM hosting_city hc WHERE hc.Host_City = c.City)
```
```
-------------------------6295 sample_num
```sql
SELECT DISTINCT c.City FROM city c
JOIN temperature t ON c.City_ID = t.City_ID
WHERE t.Feb > t.Jun OR EXISTS (
    SELECT 1 FROM hosting_city hc WHERE hc.Host_City = c.City
)
```
-------------------------6296 sample_num
```sql
SELECT City FROM city WHERE Regional_Population > 10000000;
```
-------------------------6297 sample_num
```sql
SELECT City FROM city WHERE Regional_Population > 10000000;
```
-------------------------6298 sample_num
```sql
SELECT City FROM city WHERE Regional_Population > 8000000 OR Regional_Population < 5000000;
```
-------------------------6299 sample_num
```sql
SELECT City FROM city WHERE Regional_Population > 8000000 OR Regional_Population < 5000000;
```
-------------------------6300 sample_num
```sql
SELECT Competition, COUNT(*) 
FROM match 
GROUP BY Competition;
```
-------------------------6301 sample_num
```sql
SELECT Competition, COUNT(*) 
FROM match 
GROUP BY Competition;
```
-------------------------6302 sample_num
```sql
SELECT T2.Venue 
FROM match AS T2 
ORDER BY T2.Date DESC;
``` 

However, to ensure the correct ordering and completeness of information, a more complete version would be:
```sql
SELECT T2.Venue 
FROM hosting_city AS T1 
JOIN match AS T2 ON T1.Match_ID = T2.Match_ID 
ORDER BY T2.Date DESC;
``` 
But the first snippet will work if there is no need for joining with other tables.
-------------------------6303 sample_num
```sql
SELECT Venue FROM match ORDER BY Date DESC;
```
-------------------------6304 sample_num
```sql
SELECT GDP FROM city WHERE Regional_Population = (SELECT MAX(Regional_Population) FROM city);
```
-------------------------6305 sample_num
```sql
SELECT GDP FROM city WHERE Regional_Population = (SELECT MAX(Regional_Population) FROM city);
```
-------------------------6306 sample_num
```sql
SELECT T1.GDP, T1.Regional_Population 
FROM city AS T1 
JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City 
GROUP BY T2.Host_City 
HAVING COUNT(*) > 1;
```
-------------------------6307 sample_num
```sql
SELECT T1.City, T1.GDP, T1.Regional_Population
FROM city AS T1
JOIN (
    SELECT Host_City, COUNT(*) AS times
    FROM hosting_city
    GROUP BY Host_City
    HAVING times > 1
) AS T2 ON T1.City_ID = T2.Host_City;
```
-------------------------6308 sample_num
```sql
SELECT individual_first_name, individual_middle_name, individual_last_name 
FROM Individuals 
ORDER BY individual_last_name ASC;
```
-------------------------6309 sample_num
```sql
SELECT individual_first_name, individual_middle_name, individual_last_name 
FROM Individuals 
ORDER BY individual_last_name;
```
-------------------------6310 sample_num
```sql
SELECT DISTINCT form_type_code FROM Forms;
```
-------------------------6311 sample_num
```sql
SELECT DISTINCT form_type_code FROM Forms;
```
-------------------------6312 sample_num
```sql
SELECT F.form_name
FROM Forms F
JOIN Party_Forms PF ON F.form_id = PF.form_id
GROUP BY F.form_name
ORDER BY COUNT(PF.party_id) DESC
LIMIT 1;
```
-------------------------6313 sample_num
```sql
SELECT Forms.form_name, COUNT(Party_Forms.form_id) as form_count 
FROM Party_Forms 
JOIN Forms ON Party_Forms.form_id = Forms.form_id 
GROUP BY Party_Forms.form_id 
ORDER BY form_count DESC 
LIMIT 1;
```
-------------------------6314 sample_num
```sql
SELECT payment_method_code, party_phone 
FROM Parties 
WHERE party_email = 'enrico09@example.com';
```
-------------------------6315 sample_num
```sql
SELECT payment_method_code, party_phone 
FROM Parties 
WHERE party_email = 'enrico09@example.com';
```
-------------------------6316 sample_num
```sql
SELECT P.party_email 
FROM (
    SELECT party_id, COUNT(*) AS cnt
    FROM Party_Forms
    GROUP BY party_id
    ORDER BY cnt DESC
    LIMIT 1
) PF 
JOIN Parties P ON P.party_id = PF.party_id;
```
-------------------------6317 sample_num
```sql
SELECT T1.party_email 
FROM Parties AS T1 
JOIN Party_Forms AS T2 ON T1.party_id = T2.party_id 
GROUP BY T1.party_email 
ORDER BY COUNT(T2.form_id) DESC 
LIMIT 1;
```
-------------------------6318 sample_num
```sql
SELECT organization_name 
FROM Organizations 
ORDER BY date_formed;
```
-------------------------6319 sample_num
```sql
SELECT organization_name 
FROM Organizations 
ORDER BY date_formed ASC;
```
-------------------------6320 sample_num
```sql
SELECT organization_name 
FROM Organizations 
ORDER BY date_formed DESC 
LIMIT 1;
```
-------------------------6321 sample_num
```sql
SELECT organization_name 
FROM Organizations 
WHERE date_formed = (SELECT MAX(date_formed) FROM Organizations);
```
-------------------------6322 sample_num
```sql
SELECT I.individual_last_name 
FROM Individuals I
JOIN Organization_Contact_Individuals OCI ON I.individual_id = OCI.individual_id
WHERE OCI.organization_id = (
    SELECT O.organization_id 
    FROM Organizations O 
    WHERE O.organization_name = 'Labour Party'
)
AND OCI.date_contact_to IS NULL 
OR OCI.date_contact_to = (
    SELECT MAX(date_contact_to) 
    FROM Organization_Contact_Individuals 
    WHERE organization_id = (
        SELECT O.organization_id 
        FROM Organizations O 
        WHERE O.organization_name = 'Labour Party'
    )
)
```
```
-------------------------6323 sample_num
```sql
SELECT I.individual_last_name 
FROM Individuals I 
JOIN Organization_Contact_Individuals OCI ON I.individual_id = OCI.individual_id 
JOIN Organizations O ON OCI.organization_id = O.organization_id 
WHERE O.organization_name = 'Labour party' 
ORDER BY OCI.date_contact_to DESC 
LIMIT 1;
```
-------------------------6324 sample_num
```sql
SELECT I.individual_last_name 
FROM Individuals I
JOIN Organization_Contact_Individuals OCI ON I.individual_id = OCI.individual_id
JOIN Organizations O ON OCI.organization_id = O.organization_id
WHERE O.uk_vat_number = (SELECT MAX(uk_vat_number) FROM Organizations)
ORDER BY OCI.date_contact_from ASC
LIMIT 1;
```
-------------------------6325 sample_num
```sql
SELECT T1.individual_last_name 
FROM Individuals AS T1 
JOIN Organization_Contact_Individuals AS T2 ON T1.individual_id = T2.individual_id 
JOIN Organizations AS T3 ON T2.organization_id = T3.organization_id 
WHERE T3.uk_vat_number = (SELECT MAX(uk_vat_number) FROM Organizations)
ORDER BY T2.date_contact_from ASC 
LIMIT 1;
```
-------------------------6326 sample_num
```sql
SELECT COUNT(*) FROM Services;
```
-------------------------6327 sample_num
```sql
SELECT COUNT(*) FROM Services;
```
-------------------------6328 sample_num
```sql
SELECT s.service_name 
FROM Services s 
LEFT JOIN Party_Services ps ON s.service_id = ps.service_id 
WHERE ps.service_id IS NULL;
```
-------------------------6329 sample_num
```sql
SELECT s.service_name 
FROM Services s 
LEFT JOIN Party_Services ps ON s.service_id = ps.service_id 
WHERE ps.service_id IS NULL;
```
-------------------------6330 sample_num
```sql
SELECT DISTINCT town_city, state_province_county FROM Addresses;
```
-------------------------6331 sample_num
```sql
SELECT town_city, state_province_county FROM Addresses;
```
-------------------------6332 sample_num
```sql
SELECT COUNT(DISTINCT town_city) 
FROM Addresses 
WHERE state_province_county = 'Colorado';
```
-------------------------6333 sample_num
```sql
SELECT COUNT(DISTINCT town_city) 
FROM Addresses 
WHERE state_province_county = 'Colorado';
```
-------------------------6334 sample_num
```sql
SELECT payment_method_code 
FROM Parties 
GROUP BY payment_method_code 
HAVING COUNT(party_id) > 3;
```
-------------------------6335 sample_num
```sql
SELECT payment_method_code 
FROM Parties 
GROUP BY payment_method_code 
HAVING COUNT(party_id) > 3;
```
-------------------------6336 sample_num
```sql
SELECT organization_name FROM Organizations WHERE organization_name LIKE '%Party%';
```
-------------------------6337 sample_num
```sql
SELECT organization_name 
FROM Organizations 
WHERE organization_name LIKE '%Party%';
```
-------------------------6338 sample_num
```sql
SELECT COUNT(DISTINCT payment_method_code) FROM Parties;
```
-------------------------6339 sample_num
```sql
SELECT COUNT(DISTINCT payment_method_code) FROM Parties;
```
-------------------------6340 sample_num
```sql
SELECT T1.party_email 
FROM Parties AS T1 
JOIN Party_Services AS T2 ON T1.party_id = T2.customer_id 
GROUP BY T1.party_email 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6341 sample_num
```sql
SELECT T1.party_email 
FROM Parties AS T1 
JOIN Party_Services AS T2 ON T1.party_id = T2.customer_id 
GROUP BY T1.party_email 
ORDER BY COUNT(T2.service_id) DESC 
LIMIT 1;
```
-------------------------6342 sample_num
```sql
SELECT state_province_county 
FROM Addresses 
WHERE line_1_number_building = '6862 Kaitlyn Knolls';
```
-------------------------6343 sample_num
```sql
SELECT Addresses.state_province_county 
FROM Addresses 
WHERE Addresses.line_1_number_building = '6862 Kaitlyn Knolls';
```
-------------------------6344 sample_num
```sql
SELECT T1.organization_name 
FROM Organizations AS T1 
JOIN Organization_Contact_Individuals AS T2 
ON T1.organization_id = T2.organization_id 
GROUP BY T1.organization_name 
ORDER BY COUNT(T2.individual_id) DESC 
LIMIT 1;
```
-------------------------6345 sample_num
```sql
SELECT T1.organization_name 
FROM Organizations AS T1 
JOIN Organization_Contact_Individuals AS T2 
ON T1.organization_id = T2.organization_id 
GROUP BY T1.organization_name 
ORDER BY COUNT(T2.individual_id) DESC 
LIMIT 1;
```
-------------------------6346 sample_num
```sql
SELECT DISTINCT I.individual_last_name 
FROM Individuals I 
JOIN Organization_Contact_Individuals OCI 
ON I.individual_id = OCI.individual_id 
WHERE OCI.date_contact_to IS NULL OR OCI.date_contact_to = (
    SELECT MAX(date_contact_to) 
    FROM Organization_Contact_Individuals 
    WHERE individual_id = I.individual_id
);
```
-------------------------6347 sample_num
```sql
SELECT DISTINCT I.individual_last_name 
FROM Individuals I 
JOIN Organization_Contact_Individuals OCI 
ON I.individual_id = OCI.individual_id;
```
-------------------------6348 sample_num
```sql
SELECT COUNT(*) FROM driver;
```
-------------------------6349 sample_num
```sql
SELECT Name, Home_city, Age FROM driver;
```
-------------------------6350 sample_num
```sql
SELECT Party, COUNT(Driver_ID) 
FROM driver 
GROUP BY Party;
```
-------------------------6351 sample_num
```sql
SELECT Name 
FROM driver 
ORDER BY Age DESC;
```
-------------------------6352 sample_num
```sql
SELECT DISTINCT Home_city FROM driver;
```
-------------------------6353 sample_num
```sql
SELECT Home_city, COUNT(Driver_ID) as Num_Drivers 
FROM driver 
GROUP BY Home_city 
ORDER BY Num_Drivers DESC 
LIMIT 1;
```
-------------------------6354 sample_num
```sql
SELECT Party 
FROM driver 
WHERE Home_city = 'Hartford' AND Age > 40;
```
-------------------------6355 sample_num
```sql
SELECT Home_city 
FROM driver 
WHERE Age > 40 
GROUP BY Home_city 
HAVING COUNT(Driver_ID) >= 2;
```
-------------------------6356 sample_num
```sql
SELECT DISTINCT Home_city 
FROM driver 
WHERE Age <= 40;
``` 
However, to exclude the home cities of drivers older than 40, you actually want this:
```sql
SELECT DISTINCT Home_city 
FROM driver 
WHERE Home_city NOT IN (
    SELECT Home_city 
    FROM driver 
    WHERE Age > 40);
```
-------------------------6357 sample_num
```sql
SELECT Name 
FROM driver 
WHERE Driver_ID NOT IN (SELECT Driver_ID FROM school_bus)
```
-------------------------6358 sample_num
```sql
SELECT Type 
FROM school 
GROUP BY Type 
HAVING COUNT(School_ID) = 2;
```
-------------------------6359 sample_num
```sql
SELECT school.School, driver.Name 
FROM school_bus 
JOIN driver ON school_bus.Driver_ID = driver.Driver_ID 
JOIN school ON school_bus.School_ID = school.School_ID;
```
-------------------------6360 sample_num
```sql
SELECT MAX(Years_Working) AS Maximum, MIN(Years_Working) AS Minimum, AVG(Years_Working) AS Average 
FROM school_bus;
```
-------------------------6361 sample_num
```sql
SELECT School, Type 
FROM school 
WHERE School_ID NOT IN (SELECT School_ID FROM school_bus)
```
-------------------------6362 sample_num
```sql
SELECT s.Type, COUNT(sb.School_ID) as Num_Buses
FROM school s
JOIN school_bus sb ON s.School_ID = sb.School_ID
GROUP BY s.Type;
```
-------------------------6363 sample_num
```sql
SELECT COUNT(*) 
FROM driver 
WHERE Home_city = 'Hartford' OR Age < 40;
```
-------------------------6364 sample_num
```sql
SELECT Name 
FROM driver 
WHERE Home_city = 'Hartford' AND Age < 40;
```
-------------------------6365 sample_num
```sql
SELECT D.Name 
FROM driver D
JOIN school_bus SB ON D.Driver_ID = SB.Driver_ID 
WHERE SB.Years_Working = (SELECT MAX(Years_Working) FROM school_bus);
```
-------------------------6366 sample_num
```sql
SELECT COUNT(*) FROM flight WHERE Velocity > 200;
```
-------------------------6367 sample_num
```sql
SELECT f.Vehicle_Flight_number, f.Date, f.Pilot 
FROM flight f
ORDER BY f.Altitude;
```
-------------------------6368 sample_num
```sql
SELECT id, Country, City, name 
FROM airport 
ORDER BY name ASC;
```
-------------------------6369 sample_num
```sql
SELECT MAX(Group_Equity_Shareholding) FROM operate_company;
```
-------------------------6370 sample_num
```sql
SELECT Velocity FROM flight WHERE Pilot = 'Thompson';
```
-------------------------6371 sample_num
```sql
SELECT DISTINCT operate_company.name, operate_company.Type 
FROM operate_company 
JOIN flight ON operate_company.id = flight.company_id;
```
-------------------------6372 sample_num
```sql
SELECT name FROM airport WHERE Country != 'Iceland';
```
-------------------------6373 sample_num
```sql
SELECT DISTINCT oc.Type 
FROM operate_company oc 
JOIN flight f ON oc.id = f.company_id 
WHERE f.Velocity < 200;
```
-------------------------6374 sample_num
```sql
SELECT company_id, name 
FROM operate_company 
WHERE id IN (
    SELECT company_id 
    FROM flight 
    GROUP BY company_id 
    HAVING COUNT(*) > 1
);
```
-------------------------6375 sample_num
```sql
SELECT T1.id, T1.name, T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T1.id ORDER BY COUNT(T2.id) DESC LIMIT 1;
```
-------------------------6376 sample_num
```sql
SELECT DISTINCT T3.Pilot 
FROM airport AS T1 
JOIN flight AS T3 ON T1.id = T3.airport_id 
WHERE T1.Country = 'United States' 
OR T1.name = 'Billund Airport';
```
-------------------------6377 sample_num
```sql
SELECT Type, COUNT(*) AS count 
FROM operate_company 
GROUP BY Type 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------6378 sample_num
```sql
SELECT COUNT(*) 
FROM airport 
WHERE id NOT IN (
    SELECT airport_id 
    FROM flight 
    WHERE Pilot = 'Thompson'
);
```
-------------------------6379 sample_num
```sql
SELECT pilot 
FROM flight 
JOIN operate_company ON flight.company_id = operate_company.id 
WHERE operate_company.Type = 'Cargo' 
INTERSECT 
SELECT pilot 
FROM flight 
JOIN operate_company ON flight.company_id = operate_company.id 
WHERE operate_company.Type = 'Catering services'
```
-------------------------6380 sample_num
```sql
SELECT name FROM airport WHERE name LIKE '%international%';
```
-------------------------6381 sample_num
```sql
SELECT airport.id, airport.name, COUNT(DISTINCT flight.company_id) as Number_of_Companies 
FROM airport 
JOIN flight ON airport.id = flight.airport_id 
GROUP BY airport.id, airport.name;
```
-------------------------6382 sample_num
```sql
SELECT Country, COUNT(*) 
FROM airport 
GROUP BY Country;
```
-------------------------6383 sample_num
```sql
SELECT Country 
FROM airport 
GROUP BY Country 
HAVING COUNT(id) > 2;
```
-------------------------6384 sample_num
```sql
SELECT Pilot, COUNT(*) AS NumberOfFlights 
FROM flight 
GROUP BY Pilot 
ORDER BY NumberOfFlights DESC 
LIMIT 1;
```
-------------------------6385 sample_num
```sql
SELECT COUNT(*) FROM Accounts;
```
-------------------------6386 sample_num
```sql
SELECT COUNT(*) FROM Accounts;
```
-------------------------6387 sample_num
```sql
SELECT Account_ID, Account_Details FROM Accounts;
```
-------------------------6388 sample_num
```sql
SELECT Account_ID, Account_Details FROM Accounts;
```
-------------------------6389 sample_num
```sql
SELECT COUNT(*) FROM Statements;
```
-------------------------6390 sample_num
```sql
SELECT COUNT(*) FROM Statements;
```
-------------------------6391 sample_num
```sql
SELECT Statement_ID, Statement_Details FROM Statements;
```
-------------------------6392 sample_num
```sql
SELECT Statement_ID, Statement_Details FROM Statements;
```
-------------------------6393 sample_num
```sql
SELECT A.Statement_ID, S.Statement_Details, A.Account_Details 
FROM Accounts A 
JOIN Statements S ON A.Statement_ID = S.Statement_ID;
```
-------------------------6394 sample_num
```sql
SELECT Statements.Statement_ID, Statements.Statement_Details, Accounts.Account_Details 
FROM Statements 
JOIN Accounts 
ON Statements.Statement_ID = Accounts.Statement_ID;
```
-------------------------6395 sample_num
```sql
SELECT Statements.Statement_ID, COUNT(Accounts.Account_ID) AS NumberOfAccounts
FROM Statements
JOIN Accounts ON Statements.Statement_ID = Accounts.Statement_ID
GROUP BY Statements.Statement_ID;
```
-------------------------6396 sample_num
```sql
SELECT Statement_ID, COUNT(*) AS Number_of_Accounts
FROM Accounts
GROUP BY Statement_ID;
```
-------------------------6397 sample_num
```sql
SELECT T1.Statement_ID, T1.Statement_Details 
FROM Statements AS T1 
JOIN Accounts AS T2 ON T1.Statement_ID = T2.Statement_ID 
GROUP BY T1.Statement_ID 
ORDER BY COUNT(T2.Account_ID) DESC 
LIMIT 1;
```
-------------------------6398 sample_num
```sql
SELECT S.Statement_ID, S.Statement_Details 
FROM Statements S
JOIN Accounts A ON S.Statement_ID = A.Statement_ID
GROUP BY S.Statement_ID, S.Statement_Details
ORDER BY COUNT(A.Account_ID) DESC
LIMIT 1;
```
-------------------------6399 sample_num
```sql
SELECT COUNT(*) FROM Documents;
```
-------------------------6400 sample_num
```sql
SELECT COUNT(*) FROM Documents;
```
-------------------------6401 sample_num
```sql
SELECT Document_Type_Code, Document_Name, Document_Description 
FROM Documents 
WHERE Document_Name = 'Noel CV' OR Document_Name = 'King Book';
```
-------------------------6402 sample_num
```sql
SELECT T1.Document_Type_Code, T1.Document_Type_Name, T1.Document_Type_Description 
FROM Ref_Document_Types AS T1 
JOIN Documents AS T2 
ON T1.Document_Type_Code = T2.Document_Type_Code 
WHERE T2.Document_Name = 'Noel CV' OR T2.Document_Name = 'King Book';
```
-------------------------6403 sample_num
```sql
SELECT Document_ID, Document_Name 
FROM Documents;
```
-------------------------6404 sample_num
```sql
SELECT Document_ID, Document_Name 
FROM Documents;
```
-------------------------6405 sample_num
```sql
SELECT Document_Name, Document_ID 
FROM Documents 
WHERE Document_Type_Code = 'BK';
```
-------------------------6406 sample_num
```sql
SELECT Document_Name, Document_ID 
FROM Documents 
WHERE Document_Type_Code = 'BK';
```
-------------------------6407 sample_num
```sql
SELECT COUNT(Documents.Document_ID), Documents.Project_ID 
FROM Documents 
JOIN Ref_Document_Types 
ON Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code 
WHERE Ref_Document_Types.Document_Type_Code = 'BK' 
GROUP BY Documents.Project_ID;
```
-------------------------6408 sample_num
```sql
SELECT Project_ID, COUNT(*) 
FROM Documents 
WHERE Document_Type_Code = 'BK' 
GROUP BY Project_ID;
```
-------------------------6409 sample_num
```sql
SELECT Document_Name, Document_Date 
FROM Documents 
WHERE Project_ID = (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project');
```
-------------------------6410 sample_num
```sql
SELECT D.Document_Name, D.Document_Date 
FROM Documents D
JOIN Projects P ON D.Project_ID = P.Project_ID 
WHERE P.Project_Details = 'Graph Database project';
```
-------------------------6411 sample_num
```sql
SELECT Project_ID, COUNT(Document_ID) AS NumberOfDocuments
FROM Documents
GROUP BY Project_ID;
```
-------------------------6412 sample_num
```sql
SELECT Project_ID, COUNT(Document_ID) as NumberOfDocuments
FROM Documents
GROUP BY Project_ID;
```
-------------------------6413 sample_num
```sql
SELECT P.Project_ID 
FROM Projects P
JOIN Documents D ON P.Project_ID = D.Project_ID
GROUP BY P.Project_ID
ORDER BY COUNT(D.Document_ID) ASC
LIMIT 1;
```
-------------------------6414 sample_num
```sql
SELECT P.Project_ID 
FROM Projects P
JOIN Documents D ON P.Project_ID = D.Project_ID
GROUP BY P.Project_ID
ORDER BY COUNT(D.Document_ID) ASC
LIMIT 1;
```
-------------------------6415 sample_num
```sql
SELECT p.Project_ID 
FROM Projects p
JOIN Documents d ON p.Project_ID = d.Project_ID 
GROUP BY p.Project_ID 
HAVING COUNT(d.Document_ID) >= 2;
```
-------------------------6416 sample_num
```sql
SELECT Project_ID 
FROM Documents 
GROUP BY Project_ID 
HAVING COUNT(*) >= 2;
```
-------------------------6417 sample_num
```sql
SELECT Ref_Document_Types.Document_Type_Code, COUNT(Documents.Document_ID) AS NumberOfDocuments
FROM Ref_Document_Types
JOIN Documents ON Ref_Document_Types.Document_Type_Code = Documents.Document_Type_Code
GROUP BY Ref_Document_Types.Document_Type_Code;
```
-------------------------6418 sample_num
```sql
SELECT Ref_Document_Types.Document_Type_Code, Ref_Document_Types.Document_Type_Name, COUNT(Documents.Document_ID) as Number_of_Documents
FROM Ref_Document_Types
JOIN Documents ON Ref_Document_Types.Document_Type_Code = Documents.Document_Type_Code
GROUP BY Ref_Document_Types.Document_Type_Code, Ref_Document_Types.Document_Type_Name;
```
-------------------------6419 sample_num
```sql
SELECT Document_Type_Code 
FROM Documents 
GROUP BY Document_Type_Code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6420 sample_num
```sql
SELECT Document_Type_Code 
FROM Documents 
GROUP BY Document_Type_Code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6421 sample_num
```sql
SELECT Document_Type_Code 
FROM Documents 
GROUP BY Document_Type_Code 
HAVING COUNT(Document_ID) < 3;
```
-------------------------6422 sample_num
```sql
SELECT Ref_Document_Types.Document_Type_Code 
FROM Ref_Document_Types 
WHERE NOT EXISTS (
    SELECT Document_ID 
    FROM Documents 
    WHERE Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code 
    GROUP BY Documents.Document_Type_Code 
    HAVING COUNT(Documents.Document_ID) >= 3
)
```
Or
```sql
SELECT DTC 
FROM (
    SELECT Document_Type_Code AS DTC, COUNT(*) AS cnt 
    FROM Documents 
    GROUP BY Document_Type_Code
) AS T 
WHERE T.cnt < 3;
```
-------------------------6423 sample_num
```sql
SELECT S.Statement_Details, D.Document_Name 
FROM Statements S 
JOIN Documents_with_Expenses DWE ON S.Statement_ID = DWE.Document_ID 
JOIN Documents D ON DWE.Document_ID = D.Document_ID 
WHERE S.Statement_Details = 'Private Project';
```
Note: The provided answer assumes that there is a relationship between Statements and Documents_with_Expenses tables on Document_ID which might not be accurate based on the schema given. The schema suggests that there's no direct relationship between the Statements and Documents or Documents_with_Expenses. A more accurate representation would require additional information on how these tables are related.
-------------------------6424 sample_num
```sql
SELECT S.Statement_Details, D.Document_Name 
FROM Statements S 
JOIN Accounts A ON S.Statement_ID = A.Statement_ID 
JOIN Documents D ON D.Document_ID = A.Document_ID 
JOIN Projects P ON P.Project_ID = D.Project_ID 
WHERE S.Statement_Details = 'Private Project';
```
Note: The provided SQL query might not work correctly depending on the actual database schema and relationships between the tables. Specifically, the relationship between the Statements, Accounts, and Documents tables is assumed but not explicitly described in the original problem statement.
-------------------------6425 sample_num
```sql
SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description 
FROM Ref_Document_Types;
```
-------------------------6426 sample_num
```sql
SELECT Document_Type_Code, Document_Type_Name, Document_Type_Description 
FROM Ref_Document_Types;
```
-------------------------6427 sample_num
```sql
SELECT T1.Document_Type_Description 
FROM Ref_Document_Types AS T1 
JOIN Ref_Document_Types AS T2 ON T1.Document_Type_Name = T2.Document_Type_Name 
WHERE T2.Document_Type_Name = 'Film';
```
However, this query can be simplified to:
```sql
SELECT Document_Type_Description 
FROM Ref_Document_Types 
WHERE Document_Type_Name = 'Film';
```
-------------------------6428 sample_num
```sql
SELECT Document_Type_Description 
FROM Ref_Document_Types 
WHERE Document_Type_Name = 'Film';
```
-------------------------6429 sample_num
```sql
SELECT Ref_Document_Types.Document_Type_Name, 
       Ref_Document_Types.Document_Type_Description,
       Documents.Document_Date 
FROM Documents 
JOIN Ref_Document_Types 
ON Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code;
```
-------------------------6430 sample_num
```sql
SELECT Ref_Document_Types.Document_Type_Name, 
       Ref_Document_Types.Document_Type_Description, 
       Documents.Document_Date 
FROM Documents 
INNER JOIN Ref_Document_Types 
ON Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code;
```
-------------------------6431 sample_num
```sql
SELECT COUNT(*) FROM Projects;
```
-------------------------6432 sample_num
```sql
SELECT COUNT(*) FROM Projects;
```
-------------------------6433 sample_num
```sql
SELECT Project_ID, Project_Details FROM Projects;
```
-------------------------6434 sample_num
```sql
SELECT Project_ID, Project_Details FROM Projects;
```
-------------------------6435 sample_num
```sql
SELECT T1.Project_ID, T1.Project_Details
FROM Projects AS T1
JOIN Documents AS T2 ON T1.Project_ID = T2.Project_ID
GROUP BY T1.Project_ID, T1.Project_Details
HAVING COUNT(T2.Document_ID) >= 2;
```
-------------------------6436 sample_num
```sql
SELECT P.Project_ID, P.Project_Details
FROM Projects P
JOIN Documents D ON P.Project_ID = D.Project_ID
GROUP BY P.Project_ID, P.Project_Details
HAVING COUNT(D.Document_ID) > 2
```
-------------------------6437 sample_num
```sql
SELECT Projects.Project_Details 
FROM Projects 
JOIN Documents ON Projects.Project_ID = Documents.Project_ID 
WHERE Documents.Document_Name = 'King Book';
```
-------------------------6438 sample_num
```sql
SELECT Projects.Project_Details 
FROM Projects 
JOIN Documents ON Projects.Project_ID = Documents.Project_ID 
WHERE Documents.Document_Name = 'King Book';
```
-------------------------6439 sample_num
```sql
SELECT COUNT(*) FROM Ref_Budget_Codes;
```
-------------------------6440 sample_num
```sql
SELECT COUNT(*) FROM Ref_Budget_Codes;
```
-------------------------6441 sample_num
```sql
SELECT Budget_Type_Code, Budget_Type_Description 
FROM Ref_Budget_Codes;
```
-------------------------6442 sample_num
```sql
SELECT Budget_Type_Code, Budget_Type_Description 
FROM Ref_Budget_Codes;
```
-------------------------6443 sample_num
```sql
SELECT Budget_Type_Description 
FROM Ref_Budget_Codes 
WHERE Budget_Type_Code = 'ORG';
```
-------------------------6444 sample_num
```sql
SELECT Budget_Type_Description 
FROM Ref_Budget_Codes 
WHERE Budget_Type_Code = 'ORG';
```
-------------------------6445 sample_num
```sql
SELECT COUNT(*) 
FROM Documents_with_Expenses;
```
-------------------------6446 sample_num
```sql
SELECT COUNT(*) FROM Documents_with_Expenses;
```
-------------------------6447 sample_num
```sql
SELECT Document_ID 
FROM Documents_with_Expenses 
WHERE Budget_Type_Code = 'SF';
```
-------------------------6448 sample_num
```sql
SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'SF';
```
-------------------------6449 sample_num
```sql
SELECT Dwe.Budget_Type_Code, Rbc.Budget_Type_Description, Dwe.Document_ID 
FROM Documents_with_Expenses Dwe
JOIN Ref_Budget_Codes Rbc ON Dwe.Budget_Type_Code = Rbc.Budget_Type_Code;
```
-------------------------6450 sample_num
```sql
SELECT Dwe.Budget_Type_Code, Rbc.Budget_Type_Description, Dwe.Document_ID 
FROM Documents_with_Expenses Dwe
JOIN Ref_Budget_Codes Rbc ON Dwe.Budget_Type_Code = Rbc.Budget_Type_Code;
```
-------------------------6451 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
JOIN Documents_with_Expenses DE ON D.Document_ID = DE.Document_ID
JOIN Ref_Budget_Codes RBC ON DE.Budget_Type_Code = RBC.Budget_Type_Code
WHERE RBC.Budget_Type_Description = 'Government';
```
-------------------------6452 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
JOIN Documents_with_Expenses DE ON D.Document_ID = DE.Document_ID
JOIN Ref_Budget_Codes RBC ON DE.Budget_Type_Code = RBC.Budget_Type_Code
WHERE RBC.Budget_Type_Description = 'Government';
```
-------------------------6453 sample_num
```sql
SELECT Ref_Budget_Codes.Budget_Type_Code, COUNT(Documents_with_Expenses.Document_ID) AS NumberOfDocuments
FROM Documents_with_Expenses
JOIN Ref_Budget_Codes ON Documents_with_Expenses.Budget_Type_Code = Ref_Budget_Codes.Budget_Type_Code
GROUP BY Ref_Budget_Codes.Budget_Type_Code;
```
-------------------------6454 sample_num
```sql
SELECT Ref_Budget_Codes.Budget_Type_Code, COUNT(Documents_with_Expenses.Document_ID) AS NumberOfDocuments
FROM Ref_Budget_Codes
JOIN Documents_with_Expenses ON Ref_Budget_Codes.Budget_Type_Code = Documents_with_Expenses.Budget_Type_Code
GROUP BY Ref_Budget_Codes.Budget_Type_Code;
```
-------------------------6455 sample_num
```sql
SELECT T2.Budget_Type_Code 
FROM Documents_with_Expenses AS T1 
JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_Code = T2.Budget_Type_Code 
GROUP BY T2.Budget_Type_Code 
ORDER BY COUNT(T1.Document_ID) DESC 
LIMIT 1;
```
-------------------------6456 sample_num
```sql
SELECT T2.Budget_Type_Code 
FROM Documents_with_Expenses AS T1 
JOIN Ref_Budget_Codes AS T2 
ON T1.Budget_Type_Code = T2.Budget_Type_Code 
GROUP BY T2.Budget_Type_Code 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6457 sample_num
```sql
SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
```
-------------------------6458 sample_num
```sql
SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
```
-------------------------6459 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
LEFT JOIN Documents_with_Expenses DE ON D.Document_ID = DE.Document_ID 
WHERE D.Document_Type_Code = 'CV' AND DE.Document_ID IS NULL;
```
-------------------------6460 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
WHERE D.Document_Type_Code = 'CV'
AND D.Document_ID NOT IN (SELECT DWED.Document_ID FROM Documents_with_Expenses DWED)
```
-------------------------6461 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D 
JOIN Documents_with_Expenses DE ON D.Document_ID = DE.Document_ID 
WHERE D.Document_Name LIKE '%s%' 
```
```
-------------------------6462 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D 
JOIN Documents_with_Expenses DE ON D.Document_ID = DE.Document_ID 
WHERE D.Document_Name LIKE '%s%' ;
```
-------------------------6463 sample_num
```sql
SELECT COUNT(*) 
FROM Documents 
WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses)
```
```
-------------------------6464 sample_num
```sql
SELECT COUNT(*) 
FROM Documents 
WHERE Document_ID NOT IN (SELECT Document_ID FROM Documents_with_Expenses);
```
-------------------------6465 sample_num
```sql
SELECT D.Document_Date 
FROM Documents D
JOIN Documents_with_Expenses DE1 ON D.Document_ID = DE1.Document_ID
JOIN Documents_with_Expenses DE2 ON D.Document_ID = DE2.Document_ID
WHERE DE1.Budget_Type_Code = 'GV' AND DE2.Budget_Type_Code = 'SF'
GROUP BY D.Document_Date
HAVING COUNT(DISTINCT D.Document_ID) > 1;
```
-------------------------6466 sample_num
```sql
SELECT D.Document_Date 
FROM Documents D
JOIN Documents_with_Expenses DE1 ON D.Document_ID = DE1.Document_ID
JOIN Documents_with_Expenses DE2 ON D.Document_ID = DE2.Document_ID
WHERE DE1.Budget_Type_Code = 'GV' AND DE2.Budget_Type_Code = 'SF'
GROUP BY D.Document_Date
HAVING COUNT(DISTINCT DE1.Budget_Type_Code) > 0 AND COUNT(DISTINCT DE2.Budget_Type_Code) > 0;
```
-------------------------6467 sample_num
```sql
SELECT Account_Details 
FROM Accounts 
WHERE Account_Details = (SELECT MAX(Account_Details) FROM Accounts) 
OR Account_Details LIKE '%5%';
```
-------------------------6468 sample_num
```sql
SELECT Account_Details 
FROM Accounts 
WHERE LENGTH(Account_Details) - LENGTH(REPLACE(Account_Details, '5', '')) >= 1 
ORDER BY CAST(REPLACE(Account_Details, ',', '') AS DECIMAL) DESC 
LIMIT 1;
```
Note: The query provided will only return one row - the account detail with the greatest value. If you want all account details that include the character '5', you should remove the ORDER BY and LIMIT clauses.
-------------------------6469 sample_num
```sql
SELECT COUNT(*) FROM Scientists;
```
-------------------------6470 sample_num
```sql
SELECT COUNT(*) FROM Scientists;
```
-------------------------6471 sample_num
```sql
SELECT SUM(Hours) FROM Projects;
```
-------------------------6472 sample_num
```sql
SELECT SUM(Hours) FROM Projects;
```
-------------------------6473 sample_num
```sql
SELECT COUNT(DISTINCT Scientist) FROM AssignedTo;
```
-------------------------6474 sample_num
```sql
SELECT COUNT(DISTINCT Scientist) FROM AssignedTo;
```
-------------------------6475 sample_num
```sql
SELECT COUNT(DISTINCT Project) FROM AssignedTo;
```
-------------------------6476 sample_num
```sql
SELECT COUNT(DISTINCT Name) FROM Projects;
```
-------------------------6477 sample_num
```sql
SELECT AVG(Hours) FROM Projects;
```
-------------------------6478 sample_num
```sql
SELECT AVG(Hours) FROM Projects;
```
-------------------------6479 sample_num
```sql
SELECT Name FROM Projects WHERE Hours = (SELECT MAX(Hours) FROM Projects);
```
-------------------------6480 sample_num
```sql
SELECT p.Name 
FROM Projects p
JOIN AssignedTo at ON p.Code = at.Project
GROUP BY p.Name
ORDER BY SUM(p.Hours) DESC
LIMIT 1;
```
-------------------------6481 sample_num
```sql
SELECT Name 
FROM Projects 
WHERE Hours > (SELECT AVG(Hours) FROM Projects);
```
-------------------------6482 sample_num
```sql
SELECT Name FROM Projects WHERE Hours > (SELECT AVG(Hours) FROM Projects);
```
-------------------------6483 sample_num
```sql
SELECT P.Name, P.Hours 
FROM Projects P
JOIN (
    SELECT Project, COUNT(*) AS scientist_count
    FROM AssignedTo
    GROUP BY Project
    ORDER BY scientist_count DESC
    LIMIT 1
) AT ON P.Code = AT.Project;
```
-------------------------6484 sample_num
```sql
SELECT P.Name, P.Hours 
FROM Projects P
JOIN (
    SELECT Project, COUNT(*) AS scientist_count
    FROM AssignedTo
    GROUP BY Project
    ORDER BY scientist_count DESC
    LIMIT 1
) AT ON P.Code = AT.Project;
```
-------------------------6485 sample_num
```sql
SELECT P.Name 
FROM Projects P
JOIN AssignedTo A ON P.Code = A.Project
JOIN Scientists S ON A.Scientist = S.SSN
WHERE S.Name LIKE '%Smith%';
```
-------------------------6486 sample_num
```sql
SELECT p.Name 
FROM Projects p
JOIN AssignedTo at ON p.Code = at.Project
JOIN Scientists s ON at.Scientist = s.SSN
WHERE s.Name LIKE '%Smith%';
```
-------------------------6487 sample_num
```sql
SELECT SUM(Projects.Hours) 
FROM Projects 
JOIN AssignedTo ON Projects.Code = AssignedTo.Project 
JOIN Scientists ON Scientists.SSN = AssignedTo.Scientist 
WHERE Scientists.Name = 'Michael Rogers' OR Scientists.Name = 'Carol Smith';
```
-------------------------6488 sample_num
```sql
SELECT SUM(P.Hours) 
FROM Projects P 
JOIN AssignedTo A ON P.Code = A.Project 
JOIN Scientists S ON S.SSN = A.Scientist 
WHERE S.Name = 'Michael Rogers' OR S.Name = 'Carol Smith';
```
-------------------------6489 sample_num
```sql
SELECT Name 
FROM Projects 
WHERE Hours BETWEEN 100 AND 300;
```
-------------------------6490 sample_num
```sql
SELECT Name 
FROM Projects 
WHERE Hours BETWEEN 100 AND 300;
```
-------------------------6491 sample_num
```sql
SELECT s.Name
FROM Scientists s
JOIN AssignedTo at1 ON s.SSN = at1.Scientist
JOIN Projects p1 ON at1.Project = p1.Code AND p1.Name = 'Matter of Time'
JOIN AssignedTo at2 ON s.SSN = at2.Scientist
JOIN Projects p2 ON at2.Project = p2.Code AND p2.Name = 'A Puzzling Parallax';
```
-------------------------6492 sample_num
```sql
SELECT s.Name
FROM Scientists s
JOIN AssignedTo at ON s.SSN = at.Scientist
JOIN Projects p ON at.Project = p.Code
WHERE p.Name IN ('Matter of Time', 'A Puzzling Pattern')
GROUP BY s.Name
HAVING COUNT(DISTINCT p.Name) = 2;
```
-------------------------6493 sample_num
```sql
SELECT Name FROM Scientists ORDER BY Name;
```
-------------------------6494 sample_num
```sql
SELECT Name FROM Scientists ORDER BY Name;
```
-------------------------6495 sample_num
```sql
SELECT Projects.Name, COUNT(*) as Num_Scientists
FROM Projects
JOIN AssignedTo ON Projects.Code = AssignedTo.Project
GROUP BY Projects.Name;
```
-------------------------6496 sample_num
```sql
SELECT Projects.Name, COUNT(AssignedTo.Scientist) AS NumberOfScientists
FROM Projects
LEFT JOIN AssignedTo ON Projects.Code = AssignedTo.Project
GROUP BY Projects.Name;
```
-------------------------6497 sample_num
```sql
SELECT COUNT(DISTINCT T1.SSN) 
FROM AssignedTo AS T1 
JOIN Projects AS T2 ON T1.Project = T2.Code 
WHERE T2.Hours > 300;
```
-------------------------6498 sample_num
```sql
SELECT p.Name, COUNT(a.Scientist) as Num_Scientists
FROM Projects p
JOIN AssignedTo a ON p.Code = a.Project
WHERE p.Hours > 300
GROUP BY p.Name;
```
-------------------------6499 sample_num
```sql
SELECT S.Name, COUNT(*) as NumProjects
FROM Scientists S
JOIN AssignedTo A ON S.SSN = A.Scientist
GROUP BY S.Name;
```
-------------------------6500 sample_num
```sql
SELECT S.Name, COUNT(AT.Project) AS NumberOfProjects
FROM Scientists S
JOIN AssignedTo AT ON S.SSN = AT.Scientist
GROUP BY S.SSN, S.Name;
```
-------------------------6501 sample_num
```sql
SELECT S.SSN, S.Name 
FROM Scientists S
JOIN AssignedTo AT ON S.SSN = AT.Scientist
JOIN Projects P ON AT.Project = P.Code
WHERE P.Hours = (SELECT MAX(Hours) FROM Projects);
```
-------------------------6502 sample_num
```sql
SELECT S.SSN, S.Name 
FROM Scientists S
JOIN AssignedTo AT ON S.SSN = AT.Scientist
JOIN Projects P ON AT.Project = P.Code
WHERE P.Hours = (SELECT MAX(Hours) FROM Projects)
```
-------------------------6503 sample_num
```sql
SELECT DISTINCT S.Name 
FROM Scientists S
JOIN AssignedTo A ON S.SSN = A.Scientist
```
-------------------------6504 sample_num
```sql
SELECT DISTINCT S.Name 
FROM Scientists S
JOIN AssignedTo A ON S.SSN = A.Scientist;
```
-------------------------6505 sample_num
```sql
SELECT Name 
FROM Projects 
WHERE Code NOT IN (SELECT Project FROM AssignedTo);
```
-------------------------6506 sample_num
```sql
SELECT Name 
FROM Projects 
WHERE Code NOT IN (SELECT Project FROM AssignedTo)
```
-------------------------6507 sample_num
```sql
SELECT Name 
FROM Scientists 
WHERE SSN NOT IN (SELECT Scientist FROM AssignedTo);
```
-------------------------6508 sample_num
```sql
SELECT Name 
FROM Scientists 
WHERE SSN NOT IN (SELECT Scientist FROM AssignedTo);
```
-------------------------6509 sample_num
```sql
SELECT COUNT(*) 
FROM Scientists 
WHERE SSN NOT IN (SELECT Scientist FROM AssignedTo);
```
-------------------------6510 sample_num
```sql
SELECT COUNT(*) 
FROM Scientists 
WHERE SSN NOT IN (SELECT Scientist FROM AssignedTo)
```
-------------------------6511 sample_num
```sql
SELECT s.Name
FROM Scientists s
WHERE NOT EXISTS (
    SELECT 1
    FROM AssignedTo at, Projects p
    WHERE at.Scientist = s.SSN
    AND at.Project = p.Code
    AND p.Hours = (SELECT MAX(Hours) FROM Projects)
);
```
-------------------------6512 sample_num
```sql
SELECT s.Name
FROM Scientists s
WHERE s.SSN NOT IN (
    SELECT at.Scientist
    FROM AssignedTo at
    JOIN Projects p ON at.Project = p.Code
    WHERE p.Hours = (
        SELECT MAX(hours)
        FROM Projects
    )
);
```
-------------------------6513 sample_num
```sql
SELECT S.Name AS Scientist_Name, P.Name AS Project_Name, P.Hours AS Hours_Worked
FROM Scientists S
JOIN AssignedTo A ON S.SSN = A.Scientist
JOIN Projects P ON A.Project = P.Code
ORDER BY P.Name, S.Name;
```
-------------------------6514 sample_num
```sql
SELECT S.Name AS Scientist_Name, P.Name AS Project_Name, P.Hours AS Project_Hours
FROM Scientists S
JOIN AssignedTo AT ON S.SSN = AT.Scientist
JOIN Projects P ON AT.Project = P.Code
ORDER BY P.Name, S.Name;
```
-------------------------6515 sample_num
```sql
SELECT P.Name AS ProjectName, S.Name AS ScientistName
FROM Projects P,
     Scientists S,
     AssignedTo AT
WHERE P.Code = AT.Project
AND S.SSN = AT.Scientist
AND P.Hours = (SELECT MIN(Hours) FROM Projects);
```
-------------------------6516 sample_num
```sql
SELECT P.Name AS Project_Name, S.Name AS Scientist_Name
FROM Scientists S
JOIN AssignedTo A ON S.SSN = A.Scientist
JOIN Projects P ON A.Project = P.Code
WHERE P.Hours = (SELECT MIN(Hours) FROM Projects)
```
-------------------------6517 sample_num
```sql
SELECT Name FROM wine WHERE Score = (SELECT MAX(Score) FROM wine);
```
-------------------------6518 sample_num
```sql
SELECT Name FROM wine WHERE Score = (SELECT MAX(Score) FROM wine);
```
-------------------------6519 sample_num
```sql
SELECT Winery 
FROM wine 
WHERE Score = (SELECT MAX(Score) FROM wine);
```
-------------------------6520 sample_num
```sql
SELECT Winery FROM wine WHERE Score = (SELECT MAX(Score) FROM wine)
```
-------------------------6521 sample_num
```sql
SELECT Name FROM wine WHERE Year = 2008;
```
-------------------------6522 sample_num
```sql
SELECT Name FROM wine WHERE Year = 2008;
```
-------------------------6523 sample_num
```sql
SELECT G.Grape, A.Appelation
FROM wine W
JOIN grapes G ON W.Grape = G.ID
JOIN appellations A ON W.Appelation = A.No;
```
-------------------------6524 sample_num
```sql
SELECT grapes.Grape, appellations.Appelation 
FROM wine
JOIN grapes ON wine.Grape = grapes.ID
JOIN appellations ON wine.Appelation = appellations.No;
```
-------------------------6525 sample_num
```sql
SELECT Name, Score FROM wine;
```
-------------------------6526 sample_num
```sql
SELECT Name, Score FROM wine;
```
-------------------------6527 sample_num
```sql
SELECT Area, County FROM appellations;
```
-------------------------6528 sample_num
```sql
SELECT DISTINCT Area, County FROM appellations;
```
-------------------------6529 sample_num
```sql
SELECT Price FROM wine WHERE Year < 2010;
```
-------------------------6530 sample_num
```sql
SELECT Price 
FROM wine 
WHERE Year < 2010;
```
-------------------------6531 sample_num
```sql
SELECT DISTINCT Name 
FROM wine 
WHERE Score > 90;
```
-------------------------6532 sample_num
```sql
SELECT Name FROM wine WHERE Score > 90;
```
-------------------------6533 sample_num
```sql
SELECT DISTINCT w.Name 
FROM wine w
JOIN grapes g ON w.Grape = g.ID
WHERE g.Color = 'Red';
```
-------------------------6534 sample_num
```sql
SELECT w.Name
FROM wine w
JOIN grapes g ON w.Grape = g.Grape
WHERE g.Color = 'Red'
```
-------------------------6535 sample_num
```sql
SELECT DISTINCT w.Name 
FROM wine w
JOIN appellations a ON w.Appelation = a.Appelation
WHERE a.Area = 'North Coast';
```
-------------------------6536 sample_num
```sql
SELECT DISTINCT w.Name 
FROM wine w
JOIN appellations a ON w.Appelation = a.Appelation
WHERE a.Area = 'North Coast';
```
-------------------------6537 sample_num
```sql
SELECT COUNT(*) FROM wine WHERE Winery = 'Robert Biale';
```
-------------------------6538 sample_num
```sql
SELECT COUNT(*) 
FROM wine 
WHERE Winery = 'Robert Biale';
```
-------------------------6539 sample_num
```sql
SELECT COUNT(*) 
FROM appellations 
WHERE County = 'Napa';
```
-------------------------6540 sample_num
```sql
SELECT COUNT(*) 
FROM appellations 
WHERE County = 'Napa';
```
-------------------------6541 sample_num
```sql
SELECT AVG(wine.Price) 
FROM wine 
JOIN appellations ON wine.Appelation = appellations.Appelation 
WHERE appellations.County = 'Sonoma County';
```
-------------------------6542 sample_num
```sql
SELECT AVG(wine.Price) 
FROM wine 
JOIN appellations ON wine.Appelation = appellations.Appelation 
WHERE appellations.County = 'Sonoma County';
```
-------------------------6543 sample_num
```sql
SELECT w.Name, w.Score 
FROM wine w
JOIN grapes g ON w.Grape = g.ID
WHERE g.Color = 'White';
```
-------------------------6544 sample_num
```sql
SELECT w.Name, w.Score 
FROM wine w
JOIN grapes g ON w.Grape = g.ID
WHERE g.Color = 'White';
```
-------------------------6545 sample_num
```sql
SELECT MAX(wine.Price) 
FROM wine 
JOIN appellations ON wine.Appelation = appellations.Appelation 
WHERE appellations.Area = 'Central Coast' AND wine.Year < 2005;
```
-------------------------6546 sample_num
```sql
SELECT MAX(wine.Price) 
FROM wine 
JOIN appellations ON wine.Appelation = appellations.Appelation 
WHERE appellations.Area = 'Central Coast' AND wine.Year < 2005;
```
-------------------------6547 sample_num
```sql
SELECT G.Grape
FROM grapes AS G
JOIN wine AS W ON G.ID = W.Grape
WHERE G.Color = 'White' AND W.Score > 90;
```
-------------------------6548 sample_num
```sql
SELECT g.Grape
FROM grapes AS g
JOIN wine AS w ON g.ID = w.Grape
WHERE g.Color = 'White' AND w.Score > 90;
```
-------------------------6549 sample_num
```sql
SELECT wine.Name
FROM wine
JOIN grapes ON wine.Grape = grapes.ID
WHERE wine.Price > 50 AND grapes.Color = 'Red';
```
-------------------------6550 sample_num
```sql
SELECT w.Name 
FROM wine w
JOIN grapes g ON w.Grape = g.Grape
WHERE g.Color = 'red' AND w.Price > 50;
```
-------------------------6551 sample_num
```sql
SELECT wine.Name
FROM wine
JOIN appellations ON wine.Appelation = appellations.Appelation
WHERE wine.Price < 50 AND appellations.County = 'Monterey';
```
-------------------------6552 sample_num
```sql
SELECT w.Name
FROM wine w
JOIN appellations a ON w.Appelation = a.Appelation
WHERE w.Price < 50 AND a.County = 'Monterey';
```
-------------------------6553 sample_num
```sql
SELECT Grape, COUNT(*) AS Num_Wines
FROM wine
GROUP BY Grape;
```
-------------------------6554 sample_num
```sql
SELECT Grape, COUNT(*) AS NumberOfWines
FROM wine
GROUP BY Grape;
```
-------------------------6555 sample_num
```sql
SELECT Year, AVG(Price) 
FROM wine 
GROUP BY Year;
```
-------------------------6556 sample_num
```sql
SELECT Year, AVG(Price) 
FROM wine 
GROUP BY Year;
```
-------------------------6557 sample_num
```sql
SELECT DISTINCT Name 
FROM wine 
WHERE Price > ANY (
    SELECT Price 
    FROM wine 
    WHERE Winery = 'John Anthony'
);
```
-------------------------6558 sample_num
```sql
SELECT DISTINCT Name 
FROM wine 
WHERE Price > ANY (
    SELECT Price 
    FROM wine 
    WHERE Winery = 'John Anthony'
);
```
-------------------------6559 sample_num
```sql
SELECT DISTINCT Name FROM wine ORDER BY Name ASC;
```
-------------------------6560 sample_num
```sql
SELECT Name FROM wine ORDER BY Name ASC;
```
-------------------------6561 sample_num
```sql
SELECT DISTINCT Name FROM wine ORDER BY Price;
```
-------------------------6562 sample_num
```sql
SELECT Name FROM wine ORDER BY Price ASC;
```
-------------------------6563 sample_num
```sql
SELECT T1.Area FROM appellations AS T1 JOIN wine AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Year < 2010 GROUP BY T2.Appelation ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------6564 sample_num
```sql
SELECT T2.Area FROM wine AS T1 JOIN appellations AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Year < 2010 GROUP BY T1.Appelation ORDER BY COUNT(*) DESC LIMIT 1
```
-------------------------6565 sample_num
```sql
SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.ID = T2.Grape GROUP BY T2.Grape ORDER BY AVG(T2.Price) DESC LIMIT 1
```
-------------------------6566 sample_num
```sql
SELECT T1.Color FROM grapes AS T1 JOIN wine AS T2 ON T1.ID = T2.Grape GROUP BY T2.Grape ORDER BY AVG(T2.Price) DESC LIMIT 1;
```
-------------------------6567 sample_num
```sql
SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010;
```
-------------------------6568 sample_num
```sql
SELECT DISTINCT Name FROM wine WHERE Year < 2000 OR Year > 2010;
```
-------------------------6569 sample_num
```sql
SELECT DISTINCT T2.Winery 
FROM wine AS T2 
JOIN grapes AS T1 ON T1.ID = T2.Grape 
WHERE T2.Price BETWEEN 50 AND 100;
```
-------------------------6570 sample_num
```sql
SELECT DISTINCT Winery 
FROM wine 
WHERE Price BETWEEN 50 AND 100;
```
-------------------------6571 sample_num
```sql
SELECT AVG(Price), SUM(Cases) 
FROM wine 
WHERE YEAR = 2009 AND Grape = 'Zinfandel';
```
-------------------------6572 sample_num
```sql
SELECT AVG(Price), SUM(Cases) 
FROM wine 
WHERE Grape = 'Zinfandel' AND Year = 2009;
```
-------------------------6573 sample_num
```sql
SELECT MAX(wine.Price), MAX(wine.Score) 
FROM wine 
JOIN appellations ON wine.Appelation = appellations.Appelation 
WHERE appellations.Appelation = 'St. Helena';
```
-------------------------6574 sample_num
```sql
SELECT MAX(Price), MAX(Score) 
FROM wine 
WHERE Appelation = 'St. Helena';
```
-------------------------6575 sample_num
```sql
SELECT Year, MAX(Price) as Max_Price, MAX(Score) as Max_Score FROM wine GROUP BY Year;
```
-------------------------6576 sample_num
```sql
SELECT Year, MAX(Price) as Max_Price, MAX(Score) as Max_Score FROM wine GROUP BY Year;
```
-------------------------6577 sample_num
```sql
SELECT Appelation, AVG(Price) AS Average_Price, AVG(Score) AS Average_Score
FROM wine
GROUP BY Appelation;
```
-------------------------6578 sample_num
```sql
SELECT Appelation, AVG(Price) as Average_Price, AVG(Score) as Average_Score
FROM wine
GROUP BY Appelation;
```
-------------------------6579 sample_num
```sql
SELECT Winery 
FROM wine 
GROUP BY Winery 
HAVING COUNT(*) >= 4;
```
-------------------------6580 sample_num
```sql
SELECT Winery 
FROM wine 
GROUP BY Winery 
HAVING COUNT(*) >= 4;
```
-------------------------6581 sample_num
```sql
SELECT T2.County FROM wine AS T1 JOIN appellations AS T2 ON T1.Appelation = T2.Appelation GROUP BY T1.Appelation HAVING COUNT(*) <= 3
```
-------------------------6582 sample_num
```sql
SELECT T2.County FROM wine AS T1 JOIN appellations AS T2 ON T1.Appelation = T2.Appelation GROUP BY T1.Appelation HAVING COUNT(*) <= 3
```
-------------------------6583 sample_num
```sql
SELECT Name FROM wine WHERE Year < ALL (SELECT Year FROM wine WHERE Winery = 'Brander')
```
-------------------------6584 sample_num
```sql
SELECT Name 
FROM wine 
WHERE No IN (
    SELECT No 
    FROM wine 
    WHERE Year < (
        SELECT MIN(Year) 
        FROM wine 
        WHERE Winery = 'Brander'
    )
)
```
```
-------------------------6585 sample_num
```sql
SELECT Name 
FROM wine 
WHERE Price > ALL (
    SELECT Price 
    FROM wine 
    WHERE Year = 2006
);
```
-------------------------6586 sample_num
```sql
SELECT Name FROM wine WHERE Price > ANY (SELECT Price FROM wine WHERE YEAR = 2006);
```
-------------------------6587 sample_num
```sql
SELECT w.Winery, COUNT(*) AS TotalWines
FROM wine w
JOIN grapes g ON w.Grape = g.ID
WHERE g.Color = 'White'
GROUP BY w.Winery
ORDER BY TotalWines DESC
LIMIT 3;
```
-------------------------6588 sample_num
```sql
SELECT w.Winery, COUNT(*) AS TotalWines
FROM wine w
JOIN grapes g ON w.Grape = g.ID
WHERE g.Color = 'White'
GROUP BY w.Winery
ORDER BY TotalWines DESC
LIMIT 3;
```
-------------------------6589 sample_num
```sql
SELECT Grape, Winery, Year 
FROM wine 
WHERE Price > 100 
ORDER BY Year;
```
-------------------------6590 sample_num
```sql
SELECT Grape, Winery, Year 
FROM wine 
WHERE Price > 100 
ORDER BY Year;
```
-------------------------6591 sample_num
```sql
SELECT grapes.Grape, appellations.Appelation, wine.Name
FROM wine
JOIN grapes ON wine.Grape = grapes.ID
JOIN appellations ON wine.Appelation = appellations.No
WHERE wine.Score > 93
ORDER BY wine.Name;
```
-------------------------6592 sample_num
```sql
SELECT grapes.Grape, appellations.Appelation, wine.Name
FROM wine
JOIN grapes ON wine.Grape = grapes.ID
JOIN appellations ON wine.Appelation = appellations.No
WHERE wine.Score > 93
ORDER BY wine.Name;
```
-------------------------6593 sample_num
```sql
SELECT DISTINCT Appelation 
FROM wine 
WHERE Year > 2008 
AND Appelation NOT IN (
    SELECT Appelation 
    FROM appellations 
    WHERE Area = 'Central Coast'
);
```
-------------------------6594 sample_num
```sql
SELECT DISTINCT Appelation 
FROM wine 
WHERE Year > 2008 AND Appelation NOT IN (
    SELECT Appelation 
    FROM appellations 
    WHERE Area = 'Central Coast'
);
```
-------------------------6595 sample_num
```sql
SELECT AVG(Price) 
FROM wine 
WHERE Appelation NOT IN (SELECT Appelation FROM appellations WHERE County = 'Sonoma');
```
-------------------------6596 sample_num
```sql
SELECT AVG(Price) 
FROM wine 
WHERE State = (SELECT State FROM appellations WHERE County <> 'Sonoma');
```
However, for better performance, it should be written as:
```sql
SELECT AVG(Price) 
FROM wine 
WHERE County NOT IN (SELECT County FROM appellations WHERE County = 'Sonoma') AND State IN (SELECT State FROM appellations WHERE County <> 'Sonoma');
```
Note: The second query assumes that there's a one-to-one relationship between Appelation and County in the 'appellations' table. If this isn't the case, you may need to adjust the logic accordingly.
-------------------------6597 sample_num
```sql
SELECT T2.County 
FROM wine AS T1 
JOIN appellations AS T2 
ON T1.Appelation = T2.Appelation 
WHERE T1.Score > 90 
GROUP BY T2.County 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6598 sample_num
```sql
SELECT T2.County 
FROM wine AS T1 
JOIN appellations AS T2 
ON T1.Appelation = T2.Appelation 
WHERE T1.Score > 90 
GROUP BY T2.County 
ORDER BY COUNT(*) DESC 
LIMIT 1
```
-------------------------6599 sample_num
```sql
SELECT COUNT(*) FROM station
```
-------------------------6600 sample_num
```sql
SELECT Name, Location, Number_of_Platforms FROM station;
```
-------------------------6601 sample_num
```sql
SELECT DISTINCT Location FROM station;
```
-------------------------6602 sample_num
```sql
SELECT Name, Total_Passengers 
FROM station 
WHERE Location != 'London';
```
-------------------------6603 sample_num
```sql
SELECT Name, Main_Services 
FROM station 
ORDER BY Total_Passengers DESC 
LIMIT 3;
```
-------------------------6604 sample_num
```sql
SELECT AVG(Total_Passengers) AS Average_Passengers, MAX(Total_Passengers) AS Max_Passengers 
FROM station 
WHERE Location = 'London' OR Location = 'Glasgow';
```
-------------------------6605 sample_num
```sql
SELECT Location, SUM(Number_of_Platforms) AS Total_platforms, SUM(Total_Passengers) AS Total_passengers
FROM station
GROUP BY Location;
```
-------------------------6606 sample_num
```sql
SELECT DISTINCT s.Location 
FROM station s
JOIN train_station ts ON s.Station_ID = ts.Station_ID
WHERE s.Number_of_Platforms >= 15 AND s.Total_Passengers > 25;
```
-------------------------6607 sample_num
```sql
SELECT Location 
FROM station 
WHERE Station_ID NOT IN (
    SELECT Station_ID 
    FROM train_station 
    WHERE Train_ID IN (
        SELECT Train_ID 
        FROM train
    )
) AND Number_of_Platforms < 15
``` 
Note: This query might not give the expected result due to misunderstanding of the relation between tables. A more accurate query would require understanding of how the 'train_station' table links the 'station' and 'train' tables regarding the number of platforms.
However, if we assume that 'Number_of_Platforms' is a property of 'station' table and not of 'train', the correct query should be:

```sql
SELECT Location 
FROM station 
WHERE Number_of_Platforms < 15
``` 
This will return all stations with less than 15 platforms, regardless of whether they have trains or not. If you specifically want stations without any trains, then the subquery part would be used. But then it wouldn't take into account the number of platforms. It's a bit ambiguous based on your initial request. Please clarify if possible.
```
-------------------------6608 sample_num
```sql
SELECT Location, COUNT(Station_ID) as Num_Stations
FROM station
GROUP BY Location
ORDER BY Num_Stations DESC
LIMIT 1;
```
-------------------------6609 sample_num
```sql
SELECT T2.Name, T2.Time, T2.Service 
FROM train_station AS T1 
JOIN train AS T2 
ON T1.Train_ID = T2.Train_ID;
```
-------------------------6610 sample_num
```sql
SELECT COUNT(*) FROM train;
```
-------------------------6611 sample_num
```sql
SELECT T2.Name, T2.Service 
FROM train_station AS T1 
JOIN train AS T2 
ON T1.Train_ID = T2.Train_ID 
ORDER BY T2.Time;
```
-------------------------6612 sample_num
```sql
SELECT s.Name, COUNT(ts.Train_ID) as Num_of_Trains
FROM station s
JOIN train_station ts ON s.Station_ID = ts.Station_ID
GROUP BY s.Station_ID;
```
-------------------------6613 sample_num
```sql
SELECT T2.Name AS Train_Name, S1.Name AS Station_Name 
FROM train_station AS T1 
JOIN station AS S1 ON T1.Station_ID = S1.Station_ID 
JOIN train AS T2 ON T1.Train_ID = T2.Train_ID;
```
-------------------------6614 sample_num
```sql
SELECT train.Name, train.Time 
FROM train 
JOIN train_station ON train.Train_ID = train_station.Train_ID 
JOIN station ON station.Station_ID = train_station.Station_ID 
WHERE station.Location = 'London' 
ORDER BY train.Time DESC;
```
-------------------------6615 sample_num
```sql
SELECT s.Name
FROM station s
JOIN train_station ts ON s.Station_ID = ts.Station_ID
GROUP BY s.Name
ORDER BY COUNT(ts.Train_ID) DESC
LIMIT 1;
```
-------------------------6616 sample_num
```sql
SELECT s.Name 
FROM station s
JOIN train_station ts ON s.Station_ID = ts.Station_ID
GROUP BY s.Name
HAVING COUNT(ts.Train_ID) >= 2;
```
-------------------------6617 sample_num
```sql
SELECT Location 
FROM station 
GROUP BY Location 
HAVING COUNT(Station_ID) = 1;
```
-------------------------6618 sample_num
```sql
SELECT Name 
FROM station 
WHERE Station_ID NOT IN (SELECT Station_ID FROM train_station)
```
-------------------------6619 sample_num
```sql
SELECT s.Name 
FROM station s 
JOIN train_station ts1 ON s.Station_ID = ts1.Station_ID 
JOIN train t1 ON ts1.Train_ID = t1.Train_ID 
WHERE t1.Name = 'Ananthapuri Express' 
INTERSECT 
SELECT s.Name 
FROM station s 
JOIN train_station ts2 ON s.Station_ID = ts2.Station_ID 
JOIN train t2 ON ts2.Train_ID = t2.Train_ID 
WHERE t2.Name = 'Guruvayur Express';
```
-------------------------6620 sample_num
```sql
SELECT t.Name 
FROM train t
LEFT JOIN train_station ts ON t.Train_ID = ts.Train_ID
LEFT JOIN station s ON ts.Station_ID = s.Station_ID
WHERE s.Location != 'London' AND t.Train_ID NOT IN (SELECT Train_ID FROM train_station WHERE Station_ID IN (SELECT Station_ID FROM station WHERE Location = 'London'))
```
-------------------------6621 sample_num
```sql
SELECT Name, Location 
FROM station 
ORDER BY Annual_entry_exit, Annual_interchanges;
```
-------------------------6622 sample_num
```sql
SELECT vehicle_id FROM Vehicles;
```
-------------------------6623 sample_num
```sql
SELECT vehicle_id FROM Vehicles;
```
-------------------------6624 sample_num
```sql
SELECT COUNT(*) FROM Vehicles;
```
-------------------------6625 sample_num
```sql
SELECT COUNT(*) FROM Vehicles;
```
-------------------------6626 sample_num
```sql
SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;
```
-------------------------6627 sample_num
```sql
SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;
```
-------------------------6628 sample_num
```sql
SELECT first_name, middle_name, last_name FROM Staff;
```
-------------------------6629 sample_num
```sql
SELECT first_name, middle_name, last_name FROM Staff;
```
-------------------------6630 sample_num
```sql
SELECT date_of_birth FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';
```
-------------------------6631 sample_num
```sql
SELECT date_of_birth 
FROM Staff 
WHERE first_name = 'Janessa' AND last_name = 'Sawayn';
```
-------------------------6632 sample_num
```sql
SELECT date_joined_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';
```
-------------------------6633 sample_num
```sql
SELECT date_joined_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';
```
-------------------------6634 sample_num
```sql
SELECT date_left_staff 
FROM Staff 
WHERE first_name = 'Janessa' AND last_name = 'Sawayn';
```
-------------------------6635 sample_num
```sql
SELECT date_left_staff FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';
```
-------------------------6636 sample_num
```sql
SELECT COUNT(*) FROM Staff WHERE first_name = 'Ludie';
```
-------------------------6637 sample_num
```sql
SELECT COUNT(*) FROM Staff WHERE first_name = 'Ludie';
```
-------------------------6638 sample_num
```sql
SELECT nickname FROM Staff WHERE first_name = 'Janessa' AND last_name = 'Sawayn';
```
-------------------------6639 sample_num
```sql
SELECT nickname 
FROM Staff 
WHERE first_name = 'Janessa' AND last_name = 'Sawayn';
```
-------------------------6640 sample_num
```sql
SELECT COUNT(*) FROM Staff;
```
-------------------------6641 sample_num
```sql
SELECT COUNT(*) FROM Staff;
```
-------------------------6642 sample_num
```sql
SELECT A.city 
FROM Addresses A
JOIN Staff S ON A.address_id = S.staff_address_id
WHERE S.first_name = 'Janessa' AND S.last_name = 'Sawayn';
```
-------------------------6643 sample_num
```sql
SELECT Addresses.city 
FROM Addresses 
JOIN Customers ON Addresses.address_id = Customers.customer_address_id 
WHERE Customers.first_name = 'Janessa' AND Customers.last_name = 'Sawayn';
```
-------------------------6644 sample_num
```sql
SELECT A.country, A.state_province_county 
FROM Addresses A
JOIN Staff S ON A.address_id = S.staff_address_id
WHERE S.first_name = 'Janessa' AND S.last_name = 'Sawayn';
```
-------------------------6645 sample_num
```sql
SELECT A.country, A.state_province_county 
FROM Addresses A
JOIN Customers C ON A.address_id = C.customer_address_id
WHERE C.first_name = 'Janessa' AND C.last_name = 'Sawayn';
```
-------------------------6646 sample_num
```sql
SELECT SUM(T2.lesson_time) 
FROM Customers AS T1 
JOIN Lessons AS T2 ON T1.customer_id = T2.customer_id 
WHERE T1.first_name = 'Rylan' AND T1.last_name = 'Goodwin';
```
-------------------------6647 sample_num
```sql
SELECT SUM(T2.lesson_time) 
FROM Customers AS T1 
JOIN Lessons AS T2 ON T1.customer_id = T2.customer_id 
WHERE T1.first_name = 'Rylan' AND T1.last_name = 'Goodwin';
```
-------------------------6648 sample_num
```sql
SELECT Addresses.zip_postcode 
FROM Addresses 
JOIN Staff ON Addresses.address_id = Staff.staff_address_id 
WHERE Staff.first_name = 'Janessa' AND Staff.last_name = 'Sawayn';
```
-------------------------6649 sample_num
```sql
SELECT Addresses.zip_postcode 
FROM Addresses 
JOIN Staff ON Addresses.address_id = Staff.staff_address_id 
WHERE Staff.first_name = 'Janessa' AND Staff.last_name = 'Sawayn';
```
-------------------------6650 sample_num
```sql
SELECT COUNT(*) 
FROM Staff 
JOIN Addresses ON Staff.staff_address_id = Addresses.address_id 
WHERE Addresses.state_province_county = 'Georgia';
```
-------------------------6651 sample_num
```sql
SELECT COUNT(*) 
FROM Staff 
JOIN Addresses ON Staff.staff_address_id = Addresses.address_id 
WHERE Addresses.state_province_county = 'Georgia';
```
-------------------------6652 sample_num
```sql
SELECT first_name, last_name 
FROM Staff 
JOIN Addresses ON Staff.staff_address_id = Addresses.address_id 
WHERE Addresses.city = 'Damianfort';
```
-------------------------6653 sample_num
```sql
SELECT first_name, last_name 
FROM Staff 
JOIN Addresses ON Staff.staff_address_id = Addresses.address_id 
WHERE Addresses.city = 'Damianfort';
```
-------------------------6654 sample_num
```sql
SELECT Addresses.city, COUNT(Staff.staff_id) AS NumOfStaffs
FROM Addresses JOIN Staff ON Addresses.address_id = Staff.staff_address_id
GROUP BY Addresses.city
ORDER BY NumOfStaffs DESC
LIMIT 1;
```
-------------------------6655 sample_num
```sql
SELECT Addresses.city, COUNT(*) as num_employees
FROM Staff
JOIN Addresses ON Staff.staff_address_id = Addresses.address_id
GROUP BY Addresses.city
ORDER BY num_employees DESC
LIMIT 1;
```
-------------------------6656 sample_num
```sql
SELECT T1.state_province_county 
FROM Addresses AS T1 
JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id 
GROUP BY T1.state_province_county 
HAVING COUNT(T2.staff_id) BETWEEN 2 AND 4;
```
-------------------------6657 sample_num
```sql
SELECT 
    T1.state_province_county AS State_Name,
    COUNT(T2.staff_id) AS Employee_Count
FROM 
    Addresses AS T1
INNER JOIN 
    Staff AS T2 ON T1.address_id = T2.staff_address_id
GROUP BY 
    T1.state_province_county
HAVING 
    COUNT(T2.staff_id) BETWEEN 2 AND 4;
```
-------------------------6658 sample_num
```sql
SELECT first_name, last_name 
FROM Customers;
```
-------------------------6659 sample_num
```sql
SELECT first_name, last_name FROM Customers;
```
-------------------------6660 sample_num
```sql
SELECT email_address, date_of_birth 
FROM Customers 
WHERE first_name = 'Carole';
```
-------------------------6661 sample_num
```sql
SELECT email_address, date_of_birth 
FROM Customers 
WHERE first_name = 'Carole';
```
-------------------------6662 sample_num
```sql
SELECT phone_number, email_address 
FROM Customers 
WHERE amount_outstanding > 2000;
```
-------------------------6663 sample_num
```sql
SELECT phone_number, email_address 
FROM Customers 
WHERE amount_outstanding > 2000;
```
-------------------------6664 sample_num
```sql
SELECT customer_status_code, cell_mobile_phone_number, email_address 
FROM Customers 
WHERE last_name = 'Kohler' OR first_name = 'Marina';
```
-------------------------6665 sample_num
```sql
SELECT customer_status_code, phone_number, email_address 
FROM Customers 
WHERE last_name = 'Kohler' OR first_name = 'Marina';
```
-------------------------6666 sample_num
```sql
SELECT Customers.date_of_birth 
FROM Customers 
WHERE Customers.customer_status_code = 'Good Customer';
```
-------------------------6667 sample_num
```sql
SELECT date_of_birth 
FROM Customers 
WHERE customer_status_code = 'Good Customer';
```
-------------------------6668 sample_num
```sql
SELECT date_became_customer 
FROM Customers 
WHERE first_name = 'Carole' AND last_name = 'Bernhard';
```
-------------------------6669 sample_num
```sql
SELECT date_became_customer 
FROM Customers 
WHERE first_name = 'Carole' AND last_name = 'Bernhard';
```
-------------------------6670 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------6671 sample_num
```sql
SELECT COUNT(*) FROM Customers;
```
-------------------------6672 sample_num
```sql
SELECT customer_status_code, COUNT(*) as num_customers
FROM Customers
GROUP BY customer_status_code;
```
-------------------------6673 sample_num
```sql
SELECT customer_status_code, COUNT(*) 
FROM Customers 
GROUP BY customer_status_code;
```
-------------------------6674 sample_num
```sql
SELECT customer_status_code, COUNT(*) as num_customers
FROM Customers
GROUP BY customer_status_code
ORDER BY num_customers ASC
LIMIT 1;
```
-------------------------6675 sample_num
```sql
SELECT customer_status_code 
FROM Customers 
GROUP BY customer_status_code 
ORDER BY COUNT(customer_id) 
LIMIT 1;
```
-------------------------6676 sample_num
```sql
SELECT COUNT(*) 
FROM Lessons 
JOIN Customers ON Lessons.customer_id = Customers.customer_id 
WHERE Customers.first_name = 'Rylan' 
AND Customers.last_name = 'Goodwin' 
AND Lessons.lesson_status_code = 'completed';
```
-------------------------6677 sample_num
```sql
SELECT COUNT(*) 
FROM Lessons 
JOIN Customers ON Lessons.customer_id = Customers.customer_id 
WHERE Customers.first_name = 'Ryan' AND Customers.last_name = 'Goodwin' AND Lessons.lesson_status_code = 'completed';
```
-------------------------6678 sample_num
```sql
SELECT MAX(amount_outstanding) AS Maximum, MIN(amount_outstanding) AS Minimum, AVG(amount_outstanding) AS Average 
FROM Customers;
```
-------------------------6679 sample_num
```sql
SELECT MAX(amount_outstanding) AS Maximum, MIN(amount_outstanding) AS Minimum, AVG(amount_outstanding) AS Average 
FROM Customers;
```
-------------------------6680 sample_num
```sql
SELECT first_name, last_name 
FROM Customers 
WHERE amount_outstanding BETWEEN 1000 AND 3000;
```
-------------------------6681 sample_num
```sql
SELECT first_name, last_name 
FROM Customers 
WHERE amount_outstanding BETWEEN 1000 AND 3000;
```
-------------------------6682 sample_num
```sql
SELECT Customers.first_name, Customers.last_name 
FROM Customers 
JOIN Addresses ON Customers.customer_address_id = Addresses.address_id 
WHERE Addresses.city = 'Lockmanfurt';
```
-------------------------6683 sample_num
```sql
SELECT Customers.first_name, Customers.last_name 
FROM Customers 
JOIN Addresses ON Customers.customer_address_id = Addresses.address_id 
WHERE Addresses.city = 'Lockmanfurt';
```
-------------------------6684 sample_num
```sql
SELECT Addresses.country 
FROM Addresses 
JOIN Customers ON Addresses.address_id = Customers.customer_address_id 
WHERE Customers.first_name = 'Carole' AND Customers.last_name = 'Bernhard';
```
-------------------------6685 sample_num
```sql
SELECT Addresses.country 
FROM Addresses 
JOIN Customers ON Addresses.address_id = Customers.customer_address_id 
WHERE Customers.first_name = 'Carole' AND Customers.last_name = 'Bernhard';
```
-------------------------6686 sample_num
```sql
SELECT Addresses.zip_postcode 
FROM Addresses 
JOIN Customers ON Addresses.address_id = Customers.customer_address_id 
WHERE Customers.first_name = 'Carole' AND Customers.last_name = 'Bernhard';
```
-------------------------6687 sample_num
```sql
SELECT Addresses.zip_postcode 
FROM Addresses 
JOIN Customers ON Addresses.address_id = Customers.customer_address_id 
WHERE Customers.first_name = 'Carole' AND Customers.last_name = 'Bernhard';
```
-------------------------6688 sample_num
```sql
SELECT T2.city, COUNT(*) AS num_customers 
FROM Customers AS T1 
JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id 
GROUP BY T2.city 
ORDER BY num_customers DESC 
LIMIT 1;
```
-------------------------6689 sample_num
```sql
SELECT Addresses.city, COUNT(Customers.customer_id) AS num_customers
FROM Addresses
JOIN Customers ON Addresses.address_id = Customers.customer_address_id
GROUP BY Addresses.city
ORDER BY num_customers DESC
LIMIT 1;
```
-------------------------6690 sample_num
```sql
SELECT SUM(amount_payment) 
FROM Customer_Payments 
JOIN Customers ON Customer_Payments.customer_id = Customers.customer_id 
WHERE Customers.first_name = 'Carole' AND Customers.last_name = 'Bernhard';
```
-------------------------6691 sample_num
```sql
SELECT SUM(amount_payment) 
FROM Customer_Payments 
JOIN Customers ON Customer_Payments.customer_id = Customers.customer_id 
WHERE Customers.first_name = 'Carole' AND Customers.last_name = 'Bernhard';
```
-------------------------6692 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payments);
```
-------------------------6693 sample_num
```sql
SELECT COUNT(*) 
FROM Customers 
WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payments);
```
-------------------------6694 sample_num
```sql
SELECT C.first_name, C.last_name 
FROM Customers C
JOIN Customer_Payments CP ON C.customer_id = CP.customer_id
GROUP BY C.customer_id, C.first_name, C.last_name
HAVING COUNT(CP.payment_method_code) > 2;
```
-------------------------6695 sample_num
```sql
SELECT first_name, last_name 
FROM Customers 
WHERE customer_id IN (
    SELECT customer_id 
    FROM Customer_Payments 
    GROUP BY customer_id 
    HAVING COUNT(*) > 2
);
```
-------------------------6696 sample_num
```sql
SELECT payment_method_code, COUNT(*) as number_of_payments
FROM Customer_Payments
GROUP BY payment_method_code;
```
-------------------------6697 sample_num
```sql
SELECT payment_method_code, COUNT(*) 
FROM Customer_Payments 
GROUP BY payment_method_code;
```
-------------------------6698 sample_num
```sql
SELECT COUNT(*) 
FROM Lessons 
WHERE lesson_status_code = 'cancelled';
```
-------------------------6699 sample_num
```sql
SELECT COUNT(*) 
FROM Lessons 
WHERE lesson_status_code = 'Cancelled';
```
-------------------------6700 sample_num
```sql
SELECT l.lesson_id 
FROM Lessons l 
JOIN Staff s ON l.staff_id = s.staff_id 
WHERE s.first_name = 'Janessa' AND s.last_name = 'Sawayn' AND s.nickname LIKE '%s%';
```
-------------------------6701 sample_num
```sql
SELECT L.lesson_id 
FROM Lessons L
JOIN Staff S ON L.staff_id = S.staff_id 
WHERE S.nickname LIKE '%s%' AND S.first_name = 'Janessa' AND S.last_name = 'Sawayn';
```
-------------------------6702 sample_num
```sql
SELECT COUNT(*) 
FROM Lessons 
JOIN Staff ON Lessons.staff_id = Staff.staff_id 
WHERE Staff.first_name LIKE '%a%';
```
-------------------------6703 sample_num
```sql
SELECT COUNT(*) 
FROM Lessons 
JOIN Staff ON Lessons.staff_id = Staff.staff_id 
WHERE Staff.first_name LIKE '%a%';
```
-------------------------6704 sample_num
```sql
SELECT SUM(T2.lesson_time) 
FROM Staff AS T1 
JOIN Lessons AS T2 ON T1.staff_id = T2.staff_id 
WHERE T1.first_name = 'Janessa' AND T1.last_name = 'Sawayn';
```
-------------------------6705 sample_num
```sql
SELECT SUM(lesson_time) 
FROM Lessons 
JOIN Staff ON Lessons.staff_id = Staff.staff_id 
WHERE Staff.first_name = 'Janessa' AND Staff.last_name = 'Sawayn';
```
Note: This assumes that `lesson_time` is stored in a manner that can be summed to represent total time (e.g., in minutes or hours). If `lesson_time` is stored as a timestamp or datetime, additional processing would be required.
-------------------------6706 sample_num
```sql
SELECT AVG(L.price) 
FROM Lessons L 
JOIN Staff S ON L.staff_id = S.staff_id 
WHERE S.first_name = 'Janessa' AND S.last_name = 'Sawayn';
```
-------------------------6707 sample_num
```sql
SELECT AVG(L.price) 
FROM Lessons L 
JOIN Staff S ON L.staff_id = S.staff_id 
WHERE S.first_name = 'Janessa' AND S.last_name = 'Sawayn';
```
-------------------------6708 sample_num
```sql
SELECT COUNT(*) 
FROM Lessons 
WHERE customer_id = (SELECT customer_id FROM Customers WHERE first_name = 'Ray');
```
-------------------------6709 sample_num
```sql
SELECT COUNT(*) 
FROM Lessons 
WHERE customer_id = (SELECT customer_id FROM Customers WHERE first_name = 'Ray')
```
```
-------------------------6710 sample_num
```sql
SELECT 
    last_name
FROM 
    Customers
WHERE 
    last_name IN (SELECT last_name FROM Staff)
INTERSECT
SELECT 
    last_name
FROM 
    Staff
WHERE 
    last_name IN (SELECT last_name FROM Customers);
```
However, a more efficient way to write this would be:
```sql
SELECT DISTINCT 
    last_name
FROM 
    Staff
WHERE 
    last_name IN (SELECT last_name FROM Customers);
```
-------------------------6711 sample_num
```sql
SELECT DISTINCT last_name 
FROM Customers 
UNION 
SELECT DISTINCT last_name 
FROM Staff;
```
-------------------------6712 sample_num
```sql
SELECT first_name 
FROM Staff 
WHERE staff_id NOT IN (SELECT staff_id FROM Lessons)
```
```
-------------------------6713 sample_num
```sql
SELECT DISTINCT s.first_name 
FROM Staff s
LEFT JOIN Lessons l ON s.staff_id = l.staff_id
WHERE l.staff_id IS NULL;
```
-------------------------6714 sample_num
```sql
SELECT V.vehicle_id, V.vehicle_details
FROM Vehicles V
JOIN Lessons L ON V.vehicle_id = L.vehicle_id
GROUP BY V.vehicle_id, V.vehicle_details
ORDER BY COUNT(*) DESC
LIMIT 1;
```
-------------------------6715 sample_num
```sql
SELECT COUNT(*) FROM Faculty;
```
-------------------------6716 sample_num
```sql
SELECT COUNT(*) FROM Faculty;
```
-------------------------6717 sample_num
```sql
SELECT DISTINCT Rank FROM Faculty;
```
-------------------------6718 sample_num
```sql
SELECT DISTINCT Rank FROM Faculty;
```
-------------------------6719 sample_num
```sql
SELECT DISTINCT Building FROM Faculty;
```
-------------------------6720 sample_num
```sql
SELECT DISTINCT Building FROM Faculty
```
-------------------------6721 sample_num
```sql
SELECT Rank, Fname, Lname FROM Faculty;
```
-------------------------6722 sample_num
```sql
SELECT Rank, Fname, Lname FROM Faculty;
```
-------------------------6723 sample_num
```sql
SELECT Fname, Lname, Phone 
FROM Faculty 
WHERE Sex = 'F';
```
-------------------------6724 sample_num
```sql
SELECT Fname, Lname, Phone 
FROM Faculty 
WHERE Sex = 'F';
```
-------------------------6725 sample_num
```sql
SELECT FacID FROM Faculty WHERE Sex = 'M';
```
-------------------------6726 sample_num
```sql
SELECT FacID FROM Faculty WHERE Sex = 'M';
```
-------------------------6727 sample_num
```sql
SELECT COUNT(*) FROM Faculty WHERE Sex = 'F' AND Rank = 'Professor';
```
-------------------------6728 sample_num
```sql
SELECT COUNT(*) 
FROM Faculty 
WHERE Sex = 'F' AND Rank = 'Professor';
```
-------------------------6729 sample_num
```sql
SELECT Phone, Room, Building 
FROM Faculty 
WHERE Fname = 'Jerry' AND Lname = 'Prince';
```
-------------------------6730 sample_num
```sql
SELECT Phone, Room, Building 
FROM Faculty 
WHERE Fname = 'Jerry' AND Lname = 'Prince';
```
-------------------------6731 sample_num
```sql
SELECT COUNT(*) 
FROM Faculty 
WHERE Rank = 'Professor' AND Building = 'NEB';
```
-------------------------6732 sample_num
```sql
SELECT COUNT(*) 
FROM Faculty 
WHERE Rank = 'Professor' AND Building = 'NEB';
```
-------------------------6733 sample_num
```sql
SELECT Fname, Lname FROM Faculty WHERE Rank = 'Instructor';
```
-------------------------6734 sample_num
```sql
SELECT Fname, Lname FROM Faculty WHERE Rank = 'Instructor';
```
-------------------------6735 sample_num
```sql
SELECT Building, COUNT(FacID) 
FROM Faculty 
GROUP BY Building;
```
-------------------------6736 sample_num
```sql
SELECT Building, COUNT(*) 
FROM Faculty 
GROUP BY Building;
```
-------------------------6737 sample_num
```sql
SELECT Building, COUNT(*) AS FacultyCount 
FROM Faculty 
GROUP BY Building 
ORDER BY FacultyCount DESC 
LIMIT 1;
```
-------------------------6738 sample_num
```sql
SELECT Building 
FROM Faculty 
GROUP BY Building 
ORDER BY COUNT(FacID) DESC 
LIMIT 1;
```
-------------------------6739 sample_num
```sql
SELECT Building 
FROM Faculty 
GROUP BY Building 
HAVING COUNT(Building) >= 10;
```
-------------------------6740 sample_num
```sql
SELECT Building 
FROM Faculty 
GROUP BY Building 
HAVING COUNT(*) >= 10;
```
-------------------------6741 sample_num
```sql
SELECT Rank, COUNT(*) 
FROM Faculty 
GROUP BY Rank;
```
-------------------------6742 sample_num
```sql
SELECT Rank, COUNT(*) 
FROM Faculty 
GROUP BY Rank;
```
-------------------------6743 sample_num
```sql
SELECT Rank, Sex, COUNT(*) 
FROM Faculty 
GROUP BY Rank, Sex;
```
```sql
SELECT Rank, COUNT(*), SUM(CASE WHEN Sex = 'F' THEN 1 ELSE 0 END) as Female, SUM(CASE WHEN Sex = 'M' THEN 1 ELSE 0 END) as Male
FROM Faculty 
GROUP BY Rank;
```
-------------------------6744 sample_num
```sql
SELECT Rank, Sex, COUNT(*) 
FROM Faculty 
GROUP BY Rank, Sex;
```
-------------------------6745 sample_num
```sql
SELECT Rank 
FROM Faculty 
GROUP BY Rank 
ORDER BY COUNT(*) 
LIMIT 1;
```
-------------------------6746 sample_num
```sql
SELECT Rank 
FROM Faculty 
GROUP BY Rank 
ORDER BY COUNT(FacID) 
LIMIT 1;
```
-------------------------6747 sample_num
```sql
SELECT Sex, COUNT(*) AS Count 
FROM Faculty 
WHERE Rank = 'Assistant Professor' 
GROUP BY Sex;
```
-------------------------6748 sample_num
```sql
SELECT Sex, COUNT(*) AS Count 
FROM Faculty 
WHERE Rank = 'Assistant Professor' 
GROUP BY Sex;
```
-------------------------6749 sample_num
```sql
SELECT T1.Fname, T1.Lname 
FROM Faculty AS T1 
JOIN Student AS T2 ON T1.FacID = T2.Advisor 
WHERE T2.Fname = 'Linda' AND T2.Lname = 'Smith';
```
-------------------------6750 sample_num
```sql
SELECT Advisor 
FROM Student 
WHERE Fname = 'Linda' AND LName = 'Smith';
```
Note: This assumes that the 'Advisor' field in the Student table directly stores the advisor's full name. If it stores an ID linking to the Faculty table, the query would need to be adjusted accordingly. Here's an example if 'Advisor' is a foreign key (let's say 'FacID'):

```sql
SELECT Fname, Lname 
FROM Faculty 
WHERE FacID = (SELECT Advisor FROM Student WHERE Fname = 'Linda' AND LName = 'Smith');
```
-------------------------6751 sample_num
```sql
SELECT s.StuID 
FROM Student s
JOIN Faculty f ON s.Advisor = f.FacID
WHERE f.Rank = 'Professor';
```
-------------------------6752 sample_num
```sql
SELECT S.StuID 
FROM Student S
JOIN Faculty F ON S.Advisor = F.FacID;
```
-------------------------6753 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S
JOIN Faculty F ON S.Advisor = F.FacID
WHERE F.Fname = 'Michael' AND F.Lname = 'Goodrich';
```
-------------------------6754 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S
JOIN Faculty F ON S.Advisor = F.FacID
WHERE F.Fname = 'Michael' AND F.Lname = 'Goodrich';
```
-------------------------6755 sample_num
```sql
SELECT Faculty.FacID, COUNT(Student.StuID) as NumberOfStudentsAdvised
FROM Faculty
LEFT JOIN Student ON Faculty.FacID = Student.Advisor
GROUP BY Faculty.FacID;
```
-------------------------6756 sample_num
```sql
SELECT f.FacID, COUNT(s.StuID) AS NumberOfStudents
FROM Faculty f
LEFT JOIN Student s ON f.FacID = s.Advisor
GROUP BY f.FacID;
```
-------------------------6757 sample_num
```sql
SELECT Faculty.Rank, COUNT(Student.StuID) AS NumberOfStudentsAdvised
FROM Faculty
JOIN Student ON Faculty.FacID = Student.Advisor
GROUP BY Faculty.Rank;
```
-------------------------6758 sample_num
```sql
SELECT f.Rank, COUNT(s.StuID) AS NumberOfStudents
FROM Faculty f
JOIN Student s ON f.FacID = s.Advisor
GROUP BY f.Rank;
```
-------------------------6759 sample_num
```sql
SELECT Fname, Lname 
FROM Faculty 
WHERE FacID = (
    SELECT Advisor 
    FROM Student 
    GROUP BY Advisor 
    ORDER BY COUNT(*) DESC 
    LIMIT 1
)
```
-------------------------6760 sample_num
```sql
SELECT f.Fname, f.Lname
FROM Faculty f
JOIN Student s ON f.FacID = s.Advisor
GROUP BY f.FacID, f.Fname, f.Lname
ORDER BY COUNT(s.StuID) DESC
LIMIT 1;
```
-------------------------6761 sample_num
```sql
SELECT FacID 
FROM Faculty 
WHERE FacID IN (
    SELECT Advisor 
    FROM Student 
    GROUP BY Advisor 
    HAVING COUNT(*) >= 2
);
```
-------------------------6762 sample_num
```sql
SELECT Advisor
FROM Student
GROUP BY Advisor
HAVING COUNT(*) >= 2
```
However, this query will give you the student's advisor id who has two or more students, but since the advisor id is also a student id, it might not directly give you the faculty ids. To get the faculty ids, you might have to join with the faculty table. But as per your instruction, I am providing a direct answer based on the given tables. The correct query would look something like this:

```sql
SELECT t2.FacID
FROM Student t1 
JOIN Faculty t2 ON t1.Advisor = t2.FacID
GROUP BY t2.FacID
HAVING COUNT(*) >= 2
```
-------------------------6763 sample_num
```sql
SELECT FacID FROM Faculty WHERE FacID NOT IN (SELECT Advisor FROM Student)
```
-------------------------6764 sample_num
```sql
SELECT FacID 
FROM Faculty 
WHERE FacID NOT IN (SELECT Advisor FROM Student)
```
-------------------------6765 sample_num
```sql
SELECT activity_name FROM Activity;
```
-------------------------6766 sample_num
```sql
SELECT activity_name FROM activity_1.Activity;
```
-------------------------6767 sample_num
```sql
SELECT COUNT(*) FROM Activity;
```
-------------------------6768 sample_num
```sql
SELECT COUNT(*) FROM Activity
```
-------------------------6769 sample_num
```sql
SELECT COUNT(*) 
FROM Faculty_Participates_in
```
```
-------------------------6770 sample_num
```sql
SELECT COUNT(*) 
FROM Faculty_Participates_in
```
```
-------------------------6771 sample_num
```sql
SELECT FacID 
FROM Faculty 
WHERE FacID NOT IN (SELECT FacID FROM Faculty_Participates_in)
```
-------------------------6772 sample_num
```sql
SELECT FacID FROM Faculty WHERE FacID NOT IN (SELECT FacID FROM Faculty_Participates_in)
```
-------------------------6773 sample_num
```sql
SELECT DISTINCT F.FacID 
FROM Faculty AS F
JOIN Faculty_Participates_in AS FP ON F.FacID = FP.FacID
JOIN Student AS S ON F.FacID = S.Advisor
```
-------------------------6774 sample_num
```sql
SELECT FacID 
FROM Faculty_Participates_in 
WHERE FacID IN (SELECT Advisor FROM Student);
```
-------------------------6775 sample_num
```sql
SELECT COUNT(*) 
FROM Participates_in 
JOIN Activity ON Participates_in.actid = Activity.actid 
JOIN Student ON Participates_in.stuid = Student.StuID 
WHERE Student.Fname = 'Mark' AND Student.LName = 'Giuliano';
```
-------------------------6776 sample_num
```sql
SELECT COUNT(*) 
FROM Activity A 
JOIN Participates_in P ON A.actid = P.actid 
JOIN Student S ON P.stuid = S.StuID 
WHERE S.Fname = 'Mark' AND S.LName = 'Giuliano';
```

OR

```sql
SELECT COUNT(*) 
FROM Activity A 
JOIN Faculty_Participates_in FP ON A.actid = FP.actid 
JOIN Faculty F ON FP.FacID = F.FacID 
WHERE F.Fname = 'Mark' AND F.Lname = 'Giuliano';
```
Depending on whether Mark Giuliano is a student or faculty member.
-------------------------6777 sample_num
```sql
SELECT Activity.activity_name 
FROM Activity 
JOIN Participates_in ON Activity.actid = Participates_in.actid 
JOIN Student ON Participates_in.stuid = Student.StuID 
WHERE Student.Fname = 'Mark' AND Student.LName = 'Giuliano';
```
-------------------------6778 sample_num
```sql
SELECT Activity.activity_name 
FROM Activity 
JOIN Participates_in ON Activity.actid = Participates_in.actid 
JOIN Student ON Participates_in.stuid = Student.StuID 
WHERE Student.Fname = 'Mark' AND Student.LName = 'Giuliano';
```
If Mark Giuliano is a faculty member, then the query should be:
```sql
SELECT Activity.activity_name 
FROM Activity 
JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid 
JOIN Faculty ON Faculty_Participates_in.FacID = Faculty.FacID 
WHERE Faculty.Fname = 'Mark' AND Faculty.Lname = 'Giuliano';
```
-------------------------6779 sample_num
```sql
SELECT f.Fname, f.Lname, COUNT(fac_act.actid) AS num_activities
FROM Faculty f
JOIN Faculty_Participates_in fac_act ON f.FacID = fac_act.FacID
GROUP BY f.FacID, f.Fname, f.Lname
```
-------------------------6780 sample_num
```sql
SELECT f.Fname, f.Lname, COUNT(fac_act.actid) AS num_activities
FROM Faculty f
JOIN Faculty_Participates_in fac_act ON f.FacID = fac_act.FacID
GROUP BY f.FacID, f.Fname, f.Lname
HAVING COUNT(fac_act.actid) >= 1;
```
-------------------------6781 sample_num
```sql
SELECT Activity.activity_name, COUNT(Faculty_Participates_in.FacID) AS Faculty_Count 
FROM Activity 
LEFT JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid 
GROUP BY Activity.activity_name;
```
-------------------------6782 sample_num
```sql
SELECT A.activity_name, COUNT(FP.FacID) 
FROM Activity A 
JOIN Faculty_Participates_in FP ON A.actid = FP.actid 
GROUP BY A.activity_name;
```
-------------------------6783 sample_num
```sql
SELECT Fname, Lname 
FROM Faculty 
WHERE FacID IN (
    SELECT FacID 
    FROM (
        SELECT FacID, COUNT(actid) as activity_count 
        FROM Faculty_Participates_in 
        GROUP BY FacID 
        ORDER BY activity_count DESC 
        LIMIT 1
    ) AS subquery
)
```
-------------------------6784 sample_num
```sql
SELECT Fname, Lname 
FROM Faculty 
WHERE FacID = (
    SELECT FacID 
    FROM Faculty_Participates_in 
    GROUP BY FacID 
    ORDER BY COUNT(actid) DESC 
    LIMIT 1
)
```
-------------------------6785 sample_num
```sql
SELECT A.activity_name 
FROM Activity A
JOIN Faculty_Participates_in FPI ON A.actid = FPI.actid
GROUP BY A.actid
ORDER BY COUNT(FPI.FacID) DESC
LIMIT 1;
```
-------------------------6786 sample_num
```sql
SELECT A.activity_name 
FROM Activity A
JOIN Faculty_Participates_in FPI ON A.actid = FPI.actid
GROUP BY A.actid, A.activity_name
ORDER BY COUNT(FPI.FacID) DESC
LIMIT 1;
```
-------------------------6787 sample_num
```sql
SELECT StuID 
FROM Student 
WHERE StuID NOT IN (SELECT stuid FROM Participates_in)
```
-------------------------6788 sample_num
```sql
SELECT StuID FROM Student 
WHERE StuID NOT IN (SELECT stuid FROM Participates_in)
```
-------------------------6789 sample_num
```sql
SELECT S.StuID 
FROM Student S 
JOIN Participates_in P ON S.StuID = P.StuID 
WHERE S.Age < 20;
```
-------------------------6790 sample_num
```sql
SELECT s.StuID 
FROM Student s 
JOIN Participates_in p ON s.StuID = p.StuID 
WHERE s.Age < 20 
GROUP BY s.StuID 
HAVING COUNT(p.actid) >= 1;
```
-------------------------6791 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S
JOIN Participates_in P ON S.StuID = P.StuID
GROUP BY P.StuID, S.Fname, S.LName
ORDER BY COUNT(P.actid) DESC
LIMIT 1;
```
-------------------------6792 sample_num
```sql
SELECT S.Fname, S.LName
FROM Student S
JOIN Participates_in P ON S.StuID = P.StuID
GROUP BY P.StuID, S.Fname, S.LName
ORDER BY COUNT(P.actid) DESC
LIMIT 1;
```
-------------------------6793 sample_num
```sql
SELECT A.activity_name 
FROM Activity A
JOIN Participates_in P ON A.actid = P.actid
GROUP BY A.activity_name
ORDER BY COUNT(P.stuid) DESC
LIMIT 1;
```
-------------------------6794 sample_num
```sql
SELECT A.activity_name 
FROM Activity A
JOIN Participates_in P ON A.actid = P.actid
GROUP BY A.activity_name
ORDER BY COUNT(P.stuid) DESC
LIMIT 1;
```
-------------------------6795 sample_num
```sql
SELECT DISTINCT Fname 
FROM Faculty 
WHERE FacID IN (
    SELECT FacID 
    FROM Faculty_Participates_in 
    WHERE actid IN (
        SELECT actid 
        FROM Activity 
        WHERE activity_name IN ('Canoeing', 'Kayaking')
    )
);
```
-------------------------6796 sample_num
```sql
SELECT DISTINCT Faculty.Fname 
FROM Faculty 
JOIN Faculty_Participates_in ON Faculty.FacID = Faculty_Participates_in.FacID 
JOIN Activity ON Activity.actid = Faculty_Participates_in.actid 
WHERE Activity.activity_name IN ('Canoeing', 'Kayaking');
```
-------------------------6797 sample_num
```sql
SELECT Fname 
FROM Faculty 
WHERE FacID NOT IN (
    SELECT FacID 
    FROM Faculty_Participates_in 
    JOIN Activity ON Faculty_Participates_in.actid = Activity.actid 
    WHERE activity_name = 'Canoeing' OR activity_name = 'Kayaking'
);
```
-------------------------6798 sample_num
```sql
SELECT DISTINCT Fname 
FROM Faculty 
WHERE FacID NOT IN (
    SELECT FacID 
    FROM Faculty_Participates_in 
    JOIN Activity ON Faculty_Participates_in.actid = Activity.actid 
    WHERE activity_name = 'Canoeing' OR activity_name = 'Kayaking'
)
```
-------------------------6799 sample_num
```sql
SELECT T3.Fname 
FROM Activity AS T1 
JOIN Faculty_Participates_in AS T2 ON T1.actid = T2.actid 
JOIN Faculty AS T3 ON T2.FacID = T3.FacID 
WHERE T1.activity_name IN ('Canoeing', 'Kayaking')
```
-------------------------6800 sample_num
```sql
SELECT T1.Fname 
FROM Faculty AS T1 
JOIN Faculty_Participates_in AS T2 ON T1.FacID = T2.FacID 
JOIN Activity AS T3 ON T2.actid = T3.actid 
WHERE T3.activity_name IN ('Canoeing', 'Kayaking') 
GROUP BY T1.Fname 
HAVING COUNT(DISTINCT T3.activity_name) = 2;
```
-------------------------6801 sample_num
```sql
SELECT s.StuID 
FROM Student s 
JOIN Participates_in p ON s.StuID = p.StuID 
JOIN Activity a ON p.actid = a.actid 
WHERE a.activity_name IN ('Canoeing', 'Kayaking')
GROUP BY s.StuID 
HAVING COUNT(DISTINCT a.activity_name) = 2;
```
-------------------------6802 sample_num
```sql
SELECT stuid 
FROM Participates_in 
WHERE actid IN (
    SELECT actid 
    FROM Activity 
    WHERE activity_name IN ('Canoeing', 'Kayaking')
)
GROUP BY stuid 
HAVING COUNT(DISTINCT activity_name) = 2;
```
-------------------------6803 sample_num
```sql
SELECT name FROM airports WHERE city = 'Goroka';
```
-------------------------6804 sample_num
```sql
SELECT name FROM airports WHERE city = 'Goroka';
```
-------------------------6805 sample_num
```sql
SELECT name, city, country, elevation 
FROM airports 
WHERE city = 'New York';
```
-------------------------6806 sample_num
```sql
SELECT name, city, country, elevation 
FROM airports 
WHERE city = 'New York';
```
-------------------------6807 sample_num
```sql
SELECT COUNT(*) FROM airlines;
```
-------------------------6808 sample_num
```sql
SELECT COUNT(*) FROM airlines;
```
-------------------------6809 sample_num
```sql
SELECT COUNT(*) FROM airlines WHERE country = 'Russia';
```
-------------------------6810 sample_num
```sql
SELECT COUNT(*) FROM airlines WHERE country = 'Russia';
```
-------------------------6811 sample_num
```sql
SELECT MAX(elevation) FROM airports WHERE country = 'Iceland'
```
-------------------------6812 sample_num
```sql
SELECT MAX(elevation) FROM airports WHERE country = 'Iceland';
```
-------------------------6813 sample_num
```sql
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina';
```
-------------------------6814 sample_num
```sql
SELECT name FROM airports WHERE country = 'Cuba' OR country = 'Argentina';
```
-------------------------6815 sample_num
```sql
SELECT T2.country FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name LIKE 'Orbit%';
```
-------------------------6816 sample_num
```sql
SELECT T2.country FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name LIKE 'Orbit%';
```
-------------------------6817 sample_num
```sql
SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50;
```
-------------------------6818 sample_num
```sql
SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50;
```
-------------------------6819 sample_num
```sql
SELECT T1.country FROM airports AS T1 WHERE T1.elevation = (SELECT MAX(elevation) FROM airports)
```
-------------------------6820 sample_num
```sql
SELECT T1.country FROM airports AS T1 WHERE T1.elevation = (SELECT MAX(elevation) FROM airports)
```
-------------------------6821 sample_num
```sql
SELECT COUNT(*) 
FROM airports 
WHERE name LIKE '%International%';
```
-------------------------6822 sample_num
```sql
SELECT COUNT(*) 
FROM airports 
WHERE name LIKE '%Interanation%';
```
-------------------------6823 sample_num
```sql
SELECT COUNT(DISTINCT T1.city) 
FROM airports AS T1 
WHERE T1.country = 'Greenland';
```
-------------------------6824 sample_num
```sql
SELECT COUNT(DISTINCT city) 
FROM airports 
WHERE country = 'Greenland';
```
-------------------------6825 sample_num
```sql
SELECT COUNT(*) FROM routes WHERE airline = 'American Airlines';
```
-------------------------6826 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
WHERE alid = (SELECT alid FROM airlines WHERE name = 'American Airlines');
```
-------------------------6827 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
JOIN airports ON routes.dst_apid = airports.apid 
WHERE airports.country = 'Canada';
```
-------------------------6828 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
JOIN airports ON routes.dst_apid = airports.apid 
WHERE airports.country = 'Canada';
```
-------------------------6829 sample_num
```sql
SELECT name, city, country 
FROM airports 
ORDER BY elevation 
LIMIT 1;
```
-------------------------6830 sample_num
```sql
SELECT name, city, country 
FROM airports 
WHERE elevation = (SELECT MIN(elevation) FROM airports);
```
-------------------------6831 sample_num
```sql
SELECT name, city, country 
FROM airports 
WHERE y = (SELECT MAX(y) FROM airports);
```
-------------------------6832 sample_num
```sql
SELECT name, city, country 
FROM airports 
ORDER BY elevation DESC 
LIMIT 1;
```
-------------------------6833 sample_num
```sql
SELECT T1.name, T1.city 
FROM airports AS T1 
JOIN routes AS T2 
ON T1.apid = T2.dst_apid 
GROUP BY T1.apid 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6834 sample_num
```sql
SELECT T1.name, T1.city FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T1.apid ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------6835 sample_num
```sql
SELECT T2.name, COUNT(*) AS route_count 
FROM flight_4.routes AS T1 
JOIN flight_4.airlines AS T2 ON T1.alid = T2.alid 
GROUP BY T1.alid 
ORDER BY route_count DESC 
LIMIT 10;
```
-------------------------6836 sample_num
```sql
SELECT T2.name FROM (
SELECT alid, COUNT(*) AS route_count FROM flight_4.routes 
GROUP BY alid 
ORDER BY route_count DESC 
LIMIT 10) AS T1 
JOIN flight_4.airlines AS T2 ON T1.alid = T2.alid;
```
-------------------------6837 sample_num
```sql
SELECT T1.name, T1.city 
FROM airports AS T1 
JOIN routes AS T2 
ON T1.apid = T2.src_apid 
GROUP BY T1.apid 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6838 sample_num
```sql
SELECT T1.name, T1.city FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------6839 sample_num
```sql
SELECT COUNT(DISTINCT T2.apid)
FROM routes AS T1
JOIN airports AS T2 ON T1.dst_apid = T2.apid
JOIN airlines AS T3 ON T1.alid = T3.alid
WHERE T3.name = 'American Airlines'
```
-------------------------6840 sample_num
```sql
SELECT COUNT(DISTINCT r.dst_apid) 
FROM routes r 
JOIN airlines a ON r.alid = a.alid 
WHERE a.name = 'American Airlines';
```
-------------------------6841 sample_num
```sql
SELECT country, COUNT(*) AS num_airlines
FROM airlines
GROUP BY country
ORDER BY num_airlines DESC
LIMIT 1;
```
-------------------------6842 sample_num
```sql
SELECT T2.country, COUNT(*) AS num 
FROM airlines AS T1 
JOIN countries AS T2 ON T1.country = T2.code 
GROUP BY T2.country 
ORDER BY num DESC 
LIMIT 1;
```
Note: The above SQL query assumes there is a 'countries' table which is not mentioned in the question. If there's no such table and the country codes are used directly without a separate table, the query should be modified accordingly. Here is an alternative version of the query that does not require a 'countries' table:
```sql
SELECT T1.country, COUNT(*) AS num 
FROM airlines AS T1 
GROUP BY T1.country 
ORDER BY num DESC 
LIMIT 1;
```
-------------------------6843 sample_num
```sql
SELECT T1.country, COUNT(*) AS num_airlines 
FROM airlines AS T1 
WHERE T1.active = 'Y' 
GROUP BY T1.country 
ORDER BY num_airlines DESC 
LIMIT 1;
```
-------------------------6844 sample_num
```sql
SELECT T1.country, COUNT(*) AS num_airlines 
FROM airlines AS T1 
WHERE T1.active = 'Y' 
GROUP BY T1.country 
ORDER BY num_airlines DESC;
```
-------------------------6845 sample_num
```sql
SELECT T.country, COUNT(*) AS num_airlines
FROM airlines AS T
GROUP BY T.country
ORDER BY num_airlines DESC;
```
-------------------------6846 sample_num
```sql
SELECT a.country, COUNT(*) as num_airlines
FROM airlines a
GROUP BY a.country
ORDER BY num_airlines DESC;
```
-------------------------6847 sample_num
```sql
SELECT country, COUNT(*) AS num_airports 
FROM airports 
GROUP BY country 
ORDER BY num_airports DESC;
```
-------------------------6848 sample_num
```sql
SELECT country, COUNT(*) AS num_airports
FROM airports
GROUP BY country
ORDER BY num_airports DESC;
```
-------------------------6849 sample_num
```sql
SELECT city, COUNT(*) as num_airports 
FROM airports 
WHERE country = 'United States' 
GROUP BY city 
ORDER BY num_airports DESC;
```
-------------------------6850 sample_num
```sql
SELECT city, COUNT(*) as num_airports
FROM airports
WHERE country = 'United States'
GROUP BY city
ORDER BY num_airports DESC;
```
-------------------------6851 sample_num
```sql
SELECT city 
FROM airports 
WHERE country = 'United States' 
GROUP BY city 
HAVING COUNT(*) > 3;
```
-------------------------6852 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT city
  FROM airports
  WHERE country = 'United States'
  GROUP BY city
  HAVING COUNT(apid) > 3
) AS result;
```
-------------------------6853 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT city 
  FROM airports 
  GROUP BY city 
  HAVING COUNT(apid) > 3
) AS result;
```
-------------------------6854 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT city 
  FROM airports 
  GROUP BY city 
  HAVING COUNT(apid) > 3
) AS result;
```
-------------------------6855 sample_num
```sql
SELECT city, COUNT(apid) AS num_airports
FROM airports
GROUP BY city
HAVING COUNT(apid) > 1;
```
-------------------------6856 sample_num
```sql
SELECT T1.city, COUNT(T1.apid) AS count 
FROM airports AS T1 
GROUP BY T1.city 
HAVING COUNT(T1.apid) > 1;
```
-------------------------6857 sample_num
```sql
SELECT city, COUNT(*) as airport_count
FROM airports
GROUP BY city
HAVING COUNT(*) > 2
ORDER BY airport_count DESC;
```
-------------------------6858 sample_num
```sql
SELECT city, COUNT(*) as num_airports
FROM airports
GROUP BY city
HAVING num_airports > 2
ORDER BY num_airports DESC;
```
-------------------------6859 sample_num
```sql
SELECT COUNT(r.rid) AS num_routes, a.name AS airport_name 
FROM routes r 
JOIN airports a ON r.src_apid = a.apid 
GROUP BY r.src_apid, a.name;
```
-------------------------6860 sample_num
```sql
SELECT airports.name, COUNT(routes.rid) 
FROM routes 
JOIN airports ON routes.src_apid = airports.apid 
GROUP BY airports.name;
```
-------------------------6861 sample_num
```sql
SELECT COUNT(r.rid) AS num_routes, a.name AS airport_name 
FROM routes r 
JOIN airports a ON r.src_apid = a.apid 
GROUP BY r.src_apid, a.name 
ORDER BY num_routes DESC;
```
-------------------------6862 sample_num
```sql
SELECT a.name, COUNT(r.rid) AS num_routes
FROM airports a
JOIN routes r ON a.apid = r.src_apid
GROUP BY a.name
ORDER BY num_routes DESC;
```
-------------------------6863 sample_num
```sql
SELECT AVG(elevation) as avg_elevation, country 
FROM airports 
GROUP BY country;
```
-------------------------6864 sample_num
```sql
SELECT AVG(elevation), country 
FROM airports 
GROUP BY country;
```
-------------------------6865 sample_num
```sql
SELECT city 
FROM airports 
GROUP BY city 
HAVING COUNT(*) = 2;
```
-------------------------6866 sample_num
```sql
SELECT city 
FROM airports 
GROUP BY city 
HAVING COUNT(*) = 2;
```
-------------------------6867 sample_num
```sql
SELECT airlines.country, airlines.name, COUNT(routes.rid) AS num_routes
FROM routes
JOIN airlines ON routes.alid = airlines.alid
GROUP BY airlines.country, airlines.name;
```
-------------------------6868 sample_num
```sql
SELECT COUNT(r.rid) AS total_routes, a.country, al.name 
FROM routes r 
JOIN airlines al ON r.alid = al.alid 
JOIN airports a ON r.src_apid = a.apid OR r.dst_apid = a.apid 
GROUP BY a.country, al.name;
```
-------------------------6869 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy');
```
-------------------------6870 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Italy');
```
-------------------------6871 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
JOIN airports ON routes.dst_apid = airports.apid 
JOIN airlines ON routes.alid = airlines.alid 
WHERE airports.country = 'Italy' AND airlines.name = 'American Airlines';
```
-------------------------6872 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
JOIN airlines ON routes.alid = airlines.alid 
JOIN airports ON routes.dst_apid = airports.apid 
WHERE airlines.name = 'American Airlines' AND airports.country = 'Italy';
```
-------------------------6873 sample_num
```sql
SELECT COUNT(*) FROM routes WHERE dst_ap = 'John F Kennedy International Airport';
``` 

However, this assumes that 'John F Kennedy International Airport' is directly written in the dst_ap field. A more robust query would be:

```sql
SELECT COUNT(*) 
FROM routes 
JOIN airports ON routes.dst_apid = airports.apid 
WHERE airports.name = 'John F Kennedy International Airport';
```
-------------------------6874 sample_num
```sql
SELECT COUNT(*) FROM routes WHERE dst_apid = (SELECT apid FROM airports WHERE name = 'John F Kennedy International Airport')
```
-------------------------6875 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
JOIN airports AS src ON routes.src_apid = src.apid 
JOIN airports AS dst ON routes.dst_apid = dst.apid 
WHERE src.country = 'United States' AND dst.country = 'Canada';
```
-------------------------6876 sample_num
```sql
SELECT COUNT(*) 
FROM routes 
JOIN airports AS src ON routes.src_apid = src.apid 
JOIN airports AS dst ON routes.dst_apid = dst.apid 
WHERE src.country = 'United States' AND dst.country = 'Canada';
```
-------------------------6877 sample_num
```sql
SELECT rid FROM routes WHERE src_apid IN (SELECT apid FROM airports WHERE country = 'United States') AND dst_apid IN (SELECT apid FROM airports WHERE country = 'United States');
```
-------------------------6878 sample_num
```sql
SELECT rid FROM routes WHERE src_apid IN (SELECT apid FROM airports WHERE country = 'United States') AND dst_apid IN (SELECT apid FROM airports WHERE country = 'United States');
```
-------------------------6879 sample_num
```sql
SELECT T2.name FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------6880 sample_num
```sql
SELECT T2.name FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------6881 sample_num
```sql
SELECT T1.name AS airport_name, COUNT(T2.rid) AS route_count
FROM airports AS T1
JOIN routes AS T2 ON T1.apid = T2.src_apid
WHERE T1.country = 'China'
GROUP BY T2.src_apid
ORDER BY route_count DESC
LIMIT 1;
```
-------------------------6882 sample_num
```sql
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------6883 sample_num
```sql
SELECT a.name 
FROM airports a
JOIN (
    SELECT dst_apid, COUNT(*) as route_count
    FROM routes 
    WHERE dst_apid IN (
        SELECT apid 
        FROM airports 
        WHERE country = 'China'
    )
    GROUP BY dst_apid
    ORDER BY route_count DESC
    LIMIT 1
) r ON a.apid = r.dst_apid;
```
-------------------------6884 sample_num
```sql
SELECT T1.name 
FROM airports AS T1 
JOIN routes AS T2 ON T1.apid = T2.dst_apid 
WHERE T2.src_apid IN (SELECT apid FROM airports WHERE country = 'China') 
GROUP BY T1.name 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6885 sample_num
```sql
SELECT order_id FROM Orders ORDER BY date_order_placed DESC LIMIT 1;
```
-------------------------6886 sample_num
```sql
SELECT order_id FROM Orders ORDER BY date_order_placed DESC LIMIT 1;
```
-------------------------6887 sample_num
```sql
SELECT order_id, customer_id 
FROM Orders 
WHERE date_order_placed = (SELECT MIN(date_order_placed) FROM Orders);
```
-------------------------6888 sample_num
```sql
SELECT order_id, customer_id 
FROM Orders 
ORDER BY date_order_placed 
LIMIT 1;
```
-------------------------6889 sample_num
```sql
SELECT order_id FROM Shipments WHERE shipment_tracking_number = '3452';
```
-------------------------6890 sample_num
```sql
SELECT order_id FROM Shipments WHERE shipment_tracking_number = '3452';
```
-------------------------6891 sample_num
```sql
SELECT order_item_id FROM Order_Items WHERE product_id = 11;
```
-------------------------6892 sample_num
```sql
SELECT order_item_id 
FROM Order_Items 
WHERE product_id = 11;
```
-------------------------6893 sample_num
```sql
SELECT DISTINCT c.customer_name 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
WHERE o.order_status = 'Packing';
```
-------------------------6894 sample_num
```sql
SELECT DISTINCT c.customer_name 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
WHERE o.order_status = 'Packing';
```
-------------------------6895 sample_num
```sql
SELECT DISTINCT c.customer_details 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
WHERE o.order_status = 'On Road';
```
-------------------------6896 sample_num
```sql
SELECT DISTINCT c.customer_details
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
WHERE o.order_status = 'On Road';
```
-------------------------6897 sample_num
```sql
SELECT C.customer_name 
FROM Customers C 
JOIN Orders O ON C.customer_id = O.customer_id 
GROUP BY C.customer_name 
ORDER BY COUNT(O.order_id) DESC 
LIMIT 1;
```
-------------------------6898 sample_num
```sql
SELECT c.customer_name 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id 
GROUP BY c.customer_name
ORDER BY COUNT(o.order_id) DESC 
LIMIT 1;
```
-------------------------6899 sample_num
```sql
SELECT Customers.customer_id 
FROM Customers
JOIN Orders ON Customers.customer_id = Orders.customer_id
GROUP BY Customers.customer_id
ORDER BY COUNT(Orders.order_id) DESC
LIMIT 1;
```
-------------------------6900 sample_num
```sql
SELECT c.customer_id 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY COUNT(o.order_id) DESC
LIMIT 1;
```
-------------------------6901 sample_num
```sql
SELECT Orders.order_id, Orders.order_status 
FROM Orders 
JOIN Customers ON Orders.customer_id = Customers.customer_id 
WHERE Customers.customer_name = 'Jeramie';
```
-------------------------6902 sample_num
```sql
SELECT Orders.order_id, Orders.order_status 
FROM Orders 
JOIN Customers ON Orders.customer_id = Customers.customer_id 
WHERE Customers.customer_name = 'Jeramie';
```
-------------------------6903 sample_num
```sql
SELECT Orders.date_order_placed 
FROM Orders 
JOIN Customers ON Orders.customer_id = Customers.customer_id 
WHERE Customers.customer_name = 'Jeramie';
```
-------------------------6904 sample_num
```sql
SELECT Orders.date_order_placed 
FROM Orders 
JOIN Customers ON Orders.customer_id = Customers.customer_id 
WHERE Customers.customer_name = 'Jeramie';
```
-------------------------6905 sample_num
```sql
SELECT DISTINCT c.customer_name 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
WHERE o.date_order_placed BETWEEN '2009-01-01' AND '2010-01-01';
```
-------------------------6906 sample_num
```sql
SELECT DISTINCT c.customer_name 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
WHERE o.date_order_placed BETWEEN '2009-01-01' AND '2010-01-01';
```
-------------------------6907 sample_num
```sql
SELECT DISTINCT oi.product_id 
FROM Order_Items oi 
JOIN Orders o ON oi.order_id = o.order_id 
WHERE o.date_order_placed BETWEEN '1975-01-01' AND '1976-01-01';
```
-------------------------6908 sample_num
```sql
SELECT DISTINCT oi.product_id 
FROM Order_Items oi 
JOIN Orders o ON oi.order_id = o.order_id 
WHERE o.date_order_placed BETWEEN '1975-01-01' AND '1976-01-01';
```
-------------------------6909 sample_num
```sql
SELECT c.customer_name 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id 
WHERE o.order_status IN ('On Road', 'Shipped')
GROUP BY c.customer_name
HAVING COUNT(DISTINCT o.order_status) = 2
```
```
-------------------------6910 sample_num
```sql
SELECT c.customer_name 
FROM Customers c
JOIN Orders o1 ON c.customer_id = o1.customer_id
JOIN Orders o2 ON c.customer_id = o2.customer_id
WHERE o1.order_status = 'On Road' 
AND o2.order_status = 'Shipped'
GROUP BY c.customer_name
HAVING COUNT(DISTINCT o1.order_status) > 0 
AND COUNT(DISTINCT o2.order_status) > 0;
```
-------------------------6911 sample_num
```sql
SELECT c.customer_id 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id 
WHERE o.order_status = 'On Road'
INTERSECT
SELECT c.customer_id 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id 
WHERE o.order_status = 'Shipped';
```
-------------------------6912 sample_num
```sql
SELECT c.customer_id 
FROM Customers c
JOIN Orders o1 ON c.customer_id = o1.customer_id
JOIN Orders o2 ON c.customer_id = o2.customer_id
WHERE o1.order_status = 'On Road' 
AND o2.order_status = 'Shipped'
GROUP BY c.customer_id
HAVING COUNT(DISTINCT o1.order_status) = 1 
AND COUNT(DISTINCT o2.order_status) = 1;
```
-------------------------6913 sample_num
```sql
SELECT date_order_placed 
FROM Orders 
JOIN Shipments ON Orders.order_id = Shipments.order_id 
WHERE shipment_tracking_number = 3452;
```
-------------------------6914 sample_num
```sql
SELECT date_order_placed 
FROM Orders 
JOIN Shipments ON Orders.order_id = Shipments.order_id 
WHERE shipment_tracking_number = 3452;
```
-------------------------6915 sample_num
```sql
SELECT date_order_placed 
FROM Orders 
WHERE order_id = (SELECT order_id FROM Invoices WHERE invoice_number = 10);
```
-------------------------6916 sample_num
```sql
SELECT date_order_placed 
FROM Orders 
WHERE order_id = (SELECT order_id FROM Invoices WHERE invoice_number = 10);
```
-------------------------6917 sample_num
```sql
SELECT COUNT(*) AS product_count, product_id 
FROM Order_Items 
GROUP BY product_id;
```
-------------------------6918 sample_num
```sql
SELECT p.product_id, COUNT(oi.order_item_id) AS num_ordered
FROM Products p
JOIN Order_Items oi ON p.product_id = oi.product_id
GROUP BY p.product_id;
```
-------------------------6919 sample_num
```sql
SELECT p.product_name, COUNT(oi.order_item_id) AS product_count
FROM Products p
JOIN Order_Items oi ON p.product_id = oi.product_id
GROUP BY p.product_name;
```
-------------------------6920 sample_num
```sql
SELECT p.product_name, COUNT(oi.order_item_id) AS number_of_times_ordered
FROM Products p
JOIN Order_Items oi ON p.product_id = oi.product_id
GROUP BY p.product_name;
```
-------------------------6921 sample_num
```sql
SELECT DISTINCT o.order_id
FROM Orders o
JOIN Shipments s ON o.order_id = s.order_id
WHERE s.shipment_date > '2000-01-01';
```
-------------------------6922 sample_num
```sql
SELECT DISTINCT o.order_id
FROM Orders o
JOIN Shipments s ON o.order_id = s.order_id
WHERE s.shipment_date > '2000-01-01';
```
-------------------------6923 sample_num
```sql
SELECT order_id 
FROM Shipments 
WHERE shipment_date = (SELECT MAX(shipment_date) FROM Shipments);
```
-------------------------6924 sample_num
```sql
SELECT o.order_id
FROM Orders o
JOIN Shipments s ON o.order_id = s.order_id
WHERE s.shipment_date = (SELECT MAX(shipment_date) FROM Shipments)
```
-------------------------6925 sample_num
```sql
SELECT DISTINCT product_name 
FROM Products 
ORDER BY product_name ASC;
```
-------------------------6926 sample_num
```sql
SELECT DISTINCT product_name 
FROM Products 
ORDER BY product_name ASC;
```
-------------------------6927 sample_num
```sql
SELECT DISTINCT order_id FROM Orders ORDER BY date_order_placed;
```
-------------------------6928 sample_num
```sql
SELECT DISTINCT order_id 
FROM Orders 
ORDER BY date_order_placed;
```
-------------------------6929 sample_num
```sql
SELECT order_id, COUNT(order_item_id) as item_count 
FROM Order_Items 
GROUP BY order_id 
ORDER BY item_count DESC 
LIMIT 1;
```
-------------------------6930 sample_num
```sql
SELECT order_id, COUNT(order_item_id) as item_count 
FROM Order_Items 
GROUP BY order_id 
ORDER BY item_count DESC 
LIMIT 1;
```
-------------------------6931 sample_num
```sql
SELECT C.customer_name 
FROM Customers C 
JOIN Orders O ON C.customer_id = O.customer_id 
GROUP BY C.customer_name 
ORDER BY COUNT(O.order_id) DESC 
LIMIT 1;
```
-------------------------6932 sample_num
```sql
SELECT C.customer_name, COUNT(O.order_id) as order_count
FROM Customers C
JOIN Orders O ON C.customer_id = O.customer_id
GROUP BY C.customer_name
ORDER BY order_count DESC
LIMIT 1;
```
-------------------------6933 sample_num
```sql
SELECT invoice_number 
FROM Invoices 
WHERE invoice_date < '1989-09-03' OR invoice_date > '2007-12-25';
```
-------------------------6934 sample_num
```sql
SELECT invoice_number 
FROM Invoices 
WHERE invoice_date < '1989-09-03' OR invoice_date > '2007-12-25';
```
-------------------------6935 sample_num
```sql
SELECT DISTINCT invoice_details 
FROM Invoices 
WHERE invoice_date < '1989-09-03' OR invoice_date > '2007-12-25';
```
-------------------------6936 sample_num
```sql
SELECT DISTINCT invoice_details 
FROM Invoices 
WHERE invoice_date < '1989-09-03' OR invoice_date > '2007-12-25';
```
-------------------------6937 sample_num
```sql
SELECT c.customer_name, COUNT(o.order_id) as num_orders
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_name
HAVING COUNT(o.order_id) >= 2;
```
-------------------------6938 sample_num
```sql
SELECT c.customer_name, COUNT(o.order_id) as num_orders
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.customer_name
HAVING COUNT(o.order_id) >= 2;
```
-------------------------6939 sample_num
```sql
SELECT c.customer_name
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.customer_name
HAVING COUNT(o.order_id) <= 2;
```
-------------------------6940 sample_num
```sql
SELECT c.customer_name
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.customer_name
HAVING COUNT(o.order_id) <= 2;
```
-------------------------6941 sample_num
```sql
SELECT DISTINCT c.customer_name
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
JOIN Order_Items oi ON o.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
WHERE p.product_name = 'food';
```
-------------------------6942 sample_num
```sql
SELECT DISTINCT c.customer_name
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
JOIN Order_Items oi ON o.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
WHERE p.product_name = 'food'
```
```
-------------------------6943 sample_num
```sql
SELECT DISTINCT c.customer_name 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
JOIN Order_Items oi ON o.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
WHERE oi.order_item_status = 'Cancel' AND p.product_name = 'food';
```
-------------------------6944 sample_num
```sql
SELECT DISTINCT c.customer_name 
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
JOIN Order_Items oi ON o.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
WHERE oi.order_item_status = 'Cancel' AND p.product_name = 'food';
```
-------------------------6945 sample_num
```sql
SELECT COUNT(*) FROM architect WHERE gender = 'female';
```
-------------------------6946 sample_num
```sql
SELECT name, nationality, id 
FROM architect 
WHERE gender = 'male' 
ORDER BY name;
```
-------------------------6947 sample_num
```sql
SELECT MAX(b.length_meters), a.name 
FROM architect a 
JOIN bridge b ON a.id = b.architect_id 
GROUP BY a.name;
```
-------------------------6948 sample_num
```sql
SELECT AVG(length_feet) FROM bridge;
```
-------------------------6949 sample_num
```sql
SELECT name, built_year 
FROM mill 
WHERE type = 'Grondzeiler';
```
-------------------------6950 sample_num
```sql
SELECT DISTINCT a.name, a.nationality 
FROM architect a
JOIN mill m ON a.id = m.architect_id;
```
-------------------------6951 sample_num
```sql
SELECT name FROM mill WHERE location != 'Donceel';
```
-------------------------6952 sample_num
```sql
SELECT DISTINCT m.type 
FROM mill m 
JOIN architect a ON m.architect_id = a.id 
WHERE a.nationality IN ('American', 'Canadian');
```
-------------------------6953 sample_num
```sql
SELECT a.id, a.name 
FROM architect a
JOIN bridge b ON a.id = b.architect_id
GROUP BY a.id, a.name
HAVING COUNT(b.id) >= 3;
```
-------------------------6954 sample_num
```sql
SELECT a.id, a.name, a.nationality
FROM architect a
JOIN mill m ON a.id = m.architect_id
GROUP BY a.id, a.name, a.nationality
ORDER BY COUNT(m.id) DESC
LIMIT 1;
```
-------------------------6955 sample_num
```sql
SELECT a.id, a.name, a.gender
FROM architect a
WHERE (
  SELECT COUNT(*) 
  FROM bridge b 
  WHERE b.architect_id = a.id
) >= 2
OR (
  SELECT COUNT(*) 
  FROM mill m 
  WHERE m.architect_id = a.id
) = 1;
```
-------------------------6956 sample_num
```sql
SELECT location FROM bridge WHERE name = 'Kolob Arch' OR name = 'Rainbow Bridge';
```
-------------------------6957 sample_num
```sql
SELECT name FROM mill WHERE name LIKE '%Moulin%';
```
-------------------------6958 sample_num
```sql
SELECT DISTINCT m.name 
FROM mill m
JOIN architect a ON m.architect_id = a.id
JOIN bridge b ON b.architect_id = a.id
WHERE b.length_meters > 80;
```
-------------------------6959 sample_num
```sql
SELECT type, COUNT(*) AS count 
FROM mill 
GROUP BY type 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------6960 sample_num
```sql
SELECT COUNT(*) 
FROM architect 
WHERE id NOT IN (
    SELECT architect_id 
    FROM mill 
    WHERE built_year < 1850
);
```
-------------------------6961 sample_num
```sql
SELECT bridge.name 
FROM bridge 
JOIN architect ON bridge.architect_id = architect.id 
WHERE architect.nationality = 'American' 
ORDER BY bridge.length_feet;
```
-------------------------6962 sample_num
```sql
SELECT COUNT(*) FROM book_club;
```
-------------------------6963 sample_num
```sql
SELECT COUNT(*) FROM book_club;
```
-------------------------6964 sample_num
```sql
SELECT Book_Title, Author_or_Editor FROM book_club WHERE Year > 1989;
```
-------------------------6965 sample_num
```sql
SELECT Book_Title, Author_or_Editor FROM book_club WHERE Year > 1989;
```
-------------------------6966 sample_num
```sql
SELECT DISTINCT Publisher FROM book_club;
```
-------------------------6967 sample_num
```sql
SELECT DISTINCT Publisher FROM book_club;
```
-------------------------6968 sample_num
```sql
SELECT Year, Book_Title, Publisher 
FROM book_club 
ORDER BY Year DESC;
```
-------------------------6969 sample_num
```sql
SELECT Year, Book_Title, Publisher FROM book_club ORDER BY Year DESC;
```
-------------------------6970 sample_num
```sql
SELECT Publisher, COUNT(*) 
FROM book_club 
GROUP BY Publisher;
```
-------------------------6971 sample_num
```sql
SELECT Publisher, COUNT(*) 
FROM book_club 
GROUP BY Publisher;
```
-------------------------6972 sample_num
```sql
SELECT Publisher 
FROM book_club 
GROUP BY Publisher 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6973 sample_num
```sql
SELECT Publisher 
FROM book_club 
GROUP BY Publisher 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------6974 sample_num
```sql
SELECT Category, COUNT(*) AS NumberOfBooks
FROM book_club
GROUP BY Category;
```
-------------------------6975 sample_num
```sql
SELECT Category, COUNT(*) 
FROM book_club 
GROUP BY Category;
```
-------------------------6976 sample_num
```sql
SELECT Category 
FROM book_club 
WHERE Year > 1989 
GROUP BY Category 
HAVING COUNT(*) >= 2;
```
-------------------------6977 sample_num
```sql
SELECT Category 
FROM book_club 
WHERE Year > 1989 
GROUP BY Category 
HAVING COUNT(*) >= 2;
```
-------------------------6978 sample_num
```sql
SELECT Publisher 
FROM book_club 
WHERE Year = 1989 
INTERSECT 
SELECT Publisher 
FROM book_club 
WHERE Year = 1990;
```
-------------------------6979 sample_num
```sql
SELECT Publisher 
FROM book_club 
WHERE Year = 1989 
INTERSECT 
SELECT Publisher 
FROM book_club 
WHERE Year = 1990
```
-------------------------6980 sample_num
```sql
SELECT Publisher FROM book_club WHERE Year != 1989 GROUP BY Publisher
```
However, to get distinct publishers that don't have any books in 1989, a better way would be:
```sql
SELECT DISTINCT Publisher FROM book_club WHERE NOT EXISTS (SELECT 1 FROM book_club b WHERE b.Publisher = book_club.Publisher AND b.Year = 1989)
```
-------------------------6981 sample_num
```sql
SELECT DISTINCT Publisher FROM book_club WHERE Year != 1989 OR Year IS NOT NULL;
```
However, to get the publishers that did not publish a book in 1989 specifically, you might want to use a NOT EXISTS clause:
```sql
SELECT DISTINCT Publisher FROM book_club WHERE NOT EXISTS (SELECT * FROM book_club b2 WHERE b2.Publisher = book_club.Publisher AND b2.Year = 1989);
```
-------------------------6982 sample_num
```sql
SELECT Title, Year, Director 
FROM movie 
ORDER BY Budget_million;
```
-------------------------6983 sample_num
```sql
SELECT Title, Year, Director 
FROM movie 
ORDER BY Budget_million;
```
-------------------------6984 sample_num
```sql
SELECT COUNT(DISTINCT Director) FROM movie;
```
-------------------------6985 sample_num
```sql
SELECT COUNT(DISTINCT Director) FROM movie;
```
-------------------------6986 sample_num
```sql
SELECT Title, Director 
FROM movie 
WHERE Year <= 2000 
ORDER BY Gross_worldwide DESC 
LIMIT 1;
```
-------------------------6987 sample_num
```sql
SELECT T1.Title, T1.Director 
FROM movie AS T1 
WHERE T1.Year <= 2000 
ORDER BY T1.Gross_worldwide DESC 
LIMIT 1;
```
-------------------------6988 sample_num
```sql
SELECT Director 
FROM movie 
WHERE Year = 1999 
INTERSECT 
SELECT Director 
FROM movie 
WHERE Year = 2000;
```
-------------------------6989 sample_num
```sql
SELECT Director 
FROM movie 
WHERE Year = 1999 
INTERSECT 
SELECT Director 
FROM movie 
WHERE Year = 2000;
```
-------------------------6990 sample_num
```sql
SELECT Director FROM movie WHERE Year = 1999 OR Year = 2000;
```
-------------------------6991 sample_num
```sql
SELECT DISTINCT Director 
FROM movie 
WHERE Year IN (1999, 2000)
```
-------------------------6992 sample_num
```sql
SELECT AVG(Budget_million), MAX(Budget_million), MIN(Budget_million) 
FROM movie 
WHERE Year < 2000;
```
-------------------------6993 sample_num
```sql
SELECT AVG(Budget_million) AS Average_Budget, MAX(Budget_million) AS Maximum_Budget, MIN(Budget_million) AS Minimum_Budget 
FROM movie 
WHERE Year < 2000;
```
-------------------------6994 sample_num
```sql
SELECT DISTINCT c.Company_name 
FROM culture_company c
JOIN book_club b ON c.book_club_id = b.book_club_id 
WHERE b.Publisher = 'Alyson';
```
-------------------------6995 sample_num
```sql
SELECT DISTINCT c.Company_name 
FROM culture_company c
JOIN book_club b ON c.book_club_id = b.book_club_id 
WHERE b.Publisher = 'Alyson';
```
-------------------------6996 sample_num
```sql
SELECT T2.Title AS Movie_Title, T1.Book_Title 
FROM book_club AS T1 
JOIN culture_company AS T3 ON T1.book_club_id = T3.book_club_id 
JOIN movie AS T2 ON T2.movie_id = T3.movie_id 
WHERE T3.Incorporated_in = 'China'
```
-------------------------6997 sample_num
```sql
SELECT T2.Title AS Movie_Title, T3.Book_Title AS Book_Title 
FROM culture_company AS T1 
JOIN movie AS T2 ON T1.movie_id = T2.movie_id 
JOIN book_club AS T3 ON T1.book_club_id = T3.book_club_id 
WHERE T1.Incorporated_in = 'China'
```
-------------------------6998 sample_num
```sql
SELECT Company_name 
FROM culture_company 
JOIN movie ON culture_company.movie_id = movie.movie_id 
WHERE movie.Year = 1999;
```
-------------------------6999 sample_num
```sql
SELECT DISTINCT c.Company_name 
FROM culture_company c
JOIN movie m ON c.movie_id = m.movie_id
WHERE m.Year = 1999;
```
-------------------------7000 sample_num
```sql
SELECT COUNT(*) FROM singer;
```
-------------------------7001 sample_num
```sql
SELECT COUNT(*) FROM singer;
```
-------------------------7002 sample_num
```sql
SELECT Name, Country, Age 
FROM singer 
ORDER BY Age DESC;
```
-------------------------7003 sample_num
```sql
SELECT Name, Country, Age 
FROM singer 
ORDER BY Age DESC;
```
-------------------------7004 sample_num
```sql
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Min_Age, MAX(Age) AS Max_Age 
FROM singer 
WHERE Country = 'France';
```
-------------------------7005 sample_num
```sql
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Min_Age, MAX(Age) AS Max_Age 
FROM singer 
WHERE Country = 'France';
```
-------------------------7006 sample_num
```sql
SELECT s.Name, s.Song_Name, s.Song_release_year 
FROM singer s 
WHERE s.Age = (SELECT MIN(Age) FROM singer);
```
-------------------------7007 sample_num
```sql
SELECT T1.Name, T1.Song_release_year 
FROM singer AS T1 
WHERE T1.Age = (SELECT MIN(Age) FROM singer);
```
-------------------------7008 sample_num
```sql
SELECT DISTINCT Country 
FROM singer 
WHERE Age > 20;
```
-------------------------7009 sample_num
```sql
SELECT DISTINCT Country FROM singer WHERE Age > 20;
```
-------------------------7010 sample_num
```sql
SELECT Country, COUNT(*) AS NumberOfSingers
FROM singer
GROUP BY Country;
```
-------------------------7011 sample_num
```sql
SELECT Country, COUNT(*) 
FROM singer 
GROUP BY Country;
```
-------------------------7012 sample_num
```sql
SELECT T1.Song_Name 
FROM singer AS T1 
JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID 
WHERE T1.Age > (SELECT AVG(Age) FROM singer)
```
```
-------------------------7013 sample_num
```sql
SELECT T1.Song_Name 
FROM singer AS T1 
JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID 
WHERE T1.Age > (SELECT AVG(Age) FROM singer)
```
-------------------------7014 sample_num
```sql
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
```
-------------------------7015 sample_num
```sql
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
```
-------------------------7016 sample_num
```sql
SELECT MAX(Capacity) AS Maximum_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium;
```
-------------------------7017 sample_num
```sql
SELECT AVG(Capacity), MAX(Capacity) FROM stadium;
```
-------------------------7018 sample_num
```sql
SELECT T1.Name, T1.Capacity 
FROM stadium AS T1 
JOIN (
  SELECT Stadium_ID, MAX(Average) AS Max_Avg 
  FROM stadium
) AS T2 
ON T1.Stadium_ID = T2.Stadium_ID;
```
-------------------------7019 sample_num
```sql
SELECT T1.Name, T1.Capacity 
FROM stadium AS T1 
JOIN (
    SELECT Stadium_ID, MAX(Average) AS Max_Avg 
    FROM stadium
) AS T2 
ON T1.Stadium_ID = T2.Stadium_ID;
```
-------------------------7020 sample_num
```sql
SELECT COUNT(*) 
FROM concert 
WHERE Year IN (2014, 2015);
```
-------------------------7021 sample_num
```sql
SELECT COUNT(*) 
FROM concert 
WHERE Year IN (2014, 2015);
```
-------------------------7022 sample_num
```sql
SELECT s.Name, COUNT(c.concert_ID) 
FROM stadium s 
JOIN concert c ON s.Stadium_ID = c.Stadium_ID 
GROUP BY s.Name;
```
-------------------------7023 sample_num
```sql
SELECT Stadium_ID, COUNT(concert_ID) AS Num_Concerts 
FROM concert 
GROUP BY Stadium_ID;
```
-------------------------7024 sample_num
```sql
SELECT s.Name, s.Capacity 
FROM stadium s
JOIN concert c ON s.Stadium_ID = c.Stadium_ID 
WHERE c.Year >= 2014 
GROUP BY s.Stadium_ID 
ORDER BY COUNT(c.concert_ID) DESC 
LIMIT 1;
```
-------------------------7025 sample_num
```sql
SELECT s.Name, s.Capacity 
FROM stadium s
JOIN concert c ON s.Stadium_ID = c.Stadium_ID 
WHERE c.Year > 2013 
GROUP BY s.Stadium_ID 
ORDER BY COUNT(c.concert_ID) DESC 
LIMIT 1;
```
-------------------------7026 sample_num
```sql
SELECT Year, COUNT(*) AS Num_of_Concerts 
FROM concert 
GROUP BY Year 
ORDER BY Num_of_Concerts DESC 
LIMIT 1;
```
-------------------------7027 sample_num
```sql
SELECT Year, COUNT(*) AS Total_Concerts 
FROM concert 
GROUP BY Year 
ORDER BY Total_Concerts DESC 
LIMIT 1;
```
-------------------------7028 sample_num
```sql
SELECT Name 
FROM stadium 
WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
```
-------------------------7029 sample_num
```sql
SELECT Name 
FROM stadium 
WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
```
```
-------------------------7030 sample_num
```sql
SELECT DISTINCT s1.Country 
FROM singer s1, singer s2 
WHERE s1.Age > 40 AND s2.Age < 30 AND s1.Country = s2.Country;
```
-------------------------7031 sample_num
```sql
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
```
-------------------------7032 sample_num
```sql
SELECT Name 
FROM stadium 
WHERE Stadium_ID NOT IN (
    SELECT Stadium_ID 
    FROM concert 
    WHERE Year = 2014
);
```
-------------------------7033 sample_num
```sql
SELECT C.concert_Name, C.Theme, COUNT(SIC.Singer_ID) AS NumberOfSingers
FROM concert AS C
LEFT JOIN singer_in_concert AS SIC ON C.concert_ID = SIC.concert_ID
GROUP BY C.concert_ID;
```
-------------------------7034 sample_num
```sql
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) AS NumberOfSingers
FROM concert AS c
JOIN singer_in_concert AS sic ON c.concert_ID = sic.concert_ID
GROUP BY c.concert_ID, c.concert_Name, c.Theme;
```
-------------------------7035 sample_num
```sql
SELECT s.Name, COUNT(c.concert_ID) 
FROM singer s 
JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID 
JOIN concert c ON sic.concert_ID = c.concert_ID 
GROUP BY s.Name;
```
-------------------------7036 sample_num
```sql
SELECT s.Name, COUNT(c.concert_ID) 
FROM singer s 
JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID 
JOIN concert c ON sic.concert_ID = c.concert_ID 
GROUP BY s.Name;
```
-------------------------7037 sample_num
```sql
SELECT s.Name 
FROM singer s
JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID
JOIN concert c ON sic.concert_ID = c.concert_ID
WHERE c.Year = 2014;
```
-------------------------7038 sample_num
```sql
SELECT s.Name 
FROM singer s
JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID
JOIN concert c ON sic.concert_ID = c.concert_ID
WHERE c.Year = 2014;
```
-------------------------7039 sample_num
```sql
SELECT Name, Country 
FROM singer 
WHERE Song_Name LIKE '%Hey%';
```
-------------------------7040 sample_num
```sql
SELECT Name, Country 
FROM singer 
WHERE Song_Name LIKE '%Hey%';
```
-------------------------7041 sample_num
```sql
SELECT T1.Name, T1.Location 
FROM stadium AS T1 
JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID 
WHERE T2.Year IN (2014, 2015) 
GROUP BY T1.Stadium_ID 
HAVING COUNT(DISTINCT T2.Year) >= 2;
```
-------------------------7042 sample_num
```sql
SELECT T1.Name, T1.Location 
FROM stadium AS T1 
JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID 
WHERE T2.Year = 2014 
INTERSECT 
SELECT T1.Name, T1.Location 
FROM stadium AS T1 
JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID 
WHERE T2.Year = 2015;
```
-------------------------7043 sample_num
```sql
SELECT COUNT(*) 
FROM concert 
WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
```
-------------------------7044 sample_num
```sql
SELECT COUNT(*) 
FROM concert 
WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
```
-------------------------7045 sample_num
```sql
SELECT COUNT(*) 
FROM Pets 
WHERE weight > 10;
```
-------------------------7046 sample_num
```sql
SELECT COUNT(*) 
FROM Pets 
WHERE weight > 10;
```
-------------------------7047 sample_num
```sql
SELECT P.weight 
FROM Pets AS P 
JOIN Has_Pet AS HP ON P.PetID = HP.PetID 
WHERE P.PetType = 'dog' 
ORDER BY P.pet_age 
LIMIT 1;
```
-------------------------7048 sample_num
```sql
SELECT P.weight 
FROM Pets AS P 
JOIN Has_Pet AS HP ON P.PetID = HP.PetID 
WHERE P.PetType = 'dog' 
AND P.pet_age = (
    SELECT MIN(pet_age) 
    FROM Pets 
    WHERE PetType = 'dog'
)
```
```
-------------------------7049 sample_num
```sql
SELECT PetType, MAX(weight) 
FROM Pets 
GROUP BY PetType;
```
-------------------------7050 sample_num
```sql
SELECT PetType, MAX(weight) 
FROM Pets 
GROUP BY PetType;
```
-------------------------7051 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Pet 
JOIN Student ON Has_Pet.StuID = Student.StuID 
WHERE Student.Age > 20;
```
-------------------------7052 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Pet 
JOIN Student ON Has_Pet.StuID = Student.StuID 
WHERE Student.Age > 20;
```
-------------------------7053 sample_num
```sql
SELECT COUNT(*) 
FROM Has_Pet hp 
JOIN Student s ON hp.StuID = s.StuID 
JOIN Pets p ON hp.PetID = p.PetID 
WHERE s.Sex = 'F' AND p.PetType = 'dog';
```
-------------------------7054 sample_num
```sql
SELECT COUNT(*) 
FROM Student s 
JOIN Has_Pet hp ON s.StuID = hp.StuID 
JOIN Pets p ON hp.PetID = p.PetID 
WHERE s.Sex = 'F' AND p.PetType = 'dog';
```
-------------------------7055 sample_num
```sql
SELECT COUNT(DISTINCT PetType) FROM Pets;
```
-------------------------7056 sample_num
```sql
SELECT COUNT(DISTINCT PetType) FROM Pets;
```
-------------------------7057 sample_num
```sql
SELECT S.Fname
FROM Student S
JOIN Has_Pet HP ON S.StuID = HP.StuID
JOIN Pets P ON HP.PetID = P.PetID
WHERE P.PetType IN ('cat', 'dog');
```
-------------------------7058 sample_num
```sql
SELECT S.Fname 
FROM Student S
JOIN Has_Pet HP ON S.StuID = HP.StuID 
JOIN Pets P ON HP.PetID = P.PetID
WHERE P.PetType IN ('cat', 'dog');
```
-------------------------7059 sample_num
```sql
SELECT S.Fname 
FROM Student S
WHERE S.StuID IN (
    SELECT HP1.StuID 
    FROM Has_Pet HP1 
    JOIN Pets P1 ON HP1.PetID = P1.PetID 
    WHERE P1.PetType = 'cat'
) AND S.StuID IN (
    SELECT HP2.StuID 
    FROM Has_Pet HP2 
    JOIN Pets P2 ON HP2.PetID = P2.PetID 
    WHERE P2.PetType = 'dog'
)
```
-------------------------7060 sample_num
```sql
SELECT s.Fname
FROM Student s
JOIN Has_Pet hp1 ON s.StuID = hp1.StuID
JOIN Pets p1 ON hp1.PetID = p1.PetID
JOIN Has_Pet hp2 ON s.StuID = hp2.StuID
JOIN Pets p2 ON hp2.PetID = p2.PetID
WHERE p1.PetType = 'cat' AND p2.PetType = 'dog'
GROUP BY s.Fname;
```
-------------------------7061 sample_num
```sql
SELECT Major, Age 
FROM Student 
WHERE StuID NOT IN (
    SELECT StuID 
    FROM Has_Pet 
    JOIN Pets ON Has_Pet.PetID = Pets.PetID 
    WHERE PetType = 'cat'
);
```
-------------------------7062 sample_num
```sql
SELECT S.Major, S.Age
FROM Student S
WHERE S.StuID NOT IN (
    SELECT H.StuID
    FROM Has_Pet H
    INNER JOIN Pets P ON H.PetID = P.PetID
    WHERE P.PetType = 'cat'
);
```
-------------------------7063 sample_num
```sql
SELECT StuID 
FROM Student 
WHERE StuID NOT IN (
    SELECT StuID 
    FROM Has_Pet 
    JOIN Pets ON Has_Pet.PetID = Pets.PetID 
    WHERE PetType = 'cat'
);
```
-------------------------7064 sample_num
```sql
SELECT StuID 
FROM Student 
WHERE StuID NOT IN (
    SELECT StuID 
    FROM Has_Pet 
    JOIN Pets ON Has_Pet.PetID = Pets.PetID 
    WHERE PetType = 'cat'
)
```
-------------------------7065 sample_num
```sql
SELECT S.Fname, S.Age 
FROM Student S 
JOIN Has_Pet HP ON S.StuID = HP.StuID 
JOIN Pets P ON HP.PetID = P.PetID 
WHERE P.PetType = 'dog' 
AND NOT EXISTS (SELECT 1 FROM Has_Pet HP2 JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE HP2.StuID = S.StuID AND P2.PetType = 'cat');
```
-------------------------7066 sample_num
```sql
SELECT S.Fname 
FROM Student S 
JOIN Has_Pet HP ON S.StuID = HP.StuID 
JOIN Pets P ON HP.PetID = P.PetID 
WHERE P.PetType = 'dog' 
AND NOT EXISTS (SELECT 1 FROM Has_Pet HP2 
JOIN Pets P2 ON HP2.PetID = P2.PetID 
WHERE HP2.StuID = S.StuID AND P2.PetType = 'cat')
```
-------------------------7067 sample_num
```sql
SELECT PetType, weight 
FROM Pets 
WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
```
-------------------------7068 sample_num
```sql
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
```
-------------------------7069 sample_num
```sql
SELECT PetID, weight 
FROM Pets 
WHERE pet_age > 1;
```
-------------------------7070 sample_num
```sql
SELECT PetID, weight 
FROM Pets 
WHERE pet_age > 1;
```
-------------------------7071 sample_num
```sql
SELECT Pets.PetType, AVG(Student.Age) AS Avg_Age, MAX(Student.Age) AS Max_Age
FROM Student
JOIN Has_Pet ON Student.StuID = Has_Pet.StuID
JOIN Pets ON Has_Pet.PetID = Pets.PetID
GROUP BY Pets.PetType;
```
-------------------------7072 sample_num
```sql
SELECT Pets.PetType, AVG(Student.Age) AS Avg_Age, MAX(Student.Age) AS Max_Age
FROM Student
JOIN Has_Pet ON Student.StuID = Has_Pet.StuID
JOIN Pets ON Has_Pet.PetID = Pets.PetID
GROUP BY Pets.PetType;
```
-------------------------7073 sample_num
```sql
SELECT PetType, AVG(weight) 
FROM Pets 
GROUP BY PetType;
```
-------------------------7074 sample_num
```sql
SELECT PetType, AVG(weight) 
FROM Pets 
GROUP BY PetType;
```
-------------------------7075 sample_num
```sql
SELECT S.Fname, S.Age 
FROM Student S 
JOIN Has_Pet HP ON S.StuID = HP.StuID;
```
-------------------------7076 sample_num
```sql
SELECT DISTINCT S.Fname, S.Age 
FROM Student S 
JOIN Has_Pet HP ON S.StuID = HP.StuID;
```
-------------------------7077 sample_num
```sql
SELECT P.PetID FROM Has_Pet HP JOIN Student S ON HP.StuID = S.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE S.LName = 'Smith'
```
-------------------------7078 sample_num
```sql
SELECT P.PetID FROM Has_Pet HP JOIN Student S ON HP.StuID = S.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE S.LName = 'Smith'
```
-------------------------7079 sample_num
```sql
SELECT StuID, COUNT(PetID) AS NumOfPets 
FROM Has_Pet 
GROUP BY StuID;
```
-------------------------7080 sample_num
```sql
SELECT H.StuID, COUNT(H.PetID) AS NumberOfPets
FROM Has_Pet H
GROUP BY H.StuID;
```
-------------------------7081 sample_num
```sql
SELECT S.Fname, S.Sex 
FROM Student S 
JOIN Has_Pet HP ON S.StuID = HP.StuID 
GROUP BY S.StuID, S.Fname, S.Sex 
HAVING COUNT(HP.PetID) > 1;
```
-------------------------7082 sample_num
```sql
SELECT S.Fname, S.Sex 
FROM Student S
JOIN Has_Pet HP ON S.StuID = HP.StuID
GROUP BY S.StuID, S.Fname, S.Sex
HAVING COUNT(HP.PetID) > 1;
```
-------------------------7083 sample_num
```sql
SELECT S.LName 
FROM Student S
JOIN Has_Pet HP ON S.StuID = HP.StuID
JOIN Pets P ON HP.PetID = P.PetID
WHERE P.PetType = 'cat' AND P.pet_age = 3;
```
-------------------------7084 sample_num
```sql
SELECT S.LName 
FROM Student S
JOIN Has_Pet HP ON S.StuID = HP.StuID
JOIN Pets P ON HP.PetID = P.PetID
WHERE P.PetType = 'cat' AND P.pet_age = 3;
```
-------------------------7085 sample_num
```sql
SELECT AVG(Age) 
FROM Student 
WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
```
-------------------------7086 sample_num
```sql
SELECT AVG(Age) 
FROM Student 
WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
```
-------------------------7087 sample_num
```sql
SELECT COUNT(*) FROM continents;
```
-------------------------7088 sample_num
```sql
SELECT COUNT(*) FROM continents;
```
-------------------------7089 sample_num
```sql
SELECT c.ContId, c.Continent, COUNT(cc.CountryId) AS NumberOfCountries
FROM continents c
JOIN countries cc ON c.ContId = cc.Continent
GROUP BY c.ContId, c.Continent;
```
-------------------------7090 sample_num
```sql
SELECT c.ContId, c.Continent, COUNT(cc.CountryId) AS NumberOfCountries
FROM continents c
JOIN countries cc ON c.ContId = cc.Continent
GROUP BY c.ContId, c.Continent;
```
-------------------------7091 sample_num
```sql
SELECT COUNT(*) FROM countries;
```
-------------------------7092 sample_num
```sql
SELECT COUNT(*) FROM countries;
```
-------------------------7093 sample_num
```sql
SELECT 
    car_makers.FullName,
    car_makers.Id,
    COUNT(model_list.Model) 
FROM 
    car_makers 
JOIN 
    model_list ON car_makers.Id = model_list.Maker 
GROUP BY 
    car_makers.FullName,
    car_makers.Id;
```
-------------------------7094 sample_num
```sql
SELECT 
    car_makers.Id, 
    car_makers.FullName,
    COUNT(model_list.Model) as NumberOfModels
FROM 
    car_makers
JOIN 
    model_list ON car_makers.Id = model_list.Maker
GROUP BY 
    car_makers.Id, 
    car_makers.FullName
```
-------------------------7095 sample_num
```sql
SELECT model_list.Model 
FROM model_list 
JOIN cars_data ON model_list.ModelId = cars_data.Id 
WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
```
-------------------------7096 sample_num
```sql
SELECT model_list.Model 
FROM model_list 
JOIN cars_data ON model_list.ModelId = cars_data.Id 
WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)
```
-------------------------7097 sample_num
```sql
SELECT model_list.Model 
FROM model_list 
JOIN cars_data ON model_list.ModelId = cars_data.Id 
WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
```
-------------------------7098 sample_num
```sql
SELECT model_list.Model 
FROM cars_data 
JOIN model_list ON cars_data.Id = model_list.ModelId 
WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
```
-------------------------7099 sample_num
```sql
SELECT DISTINCT cm.Maker 
FROM car_makers cm 
JOIN cars_data cd ON cm.Id = cd.Id 
WHERE cd.Year = 1970;
```
Note: This query assumes that the `Id` column in `car_makers` table is the same as the `Id` column in `cars_data` table, which might not be the case based on the provided schema. If there's another linking table, you should join that table first. Please adjust the query accordingly.
-------------------------7100 sample_num
```sql
SELECT DISTINCT cm.Maker 
FROM car_makers cm 
JOIN cars_data cd ON cm.Id = cd.Id 
WHERE cd.Year = 1970;
```
Note: This assumes that the `Id` column in `car_makers` and `cars_data` refers to the same car maker. If this is not the case, you may need to join on a different column or use a different approach. Also, the column names and table names provided in the question are used as they are given.
-------------------------7101 sample_num
```sql
SELECT T3.Make, T4.Year 
FROM car_makers AS T1 
JOIN cars_data AS T4 ON T1.Id = T4.Id 
JOIN car_names AS T3 ON T1.Id = T3.MakeId 
WHERE T4.Year = (SELECT MIN(Year) FROM cars_data)
```
```
-------------------------7102 sample_num
```sql
SELECT T1.Maker, T3.Year 
FROM car_makers AS T1 
JOIN model_list AS T2 ON T1.Id = T2.Maker 
JOIN cars_data AS T3 ON T2.ModelId = T3.Id 
WHERE T3.Year = (SELECT MIN(Year) FROM cars_data);
```
-------------------------7103 sample_num
```sql
SELECT DISTINCT model_list.Model 
FROM model_list 
JOIN cars_data ON model_list.ModelId = cars_data.Id 
WHERE cars_data.Year > 1980;
```
-------------------------7104 sample_num
```sql
SELECT DISTINCT model_list.Model
FROM model_list
JOIN cars_data ON model_list.ModelId = cars_data.Id
WHERE cars_data.Year > 1980;
```
-------------------------7105 sample_num
```sql
SELECT Continent, COUNT(*) AS MakerCount
FROM continents
JOIN countries ON continents.ContId = countries.ContId
JOIN car_makers ON countries.CountryId = car_makers.Country
GROUP BY Continent;
```
-------------------------7106 sample_num
```sql
SELECT c.Continent, COUNT(cm.Id) as NumOfMakers
FROM continents c
JOIN countries co ON c.ContId = co.Continent
JOIN car_makers cm ON co.CountryId = cm.Country
GROUP BY c.Continent;
```
-------------------------7107 sample_num
```sql
SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1;
```
-------------------------7108 sample_num
```sql
SELECT T2.CountryName 
FROM car_makers AS T1 
JOIN countries AS T2 ON T1.Country = T2.CountryId 
GROUP BY T2.CountryName 
ORDER BY COUNT(T1.Id) DESC 
LIMIT 1;
```
-------------------------7109 sample_num
```sql
SELECT COUNT(model_list.Model) AS ModelCount, car_makers.FullName 
FROM model_list 
JOIN car_makers ON model_list.Maker = car_makers.Id 
GROUP BY car_makers.FullName;
```
-------------------------7110 sample_num
```sql
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels
FROM car_makers
JOIN model_list ON car_makers.Id = model_list.Maker
GROUP BY car_makers.Id, car_makers.FullName;
```
-------------------------7111 sample_num
```sql
SELECT cars_data.Accelerate 
FROM cars_data 
JOIN car_names ON cars_data.Id = car_names.MakeId 
WHERE car_names.Make = 'amc hornet sportabout (sw)'
```
-------------------------7112 sample_num
```sql
SELECT cars_data.Accelerate 
FROM cars_data 
JOIN car_names ON cars_data.Id = car_names.MakeId 
WHERE car_names.Make = 'amc' AND car_names.Model = 'hornet sportabout (sw)'
```
-------------------------7113 sample_num
```sql
SELECT COUNT(*) 
FROM car_makers 
WHERE Country = 'France';
```
-------------------------7114 sample_num
```sql
SELECT COUNT(*) 
FROM car_makers 
WHERE Country = 'France';
```
-------------------------7115 sample_num
```sql
SELECT COUNT(*) 
FROM model_list ml
JOIN car_makers cm ON ml.Maker = cm.Id
JOIN countries co ON cm.Country = co.CountryId
WHERE co.CountryName = 'usa';
```
-------------------------7116 sample_num
```sql
SELECT COUNT(*) 
FROM model_list ml
JOIN car_makers cm ON ml.Maker = cm.Id
JOIN countries co ON cm.Country = co.CountryId
WHERE co.CountryName = 'United States';
```
-------------------------7117 sample_num
```sql
SELECT AVG(MPG) 
FROM cars_data 
WHERE Cylinders = 4;
```
-------------------------7118 sample_num
```sql
SELECT AVG(MPG) 
FROM cars_data 
WHERE Cylinders = 4;
```
-------------------------7119 sample_num
```sql
SELECT MIN(cars_data.Weight)
FROM cars_data
JOIN model_list ON cars_data.ModelId = model_list.ModelId
JOIN car_makers ON model_list.Maker = car_makers.Id
WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
```
-------------------------7120 sample_num
```sql
SELECT MIN(cars_data.Weight) 
FROM cars_data 
JOIN model_list ON cars_data.Id = model_list.ModelId 
WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
```
-------------------------7121 sample_num
```sql
SELECT DISTINCT car_makers.Maker, model_list.Model 
FROM car_makers 
JOIN model_list ON car_makers.Id = model_list.Maker;
```
-------------------------7122 sample_num
```sql
SELECT DISTINCT car_makers.Maker, model_list.Model 
FROM car_makers 
JOIN model_list ON car_makers.Id = model_list.Maker;
```
-------------------------7123 sample_num
```sql
SELECT CountryName, CountryId 
FROM countries 
WHERE CountryId IN (SELECT Country FROM car_makers);
```
However, there is a mistake in the provided schema. The correct join column should be `CountryId` instead of `Country`. Here's the corrected query:
```sql
SELECT c.CountryName, c.CountryId 
FROM countries c 
JOIN car_makers m ON c.CountryId = m.Country;
```
-------------------------7124 sample_num
```sql
SELECT DISTINCT c.CountryName, c.CountryId
FROM countries c
JOIN car_makers cm ON c.CountryId = cm.Country;
```
-------------------------7125 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Horsepower > 150;
```
-------------------------7126 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Horsepower > 150;
```
-------------------------7127 sample_num
```sql
SELECT Year, AVG(Weight) 
FROM cars_data 
GROUP BY Year;
```
-------------------------7128 sample_num
```sql
SELECT Year, AVG(Weight) as Avg_Weight, AVG(Year) as Avg_Year 
FROM cars_data 
GROUP BY Year;
```
Note: The 'AVG(Year) as Avg_Year' part of this query will not return meaningful results because the year is not a value that can be averaged in the way that a continuous variable like weight can. It would be better to remove this part of the query, but I have included it per your request.
-------------------------7129 sample_num
```sql
SELECT c.CountryName
FROM countries c
JOIN car_makers cm ON c.CountryId = cm.Country
JOIN continents co ON c.ContId = co.ContId
WHERE co.Continent = 'Europe'
GROUP BY c.CountryName
HAVING COUNT(cm.Id) >= 3;
```
-------------------------7130 sample_num
```sql
SELECT c.CountryName
FROM countries c
JOIN continents co ON c.ContId = co.ContId
JOIN car_makers cm ON c.CountryId = cm.Country
WHERE co.Continent = 'Europe'
GROUP BY c.CountryName
HAVING COUNT(cm.Maker) >= 3;
```
-------------------------7131 sample_num
```sql
SELECT MAX(cars_data.Horsepower), car_names.Make 
FROM cars_data 
JOIN car_names ON cars_data.Id = car_names.MakeId 
JOIN model_list ON car_names.Model = model_list.Model 
WHERE cars_data.Cylinders = 3
GROUP BY car_names.Make;
```
-------------------------7132 sample_num
```sql
SELECT c.model, c.horsepower, m.make 
FROM cars_data c 
JOIN car_names n ON c.model = n.Model 
JOIN car_makers m ON n.MakeId = m.Id 
WHERE c.Cylinders = 3 
ORDER BY c.horsepower DESC 
LIMIT 1;
```
-------------------------7133 sample_num
```sql
SELECT model_list.Model 
FROM model_list 
JOIN cars_data 
ON model_list.ModelId = cars_data.Id 
ORDER BY cars_data.MPG DESC 
LIMIT 1;
```
-------------------------7134 sample_num
```sql
SELECT model_list.Model 
FROM model_list 
JOIN cars_data 
ON model_list.ModelId = cars_data.Id 
ORDER BY cars_data.MPG DESC 
LIMIT 1;
```
-------------------------7135 sample_num
```sql
SELECT AVG(horsepower) 
FROM cars_data 
WHERE year < 1980;
```
-------------------------7136 sample_num
```sql
SELECT AVG(Horsepower) 
FROM cars_data 
WHERE Year < 1980;
```
-------------------------7137 sample_num
```sql
SELECT AVG(edispl) 
FROM cars_data 
JOIN model_list ON cars_data.ModelId = model_list.ModelId 
WHERE model_list.Model = 'volvo';
```
-------------------------7138 sample_num
```sql
SELECT AVG(edispl) 
FROM cars_data 
JOIN car_names ON cars_data.Id = car_names.MakeId 
WHERE car_names.Model = 'Volvos';
```
Note: The query assumes that 'Volvos' is present in the 'car_names' table under the column 'Model'. If 'Volvos' should be matched with the 'Maker' column in 'car_names', then the WHERE clause should be adjusted accordingly. Additionally, the join condition might need to be adjusted based on the actual relationships between the tables. For example, if 'car_names' does not have a direct relationship with 'cars_data', additional joins might be necessary.
-------------------------7139 sample_num
```sql
SELECT Cylinders, MAX(Accelerate) 
FROM cars_data 
GROUP BY Cylinders;
```
-------------------------7140 sample_num
```sql
SELECT Cylinders, MAX(Accelerate) 
FROM cars_data 
GROUP BY Cylinders;
```
-------------------------7141 sample_num
```sql
SELECT Model, COUNT(*) AS VersionCount 
FROM car_names 
GROUP BY Model 
ORDER BY VersionCount DESC 
LIMIT 1;
```
-------------------------7142 sample_num
```sql
SELECT Model, COUNT(*) AS Versions 
FROM model_list 
GROUP BY Model 
ORDER BY Versions DESC 
LIMIT 1;
```
-------------------------7143 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Cylinders > 4;
```
-------------------------7144 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Cylinders > 4;
```
-------------------------7145 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Year = 1980;
```
-------------------------7146 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
JOIN car_names ON cars_data.Id = car_names.MakeId 
JOIN car_makers ON car_names.Make = car_makers.Id 
WHERE car_makers.Year = 1980;
```
Note: This query assumes that the year a car was made is stored in the car_makers table. However, based on your schema, there's no column for year in any of the tables you've mentioned. You might want to adjust this part of the query to match your actual schema.
If the year is stored in another table or column, you will need to update the `WHERE` clause accordingly. For example, if the year is stored in the `Year` column of the `cars_data` table, the query would look like this:
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Year = 1980;
```
-------------------------7147 sample_num
```sql
SELECT COUNT(*) 
FROM model_list 
JOIN car_makers ON model_list.Maker = car_makers.Id 
WHERE car_makers.FullName = 'American Motor Company';
```
-------------------------7148 sample_num
```sql
SELECT COUNT(*) 
FROM model_list 
JOIN car_makers ON model_list.Maker = car_makers.Id 
WHERE car_makers.FullName = 'American Motor Company';
```
-------------------------7149 sample_num
```sql
SELECT car_makers.FullName, car_makers.Id 
FROM car_makers 
JOIN model_list ON car_makers.Id = model_list.Maker 
GROUP BY car_makers.Id 
HAVING COUNT(model_list.ModelId) > 3;
```
-------------------------7150 sample_num
```sql
SELECT cm.Id, cm.Maker 
FROM car_makers cm
JOIN model_list ml ON cm.Id = ml.Maker
GROUP BY cm.Id, cm.Maker
HAVING COUNT(ml.ModelId) > 3;
```
-------------------------7151 sample_num
```sql
SELECT DISTINCT m.Model 
FROM model_list m 
JOIN car_makers cm ON m.Maker = cm.Id 
JOIN cars_data cd ON m.ModelId = cd.Id 
WHERE cm.FullName = 'General Motors' OR cd.Weight > 3500;
```
-------------------------7152 sample_num
```sql
SELECT DISTINCT model_list.Model 
FROM model_list 
JOIN car_makers ON model_list.Maker = car_makers.Id 
WHERE car_makers.FullName = 'General Motors' 
OR model_list.Model IN (
    SELECT cars_data.Model 
    FROM cars_data 
    JOIN car_names ON cars_data.MakeId = car_names.MakeId 
    WHERE cars_data.Weight > 3500
)
``` 
However, this might not work as expected due to the way the tables are related. A more accurate query would be:
```sql
SELECT DISTINCT ml.Model
FROM model_list ml
JOIN car_makers cm ON ml.Maker = cm.Id
JOIN car_names cn ON ml.Model = cn.Model
JOIN cars_data cd ON cn.MakeId = cd.MakeId
WHERE cm.FullName = 'General Motors'
OR cd.Weight > 3500;
```
-------------------------7153 sample_num
```sql
SELECT DISTINCT Year 
FROM cars_data 
WHERE Weight BETWEEN 3000 AND 4000;
```
-------------------------7154 sample_num
```sql
SELECT DISTINCT Year 
FROM cars_data 
WHERE Weight < 4000 AND Id IN (
    SELECT Id 
    FROM cars_data 
    WHERE Weight > 3000)
```
```
-------------------------7155 sample_num
```sql
SELECT Horsepower 
FROM cars_data 
WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
```
-------------------------7156 sample_num
```sql
SELECT T1.Horsepower 
FROM cars_data AS T1 
JOIN model_list AS T2 ON T1.ModelId = T2.ModelId 
WHERE T1.Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
```
-------------------------7157 sample_num
```sql
SELECT T4.Cylinders 
FROM model_list AS T1 
JOIN car_makers AS T2 ON T1.Maker = T2.Id 
JOIN car_names AS T3 ON T1.Model = T3.MakeId 
JOIN cars_data AS T4 ON T4.Id = T3.MakeId 
WHERE T2.FullName = 'volvo' 
ORDER BY T4.Accelerate ASC 
LIMIT 1;
```
-------------------------7158 sample_num
```sql
SELECT MIN(cars_data.Cylinders) 
FROM cars_data 
JOIN model_list ON cars_data.ModelId = model_list.ModelId 
WHERE model_list.Maker = 'Volvo' 
AND cars_data.Accelerate = (SELECT MIN(Accelerate) FROM cars_data WHERE ModelId IN (SELECT ModelId FROM model_list WHERE Maker = 'Volvo'));
```
-------------------------7159 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Accelerate > (
    SELECT MAX(Horsepower) 
    FROM cars_data
)
```
Note: This query may not give the expected result because it compares acceleration with horsepower, which are two different attributes of a car. To fix this, you might need to clarify what exactly is being asked for. If we want to compare cars with greater acceleration than the car with the highest horsepower, we first need to identify the car with the highest horsepower and then find all cars with greater acceleration than that specific car's acceleration value.
Here is the corrected version:
```sql
SELECT COUNT(*) 
FROM cars_data as c1 
WHERE c1.Accelerate > (
    SELECT c2.Accelerate 
    FROM cars_data as c2 
    WHERE c2.Horsepower = (
        SELECT MAX(Horsepower) 
        FROM cars_data
    )
)
```
-------------------------7160 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT c.Id 
  FROM cars_data c 
  WHERE c.Accelerate > (
    SELECT MIN(c2.Accelerate) 
    FROM cars_data c2 
    WHERE c2.Horsepower = (
      SELECT MAX(Horsepower) 
      FROM cars_data
    )
  )
) AS result;
```
-------------------------7161 sample_num
```sql
SELECT COUNT(T2.CountryName) 
FROM car_makers T1 
JOIN countries T2 ON T1.Country = T2.CountryId 
GROUP BY T2.CountryName 
HAVING COUNT(T1.Id) > 2;
```
However, the correct query should have an outer query to count the countries that meet this condition:
```sql
SELECT COUNT(*) 
FROM (
    SELECT T2.CountryName 
    FROM car_makers T1 
    JOIN countries T2 ON T1.Country = T2.CountryId 
    GROUP BY T2.CountryName 
    HAVING COUNT(T1.Id) > 2
) AS T3;
```
-------------------------7162 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT Country
  FROM car_makers
  GROUP BY Country
  HAVING COUNT(*) > 2
) as T;
```
-------------------------7163 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Cylinders > 6;
```
-------------------------7164 sample_num
```sql
SELECT COUNT(*) 
FROM cars_data 
WHERE Cylinders > 6;
```
-------------------------7165 sample_num
```sql
SELECT model_list.Model 
FROM model_list 
JOIN cars_data ON model_list.ModelId = cars_data.Id 
WHERE cars_data.Cylinders = 4 
ORDER BY cars_data.Horsepower DESC 
LIMIT 1;
```
-------------------------7166 sample_num
```sql
SELECT model_list.Model 
FROM model_list 
JOIN cars_data ON model_list.ModelId = cars_data.Id 
WHERE cars_data.Cylinders = 4 
ORDER BY cars_data.Horsepower DESC 
LIMIT 1;
```
-------------------------7167 sample_num
```sql
SELECT 
    cn.MakeId, 
    cn.Make
FROM 
    car_names cn
JOIN 
    model_list ml ON cn.Model = ml.Model
JOIN 
    cars_data cd ON ml.ModelId = cd.Id
WHERE 
    cd.Horsepower > (SELECT MIN(Horsepower) FROM cars_data)
AND 
    cd.Cylinders <= 3;
```
-------------------------7168 sample_num
```sql
SELECT cn.MakeId, cn.Make
FROM car_names cn
JOIN cars_data cd ON cn.Model = cd.Id
WHERE cd.Cylinders < 4 AND cd.Horsepower > (SELECT MIN(Horsepower) FROM cars_data)
```
-------------------------7169 sample_num
```sql
SELECT MAX(MPG) 
FROM cars_data 
WHERE Cylinders = 8 OR Year < 1980;
```
-------------------------7170 sample_num
```sql
SELECT MAX(MPG) 
FROM cars_data 
WHERE Cylinders = 8 OR Year < 1980;
```
-------------------------7171 sample_num
```sql
SELECT model_list.Model 
FROM model_list 
JOIN car_makers ON model_list.Maker = car_makers.Id 
WHERE model_list.Model NOT IN (
    SELECT car_names.Model 
    FROM car_names 
    JOIN car_makers ON car_names.MakeId = car_makers.Id 
    WHERE car_makers.FullName = 'Ford Motor Company'
) AND model_list.Model IN (
    SELECT cars_data.ModelId 
    FROM cars_data 
    WHERE cars_data.Weight < 3500
)
```
-------------------------7172 sample_num
```sql
SELECT DISTINCT model_list.Model 
FROM model_list 
JOIN car_makers ON model_list.Maker = car_makers.Id 
JOIN cars_data ON model_list.ModelId = cars_data.Id 
WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
```
-------------------------7173 sample_num
```sql
SELECT CountryName 
FROM countries 
WHERE CountryId NOT IN (SELECT Country FROM car_makers)
```
```
-------------------------7174 sample_num
```sql
SELECT countries.CountryName 
FROM countries 
LEFT JOIN car_makers ON countries.CountryId = car_makers.Country 
WHERE car_makers.Id IS NULL;
```
-------------------------7175 sample_num
```sql
SELECT cm.Id, cm.Maker 
FROM car_makers cm
JOIN model_list ml ON cm.Id = ml.Maker
GROUP BY cm.Id, cm.Maker
HAVING COUNT(ml.ModelId) >= 2
AND (SELECT COUNT(*) FROM car_makers WHERE Id != cm.Id) > 3;
```
However, the subquery in the HAVING clause will not perform well on large datasets. A better approach would be to find the count of car makers first and then filter the makers that produce at least 2 models. Here is a better optimized query for this:
```sql
SELECT cm.Id, cm.Maker 
FROM car_makers cm
JOIN model_list ml ON cm.Id = ml.Maker
WHERE cm.Id IN (
    SELECT Maker 
    FROM model_list 
    GROUP BY Maker
    HAVING COUNT(ModelId) >= 2
)
AND (SELECT COUNT(*) FROM car_makers WHERE Id != cm.Id) > 3;
```
But still, the second part of the query checking for more than 3 other car makers is complex and may not give accurate results as it does not consider the models produced by those makers. A more accurate but complex query could be:
```sql
SELECT cm.Id, cm.Maker 
FROM car_makers cm
JOIN model_list ml ON cm.Id = ml.Maker
WHERE cm.Id IN (
    SELECT Maker 
    FROM model_list 
    GROUP BY Maker
    HAVING COUNT(ModelId) >= 2
)
AND (
    SELECT COUNT(*) 
    FROM car_makers cm2 
    WHERE cm2.Id != cm.Id AND cm2.Id IN (
        SELECT Maker 
        FROM model_list 
        GROUP BY Maker 
        HAVING COUNT(ModelId) >= 2
    )
) > 3;
```
-------------------------7176 sample_num
```sql
SELECT cm.Id, cm.Maker 
FROM car_makers cm
JOIN model_list ml ON cm.Id = ml.Maker
JOIN car_names cn ON ml.ModelId = cn.MakeId
GROUP BY cm.Id, cm.Maker
HAVING COUNT(DISTINCT ml.Model) >= 2 AND COUNT(cn.Make) > 3;
```
-------------------------7177 sample_num
```sql
SELECT c.CountryId, c.CountryName 
FROM countries c
JOIN car_makers cm ON c.CountryId = cm.Country
WHERE cm.Country IN (
    SELECT Country
    FROM car_makers
    GROUP BY Country
    HAVING COUNT(*) > 3
) OR c.CountryId IN (
    SELECT Country
    FROM car_makers
    WHERE FullName = 'fiat'
)
GROUP BY c.CountryId, c.CountryName;
```
Note: The provided SQL query assumes that the 'Country' column in the 'car_makers' table is a foreign key to the 'CountryId' in the 'countries' table. However, based on your schema, it seems that 'Country' should be replaced with 'CountryId' in the 'car_makers' table for proper join conditions. If this is not the case, you may need to adjust the query accordingly.
-------------------------7178 sample_num
```sql
SELECT T2.CountryId, T2.CountryName 
FROM car_makers AS T1 
JOIN countries AS T2 ON T1.Country = T2.CountryId 
WHERE T1.Maker IN (
    SELECT T4.Maker 
    FROM model_list AS T3 
    JOIN car_makers AS T4 ON T3.Maker = T4.Id 
    WHERE T3.Model = 'fiat'
) 
GROUP BY T2.CountryId, T2.CountryName 
HAVING COUNT(T1.Id) > 3 
UNION 
SELECT T2.CountryId, T2.CountryName 
FROM car_makers AS T1 
JOIN countries AS T2 ON T1.Country = T2.CountryId 
WHERE EXISTS (
    SELECT * 
    FROM model_list AS T3 
    WHERE T3.Maker = T1.Id AND T3.Model = 'fiat'
) 
GROUP BY T2.CountryId, T2.CountryName 
HAVING COUNT(T1.Id) <= 3;
```
-------------------------7179 sample_num
```sql
SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';
```
-------------------------7180 sample_num
```sql
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
```
-------------------------7181 sample_num
```sql
SELECT Abbreviation 
FROM airlines 
WHERE Airline = 'JetBlue Airways';
```
-------------------------7182 sample_num
```sql
SELECT Abbreviation 
FROM airlines 
WHERE Airline = 'Jetblue Airways';
```
-------------------------7183 sample_num
```sql
SELECT Airlines.Airline, Airlines.Abbreviation 
FROM airlines 
WHERE Airlines.Country = 'USA';
```
-------------------------7184 sample_num
```sql
SELECT Airline, Abbreviation 
FROM airlines 
WHERE Country = 'USA';
```
-------------------------7185 sample_num
```sql
SELECT AirportCode, AirportName 
FROM airports 
WHERE City = 'Anthony';
```
-------------------------7186 sample_num
```sql
SELECT AirportCode, AirportName 
FROM airports 
WHERE City = 'Anthony';
```
-------------------------7187 sample_num
```sql
SELECT COUNT(*) FROM airlines;
```
-------------------------7188 sample_num
```sql
SELECT COUNT(*) FROM airlines;
```
-------------------------7189 sample_num
```sql
SELECT COUNT(*) FROM airports;
```
-------------------------7190 sample_num
```sql
SELECT COUNT(*) FROM airports;
```
-------------------------7191 sample_num
```sql
SELECT COUNT(*) FROM flights;
```
-------------------------7192 sample_num
```sql
SELECT COUNT(*) FROM flights;
```
-------------------------7193 sample_num
```sql
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
```
-------------------------7194 sample_num
```sql
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
```
-------------------------7195 sample_num
```sql
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
```
-------------------------7196 sample_num
```sql
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
```
-------------------------7197 sample_num
```sql
SELECT City, Country 
FROM airports 
WHERE AirportName = 'Alton';
```
-------------------------7198 sample_num
```sql
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
```
-------------------------7199 sample_num
```sql
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
```
-------------------------7200 sample_num
```sql
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
```
-------------------------7201 sample_num
```sql
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
```
-------------------------7202 sample_num
```sql
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
```
-------------------------7203 sample_num
```sql
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
```
-------------------------7204 sample_num
```sql
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
```
-------------------------7205 sample_num
```sql
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
```
-------------------------7206 sample_num
```sql
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
```
-------------------------7207 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
JOIN airports ON flights.SourceAirport = airports.AirportCode 
WHERE airports.City = 'Aberdeen';
```
-------------------------7208 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
JOIN airports ON flights.SourceAirport = airports.AirportCode 
WHERE airports.City = 'Aberdeen';
```
-------------------------7209 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
JOIN airports ON flights.DestAirport = airports.AirportCode 
WHERE airports.City = 'Aberdeen';
```
-------------------------7210 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
JOIN airports ON flights.DestAirport = airports.AirportCode 
WHERE airports.City = 'Aberdeen';
```
-------------------------7211 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
JOIN airports ON flights.SourceAirport = airports.AirportCode 
JOIN airports as dest_airports ON flights.DestAirport = dest_airports.AirportCode 
WHERE airports.City = 'Aberdeen' AND dest_airports.City = 'Ashley';
```
-------------------------7212 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
JOIN airports AS src ON flights.SourceAirport = src.AirportCode 
JOIN airports AS dest ON flights.DestAirport = dest.AirportCode 
WHERE src.City = 'Aberdeen' AND dest.City = 'Ashley';
```
-------------------------7213 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE Airline = 'JetBlue Airways';
```
-------------------------7214 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE Airline = 'Jetblue Airways';
```
-------------------------7215 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
```
-------------------------7216 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
```
-------------------------7217 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
```
-------------------------7218 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
```
-------------------------7219 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
JOIN airlines ON flights.Airline = airlines.uid 
JOIN airports ON flights.DestAirport = airports.AirportCode 
WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
```
-------------------------7220 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE Airline = 'United Airlines' AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
```
-------------------------7221 sample_num
```sql
SELECT City, COUNT(*) AS NumOfFlights 
FROM flights 
JOIN airports ON flights.DestAirport = airports.AirportCode 
GROUP BY City 
ORDER BY NumOfFlights DESC 
LIMIT 1;
```
-------------------------7222 sample_num
```sql
SELECT T2.City, T1.DestAirport, COUNT(*) AS Frequency 
FROM flights AS T1 
JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode 
GROUP BY T1.DestAirport 
ORDER BY Frequency DESC 
LIMIT 1;
```
-------------------------7223 sample_num
```sql
SELECT T2.City, COUNT(*) AS num_flights 
FROM flights AS T1 
JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode 
GROUP BY T2.City 
ORDER BY num_flights DESC 
LIMIT 1;
```
-------------------------7224 sample_num
```sql
SELECT City, COUNT(*) as frequency 
FROM flights 
JOIN airports ON flights.SourceAirport = airports.AirportCode 
GROUP BY City 
ORDER BY frequency DESC 
LIMIT 1;
```
-------------------------7225 sample_num
```sql
SELECT T2.AirportCode FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode GROUP BY T1.SourceAirport ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------7226 sample_num
```sql
SELECT T2.AirportCode FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode GROUP BY T1.SourceAirport ORDER BY COUNT(*) DESC LIMIT 1;
```
-------------------------7227 sample_num
```sql
SELECT T2.AirportCode FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode GROUP BY T2.AirportCode ORDER BY COUNT(*) ASC LIMIT 1
```
-------------------------7228 sample_num
```sql
SELECT T2.AirportCode FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode GROUP BY T2.AirportCode ORDER BY COUNT(*) ASC LIMIT 1
```
-------------------------7229 sample_num
```sql
SELECT Airline, COUNT(*) AS num_flights 
FROM flights 
GROUP BY Airline 
ORDER BY num_flights DESC 
LIMIT 1;
```
-------------------------7230 sample_num
```sql
SELECT Airline, COUNT(*) AS FlightsCount 
FROM flights 
GROUP BY Airline 
ORDER BY FlightsCount DESC 
LIMIT 1;
```
-------------------------7231 sample_num
```sql
SELECT a.Abbreviation, a.Country
FROM airlines a
JOIN flights f ON a.Airline = f.Airline
GROUP BY a.Airline, a.Abbreviation, a.Country
ORDER BY COUNT(f.FlightNo) ASC
LIMIT 1;
```
-------------------------7232 sample_num
```sql
SELECT T1.Abbreviation, T1.Country 
FROM airlines AS T1 
JOIN flights AS T2 ON T1.Airline = T2.Airline 
GROUP BY T1.Airline 
ORDER BY COUNT(T2.FlightNo) 
LIMIT 1;
```
-------------------------7233 sample_num
```sql
SELECT DISTINCT airlines.Airline 
FROM airlines 
JOIN flights ON airlines.Abbreviation = flights.Airline 
WHERE flights.SourceAirport = 'AHD';
```
-------------------------7234 sample_num
```sql
SELECT DISTINCT airlines.Airline 
FROM airlines 
JOIN flights ON airlines.Abbreviation = flights.Airline 
WHERE flights.SourceAirport = 'AHD';
```
-------------------------7235 sample_num
```sql
SELECT DISTINCT airlines.Airline 
FROM airlines 
JOIN flights ON airlines.Abbreviation = flights.Airline 
WHERE flights.DestAirport = 'AHD';
```
-------------------------7236 sample_num
```sql
SELECT DISTINCT airlines.Airline 
FROM airlines 
JOIN flights ON airlines.Abbreviation = flights.Airline 
WHERE flights.DestAirport = 'AHD';
```
-------------------------7237 sample_num
```sql
SELECT DISTINCT a.Airline 
FROM airlines a 
JOIN flights f1 ON a.Abbreviation = f1.Airline 
JOIN flights f2 ON a.Abbreviation = f2.Airline 
WHERE f1.SourceAirport = 'APG' OR f1.DestAirport = 'APG' 
AND f2.SourceAirport = 'CVO' OR f2.DestAirport = 'CVO';
```
-------------------------7238 sample_num
```sql
SELECT Airline 
FROM flights 
WHERE SourceAirport = 'APG' 
INTERSECT 
SELECT Airline 
FROM flights 
WHERE SourceAirport = 'CVO';
```
-------------------------7239 sample_num
```sql
SELECT DISTINCT a.Airline
FROM airlines a
JOIN flights f ON a.Abbreviation = f.Airline
WHERE f.SourceAirport = 'CVO'
AND a.Abbreviation NOT IN (
    SELECT Airline
    FROM flights
    WHERE SourceAirport = 'APG'
);
```
-------------------------7240 sample_num
```sql
SELECT DISTINCT a.Airline
FROM airlines a
JOIN flights f ON a.Abbreviation = f.Airline
WHERE f.SourceAirport IN (
    SELECT ap.AirportCode
    FROM airports ap
    WHERE ap.City = 'CVO'
)
AND f.SourceAirport NOT IN (
    SELECT ap.AirportCode
    FROM airports ap
    WHERE ap.City = 'APG'
);
```
-------------------------7241 sample_num
```sql
SELECT a.Airline
FROM airlines a
JOIN flights f ON a.Abbreviation = f.Airline
GROUP BY a.Airline
HAVING COUNT(f.FlightNo) >= 10;
```
-------------------------7242 sample_num
```sql
SELECT Airline
FROM flights
GROUP BY Airline
HAVING COUNT(*) >= 10;
```
-------------------------7243 sample_num
```sql
SELECT a.Airline
FROM airlines a
WHERE (
    SELECT COUNT(*)
    FROM flights f
    WHERE f.Airline = a.Abbreviation
) < 200;
```
-------------------------7244 sample_num
```sql
SELECT A.Airline
FROM airlines A
JOIN flights F ON A.uid = F.Airline
GROUP BY A.Airline
HAVING COUNT(F.FlightNo) < 200;
```
-------------------------7245 sample_num
```sql
SELECT FlightNo 
FROM flights 
WHERE Airline = 'United Airlines';
```
-------------------------7246 sample_num
```sql
SELECT FlightNo 
FROM flights 
WHERE Airline = 'United Airlines';
```
-------------------------7247 sample_num
```sql
SELECT flights.FlightNo 
FROM flights 
JOIN airports ON flights.SourceAirport = airports.AirportCode 
WHERE airports.AirportName = 'APG';
```
-------------------------7248 sample_num
```sql
SELECT FlightNo 
FROM flights 
WHERE SourceAirport = 'APG';
```
-------------------------7249 sample_num
```sql
SELECT flights.FlightNo 
FROM flights 
JOIN airports ON flights.DestAirport = airports.AirportCode 
WHERE airports.AirportName = 'APG';
```
-------------------------7250 sample_num
```sql
SELECT FlightNo 
FROM flights 
WHERE DestAirport = 'APG';
```
-------------------------7251 sample_num
```sql
SELECT flights.FlightNo 
FROM flights 
JOIN airports ON flights.SourceAirport = airports.AirportCode 
WHERE airports.City = 'Aberdeen';
```
-------------------------7252 sample_num
```sql
SELECT f.FlightNo 
FROM flights f
JOIN airports a ON f.SourceAirport = a.AirportCode
WHERE a.City = 'Aberdeen';
```
-------------------------7253 sample_num
```sql
SELECT flights.FlightNo 
FROM flights 
JOIN airports ON flights.DestAirport = airports.AirportCode 
WHERE airports.City = 'Aberdeen';
```
-------------------------7254 sample_num
```sql
SELECT f.FlightNo 
FROM flights f
JOIN airports a ON f.DestAirport = a.AirportCode
WHERE a.City = 'Aberdeen';
```
-------------------------7255 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE DestAirport IN (
    SELECT AirportCode 
    FROM airports 
    WHERE City IN ('Aberdeen', 'Abilene')
);
```
-------------------------7256 sample_num
```sql
SELECT COUNT(*) 
FROM flights 
WHERE DestAirport IN (
    SELECT AirportCode 
    FROM airports 
    WHERE City IN ('Aberdeen', 'Abilene')
);
```
-------------------------7257 sample_num
```sql
SELECT AirportName 
FROM airports 
WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights)
```
-------------------------7258 sample_num
```sql
SELECT AirportCode 
FROM airports 
WHERE AirportCode NOT IN (
    SELECT DISTINCT SourceAirport FROM flights 
    UNION 
    SELECT DISTINCT DestAirport FROM flights
)
```
-------------------------7259 sample_num
```sql
SELECT COUNT(*) FROM employee;
```
-------------------------7260 sample_num
```sql
SELECT COUNT(*) FROM employee;
```
-------------------------7261 sample_num
```sql
SELECT Name 
FROM employee 
ORDER BY Age ASC;
```
-------------------------7262 sample_num
```sql
SELECT Name FROM employee ORDER BY Age ASC;
```
-------------------------7263 sample_num
```sql
SELECT City, COUNT(*) AS Num_Employees 
FROM employee 
GROUP BY City;
```
-------------------------7264 sample_num
```sql
SELECT City, COUNT(*) AS Num_Employees 
FROM employee 
GROUP BY City;
```
-------------------------7265 sample_num
```sql
SELECT City 
FROM employee 
WHERE Age < 30 
GROUP BY City 
HAVING COUNT(*) > 1;
```
-------------------------7266 sample_num
```sql
SELECT City 
FROM employee 
WHERE Age < 30 
GROUP BY City 
HAVING COUNT(*) > 1;
```
-------------------------7267 sample_num
```sql
SELECT Location, COUNT(*) AS Num_of_Shops
FROM shop
GROUP BY Location;
```
-------------------------7268 sample_num
```sql
SELECT Location, COUNT(Shop_ID) 
FROM shop 
GROUP BY Location;
```
-------------------------7269 sample_num
```sql
SELECT T1.Manager_name, T1.District 
FROM shop AS T1 
WHERE T1.Number_products = (SELECT MAX(Number_products) FROM shop);
```
-------------------------7270 sample_num
```sql
SELECT Manager_name, District 
FROM shop 
WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
```
-------------------------7271 sample_num
```sql
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
```
-------------------------7272 sample_num
```sql
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;
```
-------------------------7273 sample_num
```sql
SELECT Name, Location, District 
FROM shop 
ORDER BY Number_products DESC;
```
-------------------------7274 sample_num
```sql
SELECT Name, Location, District 
FROM shop 
ORDER BY Number_products DESC;
```
-------------------------7275 sample_num
```sql
SELECT Name 
FROM shop 
WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
```
-------------------------7276 sample_num
```sql
SELECT Name 
FROM shop 
WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
```
-------------------------7277 sample_num
```sql
SELECT e.Name 
FROM employee e
JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID
GROUP BY e.Name
ORDER BY COUNT(ev.Year_awarded) DESC
LIMIT 1;
```
-------------------------7278 sample_num
```sql
SELECT e.Name 
FROM employee e
JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID 
GROUP BY e.Name 
ORDER BY COUNT(ev.Year_awarded) DESC 
LIMIT 1;
```
-------------------------7279 sample_num
```sql
SELECT e.Name 
FROM employee e 
JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID 
WHERE ev.Bonus = (SELECT MAX(Bonus) FROM evaluation)
GROUP BY e.Name;
```
-------------------------7280 sample_num
```sql
SELECT e.Name 
FROM employee e
JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID 
ORDER BY ev.Bonus DESC 
LIMIT 1;
```
-------------------------7281 sample_num
```sql
SELECT e.Name 
FROM employee e 
LEFT JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID 
WHERE ev.Employee_ID IS NULL;
```
-------------------------7282 sample_num
```sql
SELECT e.Name 
FROM employee e 
LEFT JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID 
WHERE ev.Employee_ID IS NULL;
```
-------------------------7283 sample_num
```sql
SELECT s.Name 
FROM shop s
JOIN hiring h ON s.Shop_ID = h.Shop_ID
GROUP BY s.Name
ORDER BY COUNT(h.Employee_ID) DESC
LIMIT 1;
```
-------------------------7284 sample_num
```sql
SELECT s.Name 
FROM shop s
JOIN hiring h ON s.Shop_ID = h.Shop_ID
GROUP BY s.Name
ORDER BY COUNT(h.Employee_ID) DESC
LIMIT 1;
```
-------------------------7285 sample_num
```sql
SELECT Name 
FROM shop 
WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
```
```
-------------------------7286 sample_num
```sql
SELECT Name 
FROM shop 
WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
```
```
-------------------------7287 sample_num
```sql
SELECT shop.Name, COUNT(hiring.Employee_ID) 
FROM shop 
JOIN hiring ON shop.Shop_ID = hiring.Shop_ID 
GROUP BY shop.Name;
```
-------------------------7288 sample_num
```sql
SELECT shop.Name, COUNT(hiring.Employee_ID) as Num_Employees
FROM shop
JOIN hiring ON shop.Shop_ID = hiring.Shop_ID
GROUP BY shop.Name;
```
-------------------------7289 sample_num
```sql
SELECT SUM(Bonus) FROM evaluation;
```
-------------------------7290 sample_num
```sql
SELECT SUM(Bonus) FROM evaluation;
```
-------------------------7291 sample_num
```sql
SELECT * FROM hiring;
```
-------------------------7292 sample_num
```sql
SELECT * FROM hiring;
```
-------------------------7293 sample_num
```sql
SELECT District 
FROM shop 
WHERE Number_products < 3000 
INTERSECT 
SELECT District 
FROM shop 
WHERE Number_products > 10000;
```
-------------------------7294 sample_num
```sql
SELECT District 
FROM shop 
WHERE Number_products < 3000 
INTERSECT 
SELECT District 
FROM shop 
WHERE Number_products > 10000;
```
-------------------------7295 sample_num
```sql
SELECT COUNT(DISTINCT Location) FROM shop;
```
-------------------------7296 sample_num
```sql
SELECT COUNT(DISTINCT Location) FROM shop;
```
-------------------------7297 sample_num
```sql
SELECT COUNT(*) FROM Documents;
```
-------------------------7298 sample_num
```sql
SELECT COUNT(*) FROM Documents;
```
-------------------------7299 sample_num
```sql
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
```
-------------------------7300 sample_num
```sql
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
```
-------------------------7301 sample_num
```sql
SELECT Document_Name, Template_ID 
FROM Documents 
WHERE Document_Description LIKE '%w%';
```
-------------------------7302 sample_num
```sql
SELECT D.Document_Name, T.Template_ID 
FROM Documents D 
JOIN Templates T ON D.Template_ID = T.Template_ID 
WHERE D.Document_Description LIKE '%w%';
```
-------------------------7303 sample_num
```sql
SELECT Documents.Document_ID, Templates.Template_ID, Templates.Template_Details
FROM Documents
INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID
WHERE Documents.Document_Name = 'Robbin CV';
```
-------------------------7304 sample_num
```sql
SELECT Documents.Document_ID, Templates.Template_ID, Documents.Document_Description 
FROM Documents 
INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID 
WHERE Documents.Document_Name = 'Robbin CV';
```
-------------------------7305 sample_num
```sql
SELECT COUNT(DISTINCT Templates.Template_ID) 
FROM Templates 
JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
```
-------------------------7306 sample_num
```sql
SELECT COUNT(DISTINCT Templates.Template_ID) 
FROM Templates 
JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
```
-------------------------7307 sample_num
```sql
SELECT COUNT(*) 
FROM Documents 
JOIN Templates ON Documents.Template_ID = Templates.Template_ID
JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
WHERE Ref_Template_Types.Template_Type_Code = 'PPT';
```
-------------------------7308 sample_num
```sql
SELECT COUNT(*) 
FROM Documents 
JOIN Templates ON Documents.Template_ID = Templates.Template_ID
JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
```
-------------------------7309 sample_num
```sql
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS NumberOfDocuments
FROM Templates
LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID
GROUP BY Templates.Template_ID;
```
-------------------------7310 sample_num
```sql
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Usage_Count
FROM Templates
JOIN Documents ON Templates.Template_ID = Documents.Template_ID
GROUP BY Templates.Template_ID;
```
-------------------------7311 sample_num
```sql
SELECT T1.Template_ID, T2.Template_Type_Code 
FROM Documents AS T1 
JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID 
JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code 
GROUP BY T1.Template_ID, T2.Template_Type_Code 
ORDER BY COUNT(T1.Document_ID) DESC 
LIMIT 1;
```
-------------------------7312 sample_num
```sql
SELECT T1.Template_ID, T1.Template_Type_Code 
FROM Templates AS T1 
JOIN Documents AS D2 ON T1.Template_ID = D2.Template_ID 
GROUP BY T1.Template_ID, T1.Template_Type_Code 
ORDER BY COUNT(D2.Document_ID) DESC 
LIMIT 1;
```
-------------------------7313 sample_num
```sql
SELECT t.Template_ID
FROM Templates t
JOIN Documents d ON t.Template_ID = d.Template_ID
GROUP BY t.Template_ID
HAVING COUNT(d.Document_ID) > 1;
```
-------------------------7314 sample_num
```sql
SELECT t.Template_ID 
FROM Templates t
JOIN Documents d ON t.Template_ID = d.Template_ID
GROUP BY t.Template_ID
HAVING COUNT(d.Document_ID) > 1;
```
-------------------------7315 sample_num
```sql
SELECT T.Template_ID 
FROM Templates T
LEFT JOIN Documents D ON T.Template_ID = D.Template_ID 
WHERE D.Document_ID IS NULL;
```
-------------------------7316 sample_num
```sql
SELECT Template_ID 
FROM Templates 
WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
```
-------------------------7317 sample_num
```sql
SELECT COUNT(*) FROM Templates;
```
-------------------------7318 sample_num
```sql
SELECT COUNT(*) FROM Templates;
```
-------------------------7319 sample_num
```sql
SELECT Template_ID, Version_Number, Template_Type_Code 
FROM Templates;
```
-------------------------7320 sample_num
```sql
SELECT Template_ID, Version_Number, Template_Type_Code 
FROM Templates;
```
-------------------------7321 sample_num
```sql
SELECT DISTINCT Template_Type_Code FROM Templates;
```
-------------------------7322 sample_num
```sql
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;
```
-------------------------7323 sample_num
```sql
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');
```
-------------------------7324 sample_num
```sql
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');
```
-------------------------7325 sample_num
```sql
SELECT COUNT(*) 
FROM Templates 
WHERE Template_Type_Code = 'CV';
```
-------------------------7326 sample_num
```sql
SELECT COUNT(*) 
FROM Templates 
JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code 
WHERE Ref_Template_Types.Template_Type_Description = 'CV';
```
-------------------------7327 sample_num
```sql
SELECT Version_Number, Template_Type_Code 
FROM Templates 
WHERE Version_Number > 5;
```
-------------------------7328 sample_num
```sql
SELECT Version_Number, Template_Type_Code 
FROM Templates 
WHERE Version_Number > 5;
```
-------------------------7329 sample_num
```sql
SELECT Ref_Template_Types.Template_Type_Code, COUNT(Templates.Template_ID) as Number_of_Templates
FROM Ref_Template_Types
LEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code
GROUP BY Ref_Template_Types.Template_Type_Code;
```
-------------------------7330 sample_num
```sql
SELECT Template_Type_Code, COUNT(*) AS Number_of_Templates
FROM Templates
GROUP BY Template_Type_Code;
```
-------------------------7331 sample_num
```sql
SELECT Template_Type_Code, COUNT(*) AS Template_Count
FROM Templates
GROUP BY Template_Type_Code
ORDER BY Template_Count DESC
LIMIT 1;
```
-------------------------7332 sample_num
```sql
SELECT Template_Type_Code, COUNT(*) AS Template_Count
FROM Templates
GROUP BY Template_Type_Code
ORDER BY Template_Count DESC
LIMIT 1;
```
-------------------------7333 sample_num
```sql
SELECT T1.Template_Type_Code 
FROM Ref_Template_Types T1
JOIN Templates T2 ON T1.Template_Type_Code = T2.Template_Type_Code
GROUP BY T1.Template_Type_Code
HAVING COUNT(T2.Template_ID) < 3;
```
-------------------------7334 sample_num
```sql
SELECT Template_Type_Code 
FROM Templates 
GROUP BY Template_Type_Code 
HAVING COUNT(Template_ID) < 3;
```
-------------------------7335 sample_num
```sql
SELECT MIN(T.Version_Number), T.Template_Type_Code 
FROM Templates AS T;
```
However, to ensure accurate results and avoid potential NULL value issues, a better query would be:
```sql
SELECT MIN(T.Version_Number) AS Min_Version, TT.Template_Type_Code 
FROM Templates AS T
JOIN Ref_Template_Types AS TT ON T.Template_Type_Code = TT.Template_Type_Code
WHERE T.Version_Number IS NOT NULL;
```
But based on your requirement, the first query should suffice if you are not concerned about NULL values or joining with the Ref_Template_Types table.
-------------------------7336 sample_num
```sql
SELECT MIN(T.Version_Number), T.Template_Type_Code 
FROM Templates AS T
GROUP BY T.Template_Type_Code
ORDER BY MIN(T.Version_Number);
```
```
-------------------------7337 sample_num
```sql
SELECT T.Template_Type_Code 
FROM Templates T
JOIN Documents D ON T.Template_ID = D.Template_ID
WHERE D.Document_Name = 'Data base';
```
-------------------------7338 sample_num
```sql
SELECT T.Template_Type_Code 
FROM Templates T
JOIN Documents D ON T.Template_ID = D.Template_ID
WHERE D.Document_Name = 'Data base';
```
-------------------------7339 sample_num
```sql
SELECT D.Document_Name 
FROM Documents D
JOIN Templates T ON D.Template_ID = T.Template_ID
JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code
WHERE R.Template_Type_Code = 'BK';
```
-------------------------7340 sample_num
```sql
SELECT D.Document_Name 
FROM Documents D
JOIN Templates T ON D.Template_ID = T.Template_ID 
WHERE T.Template_Type_Code = 'BK';
```
-------------------------7341 sample_num
```sql
SELECT Ref_Template_Types.Template_Type_Code, COUNT(Documents.Document_ID) AS NumberOfDocuments
FROM Ref_Template_Types
JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code
JOIN Documents ON Templates.Template_ID = Documents.Template_ID
GROUP BY Ref_Template_Types.Template_Type_Code;
```
-------------------------7342 sample_num
```sql
SELECT RTT.Template_Type_Code, COUNT(DISTINCT D.Document_ID) AS Document_Count
FROM Ref_Template_Types RTT
JOIN Templates T ON RTT.Template_Type_Code = T.Template_Type_Code
JOIN Documents D ON T.Template_ID = D.Template_ID
GROUP BY RTT.Template_Type_Code;
```
-------------------------7343 sample_num
```sql
SELECT T.Template_Type_Code, COUNT(D.Document_ID) AS Document_Count
FROM Templates T
JOIN Documents D ON T.Template_ID = D.Template_ID
GROUP BY T.Template_Type_Code
ORDER BY Document_Count DESC
LIMIT 1;
```
-------------------------7344 sample_num
```sql
SELECT T.Template_Type_Code, COUNT(*) AS Frequency
FROM Documents D
JOIN Templates T ON D.Template_ID = T.Template_ID
GROUP BY T.Template_Type_Code
ORDER BY Frequency DESC
LIMIT 1;
```
-------------------------7345 sample_num
```sql
SELECT Template_Type_Code 
FROM Ref_Template_Types 
WHERE Template_Type_Code NOT IN (SELECT Template_ID FROM Documents)
```
However, for accuracy, it should be:
```sql
SELECT rtt.Template_Type_Code
FROM Ref_Template_Types rtt
LEFT JOIN Templates t ON rtt.Template_Type_Code = t.Template_Type_Code
WHERE t.Template_ID IS NULL OR t.Template_ID NOT IN (SELECT Document_ID FROM Documents)
``` 
But this second one is more complex and checks also if the Template_ID from Templates table is used in Documents table. The first one will return template type codes not used in documents assuming there is a direct correlation between Template_Type_Code in Ref_Template_Types and Template_ID in Documents which might not always be the case.
-------------------------7346 sample_num
```sql
SELECT Template_Type_Code 
FROM Ref_Template_Types 
WHERE Template_Type_Code NOT IN (SELECT Template_ID FROM Documents)
```
Note: This query might not give the correct result if there are templates that have never been used in any document but still it's asked in the question to provide the SQL query for such scenario. The correct query should be:
```sql
SELECT rtt.Template_Type_Code 
FROM Ref_Template_Types rtt 
LEFT JOIN Templates t ON rtt.Template_Type_Code = t.Template_Type_Code 
WHERE t.Template_Type_Code IS NULL
```
-------------------------7347 sample_num
```sql
SELECT Template_Type_Code, Template_Type_Description 
FROM Ref_Template_Types;
```
-------------------------7348 sample_num
```sql
SELECT Template_Type_Code, Template_Type_Description 
FROM Ref_Template_Types;
```
-------------------------7349 sample_num
```sql
SELECT Template_Type_Description 
FROM Ref_Template_Types 
WHERE Template_Type_Code = 'AD';
```
-------------------------7350 sample_num
```sql
SELECT Template_Type_Description 
FROM Ref_Template_Types 
WHERE Template_Type_Code = 'AD';
```
-------------------------7351 sample_num
```sql
SELECT Template_Type_Code 
FROM Ref_Template_Types 
WHERE Template_Type_Description = 'Book';
```
-------------------------7352 sample_num
```sql
SELECT Template_Type_Code 
FROM Ref_Template_Types 
WHERE Template_Type_Description = "Book";
```
-------------------------7353 sample_num
```sql
SELECT DISTINCT Ref_Template_Types.Template_Type_Description 
FROM Ref_Template_Types 
JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code 
JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
```
-------------------------7354 sample_num
```sql
SELECT DISTINCT T.Template_Type_Description 
FROM Ref_Template_Types T
JOIN Templates TM ON T.Template_Type_Code = TM.Template_Type_Code
JOIN Documents D ON TM.Template_ID = D.Template_ID;
```
-------------------------7355 sample_num
```sql
SELECT Templates.Template_ID 
FROM Templates 
JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code 
WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
```
-------------------------7356 sample_num
```sql
SELECT T.Template_ID 
FROM Templates T
JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code 
WHERE R.Template_Type_Description = 'Presentation';
```
-------------------------7357 sample_num
```sql
SELECT COUNT(*) FROM Paragraphs;
```
-------------------------7358 sample_num
```sql
SELECT COUNT(*) FROM Paragraphs;
```
-------------------------7359 sample_num
```sql
SELECT COUNT(*) 
FROM Paragraphs 
JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID 
WHERE Documents.Document_Name = 'Summer Show';
```
-------------------------7360 sample_num
```sql
SELECT COUNT(*) 
FROM Paragraphs p
JOIN Documents d ON p.Document_ID = d.Document_ID
WHERE d.Document_Name = 'Summer Show';
```
-------------------------7361 sample_num
```sql
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea';
```
-------------------------7362 sample_num
```sql
SELECT p.Paragraph_Text, d.Document_Name, t.Template_Details 
FROM Paragraphs p 
JOIN Documents d ON p.Document_ID = d.Document_ID 
JOIN Templates t ON d.Template_ID = t.Template_ID 
WHERE p.Paragraph_Text LIKE '%Korea%';
```
-------------------------7363 sample_num
```sql
SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text 
FROM Paragraphs 
JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID 
WHERE Documents.Document_Name = 'Welcome to NY';
```
-------------------------7364 sample_num
```sql
SELECT P.Paragraph_ID, P.Paragraph_Text 
FROM Paragraphs P
JOIN Documents D ON P.Document_ID = D.Document_ID
WHERE D.Document_Name = 'Welcome to NY';
```
-------------------------7365 sample_num
```sql
SELECT Paragraphs.Paragraph_Text 
FROM Paragraphs 
JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID 
WHERE Documents.Document_Name = 'Customer reviews';
```
-------------------------7366 sample_num
```sql
SELECT Paragraphs.Paragraph_Text 
FROM Paragraphs 
JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID 
WHERE Documents.Document_Name = 'Customer reviews';
```
-------------------------7367 sample_num
```sql
SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS NumberOfParagraphs
FROM Documents D
LEFT JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID
ORDER BY D.Document_ID;
```
-------------------------7368 sample_num
```sql
SELECT Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) AS NumberOfParagraphs
FROM Documents
JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID
GROUP BY Documents.Document_ID
ORDER BY Documents.Document_ID;
```
-------------------------7369 sample_num
```sql
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS NumberOfParagraphs
FROM Documents D
LEFT JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID, D.Document_Name;
```
-------------------------7370 sample_num
```sql
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS NumberOfParagraphs
FROM Documents D
LEFT JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID, D.Document_Name;
```
-------------------------7371 sample_num
```sql
SELECT D.Document_ID
FROM Documents D
JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID
HAVING COUNT(P.Paragraph_ID) >= 2;
```
-------------------------7372 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID
HAVING COUNT(P.Paragraph_ID) >= 2;
```
-------------------------7373 sample_num
```sql
SELECT D.Document_ID, D.Document_Name, COUNT(P.Paragraph_ID) AS NumberOfParagraphs
FROM Documents D
JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID, D.Document_Name
ORDER BY NumberOfParagraphs DESC
LIMIT 1;
```
-------------------------7374 sample_num
```sql
SELECT D.Document_ID, D.Document_Name 
FROM Documents D 
JOIN Paragraphs P ON D.Document_ID = P.Document_ID 
GROUP BY D.Document_ID, D.Document_Name 
ORDER BY COUNT(P.Paragraph_ID) DESC 
LIMIT 1;
```
-------------------------7375 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID
ORDER BY COUNT(P.Paragraph_ID) ASC
LIMIT 1;
```
-------------------------7376 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID
ORDER BY COUNT(P.Paragraph_ID) ASC
LIMIT 1;
```
-------------------------7377 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID
HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2;
```
-------------------------7378 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D
JOIN Paragraphs P ON D.Document_ID = P.Document_ID
GROUP BY D.Document_ID
HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2;
```
-------------------------7379 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D 
JOIN Paragraphs P ON D.Document_ID = P.Document_ID 
WHERE P.Paragraph_Text IN ('Brazil', 'Ireland') 
GROUP BY D.Document_ID 
HAVING COUNT(DISTINCT P.Paragraph_Text) = 2;
```
-------------------------7380 sample_num
```sql
SELECT D.Document_ID 
FROM Documents D 
JOIN Paragraphs P ON D.Document_ID = P.Document_ID 
WHERE P.Paragraph_Text LIKE '%Brazil%' 
AND P.Paragraph_Text LIKE '%Ireland%';
```
```
-------------------------7381 sample_num
```sql
SELECT COUNT(*) FROM teacher;
```
-------------------------7382 sample_num
```sql
SELECT COUNT(*) FROM teacher;
```
-------------------------7383 sample_num
```sql
SELECT Name 
FROM teacher 
ORDER BY Age ASC;
```
-------------------------7384 sample_num
```sql
SELECT Name FROM teacher ORDER BY Age ASC;
```
-------------------------7385 sample_num
```sql
SELECT Age, Hometown FROM teacher;
```
-------------------------7386 sample_num
```sql
SELECT Age, Hometown FROM teacher;
```
-------------------------7387 sample_num
```sql
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
```
-------------------------7388 sample_num
```sql
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
```
-------------------------7389 sample_num
```sql
SELECT Name 
FROM teacher 
WHERE Age IN (32, 33);
```
-------------------------7390 sample_num
```sql
SELECT Name 
FROM teacher 
WHERE Age IN (32, 33);
```
-------------------------7391 sample_num
```sql
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
```
-------------------------7392 sample_num
```sql
SELECT Hometown 
FROM teacher 
WHERE Age = (SELECT MIN(Age) FROM teacher);
```
-------------------------7393 sample_num
```sql
SELECT Hometown, COUNT(*) 
FROM teacher 
GROUP BY Hometown;
```
-------------------------7394 sample_num
```sql
SELECT Hometown, COUNT(Teacher_ID) 
FROM teacher 
GROUP BY Hometown;
```
-------------------------7395 sample_num
```sql
SELECT Hometown, COUNT(*) as count 
FROM teacher 
GROUP BY Hometown 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------7396 sample_num
```sql
SELECT Hometown, COUNT(*) as Count 
FROM teacher 
GROUP BY Hometown 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------7397 sample_num
```sql
SELECT Hometown 
FROM teacher 
GROUP BY Hometown 
HAVING COUNT(Teacher_ID) >= 2;
```
-------------------------7398 sample_num
```sql
SELECT Hometown 
FROM teacher 
GROUP BY Hometown 
HAVING COUNT(Teacher_ID) >= 2;
```
-------------------------7399 sample_num
```sql
SELECT teacher.Name, course.Course 
FROM teacher 
JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID 
JOIN course ON course.Course_ID = course_arrange.Course_ID;
```
-------------------------7400 sample_num
```sql
SELECT teacher.Name, course.Course 
FROM teacher 
JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID 
JOIN course ON course.Course_ID = course_arrange.Course_ID;
```
-------------------------7401 sample_num
```sql
SELECT teacher.Name, course.Course
FROM teacher
JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID
JOIN course ON course_arrange.Course_ID = course.Course_ID
ORDER BY teacher.Name ASC;
```
-------------------------7402 sample_num
```sql
SELECT teacher.Name, course.Course
FROM course_arrange
JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID
JOIN course ON course_arrange.Course_ID = course.Course_ID
ORDER BY teacher.Name ASC;
```
-------------------------7403 sample_num
```sql
SELECT t.Name 
FROM course_arrange ca 
JOIN course c ON ca.Course_ID = c.Course_ID 
JOIN teacher t ON ca.Teacher_ID = t.Teacher_ID 
WHERE c.Course = 'math';
```
-------------------------7404 sample_num
```sql
SELECT T2.Name 
FROM course_arrange AS T1 
JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID 
JOIN course AS T3 ON T1.Course_ID = T3.Course_ID 
WHERE T3.Course = 'math'
```
-------------------------7405 sample_num
```sql
SELECT T2.Name, COUNT(T1.Course_ID) 
FROM course_arrange AS T1 
JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID 
GROUP BY T2.Name;
```
-------------------------7406 sample_num
```sql
SELECT T2.Name, COUNT(T1.Course_ID) 
FROM course_arrange AS T1 
JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID 
GROUP BY T2.Name;
```
-------------------------7407 sample_num
```sql
SELECT t.Name 
FROM teacher t 
JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID 
GROUP BY t.Name 
HAVING COUNT(ca.Course_ID) >= 2;
```
-------------------------7408 sample_num
```sql
SELECT t.Name
FROM teacher t
JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID
GROUP BY t.Teacher_ID, t.Name
HAVING COUNT(ca.Course_ID) >= 2;
```
-------------------------7409 sample_num
```sql
SELECT Name 
FROM teacher 
WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)
```
-------------------------7410 sample_num
```sql
SELECT t.Name 
FROM teacher t 
LEFT JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID 
WHERE ca.Teacher_ID IS NULL
```
-------------------------7411 sample_num
```sql
SELECT COUNT(*) 
FROM visitor 
WHERE Age < 30;
```
-------------------------7412 sample_num
```sql
SELECT Name 
FROM visitor 
WHERE Level_of_membership > 4 
ORDER BY Level_of_membership DESC;
```
-------------------------7413 sample_num
```sql
SELECT AVG(Age) 
FROM visitor 
WHERE Level_of_membership <= 4;
```
-------------------------7414 sample_num
```sql
SELECT Name, Level_of_membership 
FROM visitor 
WHERE Level_of_membership > 4 
ORDER BY Age DESC;
```
-------------------------7415 sample_num
```sql
SELECT Museum_ID, Name 
FROM museum 
ORDER BY Num_of_Staff DESC 
LIMIT 1;
```
-------------------------7416 sample_num
```sql
SELECT AVG(Num_of_Staff) 
FROM museum 
WHERE Open_Year < 2009;
```
-------------------------7417 sample_num
```sql
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
```
-------------------------7418 sample_num
```sql
SELECT T1.Name 
FROM museum AS T1 
WHERE T1.Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010)
```
-------------------------7419 sample_num
```sql
SELECT v.ID, v.Name, v.Age 
FROM visitor v
JOIN visit vt
ON v.ID = vt.visitor_ID
GROUP BY v.ID, v.Name, v.Age
HAVING COUNT(vt.Museum_ID) > 1;
```
-------------------------7420 sample_num
```sql
SELECT v.ID, v.Name, v.Level_of_membership 
FROM visitor v 
JOIN (
    SELECT visitor_ID, SUM(Total_spent) as total_spent 
    FROM visit 
    GROUP BY visitor_ID
) subquery 
ON v.ID = subquery.visitor_ID 
WHERE subquery.total_spent = (
    SELECT MAX(total_spent) 
    FROM (
        SELECT SUM(Total_spent) as total_spent 
        FROM visit 
        GROUP BY visitor_ID
    ) as spending
)
```
-------------------------7421 sample_num
```sql
SELECT T1.Museum_ID, T2.Name 
FROM visit AS T1 
JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID 
GROUP BY T1.Museum_ID 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------7422 sample_num
```sql
SELECT m.Name 
FROM museum m 
LEFT JOIN visit v ON m.Museum_ID = v.Museum_ID 
WHERE v.Museum_ID IS NULL;
```
-------------------------7423 sample_num
```sql
SELECT v.Name, v.Age 
FROM visitor v 
JOIN visit vi ON v.ID = vi.visitor_ID 
WHERE vi.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
```
-------------------------7424 sample_num
```sql
SELECT AVG(Num_of_Ticket) AS Average_Tickets, MAX(Num_of_Ticket) AS Maximum_Tickets 
FROM visit;
```
-------------------------7425 sample_num
```sql
SELECT SUM(Total_spent) 
FROM visit 
WHERE visitor_ID IN (SELECT ID FROM visitor WHERE Level_of_membership = 1)
```
```
-------------------------7426 sample_num
```sql
SELECT v.Name 
FROM visitor v
JOIN visit vi ON v.ID = vi.visitor_ID
JOIN museum m ON m.Museum_ID = vi.Museum_ID
WHERE m.Open_Year < 2009
INTERSECT
SELECT v.Name 
FROM visitor v
JOIN visit vi ON v.ID = vi.visitor_ID
JOIN museum m ON m.Museum_ID = vi.Museum_ID
WHERE m.Open_Year > 2011;
```
-------------------------7427 sample_num
```sql
SELECT COUNT(*) 
FROM visitor 
WHERE ID NOT IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2010))
```
-------------------------7428 sample_num
```sql
SELECT COUNT(*) FROM museum WHERE Open_Year < 2008 OR Open_Year > 2013;
```
-------------------------7429 sample_num
```sql
SELECT COUNT(*) FROM players;
```
-------------------------7430 sample_num
```sql
SELECT COUNT(*) FROM players;
```
-------------------------7431 sample_num
```sql
SELECT COUNT(*) FROM matches;
```
-------------------------7432 sample_num
```sql
SELECT COUNT(*) FROM matches;
```
-------------------------7433 sample_num
```sql
SELECT first_name, birth_date 
FROM players 
WHERE country_code = 'USA';
```
-------------------------7434 sample_num
```sql
SELECT first_name, birth_date 
FROM players 
WHERE country_code = 'USA';
```
-------------------------7435 sample_num
```sql
SELECT AVG(winner_age) AS avg_winner_age, AVG(loser_age) AS avg_loser_age 
FROM matches;
```
-------------------------7436 sample_num
```sql
SELECT AVG(winner_age) as avg_winner_age, AVG(loser_age) as avg_loser_age FROM matches;
```
-------------------------7437 sample_num
```sql
SELECT AVG(winner_rank) FROM matches;
```
-------------------------7438 sample_num
```sql
SELECT AVG(winner_rank) FROM matches
```
-------------------------7439 sample_num
```sql
SELECT MIN(m.winner_rank) AS highest_loser_rank
FROM matches m
WHERE m.loser_rank IS NOT NULL;
```
Note: The question asks for the highest rank of losers, but since the ranks are typically ordered in descending order (lower number means higher rank), I used MIN function on winner_rank column by mistake. To correctly find the highest rank of losers, the query should be:
```sql
SELECT MIN(loser_rank) AS highest_loser_rank
FROM matches 
WHERE loser_rank IS NOT NULL;
```
-------------------------7440 sample_num
```sql
SELECT MIN(ranking) 
FROM rankings 
WHERE player_id IN (SELECT loser_id FROM matches)
```
```
-------------------------7441 sample_num
```sql
SELECT COUNT(DISTINCT country_code) FROM players;
```
-------------------------7442 sample_num
```sql
SELECT COUNT(DISTINCT country_code) FROM players;
```
-------------------------7443 sample_num
```sql
SELECT COUNT(DISTINCT loser_name) FROM matches;
```
-------------------------7444 sample_num
```sql
SELECT COUNT(DISTINCT loser_name) FROM matches;
```
-------------------------7445 sample_num
```sql
SELECT tourney_name 
FROM matches 
GROUP BY tourney_name 
HAVING COUNT(*) > 10;
```
-------------------------7446 sample_num
```sql
SELECT tourney_name 
FROM matches 
GROUP BY tourney_name 
HAVING COUNT(*) > 10
```
-------------------------7447 sample_num
```sql
SELECT T1.winner_name 
FROM (
    SELECT winner_id FROM matches WHERE year = 2013
) AS T1
JOIN (
    SELECT winner_id FROM matches WHERE year = 2016
) AS T2
ON T1.winner_id = T2.winner_id
JOIN players AS P
ON P.player_id = T1.winner_id
GROUP BY T1.winner_id
HAVING COUNT(*) > 0;
```
Note: This query assumes that there are unique winner_ids for each player across all years in the matches table. If not, an additional DISTINCT might be necessary in the subqueries. Also, it's possible for this query to return no rows if no player won in both years.
-------------------------7448 sample_num
```sql
SELECT T1.first_name, T1.last_name 
FROM players AS T1 
JOIN matches AS T2 ON T1.player_id = T2.winner_id 
WHERE YEAR = 2013 
GROUP BY T1.player_id 
HAVING COUNT(*) > 0 
INTERSECT 
SELECT T1.first_name, T1.last_name 
FROM players AS T1 
JOIN matches AS T2 ON T1.player_id = T2.winner_id 
WHERE YEAR = 2016 
GROUP BY T1.player_id 
HAVING COUNT(*) > 0;
```
-------------------------7449 sample_num
```sql
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
```
-------------------------7450 sample_num
```sql
SELECT COUNT(*) 
FROM matches 
WHERE year IN (2013, 2016);
```
-------------------------7451 sample_num
```sql
SELECT T1.country_code, T1.first_name 
FROM players AS T1 
JOIN matches AS T2 ON T1.player_id = T2.winner_id 
WHERE T2.tourney_name = 'WTA Championships' 
INTERSECT 
SELECT T1.country_code, T1.first_name 
FROM players AS T1 
JOIN matches AS T2 ON T1.player_id = T2.winner_id 
WHERE T2.tourney_name = 'Australian Open'
```
-------------------------7452 sample_num
```sql
SELECT DISTINCT p.first_name, p.country_code 
FROM players p
JOIN matches m ON p.player_id = m.winner_id
WHERE m.tourney_name IN ('WTA Championships', 'Australian Open')
GROUP BY p.player_id
HAVING COUNT(DISTINCT m.tourney_name) = 2;
```
-------------------------7453 sample_num
```sql
SELECT first_name, country_code 
FROM players 
WHERE birth_date = (SELECT MIN(birth_date) FROM players);
```
-------------------------7454 sample_num
```sql
SELECT first_name, country_code 
FROM players 
WHERE birth_date = (SELECT MIN(birth_date) FROM players);
```
-------------------------7455 sample_num
```sql
SELECT first_name, last_name 
FROM players 
ORDER BY birth_date;
```
-------------------------7456 sample_num
```sql
SELECT first_name, last_name FROM players ORDER BY birth_date;
```
-------------------------7457 sample_num
```sql
SELECT first_name, last_name 
FROM players 
WHERE hand = 'L' 
ORDER BY birth_date;
```
-------------------------7458 sample_num
```sql
SELECT first_name, last_name 
FROM players 
WHERE hand = 'L' 
ORDER BY birth_date;
```
-------------------------7459 sample_num
```sql
SELECT T1.first_name, T1.country_code 
FROM players AS T1 
JOIN rankings AS T2 ON T1.player_id = T2.player_id 
GROUP BY T1.player_id 
ORDER BY SUM(T2.tours) DESC 
LIMIT 1;
```
-------------------------7460 sample_num
```sql
SELECT p.first_name, p.country_code 
FROM players p
JOIN rankings r ON p.player_id = r.player_id
GROUP BY p.player_id
ORDER BY COUNT(r.tours) DESC
LIMIT 1;
```
-------------------------7461 sample_num
```sql
SELECT year, COUNT(*) as num_matches
FROM matches
GROUP BY year
ORDER BY num_matches DESC
LIMIT 1;
```
-------------------------7462 sample_num
```sql
SELECT year, COUNT(*) as num_matches 
FROM matches 
GROUP BY year 
ORDER BY num_matches DESC 
LIMIT 1;
```
-------------------------7463 sample_num
```sql
SELECT T2.winner_name, T2.winner_rank_points
FROM (
  SELECT winner_id, COUNT(*) AS win_times
  FROM matches
  GROUP BY winner_id
) AS T1
JOIN matches AS T2 ON T1.winner_id = T2.winner_id
WHERE T1.win_times = (
  SELECT MAX(win_times)
  FROM (
    SELECT winner_id, COUNT(*) AS win_times
    FROM matches
    GROUP BY winner_id
  ) AS sub_query
)
LIMIT 1;
```
-------------------------7464 sample_num
```sql
SELECT T1.winner_name, T1.winner_rank_points FROM matches AS T1 JOIN (SELECT winner_id, COUNT(*) AS win_count FROM matches GROUP BY winner_id ORDER BY win_count DESC LIMIT 1) AS T2 ON T1.winner_id = T2.winner_id;
```
-------------------------7465 sample_num
```sql
SELECT T2.winner_name 
FROM matches AS T2 
JOIN rankings AS T1 
ON T1.player_id = T2.winner_id 
WHERE T2.tourney_name = 'Australian Open' 
ORDER BY T2.winner_rank_points DESC 
LIMIT 1;
```
-------------------------7466 sample_num
```sql
SELECT T2.winner_name 
FROM matches AS T2 
JOIN rankings AS T1 
ON T2.winner_id = T1.player_id 
WHERE T2.tourney_name = 'Australian Open' 
ORDER BY T2.winner_rank_points DESC 
LIMIT 1;
```
-------------------------7467 sample_num
```sql
SELECT loser_name, winner_name 
FROM matches 
WHERE minutes = (SELECT MAX(minutes) FROM matches);
```
-------------------------7468 sample_num
```sql
SELECT 
    T2.winner_name AS winner, 
    T2.loser_name AS loser 
FROM 
    matches AS T2 
ORDER BY 
    T2.minutes DESC 
LIMIT 1;
```
-------------------------7469 sample_num
```sql
SELECT players.first_name, AVG(rankings.ranking) as avg_ranking
FROM players
JOIN rankings ON players.player_id = rankings.player_id
GROUP BY players.player_id, players.first_name;
```
-------------------------7470 sample_num
```sql
SELECT players.first_name, AVG(rankings.ranking) 
FROM players 
JOIN rankings ON players.player_id = rankings.player_id 
GROUP BY players.first_name;
```
-------------------------7471 sample_num
```sql
SELECT players.first_name, SUM(rankings.ranking_points) 
FROM players 
JOIN rankings ON players.player_id = rankings.player_id 
GROUP BY players.first_name;
```
-------------------------7472 sample_num
```sql
SELECT players.first_name, SUM(rankings.ranking_points) 
FROM players 
JOIN rankings ON players.player_id = rankings.player_id 
GROUP BY players.first_name;
```
-------------------------7473 sample_num
```sql
SELECT country_code, COUNT(player_id) as num_players
FROM players
GROUP BY country_code;
```
-------------------------7474 sample_num
```sql
SELECT country_code, COUNT(player_id) 
FROM players 
GROUP BY country_code;
```
-------------------------7475 sample_num
```sql
SELECT country_code 
FROM players 
GROUP BY country_code 
ORDER BY COUNT(player_id) DESC 
LIMIT 1;
```
-------------------------7476 sample_num
```sql
SELECT country_code 
FROM players 
GROUP BY country_code 
ORDER BY COUNT(player_id) DESC 
LIMIT 1;
```
-------------------------7477 sample_num
```sql
SELECT country_code 
FROM players 
GROUP BY country_code 
HAVING COUNT(player_id) > 50;
```
-------------------------7478 sample_num
```sql
SELECT country_code 
FROM players 
GROUP BY country_code 
HAVING COUNT(player_id) > 50;
```
-------------------------7479 sample_num
```sql
SELECT ranking_date, SUM(tours) as total_tours 
FROM rankings 
GROUP BY ranking_date;
```
-------------------------7480 sample_num
```sql
SELECT ranking_date, SUM(tours) as total_tours 
FROM rankings 
GROUP BY ranking_date;
```
-------------------------7481 sample_num
```sql
SELECT COUNT(*), year 
FROM matches 
GROUP BY year;
```
-------------------------7482 sample_num
```sql
SELECT COUNT(*), year 
FROM matches 
GROUP BY year;
```
-------------------------7483 sample_num
```sql
SELECT 
    w.winner_name,
    w.winner_rank
FROM 
    matches w
JOIN 
    players p ON w.winner_id = p.player_id
WHERE 
    (w.winner_id, w.tourney_date) IN (
        SELECT 
            winner_id,
            MIN(tourney_date)
        FROM 
            matches
        GROUP BY 
            winner_id
    )
ORDER BY 
    w.winner_age ASC
LIMIT 3;
```
-------------------------7484 sample_num
```sql
SELECT T2.winner_name, T2.winner_rank 
FROM matches AS T2 
JOIN players AS T1 ON T1.player_id = T2.winner_id 
ORDER BY T1.birth_date DESC 
LIMIT 3;
```
-------------------------7485 sample_num
```sql
SELECT COUNT(DISTINCT winner_id) 
FROM matches 
WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
```
-------------------------7486 sample_num
```sql
SELECT COUNT(*) 
FROM matches 
JOIN players ON matches.winner_id = players.player_id 
WHERE players.hand = 'L' AND matches.tourney_name = 'WTA Championships';
```
-------------------------7487 sample_num
```sql
SELECT p.first_name, p.country_code, p.birth_date 
FROM players p 
JOIN (
  SELECT winner_id, MAX(winner_rank_points) as max_points 
  FROM matches
) m 
ON p.player_id = m.winner_id;
```
-------------------------7488 sample_num
```sql
SELECT p.first_name, p.country_code, p.birth_date 
FROM players p 
JOIN matches m ON p.player_id = m.winner_id 
WHERE m.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
```
However, this query won't work properly if there's more than one player with the maximum winner_rank_points. If you want to include all players with the maximum winner_rank_points, you should use a subquery that selects the maximum value first:
```sql
SELECT p.first_name, p.country_code, p.birth_date 
FROM players p 
JOIN matches m ON p.player_id = m.winner_id 
WHERE m.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
GROUP BY p.player_id, p.first_name, p.country_code, p.birth_date
```
-------------------------7489 sample_num
```sql
SELECT hand, COUNT(player_id) 
FROM players 
GROUP BY hand;
```
-------------------------7490 sample_num
```sql
SELECT hand, COUNT(player_id) 
FROM players 
GROUP BY hand;
```
-------------------------7491 sample_num
```sql
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
```
-------------------------7492 sample_num
```sql
SELECT name, tonnage 
FROM ship 
ORDER BY name DESC;
```
-------------------------7493 sample_num
```sql
SELECT name, date, result FROM battle;
```
-------------------------7494 sample_num
```sql
SELECT MAX(death.killed + death.injured) AS max_death_toll, MIN(death.killed + death.injured) AS min_death_toll 
FROM death
```
-------------------------7495 sample_num
```sql
SELECT AVG(injured) FROM death;
```
-------------------------7496 sample_num
```sql
SELECT death.note, death.killed, death.injured 
FROM death 
JOIN ship ON death.caused_by_ship_id = ship.id 
WHERE ship.tonnage = 't';
```
-------------------------7497 sample_num
```sql
SELECT name, result 
FROM battle 
WHERE bulgarian_commander != 'Boril';
```
-------------------------7498 sample_num
```sql
SELECT DISTINCT b.id, b.name 
FROM battle b
JOIN ship s ON s.lost_in_battle = b.id 
WHERE s.ship_type = 'Brig';
```
-------------------------7499 sample_num
```sql
SELECT b.id, b.name 
FROM battle AS b
JOIN death AS d ON b.id = d.caused_by_ship_id
GROUP BY b.id, b.name
HAVING SUM(d.killed) > 10;
```
-------------------------7500 sample_num
```sql
SELECT T1.id, T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name ORDER BY SUM(T2.injured) DESC LIMIT 1;
```
-------------------------7501 sample_num
```sql
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I';
```
-------------------------7502 sample_num
```sql
SELECT COUNT(DISTINCT result) FROM battle;
```
-------------------------7503 sample_num
```sql
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = 225)
```
Note: This query assumes that the 'lost_in_battle' column in the 'ship' table contains the 'id' of the battle where the ship was lost. If this is not the case, you might need to adjust the query accordingly.
-------------------------7504 sample_num
```sql
SELECT b.name, b.date 
FROM battle AS b 
JOIN ship AS s1 ON b.id = s1.lost_in_battle 
JOIN ship AS s2 ON b.id = s2.lost_in_battle 
WHERE (s1.name = 'Lettice' OR s2.name = 'HMS Atalanta') 
AND (s1.name = 'Lettice' OR s2.name = 'HMS Atalanta');
```
Note: This query assumes that 'Lettice' and 'HMS Atalanta' were both lost in the same battle. If they were lost in different battles, you will need two separate queries or use subqueries or join with death table.
It's also important to notice that the query may return multiple rows if there are multiple battles where both ships were lost.
-------------------------7505 sample_num
```sql
SELECT b.name, b.result, b.bulgarian_commander 
FROM battle AS b 
LEFT JOIN ship AS s ON b.id = s.lost_in_battle 
WHERE s.location <> 'English Channel' OR s.lost_in_battle IS NULL;
```
```
-------------------------7506 sample_num
```sql
SELECT note FROM death WHERE note LIKE '%East%';
```
-------------------------7507 sample_num
```sql
SELECT line_1, line_2 FROM Addresses;
```
-------------------------7508 sample_num
```sql
SELECT line_1, line_2 FROM Addresses;
```
-------------------------7509 sample_num
```sql
SELECT COUNT(*) FROM Courses;
```
-------------------------7510 sample_num
```sql
SELECT COUNT(*) FROM Courses;
```
-------------------------7511 sample_num
```sql
SELECT course_description 
FROM Courses 
WHERE course_name = 'math';
```
-------------------------7512 sample_num
```sql
SELECT Courses.course_description 
FROM Courses 
JOIN Departments ON Courses.department_id = Departments.department_id 
WHERE Departments.department_name = 'Math';
```
-------------------------7513 sample_num
```sql
SELECT Addresses.zip_postcode 
FROM Addresses 
WHERE Addresses.city = 'Port Chelsea';
```
-------------------------7514 sample_num
```sql
SELECT zip_postcode 
FROM Addresses 
WHERE city = 'Port Chelsea';
```
-------------------------7515 sample_num
```sql
SELECT D.department_id, D.department_name 
FROM Departments D
JOIN Degree_Programs DP ON D.department_id = DP.department_id
GROUP BY D.department_id, D.department_name
ORDER BY COUNT(DP.degree_program_id) DESC
LIMIT 1;
```
-------------------------7516 sample_num
```sql
SELECT D.department_name, D.department_id 
FROM Departments D
JOIN Degree_Programs DP ON D.department_id = DP.department_id
GROUP BY D.department_id, D.department_name
ORDER BY COUNT(DP.degree_program_id) DESC
LIMIT 1;
```
-------------------------7517 sample_num
```sql
SELECT COUNT(DISTINCT department_id) 
FROM Degree_Programs;
```
-------------------------7518 sample_num
```sql
SELECT COUNT(DISTINCT department_id) 
FROM Degree_Programs;
```
-------------------------7519 sample_num
```sql
SELECT COUNT(DISTINCT d.degree_summary_name) 
FROM Degree_Programs d;
```
-------------------------7520 sample_num
```sql
SELECT COUNT(DISTINCT degree_summary_name) 
FROM Degree_Programs;
```
-------------------------7521 sample_num
```sql
SELECT COUNT(*) 
FROM Degree_Programs dp
JOIN Departments d ON dp.department_id = d.department_id
WHERE d.department_name = 'Engineering';
```
-------------------------7522 sample_num
```sql
SELECT COUNT(*) 
FROM Degree_Programs dp
JOIN Departments d ON dp.department_id = d.department_id
WHERE d.department_name = 'Engineering';
```
-------------------------7523 sample_num
```sql
SELECT section_name, section_description FROM Sections;
```
-------------------------7524 sample_num
```sql
SELECT section_name, section_description FROM Sections;
```
-------------------------7525 sample_num
```sql
SELECT C.course_id, C.course_name 
FROM Courses C
WHERE NOT EXISTS (
    SELECT S.section_id 
    FROM Sections S 
    WHERE S.course_id = C.course_id
    GROUP BY S.course_id
    HAVING COUNT(S.section_id) > 2
);
```
-------------------------7526 sample_num
```sql
SELECT Courses.course_id, Courses.course_name 
FROM Courses 
WHERE Courses.course_id NOT IN (
    SELECT Sections.course_id 
    FROM Sections 
    GROUP BY Sections.course_id 
    HAVING COUNT(Sections.section_id) >= 2
)
```
-------------------------7527 sample_num
```sql
SELECT section_name
FROM Sections
ORDER BY section_name DESC;
```
-------------------------7528 sample_num
```sql
SELECT section_name FROM Sections ORDER BY section_name DESC;
```
-------------------------7529 sample_num
```sql
SELECT Semesters.semester_id, Semesters.semester_name 
FROM Semesters 
JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id 
GROUP BY Semesters.semester_id 
ORDER BY COUNT(Student_Enrolment.student_id) DESC 
LIMIT 1;
```
-------------------------7530 sample_num
```sql
SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
```
-------------------------7531 sample_num
```sql
SELECT department_description 
FROM Departments 
WHERE department_name LIKE '%the computer%';
```
-------------------------7532 sample_num
```sql
SELECT department_description 
FROM Departments 
WHERE department_name LIKE '%computer%';
```
-------------------------7533 sample_num
```sql
SELECT S.first_name, S.middle_name, S.last_name, S.student_id
FROM Students S
JOIN Student_Enrolment SE ON S.student_id = SE.student_id
WHERE SE.student_id IN (
    SELECT SE.student_id
    FROM Student_Enrolment SE
    JOIN Semesters SM ON SE.semester_id = SM.semester_id
    GROUP BY SE.student_id, SM.semester_id
    HAVING COUNT(DISTINCT SE.degree_program_id) = 2
)
GROUP BY S.student_id;
```
```
-------------------------7534 sample_num
```sql
SELECT s.first_name, s.middle_name, s.last_name, s.student_id 
FROM Students s 
JOIN Student_Enrolment se ON s.student_id = se.student_id 
GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name 
HAVING COUNT(DISTINCT se.degree_program_id) = 2 AND COUNT(DISTINCT se.semester_id) = 1;
```
-------------------------7535 sample_num
```sql
SELECT S.first_name, S.middle_name, S.last_name 
FROM Students S
JOIN Student_Enrolment SE ON S.student_id = SE.student_id
JOIN Degree_Programs DP ON SE.degree_program_id = DP.degree_program_id
WHERE DP.degree_summary_name LIKE '%Bachelor%';
```
-------------------------7536 sample_num
```sql
SELECT s.first_name, s.middle_name, s.last_name 
FROM Students s
JOIN Student_Enrolment se ON s.student_id = se.student_id
JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelors%';
```
-------------------------7537 sample_num
```sql
SELECT dp.department_name, COUNT(se.student_id) as num_students
FROM Degree_Programs dp
JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id
GROUP BY dp.department_name
ORDER BY num_students DESC
LIMIT 1;
```
```
-------------------------7538 sample_num
```sql
SELECT dp.degree_summary_name, COUNT(se.student_id) AS num_students
FROM Degree_Programs dp
JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id
GROUP BY dp.degree_summary_name
ORDER BY num_students DESC
LIMIT 1;
```
-------------------------7539 sample_num
```sql
SELECT dp.degree_program_id, dp.degree_summary_name
FROM Degree_Programs dp
JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id
GROUP BY dp.degree_program_id, dp.degree_summary_name
ORDER BY COUNT(se.student_id) DESC
LIMIT 1;
```
-------------------------7540 sample_num
```sql
SELECT dp.degree_program_id, dp.degree_summary_name
FROM Degree_Programs dp
JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id
GROUP BY dp.degree_program_id
ORDER BY COUNT(se.student_id) DESC
LIMIT 1;
```
-------------------------7541 sample_num
```sql
SELECT 
    s.student_id, 
    s.first_name, 
    s.middle_name, 
    s.last_name, 
    COUNT(se.student_id) AS enrollments_count
FROM 
    Students s
JOIN 
    Student_Enrolment se ON s.student_id = se.student_id
GROUP BY 
    s.student_id, 
    s.first_name, 
    s.middle_name, 
    s.last_name
ORDER BY 
    enrollments_count DESC
LIMIT 1;
```
-------------------------7542 sample_num
```sql
SELECT 
    s.first_name, 
    s.middle_name, 
    s.last_name, 
    s.student_id, 
    COUNT(se.student_id) AS enrollments_count
FROM 
    Students s
JOIN 
    Student_Enrolment se ON s.student_id = se.student_id
GROUP BY 
    s.student_id, s.first_name, s.middle_name, s.last_name
ORDER BY 
    enrollments_count DESC
LIMIT 1;
```
-------------------------7543 sample_num
```sql
SELECT s.semester_name 
FROM Semesters s
LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id
WHERE se.student_enrolment_id IS NULL;
```
-------------------------7544 sample_num
```sql
SELECT semester_name 
FROM Semesters 
WHERE semester_id NOT IN (
    SELECT semester_id 
    FROM Student_Enrolment
)
```
```
-------------------------7545 sample_num
```sql
SELECT DISTINCT c.course_name 
FROM Courses c
JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id;
```
-------------------------7546 sample_num
```sql
SELECT DISTINCT c.course_name 
FROM Courses c
JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id;
```
-------------------------7547 sample_num
```sql
SELECT C.course_name 
FROM Courses C
JOIN Student_Enrolment_Courses SEC ON C.course_id = SEC.course_id
GROUP BY C.course_name
ORDER BY COUNT(SEC.student_course_id) DESC
LIMIT 1;
```
-------------------------7548 sample_num
```sql
SELECT C.course_name 
FROM Courses C
JOIN Student_Enrolment_Courses SEC ON C.course_id = SEC.course_id
GROUP BY C.course_name
ORDER BY COUNT(SEC.student_course_id) DESC
LIMIT 1;
```
-------------------------7549 sample_num
```sql
SELECT s.last_name 
FROM Students s
JOIN Addresses a ON s.current_address_id = a.address_id 
WHERE a.state_province_county = 'North Carolina' 
AND s.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
```
```
-------------------------7550 sample_num
```sql
SELECT s.last_name 
FROM Students s
JOIN Addresses a ON s.current_address_id = a.address_id 
WHERE a.state_province_county = 'North Carolina' 
AND s.student_id NOT IN (SELECT student_id FROM Student_Enrolment)
```
-------------------------7551 sample_num
```sql
SELECT T1.transcript_date, T1.transcript_id 
FROM Transcripts AS T1 
JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id 
GROUP BY T1.transcript_id 
HAVING COUNT(T2.student_course_id) >= 2;
```
-------------------------7552 sample_num
```sql
SELECT T1.transcript_date, T1.transcript_id 
FROM Transcripts AS T1 
JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id 
GROUP BY T1.transcript_id 
HAVING COUNT(T2.student_course_id) >= 2;
```
-------------------------7553 sample_num
```sql
SELECT Students.cell_mobile_number 
FROM Students 
WHERE Students.first_name = 'Timmothy' AND Students.last_name = 'Ward';
```
-------------------------7554 sample_num
```sql
SELECT Students.cell_mobile_number 
FROM Students 
WHERE Students.first_name = 'Timmothy' AND Students.last_name = 'Ward';
```
-------------------------7555 sample_num
```sql
SELECT first_name, middle_name, last_name 
FROM Students 
ORDER BY date_first_registered ASC 
LIMIT 1;
```
-------------------------7556 sample_num
```sql
SELECT first_name, middle_name, last_name 
FROM Students 
ORDER BY date_first_registered ASC 
LIMIT 1;
```
-------------------------7557 sample_num
```sql
SELECT first_name, middle_name, last_name 
FROM Students 
WHERE date_left IS NOT NULL 
ORDER BY date_left 
LIMIT 1;
```
-------------------------7558 sample_num
```sql
SELECT first_name, middle_name, last_name 
FROM Students 
WHERE date_left IS NOT NULL 
ORDER BY date_left ASC 
LIMIT 1;
```
-------------------------7559 sample_num
```sql
SELECT s.first_name 
FROM Students s
WHERE s.current_address_id != s.permanent_address_id;
```
-------------------------7560 sample_num
```sql
SELECT first_name 
FROM Students 
WHERE current_address_id != permanent_address_id;
```
-------------------------7561 sample_num
```sql
SELECT Addresses.address_id, line_1, line_2, line_3 
FROM Addresses 
JOIN Students ON Addresses.address_id = Students.current_address_id 
GROUP BY Addresses.address_id, line_1, line_2, line_3 
ORDER BY COUNT(Students.student_id) DESC 
LIMIT 1;
```
-------------------------7562 sample_num
```sql
SELECT Addresses.address_id, Addresses.line_1, Addresses.line_2 
FROM Addresses
JOIN Students ON Addresses.address_id = Students.current_address_id
GROUP BY Addresses.address_id, Addresses.line_1, Addresses.line_2
ORDER BY COUNT(Students.student_id) DESC
LIMIT 1;
```
-------------------------7563 sample_num
```sql
SELECT AVG(transcript_date) FROM Transcripts;
```
-------------------------7564 sample_num
```sql
SELECT AVG(transcript_date) FROM Transcripts;
```
-------------------------7565 sample_num
```sql
SELECT T.transcript_date, T.other_details 
FROM Transcripts T 
ORDER BY T.transcript_date ASC 
LIMIT 1;
```
-------------------------7566 sample_num
```sql
SELECT T1.transcript_date, T1.other_details 
FROM Transcripts AS T1 
WHERE T1.transcript_date = (SELECT MIN(transcript_date) FROM Transcripts);
```
-------------------------7567 sample_num
```sql
SELECT COUNT(*) FROM Transcripts;
```
-------------------------7568 sample_num
```sql
SELECT COUNT(*) FROM Transcripts;
```
-------------------------7569 sample_num
```sql
SELECT MAX(transcript_date) FROM Transcripts;
```
-------------------------7570 sample_num
```sql
SELECT MAX(transcript_date) AS Last_Transcript_Release 
FROM Transcripts;
```
-------------------------7571 sample_num
```sql
SELECT student_course_id, COUNT(*) AS Transcript_Count
FROM Transcript_Contents
GROUP BY student_course_id
ORDER BY Transcript_Count DESC
LIMIT 1;
```
-------------------------7572 sample_num
```sql
SELECT MAX(count), T2.student_course_id 
FROM (
    SELECT T1.course_id, COUNT(*) as count
    FROM (
        SELECT course_id FROM Student_Enrolment_Courses
    ) T1
    JOIN Transcript_Contents T3 ON T1.student_course_id = T3.student_course_id
    GROUP BY T1.course_id
) T2
JOIN Student_Enrolment_Courses T4 ON T2.student_course_id = T4.student_course_id
ORDER BY count DESC
LIMIT 1;
```
Note: This query might not work on all databases as some might not allow to reference an aliased subquery in the same level without an additional join or a CTE (Common Table Expression). If you encounter such issues, you might have to adjust the query accordingly.
-------------------------7573 sample_num
```sql
SELECT T1.transcript_date, T1.transcript_id 
FROM Transcripts AS T1 
JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id 
GROUP BY T1.transcript_id 
ORDER BY COUNT(T2.student_course_id) 
LIMIT 1;
```
-------------------------7574 sample_num
```sql
SELECT T1.transcript_date, T1.transcript_id 
FROM Transcripts AS T1 
JOIN (
  SELECT transcript_id, COUNT(*) AS cnt 
  FROM Transcript_Contents 
  GROUP BY transcript_id 
) AS T2 
ON T1.transcript_id = T2.transcript_id 
ORDER BY T2.cnt 
LIMIT 1;
```
-------------------------7575 sample_num
```sql
SELECT s.semester_name
FROM Semesters s
JOIN Student_Enrolment se
ON s.semester_id = se.semester_id
JOIN Degree_Programs dp
ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Master%'
INTERSECT
SELECT s.semester_name
FROM Semesters s
JOIN Student_Enrolment se
ON s.semester_id = se.semester_id
JOIN Degree_Programs dp
ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name LIKE '%Bachelor%'
```
```
-------------------------7576 sample_num
```sql
SELECT se.semester_id 
FROM Student_Enrolment se
JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id
WHERE dp.degree_summary_name IN ('Masters', 'Bachelors')
GROUP BY se.semester_id
HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
```
-------------------------7577 sample_num
```sql
SELECT COUNT(DISTINCT current_address_id) FROM Students;
```
-------------------------7578 sample_num
```sql
SELECT DISTINCT A.line_1, A.line_2, A.city, A.zip_postcode 
FROM Addresses A 
JOIN Students S ON A.address_id = S.current_address_id;
```
-------------------------7579 sample_num
```sql
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC;
```
-------------------------7580 sample_num
```sql
SELECT other_student_details 
FROM Students 
ORDER BY last_name DESC, first_name DESC;
```
-------------------------7581 sample_num
```sql
SELECT * FROM Sections WHERE section_name = 'h';
```
-------------------------7582 sample_num
```sql
SELECT section_description 
FROM Sections 
WHERE section_name = 'h';
```
-------------------------7583 sample_num
```sql
SELECT first_name 
FROM Students 
WHERE permanent_address_id IN (
    SELECT address_id 
    FROM Addresses 
    WHERE country = 'Haiti'
) OR cell_mobile_number = '09700166582';
```
-------------------------7584 sample_num
```sql
SELECT first_name 
FROM Students 
WHERE country = 'Haiti' AND permanent_address_id = Addresses.address_id
OR cell_mobile_number = '09700166582';
```
Note: This query assumes that there is a relationship between the Students table and the Addresses table through the permanent_address_id field. However, the original data schema does not specify this relationship, so you may need to adjust the query based on the actual database design.
-------------------------7585 sample_num
```sql
SELECT Title 
FROM Cartoon 
ORDER BY Title ASC;
```
-------------------------7586 sample_num
```sql
SELECT Title FROM Cartoon ORDER BY Title ASC;
```
-------------------------7587 sample_num
```sql
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
```
-------------------------7588 sample_num
```sql
SELECT Title 
FROM Cartoon 
WHERE Directed_by = 'Ben Jones';
```
-------------------------7589 sample_num
```sql
SELECT COUNT(*) 
FROM Cartoon 
WHERE Written_by = 'Joseph Kuhr';
```
-------------------------7590 sample_num
```sql
SELECT COUNT(*) 
FROM Cartoon 
WHERE Written_by = 'Joseph Kuhr';
```
-------------------------7591 sample_num
```sql
SELECT Title, Directed_by 
FROM Cartoon 
ORDER BY Original_air_date;
```
-------------------------7592 sample_num
```sql
SELECT Title, Directed_by 
FROM Cartoon 
ORDER BY Original_air_date;
```
-------------------------7593 sample_num
```sql
SELECT Title 
FROM Cartoon 
WHERE Directed_by IN ("Ben Jones", "Brandon Vietti");
```
-------------------------7594 sample_num
```sql
SELECT Title 
FROM Cartoon 
WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
```
-------------------------7595 sample_num
```sql
SELECT Country, COUNT(*) AS Num_of_Channels
FROM TV_Channel
GROUP BY Country
ORDER BY Num_of_Channels DESC
LIMIT 1;
```
-------------------------7596 sample_num
```sql
SELECT Country, COUNT(*) AS Channel_Count
FROM TV_Channel
GROUP BY Country
ORDER BY Channel_Count DESC
LIMIT 1;
```
-------------------------7597 sample_num
```sql
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel;
```
-------------------------7598 sample_num
```sql
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel;
```
-------------------------7599 sample_num
```sql
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
```
-------------------------7600 sample_num
```sql
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
```
-------------------------7601 sample_num
```sql
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
```
-------------------------7602 sample_num
```sql
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';
```
-------------------------7603 sample_num
```sql
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
```
-------------------------7604 sample_num
```sql
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
```
-------------------------7605 sample_num
```sql
SELECT Language, COUNT(*) AS Num_Channels
FROM TV_Channel
GROUP BY Language
ORDER BY Num_Channels ASC
LIMIT 1;
```
-------------------------7606 sample_num
```sql
SELECT Language, COUNT(*) AS Channel_Count
FROM TV_Channel
GROUP BY Language
ORDER BY Channel_Count ASC
LIMIT 1;
```
-------------------------7607 sample_num
```sql
SELECT Language, COUNT(*) AS Num_Channels 
FROM TV_Channel 
GROUP BY Language;
```
-------------------------7608 sample_num
```sql
SELECT Language, COUNT(*) 
FROM TV_Channel 
GROUP BY Language;
```
-------------------------7609 sample_num
```sql
SELECT TV_Channel.series_name FROM TV_Channel 
JOIN Cartoon ON TV_Channel.id = Cartoon.Channel 
WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
```
-------------------------7610 sample_num
```sql
SELECT tv_channel.series_name 
FROM tv_channel 
JOIN cartoon ON tv_channel.id = cartoon.Channel 
WHERE cartoon.Title = 'The Rise of the Blue Beetle';
```
-------------------------7611 sample_num
```sql
SELECT C.Title
FROM Cartoon C
JOIN TV_Channel T ON C.Channel = T.id
WHERE T.series_name = 'Sky Radio';
```
-------------------------7612 sample_num
```sql
SELECT C.Title
FROM Cartoon C
JOIN TV_Channel T ON C.Channel = T.id
WHERE T.series_name = 'Sky Radio';
```
-------------------------7613 sample_num
```sql
SELECT Episode FROM TV_series ORDER BY Rating;
```
-------------------------7614 sample_num
```sql
SELECT Episode FROM TV_series ORDER BY Rating;
```
-------------------------7615 sample_num
```sql
SELECT Episode, Rating 
FROM TV_series 
ORDER BY Rating DESC 
LIMIT 3;
```
-------------------------7616 sample_num
```sql
SELECT Episode, Rating 
FROM TV_series 
ORDER BY Rating DESC 
LIMIT 3;
```
-------------------------7617 sample_num
```sql
SELECT MIN(Share) AS Min_Share, MAX(Share) AS Max_Share FROM TV_series;
```
-------------------------7618 sample_num
```sql
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share FROM TV_series;
```
-------------------------7619 sample_num
```sql
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
```
-------------------------7620 sample_num
```sql
SELECT Original_air_date FROM Cartoon WHERE Title = 'A Love of a Lifetime';
```
-------------------------7621 sample_num
```sql
SELECT Weekly_Rank 
FROM TV_series 
WHERE Episode = "A Love of a Lifetime";
```
-------------------------7622 sample_num
```sql
SELECT Weekly_Rank 
FROM TV_series 
WHERE Episode = "A Love of a Lifetime";
```
-------------------------7623 sample_num
```sql
SELECT TV_Channel.series_name 
FROM TV_Channel 
JOIN TV_series ON TV_Channel.id = TV_series.Channel 
WHERE TV_series.Episode = "A Love of a Lifetime";
```
-------------------------7624 sample_num
```sql
SELECT series_name FROM TV_series WHERE Episode = "A Love of a Lifetime";
```
-------------------------7625 sample_num
```sql
SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = "Sky Radio";
```
-------------------------7626 sample_num
```sql
SELECT Episode FROM TV_series WHERE Channel = 'Sky Radio';
```
-------------------------7627 sample_num
```sql
SELECT Directed_by, COUNT(*) 
FROM Cartoon 
GROUP BY Directed_by;
```
-------------------------7628 sample_num
```sql
SELECT Directed_by, COUNT(*) 
FROM Cartoon 
GROUP BY Directed_by;
```
-------------------------7629 sample_num
```sql
SELECT Production_code, Channel FROM Cartoon WHERE Air_Date = (SELECT MAX(Air_Date) FROM Cartoon);
```
-------------------------7630 sample_num
```sql
SELECT Production_code, Channel FROM Cartoon WHERE Air_Date = (SELECT MAX(Air_Date) FROM Cartoon)
```
-------------------------7631 sample_num
```sql
SELECT TV_Channel.Package_Option, TV_Channel.series_name 
FROM TV_Channel 
WHERE TV_Channel.Hight_definition_TV = 'Yes';
```
-------------------------7632 sample_num
```sql
SELECT TV_Channel.Package_Option, TV_Channel.series_name 
FROM TV_Channel 
WHERE TV_Channel.Hight_definition_TV = 'Yes';
```
-------------------------7633 sample_num
```sql
SELECT DISTINCT TV_Channel.Country 
FROM TV_Channel 
JOIN Cartoon ON TV_Channel.id = Cartoon.Channel 
WHERE Cartoon.Written_by = 'Todd Casey';
```
-------------------------7634 sample_num
```sql
SELECT DISTINCT TV_Channel.Country 
FROM TV_Channel 
JOIN Cartoon ON TV_Channel.id = Cartoon.Channel 
WHERE Cartoon.Written_by = 'Todd Casey';
```
-------------------------7635 sample_num
```sql
SELECT DISTINCT TV_Channel.Country 
FROM TV_Channel 
WHERE TV_Channel.id NOT IN (
    SELECT Cartoon.Channel 
    FROM Cartoon 
    WHERE Cartoon.Written_by = 'Todd Casey'
);
```
-------------------------7636 sample_num
```sql
SELECT DISTINCT Country 
FROM TV_Channel 
WHERE id NOT IN (
    SELECT Channel 
    FROM Cartoon 
    WHERE Written_by = 'Todd Casey'
);
```
-------------------------7637 sample_num
```sql
SELECT TV_Channel.series_name, TV_Channel.Country 
FROM TV_Channel 
JOIN Cartoon ON TV_Channel.id = Cartoon.Channel 
WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
```
-------------------------7638 sample_num
```sql
SELECT TV_Channel.series_name, TV_Channel.Country 
FROM TV_Channel 
JOIN Cartoon ON TV_Channel.id = Cartoon.Channel 
WHERE Cartoon.Directed_by = 'Ben Jones' 
UNION 
SELECT TV_Channel.series_name, TV_Channel.Country 
FROM TV_Channel 
JOIN Cartoon ON TV_Channel.id = Cartoon.Channel 
WHERE Cartoon.Directed_by = 'Michael Chang';
```
-------------------------7639 sample_num
```sql
SELECT Pixel_aspect_ratio_PAR, Country 
FROM TV_Channel 
WHERE Language != 'English';
```
-------------------------7640 sample_num
```sql
SELECT Pixel_aspect_ratio_PAR, Country 
FROM TV_Channel 
WHERE Language != 'English';
```
-------------------------7641 sample_num
```sql
SELECT Channel.id 
FROM TV_Channel Channel
GROUP BY Channel.Country, Channel.id
HAVING COUNT(Channel.id) > 2;
```

Actually, this query is not correct due to its logic. Correct query should be:

```sql
SELECT Channel.id 
FROM TV_Channel Channel
WHERE Channel.Country IN (
    SELECT Country 
    FROM TV_Channel 
    GROUP BY Country
    HAVING COUNT(id) > 2
);
```
-------------------------7642 sample_num
```sql
SELECT id 
FROM TV_Channel 
GROUP BY id 
HAVING COUNT(id) > 2;
```

Note: This query will not work as expected because it is not possible for a single 'id' to have a count greater than 1 if 'id' is a primary key. The question asked might be incorrect or unclear. A better interpretation could be "What are the ids of all tv channels that have more than 2 TV series or cartoons aired?" which would require a different join or subquery approach.
-------------------------7643 sample_num
```sql
SELECT tv.id 
FROM TV_Channel tv 
LEFT JOIN Cartoon c ON tv.id = c.Channel 
WHERE c.Directed_by != 'Ben Jones' OR c.Directed_by IS NULL
GROUP BY tv.id 
HAVING COUNT(c.id) = 0;
```
-------------------------7644 sample_num
```sql
SELECT id 
FROM TV_Channel 
WHERE id NOT IN (SELECT Channel 
                FROM Cartoon 
                WHERE Directed_by = 'Ben Jones');
```
-------------------------7645 sample_num
```sql
SELECT Package_Option 
FROM TV_Channel 
WHERE id NOT IN (
    SELECT Channel 
    FROM Cartoon 
    WHERE Directed_by = 'Ben Jones'
);
```
-------------------------7646 sample_num
```sql
SELECT DISTINCT TV_Channel.Package_Option 
FROM TV_Channel 
WHERE TV_Channel.id NOT IN (
    SELECT Cartoon.Channel 
    FROM Cartoon 
    WHERE Cartoon.Directed_by = 'Ben Jones'
);
```
-------------------------7647 sample_num
```sql
SELECT COUNT(*) FROM poker_player;
```
-------------------------7648 sample_num
```sql
SELECT COUNT(*) FROM poker_player;
```
-------------------------7649 sample_num
```sql
SELECT Earnings 
FROM poker_player 
ORDER BY Earnings DESC;
```
-------------------------7650 sample_num
```sql
SELECT Earnings 
FROM poker_player 
ORDER BY Earnings DESC;
```
-------------------------7651 sample_num
```sql
SELECT Final_Table_Made, Best_Finish FROM poker_player;
```
-------------------------7652 sample_num
```sql
SELECT Poker_Player.Poker_Player_ID, People.Name, Poker_Player.Final_Table_Made, Poker_Player.Best_Finish 
FROM poker_player AS Poker_Player 
JOIN people AS People ON Poker_Player.People_ID = People.People_ID;
```
-------------------------7653 sample_num
```sql
SELECT AVG(Earnings) FROM poker_player;
```
-------------------------7654 sample_num
```sql
SELECT AVG(Earnings) 
FROM poker_player;
```
-------------------------7655 sample_num
```sql
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
```
-------------------------7656 sample_num
```sql
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);
```
-------------------------7657 sample_num
```sql
SELECT MAX(T1.Final_Table_Made) 
FROM poker_player AS T1 
JOIN people AS T2 ON T1.People_ID = T2.People_ID 
WHERE T1.Earnings < 200000;
```
-------------------------7658 sample_num
```sql
SELECT MAX(Final_Table_Made) 
FROM poker_player 
WHERE Earnings < 200000;
```
-------------------------7659 sample_num
```sql
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
```
-------------------------7660 sample_num
```sql
SELECT p.Name
FROM poker_player pp
JOIN people p ON pp.People_ID = p.People_ID;
```
-------------------------7661 sample_num
```sql
SELECT p.Name
FROM poker_player pp
JOIN people p ON pp.People_ID = p.People_ID
WHERE pp.Earnings > 300000;
```
-------------------------7662 sample_num
```sql
SELECT p.Name
FROM poker_player pp
JOIN people p ON pp.People_ID = p.People_ID
WHERE pp.Earnings > 300000;
```
-------------------------7663 sample_num
```sql
SELECT p.Name
FROM poker_player pp
JOIN people p ON pp.People_ID = p.People_ID
ORDER BY pp.Final_Table_Made ASC;
```
-------------------------7664 sample_num
```sql
SELECT p.Name
FROM poker_player pp
JOIN people p ON pp.People_ID = p.People_ID
ORDER BY pp.Final_Table_Made ASC;
```
-------------------------7665 sample_num
```sql
SELECT p.Birth_Date 
FROM poker_player pp 
JOIN people p ON pp.People_ID = p.People_ID 
WHERE pp.Earnings = (SELECT MIN(Earnings) FROM poker_player);
```
-------------------------7666 sample_num
```sql
SELECT p.Birth_Date 
FROM poker_player pp 
JOIN people p ON pp.People_ID = p.People_ID 
WHERE pp.Earnings = (SELECT MIN(Earnings) FROM poker_player);
```
-------------------------7667 sample_num
```sql
SELECT p1.Money_Rank FROM poker_player p1 JOIN (
SELECT p2.People_ID FROM people p2 JOIN poker_player p3 ON p2.People_ID = p3.People_ID WHERE p2.Height = (
 SELECT MAX(p4.Height) FROM people p4 JOIN poker_player p5 ON p4.People_ID = p5.People_ID
)
) t ON p1.People_ID = t.People_ID;
```
-------------------------7668 sample_num
```sql
SELECT T1.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = (SELECT MAX(Height) FROM people)
```
-------------------------7669 sample_num
```sql
SELECT AVG(T1.Earnings) 
FROM poker_player AS T1 
JOIN people AS T2 ON T1.People_ID = T2.People_ID 
WHERE T2.Height > 200;
```
-------------------------7670 sample_num
```sql
SELECT AVG(T1.Earnings) 
FROM poker_player AS T1 
JOIN people AS T2 
ON T1.People_ID = T2.People_ID 
WHERE T2.Height > 200;
```
-------------------------7671 sample_num
```sql
SELECT people.Name 
FROM poker_player 
JOIN people ON poker_player.People_ID = people.People_ID 
ORDER BY poker_player.Earnings DESC;
```
-------------------------7672 sample_num
```sql
SELECT people.Name 
FROM poker_player 
JOIN people ON poker_player.People_ID = people.People_ID 
ORDER BY poker_player.Earnings DESC;
```
-------------------------7673 sample_num
```sql
SELECT Nationality, COUNT(*) as NumberOfPeople 
FROM people 
GROUP BY Nationality;
```
-------------------------7674 sample_num
```sql
SELECT Nationality, COUNT(*) 
FROM people 
GROUP BY Nationality;
```
-------------------------7675 sample_num
```sql
SELECT Nationality, COUNT(*) as count 
FROM people 
GROUP BY Nationality 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------7676 sample_num
```sql
SELECT Nationality, COUNT(*) as count 
FROM people 
GROUP BY Nationality 
ORDER BY count DESC 
LIMIT 1;
```
-------------------------7677 sample_num
```sql
SELECT Nationality 
FROM people 
GROUP BY Nationality 
HAVING COUNT(*) >= 2;
```
-------------------------7678 sample_num
```sql
SELECT Nationality
FROM people
GROUP BY Nationality
HAVING COUNT(People_ID) >= 2;
```
-------------------------7679 sample_num
```sql
SELECT Name, Birth_Date 
FROM people 
ORDER BY Name ASC;
```
-------------------------7680 sample_num
```sql
SELECT people.Name, people.Birth_Date 
FROM people 
ORDER BY people.Name ASC;
```
-------------------------7681 sample_num
```sql
SELECT Name 
FROM people 
WHERE Nationality != 'Russia';
```
-------------------------7682 sample_num
```sql
SELECT Name 
FROM people 
WHERE Nationality != 'Russia';
```
-------------------------7683 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
```
-------------------------7684 sample_num
```sql
SELECT Name 
FROM people 
WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
```
-------------------------7685 sample_num
```sql
SELECT COUNT(DISTINCT Nationality) FROM people;
```
-------------------------7686 sample_num
```sql
SELECT COUNT(DISTINCT Nationality) FROM people;
```
-------------------------7687 sample_num
```sql
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;
```
-------------------------7688 sample_num
```sql
SELECT C.contestant_number, C.contestant_name 
FROM CONTESTANTS C
ORDER BY C.contestant_name DESC;
```
-------------------------7689 sample_num
```sql
SELECT vote_id, phone_number, state FROM VOTES;
```
-------------------------7690 sample_num
```sql
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE;
```
-------------------------7691 sample_num
```sql
SELECT MAX(VOTES.created) 
FROM VOTES 
JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state 
WHERE AREA_CODE_STATE.state = 'CA'
``` 
However, if the 'state' field directly exists in the 'VOTES' table without needing to join with another table, the query would be:
```sql
SELECT MAX(created) 
FROM VOTES 
WHERE state = 'CA'
```
-------------------------7692 sample_num
```sql
SELECT contestant_name 
FROM CONTESTANTS 
WHERE contestant_name != 'Jessie Alloway';
```
-------------------------7693 sample_num
```sql
SELECT DISTINCT state, created FROM VOTES;
```
-------------------------7694 sample_num
```sql
SELECT C.contestant_number, CN.contestant_name 
FROM VOTES V
JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number
JOIN CONTESTANTS CN ON C.contestant_number = CN.contestant_number
GROUP BY C.contestant_number, CN.contestant_name
HAVING COUNT(V.vote_id) >= 2;
```
-------------------------7695 sample_num
```sql
SELECT C.contestant_number, C.contestant_name 
FROM CONTESTANTS C
JOIN VOTES V ON C.contestant_number = V.contestant_number 
GROUP BY C.contestant_number, C.contestant_name 
ORDER BY COUNT(V.vote_id) 
LIMIT 1;
```
-------------------------7696 sample_num
```sql
SELECT COUNT(*) 
FROM VOTES 
WHERE state IN ('NY', 'CA');
```
-------------------------7697 sample_num
```sql
SELECT COUNT(*) 
FROM CONTESTANTS 
WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
```
-------------------------7698 sample_num
```sql
SELECT ac.area_code, COUNT(v.vote_id) as vote_count
FROM AREA_CODE_STATE ac
JOIN VOTES v ON ac.state = v.state
GROUP BY ac.area_code
ORDER BY vote_count DESC
LIMIT 1;
```
-------------------------7699 sample_num
```sql
SELECT V.created, V.state, V.phone_number 
FROM VOTES V 
JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number 
WHERE C.contestant_name = 'Tabatha Gehling'
```
-------------------------7700 sample_num
```sql
SELECT DISTINCT acs.area_code 
FROM AREA_CODE_STATE acs
JOIN VOTES v1 ON acs.area_code = SUBSTRING(v1.phone_number, 1, 3)
JOIN VOTES v2 ON acs.area_code = SUBSTRING(v2.phone_number, 1, 3)
JOIN CONTESTANTS c1 ON v1.contestant_number = c1.contestant_number
JOIN CONTESTANTS c2 ON v2.contestant_number = c2.contestant_number
WHERE c1.contestant_name = 'Tabatha Gehling' AND c2.contestant_name = 'Kelly Clauss'
AND v1.created < v2.created;
```
Note: I've assumed that the votes for each contestant should not overlap in time, so I added a condition to ensure that the vote for 'Tabatha Gehling' is recorded before the vote for 'Kelly Clauss'. If this assumption is incorrect, you can remove the condition `AND v1.created < v2.created`.
-------------------------7701 sample_num
```sql
SELECT contestant_name 
FROM CONTESTANTS 
WHERE contestant_name LIKE '%Al%';
```
-------------------------7702 sample_num
```sql
SELECT Name FROM country WHERE IndepYear > 1950;
```
-------------------------7703 sample_num
```sql
SELECT Name FROM country WHERE IndepYear > 1950;
```
-------------------------7704 sample_num
```sql
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
```
-------------------------7705 sample_num
```sql
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%republic%';
```
-------------------------7706 sample_num
```sql
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
```
-------------------------7707 sample_num
```sql
SELECT SUM(SurfaceArea) 
FROM country 
WHERE Region = 'Caribbean';
```
-------------------------7708 sample_num
```sql
SELECT Continent FROM country WHERE Name = 'Anguilla';
```
-------------------------7709 sample_num
```sql
SELECT Continent FROM country WHERE Name = 'Anguilla';
```
-------------------------7710 sample_num
```sql
SELECT T2.Region FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
```
-------------------------7711 sample_num
```sql
SELECT T2.Region FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Kabul'
```
-------------------------7712 sample_num
```sql
SELECT T2.Language 
FROM country AS T1 
JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode 
WHERE T1.Name = 'Aruba' 
ORDER BY T2.Percentage DESC 
LIMIT 1;
```
-------------------------7713 sample_num
```sql
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Aruba' AND T2.IsOfficial = 'T';
```
-------------------------7714 sample_num
```sql
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
```
-------------------------7715 sample_num
```sql
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
```
-------------------------7716 sample_num
```sql
SELECT T1.Region, T1.Population FROM country AS T1 WHERE T1.Name = 'Angola';
```
-------------------------7717 sample_num
```sql
SELECT Region, Population FROM country WHERE Name = 'Angola';
```
-------------------------7718 sample_num
```sql
SELECT AVG(LifeExpectancy) 
FROM country 
WHERE Region = 'Central Africa';
```
-------------------------7719 sample_num
```sql
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
```
-------------------------7720 sample_num
```sql
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' ORDER BY T1.LifeExpectancy ASC LIMIT 1;
```
-------------------------7721 sample_num
```sql
SELECT T1.Name FROM country AS T1 WHERE T1.Continent = 'Asia' ORDER BY T1.LifeExpectancy ASC LIMIT 1;
```
-------------------------7722 sample_num
```sql
SELECT SUM(t1.Population) AS TotalPopulation, MAX(t2.GNP) AS MaxGNP 
FROM city AS t1 
JOIN country AS t2 ON t1.CountryCode = t2.Code 
WHERE t2.Continent = 'Asia';
```
Note: This query might not return accurate results because the population of a country and its cities aren't directly related. To get more accurate results, you should use the 'Population' column from the 'country' table instead of the 'city' table.

Corrected Query:
```sql
SELECT SUM(t2.Population) AS TotalPopulation, MAX(t2.GNP) AS MaxGNP 
FROM country AS t2 
WHERE t2.Continent = 'Asia';
```
-------------------------7723 sample_num
```sql
SELECT SUM(Population) AS Total_Population, MAX(GNP) AS Max_GNP 
FROM country 
WHERE Continent = 'Asia';
```
-------------------------7724 sample_num
```sql
SELECT AVG(LifeExpectancy) 
FROM country 
WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
```
-------------------------7725 sample_num
```sql
SELECT AVG(LifeExpectancy) 
FROM country 
WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
```
-------------------------7726 sample_num
```sql
SELECT SUM(SurfaceArea) 
FROM country 
WHERE Continent IN ('Asia', 'Europe');
```
-------------------------7727 sample_num
```sql
SELECT SUM(SurfaceArea) 
FROM country 
WHERE Continent IN ('Asia', 'Europe');
```
-------------------------7728 sample_num
```sql
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
```
-------------------------7729 sample_num
```sql
SELECT SUM(Population) FROM city WHERE District = 'Gelderland';
```
-------------------------7730 sample_num
```sql
SELECT AVG(GNP), SUM(Population) 
FROM country 
WHERE GovernmentForm = 'US Territory';
```
Please note that you might not get any result if there is no country listed as 'US Territory' in the 'GovernmentForm' field. Also, 'US Territory' might be listed differently (with different capitalization or spacing). You may want to adjust the string to match your data set. If no match is found, the AVG function will return NULL and SUM will return 0.
-------------------------7731 sample_num
```sql
SELECT AVG(GNP), SUM(Population) 
FROM country 
WHERE Name IN ('USA', 'Guam', 'Puerto Rico', 'US Virgin Islands', 'Northern Mariana Islands', 'American Samoa');
```
Note: This assumes that the territories are listed as separate entries in the 'Name' field. If they are listed under 'USA' with additional information in another column, the query would need to be adjusted accordingly.
```sql
SELECT AVG(GNP), SUM(Population)
FROM country
WHERE Name = 'USA' AND Region IN ('Caribbean', 'Micronesia', 'Polynesia');
```
This assumes that the regions for the territories are listed separately in the 'Region' field. Again, this would need to be adjusted based on the actual structure of the data.
-------------------------7732 sample_num
```sql
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
```
-------------------------7733 sample_num
```sql
SELECT COUNT(DISTINCT Language) FROM countrylanguage;
```
-------------------------7734 sample_num
```sql
SELECT COUNT(DISTINCT GovernmentForm) 
FROM country 
WHERE Continent = 'Africa';
```
-------------------------7735 sample_num
```sql
SELECT COUNT(DISTINCT GovernmentForm) 
FROM country 
WHERE Continent = 'Africa';
```
-------------------------7736 sample_num
```sql
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
```
-------------------------7737 sample_num
```sql
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')
```
-------------------------7738 sample_num
```sql
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
```
-------------------------7739 sample_num
```sql
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
```
-------------------------7740 sample_num
```sql
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(T2.Language) DESC LIMIT 1;
```
-------------------------7741 sample_num
```sql
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(T2.Language) DESC LIMIT 1;
```
-------------------------7742 sample_num
```sql
SELECT T1.Continent 
FROM country AS T1 
JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode 
GROUP BY T1.Continent 
ORDER BY COUNT(DISTINCT T2.Language) DESC 
LIMIT 1;
```
-------------------------7743 sample_num
```sql
SELECT C.Continent, COUNT(DISTINCT L.Language) AS NumberOfLanguages
FROM country AS C
JOIN countrylanguage AS L ON C.Code = L.CountryCode
GROUP BY C.Continent
ORDER BY NumberOfLanguages DESC
LIMIT 1;
```
-------------------------7744 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT CountryCode 
  FROM countrylanguage 
  WHERE Language = 'English' 
  INTERSECT 
  SELECT CountryCode 
  FROM countrylanguage 
  WHERE Language = 'Dutch'
)
```
-------------------------7745 sample_num
```sql
SELECT COUNT(*) 
FROM countrylanguage 
WHERE Language IN ('English', 'Dutch') AND IsOfficial = 'T';
```
``` 

Note: The provided query will return the count of countries where the language is either English or Dutch and it is official. If you want to count English and Dutch separately, you need two separate queries or use OR condition inside WHERE clause. However, the question seems to imply counting countries where either English or Dutch is used, not necessarily official. If so, remove the condition 'AND IsOfficial = 'T''.
```sql
SELECT COUNT(DISTINCT CountryCode) 
FROM countrylanguage 
WHERE Language IN ('English', 'Dutch');
```
```
-------------------------7746 sample_num
```sql
SELECT cl1.Name 
FROM country AS cl1 
JOIN countrylanguage AS cl2 ON cl1.Code = cl2.CountryCode 
WHERE cl2.Language = 'English' 
GROUP BY cl1.Name 
HAVING COUNT(cl2.Language) > 1 
INTERSECT 
SELECT cl1.Name 
FROM country AS cl1 
JOIN countrylanguage AS cl3 ON cl1.Code = cl3.CountryCode 
WHERE cl3.Language = 'French' 
GROUP BY cl1.Name 
HAVING COUNT(cl3.Language) > 1;
```
-------------------------7747 sample_num
```sql
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French'
```
-------------------------7748 sample_num
```sql
SELECT cl1.CountryCode FROM countrylanguage cl1 
JOIN countrylanguage cl2 ON cl1.CountryCode = cl2.CountryCode 
WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' 
AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
```
-------------------------7749 sample_num
```sql
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language IN ('English', 'French') AND T2.IsOfficial = 'T' GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Language) = 2;
```
-------------------------7750 sample_num
```sql
SELECT COUNT(DISTINCT T1.Continent) 
FROM country AS T1 
JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode 
WHERE T2.Language = 'Chinese'
```
-------------------------7751 sample_num
```sql
SELECT COUNT(DISTINCT c.Continent) 
FROM country AS c
JOIN countrylanguage AS cl ON c.Code = cl.CountryCode
WHERE cl.Language = 'Chinese';
```
-------------------------7752 sample_num
```sql
SELECT DISTINCT c.Region 
FROM country AS c 
JOIN countrylanguage AS cl ON c.Code = cl.CountryCode 
WHERE cl.Language IN ('English', 'Dutch');
```
-------------------------7753 sample_num
```sql
SELECT cl.CountryCode, cl.Language 
FROM countrylanguage cl 
WHERE cl.Language = 'Dutch' OR cl.Language = 'English';
``` 

However, to get the regions that speak those languages you would typically join the countrylanguage and country tables like so:

```sql
SELECT c.Region, cl.Language 
FROM country c 
JOIN countrylanguage cl 
ON c.Code = cl.CountryCode 
WHERE cl.Language = 'Dutch' OR cl.Language = 'English';
```
-------------------------7754 sample_num
```sql
SELECT cl.CountryCode
FROM countrylanguage cl
WHERE cl.IsOfficial = 'T'
AND (cl.Language = 'English' OR cl.Language = 'Dutch');
```
-------------------------7755 sample_num
```sql
SELECT cl.CountryCode FROM countrylanguage cl WHERE cl.IsOfficial = 'T' AND (cl.Language = 'English' OR cl.Language = 'Dutch');
```
-------------------------7756 sample_num
```sql
SELECT T3.Language, SUM(T2.Population) AS Total_Population 
FROM country AS T1 
JOIN city AS T2 ON T1.Code = T2.CountryCode 
JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode 
WHERE T1.Continent = 'Asia' AND T3.IsOfficial = 'T' 
GROUP BY T3.Language 
ORDER BY Total_Population DESC 
LIMIT 1;
```
-------------------------7757 sample_num
```sql
SELECT T2.Language 
FROM country AS T1 
JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode 
WHERE T1.Continent = 'Asia' 
GROUP BY T2.Language 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------7758 sample_num
```sql
SELECT cl.Language
FROM countrylanguage cl
JOIN country c ON cl.CountryCode = c.Code
WHERE c.GovernmentForm LIKE '%Republic%'
GROUP BY cl.Language
HAVING COUNT(*) = 1;
```
-------------------------7759 sample_num
```sql
SELECT cl.Language
FROM countrylanguage cl
JOIN country c ON cl.CountryCode = c.Code
WHERE c.GovernmentForm = 'Republic'
GROUP BY cl.Language
HAVING COUNT(cl.CountryCode) = 1;
```
-------------------------7760 sample_num
```sql
SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1;
```
-------------------------7761 sample_num
```sql
SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1;
```
-------------------------7762 sample_num
```sql
SELECT T1.Name, T1.Population, T1.LifeExpectancy 
FROM country AS T1 
WHERE T1.Continent = 'Asia' 
ORDER BY T1.SurfaceArea DESC 
LIMIT 1;
```
-------------------------7763 sample_num
```sql
SELECT T1.Name, T1.Population, T1.LifeExpectancy 
FROM country AS T1 
WHERE T1.Region = 'Asia' AND T1.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Asia');
```
-------------------------7764 sample_num
```sql
SELECT AVG(LifeExpectancy) 
FROM country 
WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
```
-------------------------7765 sample_num
```sql
SELECT AVG(LifeExpectancy) 
FROM country 
WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Language = 'English')
```
-------------------------7766 sample_num
```sql
SELECT SUM(c.Population) 
FROM country c 
LEFT JOIN countrylanguage cl ON c.Code = cl.CountryCode 
WHERE cl.Language != 'English' OR cl.Language IS NULL;
```
-------------------------7767 sample_num
```sql
SELECT SUM(Population) 
FROM country 
WHERE Code NOT IN (
    SELECT CountryCode 
    FROM countrylanguage 
    WHERE Language = 'English'
);
```
-------------------------7768 sample_num
```sql
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T';
```
-------------------------7769 sample_num
```sql
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T';
```
-------------------------7770 sample_num
```sql
SELECT COUNT(DISTINCT cl.Language) 
FROM country AS c
JOIN countrylanguage AS cl ON c.Code = cl.CountryCode
WHERE c.IndepYear < 1930 AND cl.IsOfficial = 'T';
```
-------------------------7771 sample_num
```sql
SELECT COUNT(DISTINCT T2.Language) 
FROM country AS T1 
JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode 
WHERE T1.IndepYear < 1930 AND T2.IsOfficial = 'T';
```
-------------------------7772 sample_num
```sql
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe');
```
-------------------------7773 sample_num
```sql
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
```
-------------------------7774 sample_num
```sql
SELECT c.Name 
FROM country AS c 
WHERE c.Continent = 'Africa' AND c.Population < ALL (
    SELECT c2.Population 
    FROM country AS c2 
    WHERE c2.Continent = 'Asia'
)
```
-------------------------7775 sample_num
```sql
SELECT c1.Name 
FROM country AS c1 
WHERE c1.Continent = 'Africa' 
AND (
    SELECT MAX(c2.Population) 
    FROM country AS c2 
    WHERE c2.Continent = 'Asia'
) > c1.Population;
```
-------------------------7776 sample_num
```sql
SELECT c.Name 
FROM country AS c 
WHERE c.Continent = 'Asia' 
AND c.Population > ALL (
    SELECT c2.Population 
    FROM country AS c2 
    WHERE c2.Continent = 'Africa'
)
```
-------------------------7777 sample_num
```sql
SELECT c.Name 
FROM country AS c 
WHERE c.Continent = 'Asia' 
AND c.Population > ALL (
    SELECT c2.Population 
    FROM country AS c2 
    WHERE c2.Continent = 'Africa'
)
```
-------------------------7778 sample_num
```sql
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
```
-------------------------7779 sample_num
```sql
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
```
-------------------------7780 sample_num
```sql
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
```
-------------------------7781 sample_num
```sql
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'
```
-------------------------7782 sample_num
```sql
SELECT Code FROM country WHERE Name NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm != 'Republic';
```
-------------------------7783 sample_num
```sql
SELECT Code FROM country WHERE GovernmentForm != 'Republic' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
```
-------------------------7784 sample_num
```sql
SELECT city.Name
FROM city
JOIN country ON city.CountryCode = country.Code
JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode
WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'T';
```
-------------------------7785 sample_num
```sql
SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Europe' AND T3.IsOfficial = 'F' AND T3.Language = 'English';
```
-------------------------7786 sample_num
```sql
SELECT DISTINCT c.Name 
FROM city c 
JOIN country co ON c.CountryCode = co.Code 
JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode 
WHERE co.Continent = 'Asia' AND cl.Language = 'Chinese' AND cl.IsOfficial = 'T';
```
-------------------------7787 sample_num
```sql
SELECT DISTINCT c.Name 
FROM city c
JOIN country co ON c.CountryCode = co.Code
JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode
WHERE co.Continent = 'Asia' AND cl.Language = 'Chinese' AND cl.IsOfficial = 'T';
```
-------------------------7788 sample_num
```sql
SELECT Name, IndepYear, SurfaceArea 
FROM country 
WHERE Population = (SELECT MIN(Population) FROM country);
```
-------------------------7789 sample_num
```sql
SELECT T1.Name, T1.IndepYear, T1.SurfaceArea 
FROM country AS T1 
JOIN(SELECT Code FROM country ORDER BY Population ASC LIMIT 1) AS T2 
ON T1.Code = T2.Code;
```
-------------------------7790 sample_num
```sql
SELECT T1.Name, T1.Population, T1.HeadOfState FROM country AS T1 WHERE T1.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
```
-------------------------7791 sample_num
```sql
SELECT T1.Name, T1.Population, T1.HeadOfState 
FROM country AS T1 
WHERE T1.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
```
-------------------------7792 sample_num
```sql
SELECT T1.Name, COUNT(T2.Language) 
FROM country AS T1 
JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode 
GROUP BY T1.Name 
HAVING COUNT(T2.Language) >= 3;
```
-------------------------7793 sample_num
```sql
SELECT T1.Name, COUNT(T2.Language) AS NumLanguages
FROM country AS T1
JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode
GROUP BY T1.Code
HAVING NumLanguages > 2;
```
-------------------------7794 sample_num
```sql
SELECT District, COUNT(*) AS CityCount
FROM city
WHERE Population > (SELECT AVG(Population) FROM city)
GROUP BY District;
```
-------------------------7795 sample_num
```sql
SELECT District, COUNT(*) 
FROM city 
WHERE Population > (SELECT AVG(Population) FROM city) 
GROUP BY District;
```
-------------------------7796 sample_num
```sql
SELECT T1.GovernmentForm, SUM(T1.Population) AS TotalPopulation 
FROM country AS T1 
JOIN (
    SELECT GovernmentForm 
    FROM country 
    GROUP BY GovernmentForm 
    HAVING AVG(LifeExpectancy) > 72
) AS T2 ON T1.GovernmentForm = T2.GovernmentForm 
GROUP BY T1.GovernmentForm;
```
-------------------------7797 sample_num
```sql
SELECT T1.GovernmentForm, SUM(T1.Population) AS TotalPopulation 
FROM country AS T1 
JOIN (
    SELECT DISTINCT GovernmentForm 
    FROM country 
    WHERE LifeExpectancy > 72
) AS T2 ON T1.GovernmentForm = T2.GovernmentForm 
GROUP BY T1.GovernmentForm;
```
-------------------------7798 sample_num
```sql
SELECT Continent, AVG(LifeExpectancy) AS AvgLifeExp, SUM(Population) AS TotalPopulation
FROM country
GROUP BY Continent
HAVING AvgLifeExp < 72;
```
-------------------------7799 sample_num
```sql
SELECT Continent, SUM(Population) as TotalPopulation, AVG(LifeExpectancy) as AvgLifeExpectancy
FROM country
GROUP BY Continent
HAVING AvgLifeExpectancy < 72;
```
-------------------------7800 sample_num
```sql
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
```
-------------------------7801 sample_num
```sql
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
```
-------------------------7802 sample_num
```sql
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
```
-------------------------7803 sample_num
```sql
SELECT T2.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.Population DESC LIMIT 3;
```
-------------------------7804 sample_num
```sql
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
```
-------------------------7805 sample_num
```sql
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
```
-------------------------7806 sample_num
```sql
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
```
-------------------------7807 sample_num
```sql
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
```
-------------------------7808 sample_num
```sql
SELECT T1.Name FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Europe' AND T2.Population = 80000;
```
-------------------------7809 sample_num
```sql
SELECT T1.Name FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Europe' AND T2.Population = 80000;
```
-------------------------7810 sample_num
```sql
SELECT SUM(Population) AS Total_Population, AVG(SurfaceArea) AS Average_Area 
FROM country 
WHERE Continent = 'North America' AND SurfaceArea > 3000;
```
-------------------------7811 sample_num
```sql
SELECT SUM(Population) as Total_Population, AVG(SurfaceArea) as Average_SurfaceArea 
FROM country 
WHERE Continent = 'North America' AND SurfaceArea > 3000;
```
-------------------------7812 sample_num
```sql
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
```
-------------------------7813 sample_num
```sql
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
```
-------------------------7814 sample_num
```sql
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.Language ORDER BY COUNT(T1.Code) DESC LIMIT 1;
```
-------------------------7815 sample_num
```sql
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.Language ORDER BY COUNT(T1.Code) DESC LIMIT 1
```
-------------------------7816 sample_num
```sql
SELECT CL.CountryCode, CL.Language, MAX(CL.Percentage) as Max_Percentage
FROM countrylanguage CL
JOIN (
  SELECT CountryCode, MAX(Percentage) as MaxPerc
  FROM countrylanguage
  GROUP BY CountryCode
) T
ON CL.CountryCode = T.CountryCode AND CL.Percentage = T.MaxPerc
GROUP BY CL.CountryCode;
```
-------------------------7817 sample_num
```sql
SELECT CL.CountryCode, CL.Language 
FROM countrylanguage CL 
JOIN (
  SELECT CountryCode, MAX(Percentage) as MaxPercentage 
  FROM countrylanguage 
  GROUP BY CountryCode
) CL2 
ON CL.CountryCode = CL2.CountryCode AND CL.Percentage = CL2.MaxPercentage;
```
-------------------------7818 sample_num
```sql
SELECT COUNT(*) 
FROM (
  SELECT CountryCode
  FROM countrylanguage
  WHERE Language = 'Spanish' AND Percentage = (
    SELECT MAX(Percentage)
    FROM countrylanguage
    WHERE Language = 'Spanish'
  )
);
```
-------------------------7819 sample_num
```sql
SELECT COUNT(*) FROM countrylanguage WHERE Language='Spanish' AND IsOfficial='T';
```
-------------------------7820 sample_num
```sql
SELECT cl.CountryCode 
FROM countrylanguage cl 
WHERE cl.Language = 'Spanish' 
ORDER BY cl.Percentage DESC 
LIMIT 1;
```
-------------------------7821 sample_num
```sql
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';
```
-------------------------7822 sample_num
```sql
SELECT COUNT(*) FROM conductor;
```
-------------------------7823 sample_num
```sql
SELECT COUNT(*) FROM conductor;
```
-------------------------7824 sample_num
```sql
SELECT Name FROM conductor ORDER BY Age ASC;
```
-------------------------7825 sample_num
```sql
SELECT Name FROM conductor ORDER BY Age;
```
-------------------------7826 sample_num
```sql
SELECT Name FROM conductor WHERE Nationality != 'USA';
```
-------------------------7827 sample_num
```sql
SELECT Name FROM conductor WHERE Nationality != 'USA';
```
-------------------------7828 sample_num
```sql
SELECT Record_Company 
FROM orchestra 
ORDER BY Year_of_Founded DESC;
```
-------------------------7829 sample_num
```sql
SELECT Record_Company 
FROM orchestra 
ORDER BY Year_of_Founded DESC;
```
-------------------------7830 sample_num
```sql
SELECT AVG(Attendance) FROM show;
```
-------------------------7831 sample_num
```sql
SELECT AVG(Attendance) FROM show;
```
-------------------------7832 sample_num
```sql
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share 
FROM performance 
WHERE Type != 'Live final';
```
-------------------------7833 sample_num
```sql
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share 
FROM performance 
WHERE Type != 'Live final';
```
-------------------------7834 sample_num
```sql
SELECT COUNT(DISTINCT Nationality) FROM conductor;
```
-------------------------7835 sample_num
```sql
SELECT COUNT(DISTINCT Nationality) FROM conductor;
```
-------------------------7836 sample_num
```sql
SELECT Name FROM conductor ORDER BY Year_of_Work DESC;
```
-------------------------7837 sample_num
```sql
SELECT Name 
FROM conductor 
ORDER BY Year_of_Work DESC;
```
-------------------------7838 sample_num
```sql
SELECT Name 
FROM conductor 
ORDER BY Year_of_Work DESC 
LIMIT 1;
```
-------------------------7839 sample_num
```sql
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
```
-------------------------7840 sample_num
```sql
SELECT conductor.Name, orchestra.Orchestra 
FROM conductor 
JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
```
-------------------------7841 sample_num
```sql
SELECT conductor.Name, orchestra.Orchestra 
FROM conductor 
JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
```
-------------------------7842 sample_num
```sql
SELECT c.Name
FROM conductor c
JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID
GROUP BY c.Conductor_ID, c.Name
HAVING COUNT(o.Orchestra_ID) > 1;
```
-------------------------7843 sample_num
```sql
SELECT c.Name 
FROM conductor c
JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID
GROUP BY c.Conductor_ID, c.Name
HAVING COUNT(o.Orchestra_ID) > 1;
```
-------------------------7844 sample_num
```sql
SELECT T1.Name 
FROM conductor AS T1 
JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID 
GROUP BY T1.Conductor_ID 
ORDER BY COUNT(T2.Orchestra_ID) DESC 
LIMIT 1;
```
-------------------------7845 sample_num
```sql
SELECT T1.Name 
FROM conductor AS T1 
JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID 
GROUP BY T1.Conductor_ID 
ORDER BY COUNT(T2.Orchestra_ID) DESC 
LIMIT 1;
```
-------------------------7846 sample_num
```sql
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008;
```
-------------------------7847 sample_num
```sql
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008;
```
-------------------------7848 sample_num
```sql
SELECT Record_Company, COUNT(Orchestra_ID) 
FROM orchestra 
GROUP BY Record_Company;
```
-------------------------7849 sample_num
```sql
SELECT Record_Company, COUNT(Orchestra_ID) 
FROM orchestra 
GROUP BY Record_Company;
```
-------------------------7850 sample_num
```sql
SELECT Major_Record_Format, COUNT(*) 
FROM orchestra 
GROUP BY Major_Record_Format 
ORDER BY COUNT(*) ASC;
```
-------------------------7851 sample_num
```sql
SELECT T1.Major_Record_Format, COUNT(*) AS Frequency 
FROM orchestra AS T1 
GROUP BY T1.Major_Record_Format 
ORDER BY Frequency DESC;
```
-------------------------7852 sample_num
```sql
SELECT Record_Company 
FROM orchestra 
GROUP BY Record_Company 
ORDER BY COUNT(Orchestra_ID) DESC 
LIMIT 1;
```
-------------------------7853 sample_num
```sql
SELECT Record_Company 
FROM orchestra 
GROUP BY Record_Company 
ORDER BY COUNT(Orchestra_ID) DESC 
LIMIT 1;
```
-------------------------7854 sample_num
```sql
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
```
-------------------------7855 sample_num
```sql
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
```
-------------------------7856 sample_num
```sql
SELECT Record_Company 
FROM orchestra 
WHERE Year_of_Founded < 2003 
INTERSECT 
SELECT Record_Company 
FROM orchestra 
WHERE Year_of_Founded > 2003;
```
-------------------------7857 sample_num
```sql
SELECT Record_Company 
FROM orchestra 
WHERE Year_of_Founded < 2003 
INTERSECT 
SELECT Record_Company 
FROM orchestra 
WHERE Year_of_Founded > 2003;
```
-------------------------7858 sample_num
```sql
SELECT COUNT(*) 
FROM orchestra 
WHERE Major_Record_Format IN ('CD', 'DVD');
```
-------------------------7859 sample_num
```sql
SELECT COUNT(*) 
FROM orchestra 
WHERE Major_Record_Format IN ('CD', 'DVD');
```
-------------------------7860 sample_num
```sql
SELECT T2.Year_of_Founded 
FROM performance AS T1 
JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID 
GROUP BY T2.Year_of_Founded 
HAVING COUNT(T1.Performance_ID) > 1
```
-------------------------7861 sample_num
```sql
SELECT T2.Year_of_Founded 
FROM performance AS T1 
JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID 
GROUP BY T1.Orchestra_ID 
HAVING COUNT(T1.Performance_ID) > 1;
```
-------------------------7862 sample_num
```sql
SELECT COUNT(*) FROM Highschooler;
```
-------------------------7863 sample_num
```sql
SELECT COUNT(*) FROM Highschooler;
```
-------------------------7864 sample_num
```sql
SELECT name, grade FROM Highschooler;
```
-------------------------7865 sample_num
```sql
SELECT name, grade FROM Highschooler;
```
-------------------------7866 sample_num
```sql
SELECT DISTINCT grade FROM Highschooler;
```
-------------------------7867 sample_num
```sql
SELECT grade FROM Highschooler;
```
-------------------------7868 sample_num
```sql
SELECT grade FROM Highschooler WHERE name = 'Kyle';
```
-------------------------7869 sample_num
```sql
SELECT grade FROM Highschooler WHERE name = 'Kyle';
```
-------------------------7870 sample_num
```sql
SELECT name FROM Highschooler WHERE grade = 10;
```
-------------------------7871 sample_num
```sql
SELECT name FROM Highschooler WHERE grade = 10;
```
-------------------------7872 sample_num
```sql
SELECT ID FROM Highschooler WHERE name = 'Kyle';
```
-------------------------7873 sample_num
```sql
SELECT ID FROM Highschooler WHERE name = 'Kyle';
```
-------------------------7874 sample_num
```sql
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
```
-------------------------7875 sample_num
```sql
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
```
-------------------------7876 sample_num
```sql
SELECT grade, COUNT(*) AS num_highschoolers 
FROM Highschooler 
GROUP BY grade;
```
-------------------------7877 sample_num
```sql
SELECT grade, COUNT(*) AS num_students 
FROM Highschooler 
GROUP BY grade;
```
-------------------------7878 sample_num
```sql
SELECT grade, COUNT(*) as num_students 
FROM Highschooler 
GROUP BY grade 
ORDER BY num_students DESC 
LIMIT 1;
```
-------------------------7879 sample_num
```sql
SELECT grade 
FROM Highschooler 
GROUP BY grade 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------7880 sample_num
```sql
SELECT grade 
FROM Highschooler 
GROUP BY grade 
HAVING COUNT(ID) >= 4;
```
-------------------------7881 sample_num
```sql
SELECT grade 
FROM Highschooler 
GROUP BY grade 
HAVING COUNT(ID) >= 4;
```
-------------------------7882 sample_num
```sql
SELECT T1.student_id, COUNT(T2.friend_id) 
FROM network_1.Highschooler AS T1 
LEFT JOIN network_1.Friend AS T2 ON T1.ID = T2.student_id 
GROUP BY T1.student_id;
```
-------------------------7883 sample_num
```sql
SELECT T1.name, COUNT(T2.friend_id) AS NumberOfFriends 
FROM Highschooler T1 
LEFT JOIN Friend T2 ON T1.ID = T2.student_id 
GROUP BY T1.ID;
```
-------------------------7884 sample_num
```sql
SELECT H.name, COUNT(F.friend_id) as NumOfFriends
FROM Highschooler H
LEFT JOIN Friend F ON H.ID = F.student_id
GROUP BY H.name;
```
-------------------------7885 sample_num
```sql
SELECT H.name, COUNT(F.friend_id) as Num_of_Friends
FROM Highschooler H
LEFT JOIN Friend F ON H.ID = F.student_id
GROUP BY H.name;
```
-------------------------7886 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Friend F ON H.ID = F.student_id 
GROUP BY H.name 
ORDER BY COUNT(F.friend_id) DESC 
LIMIT 1;
```
-------------------------7887 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Friend F ON H.ID = F.student_id 
GROUP BY H.name 
ORDER BY COUNT(F.friend_id) DESC 
LIMIT 1;
```
-------------------------7888 sample_num
```sql
SELECT H.name
FROM Highschooler H
JOIN Friend F ON H.ID = F.student_id
GROUP BY H.name
HAVING COUNT(F.friend_id) >= 3;
```
-------------------------7889 sample_num
```sql
SELECT H.name
FROM Highschooler H
JOIN Friend F ON H.ID = F.student_id
GROUP BY H.name
HAVING COUNT(F.friend_id) >= 3;
```
-------------------------7890 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Friend F ON H.ID = F.friend_id 
WHERE F.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');
```
-------------------------7891 sample_num
```sql
SELECT H.name 
FROM Highschooler AS H 
JOIN Friend AS F ON H.ID = F.friend_id 
WHERE F.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
```
-------------------------7892 sample_num
```sql
SELECT COUNT(*) 
FROM Friend 
WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
```
-------------------------7893 sample_num
```sql
SELECT COUNT(*) 
FROM Friend 
WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');
```
-------------------------7894 sample_num
```sql
SELECT ID 
FROM Highschooler 
WHERE ID NOT IN (SELECT student_id FROM Friend)
```
-------------------------7895 sample_num
```sql
SELECT H.ID 
FROM Highschooler H 
LEFT JOIN Friend F ON H.ID = F.student_id 
WHERE F.student_id IS NULL;
```
-------------------------7896 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
LEFT JOIN Friend F ON H.ID = F.student_id 
WHERE F.student_id IS NULL;
```
-------------------------7897 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
LEFT JOIN Friend F ON H.ID = F.student_id 
WHERE F.student_id IS NULL;
``` 
Note: This query may not work if there are NULL values in the 'student_id' column of the 'Friend' table. To handle this case, you can use `IS NOT DISTINCT FROM NULL` instead of `IS NULL`.
```sql
SELECT H.name 
FROM Highschooler H 
LEFT JOIN Friend F ON H.ID = F.student_id 
WHERE F.student_id IS NOT DISTINCT FROM NULL;
```
-------------------------7898 sample_num
```sql
SELECT H.ID 
FROM Highschooler H 
WHERE EXISTS (
    SELECT 1 
    FROM Friend F 
    WHERE F.student_id = H.ID
) 
AND EXISTS (
    SELECT 1 
    FROM Likes L 
    WHERE L.student_id = H.ID
);
```
-------------------------7899 sample_num
```sql
SELECT student_id FROM Friend 
INTERSECT 
SELECT student_id FROM Likes;
```
-------------------------7900 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Friend F ON H.ID = F.student_id 
JOIN Likes L ON H.ID = L.student_id;
```
-------------------------7901 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
WHERE EXISTS (
    SELECT 1 
    FROM Friend F 
    WHERE F.student_id = H.ID
) 
AND EXISTS (
    SELECT 1 
    FROM Likes L 
    WHERE L.student_id = H.ID
);
```
-------------------------7902 sample_num
```sql
SELECT student_id, COUNT(*) as num_likes
FROM Likes
GROUP BY student_id;
```
-------------------------7903 sample_num
```sql
SELECT student_id, COUNT(*) as num_likes 
FROM Likes 
GROUP BY student_id;
```
-------------------------7904 sample_num
```sql
SELECT H.name, COUNT(L.liked_id) AS Num_Likes
FROM Highschooler H
JOIN Likes L ON H.ID = L.student_id
GROUP BY H.name;
```
-------------------------7905 sample_num
```sql
SELECT H.name, COUNT(L.liked_id) AS num_likes
FROM Highschooler H
JOIN Likes L ON H.ID = L.student_id
GROUP BY H.name;
```
-------------------------7906 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Likes L ON H.ID = L.student_id 
GROUP BY H.name 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------7907 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Likes L ON H.ID = L.student_id 
GROUP BY H.name 
ORDER BY COUNT(*) DESC 
LIMIT 1;
```
-------------------------7908 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Likes L ON H.ID = L.student_id 
GROUP BY H.name 
HAVING COUNT(L.liked_id) >= 2;
```
-------------------------7909 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Likes L ON H.ID = L.student_id 
GROUP BY H.name 
HAVING COUNT(L.liked_id) >= 2;
```
-------------------------7910 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Friend F ON H.ID = F.student_id 
GROUP BY H.ID, H.name 
HAVING COUNT(F.friend_id) >= 2 AND H.grade > 5;
```
-------------------------7911 sample_num
```sql
SELECT H.name 
FROM Highschooler H 
JOIN Friend F ON H.ID = F.student_id 
WHERE H.grade > 5 
GROUP BY H.ID, H.name 
HAVING COUNT(F.friend_id) >= 2;
```
-------------------------7912 sample_num
```sql
SELECT COUNT(*) 
FROM Likes 
WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
```
-------------------------7913 sample_num
```sql
SELECT COUNT(*) 
FROM Likes 
JOIN Highschooler ON Likes.student_id = Highschooler.ID 
WHERE Highschooler.name = 'Kyle';
```
-------------------------7914 sample_num
```sql
SELECT AVG(T1.grade) 
FROM Highschooler T1 
JOIN Friend T2 
ON T1.ID = T2.student_id;
```
-------------------------7915 sample_num
```sql
SELECT AVG(H.grade)
FROM Highschooler H
JOIN Friend F ON H.ID = F.student_id
```
-------------------------7916 sample_num
```sql
SELECT MIN(grade) 
FROM Highschooler 
WHERE ID NOT IN (SELECT student_id FROM Friend)
```
-------------------------7917 sample_num
```sql
SELECT MIN(grade) 
FROM Highschooler 
WHERE ID NOT IN (SELECT student_id FROM Friend)
```
-------------------------7918 sample_num
```sql
SELECT 
    state
FROM 
    Owners
INTERSECT
SELECT 
    state
FROM 
    Professionals
```
-------------------------7919 sample_num
```sql
SELECT DISTINCT state 
FROM Owners 
WHERE state IN (SELECT state FROM Professionals)
INTERSECT 
SELECT DISTINCT state 
FROM Professionals 
WHERE state IN (SELECT state FROM Owners);
```
Or
```sql
SELECT state 
FROM (
    SELECT state FROM Owners
    UNION
    SELECT state FROM Professionals
) AS combined
GROUP BY state 
HAVING COUNT(*) > 1;
```
-------------------------7920 sample_num
```sql
SELECT AVG(age) 
FROM Dogs 
WHERE dog_id IN (SELECT dog_id FROM Treatments);
```
-------------------------7921 sample_num
```sql
SELECT AVG(age) 
FROM Dogs 
WHERE dog_id IN (SELECT dog_id FROM Treatments);
```
-------------------------7922 sample_num
```sql
SELECT p.professional_id, p.last_name, p.cell_number
FROM Professionals p
WHERE p.state = 'Indiana'
OR (
    SELECT COUNT(*)
    FROM Treatments t
    WHERE t.professional_id = p.professional_id
) > 2;
```
-------------------------7923 sample_num
```sql
SELECT p.professional_id, p.last_name, p.cell_number
FROM Professionals p
WHERE p.state = 'Indiana'
OR (
    SELECT COUNT(*)
    FROM Treatments t
    WHERE t.professional_id = p.professional_id
) > 2;
```
-------------------------7924 sample_num
```sql
SELECT D.name
FROM Dogs D
LEFT JOIN Treatments T ON D.dog_id = T.dog_id
GROUP BY D.name
HAVING SUM(T.cost_of_treatment) <= 1000 OR T.dog_id IS NULL;
```
-------------------------7925 sample_num
```sql
SELECT D.name 
FROM Dogs D 
LEFT JOIN Treatments T ON D.dog_id = T.dog_id 
LEFT JOIN Charges C ON C.charge_id = T.cost_of_treatment 
WHERE D.owner_id IN (
    SELECT O.owner_id 
    FROM Owners O 
    WHERE O.owner_id NOT IN (
        SELECT T.dog_id 
        FROM Treatments T 
        JOIN Charges C ON T.cost_of_treatment = C.charge_id 
        GROUP BY T.dog_id 
        HAVING SUM(C.charge_amount) > 1000
    )
)
GROUP BY D.name;
```
```
-------------------------7926 sample_num
```sql
SELECT DISTINCT first_name 
FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) 
EXCEPT 
SELECT DISTINCT name FROM Dogs WHERE gender IS NULL OR gender = ''
``` 

Note: The condition `gender IS NULL OR gender = ''` is added to ensure that dog names are not considered if they have no gender specified, as human first names could also be used for dogs without a specified gender. However, if you want to consider all dog names regardless of gender, you can remove this condition. 

Alternatively, if you want to exclude dog names explicitly and not rely on the gender field:
```sql
SELECT DISTINCT first_name 
FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) 
EXCEPT 
(SELECT DISTINCT T1.name 
FROM Dogs AS T1 
LEFT JOIN (SELECT DISTINCT name FROM Dogs WHERE gender IS NOT NULL AND gender != '') AS T2 ON T1.name = T2.name 
WHERE T2.name IS NULL)
```
-------------------------7927 sample_num
```sql
SELECT DISTINCT first_name 
FROM (SELECT first_name FROM Professionals 
      UNION 
      SELECT first_name FROM Owners) 
WHERE first_name NOT IN (SELECT name FROM Dogs);
```
-------------------------7928 sample_num
```sql
SELECT p.professional_id, p.role_code, p.email_address
FROM Professionals p
LEFT JOIN Treatments t ON p.professional_id = t.professional_id
WHERE t.treatment_id IS NULL;
```
-------------------------7929 sample_num
```sql
SELECT p.professional_id, p.role_code, p.email_address
FROM Professionals p
LEFT JOIN Treatments t ON p.professional_id = t.professional_id
WHERE t.treatment_id IS NULL;
```
-------------------------7930 sample_num
```sql
SELECT O.owner_id, O.first_name, O.last_name
FROM Owners O
JOIN Dogs D ON O.owner_id = D.owner_id
GROUP BY O.owner_id, O.first_name, O.last_name
ORDER BY COUNT(D.dog_id) DESC
LIMIT 1;
```
-------------------------7931 sample_num
```sql
SELECT O.owner_id, O.first_name, O.last_name
FROM Owners O
JOIN Dogs D ON O.owner_id = D.owner_id
GROUP BY O.owner_id, O.first_name, O.last_name
ORDER BY COUNT(D.dog_id) DESC
LIMIT 1;
```
-------------------------7932 sample_num
```sql
SELECT p.professional_id, p.role_code, p.first_name
FROM Professionals p
JOIN Treatments t ON p.professional_id = t.professional_id
GROUP BY p.professional_id, p.role_code, p.first_name
HAVING COUNT(t.treatment_id) >= 2;
```
-------------------------7933 sample_num
```sql
SELECT p.professional_id, p.role_code, p.first_name 
FROM Professionals p
JOIN Treatments t ON p.professional_id = t.professional_id
GROUP BY p.professional_id, p.role_code, p.first_name
HAVING COUNT(t.treatment_id) >= 2;
```
-------------------------7934 sample_num
```sql
SELECT b.breed_name 
FROM Breeds b
JOIN Dogs d ON b.breed_code = d.breed_code
GROUP BY b.breed_name
ORDER BY COUNT(d.dog_id) DESC
LIMIT 1;
```
-------------------------7935 sample_num
```sql
SELECT B.breed_name
FROM Breeds B
JOIN Dogs D ON B.breed_code = D.breed_code
GROUP BY B.breed_name
ORDER BY COUNT(D.dog_id) DESC
LIMIT 1;
```
-------------------------7936 sample_num
```sql
SELECT O.owner_id, O.last_name
FROM Owners O
JOIN Dogs D ON O.owner_id = D.owner_id
JOIN Treatments T ON D.dog_id = T.dog_id
GROUP BY O.owner_id, O.last_name
ORDER BY COUNT(T.treatment_id) DESC
LIMIT 1;
```
-------------------------7937 sample_num
```sql
SELECT O.owner_id, O.last_name
FROM Owners O
JOIN Dogs D ON O.owner_id = D.owner_id
JOIN Treatments T ON D.dog_id = T.dog_id
GROUP BY O.owner_id, O.last_name
ORDER BY SUM(T.cost_of_treatment) DESC
LIMIT 1;
```
-------------------------7938 sample_num
```sql
SELECT T1.treatment_type_description 
FROM Treatment_Types AS T1 
JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code 
GROUP BY T1.treatment_type_description 
ORDER BY SUM(T2.cost_of_treatment) 
LIMIT 1;
```
-------------------------7939 sample_num
```sql
SELECT T1.treatment_type_description 
FROM Treatment_Types T1 
JOIN Treatments T2 ON T1.treatment_type_code = T2.treatment_type_code 
GROUP BY T1.treatment_type_description 
ORDER BY SUM(T2.cost_of_treatment) 
LIMIT 1;
```
-------------------------7940 sample_num
```sql
SELECT O.owner_id, O.zip_code
FROM Owners O
JOIN Dogs D ON O.owner_id = D.owner_id
JOIN Treatments T ON D.dog_id = T.dog_id
GROUP BY O.owner_id, O.zip_code
ORDER BY SUM(T.cost_of_treatment) DESC
LIMIT 1;
```
-------------------------7941 sample_num
```sql
SELECT O.owner_id, O.zip_code
FROM Owners O
WHERE O.owner_id = (
    SELECT D.owner_id
    FROM Dogs D
    JOIN Treatments T ON D.dog_id = T.dog_id
    JOIN Charges C ON T.treatment_type_code = C.charge_id
    GROUP BY D.owner_id
    ORDER BY SUM(C.charge_amount) DESC
    LIMIT 1
);
```
-------------------------7942 sample_num
```sql
SELECT p.professional_id, p.cell_number
FROM Professionals p
JOIN Treatments t ON p.professional_id = t.professional_id
GROUP BY p.professional_id, p.cell_number
HAVING COUNT(DISTINCT t.treatment_type_code) >= 2;
```
-------------------------7943 sample_num
```sql
SELECT p.professional_id, p.cell_number 
FROM Professionals p
JOIN Treatments t ON p.professional_id = t.professional_id
GROUP BY p.professional_id, p.cell_number
HAVING COUNT(DISTINCT t.treatment_type_code) >= 2;
```
-------------------------7944 sample_num
```sql
SELECT P.first_name, P.last_name 
FROM Professionals P 
JOIN Treatments T ON P.professional_id = T.professional_id 
WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)
```
-------------------------7945 sample_num
```sql
SELECT P.first_name, P.last_name 
FROM Professionals P
JOIN Treatments T ON P.professional_id = T.professional_id 
WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
```
-------------------------7946 sample_num
```sql
SELECT T.date_of_treatment, P.first_name 
FROM Treatments T 
JOIN Professionals P ON T.professional_id = P.professional_id;
```
-------------------------7947 sample_num
```sql
SELECT T.date_of_treatment, P.first_name 
FROM Treatments AS T 
JOIN Professionals AS P ON T.professional_id = P.professional_id;
```
-------------------------7948 sample_num
```sql
SELECT TREATMENTS.cost_of_treatment, TREATMENT_TYPES.treatment_type_description 
FROM Treatments 
JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
```
-------------------------7949 sample_num
```sql
SELECT TREATMENTS.cost_of_treatment, TREATMENT_TYPES.treatment_type_description 
FROM Treatments 
JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
```
-------------------------7950 sample_num
```sql
SELECT Owners.first_name, Owners.last_name, Sizes.size_description
FROM Owners
JOIN Dogs ON Owners.owner_id = Dogs.owner_id
JOIN Sizes ON Dogs.size_code = Sizes.size_code;
```
-------------------------7951 sample_num
```sql
SELECT O.first_name, O.last_name, S.size_description 
FROM Owners O 
JOIN Dogs D ON O.owner_id = D.owner_id 
JOIN Sizes S ON D.size_code = S.size_code;
```
-------------------------7952 sample_num
```sql
SELECT Owners.first_name, Dogs.name 
FROM Owners 
JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
```
-------------------------7953 sample_num
```sql
SELECT Owners.first_name, Dogs.name 
FROM Owners 
JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
```
-------------------------7954 sample_num
```sql
SELECT D.name, T.date_of_treatment 
FROM Dogs D
JOIN Treatments T ON D.dog_id = T.dog_id
WHERE D.breed_code = (
    SELECT B.breed_code 
    FROM Breeds B
    JOIN Dogs DB ON B.breed_code = DB.breed_code
    GROUP BY B.breed_code 
    HAVING COUNT(DB.dog_id) = (
        SELECT MIN(DOUBT_count)
        FROM (
            SELECT COUNT(dog_id) AS DOUBT_count
            FROM Dogs
            GROUP BY breed_code
        ) AS DCOUNT
    )
);
```
-------------------------7955 sample_num
```sql
SELECT D.name, T.date_of_treatment 
FROM Dogs D
JOIN Treatments T ON D.dog_id = T.dog_id
WHERE D.breed_code IN (
    SELECT B.breed_code 
    FROM Breeds B
    GROUP BY B.breed_code
    HAVING COUNT(B.breed_code) = (
        SELECT MIN(breed_count)
        FROM (
            SELECT COUNT(breed_code) AS breed_count
            FROM Dogs
            GROUP BY breed_code
        ) AS BC
    )
);
```
-------------------------7956 sample_num
```sql
SELECT Owners.first_name, Dogs.name 
FROM Owners 
JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
WHERE Owners.state = 'Virginia';
```
-------------------------7957 sample_num
```sql
SELECT Owners.first_name, Dogs.name 
FROM Owners 
JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
WHERE Owners.state = 'Virginia';
```
-------------------------7958 sample_num
```sql
SELECT d.date_arrived, d.date_departed 
FROM Dogs d
JOIN Treatments t ON d.dog_id = t.dog_id
WHERE d.date_departed IS NOT NULL;
```
-------------------------7959 sample_num
```sql
SELECT d.date_arrived, d.date_departed 
FROM Dogs d
JOIN Treatments t ON d.dog_id = t.dog_id;
```
-------------------------7960 sample_num
```sql
SELECT O.last_name 
FROM Owners O
JOIN Dogs D ON O.owner_id = D.owner_id 
WHERE D.date_of_birth = (SELECT MIN(date_of_birth) FROM Dogs);
```
-------------------------7961 sample_num
```sql
SELECT Owners.last_name 
FROM Owners 
JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
WHERE Dogs.date_of_birth = (SELECT MAX(date_of_birth) FROM Dogs);
```
Note: This query will actually return the owner of the oldest dog, since date_of_birth is being maximized. To find the owner of the youngest dog, you should order the dogs by date_of_birth in ascending order and limit the result to 1, like this:
```sql
SELECT Owners.last_name 
FROM Owners 
JOIN Dogs ON Owners.owner_id = Dogs.owner_id 
ORDER BY Dogs.date_of_birth ASC
LIMIT 1;
```
-------------------------7962 sample_num
```sql
SELECT email_address 
FROM Professionals 
WHERE state IN ('HI', 'WI');
```
-------------------------7963 sample_num
```sql
SELECT email_address 
FROM Professionals 
WHERE state IN ('Hawaii', 'Wisconsin');
```
-------------------------7964 sample_num
```sql
SELECT date_arrived, date_departed FROM Dogs;
```
-------------------------7965 sample_num
```sql
SELECT date_arrived, date_departed FROM Dogs;
```
-------------------------7966 sample_num
```sql
SELECT COUNT(DISTINCT d.dog_id) 
FROM Dogs d 
JOIN Treatments t ON d.dog_id = t.dog_id;
```
-------------------------7967 sample_num
```sql
SELECT COUNT(DISTINCT d.dog_id) 
FROM Dogs d 
JOIN Treatments t ON d.dog_id = t.dog_id;
```
-------------------------7968 sample_num
```sql
SELECT COUNT(DISTINCT professional_id) 
FROM Treatments;
```
-------------------------7969 sample_num
```sql
SELECT COUNT(DISTINCT professional_id) 
FROM Treatments;
```
-------------------------7970 sample_num
```sql
SELECT role_code, street, city, state 
FROM Professionals 
WHERE city LIKE '%West%';
```
-------------------------7971 sample_num
```sql
SELECT role_code, street, city, state 
FROM Professionals 
WHERE city LIKE '%West%';
```
-------------------------7972 sample_num
```sql
SELECT first_name, last_name, email_address 
FROM Owners 
WHERE state LIKE '%North%';
```
-------------------------7973 sample_num
```sql
SELECT first_name, last_name, email_address 
FROM Owners 
WHERE state LIKE '%North%';
```
-------------------------7974 sample_num
```sql
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
```
-------------------------7975 sample_num
```sql
SELECT COUNT(*) 
FROM Dogs 
WHERE age < (SELECT AVG(age) FROM Dogs);
```
-------------------------7976 sample_num
```sql
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments)
```
-------------------------7977 sample_num
```sql
SELECT cost_of_treatment FROM Treatments WHERE date_of_treatment = (SELECT MAX(date_of_treatment) FROM Treatments);
```
-------------------------7978 sample_num
```sql
SELECT COUNT(*) 
FROM Dogs 
WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
```
-------------------------7979 sample_num
```sql
SELECT COUNT(*) 
FROM Dogs 
WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
```
-------------------------7980 sample_num
```sql
SELECT COUNT(*) 
FROM Owners 
WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL);
```
-------------------------7981 sample_num
```sql
SELECT COUNT(*) 
FROM Owners 
WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE (date_departed IS NULL OR date_adopted IS NULL))
```
```
-------------------------7982 sample_num
```sql
SELECT COUNT(*) 
FROM Professionals 
WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
```
```
-------------------------7983 sample_num
```sql
SELECT COUNT(*) 
FROM Professionals 
WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
;
```
-------------------------7984 sample_num
```sql
SELECT name, age, weight 
FROM Dogs 
WHERE abandoned_yn = 1;
```
-------------------------7985 sample_num
```sql
SELECT name, age, weight 
FROM Dogs 
WHERE abandoned_yn = 1;
```
-------------------------7986 sample_num
```sql
SELECT AVG(age) FROM Dogs;
```
-------------------------7987 sample_num
```sql
SELECT AVG(age) FROM Dogs;
```
-------------------------7988 sample_num
```sql
SELECT MAX(age) FROM Dogs;
```
-------------------------7989 sample_num
```sql
SELECT MAX(age) FROM Dogs;
```
-------------------------7990 sample_num
```sql
SELECT charge_type, charge_amount 
FROM Charges;
```
-------------------------7991 sample_num
```sql
SELECT charge_type, charge_amount 
FROM Charges;
```
-------------------------7992 sample_num
```sql
SELECT MAX(charge_amount) FROM Charges;
```
-------------------------7993 sample_num
```sql
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1;
```
-------------------------7994 sample_num
```sql
SELECT email_address, cell_number, home_phone FROM Professionals;
```
-------------------------7995 sample_num
```sql
SELECT email_address, cell_number, home_phone FROM Professionals;
```
-------------------------7996 sample_num
```sql
SELECT Breeds.breed_name, Sizes.size_description 
FROM Breeds, Sizes;
```
-------------------------7997 sample_num
```sql
SELECT DISTINCT B.breed_name, S.size_description 
FROM Breeds B
JOIN Dogs D ON B.breed_code = D.breed_code
JOIN Sizes S ON D.size_code = S.size_code;
```
-------------------------7998 sample_num
```sql
SELECT P.first_name, TT.treatment_type_description
FROM Professionals P
JOIN Treatments T ON P.professional_id = T.professional_id
JOIN Treatment_Types TT ON T.treatment_type_code = TT.treatment_type_code;
```
-------------------------7999 sample_num
```sql
SELECT P.first_name, TT.treatment_type_description
FROM Professionals P
JOIN Treatments T ON P.professional_id = T.professional_id
JOIN Treatment_Types TT ON T.treatment_type_code = TT.treatment_type_code;
```
-------------------------8000 sample_num
```sql
SELECT COUNT(*) FROM singer;
```
-------------------------8001 sample_num
```sql
SELECT COUNT(*) FROM singer;
```
-------------------------8002 sample_num
```sql
SELECT Name 
FROM singer 
ORDER BY Net_Worth_Millions ASC;
```
-------------------------8003 sample_num
```sql
SELECT Name 
FROM singer 
ORDER BY Net_Worth_Millions ASC;
```
-------------------------8004 sample_num
```sql
SELECT Birth_Year, Citizenship FROM singer;
```
-------------------------8005 sample_num
```sql
SELECT Birth_Year, Citizenship FROM singer;
```
-------------------------8006 sample_num
```sql
SELECT Name FROM singer WHERE Citizenship <> 'France';
```
-------------------------8007 sample_num
```sql
SELECT Name FROM singer WHERE Citizenship <> 'French';
```
-------------------------8008 sample_num
```sql
SELECT Name 
FROM singer 
WHERE Birth_Year IN (1948, 1949);
```
-------------------------8009 sample_num
```sql
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
```
-------------------------8010 sample_num
```sql
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
```
-------------------------8011 sample_num
```sql
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
```
-------------------------8012 sample_num
```sql
SELECT Citizenship, COUNT(*) 
FROM singer 
GROUP BY Citizenship;
```
-------------------------8013 sample_num
```sql
SELECT Citizenship, COUNT(*) AS NumberOfSingers
FROM singer
GROUP BY Citizenship;
```
-------------------------8014 sample_num
```sql
SELECT Citizenship, COUNT(*) AS Count 
FROM singer 
GROUP BY Citizenship 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------8015 sample_num
```sql
SELECT Citizenship, COUNT(*) AS Count 
FROM singer 
GROUP BY Citizenship 
ORDER BY Count DESC 
LIMIT 1;
```
-------------------------8016 sample_num
```sql
SELECT Citizenship, MAX(Net_Worth_Millions) 
FROM singer 
GROUP BY Citizenship;
```
-------------------------8017 sample_num
```sql
SELECT Citizenship, MAX(Net_Worth_Millions) 
FROM singer 
GROUP BY Citizenship;
```
-------------------------8018 sample_num
```sql
SELECT song.Title, singer.Name 
FROM song 
JOIN singer ON song.Singer_ID = singer.Singer_ID;
```
-------------------------8019 sample_num
```sql
SELECT song.Title, singer.Name 
FROM song 
JOIN singer ON song.Singer_ID = singer.Singer_ID;
```
-------------------------8020 sample_num
```sql
SELECT DISTINCT s.Name 
FROM singer s
JOIN song sg ON s.Singer_ID = sg.Singer_ID
WHERE sg.Sales > 300000;
```
-------------------------8021 sample_num
```sql
SELECT DISTINCT s.Name 
FROM singer s
JOIN song sg ON s.Singer_ID = sg.Singer_ID
WHERE sg.Sales > 300000;
```
-------------------------8022 sample_num
```sql
SELECT s.Name 
FROM singer s
JOIN song sg ON s.Singer_ID = sg.Singer_ID
GROUP BY s.Singer_ID, s.Name
HAVING COUNT(sg.Song_ID) > 1;
```
-------------------------8023 sample_num
```sql
SELECT s.Name
FROM singer s
JOIN song sg ON s.Singer_ID = sg.Singer_ID
GROUP BY s.Singer_ID, s.Name
HAVING COUNT(sg.Song_ID) > 1;
```
-------------------------8024 sample_num
```sql
SELECT s.Name, SUM(so.Sales) 
FROM singer s
JOIN song so ON s.Singer_ID = so.Singer_ID
GROUP BY s.Name;
```
-------------------------8025 sample_num
```sql
SELECT s.Name, SUM(so.Sales) 
FROM singer s 
JOIN song so ON s.Singer_ID = so.Singer_ID 
GROUP BY s.Name;
```
-------------------------8026 sample_num
```sql
SELECT Name 
FROM singer 
WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)
```
-------------------------8027 sample_num
```sql
SELECT Name 
FROM singer 
WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)
```
-------------------------8028 sample_num
```sql
SELECT 
    Citizenship 
FROM 
    singer 
WHERE 
    Birth_Year < 1945 
INTERSECT 
SELECT 
    Citizenship 
FROM 
    singer 
WHERE 
    Birth_Year > 1955;
```
-------------------------8029 sample_num
```sql
SELECT 
    Citizenship 
FROM 
    singer 
WHERE 
    Birth_Year < 1945 
INTERSECT 
SELECT 
    Citizenship 
FROM 
    singer 
WHERE 
    Birth_Year > 1955;
```
-------------------------8030 sample_num
```sql
SELECT COUNT(*) FROM Other_Available_Features;
```
-------------------------8031 sample_num
```sql
SELECT feature_type_name 
FROM Ref_Feature_Types 
WHERE feature_type_code = (SELECT feature_type_code FROM Other_Available_Features WHERE feature_name = 'AirCon');
```
-------------------------8032 sample_num
```sql
SELECT Ref_Property_Types.property_type_description 
FROM Properties 
INNER JOIN Ref_Property_Types 
ON Properties.property_type_code = Ref_Property_Types.property_type_code;
```
-------------------------8033 sample_num
```sql
SELECT p.property_name 
FROM Properties p
JOIN Ref_Property_Types r ON p.property_type_code = r.property_type_code 
WHERE (r.property_type_description = 'House' OR r.property_type_description = 'Apartment') AND p.room_count > 1;
```
